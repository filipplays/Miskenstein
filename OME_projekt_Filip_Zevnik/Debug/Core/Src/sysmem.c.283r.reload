
;; Function _sbrk (_sbrk, funcdef_no=0, decl_uid=5911, cgraph_uid=1, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 0 in insn 33:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 51:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 59: point = 0, n_alt = -1
   Insn 58: point = 0, n_alt = -2
  BB 5
   Insn 89: point = 2, n_alt = -1
   Insn 5: point = 2, n_alt = 1
   Insn 41: point = 3, n_alt = 7
   Insn 40: point = 4, n_alt = 1
   Insn 88: point = 5, n_alt = -2
   Insn 38: point = 6, n_alt = -1
  BB 6
   Insn 51: point = 6, n_alt = 7
  BB 4
   Insn 35: point = 8, n_alt = -1
   Insn 34: point = 8, n_alt = 1
   Insn 33: point = 9, n_alt = 0
  BB 3
   Insn 4: point = 12, n_alt = -2
   Insn 28: point = 14, n_alt = 7
   Insn 27: point = 14, n_alt = 5
  BB 2
   Insn 23: point = 16, n_alt = 0
   Insn 16: point = 16, n_alt = 0
   Insn 2: point = 18, n_alt = -2
   Insn 87: point = 20, n_alt = -2
   Insn 21: point = 21, n_alt = 5
   Insn 15: point = 22, n_alt = 5
   Insn 14: point = 23, n_alt = 5
   Insn 20: point = 24, n_alt = 5
 r116: [6..9]
 r119: [8..16]
 r120: [16..21] [6..12] [0..2]
 r121: [10..18]
 r122: [17..23]
 r123: [17..22]
 r126: [13..14]
 r127: [3..4]
 r130: [6..24]
 r131: [19..20]
 r132: [3..5]
Compressing live ranges: from 25 to 15 - 60%
Ranges after the compression:
 r116: [4..5]
 r119: [4..10]
 r120: [10..14] [4..7] [0..1]
 r121: [6..12]
 r122: [11..14]
 r123: [11..14]
 r126: [8..9]
 r127: [2..3]
 r130: [4..14]
 r131: [13..14]
 r132: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=8)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 33
changing reg in insn 51
changing reg in insn 34
changing reg in insn 16
changing reg in insn 34
changing reg in insn 17
changing reg in insn 4
changing reg in insn 21
changing reg in insn 5
changing reg in insn 23
changing reg in insn 58
changing reg in insn 2
changing reg in insn 14
changing reg in insn 16
changing reg in insn 15
changing reg in insn 16
changing reg in insn 27
changing reg in insn 4
changing reg in insn 28
changing reg in insn 40
changing reg in insn 41
changing reg in insn 20
changing reg in insn 28
changing reg in insn 51
changing reg in insn 21
changing reg in insn 87
changing reg in insn 2
changing reg in insn 88
changing reg in insn 41
deleting insn with uid = 87.
deleting insn with uid = 2.
deleting insn with uid = 4.
deleting insn with uid = 88.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


_sbrk

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,6u} r1={4d,3u} r2={5d,4u} r3={4d,2u} r4={1d,3u} r12={2d} r13={1d,8u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,1u} r101={1d} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 142{115d,27u,0e} in 37{36 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 22 2 NOTE_INSN_FUNCTION_BEG)
(note 22 3 8 2 NOTE_INSN_DELETED)
(debug_insn 8 22 9 2 (debug_marker) "../Core/Src/sysmem.c":55:3 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../Core/Src/sysmem.c":56:3 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/sysmem.c":57:3 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../Core/Src/sysmem.c":58:3 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:SI stack_limit (minus:SI (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>))) "../Core/Src/sysmem.c":58:18 -1
     (nil))
(debug_insn 13 12 20 2 (debug_marker) "../Core/Src/sysmem.c":59:3 -1
     (nil))
(insn 20 13 14 2 (set (reg/f:SI 4 r4 [130])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../Core/Src/sysmem.c":63:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 14 20 15 2 (set (reg/f:SI 3 r3 [122])
        (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)) "../Core/Src/sysmem.c":58:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
        (nil)))
(insn 15 14 21 2 (set (reg/f:SI 1 r1 [123])
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>)) "../Core/Src/sysmem.c":58:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>)
        (nil)))
(insn 21 15 16 2 (set (reg/f:SI 2 r2 [orig:120 <retval> ] [120])
        (mem/f/c:SI (reg/f:SI 4 r4 [130]) [1 __sbrk_heap_end+0 S4 A32])) "../Core/Src/sysmem.c":63:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [1 __sbrk_heap_end+0 S4 A32])
        (nil)))
(insn 16 21 17 2 (set (reg/v/f:SI 1 r1 [orig:119 max_heap ] [119])
        (minus:SI (reg/f:SI 3 r3 [122])
            (reg/f:SI 1 r1 [123]))) "../Core/Src/sysmem.c":58:18 45 {*arm_subsi3_insn}
     (expr_list:REG_EQUIV (minus:SI (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
            (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>))
        (nil)))
(debug_insn 17 16 18 2 (var_location:SI max_heap (reg/v/f:SI 1 r1 [orig:119 max_heap ] [119])) "../Core/Src/sysmem.c":59:18 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../Core/Src/sysmem.c":60:3 -1
     (nil))
(debug_insn 19 18 23 2 (debug_marker) "../Core/Src/sysmem.c":63:3 -1
     (nil))
(jump_insn 23 19 24 2 (parallel [
            (set (pc)
                (if_then_else (ne (reg/f:SI 2 r2 [orig:120 <retval> ] [120])
                        (const_int 0 [0]))
                    (label_ref 29)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../Core/Src/sysmem.c":63:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 751619284 (nil))
 -> 29)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 27 3 (debug_marker) "../Core/Src/sysmem.c":65:5 -1
     (nil))
(insn 27 25 28 3 (set (reg/f:SI 2 r2 [126])
        (symbol_ref:SI ("_end") [flags 0xc0]  <var_decl 0000000002864990 _end>)) "../Core/Src/sysmem.c":65:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_end") [flags 0xc0]  <var_decl 0000000002864990 _end>)
        (nil)))
(insn 28 27 29 3 (set (mem/f/c:SI (reg/f:SI 4 r4 [130]) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 2 r2 [126])) "../Core/Src/sysmem.c":65:21 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 29 28 30 4 2 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (debug_marker) "../Core/Src/sysmem.c":69:3 -1
     (nil))
(debug_insn 32 31 33 4 (var_location:SI D#1 (mem/f/c:SI (symbol_ref:SI ("__sbrk_heap_end") [flags 0x82]  <var_decl 0000000002864900 __sbrk_heap_end>) [1 __sbrk_heap_end+0 S4 A32])) "../Core/Src/sysmem.c":69:23 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 0 r0 [orig:116 _6 ] [116])
        (plus:SI (reg/v:SI 0 r0 [orig:121 incr ] [121])
            (reg/f:SI 2 r2 [orig:120 <retval> ] [120]))) "../Core/Src/sysmem.c":69:23 7 {*arm_addsi3}
     (nil))
(insn 34 33 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:116 _6 ] [116])
            (reg/v/f:SI 1 r1 [orig:119 max_heap ] [119]))) "../Core/Src/sysmem.c":69:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "../Core/Src/sysmem.c":69:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 45)
(note 36 35 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 39 36 37 5 NOTE_INSN_DELETED)
(debug_insn 37 39 38 5 (debug_marker) "../Core/Src/sysmem.c":71:5 -1
     (nil))
(call_insn 38 37 40 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005e25700 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/sysmem.c":71:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005e25700 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 40 38 41 5 (set (reg:SI 3 r3 [127])
        (const_int 12 [0xc])) "../Core/Src/sysmem.c":71:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 12 [0xc])
        (nil)))
(insn 41 40 42 5 (set (mem:SI (reg:SI 0 r0 [132]) [2 *_7+0 S4 A32])
        (reg:SI 3 r3 [127])) "../Core/Src/sysmem.c":71:11 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 42 41 5 5 (debug_marker) "../Core/Src/sysmem.c":72:5 -1
     (nil))
(insn 5 42 89 5 (set (reg/f:SI 2 r2 [orig:120 <retval> ] [120])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/sysmem.c":72:12 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 89 5 90 5 (set (pc)
        (label_ref 57)) "../Core/Src/sysmem.c":72:12 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 90 89 45)
(code_label 45 90 46 6 3 (nil) [1 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 47 46 48 6 (debug_marker) "../Core/Src/sysmem.c":75:3 -1
     (nil))
(debug_insn 48 47 49 6 (var_location:SI prev_heap_end (debug_expr:SI D#1)) "../Core/Src/sysmem.c":75:17 -1
     (nil))
(debug_insn 49 48 51 6 (debug_marker) "../Core/Src/sysmem.c":76:3 -1
     (nil))
(insn 51 49 52 6 (set (mem/f/c:SI (reg/f:SI 4 r4 [130]) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 0 r0 [orig:116 _6 ] [116])) "../Core/Src/sysmem.c":76:19 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 52 51 57 6 (debug_marker) "../Core/Src/sysmem.c":78:3 -1
     (nil))
(code_label 57 52 60 7 1 (nil) [1 uses])
(note 60 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 60 59 7 (set (reg/i:SI 0 r0)
        (reg/f:SI 2 r2 [orig:120 <retval> ] [120])) "../Core/Src/sysmem.c":79:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 91 7 (use (reg/i:SI 0 r0)) "../Core/Src/sysmem.c":79:1 -1
     (nil))
(note 91 59 92 NOTE_INSN_DELETED)
(note 92 91 0 NOTE_INSN_DELETED)
