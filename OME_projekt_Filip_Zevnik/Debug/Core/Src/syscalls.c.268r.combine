
;; Function initialise_monitor_handles (initialise_monitor_handles, funcdef_no=25, decl_uid=7480, cgraph_uid=26, symbol_order=27)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


initialise_monitor_handles

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 32{25d,7u,0e} in 1{1 regular + 0 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 0 2 (debug_marker) "../Core/Src/syscalls.c":46:1 -1
     (nil))

;; Function _getpid (_getpid, funcdef_no=26, decl_uid=7483, cgraph_uid=27, symbol_order=28)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     5: debug begin stmt marker
insn_cost 4 for     6: r113:SI=0x1
insn_cost 2 for    10: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0x1
insn_cost 8 for    11: use r0:SI
allowing combination of insns 6 and 10
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 6.
modifying insn i3    10: r0:SI=0x1
      REG_EQUAL 0x1
deferring rescan insn with uid = 10.
starting the processing of deferred insns
rescanning insn with uid = 10.
ending the processing of deferred insns


_getpid

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../Core/Src/syscalls.c":50:2 -1
     (nil))
(note 6 5 10 2 NOTE_INSN_DELETED)
(insn 10 6 11 2 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":51:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 11 10 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":51:1 -1
     (nil))

;; Function _kill (_kill, funcdef_no=27, decl_uid=7487, cgraph_uid=28, symbol_order=29)

scanning new insn with uid = 20.
rescanning insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_kill

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r117={1d,1u} r119={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 117 119
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 117
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 20 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     7: debug begin stmt marker
insn_cost 4 for     8: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    20: r119:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for     9: r113:SI=r119:SI
      REG_DEAD r119:SI
insn_cost 4 for    10: r117:SI=0x16
insn_cost 4 for    11: [r113:SI]=r117:SI
      REG_DEAD r117:SI
      REG_DEAD r113:SI
insn_cost 8 for    12: debug begin stmt marker
insn_cost 4 for    13: r114:SI=0xffffffffffffffff
insn_cost 2 for    17: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    18: use r0:SI
allowing combination of insns 9 and 11
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 9.
modifying insn i3    11: [r119:SI]=r117:SI
      REG_DEAD r119:SI
      REG_DEAD r117:SI
deferring rescan insn with uid = 11.
allowing combination of insns 13 and 17
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 13.
modifying insn i3    17: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 17.
starting the processing of deferred insns
rescanning insn with uid = 11.
rescanning insn with uid = 17.
ending the processing of deferred insns


_kill

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r117={1d,1u} r119={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "../Core/Src/syscalls.c":55:2 -1
     (nil))
(call_insn 8 7 20 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":55:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 20 8 9 2 (set (reg:SI 119)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":55:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 9 20 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:SI 117)
        (const_int 22 [0x16])) "../Core/Src/syscalls.c":55:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg:SI 119) [1 *_1+0 S4 A32])
        (reg:SI 117)) "../Core/Src/syscalls.c":55:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg:SI 117)
            (nil))))
(debug_insn 12 11 13 2 (debug_marker) "../Core/Src/syscalls.c":56:2 -1
     (nil))
(note 13 12 17 2 NOTE_INSN_DELETED)
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":57:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":57:1 -1
     (nil))

;; Function _exit (_exit, funcdef_no=28, decl_uid=1156, cgraph_uid=29, symbol_order=30) (executed once)

scanning new insn with uid = 28.
rescanning insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)


_exit

Dataflow summary:
def_info->table_size = 108, use_info->table_size = 15
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r7={1d,3u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,3u} r103={1d,2u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 125{109d,16u,0e} in 16{15 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(7){ }d11(13){ }d13(14){ }d16(16){ }d18(17){ }d20(18){ }d22(19){ }d24(20){ }d26(21){ }d28(22){ }d30(23){ }d32(24){ }d34(25){ }d36(26){ }d38(27){ }d40(28){ }d42(29){ }d44(30){ }d46(31){ }d101(102){ }d102(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 115 116
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 115
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 3 )->[3]->( 3 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(7){ }u9(13){ }u10(102){ }u11(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(7){ }u13(13){ }u14(102){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
processing block 3 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp]
processing block 2 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 28 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 5 (  1.2)
insn_cost 8 for     6: debug begin stmt marker
insn_cost 8 for     7: debug pid => entry_value
insn_cost 8 for     8: debug sig => 0xffffffffffffffff
insn_cost 8 for     9: debug inline entry marker
insn_cost 8 for    10: debug begin stmt marker
insn_cost 4 for    11: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    28: r116:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for    12: r113:SI=r116:SI
      REG_DEAD r116:SI
insn_cost 4 for    13: r115:SI=0x16
insn_cost 4 for    14: [r113:SI]=r115:SI
      REG_DEAD r115:SI
      REG_DEAD r113:SI
insn_cost 8 for    15: debug begin stmt marker
insn_cost 8 for    17: debug pid => optimized away
insn_cost 8 for    18: debug sig => optimized away
insn_cost 8 for    19: debug begin stmt marker
insn_cost 8 for    20: debug begin stmt marker
insn_cost 8 for    21: debug begin stmt marker
allowing combination of insns 12 and 14
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 12.
modifying insn i3    14: [r116:SI]=r115:SI
      REG_DEAD r116:SI
      REG_DEAD r115:SI
deferring rescan insn with uid = 14.
starting the processing of deferred insns
rescanning insn with uid = 14.
ending the processing of deferred insns


_exit

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r7={1d,3u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,3u} r103={1d,2u} r104={1d} r105={1d} r106={1d} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 123{108d,15u,0e} in 15{14 regular + 1 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":61:2 -1
     (nil))
(debug_insn 7 6 8 2 (var_location:SI pid (entry_value:SI (reg:SI 0 r0 [ status ]))) "../Core/Src/syscalls.c":61:2 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:SI sig (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":61:2 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker:BLK) "../Core/Src/syscalls.c":53:5 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/syscalls.c":55:2 -1
     (nil))
(call_insn 11 10 28 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":55:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 28 11 12 2 (set (reg:SI 116)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":55:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 12 28 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:SI 115)
        (const_int 22 [0x16])) "../Core/Src/syscalls.c":55:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (mem:SI (reg:SI 116) [1 *_3+0 S4 A32])
        (reg:SI 115)) "../Core/Src/syscalls.c":55:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg:SI 115)
            (nil))))
(debug_insn 15 14 22 2 (debug_marker) "../Core/Src/syscalls.c":56:2 -1
     (nil))
(code_label 22 15 16 3 7 (nil) [0 uses])
(note 16 22 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 17 16 18 3 (var_location:SI pid (clobber (const_int 0 [0]))) "../Core/Src/syscalls.c":61:2 -1
     (nil))
(debug_insn 18 17 19 3 (var_location:SI sig (clobber (const_int 0 [0]))) "../Core/Src/syscalls.c":61:2 -1
     (nil))
(debug_insn 19 18 20 3 (debug_marker) "../Core/Src/syscalls.c":62:2 -1
     (nil))
(debug_insn 20 19 21 3 (debug_marker) "../Core/Src/syscalls.c":62:13 -1
     (nil))
(debug_insn 21 20 0 3 (debug_marker) "../Core/Src/syscalls.c":62:8 -1
     (nil))

;; Function _read (_read, funcdef_no=29, decl_uid=7496, cgraph_uid=30, symbol_order=31)

scanning new insn with uid = 49.
rescanning insn with uid = 3.
scanning new insn with uid = 50.
rescanning insn with uid = 4.
scanning new insn with uid = 51.
rescanning insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 7 (  1.2)


_read

Dataflow summary:
def_info->table_size = 114, use_info->table_size = 40
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r7={1d,5u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,5u} r103={1d,4u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r115={1d,1u} r119={2d,7u} r120={1d,3u} r123={1d,1u} r124={1d,1u} r125={1d,1u} 
;;    total ref usage 159{117d,42u,0e} in 29{28 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d104(102){ }d105(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 119 120 123 124
;; live  in  	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 100 [cc] 119 120
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(102){ }u12(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; lr  def 	 115
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; live  gen 	 115
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(7){ }u16(13){ }u17(102){ }u18(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 119 125
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  gen 	 0 [r0] 100 [cc] 113 119
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(7){ }u31(13){ }u32(102){ }u33(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; lr  def 	 0 [r0]
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(0){ }u37(7){ }u38(13){ }u39(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 35 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 44 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 43 to worklist
processing block 4 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
  Adding insn 34 to worklist
  Adding insn 24 to worklist
  Adding insn 51 to worklist
processing block 3 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
  Adding insn 18 to worklist
processing block 2 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
  Adding insn 15 to worklist
  Adding insn 4 to worklist
  Adding insn 50 to worklist
  Adding insn 3 to worklist
  Adding insn 49 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 7 (  1.2)
insn_cost 2 for    49: r123:SI=r1:SI
      REG_DEAD r1:SI
insn_cost 2 for     3: r119:SI=r123:SI
      REG_DEAD r123:SI
insn_cost 2 for    50: r124:SI=r2:SI
      REG_DEAD r2:SI
insn_cost 2 for     4: r120:SI=r124:SI
      REG_DEAD r124:SI
insn_cost 8 for     8: debug begin stmt marker
insn_cost 8 for     9: debug begin stmt marker
insn_cost 8 for    10: debug DataIdx => 0
insn_cost 8 for    11: debug ptr => r119:SI
insn_cost 8 for    12: debug begin stmt marker
insn_cost 4 for    15: cc:CC=cmp(r120:SI,0)
insn_cost 16 for    16: pc={(cc:CC<=0)?L36:pc}
      REG_DEAD cc:CC
      REG_BR_PROB 118111604
insn_cost 4 for    18: r115:SI=r119:SI+r120:SI
insn_cost 8 for    20: debug DataIdx => 0
insn_cost 8 for    21: debug ptr => r119:SI
insn_cost 8 for    22: debug begin stmt marker
insn_cost 4 for    23: r0:SI=call [`__io_getchar'] argc:0
      REG_CALL_DECL `__io_getchar'
insn_cost 2 for    51: r125:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for    24: r113:SI=r125:SI
      REG_DEAD r125:SI
insn_cost 8 for    26: debug ptr => r119:SI+0x1
insn_cost 4 for    28: [r119:SI++]=r113:SI#0
      REG_DEAD r113:SI
      REG_INC r119:SI
insn_cost 8 for    29: debug begin stmt marker
insn_cost 8 for    30: debug DataIdx => 0
insn_cost 8 for    31: debug ptr => r119:SI
insn_cost 8 for    32: debug begin stmt marker
insn_cost 4 for    34: cc:CC=cmp(r115:SI,r119:SI)
insn_cost 16 for    35: pc={(cc:CC!=0)?L33:pc}
      REG_DEAD cc:CC
      REG_BR_PROB 955630228
insn_cost 8 for    38: debug begin stmt marker
insn_cost 2 for    43: r0:SI=r120:SI
      REG_DEAD r120:SI
insn_cost 8 for    44: use r0:SI
allowing combination of insns 4 and 15
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 4.
modifying insn i3    15: {cc:CC=cmp(r124:SI,0);r120:SI=r124:SI;}
      REG_DEAD r124:SI
deferring rescan insn with uid = 15.
allowing combination of insns 24 and 28
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 24.
modifying insn i3    28: [r119:SI++]=r125:SI#0
      REG_DEAD r125:SI
      REG_INC r119:SI
deferring rescan insn with uid = 28.
starting the processing of deferred insns
rescanning insn with uid = 15.
rescanning insn with uid = 28.
ending the processing of deferred insns


_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r7={1d,5u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,5u} r103={1d,4u} r104={1d} r105={1d} r106={1d} r115={1d,1u} r119={2d,7u} r120={1d,2u} r123={1d,1u} r124={1d,2u} r125={1d,1u} 
;;    total ref usage 157{116d,41u,0e} in 27{26 regular + 1 call} insns.
(note 6 0 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 49 6 3 2 (set (reg:SI 123)
        (reg:SI 1 r1 [ ptr ])) "../Core/Src/syscalls.c":66:1 -1
     (expr_list:REG_DEAD (reg:SI 1 r1 [ ptr ])
        (nil)))
(insn 3 49 50 2 (set (reg/v/f:SI 119 [ ptr ])
        (reg:SI 123)) "../Core/Src/syscalls.c":66:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 50 3 4 2 (set (reg:SI 124)
        (reg:SI 2 r2 [ len ])) "../Core/Src/syscalls.c":66:1 -1
     (expr_list:REG_DEAD (reg:SI 2 r2 [ len ])
        (nil)))
(note 4 50 5 2 NOTE_INSN_DELETED)
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 5 9 2 (debug_marker) "../Core/Src/syscalls.c":67:2 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../Core/Src/syscalls.c":69:2 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 12 11 15 2 (debug_marker) "../Core/Src/syscalls.c":69:20 -1
     (nil))
(insn 15 12 16 2 (parallel [
            (set (reg:CC 100 cc)
                (compare:CC (reg:SI 124)
                    (const_int 0 [0])))
            (set (reg/v:SI 120 [ len ])
                (reg:SI 124))
        ]) "../Core/Src/syscalls.c":69:2 260 {*movsi_compare0}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "../Core/Src/syscalls.c":69:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 36)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 33 3 (set (reg/f:SI 115 [ _4 ])
        (plus:SI (reg/v/f:SI 119 [ ptr ])
            (reg/v:SI 120 [ len ]))) 7 {*arm_addsi3}
     (nil))
(code_label 33 18 19 4 11 (nil) [1 uses])
(note 19 33 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 21 4 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 21 20 22 4 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 22 21 23 4 (debug_marker) "../Core/Src/syscalls.c":71:3 -1
     (nil))
(call_insn 23 22 51 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_getchar") [flags 0x41]  <function_decl 0000000006b8ee00 __io_getchar>) [0 __io_getchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":71:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref/i:SI ("__io_getchar") [flags 0x41]  <function_decl 0000000006b8ee00 __io_getchar>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 51 23 24 4 (set (reg:SI 125)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":71:12 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 24 51 26 4 NOTE_INSN_DELETED)
(debug_insn 26 24 28 4 (var_location:SI ptr (plus:SI (reg/v/f:SI 119 [ ptr ])
        (const_int 1 [0x1]))) "../Core/Src/syscalls.c":71:7 -1
     (nil))
(insn 28 26 29 4 (set (mem:QI (post_inc:SI (reg/v/f:SI 119 [ ptr ])) [0 MEM[base: ptr_10, offset: 4294967295B]+0 S1 A8])
        (subreg:QI (reg:SI 125) 0)) "../Core/Src/syscalls.c":71:10 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_INC (reg/v/f:SI 119 [ ptr ])
            (nil))))
(debug_insn 29 28 30 4 (debug_marker) "../Core/Src/syscalls.c":69:35 -1
     (nil))
(debug_insn 30 29 31 4 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 31 30 32 4 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 32 31 34 4 (debug_marker) "../Core/Src/syscalls.c":69:20 -1
     (nil))
(insn 34 32 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 115 [ _4 ])
            (reg/v/f:SI 119 [ ptr ]))) "../Core/Src/syscalls.c":69:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 33)
            (pc))) "../Core/Src/syscalls.c":69:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 33)
(code_label 36 35 37 5 10 (nil) [1 uses])
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 38 37 43 5 (debug_marker) "../Core/Src/syscalls.c":74:1 -1
     (nil))
(insn 43 38 44 5 (set (reg/i:SI 0 r0)
        (reg/v:SI 120 [ len ])) "../Core/Src/syscalls.c":75:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 120 [ len ])
        (nil)))
(insn 44 43 0 5 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":75:1 -1
     (nil))

;; Function _write (_write, funcdef_no=30, decl_uid=7505, cgraph_uid=31, symbol_order=32)

scanning new insn with uid = 47.
rescanning insn with uid = 3.
scanning new insn with uid = 48.
rescanning insn with uid = 4.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 7 (  1.2)


_write

Dataflow summary:
def_info->table_size = 115, use_info->table_size = 40
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r7={1d,5u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,5u} r103={1d,4u} r104={1d} r105={1d} r106={1d} r115={1d,1u} r119={2d,7u} r120={1d,3u} r121={1d,1u} r123={1d,1u} r124={1d,1u} 
;;    total ref usage 158{117d,41u,0e} in 28{27 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d5(1){ }d7(2){ }d9(3){ }d10(7){ }d13(13){ }d15(14){ }d18(16){ }d20(17){ }d22(18){ }d24(19){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d44(29){ }d46(30){ }d48(31){ }d105(102){ }d106(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 119 120 123 124
;; live  in  	 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 100 [cc] 119 120
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(7){ }u10(13){ }u11(102){ }u12(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; lr  def 	 115
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
;; live  gen 	 115
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(7){ }u16(13){ }u17(102){ }u18(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 119 121
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  gen 	 0 [r0] 100 [cc] 119 121
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(7){ }u31(13){ }u32(102){ }u33(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; lr  def 	 0 [r0]
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(0){ }u37(7){ }u38(13){ }u39(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 34 to worklist
  Adding insn 27 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 42 to worklist
processing block 4 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
  Adding insn 33 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 3 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 119 120
  Adding insn 18 to worklist
processing block 2 lr out =  7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119 120
  Adding insn 15 to worklist
  Adding insn 4 to worklist
  Adding insn 48 to worklist
  Adding insn 3 to worklist
  Adding insn 47 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 7 (  1.2)
insn_cost 2 for    47: r123:SI=r1:SI
      REG_DEAD r1:SI
insn_cost 2 for     3: r119:SI=r123:SI
      REG_DEAD r123:SI
insn_cost 2 for    48: r124:SI=r2:SI
      REG_DEAD r2:SI
insn_cost 2 for     4: r120:SI=r124:SI
      REG_DEAD r124:SI
insn_cost 8 for     8: debug begin stmt marker
insn_cost 8 for     9: debug begin stmt marker
insn_cost 8 for    10: debug DataIdx => 0
insn_cost 8 for    11: debug ptr => r119:SI
insn_cost 8 for    12: debug begin stmt marker
insn_cost 4 for    15: cc:CC=cmp(r120:SI,0)
insn_cost 16 for    16: pc={(cc:CC<=0)?L35:pc}
      REG_DEAD cc:CC
      REG_BR_PROB 118111604
insn_cost 4 for    18: r115:SI=r119:SI+r120:SI
insn_cost 8 for    20: debug DataIdx => 0
insn_cost 8 for    21: debug ptr => r119:SI
insn_cost 8 for    22: debug begin stmt marker
insn_cost 8 for    24: debug ptr => r119:SI+0x1
insn_cost 12 for    25: r121:SI=zero_extend([r119:SI++])
      REG_INC r119:SI
insn_cost 2 for    26: r0:SI=r121:SI
      REG_DEAD r121:SI
insn_cost 4 for    27: r0:SI=call [`__io_putchar'] argc:0
      REG_UNUSED r0:SI
      REG_CALL_DECL `__io_putchar'
insn_cost 8 for    28: debug begin stmt marker
insn_cost 8 for    29: debug DataIdx => 0
insn_cost 8 for    30: debug ptr => r119:SI
insn_cost 8 for    31: debug begin stmt marker
insn_cost 4 for    33: cc:CC=cmp(r119:SI,r115:SI)
insn_cost 16 for    34: pc={(cc:CC!=0)?L32:pc}
      REG_DEAD cc:CC
      REG_BR_PROB 955630228
insn_cost 8 for    37: debug begin stmt marker
insn_cost 2 for    42: r0:SI=r120:SI
      REG_DEAD r120:SI
insn_cost 8 for    43: use r0:SI
allowing combination of insns 4 and 15
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 4.
modifying insn i3    15: {cc:CC=cmp(r124:SI,0);r120:SI=r124:SI;}
      REG_DEAD r124:SI
deferring rescan insn with uid = 15.
allowing combination of insns 25 and 26
original costs 12 + 2 = 14
replacement cost 12
deferring deletion of insn with uid = 25.
modifying insn i3    26: r0:SI=zero_extend([r119:SI++])
      REG_INC r119:SI
deferring rescan insn with uid = 26.
starting the processing of deferred insns
rescanning insn with uid = 15.
rescanning insn with uid = 26.
ending the processing of deferred insns


_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r7={1d,5u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,5u} r103={1d,4u} r104={1d} r105={1d} r106={1d} r115={1d,1u} r119={2d,7u} r120={1d,2u} r123={1d,1u} r124={1d,2u} 
;;    total ref usage 156{116d,40u,0e} in 26{25 regular + 1 call} insns.
(note 6 0 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 47 6 3 2 (set (reg:SI 123)
        (reg:SI 1 r1 [ ptr ])) "../Core/Src/syscalls.c":78:1 -1
     (expr_list:REG_DEAD (reg:SI 1 r1 [ ptr ])
        (nil)))
(insn 3 47 48 2 (set (reg/v/f:SI 119 [ ptr ])
        (reg:SI 123)) "../Core/Src/syscalls.c":78:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 48 3 4 2 (set (reg:SI 124)
        (reg:SI 2 r2 [ len ])) "../Core/Src/syscalls.c":78:1 -1
     (expr_list:REG_DEAD (reg:SI 2 r2 [ len ])
        (nil)))
(note 4 48 5 2 NOTE_INSN_DELETED)
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 5 9 2 (debug_marker) "../Core/Src/syscalls.c":79:2 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../Core/Src/syscalls.c":81:2 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 12 11 15 2 (debug_marker) "../Core/Src/syscalls.c":81:20 -1
     (nil))
(insn 15 12 16 2 (parallel [
            (set (reg:CC 100 cc)
                (compare:CC (reg:SI 124)
                    (const_int 0 [0])))
            (set (reg/v:SI 120 [ len ])
                (reg:SI 124))
        ]) "../Core/Src/syscalls.c":81:2 260 {*movsi_compare0}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "../Core/Src/syscalls.c":81:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 35)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 32 3 (set (reg/f:SI 115 [ _14 ])
        (plus:SI (reg/v/f:SI 119 [ ptr ])
            (reg/v:SI 120 [ len ]))) 7 {*arm_addsi3}
     (nil))
(code_label 32 18 19 4 16 (nil) [1 uses])
(note 19 32 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 21 4 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 21 20 22 4 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 22 21 24 4 (debug_marker) "../Core/Src/syscalls.c":83:3 -1
     (nil))
(debug_insn 24 22 25 4 (var_location:SI ptr (plus:SI (reg/v/f:SI 119 [ ptr ])
        (const_int 1 [0x1]))) "../Core/Src/syscalls.c":83:20 -1
     (nil))
(note 25 24 26 4 NOTE_INSN_DELETED)
(insn 26 25 27 4 (set (reg:SI 0 r0)
        (zero_extend:SI (mem:QI (post_inc:SI (reg/v/f:SI 119 [ ptr ])) [0 MEM[base: ptr_9, offset: 4294967295B]+0 S1 A8]))) "../Core/Src/syscalls.c":83:3 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_INC (reg/v/f:SI 119 [ ptr ])
        (nil)))
(call_insn 27 26 28 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_putchar") [flags 0x41]  <function_decl 0000000006b8ed00 __io_putchar>) [0 __io_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":83:3 291 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref/i:SI ("__io_putchar") [flags 0x41]  <function_decl 0000000006b8ed00 __io_putchar>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 28 27 29 4 (debug_marker) "../Core/Src/syscalls.c":81:35 -1
     (nil))
(debug_insn 29 28 30 4 (var_location:SI DataIdx (const_int 0 [0])) -1
     (nil))
(debug_insn 30 29 31 4 (var_location:SI ptr (reg/v/f:SI 119 [ ptr ])) -1
     (nil))
(debug_insn 31 30 33 4 (debug_marker) "../Core/Src/syscalls.c":81:20 -1
     (nil))
(insn 33 31 34 4 (set (reg:CC 100 cc)
        (compare:CC (reg/v/f:SI 119 [ ptr ])
            (reg/f:SI 115 [ _14 ]))) "../Core/Src/syscalls.c":81:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 32)
            (pc))) "../Core/Src/syscalls.c":81:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 32)
(code_label 35 34 36 5 15 (nil) [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 37 36 42 5 (debug_marker) "../Core/Src/syscalls.c":85:2 -1
     (nil))
(insn 42 37 43 5 (set (reg/i:SI 0 r0)
        (reg/v:SI 120 [ len ])) "../Core/Src/syscalls.c":86:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 120 [ len ])
        (nil)))
(insn 43 42 0 5 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":86:1 -1
     (nil))

;; Function _close (_close, funcdef_no=31, decl_uid=7512, cgraph_uid=32, symbol_order=33)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     6: debug begin stmt marker
insn_cost 4 for     7: r113:SI=0xffffffffffffffff
insn_cost 2 for    11: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    12: use r0:SI
allowing combination of insns 7 and 11
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 7.
modifying insn i3    11: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 11.
starting the processing of deferred insns
rescanning insn with uid = 11.
ending the processing of deferred insns


_close

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":90:2 -1
     (nil))
(note 7 6 11 2 NOTE_INSN_DELETED)
(insn 11 7 12 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":91:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 12 11 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":91:1 -1
     (nil))

;; Function _fstat (_fstat, funcdef_no=32, decl_uid=7516, cgraph_uid=33, symbol_order=34)

scanning new insn with uid = 18.
rescanning insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_fstat

Dataflow summary:
def_info->table_size = 29, use_info->table_size = 13
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} r113={1d,1u} r115={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 44{30d,14u,0e} in 9{9 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d8(16){ }d9(17){ }d10(18){ }d11(19){ }d12(20){ }d13(21){ }d14(22){ }d15(23){ }d16(24){ }d17(25){ }d18(26){ }d19(27){ }d20(28){ }d21(29){ }d22(30){ }d23(31){ }d24(102){ }d25(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 115 116 118
;; live  in  	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 115 116
;; live  kill	
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ }u10(7){ }u11(13){ }u12(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 3 to worklist
  Adding insn 18 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 2 for    18: r118:SI=r1:SI
      REG_DEAD r1:SI
insn_cost 2 for     3: r115:SI=r118:SI
      REG_DEAD r118:SI
insn_cost 8 for     7: debug begin stmt marker
insn_cost 4 for     8: r116:SI=0x2000
insn_cost 4 for     9: [r115:SI+0x4]=r116:SI
      REG_DEAD r116:SI
      REG_DEAD r115:SI
insn_cost 8 for    10: debug begin stmt marker
insn_cost 4 for    11: r113:SI=0
insn_cost 2 for    15: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0
insn_cost 8 for    16: use r0:SI
allowing combination of insns 3 and 9
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 3.
modifying insn i3     9: [r118:SI+0x4]=r116:SI
      REG_DEAD r118:SI
      REG_DEAD r116:SI
deferring rescan insn with uid = 9.
allowing combination of insns 11 and 15
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 11.
modifying insn i3    15: r0:SI=0
      REG_EQUAL 0
deferring rescan insn with uid = 15.
starting the processing of deferred insns
rescanning insn with uid = 9.
rescanning insn with uid = 15.
ending the processing of deferred insns


_fstat

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 40{28d,12u,0e} in 7{7 regular + 0 call} insns.
(note 5 0 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 18 5 3 2 (set (reg:SI 118)
        (reg:SI 1 r1 [ st ])) "../Core/Src/syscalls.c":95:1 -1
     (expr_list:REG_DEAD (reg:SI 1 r1 [ st ])
        (nil)))
(note 3 18 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "../Core/Src/syscalls.c":96:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":96:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (mem:SI (plus:SI (reg:SI 118)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":96:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 116)
            (nil))))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/syscalls.c":97:2 -1
     (nil))
(note 11 10 15 2 NOTE_INSN_DELETED)
(insn 15 11 16 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "../Core/Src/syscalls.c":98:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":98:1 -1
     (nil))

;; Function _isatty (_isatty, funcdef_no=33, decl_uid=7519, cgraph_uid=34, symbol_order=35)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     6: debug begin stmt marker
insn_cost 4 for     7: r113:SI=0x1
insn_cost 2 for    11: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0x1
insn_cost 8 for    12: use r0:SI
allowing combination of insns 7 and 11
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 7.
modifying insn i3    11: r0:SI=0x1
      REG_EQUAL 0x1
deferring rescan insn with uid = 11.
starting the processing of deferred insns
rescanning insn with uid = 11.
ending the processing of deferred insns


_isatty

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":102:2 -1
     (nil))
(note 7 6 11 2 NOTE_INSN_DELETED)
(insn 11 7 12 2 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":103:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 12 11 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":103:1 -1
     (nil))

;; Function _lseek (_lseek, funcdef_no=34, decl_uid=7524, cgraph_uid=35, symbol_order=36)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     8: debug begin stmt marker
insn_cost 4 for     9: r113:SI=0
insn_cost 2 for    13: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0
insn_cost 8 for    14: use r0:SI
allowing combination of insns 9 and 13
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 9.
modifying insn i3    13: r0:SI=0
      REG_EQUAL 0
deferring rescan insn with uid = 13.
starting the processing of deferred insns
rescanning insn with uid = 13.
ending the processing of deferred insns


_lseek

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 5 9 2 (debug_marker) "../Core/Src/syscalls.c":107:2 -1
     (nil))
(note 9 8 13 2 NOTE_INSN_DELETED)
(insn 13 9 14 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "../Core/Src/syscalls.c":108:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":108:1 -1
     (nil))

;; Function _open (_open, funcdef_no=35, decl_uid=7528, cgraph_uid=36, symbol_order=37)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     7: debug begin stmt marker
insn_cost 4 for     8: r113:SI=0xffffffffffffffff
insn_cost 2 for    12: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    13: use r0:SI
allowing combination of insns 8 and 12
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 8.
modifying insn i3    12: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 12.
starting the processing of deferred insns
rescanning insn with uid = 12.
ending the processing of deferred insns


_open

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "../Core/Src/syscalls.c":113:2 -1
     (nil))
(note 8 7 12 2 NOTE_INSN_DELETED)
(insn 12 8 13 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":114:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 13 12 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":114:1 -1
     (nil))

;; Function _wait (_wait, funcdef_no=36, decl_uid=7531, cgraph_uid=37, symbol_order=38)

scanning new insn with uid = 19.
rescanning insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_wait

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 116 118
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 116
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 10 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 19 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     6: debug begin stmt marker
insn_cost 4 for     7: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    19: r118:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for     8: r113:SI=r118:SI
      REG_DEAD r118:SI
insn_cost 4 for     9: r116:SI=0xa
insn_cost 4 for    10: [r113:SI]=r116:SI
      REG_DEAD r116:SI
      REG_DEAD r113:SI
insn_cost 8 for    11: debug begin stmt marker
insn_cost 4 for    12: r114:SI=0xffffffffffffffff
insn_cost 2 for    16: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    17: use r0:SI
allowing combination of insns 8 and 10
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 8.
modifying insn i3    10: [r118:SI]=r116:SI
      REG_DEAD r118:SI
      REG_DEAD r116:SI
deferring rescan insn with uid = 10.
allowing combination of insns 12 and 16
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 12.
modifying insn i3    16: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 16.
starting the processing of deferred insns
rescanning insn with uid = 10.
rescanning insn with uid = 16.
ending the processing of deferred insns


_wait

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":118:2 -1
     (nil))
(call_insn 7 6 19 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":118:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 19 7 8 2 (set (reg:SI 118)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":118:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 8 19 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:SI 116)
        (const_int 10 [0xa])) "../Core/Src/syscalls.c":118:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg:SI 118) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":118:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 116)
            (nil))))
(debug_insn 11 10 12 2 (debug_marker) "../Core/Src/syscalls.c":119:2 -1
     (nil))
(note 12 11 16 2 NOTE_INSN_DELETED)
(insn 16 12 17 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":120:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":120:1 -1
     (nil))

;; Function _unlink (_unlink, funcdef_no=37, decl_uid=7534, cgraph_uid=38, symbol_order=39)

scanning new insn with uid = 19.
rescanning insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_unlink

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 116 118
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 116
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 10 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 19 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     6: debug begin stmt marker
insn_cost 4 for     7: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    19: r118:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for     8: r113:SI=r118:SI
      REG_DEAD r118:SI
insn_cost 4 for     9: r116:SI=0x2
insn_cost 4 for    10: [r113:SI]=r116:SI
      REG_DEAD r116:SI
      REG_DEAD r113:SI
insn_cost 8 for    11: debug begin stmt marker
insn_cost 4 for    12: r114:SI=0xffffffffffffffff
insn_cost 2 for    16: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    17: use r0:SI
allowing combination of insns 8 and 10
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 8.
modifying insn i3    10: [r118:SI]=r116:SI
      REG_DEAD r118:SI
      REG_DEAD r116:SI
deferring rescan insn with uid = 10.
allowing combination of insns 12 and 16
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 12.
modifying insn i3    16: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 16.
starting the processing of deferred insns
rescanning insn with uid = 10.
rescanning insn with uid = 16.
ending the processing of deferred insns


_unlink

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":124:2 -1
     (nil))
(call_insn 7 6 19 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":124:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 19 7 8 2 (set (reg:SI 118)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":124:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 8 19 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Core/Src/syscalls.c":124:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg:SI 118) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":124:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 116)
            (nil))))
(debug_insn 11 10 12 2 (debug_marker) "../Core/Src/syscalls.c":125:2 -1
     (nil))
(note 12 11 16 2 NOTE_INSN_DELETED)
(insn 16 12 17 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":126:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":126:1 -1
     (nil))

;; Function _times (_times, funcdef_no=38, decl_uid=7537, cgraph_uid=39, symbol_order=40)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 8 for     6: debug begin stmt marker
insn_cost 4 for     7: r113:SI=0xffffffffffffffff
insn_cost 2 for    11: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    12: use r0:SI
allowing combination of insns 7 and 11
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 7.
modifying insn i3    11: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 11.
starting the processing of deferred insns
rescanning insn with uid = 11.
ending the processing of deferred insns


_times

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 3{3 regular + 0 call} insns.
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../Core/Src/syscalls.c":130:2 -1
     (nil))
(note 7 6 11 2 NOTE_INSN_DELETED)
(insn 11 7 12 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":131:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 12 11 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":131:1 -1
     (nil))

;; Function _stat (_stat, funcdef_no=39, decl_uid=7541, cgraph_uid=40, symbol_order=41)

scanning new insn with uid = 18.
rescanning insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_stat

Dataflow summary:
def_info->table_size = 29, use_info->table_size = 13
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} r113={1d,1u} r115={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 44{30d,14u,0e} in 9{9 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(7){ }d6(13){ }d7(14){ }d8(16){ }d9(17){ }d10(18){ }d11(19){ }d12(20){ }d13(21){ }d14(22){ }d15(23){ }d16(24){ }d17(25){ }d18(26){ }d19(27){ }d20(28){ }d21(29){ }d22(30){ }d23(31){ }d24(102){ }d25(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 115 116 118
;; live  in  	 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 115 116
;; live  kill	
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ }u10(7){ }u11(13){ }u12(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 3 to worklist
  Adding insn 18 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 2 for    18: r118:SI=r1:SI
      REG_DEAD r1:SI
insn_cost 2 for     3: r115:SI=r118:SI
      REG_DEAD r118:SI
insn_cost 8 for     7: debug begin stmt marker
insn_cost 4 for     8: r116:SI=0x2000
insn_cost 4 for     9: [r115:SI+0x4]=r116:SI
      REG_DEAD r116:SI
      REG_DEAD r115:SI
insn_cost 8 for    10: debug begin stmt marker
insn_cost 4 for    11: r113:SI=0
insn_cost 2 for    15: r0:SI=r113:SI
      REG_DEAD r113:SI
      REG_EQUAL 0
insn_cost 8 for    16: use r0:SI
allowing combination of insns 3 and 9
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 3.
modifying insn i3     9: [r118:SI+0x4]=r116:SI
      REG_DEAD r118:SI
      REG_DEAD r116:SI
deferring rescan insn with uid = 9.
allowing combination of insns 11 and 15
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 11.
modifying insn i3    15: r0:SI=0
      REG_EQUAL 0
deferring rescan insn with uid = 15.
starting the processing of deferred insns
rescanning insn with uid = 9.
rescanning insn with uid = 15.
ending the processing of deferred insns


_stat

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r3={1d} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,2u} r103={1d,1u} r116={1d,1u} r118={1d,1u} 
;;    total ref usage 40{28d,12u,0e} in 7{7 regular + 0 call} insns.
(note 5 0 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 18 5 3 2 (set (reg:SI 118)
        (reg:SI 1 r1 [ st ])) "../Core/Src/syscalls.c":134:1 -1
     (expr_list:REG_DEAD (reg:SI 1 r1 [ st ])
        (nil)))
(note 3 18 4 2 NOTE_INSN_DELETED)
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "../Core/Src/syscalls.c":135:2 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":135:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (mem:SI (plus:SI (reg:SI 118)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":135:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg:SI 116)
            (nil))))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/syscalls.c":136:2 -1
     (nil))
(note 11 10 15 2 NOTE_INSN_DELETED)
(insn 15 11 16 2 (set (reg/i:SI 0 r0)
        (const_int 0 [0])) "../Core/Src/syscalls.c":137:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":137:1 -1
     (nil))

;; Function _link (_link, funcdef_no=40, decl_uid=7545, cgraph_uid=41, symbol_order=42)

scanning new insn with uid = 20.
rescanning insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_link

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r117={1d,1u} r119={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 117 119
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 117
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 20 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     7: debug begin stmt marker
insn_cost 4 for     8: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    20: r119:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for     9: r113:SI=r119:SI
      REG_DEAD r119:SI
insn_cost 4 for    10: r117:SI=0x1f
insn_cost 4 for    11: [r113:SI]=r117:SI
      REG_DEAD r117:SI
      REG_DEAD r113:SI
insn_cost 8 for    12: debug begin stmt marker
insn_cost 4 for    13: r114:SI=0xffffffffffffffff
insn_cost 2 for    17: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    18: use r0:SI
allowing combination of insns 9 and 11
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 9.
modifying insn i3    11: [r119:SI]=r117:SI
      REG_DEAD r119:SI
      REG_DEAD r117:SI
deferring rescan insn with uid = 11.
allowing combination of insns 13 and 17
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 13.
modifying insn i3    17: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 17.
starting the processing of deferred insns
rescanning insn with uid = 11.
rescanning insn with uid = 17.
ending the processing of deferred insns


_link

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r117={1d,1u} r119={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (debug_marker) "../Core/Src/syscalls.c":141:2 -1
     (nil))
(call_insn 8 7 20 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":141:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 20 8 9 2 (set (reg:SI 119)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":141:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 9 20 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:SI 117)
        (const_int 31 [0x1f])) "../Core/Src/syscalls.c":141:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg:SI 119) [1 *_1+0 S4 A32])
        (reg:SI 117)) "../Core/Src/syscalls.c":141:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg:SI 117)
            (nil))))
(debug_insn 12 11 13 2 (debug_marker) "../Core/Src/syscalls.c":142:2 -1
     (nil))
(note 13 12 17 2 NOTE_INSN_DELETED)
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":143:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":143:1 -1
     (nil))

;; Function _fork (_fork, funcdef_no=41, decl_uid=7548, cgraph_uid=42, symbol_order=43)

scanning new insn with uid = 18.
rescanning insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_fork

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r117={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 117
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 115
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 9 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 18 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     5: debug begin stmt marker
insn_cost 4 for     6: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    18: r117:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for     7: r113:SI=r117:SI
      REG_DEAD r117:SI
insn_cost 4 for     8: r115:SI=0xb
insn_cost 4 for     9: [r113:SI]=r115:SI
      REG_DEAD r115:SI
      REG_DEAD r113:SI
insn_cost 8 for    10: debug begin stmt marker
insn_cost 4 for    11: r114:SI=0xffffffffffffffff
insn_cost 2 for    15: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    16: use r0:SI
allowing combination of insns 7 and 9
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 7.
modifying insn i3     9: [r117:SI]=r115:SI
      REG_DEAD r117:SI
      REG_DEAD r115:SI
deferring rescan insn with uid = 9.
allowing combination of insns 11 and 15
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 11.
modifying insn i3    15: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 15.
starting the processing of deferred insns
rescanning insn with uid = 9.
rescanning insn with uid = 15.
ending the processing of deferred insns


_fork

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r115={1d,1u} r117={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../Core/Src/syscalls.c":147:2 -1
     (nil))
(call_insn 6 5 18 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":147:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 18 6 7 2 (set (reg:SI 117)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":147:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 7 18 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg:SI 115)
        (const_int 11 [0xb])) "../Core/Src/syscalls.c":147:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg:SI 117) [1 *_1+0 S4 A32])
        (reg:SI 115)) "../Core/Src/syscalls.c":147:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_DEAD (reg:SI 115)
            (nil))))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/syscalls.c":148:2 -1
     (nil))
(note 11 10 15 2 NOTE_INSN_DELETED)
(insn 15 11 16 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":149:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":149:1 -1
     (nil))

;; Function _execve (_execve, funcdef_no=42, decl_uid=7553, cgraph_uid=43, symbol_order=44)

scanning new insn with uid = 21.
rescanning insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_execve

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 14
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r118={1d,1u} r120={1d,1u} 
;;    total ref usage 126{111d,15u,0e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(7){ }d12(13){ }d14(14){ }d17(16){ }d19(17){ }d21(18){ }d23(19){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d43(29){ }d45(30){ }d47(31){ }d102(102){ }d103(103){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;; live  kill	
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(7){ }u1(13){ }u2(102){ }u3(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 118 120
;; live  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  gen 	 0 [r0] 113 114 118
;; live  kill	 12 [ip] 14 [lr]
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; live  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ }u11(7){ }u12(13){ }u13(102){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 21 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
insn_cost 8 for     8: debug begin stmt marker
insn_cost 4 for     9: r0:SI=call [`__errno'] argc:0
      REG_CALL_DECL `__errno'
insn_cost 2 for    21: r120:SI=r0:SI
      REG_DEAD r0:SI
insn_cost 2 for    10: r113:SI=r120:SI
      REG_DEAD r120:SI
insn_cost 4 for    11: r118:SI=0xc
insn_cost 4 for    12: [r113:SI]=r118:SI
      REG_DEAD r118:SI
      REG_DEAD r113:SI
insn_cost 8 for    13: debug begin stmt marker
insn_cost 4 for    14: r114:SI=0xffffffffffffffff
insn_cost 2 for    18: r0:SI=r114:SI
      REG_DEAD r114:SI
      REG_EQUAL 0xffffffffffffffff
insn_cost 8 for    19: use r0:SI
allowing combination of insns 10 and 12
original costs 2 + 4 = 6
replacement cost 4
deferring deletion of insn with uid = 10.
modifying insn i3    12: [r120:SI]=r118:SI
      REG_DEAD r120:SI
      REG_DEAD r118:SI
deferring rescan insn with uid = 12.
allowing combination of insns 14 and 18
original costs 4 + 2 = 6
replacement cost 4
deferring deletion of insn with uid = 14.
modifying insn i3    18: r0:SI=0xffffffffffffffff
      REG_EQUAL 0xffffffffffffffff
deferring rescan insn with uid = 18.
starting the processing of deferred insns
rescanning insn with uid = 12.
rescanning insn with uid = 18.
ending the processing of deferred insns


_execve

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,2u} r103={1d,1u} r104={1d} r105={1d} r106={1d} r118={1d,1u} r120={1d,1u} 
;;    total ref usage 122{109d,13u,0e} in 8{7 regular + 1 call} insns.
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 5 9 2 (debug_marker) "../Core/Src/syscalls.c":153:2 -1
     (nil))
(call_insn 9 8 21 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":153:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006aa3000 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 21 9 10 2 (set (reg:SI 120)
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":153:2 -1
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(note 10 21 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:SI 118)
        (const_int 12 [0xc])) "../Core/Src/syscalls.c":153:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (mem:SI (reg:SI 120) [1 *_1+0 S4 A32])
        (reg:SI 118)) "../Core/Src/syscalls.c":153:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:SI 118)
            (nil))))
(debug_insn 13 12 14 2 (debug_marker) "../Core/Src/syscalls.c":154:2 -1
     (nil))
(note 14 13 18 2 NOTE_INSN_DELETED)
(insn 18 14 19 2 (set (reg/i:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":155:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 19 18 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":155:1 -1
     (nil))

;; Combiner totals: 71 attempts, 70 substitutions (34 requiring new space),
;; 27 successes.
