
;; Function _sbrk (_sbrk, funcdef_no=0, decl_uid=5911, cgraph_uid=1, symbol_order=1)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Will split live ranges of parameters at BB 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 130 uninteresting (no unique first use)
Reg 122: local to bb 2 def dominates all uses has unique first use
Reg 123: local to bb 2 def dominates all uses has unique first use
Reg 131 uninteresting
Reg 121: def dominates all uses has unique first use
Reg 119: def dominates all uses has unique first use
Reg 126 uninteresting
Reg 116 uninteresting
Reg 132: local to bb 5 def dominates all uses has unique first use
Reg 127 uninteresting
Reg 119 not local to one basic block
Reg 121 not local to one basic block
Ignoring reg 122 with equiv init insn
Ignoring reg 123 with equiv init insn
Found def insn 88 for 132 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 122: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 123: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 126: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 127: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 130: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 1 for finding pseudo/allocno costs

    r132: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r131: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r130: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r120,l0) costs: LO_REGS:2000,2000 HI_REGS:8000,8000 CALLER_SAVE_REGS:8000,8000 EVEN_REG:8000,8000 GENERAL_REGS:6000,6000 VFP_D0_D7_REGS:82530,82530 VFP_LO_REGS:82530,82530 ALL_REGS:67530,67530 MEM:55020,55020
  a1(r130,l0) costs: LO_REGS:0,0 HI_REGS:2000,2000 CALLER_SAVE_REGS:2000,2000 EVEN_REG:2000,2000 GENERAL_REGS:2000,2000 VFP_D0_D7_REGS:46455,46455 VFP_LO_REGS:46455,46455 ALL_REGS:46455,46455 MEM:30970,30970
  a2(r116,l0) costs: LO_REGS:0,0 HI_REGS:1594,1594 CALLER_SAVE_REGS:1594,1594 EVEN_REG:1594,1594 GENERAL_REGS:1594,1594 VFP_D0_D7_REGS:41955,41955 VFP_LO_REGS:41955,41955 ALL_REGS:41955,41955 MEM:27970,27970
  a3(r132,l0) costs: GENERAL_REGS:404,404 VFP_D0_D7_REGS:9090,9090 VFP_LO_REGS:9090,9090 ALL_REGS:6060,6060 MEM:6060,6060
  a4(r127,l0) costs: LO_REGS:0,0 HI_REGS:404,404 CALLER_SAVE_REGS:404,404 EVEN_REG:404,404 GENERAL_REGS:404,404 VFP_D0_D7_REGS:6060,6060 VFP_LO_REGS:6060,6060 ALL_REGS:6060,6060 MEM:4040,4040
  a5(r119,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30000,30000 VFP_LO_REGS:30000,30000 ALL_REGS:30000,30000 MEM:20000,20000
  a6(r121,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30000,30000 VFP_LO_REGS:30000,30000 ALL_REGS:30000,30000 MEM:20000,20000
  a7(r126,l0) costs: LO_REGS:0,0 HI_REGS:1200,1200 CALLER_SAVE_REGS:1200,1200 EVEN_REG:1200,1200 GENERAL_REGS:1200,1200 VFP_D0_D7_REGS:13500,13500 VFP_LO_REGS:13500,13500 ALL_REGS:13500,13500 MEM:9000,9000
  a8(r123,l0) costs: LO_REGS:0,0 HI_REGS:2000,2000 CALLER_SAVE_REGS:2000,2000 EVEN_REG:2000,2000 GENERAL_REGS:2000,2000 VFP_D0_D7_REGS:30000,30000 VFP_LO_REGS:30000,30000 ALL_REGS:30000,30000 MEM:20000,20000
  a9(r122,l0) costs: LO_REGS:0,0 HI_REGS:2000,2000 CALLER_SAVE_REGS:2000,2000 EVEN_REG:2000,2000 GENERAL_REGS:2000,2000 VFP_D0_D7_REGS:30000,30000 VFP_LO_REGS:30000,30000 ALL_REGS:30000,30000 MEM:20000,20000
  a10(r131,l0) costs: GENERAL_REGS:2000,2000 VFP_D0_D7_REGS:45000,45000 VFP_LO_REGS:45000,45000 ALL_REGS:30000,30000 MEM:30000,30000

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 51(l0): point = 5
   Insn 89(l0): point = 8
   Insn 5(l0): point = 10
   Insn 41(l0): point = 12
   Insn 40(l0): point = 14
   Insn 88(l0): point = 16
   Insn 38(l0): point = 18
   Insn 35(l0): point = 21
   Insn 34(l0): point = 23
   Insn 33(l0): point = 25
   Insn 4(l0): point = 28
   Insn 28(l0): point = 30
   Insn 27(l0): point = 32
   Insn 23(l0): point = 35
   Insn 16(l0): point = 37
   Insn 2(l0): point = 39
   Insn 87(l0): point = 41
   Insn 21(l0): point = 43
   Insn 15(l0): point = 45
   Insn 14(l0): point = 47
   Insn 20(l0): point = 49
 a0(r120): [35..43] [21..28] [3..10]
 a1(r130): [21..49] [6..7]
 a2(r116): [21..25] [6..7]
 a3(r132): [13..16]
 a4(r127): [13..14]
 a5(r119): [24..37]
 a6(r121): [26..39]
 a7(r126): [29..32]
 a8(r123): [38..45]
 a9(r122): [38..47]
 a10(r131): [40..41]
Compressing live ranges: from 52 to 16 - 30%
Ranges after the compression:
 a0(r120): [10..15] [4..7] [0..1]
 a1(r130): [4..15] [0..1]
 a2(r116): [4..5] [0..1]
 a3(r132): [2..3]
 a4(r127): [2..3]
 a5(r119): [4..11]
 a6(r121): [6..13]
 a7(r126): [8..9]
 a8(r123): [12..15]
 a9(r122): [12..15]
 a10(r131): [14..15]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r120,l0) conflicts: a2(r116,l0) a1(r130,l0) a5(r119,l0) a6(r121,l0) a8(r123,l0) a9(r122,l0) a10(r131,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a1(r130,l0) conflicts: a2(r116,l0) a0(r120,l0) a5(r119,l0) a6(r121,l0) a7(r126,l0) a8(r123,l0) a9(r122,l0) a10(r131,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a2(r116,l0) conflicts: a0(r120,l0) a1(r130,l0) a5(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r132,l0) conflicts: a4(r127,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r127,l0) conflicts: a3(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r119,l0) conflicts: a2(r116,l0) a0(r120,l0) a1(r130,l0) a6(r121,l0) a7(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r121,l0) conflicts: a0(r120,l0) a1(r130,l0) a5(r119,l0) a7(r126,l0) a8(r123,l0) a9(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r126,l0) conflicts: a1(r130,l0) a5(r119,l0) a6(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r123,l0) conflicts: a0(r120,l0) a1(r130,l0) a6(r121,l0) a9(r122,l0) a10(r131,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a9(r122,l0) conflicts: a0(r120,l0) a1(r130,l0) a6(r121,l0) a8(r123,l0) a10(r131,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a10(r131,l0) conflicts: a0(r120,l0) a1(r130,l0) a8(r123,l0) a9(r122,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a2(r116)<->a6(r121)@125:shuffle
  cp1:a0(r120)<->a7(r126)@300:move
  cp2:a6(r121)<->a10(r131)@1000:move
  cp3:a5(r119)<->a9(r122)@125:shuffle
  cp4:a5(r119)<->a8(r123)@125:shuffle
  pref0:a0(r120)<-hr0@2000
  pref1:a3(r132)<-hr0@404
  pref2:a10(r131)<-hr0@2000
  regions=1, blocks=8, points=16
    allocnos=11 (big 0), copies=5, conflicts=0, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r120 1r130 2r116 3r132 4r127 5r119 6r121 7r126 8r123 9r122 10r131
    modified regnos: 116 119 120 121 122 123 126 127 130 131 132
    border:
    Pressure: GENERAL_REGS=5
 Removing pref0:hr0@2000
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@301452
          2:( 1-12 14)@255980
      Allocno a0r120 of GENERAL_REGS(14) has 13 avail. regs  1-12 14, node:  1-12 14 (confl regs =  0 13 15-106)
      Allocno a1r130 of GENERAL_REGS(14) has 13 avail. regs  1-12 14, node:  1-12 14 (confl regs =  0 13 15-106)
      Allocno a2r116 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a3r132 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a4r127 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a5r119 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a6r121 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a7r126 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a8r123 of GENERAL_REGS(14) has 13 avail. regs  1-12 14, node:  1-12 14 (confl regs =  0 13 15-106)
      Allocno a9r122 of GENERAL_REGS(14) has 13 avail. regs  1-12 14, node:  1-12 14 (confl regs =  0 13 15-106)
      Allocno a10r131 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Forming thread by copy 2:a6r121-a10r131 (freq=1000):
        Result (freq=4000): a6r121(2000) a10r131(2000)
      Forming thread by copy 1:a0r120-a7r126 (freq=300):
        Result (freq=5402): a0r120(4502) a7r126(900)
      Forming thread by copy 0:a2r116-a6r121 (freq=125):
        Result (freq=6797): a2r116(2797) a6r121(2000) a10r131(2000)
      Forming thread by copy 3:a5r119-a9r122 (freq=125):
        Result (freq=4000): a5r119(2000) a9r122(2000)
      Pushing a4(r127,l0)(cost 0)
      Pushing a3(r132,l0)(cost 0)
      Pushing a8(r123,l0)(cost 0)
      Pushing a1(r130,l0)(cost 0)
      Pushing a5(r119,l0)(cost 0)
      Pushing a9(r122,l0)(cost 0)
      Pushing a7(r126,l0)(cost 0)
      Pushing a0(r120,l0)(cost 0)
      Pushing a10(r131,l0)(cost 0)
      Pushing a6(r121,l0)(cost 0)
      Pushing a2(r116,l0)(cost 0)
      Popping a2(r116,l0)  -- assign reg 3
      Popping a6(r121,l0)  -- assign reg 0
      Popping a10(r131,l0)  -- assign reg 0
      Popping a0(r120,l0)  -- assign reg 2
      Popping a7(r126,l0)  -- assign reg 2
      Popping a9(r122,l0)  -- assign reg 3
      Popping a5(r119,l0)  -- assign reg 1
      Popping a1(r130,l0)  -- assign reg 4
      Popping a8(r123,l0)  -- assign reg 1
      Popping a3(r132,l0)  -- assign reg 0
      Popping a4(r127,l0)  -- assign reg 3
Assigning 0 to a2r116
Disposition:
    2:r116 l0     0    5:r119 l0     1    0:r120 l0     2    6:r121 l0     0
    9:r122 l0     3    8:r123 l0     1    7:r126 l0     2    4:r127 l0     3
    1:r130 l0     4   10:r131 l0     0    3:r132 l0     0
New iteration of spill/restore move
+++Costs: overall -31656, reg -31656, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_sbrk

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,4u} r1={2d} r2={2d} r3={2d} r7={1d,7u} r12={2d} r13={1d,8u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,1u} r101={1d} r102={1d,7u} r103={1d,6u} r104={1d} r105={1d} r106={1d} r116={1d,2u} r119={1d,2u} r120={3d,3u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r126={1d,2u} r127={1d,1u} r130={1d,3u} r131={1d,1u} r132={1d,1u} 
;;    total ref usage 173{122d,51u,0e} in 41{40 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 22 2 NOTE_INSN_FUNCTION_BEG)
(note 22 3 8 2 NOTE_INSN_DELETED)
(debug_insn 8 22 9 2 (debug_marker) "../Core/Src/sysmem.c":55:3 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../Core/Src/sysmem.c":56:3 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../Core/Src/sysmem.c":57:3 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../Core/Src/sysmem.c":58:3 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:SI stack_limit (minus:SI (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>))) "../Core/Src/sysmem.c":58:18 -1
     (nil))
(debug_insn 13 12 20 2 (debug_marker) "../Core/Src/sysmem.c":59:3 -1
     (nil))
(insn 20 13 14 2 (set (reg/f:SI 130)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../Core/Src/sysmem.c":63:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 14 20 15 2 (set (reg/f:SI 122)
        (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)) "../Core/Src/sysmem.c":58:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
        (nil)))
(insn 15 14 21 2 (set (reg/f:SI 123)
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>)) "../Core/Src/sysmem.c":58:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>)
        (nil)))
(insn 21 15 87 2 (set (reg/f:SI 120 [ <retval> ])
        (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])) "../Core/Src/sysmem.c":63:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [1 __sbrk_heap_end+0 S4 A32])
        (nil)))
(insn 87 21 2 2 (set (reg:SI 131)
        (reg:SI 0 r0 [ incr ])) "../Core/Src/sysmem.c":54:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ incr ])
        (nil)))
(insn 2 87 16 2 (set (reg/v:SI 121 [ incr ])
        (reg:SI 131)) "../Core/Src/sysmem.c":54:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 16 2 17 2 (set (reg/v/f:SI 119 [ max_heap ])
        (minus:SI (reg/f:SI 122)
            (reg/f:SI 123))) "../Core/Src/sysmem.c":58:18 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_DEAD (reg/f:SI 122)
            (expr_list:REG_EQUIV (minus:SI (symbol_ref:SI ("_estack") [flags 0xc0]  <var_decl 0000000002864a20 _estack>)
                    (symbol_ref:SI ("_Min_Stack_Size") [flags 0xc0]  <var_decl 0000000002864ab0 _Min_Stack_Size>))
                (nil)))))
(debug_insn 17 16 18 2 (var_location:SI max_heap (reg/v/f:SI 119 [ max_heap ])) "../Core/Src/sysmem.c":59:18 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../Core/Src/sysmem.c":60:3 -1
     (nil))
(debug_insn 19 18 23 2 (debug_marker) "../Core/Src/sysmem.c":63:3 -1
     (nil))
(jump_insn 23 19 24 2 (parallel [
            (set (pc)
                (if_then_else (ne (reg/f:SI 120 [ <retval> ])
                        (const_int 0 [0]))
                    (label_ref 29)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../Core/Src/sysmem.c":63:6 1025 {*thumb2_cbnz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 751619284 (nil)))
 -> 29)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 27 3 (debug_marker) "../Core/Src/sysmem.c":65:5 -1
     (nil))
(insn 27 25 28 3 (set (reg/f:SI 126)
        (symbol_ref:SI ("_end") [flags 0xc0]  <var_decl 0000000002864990 _end>)) "../Core/Src/sysmem.c":65:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("_end") [flags 0xc0]  <var_decl 0000000002864990 _end>)
        (nil)))
(insn 28 27 4 3 (set (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 126)) "../Core/Src/sysmem.c":65:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 28 29 3 (set (reg/f:SI 120 [ <retval> ])
        (reg/f:SI 126)) "../Core/Src/sysmem.c":65:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (expr_list:REG_EQUAL (symbol_ref:SI ("_end") [flags 0xc0]  <var_decl 0000000002864990 _end>)
            (nil))))
(code_label 29 4 30 4 2 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 4 (debug_marker) "../Core/Src/sysmem.c":69:3 -1
     (nil))
(debug_insn 32 31 33 4 (var_location:SI D#1 (mem/f/c:SI (symbol_ref:SI ("__sbrk_heap_end") [flags 0x82]  <var_decl 0000000002864900 __sbrk_heap_end>) [1 __sbrk_heap_end+0 S4 A32])) "../Core/Src/sysmem.c":69:23 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 116 [ _6 ])
        (plus:SI (reg/f:SI 120 [ <retval> ])
            (reg/v:SI 121 [ incr ]))) "../Core/Src/sysmem.c":69:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 121 [ incr ])
        (nil)))
(insn 34 33 35 4 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 116 [ _6 ])
            (reg/v/f:SI 119 [ max_heap ]))) "../Core/Src/sysmem.c":69:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v/f:SI 119 [ max_heap ])
        (nil)))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "../Core/Src/sysmem.c":69:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 45)
(note 36 35 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 39 36 37 5 NOTE_INSN_DELETED)
(debug_insn 37 39 38 5 (debug_marker) "../Core/Src/sysmem.c":71:5 -1
     (nil))
(call_insn 38 37 88 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005e25700 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/sysmem.c":71:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005e25700 __errno>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 88 38 40 5 (set (reg:SI 132)
        (reg:SI 0 r0)) "../Core/Src/sysmem.c":71:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 40 88 41 5 (set (reg:SI 127)
        (const_int 12 [0xc])) "../Core/Src/sysmem.c":71:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 12 [0xc])
        (nil)))
(insn 41 40 42 5 (set (mem:SI (reg:SI 132) [2 *_7+0 S4 A32])
        (reg:SI 127)) "../Core/Src/sysmem.c":71:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg:SI 127)
            (nil))))
(debug_insn 42 41 5 5 (debug_marker) "../Core/Src/sysmem.c":72:5 -1
     (nil))
(insn 5 42 89 5 (set (reg/f:SI 120 [ <retval> ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/sysmem.c":72:12 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 89 5 90 5 (set (pc)
        (label_ref 57)) "../Core/Src/sysmem.c":72:12 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 90 89 45)
(code_label 45 90 46 6 3 (nil) [1 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 47 46 48 6 (debug_marker) "../Core/Src/sysmem.c":75:3 -1
     (nil))
(debug_insn 48 47 49 6 (var_location:SI prev_heap_end (debug_expr:SI D#1)) "../Core/Src/sysmem.c":75:17 -1
     (nil))
(debug_insn 49 48 51 6 (debug_marker) "../Core/Src/sysmem.c":76:3 -1
     (nil))
(insn 51 49 52 6 (set (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 116 [ _6 ])) "../Core/Src/sysmem.c":76:19 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_DEAD (reg/f:SI 116 [ _6 ])
            (nil))))
(debug_insn 52 51 57 6 (debug_marker) "../Core/Src/sysmem.c":78:3 -1
     (nil))
(code_label 57 52 60 7 1 (nil) [1 uses])
(note 60 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 60 59 7 (set (reg/i:SI 0 r0)
        (reg/f:SI 120 [ <retval> ])) "../Core/Src/sysmem.c":79:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 120 [ <retval> ])
        (nil)))
(insn 59 58 91 7 (use (reg/i:SI 0 r0)) "../Core/Src/sysmem.c":79:1 -1
     (nil))
(note 91 59 0 NOTE_INSN_DELETED)
