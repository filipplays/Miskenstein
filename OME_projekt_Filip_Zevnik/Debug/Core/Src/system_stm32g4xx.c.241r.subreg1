
;; Function SystemInit (SystemInit, funcdef_no=329, decl_uid=6654, cgraph_uid=333, symbol_order=335)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../Core/Src/system_stm32g4xx.c":183:5 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 115)
        (const_int -536810240 [0xffffffffe000ed00])) "../Core/Src/system_stm32g4xx.c":183:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 115)
                (const_int 136 [0x88])) [1 MEM[(struct SCB_Type *)3758157056B].CPACR+0 S4 A64])) "../Core/Src/system_stm32g4xx.c":183:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 114 [ _2 ])
        (ior:SI (reg:SI 113 [ _1 ])
            (const_int 15728640 [0xf00000]))) "../Core/Src/system_stm32g4xx.c":183:16 106 {*iorsi3_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 116)
        (const_int -536810240 [0xffffffffe000ed00])) "../Core/Src/system_stm32g4xx.c":183:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 0 2 (set (mem/v:SI (plus:SI (reg/f:SI 116)
                (const_int 136 [0x88])) [1 MEM[(struct SCB_Type *)3758157056B].CPACR+0 S4 A64])
        (reg:SI 114 [ _2 ])) "../Core/Src/system_stm32g4xx.c":183:16 728 {*thumb2_movsi_vfp}
     (nil))

;; Function SystemCoreClockUpdate (SystemCoreClockUpdate, funcdef_no=330, decl_uid=6656, cgraph_uid=334, symbol_order=336)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 2 8 2 (debug_marker) "../Core/Src/system_stm32g4xx.c":230:3 -1
     (nil))
(debug_insn 8 7 9 2 (debug_marker) "../Core/Src/system_stm32g4xx.c":233:3 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 138)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":233:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 113 [ _1 ])
        (mem/v:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [1 MEM[(struct RCC_TypeDef *)1073876992B].CFGR+0 S4 A64])) "../Core/Src/system_stm32g4xx.c":233:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 114 [ _2 ])
        (and:SI (reg:SI 113 [ _1 ])
            (const_int 12 [0xc]))) "../Core/Src/system_stm32g4xx.c":233:21 90 {*arm_andsi3_insn}
     (nil))
(insn 12 11 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114 [ _2 ])
            (const_int 8 [0x8]))) "../Core/Src/system_stm32g4xx.c":233:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 101)
            (pc))) "../Core/Src/system_stm32g4xx.c":233:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 268435462 (nil))
 -> 101)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114 [ _2 ])
            (const_int 12 [0xc]))) "../Core/Src/system_stm32g4xx.c":233:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Core/Src/system_stm32g4xx.c":233:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 357913950 (nil))
 -> 25)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 114 [ _2 ])
            (const_int 4 [0x4]))) "../Core/Src/system_stm32g4xx.c":233:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 105)
            (pc))) "../Core/Src/system_stm32g4xx.c":233:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 357913950 (nil))
 -> 105)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../Core/Src/system_stm32g4xx.c":269:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 25 5 (set (reg:SI 137 [ pretmp_36 ])
        (mem/c:SI (reg/f:SI 139) [1 SystemCoreClock+0 S4 A32])) "../Core/Src/system_stm32g4xx.c":269:19 728 {*thumb2_movsi_vfp}
     (nil))
      ; pc falls through to BB 12
(code_label 25 22 26 6 7 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 6 (debug_marker) "../Core/Src/system_stm32g4xx.c":247:7 -1
     (nil))
(insn 28 27 29 6 (set (reg/f:SI 140)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":247:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 6 (set (reg:SI 115 [ _3 ])
        (mem/v:SI (plus:SI (reg/f:SI 140)
                (const_int 12 [0xc])) [1 MEM[(struct RCC_TypeDef *)1073876992B].PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32g4xx.c":247:23 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 30 29 31 6 (var_location:SI pllsource (and:SI (reg:SI 115 [ _3 ])
        (const_int 3 [0x3]))) "../Core/Src/system_stm32g4xx.c":247:17 -1
     (nil))
(debug_insn 31 30 32 6 (debug_marker) "../Core/Src/system_stm32g4xx.c":248:7 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 141)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":248:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 6 (set (reg:SI 116 [ _4 ])
        (mem/v:SI (plus:SI (reg/f:SI 141)
                (const_int 12 [0xc])) [1 MEM[(struct RCC_TypeDef *)1073876992B].PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32g4xx.c":248:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 6 (set (reg:SI 142)
        (lshiftrt:SI (reg:SI 116 [ _4 ])
            (const_int 4 [0x4]))) "../Core/Src/system_stm32g4xx.c":248:49 147 {*arm_shiftsi3}
     (nil))
(insn 35 34 36 6 (set (reg:SI 143)
        (and:SI (reg:SI 142)
            (const_int 15 [0xf]))) "../Core/Src/system_stm32g4xx.c":248:49 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 37 6 (set (reg/v:SI 133 [ pllm ])
        (plus:SI (reg:SI 143)
            (const_int 1 [0x1]))) "../Core/Src/system_stm32g4xx.c":248:12 7 {*arm_addsi3}
     (nil))
(debug_insn 37 36 38 6 (var_location:SI pllm (reg/v:SI 133 [ pllm ])) "../Core/Src/system_stm32g4xx.c":248:12 -1
     (nil))
(debug_insn 38 37 39 6 (debug_marker) "../Core/Src/system_stm32g4xx.c":249:7 -1
     (nil))
(insn 39 38 40 6 (set (reg:SI 144 [ pllsource ])
        (and:SI (reg:SI 115 [ _3 ])
            (const_int 3 [0x3]))) "../Core/Src/system_stm32g4xx.c":247:17 90 {*arm_andsi3_insn}
     (nil))
(insn 40 39 41 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 144 [ pllsource ])
            (const_int 2 [0x2]))) "../Core/Src/system_stm32g4xx.c":249:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "../Core/Src/system_stm32g4xx.c":249:10 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 51)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 7 (debug_marker) "../Core/Src/system_stm32g4xx.c":251:9 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 145)
        (const_int 16000000 [0xf42400])) "../Core/Src/system_stm32g4xx.c":251:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 48 7 (set (reg/v:SI 131 [ pllvco ])
        (udiv:SI (reg:SI 145)
            (reg/v:SI 133 [ pllm ]))) "../Core/Src/system_stm32g4xx.c":251:16 163 {udivsi3}
     (nil))
(debug_insn 48 45 51 7 (var_location:SI pllvco (reg/v:SI 131 [ pllvco ])) "../Core/Src/system_stm32g4xx.c":251:16 -1
     (nil))
      ; pc falls through to BB 9
(code_label 51 48 52 8 8 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 53 52 54 8 (debug_marker) "../Core/Src/system_stm32g4xx.c":255:9 -1
     (nil))
(insn 54 53 55 8 (set (reg:SI 147)
        (const_int 8000000 [0x7a1200])) "../Core/Src/system_stm32g4xx.c":255:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 58 8 (set (reg/v:SI 131 [ pllvco ])
        (udiv:SI (reg:SI 147)
            (reg/v:SI 133 [ pllm ]))) "../Core/Src/system_stm32g4xx.c":255:16 163 {udivsi3}
     (nil))
(debug_insn 58 55 59 8 (var_location:SI pllvco (reg/v:SI 131 [ pllvco ])) "../Core/Src/system_stm32g4xx.c":255:16 -1
     (nil))
(code_label 59 58 60 9 9 (nil) [0 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 9 (var_location:SI pllvco (reg/v:SI 131 [ pllvco ])) -1
     (nil))
(debug_insn 62 61 63 9 (debug_marker) "../Core/Src/system_stm32g4xx.c":257:7 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 149)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":257:30 728 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 9 (set (reg:SI 119 [ _7 ])
        (mem/v:SI (plus:SI (reg/f:SI 149)
                (const_int 12 [0xc])) [1 MEM[(struct RCC_TypeDef *)1073876992B].PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32g4xx.c":257:30 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 65 64 66 9 (var_location:SI pllvco (mult:SI (and:SI (lshiftrt:SI (reg:SI 119 [ _7 ])
                (const_int 8 [0x8]))
            (const_int 127 [0x7f]))
        (reg/v:SI 131 [ pllvco ]))) "../Core/Src/system_stm32g4xx.c":257:14 -1
     (nil))
(debug_insn 66 65 67 9 (debug_marker) "../Core/Src/system_stm32g4xx.c":258:7 -1
     (nil))
(insn 67 66 68 9 (set (reg/f:SI 150)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":258:20 728 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 9 (set (reg:SI 122 [ _10 ])
        (mem/v:SI (plus:SI (reg/f:SI 150)
                (const_int 12 [0xc])) [1 MEM[(struct RCC_TypeDef *)1073876992B].PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32g4xx.c":258:20 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 69 68 70 9 (var_location:SI pllr (ashift:SI (plus:SI (and:SI (lshiftrt:SI (reg:SI 122 [ _10 ])
                    (const_int 25 [0x19]))
                (const_int 3 [0x3]))
            (const_int 1 [0x1]))
        (const_int 1 [0x1]))) "../Core/Src/system_stm32g4xx.c":258:12 -1
     (nil))
(debug_insn 70 69 71 9 (debug_marker) "../Core/Src/system_stm32g4xx.c":259:7 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 119 [ _7 ])
            (const_int 8 [0x8]))) "../Core/Src/system_stm32g4xx.c":257:60 147 {*arm_shiftsi3}
     (nil))
(insn 72 71 73 9 (set (reg:SI 152)
        (and:SI (reg:SI 151)
            (const_int 127 [0x7f]))) "../Core/Src/system_stm32g4xx.c":257:60 90 {*arm_andsi3_insn}
     (nil))
(insn 73 72 74 9 (set (reg:SI 153 [ pllvco ])
        (mult:SI (reg/v:SI 131 [ pllvco ])
            (reg:SI 152))) "../Core/Src/system_stm32g4xx.c":257:14 56 {*mul}
     (nil))
(insn 74 73 75 9 (set (reg:SI 154)
        (lshiftrt:SI (reg:SI 122 [ _10 ])
            (const_int 25 [0x19]))) "../Core/Src/system_stm32g4xx.c":258:50 147 {*arm_shiftsi3}
     (nil))
(insn 75 74 76 9 (set (reg:SI 155)
        (and:SI (reg:SI 154)
            (const_int 3 [0x3]))) "../Core/Src/system_stm32g4xx.c":258:50 90 {*arm_andsi3_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 156)
        (plus:SI (reg:SI 155)
            (const_int 1 [0x1]))) "../Core/Src/system_stm32g4xx.c":258:57 7 {*arm_addsi3}
     (nil))
(insn 77 76 78 9 (set (reg:SI 157 [ pllr ])
        (ashift:SI (reg:SI 156)
            (const_int 1 [0x1]))) "../Core/Src/system_stm32g4xx.c":258:12 147 {*arm_shiftsi3}
     (nil))
(insn 78 77 80 9 (set (reg:SI 137 [ pretmp_36 ])
        (udiv:SI (reg:SI 153 [ pllvco ])
            (reg:SI 157 [ pllr ]))) "../Core/Src/system_stm32g4xx.c":259:31 163 {udivsi3}
     (nil))
(debug_insn 80 78 101 9 (debug_marker) "../Core/Src/system_stm32g4xx.c":260:7 -1
     (nil))
      ; pc falls through to BB 12
(code_label 101 80 100 10 10 (nil) [1 uses])
(note 100 101 3 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 3 100 105 10 (set (reg:SI 137 [ pretmp_36 ])
        (const_int 8000000 [0x7a1200])) "../Core/Src/system_stm32g4xx.c":233:3 728 {*thumb2_movsi_vfp}
     (nil))
      ; pc falls through to BB 12
(code_label 105 3 104 11 11 (nil) [1 uses])
(note 104 105 4 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 4 104 81 11 (set (reg:SI 137 [ pretmp_36 ])
        (const_int 16000000 [0xf42400])) "../Core/Src/system_stm32g4xx.c":233:3 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 81 4 82 12 6 (nil) [0 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 83 82 84 12 (debug_marker) "../Core/Src/system_stm32g4xx.c":267:3 -1
     (nil))
(insn 84 83 85 12 (set (reg/f:SI 158)
        (const_int 1073876992 [0x40021000])) "../Core/Src/system_stm32g4xx.c":267:28 728 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 95 12 (set (reg:SI 126 [ _15 ])
        (mem/v:SI (plus:SI (reg/f:SI 158)
                (const_int 8 [0x8])) [1 MEM[(struct RCC_TypeDef *)1073876992B].CFGR+0 S4 A64])) "../Core/Src/system_stm32g4xx.c":267:28 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 95 85 86 12 (var_location:SI D#1 (lshiftrt:SI (reg:SI 126 [ _15 ])
        (const_int 4 [0x4]))) "../Core/Src/system_stm32g4xx.c":270:1 -1
     (nil))
(debug_insn 86 95 87 12 (var_location:SI tmp (zero_extend:SI (mem/u:QI (plus:SI (and:SI (debug_expr:SI D#1)
                    (const_int 15 [0xf]))
                (symbol_ref:SI ("AHBPrescTable") [flags 0x82]  <var_decl 0000000005f27cf0 AHBPrescTable>)) [0 AHBPrescTable[_17]+0 S1 A8]))) "../Core/Src/system_stm32g4xx.c":267:7 -1
     (nil))
(debug_insn 87 86 88 12 (debug_marker) "../Core/Src/system_stm32g4xx.c":269:3 -1
     (nil))
(insn 88 87 89 12 (set (reg/f:SI 159)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../Core/Src/system_stm32g4xx.c":269:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 12 (set (reg/f:SI 160)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) "../Core/Src/system_stm32g4xx.c":267:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 12 (set (reg:SI 161)
        (lshiftrt:SI (reg:SI 126 [ _15 ])
            (const_int 4 [0x4]))) "../Core/Src/system_stm32g4xx.c":267:52 147 {*arm_shiftsi3}
     (nil))
(insn 91 90 92 12 (set (reg:SI 162)
        (and:SI (reg:SI 161)
            (const_int 15 [0xf]))) "../Core/Src/system_stm32g4xx.c":267:52 90 {*arm_andsi3_insn}
     (nil))
(insn 92 91 93 12 (set (reg:SI 163 [ tmp ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 160)
                    (reg:SI 162)) [0 AHBPrescTable[_17]+0 S1 A8]))) "../Core/Src/system_stm32g4xx.c":267:7 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 93 92 94 12 (set (reg:SI 164)
        (lshiftrt:SI (reg:SI 137 [ pretmp_36 ])
            (reg:SI 163 [ tmp ]))) "../Core/Src/system_stm32g4xx.c":269:19 147 {*arm_shiftsi3}
     (nil))
(insn 94 93 0 12 (set (mem/c:SI (reg/f:SI 159) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 164)) "../Core/Src/system_stm32g4xx.c":269:19 728 {*thumb2_movsi_vfp}
     (nil))
