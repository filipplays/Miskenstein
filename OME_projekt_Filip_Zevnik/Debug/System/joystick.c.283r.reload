
;; Function JOY_init (JOY_init, funcdef_no=604, decl_uid=10115, cgraph_uid=608, symbol_order=611)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) m  (1) r {*thumb2_movhi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=4
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=4
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non input pseudo reload: reject++
            alt=8,overall=607,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=9,losers=1 -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 28:  (0) w  (1) UvTu {*movdi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 38:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=4
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=4
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
          alt=6,overall=6,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=609,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
          alt=11,overall=0,losers=0,rld_nregs=0
	 Choosing alt 11 in insn 29:  (0) Uv  (1) w {*movdi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 58:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 68: point = 0, n_alt = 1
   Insn 67: point = 0, n_alt = 1
   Insn 65: point = 0, n_alt = -1
   Insn 64: point = 0, n_alt = 5
   Insn 60: point = 1, n_alt = -1
   Insn 59: point = 1, n_alt = 5
   Insn 58: point = 1, n_alt = 4
   Insn 57: point = 1, n_alt = 1
   Insn 51: point = 1, n_alt = -1
   Insn 50: point = 1, n_alt = 5
   Insn 49: point = 1, n_alt = 1
   Insn 45: point = 1, n_alt = -1
   Insn 44: point = 1, n_alt = 5
   Insn 32: point = 1, n_alt = 7
   Insn 31: point = 2, n_alt = 5
   Insn 29: point = 3, n_alt = 11
   Insn 43: point = 4, n_alt = 5
   Insn 38: point = 4, n_alt = 7
   Insn 28: point = 5, n_alt = 10
   Insn 20: point = 6, n_alt = 4
   Insn 18: point = 7, n_alt = 1
   Insn 14: point = 8, n_alt = 7
   Insn 10: point = 9, n_alt = 7
   Insn 42: point = 10, n_alt = 1
   Insn 35: point = 10, n_alt = 7
   Insn 13: point = 11, n_alt = 1
   Insn 9: point = 12, n_alt = 5
   Insn 73: point = 13, n_alt = -2
   Insn 72: point = 14, n_alt = -2
   Insn 8: point = 15, n_alt = 5
 r118: [0..15]
 r119: [9..12]
 r121: [8..11]
 r124: [6..7]
 r126: [3..5]
 r128: [1..2]
 r141: [10..14]
 r142: [4..13]
Compressing live ranges: from 16 to 8 - 50%
Ranges after the compression:
 r118: [0..7]
 r119: [6..7]
 r121: [6..7]
 r124: [4..5]
 r126: [2..3]
 r128: [0..1]
 r141: [6..7]
 r142: [2..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 64
changing reg in insn 59
changing reg in insn 58
changing reg in insn 50
changing reg in insn 38
changing reg in insn 35
changing reg in insn 32
changing reg in insn 29
changing reg in insn 20
changing reg in insn 14
changing reg in insn 10
changing reg in insn 73
changing reg in insn 72
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 72
changing reg in insn 35
changing reg in insn 73
changing reg in insn 38
deleting insn with uid = 72.
deleting insn with uid = 73.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


JOY_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 30 [s14] 31 [s15]
;;  ref usage 	r0={11d,6u} r1={9d,4u} r2={8d,2u} r3={9d,3u} r4={1d,11u} r5={1d,1u} r12={10d} r13={1d,7u} r14={6d} r15={5d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={7d,1u} r31={7d,1u} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r104={5d} r105={5d} r106={5d} 
;;    total ref usage 480{444d,36u,0e} in 45{40 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 40 2 NOTE_INSN_FUNCTION_BEG)
(note 40 4 41 2 NOTE_INSN_DELETED)
(note 41 40 48 2 NOTE_INSN_DELETED)
(note 48 41 54 2 NOTE_INSN_DELETED)
(note 54 48 56 2 NOTE_INSN_DELETED)
(note 56 54 63 2 NOTE_INSN_DELETED)
(note 63 56 7 2 NOTE_INSN_DELETED)
(debug_insn 7 63 8 2 (debug_marker) "../System/joystick.c":185:3 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 4 r4 [118])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":185:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 9 8 13 2 (set (reg:SI 5 r5 [119])
        (const_int 1207961600 [0x48000800])) "../System/joystick.c":185:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1207961600 [0x48000800])
        (nil)))
(insn 13 9 35 2 (set (reg:SI 3 r3 [121])
        (const_int 8192 [0x2000])) "../System/joystick.c":186:23 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 8192 [0x2000])
        (nil)))
(insn 35 13 42 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 32 [0x20])) [7 joystick.ADC+0 S4 A64])
        (reg:SI 0 r0 [141])) "../System/joystick.c":208:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 42 35 10 2 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) "../System/joystick.c":217:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 42 11 2 (set (mem/f/c:SI (reg/f:SI 4 r4 [118]) [2 joystick.button.port+0 S4 A64])
        (reg:SI 5 r5 [119])) "../System/joystick.c":185:24 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 11 10 14 2 (debug_marker) "../System/joystick.c":186:3 -1
     (nil))
(insn 14 11 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])
        (reg:SI 3 r3 [121])) "../System/joystick.c":186:23 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 15 14 16 2 (debug_marker) "../System/joystick.c":191:3 -1
     (nil))
(debug_insn 16 15 18 2 (debug_marker) "../System/joystick.c":192:3 -1
     (nil))
(insn 18 16 20 2 (set (reg:SI 3 r3 [124])
        (const_int 0 [0])) "../System/joystick.c":192:29 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 20 18 21 2 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 8 [0x8])) [0 MEM <vector(2) unsigned char> [(<unnamed type> *)&joystick + 8B]+0 S2 A64])
        (reg:HI 3 r3 [124])) "../System/joystick.c":192:29 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 21 20 22 2 (debug_marker) "../System/joystick.c":196:3 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/joystick.c":197:3 -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "../System/joystick.c":199:3 -1
     (nil))
(debug_insn 24 23 25 2 (debug_marker) "../System/joystick.c":200:3 -1
     (nil))
(debug_insn 25 24 26 2 (debug_marker) "../System/joystick.c":202:3 -1
     (nil))
(debug_insn 26 25 28 2 (debug_marker) "../System/joystick.c":203:3 -1
     (nil))
(insn 28 26 38 2 (set (reg:DI 30 s14 [126])
        (const_int 931977950176936852 [0xcef0d0202cb0394])) "../System/joystick.c":196:32 729 {*movdi_vfp}
     (expr_list:REG_EQUIV (const_int 931977950176936852 [0xcef0d0202cb0394])
        (nil)))
(insn 38 28 43 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 28 [0x1c])) [6 joystick.timer+0 S4 A32])
        (reg:SI 1 r1 [142])) "../System/joystick.c":209:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 43 38 29 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) "../System/joystick.c":217:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 29 43 31 2 (set (mem/c:DI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 16 [0x10])) [5 MEM <vector(4) short unsigned int> [(short unsigned int *)&joystick + 16B]+0 S8 A64])
        (reg:DI 30 s14 [126])) "../System/joystick.c":196:32 729 {*movdi_vfp}
     (nil))
(insn 31 29 32 2 (set (reg:SI 3 r3 [128])
        (const_int 170133870 [0xa24096e])) "../System/joystick.c":202:34 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 170133870 [0xa24096e])
        (nil)))
(insn 32 31 33 2 (set (mem/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 24 [0x18])) [5 MEM <unsigned int> [(short unsigned int *)&joystick + 24B]+0 S4 A64])
        (reg:SI 3 r3 [128])) "../System/joystick.c":202:34 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 33 32 36 2 (debug_marker) "../System/joystick.c":208:3 -1
     (nil))
(debug_insn 36 33 39 2 (debug_marker) "../System/joystick.c":209:3 -1
     (nil))
(debug_insn 39 36 44 2 (debug_marker) "../System/joystick.c":217:3 -1
     (nil))
(insn 44 39 45 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":217:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(call_insn 45 44 46 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("BUF_init") [flags 0x41]  <function_decl 0000000007b7c700 BUF_init>) [0 BUF_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":217:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_init") [flags 0x41]  <function_decl 0000000007b7c700 BUF_init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 46 45 49 2 (debug_marker) "../System/joystick.c":229:3 -1
     (nil))
(insn 49 46 50 2 (set (reg:SI 1 r1)
        (const_int 127 [0x7f])) "../System/joystick.c":229:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 2 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 32 [0x20])) [7 joystick.ADC+0 S4 A64])) "../System/joystick.c":229:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 51 50 52 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_ADCEx_Calibration_Start") [flags 0x41]  <function_decl 000000000759d000 HAL_ADCEx_Calibration_Start>) [0 HAL_ADCEx_Calibration_Start S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":229:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_ADCEx_Calibration_Start") [flags 0x41]  <function_decl 000000000759d000 HAL_ADCEx_Calibration_Start>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 52 51 57 2 (debug_marker) "../System/joystick.c":238:3 -1
     (nil))
(insn 57 52 58 2 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) "../System/joystick.c":238:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 2 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 4 r4 [118])
            (const_int 12 [0xc]))) "../System/joystick.c":238:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))
(insn 59 58 60 2 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 32 [0x20])) [7 joystick.ADC+0 S4 A64])) "../System/joystick.c":238:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 60 59 61 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_ADC_Start_DMA") [flags 0x41]  <function_decl 00000000075a5500 HAL_ADC_Start_DMA>) [0 HAL_ADC_Start_DMA S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":238:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_ADC_Start_DMA") [flags 0x41]  <function_decl 00000000075a5500 HAL_ADC_Start_DMA>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 61 60 64 2 (debug_marker) "../System/joystick.c":243:3 -1
     (nil))
(insn 64 61 65 2 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 4 r4 [118])
                (const_int 28 [0x1c])) [6 joystick.timer+0 S4 A32])) "../System/joystick.c":243:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 65 64 66 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_TIM_Base_Start") [flags 0x41]  <function_decl 000000000789ff00 HAL_TIM_Base_Start>) [0 HAL_TIM_Base_Start S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":243:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_TIM_Base_Start") [flags 0x41]  <function_decl 000000000789ff00 HAL_TIM_Base_Start>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 66 65 67 2 (debug_marker) "../System/joystick.c":252:2 -1
     (nil))
(insn 67 66 68 2 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) "../System/joystick.c":252:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 68 67 69 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/joystick.c":252:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 69 68 76)
(note 76 69 0 NOTE_INSN_DELETED)

;; Function JOY_scan_button (JOY_scan_button, funcdef_no=605, decl_uid=10117, cgraph_uid=609, symbol_order=612)

      Creating newreg=135
Removing SCRATCH in insn #25 (nop 0)
rescanning insn with uid = 25.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) r  (2) r {*andsi_notsi_si_compare0_scratch}
      Change to class GENERAL_REGS for r135
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=11,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 47:  (0) r  (1) I  (2) rI {*thumb2_movsicc_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 28:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (1) US {*sibcall_value_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 40: point = 0, n_alt = 1
   Insn 38: point = 0, n_alt = 1
   Insn 39: point = 0, n_alt = 5
  BB 2
   Insn 33: point = 0, n_alt = -1
   Insn 32: point = 0, n_alt = 3
   Insn 31: point = 1, n_alt = 1
   Insn 28: point = 3, n_alt = 6
   Insn 10: point = 4, n_alt = 6
   Insn 47: point = 5, n_alt = 6
   Insn 25: point = 6, n_alt = 0
   Insn 8: point = 8, n_alt = 1
   Insn 20: point = 9, n_alt = 5
   Insn 15: point = 11, n_alt = 5
   Insn 13: point = 12, n_alt = 5
   Insn 6: point = 13, n_alt = 5
 r114: [10..12]
 r115: [7..11]
 r119: [7..9]
 r121: [2..13]
 r123: [4..8]
 r129: [3..5]
 r132: [0..1]
 r135: [6..6]
Compressing live ranges: from 14 to 9 - 64%
Ranges after the compression:
 r114: [7..8]
 r115: [5..8]
 r119: [5..6]
 r121: [2..8]
 r123: [2..6]
 r129: [2..3]
 r132: [0..1]
 r135: [4..4]

********** Assignment #1: **********

	 Assigning to 135 (cl=GENERAL_REGS, orig=135, freq=1000, tfirst=135, tfreq=1000)...
	   Assign 2 to reload r135 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 50
changing reg in insn 20
changing reg in insn 15
changing reg in insn 25
changing reg in insn 49
changing reg in insn 20
changing reg in insn 25
changing reg in insn 6
changing reg in insn 31
changing reg in insn 28
changing reg in insn 15
changing reg in insn 13
changing reg in insn 10
changing reg in insn 8
changing reg in insn 15
changing reg in insn 13
changing reg in insn 8
changing reg in insn 47
changing reg in insn 31
changing reg in insn 32
changing reg in insn 25


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 5 (    1)


JOY_scan_button

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 100 [cc]
;;  ref usage 	r0={4d,2u} r1={5d,4u} r2={5d,3u} r3={4d,7u,2e} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 140{115d,23u,2e} in 28{27 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 24 2 NOTE_INSN_FUNCTION_BEG)
(note 24 2 5 2 NOTE_INSN_DELETED)
(debug_insn 5 24 6 2 (debug_marker) "../System/joystick.c":279:2 -1
     (nil))
(insn 6 5 13 2 (set (reg/f:SI 3 r3 [121])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":279:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 13 6 15 2 (set (reg/f:SI 1 r1 [orig:114 _2 ] [114])
        (mem/f/c:SI (reg/f:SI 3 r3 [121]) [2 joystick.button.port+0 S4 A64])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 3 r3 [121]) [2 joystick.button.port+0 S4 A64])
        (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [2 joystick.button.port+0 S4 A64])
            (nil))))
(insn 15 13 50 2 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (mem/c:SI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [3 joystick.button.pin+0 S4 A32])
            (nil))))
(debug_insn 50 15 20 2 (var_location:SI D#2 (reg/f:SI 1 r1 [orig:114 _2 ] [114])) -1
     (nil))
(insn 20 50 8 2 (set (reg:SI 0 r0 [orig:119 _10 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:114 _2 ] [114])
                (const_int 16 [0x10])) [3 _2->IDR+0 S4 A32])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 8 20 49 2 (set (reg:SI 1 r1 [orig:123 joystick.button.state_new ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [121])
                    (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64]))) "../System/joystick.c":279:28 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 joystick.button.state_new+0 S1 A64]))
        (nil)))
(debug_insn 49 8 25 2 (var_location:SI D#1 (reg:SI 2 r2 [orig:115 _3 ] [115])) -1
     (nil))
(insn 25 49 47 2 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (and:SI (not:SI (reg:SI 0 r0 [orig:119 _10 ] [119]))
                        (reg:SI 2 r2 [orig:115 _3 ] [115]))
                    (const_int 0 [0])))
            (clobber (reg:SI 2 r2 [135]))
        ]) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 105 {*andsi_notsi_si_compare0_scratch}
     (nil))
(insn 47 25 10 2 (set (reg:SI 2 r2 [129])
        (if_then_else:SI (eq:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (const_int 1 [0x1])
            (const_int 0 [0]))) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 986 {*thumb2_movsicc_insn}
     (nil))
(insn 10 47 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 9 [0x9])) [0 joystick.button.state_old+0 S1 A8])
        (reg:QI 1 r1 [orig:123 joystick.button.state_new ] [123])) "../System/joystick.c":279:28 263 {*arm_movqi_insn}
     (nil))
(debug_insn 11 10 16 2 (debug_marker) "../System/joystick.c":282:2 -1
     (nil))
(debug_insn 16 11 17 2 (var_location:SI GPIOx (debug_expr:SI D#2)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI PinMask (debug_expr:SI D#1)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker:BLK) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":813:26 -1
     (nil))
(debug_insn 19 18 21 2 (debug_marker) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:3 -1
     (nil))
(debug_insn 21 19 22 2 (var_location:SI GPIOx (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 22 21 28 2 (var_location:SI PinMask (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(insn 28 22 29 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [121])
                (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64])
        (reg:QI 2 r2 [129])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 263 {*arm_movqi_insn}
     (nil))
(debug_insn 29 28 31 2 (debug_marker) "../System/joystick.c":288:2 -1
     (nil))
(insn 31 29 32 2 (set (reg:SI 3 r3 [orig:132 joystick+8 ] [132])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 3 r3 [121])
                    (const_int 8 [0x8])) [4 joystick+8 S2 A64]))) "../System/joystick.c":288:5 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [4 joystick+8 S2 A64]))
        (nil)))
(insn 32 31 33 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:132 joystick+8 ] [132])
            (const_int 256 [0x100]))) "../System/joystick.c":288:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 44)
            (pc))) "../System/joystick.c":288:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 44)
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 35 34 36 3 (debug_marker:BLK) "../System/joystick.c":274:6 -1
     (nil))
(debug_insn 36 35 39 3 (debug_marker) "../System/joystick.c":294:3 -1
     (nil))
(insn 39 36 38 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 38 39 40 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 40 38 41 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>) [0 BUF_store_byte S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/joystick.c":294:3 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(barrier 41 40 44)
(code_label 44 41 45 4 6 (nil) [1 uses])
(note 45 44 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 48 45 51 NOTE_INSN_DELETED)
(note 51 48 0 NOTE_INSN_DELETED)

;; Function JOY_get_pressed_key (JOY_get_pressed_key, funcdef_no=606, decl_uid=10119, cgraph_uid=610, symbol_order=613)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
          alt=3,overall=8,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 11:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = -2
  BB 3
   Insn 37: point = 2, n_alt = -1
   Insn 22: point = 2, n_alt = 1
  BB 4
   Insn 3: point = 3, n_alt = 1
  BB 2
   Insn 19: point = 4, n_alt = 0
   Insn 36: point = 5, n_alt = -2
   Insn 13: point = 6, n_alt = -1
   Insn 11: point = 6, n_alt = 4
   Insn 12: point = 6, n_alt = 5
 r114: [0..3]
 r119: [4..5]
Compressing live ranges: from 6 to 4 - 66%
Ranges after the compression:
 r114: [0..1]
 r119: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 3
changing reg in insn 22
changing reg in insn 29
changing reg in insn 36
changing reg in insn 19
deleting insn with uid = 36.
deleting insn with uid = 29.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)


JOY_get_pressed_key

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={2d} r3={2d} r12={2d} r13={1d,8u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d} r101={1d} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 9 2 NOTE_INSN_FUNCTION_BEG)
(note 9 2 14 2 NOTE_INSN_DELETED)
(note 14 9 18 2 NOTE_INSN_DELETED)
(note 18 14 6 2 NOTE_INSN_DELETED)
(debug_insn 6 18 7 2 (debug_marker) "../System/joystick.c":311:2 -1
     (nil))
(debug_insn 7 6 8 2 (debug_marker) "../System/joystick.c":312:2 -1
     (nil))
(debug_insn 8 7 12 2 (debug_marker) "../System/joystick.c":317:2 -1
     (nil))
(insn 12 8 11 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":317:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 12 13 2 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 7 [0x7]))) "../System/joystick.c":317:16 7 {*arm_addsi3}
     (nil))
(call_insn 13 11 16 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>) [0 BUF_get_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":317:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 16 13 17 2 (var_location:QI return_code (reg:QI 0 r0 [119])) "../System/joystick.c":317:16 -1
     (nil))
(debug_insn 17 16 19 2 (debug_marker) "../System/joystick.c":322:2 -1
     (nil))
(jump_insn 19 17 20 2 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [119])
                        (const_int 0 [0]))
                    (label_ref:SI 35)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/joystick.c":322:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 35)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 3 (debug_marker) "../System/joystick.c":326:3 -1
     (nil))
(insn 22 21 37 3 (set (reg:SI 0 r0 [orig:114 <retval> ] [114])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 7 [0x7])) [0 pressed_button+0 S1 A8]))) "../System/joystick.c":326:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 37 22 38 3 (set (pc)
        (label_ref 23)) "../System/joystick.c":326:10 284 {*arm_jump}
     (nil)
 -> 23)
(barrier 38 37 35)
(code_label 35 38 34 4 13 (nil) [1 uses])
(note 34 35 3 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 3 34 23 4 (set (reg:SI 0 r0 [orig:114 <retval> ] [114])
        (const_int 2 [0x2])) "../System/joystick.c":334:10 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 23 3 24 5 12 (nil) [1 uses])
(note 24 23 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 24 39 5 (use (reg/i:SI 0 r0)) "../System/joystick.c":337:1 -1
     (nil))
(note 39 30 40 NOTE_INSN_DELETED)
(note 40 39 0 NOTE_INSN_DELETED)

;; Function JOY_get_button_state (JOY_get_button_state, funcdef_no=607, decl_uid=10121, cgraph_uid=611, symbol_order=614)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 1
   Insn 6: point = 1, n_alt = 5
 r115: [0..1]
Compressing live ranges: from 2 to 2 - 100%
Ranges after the compression:
 r115: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 14


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


JOY_get_button_state

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 3 [r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={2d,1u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 29{24d,5u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
(note 7 2 9 2 NOTE_INSN_DELETED)
(note 9 7 5 2 NOTE_INSN_DELETED)
(debug_insn 5 9 6 2 (debug_marker) "../System/joystick.c":345:2 -1
     (nil))
(insn 6 5 14 2 (set (reg/f:SI 3 r3 [115])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":345:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 14 6 15 2 (set (reg/i:SI 0 r0)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [115])
                    (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64]))) "../System/joystick.c":346:1 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 14 17 2 (use (reg/i:SI 0 r0)) "../System/joystick.c":346:1 -1
     (nil))
(note 17 15 18 NOTE_INSN_DELETED)
(note 18 17 0 NOTE_INSN_DELETED)

;; Function JOY_get_axis_position (JOY_get_axis_position, funcdef_no=609, decl_uid=10125, cgraph_uid=613, symbol_order=616)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 18:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) r {*arm_cmpsi_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 33:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) r {*arm_cmpsi_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 45:  (0) r  (1) r  (2) r {*arm_subsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 46:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=152 from oldreg=141, assigning class VFP_LO_REGS to r152
   46: r142:SF=float(r152:SI)
      REG_DEAD r141:SI
    Inserting insn reload before:
   82: r152:SI=r141:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 82:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 47:  (0) =t  (1) t {floatunssisf2}
      Creating newreg=153 from oldreg=120, assigning class VFP_LO_REGS to r153
   47: r143:SF=uns_float(r153:SI)
      REG_DEAD r120:SI
    Inserting insn reload before:
   83: r153:SI=r120:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 83:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 51:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=154 from oldreg=148, assigning class VFP_LO_REGS to r154
   51: r154:SI=fix(fix(r145:SF))
      REG_DEAD r145:SF
    Inserting insn reload after:
   84: r148:SI=r154:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 84:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3 4
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 148 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 61: point = 0, n_alt = -1
   Insn 60: point = 0, n_alt = -2
  BB 5
   Insn 78: point = 2, n_alt = -1
   Insn 4: point = 2, n_alt = 1
  BB 4
   Insn 76: point = 3, n_alt = -1
   Insn 53: point = 3, n_alt = 1
   Insn 84: point = 5, n_alt = 13
   Insn 51: point = 7, n_alt = 0
   Insn 50: point = 9, n_alt = 0
   Insn 48: point = 11, n_alt = 0
   Insn 49: point = 12, n_alt = 3
   Insn 47: point = 13, n_alt = 0
   Insn 83: point = 15, n_alt = 9
	Hard reg 2 is preferable by r153 with profit 429
   Insn 46: point = 17, n_alt = 0
   Insn 82: point = 19, n_alt = 9
	Hard reg 3 is preferable by r152 with profit 429
   Insn 45: point = 21, n_alt = 6
  BB 6
   Insn 5: point = 24, n_alt = 1
  BB 3
   Insn 42: point = 25, n_alt = -1
   Insn 41: point = 25, n_alt = 1
   Insn 34: point = 26, n_alt = 1
   Insn 40: point = 28, n_alt = 1
   Insn 33: point = 30, n_alt = 2
   Insn 39: point = 32, n_alt = 1
  BB 2
   Insn 30: point = 35, n_alt = -1
   Insn 29: point = 35, n_alt = 1
   Insn 19: point = 35, n_alt = 1
   Insn 15: point = 36, n_alt = 1
   Insn 18: point = 38, n_alt = 4
   Insn 14: point = 39, n_alt = 1
   Insn 2: point = 40, n_alt = -2
   Insn 71: point = 42, n_alt = -2
   Insn 11: point = 43, n_alt = 5
 r114: [25..36] [22..23]
 r116: [25..35] [22..23]
 r120: [25..26] [16..23]
 r126: [24..24] [0..3]
 r127: [31..40]
 r128: [27..43]
 r130: [37..39]
 r133: [33..38]
 r135: [27..30]
 r138: [29..32]
 r140: [25..28]
 r141: [20..21]
 r142: [11..17]
 r143: [11..13]
 r144: [10..11]
 r145: [8..9]
 r146: [10..12]
 r148: [4..5]
 r150: [41..42]
 r152: [18..19]
 r153: [14..15]
 r154: [6..7]
Compressing live ranges: from 44 to 36 - 81%
Ranges after the compression:
 r114: [22..31] [19..20]
 r116: [22..31] [19..20]
 r120: [22..23] [13..20]
 r126: [21..21] [0..1]
 r127: [28..33]
 r128: [24..35]
 r130: [32..33]
 r133: [30..33]
 r135: [24..27]
 r138: [26..29]
 r140: [22..25]
 r141: [17..18]
 r142: [9..14]
 r143: [9..10]
 r144: [8..9]
 r145: [6..7]
 r146: [8..10]
 r148: [2..3]
 r150: [34..35]
 r152: [15..16]
 r153: [11..12]
 r154: [4..5]

********** Assignment #1: **********

	 Assigning to 152 (cl=VFP_LO_REGS, orig=141, freq=858, tfirst=152, tfreq=858)...
	   Assign 31 to reload r152 (freq=858)
	 Assigning to 153 (cl=VFP_LO_REGS, orig=120, freq=858, tfirst=153, tfreq=858)...
	   Assign 30 to reload r153 (freq=858)
	 Assigning to 154 (cl=VFP_LO_REGS, orig=148, freq=858, tfirst=154, tfreq=858)...
	   Assign 31 to reload r154 (freq=858)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)

Cands:

BB 2:
  register live in: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114 116 127 128 133
  changed regs: 114 116 127 128 130 133 150
  dead regs: 0 [r0] 100 [cc] 130 150

BB 3:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114 116 127 128 133
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114 116 120
  changed regs: 120 135 138 140
  dead regs: 100 [cc] 127 128 133 135 138 140

BB 4:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114 116 120
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
  changed regs: 126 141 142 143 144 145 146 148 152 153 154
  dead regs: 114 116 120 141 142 143 144 145 146 148 152 153 154

BB 5:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
  changed regs: 126
  dead regs:

BB 6:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
  changed regs: 126
  dead regs:

BB 7:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 126
subreg regs:
  Slot 0 regnos (width = 0):	 148
Changing spilled pseudos to memory in insn #84
Memory subreg was simplified in insn #53
Changing spilled pseudos to memory in insn #53
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 84:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=8)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 15
changing reg in insn 45
changing reg in insn 41
changing reg in insn 29
changing reg in insn 19
changing reg in insn 45
changing reg in insn 29
changing reg in insn 34
changing reg in insn 53
changing reg in insn 5
changing reg in insn 4
changing reg in insn 60
changing reg in insn 2
changing reg in insn 14
changing reg in insn 33
changing reg in insn 23
changing reg in insn 18
changing reg in insn 11
changing reg in insn 39
changing reg in insn 14
changing reg in insn 34
changing reg in insn 19
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 39
changing reg in insn 19
changing reg in insn 19
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 49
changing reg in insn 50
changing reg in insn 71
changing reg in insn 2
deleting insn with uid = 71.
deleting insn with uid = 2.
deleting insn with uid = 60.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


JOY_get_axis_position

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 100 [cc]
;;  ref usage 	r0={5d,7u,1e} r1={4d,4u,1e} r2={3d,5u} r3={4d,6u} r12={1d,3u} r13={1d,9u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={2d,1u} r29={2d,1u,1e} r30={3d,2u} r31={5d,4u} r100={2d,2u} 
;;    total ref usage 92{45d,44u,3e} in 43{43 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 12 2 NOTE_INSN_FUNCTION_BEG)
(note 12 3 13 2 NOTE_INSN_DELETED)
(note 13 12 8 2 NOTE_INSN_DELETED)
(debug_insn 8 13 9 2 (debug_marker) "../System/joystick.c":466:2 -1
     (nil))
(debug_insn 9 8 11 2 (debug_marker) "../System/joystick.c":471:2 -1
     (nil))
(insn 11 9 14 2 (set (reg/f:SI 2 r2 [128])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":471:52 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 14 11 18 2 (set (reg/f:SI 3 r3 [130])
        (plus:SI (ashift:SI (reg/v:SI 0 r0 [orig:127 axis ] [127])
                (const_int 1 [0x1]))
            (reg/f:SI 2 r2 [128]))) "../System/joystick.c":471:52 318 {*add_shiftsi}
     (nil))
(insn 18 14 15 2 (set (reg:SI 1 r1 [133])
        (plus:SI (reg/v:SI 0 r0 [orig:127 axis ] [127])
            (const_int 8 [0x8]))) "../System/joystick.c":471:86 7 {*arm_addsi3}
     (nil))
(insn 15 18 16 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 3 r3 [130])
                    (const_int 12 [0xc])) [5 joystick.position_raw[_1]+0 S2 A16]))) "../System/joystick.c":471:52 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 16 15 19 2 (var_location:SI D#10 (zero_extend:SI (reg:HI 3 r3 [orig:114 _2 ] [114]))) "../System/joystick.c":471:52 -1
     (nil))
(insn 19 16 20 2 (set (reg:SI 12 ip [orig:116 _4 ] [116])
        (zero_extend:SI (mem:HI (plus:SI (mult:SI (reg:SI 1 r1 [133])
                        (const_int 2 [0x2]))
                    (reg/f:SI 2 r2 [128])) [5 joystick.position_raw_min[_1]+0 S2 A16]))) "../System/joystick.c":471:86 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem:HI (plus:SI (mult:SI (reg:SI 1 r1 [133])
                        (const_int 2 [0x2]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [5 joystick.position_raw_min[_1]+0 S2 A16]))
        (nil)))
(debug_insn 20 19 21 2 (var_location:SI D#9 (zero_extend:SI (reg:HI 12 ip [orig:116 _4 ] [116]))) "../System/joystick.c":471:86 -1
     (nil))
(debug_insn 21 20 22 2 (var_location:SI D#8 (minus:SI (debug_expr:SI D#10)
        (debug_expr:SI D#9))) "../System/joystick.c":471:59 -1
     (nil))
(debug_insn 22 21 23 2 (var_location:SF D#7 (float:SF (debug_expr:SI D#8))) "../System/joystick.c":471:23 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:HI D#6 (mem:HI (plus:SI (ashift:SI (plus:SI (reg/v:SI 0 r0 [orig:127 axis ] [127])
                    (const_int 12 [0xc]))
                (const_int 1 [0x1]))
            (symbol_ref:SI ("joystick") [flags 0x82]  <var_decl 0000000007b6a1b0 joystick>)) [5 joystick.position_raw_range[_1]+0 S2 A16])) "../System/joystick.c":471:130 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SF D#5 (unsigned_float:SF (debug_expr:HI D#6))) "../System/joystick.c":471:96 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:SF D#4 (div:SF (debug_expr:SF D#7)
        (debug_expr:SF D#5))) "../System/joystick.c":471:94 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SF D#3 (mult:SF (debug_expr:SF D#4)
        (const_double:SF 1.0e+2 [0x0.c8p+7]))) "../System/joystick.c":471:138 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:HI relative_position (fix:HI (debug_expr:SF D#3))) "../System/joystick.c":471:20 -1
     (nil))
(debug_insn 28 27 29 2 (debug_marker) "../System/joystick.c":478:3 -1
     (nil))
(insn 29 28 30 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (reg:SI 12 ip [orig:116 _4 ] [116]))) "../System/joystick.c":478:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 66)
            (pc))) "../System/joystick.c":478:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 66)
(note 31 30 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 38 31 39 3 NOTE_INSN_DELETED)
(insn 39 38 33 3 (set (reg/f:SI 1 r1 [138])
        (plus:SI (ashift:SI (reg:SI 1 r1 [133])
                (const_int 1 [0x1]))
            (reg/f:SI 2 r2 [128]))) "../System/joystick.c":484:68 318 {*add_shiftsi}
     (nil))
(insn 33 39 40 3 (set (reg:SI 0 r0 [135])
        (plus:SI (reg/v:SI 0 r0 [orig:127 axis ] [127])
            (const_int 12 [0xc]))) "../System/joystick.c":471:130 7 {*arm_addsi3}
     (nil))
(insn 40 33 34 3 (set (reg:SI 1 r1 [orig:140 joystick.position_raw_max[_1] ] [140])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 1 r1 [138])
                    (const_int 4 [0x4])) [5 joystick.position_raw_max[_1]+0 S2 A16]))) "../System/joystick.c":484:11 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 34 40 35 3 (set (reg:SI 2 r2 [orig:120 _8 ] [120])
        (zero_extend:SI (mem:HI (plus:SI (mult:SI (reg:SI 0 r0 [135])
                        (const_int 2 [0x2]))
                    (reg/f:SI 2 r2 [128])) [5 joystick.position_raw_range[_1]+0 S2 A16]))) "../System/joystick.c":471:130 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem:HI (plus:SI (mult:SI (reg:SI 0 r0 [135])
                        (const_int 2 [0x2]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [5 joystick.position_raw_range[_1]+0 S2 A16]))
        (nil)))
(debug_insn 35 34 41 3 (debug_marker) "../System/joystick.c":484:8 -1
     (nil))
(insn 41 35 42 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:140 joystick.position_raw_max[_1] ] [140])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "../System/joystick.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 43 3 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 70)
            (pc))) "../System/joystick.c":484:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 70)
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 43 45 4 (debug_marker) "../System/joystick.c":492:4 -1
     (nil))
(insn 45 44 82 4 (set (reg:SI 3 r3 [141])
        (minus:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (reg:SI 12 ip [orig:116 _4 ] [116]))) "../System/joystick.c":471:59 45 {*arm_subsi3_insn}
     (nil))
(insn 82 45 46 4 (set (reg:SI 31 s15 [141])
        (reg:SI 3 r3 [141])) "../System/joystick.c":471:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 46 82 83 4 (set (reg:SF 31 s15 [142])
        (float:SF (reg:SI 31 s15 [141]))) "../System/joystick.c":471:23 809 {*floatsisf2_vfp}
     (nil))
(insn 83 46 47 4 (set (reg:SI 30 s14 [orig:120 _8 ] [120])
        (reg:SI 2 r2 [orig:120 _8 ] [120])) "../System/joystick.c":471:96 728 {*thumb2_movsi_vfp}
     (nil))
(insn 47 83 49 4 (set (reg:SF 30 s14 [143])
        (unsigned_float:SF (reg:SI 30 s14 [orig:120 _8 ] [120]))) "../System/joystick.c":471:96 811 {floatunssisf2}
     (nil))
(insn 49 47 48 4 (set (reg:SF 28 s12 [146])
        (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/joystick.c":471:138 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 48 49 50 4 (set (reg:SF 29 s13 [144])
        (div:SF (reg:SF 31 s15 [142])
            (reg:SF 30 s14 [143]))) "../System/joystick.c":471:94 764 {*divsf3_vfp}
     (nil))
(insn 50 48 51 4 (set (reg:SF 31 s15 [145])
        (mult:SF (reg:SF 29 s13 [144])
            (reg:SF 28 s12 [146]))) "../System/joystick.c":471:138 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 29 s13 [144])
            (const_double:SF 1.0e+2 [0x0.c8p+7]))
        (nil)))
(insn 51 50 84 4 (set (reg:SI 31 s15 [148])
        (fix:SI (fix:SF (reg:SF 31 s15 [145])))) "../System/joystick.c":471:20 805 {*truncsisf2_vfp}
     (nil))
(insn 84 51 53 4 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])
        (reg:SI 31 s15 [148])) "../System/joystick.c":471:20 728 {*thumb2_movsi_vfp}
     (nil))
(insn 53 84 76 4 (set (reg:SI 0 r0 [orig:126 <retval> ] [126])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 4 [0x4])) [12 %sfp+-4 S1 A32]))) "../System/joystick.c":492:11 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 76 53 77 4 (set (pc)
        (label_ref 54)) "../System/joystick.c":492:11 284 {*arm_jump}
     (nil)
 -> 54)
(barrier 77 76 66)
(code_label 66 77 65 5 22 (nil) [1 uses])
(note 65 66 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 65 78 5 (set (reg:SI 0 r0 [orig:126 <retval> ] [126])
        (const_int 0 [0])) "../System/joystick.c":480:11 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 78 4 79 5 (set (pc)
        (label_ref 54)) 284 {*arm_jump}
     (nil)
 -> 54)
(barrier 79 78 70)
(code_label 70 79 69 6 23 (nil) [1 uses])
(note 69 70 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 69 54 6 (set (reg:SI 0 r0 [orig:126 <retval> ] [126])
        (const_int 100 [0x64])) "../System/joystick.c":486:11 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 54 5 55 7 21 (nil) [2 uses])
(note 55 54 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 61 55 80 7 (use (reg/i:SI 0 r0)) "../System/joystick.c":495:1 -1
     (nil))
(note 80 61 81 NOTE_INSN_DELETED)
(note 81 80 0 NOTE_INSN_DELETED)

;; Function JOY_SCI_send_status (JOY_SCI_send_status, funcdef_no=610, decl_uid=10131, cgraph_uid=614, symbol_order=617)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) r {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 104:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=213 from oldreg=187, assigning class VFP_LO_REGS to r213
  104: r188:SF=float(r213:SI)
      REG_DEAD r187:SI
    Inserting insn reload before:
  213: r213:SI=r187:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 213:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 105:  (0) =t  (1) t {floatunssisf2}
      Creating newreg=214 from oldreg=148, assigning class VFP_LO_REGS to r214
  105: r189:SF=uns_float(r214:SI)
      REG_DEAD r148:SI
    Inserting insn reload before:
  214: r214:SI=r148:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 214:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 107:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 109:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=215 from oldreg=194, assigning class VFP_LO_REGS to r215
  109: r215:SI=fix(fix(r191:SF))
      REG_DEAD r191:SF
    Inserting insn reload after:
  215: r194:SI=r215:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 215:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) r {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 152:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=216 from oldreg=201, assigning class VFP_LO_REGS to r216
  152: r202:SF=float(r216:SI)
      REG_DEAD r201:SI
    Inserting insn reload before:
  216: r216:SI=r201:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 216:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 153:  (0) =t  (1) t {floatunssisf2}
      Creating newreg=217 from oldreg=135, assigning class VFP_LO_REGS to r217
  153: r203:SF=uns_float(r217:SI)
      REG_DEAD r135:SI
    Inserting insn reload before:
  217: r217:SI=r135:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 217:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 155:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 157:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=218 from oldreg=208, assigning class VFP_LO_REGS to r218
  157: r218:SI=fix(fix(r205:SF))
      REG_DEAD r205:SF
    Inserting insn reload after:
  218: r208:SI=r218:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 218:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 166:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3 4
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 194 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 5
EBB 6
EBB 7 8 9
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 208 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 10
EBB 11
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
   Insn 174: point = 0, n_alt = 1
   Insn 173: point = 0, n_alt = 1
   Insn 171: point = 0, n_alt = -1
   Insn 170: point = 0, n_alt = 5
   Insn 167: point = 0, n_alt = -1
   Insn 166: point = 0, n_alt = 5
   Insn 165: point = 0, n_alt = -2
  BB 10
   Insn 210: point = 2, n_alt = -1
   Insn 5: point = 2, n_alt = 1
  BB 9
   Insn 208: point = 3, n_alt = -1
   Insn 159: point = 3, n_alt = 1
   Insn 218: point = 5, n_alt = 13
   Insn 157: point = 7, n_alt = 0
   Insn 156: point = 9, n_alt = 0
   Insn 154: point = 11, n_alt = 0
   Insn 155: point = 12, n_alt = 3
   Insn 153: point = 13, n_alt = 0
   Insn 217: point = 15, n_alt = 9
	Hard reg 1 is preferable by r217 with profit 429
   Insn 152: point = 17, n_alt = 0
   Insn 216: point = 19, n_alt = 9
	Hard reg 3 is preferable by r216 with profit 429
   Insn 151: point = 21, n_alt = 0
  BB 11
   Insn 6: point = 24, n_alt = 1
  BB 8
   Insn 148: point = 25, n_alt = -1
   Insn 147: point = 25, n_alt = 1
   Insn 143: point = 26, n_alt = 1
   Insn 146: point = 28, n_alt = 1
  BB 7
   Insn 140: point = 30, n_alt = -1
   Insn 139: point = 30, n_alt = 1
   Insn 129: point = 30, n_alt = 1
   Insn 126: point = 31, n_alt = 1
   Insn 119: point = 32, n_alt = -1
   Insn 117: point = 32, n_alt = -2
   Insn 118: point = 33, n_alt = 5
  BB 5
   Insn 206: point = 34, n_alt = -1
   Insn 3: point = 34, n_alt = 1
  BB 4
   Insn 204: point = 36, n_alt = -1
   Insn 111: point = 36, n_alt = 1
   Insn 215: point = 38, n_alt = 13
   Insn 109: point = 40, n_alt = 0
   Insn 108: point = 42, n_alt = 0
   Insn 106: point = 44, n_alt = 0
   Insn 107: point = 45, n_alt = 3
   Insn 105: point = 46, n_alt = 0
   Insn 214: point = 48, n_alt = 9
	Hard reg 1 is preferable by r214 with profit 429
   Insn 104: point = 50, n_alt = 0
   Insn 213: point = 52, n_alt = 9
	Hard reg 3 is preferable by r213 with profit 429
   Insn 103: point = 54, n_alt = 0
  BB 6
   Insn 4: point = 57, n_alt = 1
  BB 3
   Insn 100: point = 59, n_alt = -1
   Insn 99: point = 59, n_alt = 1
   Insn 95: point = 60, n_alt = 1
   Insn 98: point = 61, n_alt = 1
  BB 2
   Insn 92: point = 63, n_alt = -1
   Insn 91: point = 63, n_alt = 1
   Insn 81: point = 63, n_alt = 1
   Insn 78: point = 64, n_alt = 1
   Insn 71: point = 65, n_alt = -1
   Insn 70: point = 65, n_alt = 5
   Insn 69: point = 65, n_alt = 1
   Insn 64: point = 65, n_alt = -1
   Insn 63: point = 65, n_alt = 5
   Insn 62: point = 65, n_alt = 1
   Insn 57: point = 65, n_alt = -1
   Insn 56: point = 65, n_alt = 5
   Insn 55: point = 65, n_alt = 1
   Insn 50: point = 65, n_alt = -1
   Insn 49: point = 65, n_alt = 5
   Insn 48: point = 65, n_alt = 1
   Insn 43: point = 65, n_alt = -1
   Insn 42: point = 65, n_alt = 5
   Insn 41: point = 65, n_alt = 1
   Insn 36: point = 65, n_alt = -1
   Insn 35: point = 65, n_alt = 5
   Insn 34: point = 65, n_alt = 1
   Insn 29: point = 65, n_alt = -1
   Insn 28: point = 65, n_alt = 5
   Insn 27: point = 65, n_alt = 1
   Insn 22: point = 65, n_alt = -1
   Insn 21: point = 65, n_alt = 5
   Insn 20: point = 65, n_alt = 1
   Insn 15: point = 65, n_alt = -1
   Insn 14: point = 65, n_alt = 5
   Insn 11: point = 65, n_alt = -1
   Insn 10: point = 65, n_alt = 1
   Insn 17: point = 65, n_alt = 5
 r129: [25..31] [22..23]
 r131: [25..30] [22..23]
 r135: [25..26] [16..23]
 r142: [59..64] [55..56]
 r144: [59..63] [55..56]
 r148: [59..60] [49..56]
 r155: [57..57] [36..36] [32..34]
 r156: [24..24] [0..3]
 r186: [59..61]
 r187: [53..54]
 r188: [44..50]
 r189: [44..46]
 r190: [43..44]
 r191: [41..42]
 r192: [43..45]
 r194: [37..38]
 r200: [25..28]
 r201: [20..21]
 r202: [11..17]
 r203: [11..13]
 r204: [10..11]
 r205: [8..9]
 r206: [10..12]
 r208: [4..5]
 r211: [27..65]
 r213: [51..52]
 r214: [47..48]
 r215: [39..40]
 r216: [18..19]
 r217: [14..15]
 r218: [6..7]
Compressing live ranges: from 66 to 51 - 77%
Ranges after the compression:
 r129: [22..25] [19..20]
 r131: [22..25] [19..20]
 r135: [22..23] [13..20]
 r142: [49..50] [46..47]
 r144: [49..50] [46..47]
 r148: [49..50] [40..47]
 r155: [48..48] [26..28]
 r156: [21..21] [0..1]
 r186: [49..50]
 r187: [44..45]
 r188: [36..41]
 r189: [36..37]
 r190: [35..36]
 r191: [33..34]
 r192: [35..37]
 r194: [29..30]
 r200: [22..25]
 r201: [17..18]
 r202: [9..14]
 r203: [9..10]
 r204: [8..9]
 r205: [6..7]
 r206: [8..10]
 r208: [2..3]
 r211: [24..50]
 r213: [42..43]
 r214: [38..39]
 r215: [31..32]
 r216: [15..16]
 r217: [11..12]
 r218: [4..5]

********** Assignment #1: **********

	 Assigning to 213 (cl=VFP_LO_REGS, orig=187, freq=858, tfirst=213, tfreq=858)...
	   Assign 31 to reload r213 (freq=858)
	 Assigning to 214 (cl=VFP_LO_REGS, orig=148, freq=858, tfirst=214, tfreq=858)...
	   Assign 30 to reload r214 (freq=858)
	 Assigning to 215 (cl=VFP_LO_REGS, orig=194, freq=858, tfirst=215, tfreq=858)...
	   Assign 31 to reload r215 (freq=858)
	 Assigning to 216 (cl=VFP_LO_REGS, orig=201, freq=858, tfirst=216, tfreq=858)...
	   Assign 31 to reload r216 (freq=858)
	 Assigning to 217 (cl=VFP_LO_REGS, orig=135, freq=858, tfirst=217, tfreq=858)...
	   Assign 30 to reload r217 (freq=858)
	 Assigning to 218 (cl=VFP_LO_REGS, orig=208, freq=858, tfirst=218, tfreq=858)...
	   Assign 31 to reload r218 (freq=858)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)

Cands:

BB 2:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 144 211
  changed regs: 0 [r0] 1 [r1] 142 144 211
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]

BB 3:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 144 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 144 148 211
  changed regs: 148 186
  dead regs: 100 [cc] 186

BB 4:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 144 148 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155 211
  changed regs: 155 187 188 189 190 191 192 194 213 214 215
  dead regs: 142 144 148 187 188 189 190 191 192 194 213 214 215

BB 5:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155 211
  changed regs: 155
  dead regs:

BB 6:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155 211
  changed regs: 155
  dead regs:

BB 7:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 129 131 211
  changed regs: 0 [r0] 1 [r1] 129 131
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 155

BB 8:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 129 131 211
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 129 131 135
  changed regs: 135 200
  dead regs: 100 [cc] 200 211

BB 9:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 129 131 135
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 156
  changed regs: 156 201 202 203 204 205 206 208 216 217 218
  dead regs: 129 131 135 201 202 203 204 205 206 208 216 217 218

BB 10:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 156
  changed regs: 156
  dead regs:

BB 11:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 156
  changed regs: 156
  dead regs:

BB 12:
  register live in: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 156
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0] 1 [r1]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 156
subreg regs:
  Slot 0 regnos (width = 0):	 194	 208
Changing spilled pseudos to memory in insn #215
Memory subreg was simplified in insn #111
Changing spilled pseudos to memory in insn #111
Changing spilled pseudos to memory in insn #218
Memory subreg was simplified in insn #159
Changing spilled pseudos to memory in insn #159
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=8)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 218:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 215:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 126
changing reg in insn 151
changing reg in insn 147
changing reg in insn 139
changing reg in insn 129
changing reg in insn 151
changing reg in insn 139
changing reg in insn 143
changing reg in insn 78
changing reg in insn 103
changing reg in insn 99
changing reg in insn 91
changing reg in insn 81
changing reg in insn 103
changing reg in insn 91
changing reg in insn 95
changing reg in insn 111
changing reg in insn 4
changing reg in insn 3
changing reg in insn 117
changing reg in insn 159
changing reg in insn 6
changing reg in insn 5
changing reg in insn 165
changing reg in insn 98
changing reg in insn 99
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 108
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 107
changing reg in insn 108
changing reg in insn 146
changing reg in insn 147
changing reg in insn 151
changing reg in insn 152
changing reg in insn 154
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 156
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 155
changing reg in insn 156
changing reg in insn 17
changing reg in insn 69
changing reg in insn 62
changing reg in insn 55
changing reg in insn 48
changing reg in insn 41
changing reg in insn 34
changing reg in insn 27
changing reg in insn 20
changing reg in insn 146
changing reg in insn 143
changing reg in insn 98
changing reg in insn 95
changing reg in insn 129
changing reg in insn 126
changing reg in insn 81
changing reg in insn 78
deleting insn with uid = 117.
deleting insn with uid = 165.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 174.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)


JOY_SCI_send_status

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 100 [cc]
;;  ref usage 	r0={31d,16u} r1={31d,12u} r2={17d,6u} r3={19d,10u} r4={1d,16u} r12={28d} r13={1d,30u} r14={15d} r15={14d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={17d,2u} r29={17d,2u,2e} r30={19d,4u} r31={23d,8u} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={18d,4u} r101={14d} r104={14d} r105={14d} r106={14d} 
;;    total ref usage 1327{1215d,110u,2e} in 133{119 regular + 14 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 18 2 NOTE_INSN_FUNCTION_BEG)
(note 18 2 25 2 NOTE_INSN_DELETED)
(note 25 18 32 2 NOTE_INSN_DELETED)
(note 32 25 39 2 NOTE_INSN_DELETED)
(note 39 32 46 2 NOTE_INSN_DELETED)
(note 46 39 53 2 NOTE_INSN_DELETED)
(note 53 46 60 2 NOTE_INSN_DELETED)
(note 60 53 67 2 NOTE_INSN_DELETED)
(note 67 60 9 2 NOTE_INSN_DELETED)
(debug_insn 9 67 17 2 (debug_marker) "../System/joystick.c":513:2 -1
     (nil))
(insn 17 9 10 2 (set (reg/f:SI 4 r4 [211])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":517:48 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 10 17 11 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/joystick.c":513:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_toggle") [flags 0x41]  <function_decl 00000000079f0200 LED_toggle>) [0 LED_toggle S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":513:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_toggle") [flags 0x41]  <function_decl 00000000079f0200 LED_toggle>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 12 11 14 2 (debug_marker) "../System/joystick.c":514:2 -1
     (nil))
(insn 14 12 15 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0000000007d1b7e0 *.LC0>)) "../System/joystick.c":514:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 15 14 16 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>) [0 __builtin_puts S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":514:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 16 15 20 2 (debug_marker) "../System/joystick.c":517:2 -1
     (nil))
(insn 20 16 21 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 12 [0xc])) [5 joystick.position_raw[0]+0 S2 A32]))) "../System/joystick.c":517:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0000000007d1b870 *.LC1>)) "../System/joystick.c":517:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 22 21 23 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":517:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 23 22 27 2 (debug_marker) "../System/joystick.c":518:2 -1
     (nil))
(insn 27 23 28 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 14 [0xe])) [5 joystick.position_raw[1]+0 S2 A16]))) "../System/joystick.c":518:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 28 27 29 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82]  <var_decl 0000000007d1b900 *.LC2>)) "../System/joystick.c":518:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 29 28 30 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":518:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 30 29 34 2 (debug_marker) "../System/joystick.c":520:2 -1
     (nil))
(insn 34 30 35 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 16 [0x10])) [5 joystick.position_raw_min[0]+0 S2 A64]))) "../System/joystick.c":520:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 35 34 36 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82]  <var_decl 0000000007d1b990 *.LC3>)) "../System/joystick.c":520:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 36 35 37 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":520:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 37 36 41 2 (debug_marker) "../System/joystick.c":521:2 -1
     (nil))
(insn 41 37 42 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 20 [0x14])) [5 joystick.position_raw_max[0]+0 S2 A32]))) "../System/joystick.c":521:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82]  <var_decl 0000000007d1ba20 *.LC4>)) "../System/joystick.c":521:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":521:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 44 43 48 2 (debug_marker) "../System/joystick.c":523:2 -1
     (nil))
(insn 48 44 49 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 18 [0x12])) [5 joystick.position_raw_min[1]+0 S2 A16]))) "../System/joystick.c":523:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 49 48 50 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82]  <var_decl 0000000007d1bab0 *.LC5>)) "../System/joystick.c":523:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 50 49 51 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":523:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 51 50 55 2 (debug_marker) "../System/joystick.c":524:2 -1
     (nil))
(insn 55 51 56 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 22 [0x16])) [5 joystick.position_raw_max[1]+0 S2 A16]))) "../System/joystick.c":524:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 56 55 57 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82]  <var_decl 0000000007d1bb40 *.LC6>)) "../System/joystick.c":524:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 57 56 58 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":524:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 58 57 62 2 (debug_marker) "../System/joystick.c":526:2 -1
     (nil))
(insn 62 58 63 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 24 [0x18])) [5 joystick.position_raw_range[0]+0 S2 A64]))) "../System/joystick.c":526:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 63 62 64 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82]  <var_decl 0000000007d1bbd0 *.LC7>)) "../System/joystick.c":526:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 64 63 65 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":526:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 65 64 69 2 (debug_marker) "../System/joystick.c":527:2 -1
     (nil))
(insn 69 65 70 2 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 26 [0x1a])) [5 joystick.position_raw_range[1]+0 S2 A16]))) "../System/joystick.c":527:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 70 69 71 2 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82]  <var_decl 0000000007d1bc60 *.LC8>)) "../System/joystick.c":527:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 71 70 72 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":527:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 72 71 73 2 (debug_marker) "../System/joystick.c":531:2 -1
     (nil))
(debug_insn 73 72 74 2 (var_location:QI axis (const_int 0 [0])) "../System/joystick.c":531:2 -1
     (nil))
(debug_insn 74 73 75 2 (debug_marker:BLK) "../System/joystick.c":460:9 -1
     (nil))
(debug_insn 75 74 76 2 (debug_marker) "../System/joystick.c":466:2 -1
     (nil))
(debug_insn 76 75 78 2 (debug_marker) "../System/joystick.c":471:2 -1
     (nil))
(insn 78 76 79 2 (set (reg:SI 3 r3 [orig:142 _48 ] [142])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 12 [0xc])) [5 joystick.position_raw[0]+0 S2 A32]))) "../System/joystick.c":471:52 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [5 joystick.position_raw[0]+0 S2 A32]))
        (nil)))
(debug_insn 79 78 81 2 (var_location:SI D#26 (zero_extend:SI (reg:HI 3 r3 [orig:142 _48 ] [142]))) "../System/joystick.c":471:52 -1
     (nil))
(insn 81 79 82 2 (set (reg:SI 2 r2 [orig:144 _50 ] [144])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 16 [0x10])) [5 joystick.position_raw_min[0]+0 S2 A64]))) "../System/joystick.c":471:86 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [5 joystick.position_raw_min[0]+0 S2 A64]))
        (nil)))
(debug_insn 82 81 83 2 (var_location:SI D#25 (zero_extend:SI (reg:HI 2 r2 [orig:144 _50 ] [144]))) "../System/joystick.c":471:86 -1
     (nil))
(debug_insn 83 82 84 2 (var_location:SI D#24 (minus:SI (debug_expr:SI D#26)
        (debug_expr:SI D#25))) "../System/joystick.c":471:59 -1
     (nil))
(debug_insn 84 83 85 2 (var_location:SF D#23 (float:SF (debug_expr:SI D#24))) "../System/joystick.c":471:23 -1
     (nil))
(debug_insn 85 84 86 2 (var_location:HI D#22 (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("joystick") [flags 0x82]  <var_decl 0000000007b6a1b0 joystick>)
                (const_int 24 [0x18]))) [5 joystick.position_raw_range[0]+0 S2 A64])) "../System/joystick.c":471:130 -1
     (nil))
(debug_insn 86 85 87 2 (var_location:SF D#21 (unsigned_float:SF (debug_expr:HI D#22))) "../System/joystick.c":471:96 -1
     (nil))
(debug_insn 87 86 88 2 (var_location:SF D#20 (div:SF (debug_expr:SF D#23)
        (debug_expr:SF D#21))) "../System/joystick.c":471:94 -1
     (nil))
(debug_insn 88 87 89 2 (var_location:SF D#19 (mult:SF (debug_expr:SF D#20)
        (const_double:SF 1.0e+2 [0x0.c8p+7]))) "../System/joystick.c":471:138 -1
     (nil))
(debug_insn 89 88 90 2 (var_location:HI relative_position (fix:HI (debug_expr:SF D#19))) "../System/joystick.c":471:20 -1
     (nil))
(debug_insn 90 89 91 2 (debug_marker) "../System/joystick.c":478:3 -1
     (nil))
(insn 91 90 92 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:142 _48 ] [142])
            (reg:SI 2 r2 [orig:144 _50 ] [144]))) "../System/joystick.c":478:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 92 91 93 2 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 181)
            (pc))) "../System/joystick.c":478:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 181)
(note 93 92 98 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 98 93 95 3 (set (reg:SI 0 r0 [orig:186 joystick.position_raw_max[0] ] [186])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 20 [0x14])) [5 joystick.position_raw_max[0]+0 S2 A32]))) "../System/joystick.c":484:11 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 20 [0x14]))) [5 joystick.position_raw_max[0]+0 S2 A32]))
        (nil)))
(insn 95 98 96 3 (set (reg:SI 1 r1 [orig:148 _54 ] [148])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 24 [0x18])) [5 joystick.position_raw_range[0]+0 S2 A64]))) "../System/joystick.c":471:130 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 24 [0x18]))) [5 joystick.position_raw_range[0]+0 S2 A64]))
        (nil)))
(debug_insn 96 95 99 3 (debug_marker) "../System/joystick.c":484:8 -1
     (nil))
(insn 99 96 100 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:186 joystick.position_raw_max[0] ] [186])
            (reg:SI 3 r3 [orig:142 _48 ] [142]))) "../System/joystick.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 100 99 101 3 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 185)
            (pc))) "../System/joystick.c":484:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 185)
(note 101 100 102 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 102 101 103 4 (debug_marker) "../System/joystick.c":492:4 -1
     (nil))
(insn 103 102 213 4 (set (reg:SI 3 r3 [187])
        (minus:SI (reg:SI 3 r3 [orig:142 _48 ] [142])
            (reg:SI 2 r2 [orig:144 _50 ] [144]))) "../System/joystick.c":471:59 45 {*arm_subsi3_insn}
     (nil))
(insn 213 103 104 4 (set (reg:SI 31 s15 [187])
        (reg:SI 3 r3 [187])) "../System/joystick.c":471:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 104 213 214 4 (set (reg:SF 31 s15 [188])
        (float:SF (reg:SI 31 s15 [187]))) "../System/joystick.c":471:23 809 {*floatsisf2_vfp}
     (nil))
(insn 214 104 105 4 (set (reg:SI 30 s14 [orig:148 _54 ] [148])
        (reg:SI 1 r1 [orig:148 _54 ] [148])) "../System/joystick.c":471:96 728 {*thumb2_movsi_vfp}
     (nil))
(insn 105 214 107 4 (set (reg:SF 30 s14 [189])
        (unsigned_float:SF (reg:SI 30 s14 [orig:148 _54 ] [148]))) "../System/joystick.c":471:96 811 {floatunssisf2}
     (nil))
(insn 107 105 106 4 (set (reg:SF 28 s12 [192])
        (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/joystick.c":471:138 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 106 107 108 4 (set (reg:SF 29 s13 [190])
        (div:SF (reg:SF 31 s15 [188])
            (reg:SF 30 s14 [189]))) "../System/joystick.c":471:94 764 {*divsf3_vfp}
     (nil))
(insn 108 106 109 4 (set (reg:SF 31 s15 [191])
        (mult:SF (reg:SF 29 s13 [190])
            (reg:SF 28 s12 [192]))) "../System/joystick.c":471:138 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 29 s13 [190])
            (const_double:SF 1.0e+2 [0x0.c8p+7]))
        (nil)))
(insn 109 108 215 4 (set (reg:SI 31 s15 [194])
        (fix:SI (fix:SF (reg:SF 31 s15 [191])))) "../System/joystick.c":471:20 805 {*truncsisf2_vfp}
     (nil))
(insn 215 109 111 4 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])
        (reg:SI 31 s15 [194])) "../System/joystick.c":471:20 728 {*thumb2_movsi_vfp}
     (nil))
(insn 111 215 204 4 (set (reg:SI 1 r1 [orig:155 _62 ] [155])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 4 [0x4])) [12 %sfp+-4 S1 A32]))) "../System/joystick.c":531:2 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 204 111 205 4 (set (pc)
        (label_ref 112)) "../System/joystick.c":492:11 284 {*arm_jump}
     (nil)
 -> 112)
(barrier 205 204 181)
(code_label 181 205 180 5 33 (nil) [1 uses])
(note 180 181 3 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 3 180 206 5 (set (reg:SI 1 r1 [orig:155 _62 ] [155])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 206 3 207 5 (set (pc)
        (label_ref 112)) 284 {*arm_jump}
     (nil)
 -> 112)
(barrier 207 206 185)
(code_label 185 207 184 6 34 (nil) [1 uses])
(note 184 185 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 184 112 6 (set (reg:SI 1 r1 [orig:155 _62 ] [155])
        (const_int 100 [0x64])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 112 4 113 7 31 (nil) [2 uses])
(note 113 112 114 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 114 113 115 7 (var_location:QI axis (clobber (const_int 0 [0]))) "../System/joystick.c":531:23 -1
     (nil))
(debug_insn 115 114 118 7 (var_location:HI relative_position (clobber (const_int 0 [0]))) "../System/joystick.c":531:23 -1
     (nil))
(insn 118 115 119 7 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82]  <var_decl 0000000007d1bcf0 *.LC9>)) "../System/joystick.c":531:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 119 118 120 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":531:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 120 119 121 7 (debug_marker) "../System/joystick.c":532:2 -1
     (nil))
(debug_insn 121 120 122 7 (var_location:QI axis (const_int 1 [0x1])) "../System/joystick.c":532:2 -1
     (nil))
(debug_insn 122 121 123 7 (debug_marker:BLK) "../System/joystick.c":460:9 -1
     (nil))
(debug_insn 123 122 124 7 (debug_marker) "../System/joystick.c":466:2 -1
     (nil))
(debug_insn 124 123 126 7 (debug_marker) "../System/joystick.c":471:2 -1
     (nil))
(insn 126 124 127 7 (set (reg:SI 3 r3 [orig:129 _30 ] [129])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 14 [0xe])) [5 joystick.position_raw[1]+0 S2 A16]))) "../System/joystick.c":471:52 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 14 [0xe]))) [5 joystick.position_raw[1]+0 S2 A16]))
        (nil)))
(debug_insn 127 126 129 7 (var_location:SI D#18 (zero_extend:SI (reg:HI 3 r3 [orig:129 _30 ] [129]))) "../System/joystick.c":471:52 -1
     (nil))
(insn 129 127 130 7 (set (reg:SI 2 r2 [orig:131 _36 ] [131])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 18 [0x12])) [5 joystick.position_raw_min[1]+0 S2 A16]))) "../System/joystick.c":471:86 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 18 [0x12]))) [5 joystick.position_raw_min[1]+0 S2 A16]))
        (nil)))
(debug_insn 130 129 131 7 (var_location:SI D#17 (zero_extend:SI (reg:HI 2 r2 [orig:131 _36 ] [131]))) "../System/joystick.c":471:86 -1
     (nil))
(debug_insn 131 130 132 7 (var_location:SI D#16 (minus:SI (debug_expr:SI D#18)
        (debug_expr:SI D#17))) "../System/joystick.c":471:59 -1
     (nil))
(debug_insn 132 131 133 7 (var_location:SF D#15 (float:SF (debug_expr:SI D#16))) "../System/joystick.c":471:23 -1
     (nil))
(debug_insn 133 132 134 7 (var_location:HI D#14 (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("joystick") [flags 0x82]  <var_decl 0000000007b6a1b0 joystick>)
                (const_int 26 [0x1a]))) [5 joystick.position_raw_range[1]+0 S2 A16])) "../System/joystick.c":471:130 -1
     (nil))
(debug_insn 134 133 135 7 (var_location:SF D#13 (unsigned_float:SF (debug_expr:HI D#14))) "../System/joystick.c":471:96 -1
     (nil))
(debug_insn 135 134 136 7 (var_location:SF D#12 (div:SF (debug_expr:SF D#15)
        (debug_expr:SF D#13))) "../System/joystick.c":471:94 -1
     (nil))
(debug_insn 136 135 137 7 (var_location:SF D#11 (mult:SF (debug_expr:SF D#12)
        (const_double:SF 1.0e+2 [0x0.c8p+7]))) "../System/joystick.c":471:138 -1
     (nil))
(debug_insn 137 136 138 7 (var_location:HI relative_position (fix:HI (debug_expr:SF D#11))) "../System/joystick.c":471:20 -1
     (nil))
(debug_insn 138 137 139 7 (debug_marker) "../System/joystick.c":478:3 -1
     (nil))
(insn 139 138 140 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:129 _30 ] [129])
            (reg:SI 2 r2 [orig:131 _36 ] [131]))) "../System/joystick.c":478:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 140 139 141 7 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 189)
            (pc))) "../System/joystick.c":478:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 189)
(note 141 140 146 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 146 141 143 8 (set (reg:SI 0 r0 [orig:200 joystick.position_raw_max[1] ] [200])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 22 [0x16])) [5 joystick.position_raw_max[1]+0 S2 A16]))) "../System/joystick.c":484:11 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 22 [0x16]))) [5 joystick.position_raw_max[1]+0 S2 A16]))
        (nil)))
(insn 143 146 144 8 (set (reg:SI 1 r1 [orig:135 _40 ] [135])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [211])
                    (const_int 26 [0x1a])) [5 joystick.position_raw_range[1]+0 S2 A16]))) "../System/joystick.c":471:130 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 26 [0x1a]))) [5 joystick.position_raw_range[1]+0 S2 A16]))
        (nil)))
(debug_insn 144 143 147 8 (debug_marker) "../System/joystick.c":484:8 -1
     (nil))
(insn 147 144 148 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:200 joystick.position_raw_max[1] ] [200])
            (reg:SI 3 r3 [orig:129 _30 ] [129]))) "../System/joystick.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 148 147 149 8 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "../System/joystick.c":484:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 193)
(note 149 148 150 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 150 149 151 9 (debug_marker) "../System/joystick.c":492:4 -1
     (nil))
(insn 151 150 216 9 (set (reg:SI 3 r3 [201])
        (minus:SI (reg:SI 3 r3 [orig:129 _30 ] [129])
            (reg:SI 2 r2 [orig:131 _36 ] [131]))) "../System/joystick.c":471:59 45 {*arm_subsi3_insn}
     (nil))
(insn 216 151 152 9 (set (reg:SI 31 s15 [201])
        (reg:SI 3 r3 [201])) "../System/joystick.c":471:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 152 216 217 9 (set (reg:SF 31 s15 [202])
        (float:SF (reg:SI 31 s15 [201]))) "../System/joystick.c":471:23 809 {*floatsisf2_vfp}
     (nil))
(insn 217 152 153 9 (set (reg:SI 30 s14 [orig:135 _40 ] [135])
        (reg:SI 1 r1 [orig:135 _40 ] [135])) "../System/joystick.c":471:96 728 {*thumb2_movsi_vfp}
     (nil))
(insn 153 217 155 9 (set (reg:SF 30 s14 [203])
        (unsigned_float:SF (reg:SI 30 s14 [orig:135 _40 ] [135]))) "../System/joystick.c":471:96 811 {floatunssisf2}
     (nil))
(insn 155 153 154 9 (set (reg:SF 28 s12 [206])
        (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/joystick.c":471:138 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 154 155 156 9 (set (reg:SF 29 s13 [204])
        (div:SF (reg:SF 31 s15 [202])
            (reg:SF 30 s14 [203]))) "../System/joystick.c":471:94 764 {*divsf3_vfp}
     (nil))
(insn 156 154 157 9 (set (reg:SF 31 s15 [205])
        (mult:SF (reg:SF 29 s13 [204])
            (reg:SF 28 s12 [206]))) "../System/joystick.c":471:138 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 29 s13 [204])
            (const_double:SF 1.0e+2 [0x0.c8p+7]))
        (nil)))
(insn 157 156 218 9 (set (reg:SI 31 s15 [208])
        (fix:SI (fix:SF (reg:SF 31 s15 [205])))) "../System/joystick.c":471:20 805 {*truncsisf2_vfp}
     (nil))
(insn 218 157 159 9 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])
        (reg:SI 31 s15 [208])) "../System/joystick.c":471:20 728 {*thumb2_movsi_vfp}
     (nil))
(insn 159 218 208 9 (set (reg:SI 1 r1 [orig:156 _64 ] [156])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 4 [0x4])) [12 %sfp+-4 S1 A32]))) "../System/joystick.c":532:2 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 208 159 209 9 (set (pc)
        (label_ref 160)) "../System/joystick.c":492:11 284 {*arm_jump}
     (nil)
 -> 160)
(barrier 209 208 189)
(code_label 189 209 188 10 35 (nil) [1 uses])
(note 188 189 5 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 5 188 210 10 (set (reg:SI 1 r1 [orig:156 _64 ] [156])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 210 5 211 10 (set (pc)
        (label_ref 160)) 284 {*arm_jump}
     (nil)
 -> 160)
(barrier 211 210 193)
(code_label 193 211 192 11 36 (nil) [1 uses])
(note 192 193 6 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 6 192 160 11 (set (reg:SI 1 r1 [orig:156 _64 ] [156])
        (const_int 100 [0x64])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 160 6 161 12 32 (nil) [2 uses])
(note 161 160 162 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 162 161 163 12 (var_location:QI axis (clobber (const_int 0 [0]))) "../System/joystick.c":532:23 -1
     (nil))
(debug_insn 163 162 166 12 (var_location:HI relative_position (clobber (const_int 0 [0]))) "../System/joystick.c":532:23 -1
     (nil))
(insn 166 163 167 12 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82]  <var_decl 0000000007d1bd80 *.LC10>)) "../System/joystick.c":532:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 167 166 168 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":532:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000006739b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 168 167 170 12 (debug_marker) "../System/joystick.c":534:2 -1
     (nil))
(insn 170 168 171 12 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0000000007d1be10 *.LC11>)) "../System/joystick.c":534:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 171 170 172 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>) [0 __builtin_puts S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":534:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 172 171 173 12 (debug_marker) "../System/joystick.c":536:2 -1
     (nil))
(insn 173 172 174 12 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) "../System/joystick.c":536:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 174 173 175 12 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/joystick.c":536:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 175 174 212)
(note 212 175 0 NOTE_INSN_DELETED)

;; Function JOY_calibrate (JOY_calibrate, funcdef_no=608, decl_uid=10123, cgraph_uid=612, symbol_order=615)

      Creating newreg=176
Removing SCRATCH in insn #100 (nop 0)
rescanning insn with uid = 100.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=20, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 193:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 163:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 194 (freq=110)
  194: r170:SI=sfp:SI+0x7
      REG_EQUIV sfp:SI-0x1
deleting insn with uid = 194.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) r {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 27:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) r {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) r {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) r {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 65:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) r  (2) r {*andsi_notsi_si_compare0_scratch}
      Change to class GENERAL_REGS for r176
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=11,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 205:  (0) r  (1) I  (2) rI {*thumb2_movsicc_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 85:  (0) Uu  (1) l {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 103:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 70:  (0) r  (1) r  (2) r {*arm_subsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 75:  (0) r  (1) r  (2) r {*arm_subsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) m  (1) r {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 77:  (0) m  (1) r {*thumb2_movhi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 107:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 170 in operand 1 of insn 125 on equiv sfp:SI+0x7
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=177, assigning class CORE_REGS to r177
  125: r1:SI=r177:SI
      REG_EQUAL sfp:SI-0x1
    Inserting insn reload before:
  210: r177:SI=sfp:SI+0x7

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 210:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r177
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) l  (1) Py {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 7 8
EBB 9 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
  BB 15
   Insn 176: point = 0, n_alt = -1
   Insn 175: point = 0, n_alt = 0
   Insn 172: point = 1, n_alt = -1
   Insn 171: point = 1, n_alt = 1
   Insn 169: point = 1, n_alt = -1
   Insn 168: point = 1, n_alt = 1
   Insn 166: point = 1, n_alt = -1
   Insn 164: point = 1, n_alt = -1
   Insn 157: point = 1, n_alt = 1
   Insn 199: point = 2, n_alt = -2
  BB 13
   Insn 133: point = 3, n_alt = 0
   Insn 202: point = 4, n_alt = -2
   Insn 127: point = 5, n_alt = -1
   Insn 198: point = 5, n_alt = -2
   Insn 125: point = 5, n_alt = 0
	Hard reg 1 is preferable by r177 with profit 890
   Insn 210: point = 6, n_alt = 4
  BB 12
   Insn 115: point = 8, n_alt = -1
   Insn 197: point = 8, n_alt = -2
   Insn 196: point = 8, n_alt = 1
  BB 11
   Insn 108: point = 9, n_alt = -1
   Insn 107: point = 9, n_alt = 3
   Insn 77: point = 10, n_alt = 4
   Insn 72: point = 11, n_alt = 4
   Insn 75: point = 12, n_alt = 6
   Insn 70: point = 14, n_alt = 6
   Insn 106: point = 16, n_alt = 1
   Insn 103: point = 17, n_alt = 6
   Insn 85: point = 18, n_alt = 6
   Insn 205: point = 19, n_alt = 6
   Insn 100: point = 20, n_alt = 0
   Insn 83: point = 22, n_alt = 1
   Insn 95: point = 23, n_alt = 5
   Insn 90: point = 25, n_alt = 5
   Insn 88: point = 26, n_alt = 5
  BB 10
   Insn 6: point = 28, n_alt = -2
   Insn 65: point = 30, n_alt = 4
  BB 9
   Insn 60: point = 31, n_alt = -1
   Insn 59: point = 31, n_alt = 1
   Insn 58: point = 31, n_alt = 1
  BB 8
   Insn 5: point = 33, n_alt = -2
   Insn 53: point = 35, n_alt = 4
  BB 7
   Insn 48: point = 36, n_alt = -1
   Insn 47: point = 36, n_alt = 1
   Insn 46: point = 36, n_alt = 1
  BB 6
   Insn 4: point = 38, n_alt = -2
   Insn 41: point = 39, n_alt = 4
  BB 5
   Insn 36: point = 40, n_alt = -1
   Insn 35: point = 40, n_alt = 1
   Insn 34: point = 40, n_alt = 1
   Insn 32: point = 41, n_alt = 1
  BB 4
   Insn 3: point = 43, n_alt = -2
   Insn 27: point = 44, n_alt = 4
  BB 3
   Insn 22: point = 45, n_alt = -1
   Insn 21: point = 45, n_alt = 1
   Insn 20: point = 45, n_alt = 1
   Insn 18: point = 46, n_alt = 1
  BB 14
   Insn 203: point = 48, n_alt = -1
   Insn 149: point = 48, n_alt = -1
   Insn 148: point = 48, n_alt = 1
   Insn 146: point = 48, n_alt = -1
   Insn 145: point = 48, n_alt = 1
   Insn 143: point = 48, n_alt = -1
   Insn 141: point = 48, n_alt = -1
   Insn 200: point = 48, n_alt = -2
  BB 2
   Insn 163: point = 49, n_alt = 5
   Insn 114: point = 50, n_alt = 5
   Insn 193: point = 51, n_alt = 5
  r170 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 23 count 22 (  1.3)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      169  172  173
    liveout: 2:

        7   13  102  103  169  172  173

BB 3:
    gen: 3:

      169
    killed: 3:

      100  113  114
    livein: 3:

      169  172  173
    liveout: 3:

        7   13  102  103  113  114  169  172  173

BB 4:
    gen: 4:

      113  169
    killed: 4:

      114
    livein: 4:

      113  169  172  173
    liveout: 4:

        7   13  102  103  113  114  169  172  173

BB 5:
    gen: 5:

      169
    killed: 5:

      100  115  116
    livein: 5:

      113  114  169  172  173
    liveout: 5:

        7   13  102  103  113  114  115  116  169  172  173

BB 6:
    gen: 6:

      115  169
    killed: 6:

      116
    livein: 6:

      113  114  115  169  172  173
    liveout: 6:

        7   13  102  103  113  114  115  116  169  172  173

BB 7:
    gen: 7:

      113  169
    killed: 7:

      100  117
    livein: 7:

      113  114  115  116  169  172  173
    liveout: 7:

        7   13  102  103  113  114  115  116  117  169  172
      173

BB 8:
    gen: 8:

      113  169
    killed: 8:

      117
    livein: 8:

      113  114  115  116  169  172  173
    liveout: 8:

        7   13  102  103  114  115  116  117  169  172  173

BB 9:
    gen: 9:

      115  169
    killed: 9:

      100  118
    livein: 9:

      114  115  116  117  169  172  173
    liveout: 9:

        7   13  102  103  114  115  116  117  118  169  172
      173

BB 10:
    gen: 10:

      115  169
    killed: 10:

      118
    livein: 10:

      114  115  116  117  169  172  173
    liveout: 10:

        7   13  102  103  114  116  117  118  169  172  173

BB 11:
    gen: 11:

      114  116  117  118  169
    killed: 11:

      100  125  126  127  146  149  153  159  162  176
    livein: 11:

      114  116  117  118  169  172  173
    liveout: 11:

        7   13  102  103  169  172  173

BB 12:
    gen: 12:

      172
    livein: 12:

      169  172  173
    liveout: 12:

        7   13  102  103  169  172  173

BB 13:
    gen: 13:

      172
    killed: 13:

      100  174  177
    livein: 13:

      169  172  173
    liveout: 13:

        7   13  102  103  169  172  173

BB 14:
    gen: 14:

      173
    livein: 14:

      169  172  173
    liveout: 14:

        7   13  102  103  169  172  173

BB 15:
    gen: 15:

      173
    killed: 15:

      100  123
    livein: 15:

      169  172  173
    liveout: 15:

        7   13  102  103  169  172  173

BB 16:
    liveout: 16:

        7   13  102  103
 r113: [34..46]
 r114: [45..45] [15..43]
 r115: [29..41]
 r116: [40..40] [13..38]
 r117: [36..36] [15..33]
 r118: [31..31] [13..28]
 r123: [0..1]
 r125: [24..26]
 r126: [21..25]
 r127: [21..23]
 r146: [11..14]
 r149: [10..12]
 r153: [18..22]
 r159: [17..19]
 r162: [9..16]
 r169: [0..51]
 r170: [0..52]
 r172: [0..50]
 r173: [0..49]
 r174: [3..4]
 r176: [20..20]
 r177: [5..6]
Compressing live ranges: from 53 to 29 - 54%
Ranges after the compression:
 r113: [22..28]
 r114: [10..27]
 r115: [19..26]
 r116: [8..25]
 r117: [23..23] [10..21]
 r118: [20..20] [8..18]
 r123: [0..1]
 r125: [17..18]
 r126: [15..18]
 r127: [15..16]
 r146: [6..9]
 r149: [6..7]
 r153: [12..16]
 r159: [12..13]
 r162: [6..11]
 r169: [0..28]
 r170: [0..28]
 r172: [0..28]
 r173: [0..28]
 r174: [2..3]
 r176: [14..14]
 r177: [4..5]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 16
  BB 15
   Insn 176: point = 0, n_alt = -1
   Insn 175: point = 0, n_alt = 0
   Insn 172: point = 1, n_alt = -1
   Insn 171: point = 1, n_alt = 1
   Insn 169: point = 1, n_alt = -1
   Insn 168: point = 1, n_alt = 1
   Insn 166: point = 1, n_alt = -1
   Insn 164: point = 1, n_alt = -1
   Insn 157: point = 1, n_alt = 1
   Insn 199: point = 2, n_alt = -2
  BB 13
   Insn 133: point = 3, n_alt = 0
   Insn 202: point = 4, n_alt = -2
   Insn 127: point = 5, n_alt = -1
   Insn 198: point = 5, n_alt = -2
   Insn 125: point = 5, n_alt = 0
	Hard reg 1 is preferable by r177 with profit 890
   Insn 210: point = 6, n_alt = 4
  BB 12
   Insn 115: point = 8, n_alt = -1
   Insn 197: point = 8, n_alt = -2
   Insn 196: point = 8, n_alt = 1
  BB 11
   Insn 108: point = 9, n_alt = -1
   Insn 107: point = 9, n_alt = 3
   Insn 77: point = 10, n_alt = 4
   Insn 72: point = 11, n_alt = 4
   Insn 75: point = 12, n_alt = 6
   Insn 70: point = 14, n_alt = 6
   Insn 106: point = 16, n_alt = 1
   Insn 103: point = 17, n_alt = 6
   Insn 85: point = 18, n_alt = 6
   Insn 205: point = 19, n_alt = 6
   Insn 100: point = 20, n_alt = 0
   Insn 83: point = 22, n_alt = 1
   Insn 95: point = 23, n_alt = 5
   Insn 90: point = 25, n_alt = 5
   Insn 88: point = 26, n_alt = 5
  BB 10
   Insn 6: point = 28, n_alt = -2
   Insn 65: point = 30, n_alt = 4
  BB 9
   Insn 60: point = 31, n_alt = -1
   Insn 59: point = 31, n_alt = 1
   Insn 58: point = 31, n_alt = 1
  BB 8
   Insn 5: point = 33, n_alt = -2
   Insn 53: point = 35, n_alt = 4
  BB 7
   Insn 48: point = 36, n_alt = -1
   Insn 47: point = 36, n_alt = 1
   Insn 46: point = 36, n_alt = 1
  BB 6
   Insn 4: point = 38, n_alt = -2
   Insn 41: point = 39, n_alt = 4
  BB 5
   Insn 36: point = 40, n_alt = -1
   Insn 35: point = 40, n_alt = 1
   Insn 34: point = 40, n_alt = 1
   Insn 32: point = 41, n_alt = 1
  BB 4
   Insn 3: point = 43, n_alt = -2
   Insn 27: point = 44, n_alt = 4
  BB 3
   Insn 22: point = 45, n_alt = -1
   Insn 21: point = 45, n_alt = 1
   Insn 20: point = 45, n_alt = 1
   Insn 18: point = 46, n_alt = 1
  BB 14
   Insn 203: point = 48, n_alt = -1
   Insn 149: point = 48, n_alt = -1
   Insn 148: point = 48, n_alt = 1
   Insn 146: point = 48, n_alt = -1
   Insn 145: point = 48, n_alt = 1
   Insn 143: point = 48, n_alt = -1
   Insn 141: point = 48, n_alt = -1
   Insn 200: point = 48, n_alt = -2
  BB 2
   Insn 163: point = 49, n_alt = 5
   Insn 114: point = 50, n_alt = 5
   Insn 193: point = 51, n_alt = 5
 r113: [34..46]
 r114: [45..45] [15..43]
 r115: [29..41]
 r116: [40..40] [13..38]
 r117: [36..36] [15..33]
 r118: [31..31] [13..28]
 r123: [0..1]
 r125: [24..26]
 r126: [21..25]
 r127: [21..23]
 r146: [11..14]
 r149: [10..12]
 r153: [18..22]
 r159: [17..19]
 r162: [9..16]
 r169: [0..51]
 r172: [0..50]
 r173: [0..49]
 r174: [3..4]
 r176: [20..20]
 r177: [5..6]
Compressing live ranges: from 52 to 29 - 55%
Ranges after the compression:
 r113: [22..28]
 r114: [10..27]
 r115: [19..26]
 r116: [8..25]
 r117: [23..23] [10..21]
 r118: [20..20] [8..18]
 r123: [0..1]
 r125: [17..18]
 r126: [15..18]
 r127: [15..16]
 r146: [6..9]
 r149: [6..7]
 r153: [12..16]
 r159: [12..13]
 r162: [6..11]
 r169: [0..28]
 r172: [0..28]
 r173: [0..28]
 r174: [2..3]
 r176: [14..14]
 r177: [4..5]

********** Assignment #1: **********

	 Assigning to 177 (cl=GENERAL_REGS, orig=177, freq=1780, tfirst=177, tfreq=1780)...
	   Assign 1 to reload r177 (freq=1780)
	 Assigning to 176 (cl=GENERAL_REGS, orig=176, freq=890, tfirst=176, tfreq=890)...
	   Assign 1 to reload r176 (freq=890)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=32, prev_offset=32)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=20, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 47
changing reg in insn 3
changing reg in insn 21
changing reg in insn 20
changing reg in insn 3
changing reg in insn 70
changing reg in insn 21
changing reg in insn 32
changing reg in insn 6
changing reg in insn 59
changing reg in insn 4
changing reg in insn 35
changing reg in insn 34
changing reg in insn 4
changing reg in insn 75
changing reg in insn 35
changing reg in insn 46
changing reg in insn 5
changing reg in insn 70
changing reg in insn 47
changing reg in insn 58
changing reg in insn 6
changing reg in insn 75
changing reg in insn 59
changing reg in insn 157
changing reg in insn 175
changing reg in insn 88
changing reg in insn 208
changing reg in insn 95
changing reg in insn 90
changing reg in insn 100
changing reg in insn 207
changing reg in insn 95
changing reg in insn 100
changing reg in insn 70
changing reg in insn 75
changing reg in insn 83
changing reg in insn 205
changing reg in insn 106
changing reg in insn 107
changing reg in insn 193
changing reg in insn 65
changing reg in insn 53
changing reg in insn 41
changing reg in insn 27
changing reg in insn 106
changing reg in insn 103
changing reg in insn 90
changing reg in insn 88
changing reg in insn 85
changing reg in insn 83
changing reg in insn 77
changing reg in insn 72
changing reg in insn 58
changing reg in insn 46
changing reg in insn 34
changing reg in insn 32
changing reg in insn 20
changing reg in insn 18
changing reg in insn 90
changing reg in insn 88
changing reg in insn 114
changing reg in insn 198
changing reg in insn 197
changing reg in insn 163
changing reg in insn 200
changing reg in insn 199
changing reg in insn 202
changing reg in insn 133
changing reg in insn 100
deleting insn with uid = 125.
deleting insn with uid = 202.


try_optimize_cfg iteration 1

Deleting fallthru block 16.
deleting block 16


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 169.
verify found no changes in insn with uid = 172.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 19 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 18 (  1.1)


JOY_calibrate

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={22d,19u} r1={18d,12u} r2={14d,3u} r3={14d,3u} r4={1d,18u,2e} r5={1d,2u} r6={1d,2u} r7={2d,4u} r12={22d,2u} r13={1d,27u} r14={13d,2u} r15={10d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={18d,7u} r101={10d} r104={10d} r105={10d} r106={10d} 
;;    total ref usage 976{873d,101u,2e} in 122{112 regular + 10 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 2 10 2 (debug_marker) "../System/joystick.c":371:2 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:QI pressed_key (const_int 2 [0x2])) "../System/joystick.c":371:26 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/joystick.c":375:2 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:QI pressed_key (const_int 2 [0x2])) -1
     (nil))
(debug_insn 13 12 193 2 (debug_marker) "../System/joystick.c":375:8 -1
     (nil))
(insn 193 13 114 2 (set (reg/f:SI 4 r4 [169])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 114 193 163 2 (set (reg/f:SI 5 r5 [172])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 163 114 194 2 (set (reg/f:SI 6 r6 [173])
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82]  <var_decl 0000000007e8b750 *.LC12>)) "../System/joystick.c":435:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC12") [flags 0x82]  <var_decl 0000000007e8b750 *.LC12>)
        (nil)))
(note 194 163 179 2 NOTE_INSN_DELETED)
(code_label 179 194 14 3 49 (nil) [2 uses])
(note 14 179 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (var_location:QI pressed_key (const_int 2 [0x2])) -1
     (nil))
(debug_insn 16 15 18 3 (debug_marker) "../System/joystick.c":382:4 -1
     (nil))
(insn 18 16 20 3 (set (reg:SI 0 r0 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 12 [0xc])) [5 joystick.position_raw[0]+0 S2 A32]))) "../System/joystick.c":382:30 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [5 joystick.position_raw[0]+0 S2 A32]))
        (nil)))
(insn 20 18 21 3 (set (reg:SI 14 lr [orig:114 _2 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 16 [0x10])) [5 joystick.position_raw_min[0]+0 S2 A64]))) "../System/joystick.c":382:61 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [5 joystick.position_raw_min[0]+0 S2 A64]))
        (nil)))
(insn 21 20 22 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:113 _1 ] [113])
            (reg:SI 14 lr [orig:114 _2 ] [114]))) "../System/joystick.c":382:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../System/joystick.c":382:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 28)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 27 4 (debug_marker) "../System/joystick.c":386:5 -1
     (nil))
(insn 27 24 3 4 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 16 [0x10])) [5 joystick.position_raw_min[0]+0 S2 A64])
        (reg:HI 0 r0 [orig:113 _1 ] [113])) "../System/joystick.c":386:34 724 {*thumb2_movhi_vfp}
     (nil))
(insn 3 27 28 4 (set (reg:SI 14 lr [orig:114 _2 ] [114])
        (reg:SI 0 r0 [orig:113 _1 ] [113])) "../System/joystick.c":386:34 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 28 3 29 5 41 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 30 29 32 5 (debug_marker) "../System/joystick.c":391:4 -1
     (nil))
(insn 32 30 34 5 (set (reg:SI 1 r1 [orig:115 _3 ] [115])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 14 [0xe])) [5 joystick.position_raw[1]+0 S2 A16]))) "../System/joystick.c":391:30 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 14 [0xe]))) [5 joystick.position_raw[1]+0 S2 A16]))
        (nil)))
(insn 34 32 35 5 (set (reg:SI 12 ip [orig:116 _4 ] [116])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 18 [0x12])) [5 joystick.position_raw_min[1]+0 S2 A16]))) "../System/joystick.c":391:61 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 18 [0x12]))) [5 joystick.position_raw_min[1]+0 S2 A16]))
        (nil)))
(insn 35 34 36 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:115 _3 ] [115])
            (reg:SI 12 ip [orig:116 _4 ] [116]))) "../System/joystick.c":391:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "../System/joystick.c":391:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 42)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 38 37 41 6 (debug_marker) "../System/joystick.c":395:5 -1
     (nil))
(insn 41 38 4 6 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 18 [0x12])) [5 joystick.position_raw_min[1]+0 S2 A16])
        (reg:HI 1 r1 [orig:115 _3 ] [115])) "../System/joystick.c":395:34 724 {*thumb2_movhi_vfp}
     (nil))
(insn 4 41 42 6 (set (reg:SI 12 ip [orig:116 _4 ] [116])
        (reg:SI 1 r1 [orig:115 _3 ] [115])) "../System/joystick.c":395:34 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 42 4 43 7 42 (nil) [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 43 46 7 (debug_marker) "../System/joystick.c":403:4 -1
     (nil))
(insn 46 44 47 7 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 20 [0x14])) [5 joystick.position_raw_max[0]+0 S2 A32]))) "../System/joystick.c":403:61 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 20 [0x14]))) [5 joystick.position_raw_max[0]+0 S2 A32]))
        (nil)))
(insn 47 46 48 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:113 _1 ] [113])
            (reg:SI 2 r2 [orig:117 _5 ] [117]))) "../System/joystick.c":403:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../System/joystick.c":403:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 54)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 50 49 53 8 (debug_marker) "../System/joystick.c":407:5 -1
     (nil))
(insn 53 50 5 8 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 20 [0x14])) [5 joystick.position_raw_max[0]+0 S2 A32])
        (reg:HI 0 r0 [orig:113 _1 ] [113])) "../System/joystick.c":407:34 724 {*thumb2_movhi_vfp}
     (nil))
(insn 5 53 54 8 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (reg:SI 0 r0 [orig:113 _1 ] [113])) "../System/joystick.c":407:34 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 54 5 55 9 43 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 56 55 58 9 (debug_marker) "../System/joystick.c":412:4 -1
     (nil))
(insn 58 56 59 9 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 22 [0x16])) [5 joystick.position_raw_max[1]+0 S2 A16]))) "../System/joystick.c":412:61 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 22 [0x16]))) [5 joystick.position_raw_max[1]+0 S2 A16]))
        (nil)))
(insn 59 58 60 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:115 _3 ] [115])
            (reg:SI 3 r3 [orig:118 _6 ] [118]))) "../System/joystick.c":412:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "../System/joystick.c":412:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 66)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 61 65 10 (debug_marker) "../System/joystick.c":416:5 -1
     (nil))
(insn 65 62 6 10 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 22 [0x16])) [5 joystick.position_raw_max[1]+0 S2 A16])
        (reg:HI 1 r1 [orig:115 _3 ] [115])) "../System/joystick.c":416:34 724 {*thumb2_movhi_vfp}
     (nil))
(insn 6 65 66 10 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (reg:SI 1 r1 [orig:115 _3 ] [115])) "../System/joystick.c":416:34 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 66 6 67 11 44 (nil) [1 uses])
(note 67 66 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 99 67 68 11 NOTE_INSN_DELETED)
(debug_insn 68 99 88 11 (debug_marker) "../System/joystick.c":422:3 -1
     (nil))
(insn 88 68 90 11 (set (reg/f:SI 0 r0 [orig:125 _37 ] [125])
        (mem/f/c:SI (reg/f:SI 4 r4 [169]) [2 joystick.button.port+0 S4 A64])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 4 r4 [169]) [2 joystick.button.port+0 S4 A64])
        (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [2 joystick.button.port+0 S4 A64])
            (nil))))
(insn 90 88 208 11 (set (reg:SI 1 r1 [orig:126 _38 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [3 joystick.button.pin+0 S4 A32])
            (nil))))
(debug_insn 208 90 95 11 (var_location:SI D#28 (reg/f:SI 0 r0 [orig:125 _37 ] [125])) -1
     (nil))
(insn 95 208 83 11 (set (reg:SI 7 r7 [orig:127 _39 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 0 r0 [orig:125 _37 ] [125])
                (const_int 16 [0x10])) [3 _37->IDR+0 S4 A32])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 83 95 207 11 (set (reg:SI 0 r0 [orig:153 joystick.button.state_new ] [153])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64]))) "../System/joystick.c":279:28 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 joystick.button.state_new+0 S1 A64]))
        (nil)))
(debug_insn 207 83 100 11 (var_location:SI D#27 (reg:SI 1 r1 [orig:126 _38 ] [126])) -1
     (nil))
(insn 100 207 205 11 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (and:SI (not:SI (reg:SI 7 r7 [orig:127 _39 ] [127]))
                        (reg:SI 1 r1 [orig:126 _38 ] [126]))
                    (const_int 0 [0])))
            (clobber (reg:SI 1 r1 [176]))
        ]) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 105 {*andsi_notsi_si_compare0_scratch}
     (nil))
(insn 205 100 85 11 (set (reg:SI 1 r1 [159])
        (if_then_else:SI (eq:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (const_int 1 [0x1])
            (const_int 0 [0]))) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 986 {*thumb2_movsicc_insn}
     (nil))
(insn 85 205 103 11 (set (mem/c:QI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 9 [0x9])) [0 joystick.button.state_old+0 S1 A8])
        (reg:QI 0 r0 [orig:153 joystick.button.state_new ] [153])) "../System/joystick.c":279:28 263 {*arm_movqi_insn}
     (nil))
(insn 103 85 106 11 (set (mem/c:QI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64])
        (reg:QI 1 r1 [159])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 263 {*arm_movqi_insn}
     (nil))
(insn 106 103 70 11 (set (reg:SI 1 r1 [orig:162 joystick+8 ] [162])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                    (const_int 8 [0x8])) [4 joystick+8 S2 A64]))) "../System/joystick.c":288:5 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [4 joystick+8 S2 A64]))
        (nil)))
(insn 70 106 75 11 (set (reg:SI 2 r2 [146])
        (minus:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (reg:SI 14 lr [orig:114 _2 ] [114]))) "../System/joystick.c":422:65 45 {*arm_subsi3_insn}
     (nil))
(insn 75 70 72 11 (set (reg:SI 3 r3 [149])
        (minus:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (reg:SI 12 ip [orig:116 _4 ] [116]))) "../System/joystick.c":423:65 45 {*arm_subsi3_insn}
     (nil))
(insn 72 75 73 11 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 24 [0x18])) [5 joystick.position_raw_range[0]+0 S2 A64])
        (reg:HI 2 r2 [146])) "../System/joystick.c":422:34 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 73 72 77 11 (debug_marker) "../System/joystick.c":423:3 -1
     (nil))
(insn 77 73 78 11 (set (mem/c:HI (plus:SI (reg/f:SI 4 r4 [169])
                (const_int 26 [0x1a])) [5 joystick.position_raw_range[1]+0 S2 A16])
        (reg:HI 3 r3 [149])) "../System/joystick.c":423:34 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 78 77 79 11 (debug_marker) "../System/joystick.c":428:3 -1
     (nil))
(debug_insn 79 78 80 11 (debug_marker:BLK) "../System/joystick.c":274:6 -1
     (nil))
(debug_insn 80 79 86 11 (debug_marker) "../System/joystick.c":279:2 -1
     (nil))
(debug_insn 86 80 91 11 (debug_marker) "../System/joystick.c":282:2 -1
     (nil))
(debug_insn 91 86 92 11 (var_location:SI GPIOx (debug_expr:SI D#28)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 92 91 93 11 (var_location:SI PinMask (debug_expr:SI D#27)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 93 92 94 11 (debug_marker:BLK) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":813:26 -1
     (nil))
(debug_insn 94 93 96 11 (debug_marker) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:3 -1
     (nil))
(debug_insn 96 94 97 11 (var_location:SI GPIOx (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 97 96 104 11 (var_location:SI PinMask (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 104 97 107 11 (debug_marker) "../System/joystick.c":288:2 -1
     (nil))
(insn 107 104 108 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:162 joystick+8 ] [162])
            (const_int 256 [0x100]))) "../System/joystick.c":288:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 108 107 109 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "../System/joystick.c":288:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 116)
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 110 109 111 12 (debug_marker:BLK) "../System/joystick.c":274:6 -1
     (nil))
(debug_insn 111 110 196 12 (debug_marker) "../System/joystick.c":294:3 -1
     (nil))
(insn 196 111 197 12 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 197 196 115 12 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [172])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 115 197 116 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>) [0 BUF_store_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":294:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(code_label 116 115 117 13 45 (nil) [1 uses])
(note 117 116 128 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 128 117 132 13 NOTE_INSN_DELETED)
(note 132 128 118 13 NOTE_INSN_DELETED)
(debug_insn 118 132 119 13 (debug_marker) "../System/joystick.c":429:3 -1
     (nil))
(debug_insn 119 118 120 13 (debug_marker:BLK) "../System/joystick.c":305:25 -1
     (nil))
(debug_insn 120 119 121 13 (debug_marker) "../System/joystick.c":311:2 -1
     (nil))
(debug_insn 121 120 122 13 (debug_marker) "../System/joystick.c":312:2 -1
     (nil))
(debug_insn 122 121 210 13 (debug_marker) "../System/joystick.c":317:2 -1
     (nil))
(insn 210 122 198 13 (set (reg:SI 1 r1 [177])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 7 [0x7]))) "../System/joystick.c":317:16 7 {*arm_addsi3}
     (nil))
(insn 198 210 127 13 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [172])) "../System/joystick.c":317:16 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 127 198 130 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>) [0 BUF_get_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":317:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 130 127 131 13 (var_location:QI return_code (reg:QI 0 r0 [174])) "../System/joystick.c":317:16 -1
     (nil))
(debug_insn 131 130 133 13 (debug_marker) "../System/joystick.c":322:2 -1
     (nil))
(jump_insn 133 131 134 13 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [174])
                        (const_int 0 [0]))
                    (label_ref 154)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/joystick.c":322:5 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 697932188 (nil))
 -> 154)
(note 134 133 135 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 135 134 136 14 (var_location:QI return_code (clobber (const_int 0 [0]))) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 136 135 137 14 (var_location:QI pressed_button (clobber (const_int 0 [0]))) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 137 136 138 14 (var_location:QI pressed_key (const_int 2 [0x2])) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 138 137 200 14 (debug_marker) "../System/joystick.c":435:3 -1
     (nil))
(insn 200 138 141 14 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [173])) "../System/joystick.c":435:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 141 200 142 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>) [0 __builtin_puts S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":435:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 142 141 143 14 (debug_marker) "../System/joystick.c":436:3 -1
     (nil))
(call_insn 143 142 144 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("JOY_SCI_send_status") [flags 0x3]  <function_decl 00000000078df800 JOY_SCI_send_status>) [0 JOY_SCI_send_status S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":436:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_SCI_send_status") [flags 0x3]  <function_decl 00000000078df800 JOY_SCI_send_status>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 144 143 145 14 (debug_marker) "../System/joystick.c":440:3 -1
     (nil))
(insn 145 144 146 14 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) "../System/joystick.c":440:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 146 145 147 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":440:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 147 146 148 14 (debug_marker) "../System/joystick.c":441:3 -1
     (nil))
(insn 148 147 149 14 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/joystick.c":441:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 149 148 150 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 00000000079f0000 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":441:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 00000000079f0000 LED_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 150 149 151 14 (var_location:QI pressed_key (const_int 2 [0x2])) -1
     (nil))
(debug_insn 151 150 203 14 (debug_marker) "../System/joystick.c":375:8 -1
     (nil))
(jump_insn 203 151 204 14 (set (pc)
        (label_ref 179)) 284 {*arm_jump}
     (nil)
 -> 179)
(barrier 204 203 154)
(code_label 154 204 155 15 46 (nil) [1 uses])
(note 155 154 156 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 156 155 199 15 (debug_marker) "../System/joystick.c":326:3 -1
     (nil))
(insn 199 156 157 15 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [173])) "../System/joystick.c":435:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 157 199 158 15 (set (reg:SI 7 r7 [orig:123 _32 ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 7 [0x7])) [0 pressed_button+0 S1 A8]))) "../System/joystick.c":326:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 158 157 159 15 (var_location:QI return_code (clobber (const_int 0 [0]))) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 159 158 160 15 (var_location:QI pressed_button (clobber (const_int 0 [0]))) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 160 159 161 15 (var_location:QI pressed_key (reg:QI 7 r7 [orig:123 _32 ] [123])) "../System/joystick.c":429:17 -1
     (nil))
(debug_insn 161 160 164 15 (debug_marker) "../System/joystick.c":435:3 -1
     (nil))
(call_insn 164 161 165 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>) [0 __builtin_puts S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":435:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("puts") [flags 0x41]  <function_decl 000000000673b200 __builtin_puts>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 165 164 166 15 (debug_marker) "../System/joystick.c":436:3 -1
     (nil))
(call_insn 166 165 167 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("JOY_SCI_send_status") [flags 0x3]  <function_decl 00000000078df800 JOY_SCI_send_status>) [0 JOY_SCI_send_status S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":436:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_SCI_send_status") [flags 0x3]  <function_decl 00000000078df800 JOY_SCI_send_status>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 167 166 168 15 (debug_marker) "../System/joystick.c":440:3 -1
     (nil))
(insn 168 167 169 15 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) "../System/joystick.c":440:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 169 168 170 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":440:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 170 169 171 15 (debug_marker) "../System/joystick.c":441:3 -1
     (nil))
(insn 171 170 172 15 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/joystick.c":441:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 172 171 173 15 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 00000000079f0000 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":441:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 00000000079f0000 LED_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 173 172 174 15 (var_location:QI pressed_key (reg:QI 7 r7 [orig:123 _32 ] [123])) -1
     (nil))
(debug_insn 174 173 175 15 (debug_marker) "../System/joystick.c":375:8 -1
     (nil))
(insn 175 174 176 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 7 r7 [orig:123 _32 ] [123])
            (const_int 2 [0x2]))) "../System/joystick.c":375:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 176 175 206 15 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 179)
            (pc))) "../System/joystick.c":375:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 786204220 (nil))
 -> 179)
(note 206 176 209 NOTE_INSN_DELETED)
(note 209 206 0 NOTE_INSN_DELETED)

;; Function JOY_button_demo (JOY_button_demo, funcdef_no=611, decl_uid=10127, cgraph_uid=615, symbol_order=618)

      Creating newreg=153
Removing SCRATCH in insn #28 (nop 0)
rescanning insn with uid = 28.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) r  (2) r {*andsi_notsi_si_compare0_scratch}
      Change to class GENERAL_REGS for r153
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=11,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 167:  (0) r  (1) I  (2) rI {*thumb2_movsicc_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 31:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
      Removing equiv init insn 51 (freq=385)
   51: r146:SI=sfp:SI+0x7
      REG_EQUIV sfp:SI-0x1
deleting insn with uid = 51.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 146 in operand 1 of insn 53 on equiv sfp:SI+0x7
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=154, assigning class CORE_REGS to r154
   53: r1:SI=r154:SI
      REG_EQUAL sfp:SI-0x1
    Inserting insn reload before:
  171: r154:SI=sfp:SI+0x7

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 171:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r154
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) l {*thumb2_cbnz}
Changing pseudo 146 in operand 1 of insn 102 on equiv sfp:SI+0x7
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=155, assigning class CORE_REGS to r155
  102: r1:SI=r155:SI
      REG_EQUAL sfp:SI-0x1
    Inserting insn reload before:
  172: r155:SI=sfp:SI+0x7

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 172:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r155
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 143: point = 0, n_alt = 1
   Insn 142: point = 0, n_alt = 1
   Insn 140: point = 0, n_alt = -1
   Insn 138: point = 0, n_alt = 1
   Insn 139: point = 1, n_alt = 1
  BB 10
   Insn 128: point = 2, n_alt = -1
   Insn 127: point = 2, n_alt = 0
   Insn 121: point = 2, n_alt = 1
  BB 9
   Insn 110: point = 4, n_alt = 0
   Insn 166: point = 5, n_alt = -2
   Insn 104: point = 6, n_alt = -1
   Insn 161: point = 6, n_alt = -2
   Insn 102: point = 6, n_alt = 0
	Hard reg 1 is preferable by r155 with profit 945
   Insn 172: point = 7, n_alt = 4
  BB 8
   Insn 91: point = 9, n_alt = -1
   Insn 160: point = 9, n_alt = -2
  BB 7
   Insn 87: point = 11, n_alt = 0
  BB 6
   Insn 103: point = 12, n_alt = 5
  BB 5
   Insn 82: point = 14, n_alt = -1
   Insn 81: point = 14, n_alt = 0
   Insn 74: point = 14, n_alt = 1
  BB 4
   Insn 61: point = 16, n_alt = 0
   Insn 165: point = 17, n_alt = -2
   Insn 55: point = 18, n_alt = -1
   Insn 53: point = 18, n_alt = 0
	Hard reg 1 is preferable by r154 with profit 385
   Insn 171: point = 19, n_alt = 4
   Insn 54: point = 20, n_alt = 5
  r146 is added to live at bb4 start
  BB 3
   Insn 43: point = 21, n_alt = -1
   Insn 41: point = 21, n_alt = 1
   Insn 42: point = 21, n_alt = 5
  BB 2
   Insn 36: point = 22, n_alt = -1
   Insn 35: point = 22, n_alt = 3
   Insn 34: point = 23, n_alt = 1
   Insn 31: point = 24, n_alt = 6
   Insn 13: point = 25, n_alt = 6
   Insn 167: point = 26, n_alt = 6
   Insn 28: point = 27, n_alt = 0
   Insn 11: point = 29, n_alt = 1
   Insn 23: point = 30, n_alt = 5
   Insn 18: point = 32, n_alt = 5
   Insn 16: point = 33, n_alt = 5
   Insn 9: point = 34, n_alt = 5
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 17 count 14 (  1.2)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  119  120  121  127  133  136  147  153
    liveout: 2:

        7   13  102  103  147

BB 3:
    livein: 3:

      147
    liveout: 3:

        7   13  102  103  147

BB 4:
    killed: 4:

      100  150  154
    livein: 4:

      147
    liveout: 4:

        7   13  102  103  147

BB 5:
    killed: 5:

      100  116
    livein: 5:

      147
    liveout: 5:

        7   13  102  103  116  147

BB 6:
    killed: 6:

      149
    livein: 6:

      116  147
    liveout: 6:

        7   13  102  103  116  147  149

BB 7:
    gen: 7:

      116
    killed: 7:

      100
    livein: 7:

      116  147  149
    liveout: 7:

        7   13  102  103  116  147  149

BB 8:
    gen: 8:

      116
    livein: 8:

      116  147  149
    liveout: 8:

        7   13  102  103  147  149

BB 9:
    gen: 9:

      149
    killed: 9:

      100  151  155
    livein: 9:

      147  149
    liveout: 9:

        7   13  102  103  147  149

BB 10:
    killed: 10:

      100  116
    livein: 10:

      147  149
    liveout: 10:

        7   13  102  103  116  147  149

BB 11:
    gen: 11:

      147
    livein: 11:

      147
    liveout: 11:

        7   13  102  103
 r116: [9..14] [2..2]
 r119: [31..33]
 r120: [28..32]
 r121: [28..30]
 r127: [25..29]
 r133: [24..26]
 r136: [22..23]
 r146: [2..20]
 r147: [0..34]
 r149: [2..12]
 r150: [16..17]
 r151: [4..5]
 r153: [27..27]
 r154: [18..19]
 r155: [6..7]
Compressing live ranges: from 35 to 21 - 60%
Ranges after the compression:
 r116: [6..7] [1..1]
 r119: [19..20]
 r120: [17..20]
 r121: [17..18]
 r127: [14..18]
 r133: [14..15]
 r136: [12..13]
 r146: [1..11]
 r147: [0..20]
 r149: [1..7]
 r150: [8..9]
 r151: [2..3]
 r153: [16..16]
 r154: [10..11]
 r155: [4..5]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 11
   Insn 143: point = 0, n_alt = 1
   Insn 142: point = 0, n_alt = 1
   Insn 140: point = 0, n_alt = -1
   Insn 138: point = 0, n_alt = 1
   Insn 139: point = 1, n_alt = 1
  BB 10
   Insn 128: point = 2, n_alt = -1
   Insn 127: point = 2, n_alt = 0
   Insn 121: point = 2, n_alt = 1
  BB 9
   Insn 110: point = 4, n_alt = 0
   Insn 166: point = 5, n_alt = -2
   Insn 104: point = 6, n_alt = -1
   Insn 161: point = 6, n_alt = -2
   Insn 102: point = 6, n_alt = 0
	Hard reg 1 is preferable by r155 with profit 945
   Insn 172: point = 7, n_alt = 4
  BB 8
   Insn 91: point = 9, n_alt = -1
   Insn 160: point = 9, n_alt = -2
  BB 7
   Insn 87: point = 11, n_alt = 0
  BB 6
   Insn 103: point = 12, n_alt = 5
  BB 5
   Insn 82: point = 14, n_alt = -1
   Insn 81: point = 14, n_alt = 0
   Insn 74: point = 14, n_alt = 1
  BB 4
   Insn 61: point = 16, n_alt = 0
   Insn 165: point = 17, n_alt = -2
   Insn 55: point = 18, n_alt = -1
   Insn 53: point = 18, n_alt = 0
	Hard reg 1 is preferable by r154 with profit 385
   Insn 171: point = 19, n_alt = 4
   Insn 54: point = 20, n_alt = 5
  BB 3
   Insn 43: point = 21, n_alt = -1
   Insn 41: point = 21, n_alt = 1
   Insn 42: point = 21, n_alt = 5
  BB 2
   Insn 36: point = 22, n_alt = -1
   Insn 35: point = 22, n_alt = 3
   Insn 34: point = 23, n_alt = 1
   Insn 31: point = 24, n_alt = 6
   Insn 13: point = 25, n_alt = 6
   Insn 167: point = 26, n_alt = 6
   Insn 28: point = 27, n_alt = 0
   Insn 11: point = 29, n_alt = 1
   Insn 23: point = 30, n_alt = 5
   Insn 18: point = 32, n_alt = 5
   Insn 16: point = 33, n_alt = 5
   Insn 9: point = 34, n_alt = 5
 r116: [9..14] [2..2]
 r119: [31..33]
 r120: [28..32]
 r121: [28..30]
 r127: [25..29]
 r133: [24..26]
 r136: [22..23]
 r147: [0..34]
 r149: [2..12]
 r150: [16..17]
 r151: [4..5]
 r153: [27..27]
 r154: [18..19]
 r155: [6..7]
Compressing live ranges: from 35 to 21 - 60%
Ranges after the compression:
 r116: [6..7] [1..1]
 r119: [19..20]
 r120: [17..20]
 r121: [17..18]
 r127: [14..18]
 r133: [14..15]
 r136: [12..13]
 r147: [0..20]
 r149: [1..7]
 r150: [8..9]
 r151: [2..3]
 r153: [16..16]
 r154: [10..11]
 r155: [4..5]

********** Assignment #1: **********

	 Assigning to 155 (cl=GENERAL_REGS, orig=155, freq=1890, tfirst=155, tfreq=1890)...
	   Assign 1 to reload r155 (freq=1890)
	 Assigning to 154 (cl=GENERAL_REGS, orig=154, freq=770, tfirst=154, tfreq=770)...
	   Assign 1 to reload r154 (freq=770)
	 Assigning to 153 (cl=GENERAL_REGS, orig=153, freq=385, tfirst=153, tfreq=385)...
	   Assign 3 to reload r153 (freq=385)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=24)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 121
changing reg in insn 74
changing reg in insn 87
changing reg in insn 160
changing reg in insn 127
changing reg in insn 81
changing reg in insn 16
changing reg in insn 169
changing reg in insn 23
changing reg in insn 18
changing reg in insn 28
changing reg in insn 168
changing reg in insn 23
changing reg in insn 28
changing reg in insn 11
changing reg in insn 167
changing reg in insn 34
changing reg in insn 35
changing reg in insn 9
changing reg in insn 138
changing reg in insn 34
changing reg in insn 31
changing reg in insn 18
changing reg in insn 16
changing reg in insn 13
changing reg in insn 11
changing reg in insn 18
changing reg in insn 16
changing reg in insn 103
changing reg in insn 161
changing reg in insn 165
changing reg in insn 61
changing reg in insn 166
changing reg in insn 110
changing reg in insn 28
deleting insn with uid = 53.
deleting insn with uid = 165.
deleting insn with uid = 160.
deleting insn with uid = 102.
deleting insn with uid = 166.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 143.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 17 count 14 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 17 count 13 (  1.1)


JOY_button_demo

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={14d,17u} r1={12d,5u} r2={9d,3u} r3={11d,4u} r4={1d,7u,2e} r5={1d,1u} r12={12d} r13={1d,21u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={13d,4u} r101={6d} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 599{535d,62u,2e} in 87{81 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 27 2 NOTE_INSN_FUNCTION_BEG)
(note 27 2 5 2 NOTE_INSN_DELETED)
(debug_insn 5 27 6 2 (debug_marker) "../System/joystick.c":548:2 -1
     (nil))
(debug_insn 6 5 7 2 (debug_marker) "../System/joystick.c":552:2 -1
     (nil))
(debug_insn 7 6 8 2 (debug_marker:BLK) "../System/joystick.c":274:6 -1
     (nil))
(debug_insn 8 7 9 2 (debug_marker) "../System/joystick.c":279:2 -1
     (nil))
(insn 9 8 16 2 (set (reg/f:SI 4 r4 [147])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/joystick.c":279:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 16 9 18 2 (set (reg/f:SI 2 r2 [orig:119 _22 ] [119])
        (mem/f/c:SI (reg/f:SI 4 r4 [147]) [2 joystick.button.port+0 S4 A64])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 4 r4 [147]) [2 joystick.button.port+0 S4 A64])
        (expr_list:REG_EQUAL (mem/f/c:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [2 joystick.button.port+0 S4 A64])
            (nil))))
(insn 18 16 169 2 (set (reg:SI 3 r3 [orig:120 _23 ] [120])
        (mem/c:SI (plus:SI (reg/f:SI 4 r4 [147])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])) "../System/joystick.c":282:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (plus:SI (reg/f:SI 4 r4 [147])
                (const_int 4 [0x4])) [3 joystick.button.pin+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [3 joystick.button.pin+0 S4 A32])
            (nil))))
(debug_insn 169 18 23 2 (var_location:SI D#30 (reg/f:SI 2 r2 [orig:119 _22 ] [119])) -1
     (nil))
(insn 23 169 11 2 (set (reg:SI 1 r1 [orig:121 _24 ] [121])
        (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:119 _22 ] [119])
                (const_int 16 [0x10])) [3 _22->IDR+0 S4 A32])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 23 168 2 (set (reg:SI 2 r2 [orig:127 joystick.button.state_new ] [127])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 4 r4 [147])
                    (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64]))) "../System/joystick.c":279:28 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 joystick.button.state_new+0 S1 A64]))
        (nil)))
(debug_insn 168 11 28 2 (var_location:SI D#29 (reg:SI 3 r3 [orig:120 _23 ] [120])) -1
     (nil))
(insn 28 168 167 2 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (and:SI (not:SI (reg:SI 1 r1 [orig:121 _24 ] [121]))
                        (reg:SI 3 r3 [orig:120 _23 ] [120]))
                    (const_int 0 [0])))
            (clobber (reg:SI 3 r3 [153]))
        ]) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 105 {*andsi_notsi_si_compare0_scratch}
     (nil))
(insn 167 28 13 2 (set (reg:SI 3 r3 [133])
        (if_then_else:SI (eq:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (const_int 1 [0x1])
            (const_int 0 [0]))) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 986 {*thumb2_movsicc_insn}
     (nil))
(insn 13 167 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 4 r4 [147])
                (const_int 9 [0x9])) [0 joystick.button.state_old+0 S1 A8])
        (reg:QI 2 r2 [orig:127 joystick.button.state_new ] [127])) "../System/joystick.c":279:28 263 {*arm_movqi_insn}
     (nil))
(debug_insn 14 13 19 2 (debug_marker) "../System/joystick.c":282:2 -1
     (nil))
(debug_insn 19 14 20 2 (var_location:SI GPIOx (debug_expr:SI D#30)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 20 19 21 2 (var_location:SI PinMask (debug_expr:SI D#29)) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 21 20 22 2 (debug_marker:BLK) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":813:26 -1
     (nil))
(debug_insn 22 21 24 2 (debug_marker) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:3 -1
     (nil))
(debug_insn 24 22 25 2 (var_location:SI GPIOx (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(debug_insn 25 24 31 2 (var_location:SI PinMask (clobber (const_int 0 [0]))) "../System/joystick.c":282:30 -1
     (nil))
(insn 31 25 32 2 (set (mem/c:QI (plus:SI (reg/f:SI 4 r4 [147])
                (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64])
        (reg:QI 3 r3 [133])) "../Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h":815:62 263 {*arm_movqi_insn}
     (nil))
(debug_insn 32 31 34 2 (debug_marker) "../System/joystick.c":288:2 -1
     (nil))
(insn 34 32 35 2 (set (reg:SI 3 r3 [orig:136 joystick+8 ] [136])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 4 r4 [147])
                    (const_int 8 [0x8])) [4 joystick+8 S2 A64]))) "../System/joystick.c":288:5 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [4 joystick+8 S2 A64]))
        (nil)))
(insn 35 34 36 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 joystick+8 ] [136])
            (const_int 256 [0x100]))) "../System/joystick.c":288:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "../System/joystick.c":288:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 44)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 38 37 39 3 (debug_marker:BLK) "../System/joystick.c":274:6 -1
     (nil))
(debug_insn 39 38 42 3 (debug_marker) "../System/joystick.c":294:3 -1
     (nil))
(insn 42 39 41 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 41 42 43 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/joystick.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 43 41 44 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>) [0 BUF_store_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":294:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_store_byte") [flags 0x41]  <function_decl 0000000007b7c900 BUF_store_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(code_label 44 43 45 4 56 (nil) [1 uses])
(note 45 44 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 56 45 60 4 NOTE_INSN_DELETED)
(note 60 56 46 4 NOTE_INSN_DELETED)
(debug_insn 46 60 47 4 (debug_marker) "../System/joystick.c":555:2 -1
     (nil))
(debug_insn 47 46 48 4 (debug_marker:BLK) "../System/joystick.c":305:25 -1
     (nil))
(debug_insn 48 47 49 4 (debug_marker) "../System/joystick.c":311:2 -1
     (nil))
(debug_insn 49 48 50 4 (debug_marker) "../System/joystick.c":312:2 -1
     (nil))
(debug_insn 50 49 51 4 (debug_marker) "../System/joystick.c":317:2 -1
     (nil))
(note 51 50 54 4 NOTE_INSN_DELETED)
(insn 54 51 171 4 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":317:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 171 54 55 4 (set (reg:SI 1 r1 [154])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 7 [0x7]))) "../System/joystick.c":317:16 7 {*arm_addsi3}
     (nil))
(call_insn 55 171 58 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>) [0 BUF_get_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":317:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 58 55 59 4 (var_location:QI return_code (reg:QI 0 r0 [150])) "../System/joystick.c":317:16 -1
     (nil))
(debug_insn 59 58 61 4 (debug_marker) "../System/joystick.c":322:2 -1
     (nil))
(jump_insn 61 59 72 4 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [150])
                        (const_int 0 [0]))
                    (label_ref:SI 131)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/joystick.c":322:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 131)
(note 72 61 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 73 72 74 5 (debug_marker) "../System/joystick.c":326:3 -1
     (nil))
(insn 74 73 75 5 (set (reg/v:SI 0 r0 [orig:116 pressed_key ] [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 7 [0x7])) [0 MEM[(<unnamed type> *)_12]+0 S1 A8]))) "../System/joystick.c":326:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 75 74 76 5 (var_location:QI return_code (clobber (const_int 0 [0]))) "../System/joystick.c":555:16 -1
     (nil))
(debug_insn 76 75 77 5 (var_location:QI pressed_button (clobber (const_int 0 [0]))) "../System/joystick.c":555:16 -1
     (nil))
(debug_insn 77 76 78 5 (var_location:QI pressed_key (reg:QI 0 r0 [orig:116 pressed_key ] [116])) "../System/joystick.c":555:16 -1
     (nil))
(debug_insn 78 77 79 5 (debug_marker) "../System/joystick.c":559:2 -1
     (nil))
(debug_insn 79 78 80 5 (var_location:QI pressed_key (reg:QI 0 r0 [orig:116 pressed_key ] [116])) -1
     (nil))
(debug_insn 80 79 81 5 (debug_marker) "../System/joystick.c":559:8 -1
     (nil))
(insn 81 80 82 5 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:116 pressed_key ] [116])
            (const_int 2 [0x2]))) "../System/joystick.c":559:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 82 81 157 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 131)
            (pc))) "../System/joystick.c":559:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 15399172 (nil))
 -> 131)
(note 157 82 103 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 103 157 126 6 (set (reg/f:SI 5 r5 [149])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/joystick.c":317:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(code_label 126 103 83 7 62 (nil) [1 uses])
(note 83 126 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 86 83 84 7 NOTE_INSN_DELETED)
(debug_insn 84 86 85 7 (var_location:QI pressed_key (reg:QI 0 r0 [orig:116 pressed_key ] [116])) -1
     (nil))
(debug_insn 85 84 87 7 (debug_marker) "../System/joystick.c":562:3 -1
     (nil))
(jump_insn 87 85 88 7 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:SI 0 r0 [orig:116 pressed_key ] [116])
                        (const_int 0 [0]))
                    (label_ref 93)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/joystick.c":562:3 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 93)
(note 88 87 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 89 88 91 8 (debug_marker) "../System/joystick.c":565:6 -1
     (nil))
(call_insn 91 89 92 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_toggle") [flags 0x41]  <function_decl 00000000079f0200 LED_toggle>) [0 LED_toggle S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":565:6 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_toggle") [flags 0x41]  <function_decl 00000000079f0200 LED_toggle>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 92 91 93 8 (debug_marker) "../System/joystick.c":567:6 -1
     (nil))
(code_label 93 92 94 9 60 (nil) [1 uses])
(note 94 93 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 105 94 109 9 NOTE_INSN_DELETED)
(note 109 105 95 9 NOTE_INSN_DELETED)
(debug_insn 95 109 96 9 (debug_marker) "../System/joystick.c":574:3 -1
     (nil))
(debug_insn 96 95 97 9 (debug_marker:BLK) "../System/joystick.c":305:25 -1
     (nil))
(debug_insn 97 96 98 9 (debug_marker) "../System/joystick.c":311:2 -1
     (nil))
(debug_insn 98 97 99 9 (debug_marker) "../System/joystick.c":312:2 -1
     (nil))
(debug_insn 99 98 172 9 (debug_marker) "../System/joystick.c":317:2 -1
     (nil))
(insn 172 99 161 9 (set (reg:SI 1 r1 [155])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 7 [0x7]))) "../System/joystick.c":317:16 7 {*arm_addsi3}
     (nil))
(insn 161 172 104 9 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [149])) "../System/joystick.c":317:16 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 104 161 120 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>) [0 BUF_get_byte S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":317:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("BUF_get_byte") [flags 0x41]  <function_decl 0000000007b7cb00 BUF_get_byte>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 120 104 107 9 (debug_marker) "../System/joystick.c":326:3 -1
     (nil))
(debug_insn 107 120 108 9 (var_location:QI return_code (reg:QI 0 r0 [151])) "../System/joystick.c":317:16 -1
     (nil))
(debug_insn 108 107 110 9 (debug_marker) "../System/joystick.c":322:2 -1
     (nil))
(jump_insn 110 108 119 9 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [151])
                        (const_int 0 [0]))
                    (label_ref:SI 131)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/joystick.c":322:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 375809644 (nil))
 -> 131)
(note 119 110 121 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 121 119 122 10 (set (reg/v:SI 0 r0 [orig:116 pressed_key ] [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 7 [0x7])) [0 MEM[(<unnamed type> *)_12]+0 S1 A8]))) "../System/joystick.c":326:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 122 121 123 10 (var_location:QI return_code (clobber (const_int 0 [0]))) "../System/joystick.c":574:17 -1
     (nil))
(debug_insn 123 122 124 10 (var_location:QI pressed_button (clobber (const_int 0 [0]))) "../System/joystick.c":574:17 -1
     (nil))
(debug_insn 124 123 125 10 (var_location:QI pressed_key (reg:QI 0 r0 [orig:116 pressed_key ] [116])) -1
     (nil))
(debug_insn 125 124 127 10 (debug_marker) "../System/joystick.c":559:8 -1
     (nil))
(insn 127 125 128 10 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:116 pressed_key ] [116])
            (const_int 2 [0x2]))) "../System/joystick.c":559:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 128 127 131 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 126)
            (pc))) "../System/joystick.c":559:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1014686028 (nil))
 -> 126)
(code_label 131 128 132 11 58 (nil) [3 uses])
(note 132 131 137 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 137 132 133 11 NOTE_INSN_DELETED)
(debug_insn 133 137 134 11 (debug_marker) "../System/joystick.c":579:2 -1
     (nil))
(debug_insn 134 133 135 11 (debug_marker:BLK) "../System/joystick.c":343:29 -1
     (nil))
(debug_insn 135 134 139 11 (debug_marker) "../System/joystick.c":345:2 -1
     (nil))
(insn 139 135 138 11 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) "../System/joystick.c":579:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 138 139 140 11 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 4 r4 [147])
                    (const_int 8 [0x8])) [0 joystick.button.state_new+0 S1 A64]))) "../System/joystick.c":579:2 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(call_insn 140 138 141 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_set") [flags 0x41]  <function_decl 00000000079f0300 LED_set>) [0 LED_set S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/joystick.c":579:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_set") [flags 0x41]  <function_decl 00000000079f0300 LED_set>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 141 140 142 11 (debug_marker) "../System/joystick.c":583:2 -1
     (nil))
(insn 142 141 143 11 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) "../System/joystick.c":583:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 143 142 144 11 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/joystick.c":583:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 00000000078b0e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 144 143 170)
(note 170 144 0 NOTE_INSN_DELETED)

;; Function JOY_LED_demo (JOY_LED_demo, funcdef_no=612, decl_uid=10129, cgraph_uid=616, symbol_order=619)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


JOY_LED_demo

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 24{22d,2u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 8 2 (debug_marker) "../System/joystick.c":598:1 -1
     (nil))
(note 8 5 9 NOTE_INSN_DELETED)
(note 9 8 0 NOTE_INSN_DELETED)
