
;; Function UserPixelSetFunction (UserPixelSetFunction, funcdef_no=868, decl_uid=12909, cgraph_uid=872, symbol_order=878)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:SI 115 [ x ])
        (reg:SI 0 r0 [ x ])) "../System/lcd.c":168:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 116 [ y ])
        (reg:SI 1 r1 [ y ])) "../System/lcd.c":168:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 c+0 S4 A32])
        (reg:SI 2 r2 [ c ])) "../System/lcd.c":168:1 728 {*thumb2_movsi_vfp}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 5 9 2 (debug_marker) "../System/lcd.c":169:2 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) "../System/lcd.c":169:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../System/lcd.c":169:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 r1)
        (reg/v:SI 116 [ y ])) "../System/lcd.c":169:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (reg/v:SI 115 [ x ])) "../System/lcd.c":169:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":169:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 14 13 15 2 (debug_marker) "../System/lcd.c":170:2 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 117)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../System/lcd.c":170:2 7 {*arm_addsi3}
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/lcd.c":170:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 r0)
        (reg:SI 117)) "../System/lcd.c":170:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 18 17 0 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":170:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Function _HW_FillFrame_ (_HW_FillFrame_, funcdef_no=869, decl_uid=12915, cgraph_uid=873, symbol_order=879)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v:SI 124 [ x1 ])
        (reg:SI 0 r0 [ x1 ])) "../System/lcd.c":176:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 125 [ y1 ])
        (reg:SI 1 r1 [ y1 ])) "../System/lcd.c":176:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 126 [ x2 ])
        (reg:SI 2 r2 [ x2 ])) "../System/lcd.c":176:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 127 [ y2 ])
        (reg:SI 3 r3 [ y2 ])) "../System/lcd.c":176:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 128 [ c ])
        (mem/c:SI (reg/f:SI 103 afp) [2 c+0 S4 A64])) "../System/lcd.c":176:1 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 103 afp) [2 c+0 S4 A64])
        (nil)))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 12 7 13 2 (debug_marker) "../System/lcd.c":177:2 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/lcd.c":178:2 -1
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 126 [ x2 ])
            (reg/v:SI 124 [ x1 ]))) "../System/lcd.c":178:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "../System/lcd.c":178:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 22)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 17 16 18 3 (debug_marker) "../System/lcd.c":178:15 -1
     (nil))
(insn 18 17 19 3 (set (reg/v:SI 118 [ w ])
        (minus:SI (reg/v:SI 126 [ x2 ])
            (reg/v:SI 124 [ x1 ]))) "../System/lcd.c":178:17 45 {*arm_subsi3_insn}
     (nil))
(debug_insn 19 18 22 3 (var_location:SI w (reg/v:SI 118 [ w ])) "../System/lcd.c":178:17 -1
     (nil))
      ; pc falls through to BB 5
(code_label 22 19 23 4 5 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 4 (debug_marker) "../System/lcd.c":181:3 -1
     (nil))
(insn 25 24 26 4 (set (reg/v:SI 118 [ w ])
        (minus:SI (reg/v:SI 124 [ x1 ])
            (reg/v:SI 126 [ x2 ]))) "../System/lcd.c":181:5 45 {*arm_subsi3_insn}
     (nil))
(debug_insn 26 25 27 4 (var_location:SI w (reg/v:SI 118 [ w ])) "../System/lcd.c":181:5 -1
     (nil))
(debug_insn 27 26 28 4 (debug_marker) "../System/lcd.c":182:3 -1
     (nil))
(debug_insn 28 27 8 4 (var_location:SI x1 (reg/v:SI 126 [ x2 ])) "../System/lcd.c":182:6 -1
     (nil))
(insn 8 28 29 4 (set (reg/v:SI 124 [ x1 ])
        (reg/v:SI 126 [ x2 ])) "../System/lcd.c":181:5 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 29 8 30 5 6 (nil) [0 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 5 (var_location:SI w (reg/v:SI 118 [ w ])) -1
     (nil))
(debug_insn 32 31 33 5 (var_location:SI x1 (reg/v:SI 124 [ x1 ])) -1
     (nil))
(debug_insn 33 32 34 5 (debug_marker) "../System/lcd.c":184:2 -1
     (nil))
(insn 34 33 35 5 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 127 [ y2 ])
            (reg/v:SI 125 [ y1 ]))) "../System/lcd.c":184:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "../System/lcd.c":184:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 42)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 37 36 38 6 (debug_marker) "../System/lcd.c":184:15 -1
     (nil))
(insn 38 37 39 6 (set (reg/v:SI 119 [ h ])
        (minus:SI (reg/v:SI 127 [ y2 ])
            (reg/v:SI 125 [ y1 ]))) "../System/lcd.c":184:17 45 {*arm_subsi3_insn}
     (nil))
(debug_insn 39 38 42 6 (var_location:SI h (reg/v:SI 119 [ h ])) "../System/lcd.c":184:17 -1
     (nil))
      ; pc falls through to BB 8
(code_label 42 39 43 7 7 (nil) [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 43 45 7 (debug_marker) "../System/lcd.c":187:3 -1
     (nil))
(insn 45 44 46 7 (set (reg/v:SI 119 [ h ])
        (minus:SI (reg/v:SI 125 [ y1 ])
            (reg/v:SI 127 [ y2 ]))) "../System/lcd.c":187:5 45 {*arm_subsi3_insn}
     (nil))
(debug_insn 46 45 47 7 (var_location:SI h (reg/v:SI 119 [ h ])) "../System/lcd.c":187:5 -1
     (nil))
(debug_insn 47 46 48 7 (debug_marker) "../System/lcd.c":188:3 -1
     (nil))
(debug_insn 48 47 9 7 (var_location:SI y1 (reg/v:SI 127 [ y2 ])) "../System/lcd.c":188:6 -1
     (nil))
(insn 9 48 49 7 (set (reg/v:SI 125 [ y1 ])
        (reg/v:SI 127 [ y2 ])) "../System/lcd.c":187:5 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 49 9 50 8 8 (nil) [0 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 8 (var_location:SI h (reg/v:SI 119 [ h ])) -1
     (nil))
(debug_insn 52 51 53 8 (var_location:SI y1 (reg/v:SI 125 [ y1 ])) -1
     (nil))
(debug_insn 53 52 54 8 (debug_marker) "../System/lcd.c":191:2 -1
     (nil))
(insn 54 53 55 8 (set (reg:SI 115 [ w.8_3 ])
        (reg/v:SI 118 [ w ])) "../System/lcd.c":191:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 8 (set (reg:SI 116 [ h.9_4 ])
        (reg/v:SI 119 [ h ])) "../System/lcd.c":191:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 56 55 57 8 (var_location:SI x (reg/v:SI 124 [ x1 ])) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 57 56 58 8 (var_location:SI y (reg/v:SI 125 [ y1 ])) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 58 57 59 8 (var_location:SI w (reg:SI 115 [ w.8_3 ])) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 59 58 60 8 (var_location:SI h (reg:SI 116 [ h.9_4 ])) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 60 59 61 8 (var_location:HI c (subreg:HI (reg/v:SI 128 [ c ]) 0)) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 61 60 62 8 (debug_marker:BLK) "../System/lcd.c":69:6 -1
     (nil))
(debug_insn 62 61 63 8 (debug_marker) "../System/lcd.c":71:2 -1
     (nil))
(insn 63 62 64 8 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 64 63 65 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":71:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 65 64 66 8 (set (reg/v:SI 120 [ max_count ])
        (reg:SI 0 r0)) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 66 65 67 8 (var_location:SI max_count (reg/v:SI 120 [ max_count ])) "../System/lcd.c":71:25 -1
     (nil))
(debug_insn 67 66 68 8 (debug_marker) "../System/lcd.c":72:2 -1
     (nil))
(insn 68 67 69 8 (set (reg/v:SI 121 [ pixel_count ])
        (mult:SI (reg:SI 116 [ h.9_4 ])
            (reg:SI 115 [ w.8_3 ]))) "../System/lcd.c":72:11 56 {*mul}
     (nil))
(debug_insn 69 68 70 8 (var_location:SI pixel_count (reg/v:SI 121 [ pixel_count ])) "../System/lcd.c":72:11 -1
     (nil))
(debug_insn 70 69 71 8 (debug_marker) "../System/lcd.c":74:2 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg/v:SI 122 [ pixel_count ])
                (umin:SI (reg/v:SI 120 [ max_count ])
                    (reg/v:SI 121 [ pixel_count ])))
            (clobber (reg:CC 100 cc))
        ]) 973 {*thumb2_uminsi3}
     (nil))
(debug_insn 72 71 73 8 (var_location:SI pixel_count (reg/v:SI 122 [ pixel_count ])) -1
     (nil))
(debug_insn 73 72 74 8 (debug_marker) "../System/lcd.c":78:2 -1
     (nil))
(insn 74 73 75 8 (set (reg:SI 3 r3)
        (reg:SI 116 [ h.9_4 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 8 (set (reg:SI 2 r2)
        (reg:SI 115 [ w.8_3 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 8 (set (reg:SI 1 r1)
        (reg/v:SI 125 [ y1 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 8 (set (reg:SI 0 r0)
        (reg/v:SI 124 [ x1 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 78 77 79 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":78:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 79 78 80 8 (debug_marker) "../System/lcd.c":79:2 -1
     (nil))
(insn 80 79 81 8 (set (reg:SI 129)
        (zero_extend:SI (subreg:HI (reg/v:SI 128 [ c ]) 0))) "../System/lcd.c":79:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 81 80 82 8 (set (reg:SI 1 r1)
        (reg/v:SI 122 [ pixel_count ])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 8 (set (reg:SI 0 r0)
        (reg:SI 129)) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 83 82 84 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>) [0 ILI9341_SendRepeatedData S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":79:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 84 83 85 8 (var_location:SI x (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 85 84 86 8 (var_location:SI y (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 86 85 87 8 (var_location:SI w (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 87 86 88 8 (var_location:SI h (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 88 87 89 8 (var_location:HI c (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 89 88 90 8 (var_location:SI pixel_count (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 90 89 91 8 (var_location:SI max_count (clobber (const_int 0 [0]))) "../System/lcd.c":191:2 -1
     (nil))
(debug_insn 91 90 92 8 (debug_marker) "../System/lcd.c":193:2 -1
     (nil))
(insn 92 91 96 8 (set (reg:SI 123 [ <retval> ])
        (const_int 0 [0])) "../System/lcd.c":193:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 96 92 97 8 (set (reg/i:SI 0 r0)
        (reg:SI 123 [ <retval> ])) "../System/lcd.c":194:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 0 8 (use (reg/i:SI 0 r0)) "../System/lcd.c":194:1 -1
     (nil))

;; Function LCD_DisplayBuffer (LCD_DisplayBuffer, funcdef_no=862, decl_uid=11870, cgraph_uid=866, symbol_order=872)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 119 [ x ])
        (reg:SI 0 r0 [ x ])) "../System/lcd.c":39:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 120 [ y ])
        (reg:SI 1 r1 [ y ])) "../System/lcd.c":39:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 121 [ w ])
        (reg:SI 2 r2 [ w ])) "../System/lcd.c":39:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 122 [ h ])
        (reg:SI 3 r3 [ h ])) "../System/lcd.c":39:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg/v/f:SI 123 [ data ])
        (mem/f/c:SI (reg/f:SI 103 afp) [4 data+0 S4 A64])) "../System/lcd.c":39:1 728 {*thumb2_movsi_vfp}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 10 7 11 2 (debug_marker) "../System/lcd.c":40:8 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3)
        (reg/v:SI 122 [ h ])) "../System/lcd.c":40:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2)
        (reg/v:SI 121 [ w ])) "../System/lcd.c":40:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 r1)
        (reg/v:SI 120 [ y ])) "../System/lcd.c":40:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 r0)
        (reg/v:SI 119 [ x ])) "../System/lcd.c":40:8 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 15 14 16 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":40:8 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 16 15 17 2 (debug_marker) "../System/lcd.c":41:8 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 124)
        (mult:SI (reg/v:SI 122 [ h ])
            (reg/v:SI 121 [ w ]))) "../System/lcd.c":41:32 56 {*mul}
     (nil))
(insn 18 17 19 2 (set (reg:SI 1 r1)
        (reg:SI 124)) "../System/lcd.c":41:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 123 [ data ])) "../System/lcd.c":41:8 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 20 19 0 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":41:8 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Function LCD_FillRect (LCD_FillRect, funcdef_no=864, decl_uid=11878, cgraph_uid=868, symbol_order=874)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 116 [ x ])
        (reg:SI 0 r0 [ x ])) "../System/lcd.c":70:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 117 [ y ])
        (reg:SI 1 r1 [ y ])) "../System/lcd.c":70:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 118 [ w ])
        (reg:SI 2 r2 [ w ])) "../System/lcd.c":70:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 119 [ h ])
        (reg:SI 3 r3 [ h ])) "../System/lcd.c":70:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 120 [ c ])
        (zero_extend:SI (mem/c:HI (reg/f:SI 103 afp) [1 c+0 S2 A64]))) "../System/lcd.c":70:1 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 10 7 11 2 (debug_marker) "../System/lcd.c":71:2 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":71:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 13 12 14 2 (set (reg/v:SI 113 [ max_count ])
        (reg:SI 0 r0)) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 14 13 15 2 (var_location:SI max_count (reg/v:SI 113 [ max_count ])) "../System/lcd.c":71:25 -1
     (nil))
(debug_insn 15 14 16 2 (debug_marker) "../System/lcd.c":72:2 -1
     (nil))
(insn 16 15 17 2 (set (reg/v:SI 114 [ pixel_count ])
        (mult:SI (reg/v:SI 119 [ h ])
            (reg/v:SI 118 [ w ]))) "../System/lcd.c":72:11 56 {*mul}
     (nil))
(debug_insn 17 16 18 2 (var_location:SI pixel_count (reg/v:SI 114 [ pixel_count ])) "../System/lcd.c":72:11 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/lcd.c":74:2 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/v:SI 115 [ pixel_count ])
                (umin:SI (reg/v:SI 113 [ max_count ])
                    (reg/v:SI 114 [ pixel_count ])))
            (clobber (reg:CC 100 cc))
        ]) 973 {*thumb2_uminsi3}
     (nil))
(debug_insn 20 19 21 2 (var_location:SI pixel_count (reg/v:SI 115 [ pixel_count ])) -1
     (nil))
(debug_insn 21 20 22 2 (debug_marker) "../System/lcd.c":78:2 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 3 r3)
        (reg/v:SI 119 [ h ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2)
        (reg/v:SI 118 [ w ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 r1)
        (reg/v:SI 117 [ y ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (reg/v:SI 116 [ x ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":78:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 27 26 28 2 (debug_marker) "../System/lcd.c":79:2 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (reg/v:SI 115 [ pixel_count ])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (reg/v:SI 120 [ c ])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 30 29 0 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>) [0 ILI9341_SendRepeatedData S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":79:2 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Function LCD_Init (LCD_Init, funcdef_no=865, decl_uid=11871, cgraph_uid=869, symbol_order=875)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/lcd.c":95:2 -1
     (nil))
(debug_insn 6 5 7 2 (debug_marker:BLK) "../System/lcd.c":49:13 -1
     (nil))
(debug_insn 7 6 8 2 (debug_marker) "../System/lcd.c":51:2 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 118)
        (const_int 1207962624 [0x48000c00])) "../System/lcd.c":51:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 119)
        (const_int 8 [0x8])) "../System/lcd.c":51:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (mem/v:SI (plus:SI (reg/f:SI 118)
                (const_int 40 [0x28])) [7 MEM[(struct GPIO_TypeDef *)1207962624B].BRR+0 S4 A64])
        (reg:SI 119)) "../System/lcd.c":51:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/lcd.c":52:2 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (const_int 120 [0x78])) "../System/lcd.c":52:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":52:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 14 13 15 2 (debug_marker) "../System/lcd.c":53:2 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 120)
        (const_int 1207962624 [0x48000c00])) "../System/lcd.c":53:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 121)
        (const_int 8 [0x8])) "../System/lcd.c":53:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (mem/v:SI (plus:SI (reg/f:SI 120)
                (const_int 24 [0x18])) [7 MEM[(struct GPIO_TypeDef *)1207962624B].BSRR+0 S4 A64])
        (reg:SI 121)) "../System/lcd.c":53:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/lcd.c":54:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 r0)
        (const_int 120 [0x78])) "../System/lcd.c":54:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 20 19 21 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":54:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 21 20 22 2 (debug_marker) "../System/lcd.c":98:2 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) "../System/lcd.c":98:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg:SI 0 r0)
        (const_int 85 [0x55])) "../System/lcd.c":98:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 24 23 25 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_Init") [flags 0x41]  <function_decl 0000000006c72700 ILI9341_Init>) [0 ILI9341_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":98:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_Init") [flags 0x41]  <function_decl 0000000006c72700 ILI9341_Init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 25 24 26 2 (debug_marker) "../System/lcd.c":99:2 -1
     (nil))
(call_insn 26 25 27 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_DisplayOn") [flags 0x41]  <function_decl 0000000006c72900 ILI9341_DisplayOn>) [0 ILI9341_DisplayOn S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":99:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_DisplayOn") [flags 0x41]  <function_decl 0000000006c72900 ILI9341_DisplayOn>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 27 26 28 2 (debug_marker) "../System/lcd.c":101:2 -1
     (nil))
(debug_insn 28 27 29 2 (debug_marker:BLK) "../System/lcd.c":118:6 -1
     (nil))
(debug_insn 29 28 30 2 (debug_marker) "../System/lcd.c":120:5 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 31 30 32 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":120:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 32 31 33 2 (set (reg:SI 113 [ _8 ])
        (reg:SI 0 r0)) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":120:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 35 34 36 2 (set (reg:SI 114 [ _9 ])
        (reg:SI 0 r0)) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 36 35 37 2 (var_location:SI x (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 37 36 38 2 (var_location:SI y (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 38 37 39 2 (var_location:SI w (reg:SI 113 [ _8 ])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 39 38 40 2 (var_location:SI h (reg:SI 114 [ _9 ])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 40 39 41 2 (var_location:HI c (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 41 40 42 2 (debug_marker:BLK) "../System/lcd.c":69:6 -1
     (nil))
(debug_insn 42 41 43 2 (debug_marker) "../System/lcd.c":71:2 -1
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":71:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 45 44 46 2 (set (reg/v:SI 115 [ max_count ])
        (reg:SI 0 r0)) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 46 45 47 2 (var_location:SI max_count (reg/v:SI 115 [ max_count ])) "../System/lcd.c":71:25 -1
     (nil))
(debug_insn 47 46 48 2 (debug_marker) "../System/lcd.c":72:2 -1
     (nil))
(insn 48 47 49 2 (set (reg/v:SI 116 [ pixel_count ])
        (mult:SI (reg:SI 114 [ _9 ])
            (reg:SI 113 [ _8 ]))) "../System/lcd.c":72:11 56 {*mul}
     (nil))
(debug_insn 49 48 50 2 (var_location:SI pixel_count (reg/v:SI 116 [ pixel_count ])) "../System/lcd.c":72:11 -1
     (nil))
(debug_insn 50 49 51 2 (debug_marker) "../System/lcd.c":74:2 -1
     (nil))
(insn 51 50 52 2 (parallel [
            (set (reg/v:SI 117 [ pixel_count ])
                (umin:SI (reg/v:SI 115 [ max_count ])
                    (reg/v:SI 116 [ pixel_count ])))
            (clobber (reg:CC 100 cc))
        ]) 973 {*thumb2_uminsi3}
     (nil))
(debug_insn 52 51 53 2 (var_location:SI pixel_count (reg/v:SI 117 [ pixel_count ])) -1
     (nil))
(debug_insn 53 52 54 2 (debug_marker) "../System/lcd.c":78:2 -1
     (nil))
(insn 54 53 55 2 (set (reg:SI 3 r3)
        (reg:SI 114 [ _9 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 2 (set (reg:SI 2 r2)
        (reg:SI 113 [ _8 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 58 57 59 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":78:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 59 58 60 2 (debug_marker) "../System/lcd.c":79:2 -1
     (nil))
(insn 60 59 61 2 (set (reg:SI 1 r1)
        (reg/v:SI 117 [ pixel_count ])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 62 61 63 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>) [0 ILI9341_SendRepeatedData S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":79:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 63 62 64 2 (var_location:SI x (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 64 63 65 2 (var_location:SI y (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 65 64 66 2 (var_location:SI w (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 66 65 67 2 (var_location:SI h (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 67 66 68 2 (var_location:HI c (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 68 67 69 2 (var_location:SI max_count (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 69 68 70 2 (var_location:SI pixel_count (clobber (const_int 0 [0]))) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 70 69 71 2 (debug_marker) "../System/lcd.c":105:2 -1
     (nil))
(call_insn 71 70 72 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_WaitTransfer") [flags 0x41]  <function_decl 0000000006c72800 ILI9341_WaitTransfer>) [0 ILI9341_WaitTransfer S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":105:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_WaitTransfer") [flags 0x41]  <function_decl 0000000006c72800 ILI9341_WaitTransfer>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 72 71 73 2 (debug_marker) "../System/lcd.c":108:2 -1
     (nil))
(call_insn/j 73 72 0 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("LCD_BKLT_init") [flags 0x41]  <function_decl 0000000006e51700 LCD_BKLT_init>) [0 LCD_BKLT_init S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":108:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LCD_BKLT_init") [flags 0x41]  <function_decl 0000000006e51700 LCD_BKLT_init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; Function LCD_ClearScreen (LCD_ClearScreen, funcdef_no=866, decl_uid=11872, cgraph_uid=870, symbol_order=876)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/lcd.c":120:5 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":120:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":120:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 114 [ _2 ])
        (reg:SI 0 r0)) "../System/lcd.c":120:5 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 12 11 13 2 (var_location:SI x (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:SI y (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 14 13 15 2 (var_location:SI w (reg:SI 113 [ _1 ])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SI h (reg:SI 114 [ _2 ])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:HI c (const_int 0 [0])) "../System/lcd.c":120:5 -1
     (nil))
(debug_insn 17 16 18 2 (debug_marker:BLK) "../System/lcd.c":69:6 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/lcd.c":71:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 20 19 21 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":71:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 21 20 22 2 (set (reg/v:SI 115 [ max_count ])
        (reg:SI 0 r0)) "../System/lcd.c":71:25 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 22 21 23 2 (var_location:SI max_count (reg/v:SI 115 [ max_count ])) "../System/lcd.c":71:25 -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "../System/lcd.c":72:2 -1
     (nil))
(insn 24 23 25 2 (set (reg/v:SI 116 [ pixel_count ])
        (mult:SI (reg:SI 114 [ _2 ])
            (reg:SI 113 [ _1 ]))) "../System/lcd.c":72:11 56 {*mul}
     (nil))
(debug_insn 25 24 26 2 (var_location:SI pixel_count (reg/v:SI 116 [ pixel_count ])) "../System/lcd.c":72:11 -1
     (nil))
(debug_insn 26 25 27 2 (debug_marker) "../System/lcd.c":74:2 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/v:SI 117 [ pixel_count ])
                (umin:SI (reg/v:SI 115 [ max_count ])
                    (reg/v:SI 116 [ pixel_count ])))
            (clobber (reg:CC 100 cc))
        ]) 973 {*thumb2_uminsi3}
     (nil))
(debug_insn 28 27 29 2 (var_location:SI pixel_count (reg/v:SI 117 [ pixel_count ])) -1
     (nil))
(debug_insn 29 28 30 2 (debug_marker) "../System/lcd.c":78:2 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 3 r3)
        (reg:SI 114 [ _2 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg:SI 2 r2)
        (reg:SI 113 [ _1 ])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":78:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 34 33 35 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":78:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 35 34 36 2 (debug_marker) "../System/lcd.c":79:2 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 1 r1)
        (reg/v:SI 117 [ pixel_count ])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":79:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 38 37 0 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>) [0 ILI9341_SendRepeatedData S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":79:2 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendRepeatedData") [flags 0x41]  <function_decl 0000000006c72300 ILI9341_SendRepeatedData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Function LCD_demo_simple (LCD_demo_simple, funcdef_no=867, decl_uid=11879, cgraph_uid=871, symbol_order=877)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 2 7 2 (debug_marker) "../System/lcd.c":138:2 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 115)
        (const_int 63488 [0xf800])) "../System/lcd.c":138:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:HI 114)
        (subreg:HI (reg:SI 115) 0)) "../System/lcd.c":138:11 724 {*thumb2_movhi_vfp}
     (expr_list:REG_EQUAL (const_int -2048 [0xfffffffffffff800])
        (nil)))
(insn 9 8 10 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [1 color+0 S2 A16])
        (reg:HI 114)) "../System/lcd.c":138:11 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/lcd.c":142:2 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/lcd.c":142:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2)
        (const_int 320 [0x140])) "../System/lcd.c":142:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/lcd.c":142:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":142:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 15 14 16 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":142:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000006c72600 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 16 15 17 2 (debug_marker) "../System/lcd.c":145:2 -1
     (nil))
(debug_insn 17 16 18 2 (debug_marker) "../System/lcd.c":145:7 -1
     (nil))
(debug_insn 18 17 19 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 19 18 3 2 (debug_marker) "../System/lcd.c":145:21 -1
     (nil))
(insn 3 19 31 2 (set (reg:SI 113 [ ivtmp_1 ])
        (const_int 76800 [0x12c00])) "../System/lcd.c":142:2 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 31 3 20 3 21 (nil) [1 uses])
(note 20 31 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "../System/lcd.c":148:3 -1
     (nil))
(insn 23 22 24 3 (set (reg:SI 116)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2 [0xfffffffffffffffe]))) "../System/lcd.c":148:3 7 {*arm_addsi3}
     (nil))
(insn 24 23 25 3 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/lcd.c":148:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 3 (set (reg:SI 0 r0)
        (reg:SI 116)) "../System/lcd.c":148:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 26 25 27 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":148:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000006c72200 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 27 26 28 3 (debug_marker) "../System/lcd.c":145:32 -1
     (nil))
(debug_insn 28 27 29 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 29 28 30 3 (debug_marker) "../System/lcd.c":145:21 -1
     (nil))
(insn 30 29 32 3 (set (reg:SI 113 [ ivtmp_1 ])
        (plus:SI (reg:SI 113 [ ivtmp_1 ])
            (const_int -1 [0xffffffffffffffff]))) "../System/lcd.c":145:2 7 {*arm_addsi3}
     (nil))
(insn 32 30 33 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 113 [ ivtmp_1 ])
            (const_int 0 [0]))) "../System/lcd.c":145:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 34 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../System/lcd.c":145:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 31)
(note 34 33 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

;; Function LCD_uGUI_init (LCD_uGUI_init, funcdef_no=870, decl_uid=11881, cgraph_uid=874, symbol_order=880)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/lcd.c":206:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":206:38 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":206:38 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../System/lcd.c":206:38 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/lcd.c":206:67 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>) [0 ILI9341_GetParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":206:67 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_GetParam") [flags 0x41]  <function_decl 0000000006c72f00 ILI9341_GetParam>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 115 [ _3 ])
        (reg:SI 0 r0)) "../System/lcd.c":206:67 728 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 117)
        (symbol_ref:SI ("UserPixelSetFunction") [flags 0x3]  <function_decl 000000000702df00 UserPixelSetFunction>)) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 118)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3)
        (reg:SI 115 [ _3 ])) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 2 r2)
        (reg:SI 113 [ _1 ])) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 r1)
        (reg:SI 117)) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 r0)
        (reg/f:SI 118)) "../System/lcd.c":206:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 18 17 19 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("UG_Init") [flags 0x41]  <function_decl 0000000006e51d00 UG_Init>) [0 UG_Init S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":206:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_Init") [flags 0x41]  <function_decl 0000000006e51d00 UG_Init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 19 18 20 2 (debug_marker) "../System/lcd.c":209:2 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 119)
        (symbol_ref:SI ("FONT_8X12") [flags 0xc0]  <var_decl 0000000006db8630 FONT_8X12>)) "../System/lcd.c":209:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 r0)
        (reg:SI 119)) "../System/lcd.c":209:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 22 21 23 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>) [0 UG_FontSelect S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":209:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 23 22 24 2 (debug_marker) "../System/lcd.c":210:2 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 0 r0)
        (const_int 65535 [0xffff])) "../System/lcd.c":210:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 25 24 26 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":210:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 26 25 27 2 (debug_marker) "../System/lcd.c":211:2 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":211:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 28 27 29 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetBackcolor") [flags 0x41]  <function_decl 0000000006cb5200 UG_SetBackcolor>) [0 UG_SetBackcolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":211:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetBackcolor") [flags 0x41]  <function_decl 0000000006cb5200 UG_SetBackcolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 29 28 30 2 (debug_marker) "../System/lcd.c":214:2 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 120)
        (symbol_ref:SI ("_HW_FillFrame_") [flags 0x3]  <function_decl 0000000007031000 _HW_FillFrame_>)) "../System/lcd.c":214:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg:SI 1 r1)
        (reg:SI 120)) "../System/lcd.c":214:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/lcd.c":214:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 33 32 34 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_DriverRegister") [flags 0x41]  <function_decl 0000000006cb5b00 UG_DriverRegister>) [0 UG_DriverRegister S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":214:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_DriverRegister") [flags 0x41]  <function_decl 0000000006cb5b00 UG_DriverRegister>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 34 33 35 2 (debug_marker) "../System/lcd.c":215:2 -1
     (nil))
(insn 35 34 36 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/lcd.c":215:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 36 35 0 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_DriverEnable") [flags 0x41]  <function_decl 0000000006cb5c00 UG_DriverEnable>) [0 UG_DriverEnable S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":215:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_DriverEnable") [flags 0x41]  <function_decl 0000000006cb5c00 UG_DriverEnable>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))

;; Function LCD_uGUI_demo_Misko3 (LCD_uGUI_demo_Misko3, funcdef_no=871, decl_uid=11883, cgraph_uid=875, symbol_order=881)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/lcd.c":229:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/lcd.c":229:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillScreen") [flags 0x41]  <function_decl 0000000006cb1000 UG_FillScreen>) [0 UG_FillScreen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":229:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillScreen") [flags 0x41]  <function_decl 0000000006cb1000 UG_FillScreen>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 8 7 9 2 (debug_marker) "../System/lcd.c":231:2 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:HI pozicija_y (const_int 135 [0x87])) "../System/lcd.c":231:11 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:HI pozicija_x (const_int 150 [0x96])) "../System/lcd.c":231:27 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/lcd.c":233:2 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 113)
        (symbol_ref:SI ("FONT_32X53") [flags 0xc0]  <var_decl 0000000006db8750 FONT_32X53>)) "../System/lcd.c":233:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (reg:SI 113)) "../System/lcd.c":233:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 14 13 15 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>) [0 UG_FontSelect S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":233:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 15 14 16 2 (debug_marker) "../System/lcd.c":234:2 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 60445 [0xec1d])) "../System/lcd.c":234:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":234:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 18 17 19 2 (debug_marker) "../System/lcd.c":235:2 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 114)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0000000007275900 *.LC0>)) "../System/lcd.c":235:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:SI 2 r2)
        (reg:SI 114)) "../System/lcd.c":235:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":235:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 2 (set (reg:SI 0 r0)
        (const_int 60 [0x3c])) "../System/lcd.c":235:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 23 22 24 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":235:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 24 23 25 2 (debug_marker) "../System/lcd.c":237:2 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (const_int 31 [0x1f])) "../System/lcd.c":237:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":237:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 27 26 28 2 (debug_marker) "../System/lcd.c":238:2 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 115)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0000000007275990 *.LC1>)) "../System/lcd.c":238:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 2 (set (reg:SI 2 r2)
        (reg:SI 115)) "../System/lcd.c":238:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":238:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg:SI 0 r0)
        (const_int 90 [0x5a])) "../System/lcd.c":238:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 32 31 33 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":238:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 33 32 34 2 (debug_marker) "../System/lcd.c":240:2 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 0 r0)
        (const_int 2047 [0x7ff])) "../System/lcd.c":240:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 35 34 36 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":240:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 36 35 37 2 (debug_marker) "../System/lcd.c":241:2 -1
     (nil))
(insn 37 36 38 2 (set (reg:SI 116)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82]  <var_decl 0000000007275a20 *.LC2>)) "../System/lcd.c":241:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 2 (set (reg:SI 2 r2)
        (reg:SI 116)) "../System/lcd.c":241:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":241:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 2 (set (reg:SI 0 r0)
        (const_int 120 [0x78])) "../System/lcd.c":241:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 41 40 42 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":241:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 42 41 43 2 (debug_marker) "../System/lcd.c":243:2 -1
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 r0)
        (const_int 2016 [0x7e0])) "../System/lcd.c":243:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 44 43 45 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":243:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 45 44 46 2 (debug_marker) "../System/lcd.c":244:2 -1
     (nil))
(insn 46 45 47 2 (set (reg:SI 117)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82]  <var_decl 0000000007275ab0 *.LC3>)) "../System/lcd.c":244:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 2 (set (reg:SI 2 r2)
        (reg:SI 117)) "../System/lcd.c":244:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":244:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 2 (set (reg:SI 0 r0)
        (const_int 150 [0x96])) "../System/lcd.c":244:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 50 49 51 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":244:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 51 50 52 2 (debug_marker) "../System/lcd.c":246:2 -1
     (nil))
(insn 52 51 53 2 (set (reg:SI 0 r0)
        (const_int 65504 [0xffe0])) "../System/lcd.c":246:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 53 52 54 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":246:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 54 53 55 2 (debug_marker) "../System/lcd.c":247:2 -1
     (nil))
(insn 55 54 56 2 (set (reg:SI 118)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82]  <var_decl 0000000007275b40 *.LC4>)) "../System/lcd.c":247:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 2 (set (reg:SI 2 r2)
        (reg:SI 118)) "../System/lcd.c":247:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":247:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 2 (set (reg:SI 0 r0)
        (const_int 180 [0xb4])) "../System/lcd.c":247:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 59 58 60 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":247:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 60 59 61 2 (debug_marker) "../System/lcd.c":249:2 -1
     (nil))
(insn 61 60 62 2 (set (reg:SI 0 r0)
        (const_int 63488 [0xf800])) "../System/lcd.c":249:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 62 61 63 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":249:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 63 62 64 2 (debug_marker) "../System/lcd.c":250:2 -1
     (nil))
(insn 64 63 65 2 (set (reg:SI 119)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82]  <var_decl 0000000007275bd0 *.LC5>)) "../System/lcd.c":250:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 2 (set (reg:SI 2 r2)
        (reg:SI 119)) "../System/lcd.c":250:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 2 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) "../System/lcd.c":250:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 2 (set (reg:SI 0 r0)
        (const_int 220 [0xdc])) "../System/lcd.c":250:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 68 67 69 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":250:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 69 68 70 2 (debug_marker) "../System/lcd.c":252:2 -1
     (nil))
(insn 70 69 71 2 (set (reg:SI 0 r0)
        (const_int 65535 [0xffff])) "../System/lcd.c":252:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 71 70 72 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":252:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 0000000006cb5100 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 72 71 73 2 (debug_marker) "../System/lcd.c":253:2 -1
     (nil))
(insn 73 72 74 2 (set (reg:SI 120)
        (symbol_ref:SI ("FONT_16X26") [flags 0xc0]  <var_decl 0000000006db86c0 FONT_16X26>)) "../System/lcd.c":253:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 2 (set (reg:SI 0 r0)
        (reg:SI 120)) "../System/lcd.c":253:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 75 74 76 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>) [0 UG_FontSelect S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":253:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FontSelect") [flags 0x41]  <function_decl 0000000006e51f00 UG_FontSelect>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 76 75 77 2 (debug_marker) "../System/lcd.c":254:2 -1
     (nil))
(insn 77 76 78 2 (set (reg:SI 121)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82]  <var_decl 0000000007275c60 *.LC6>)) "../System/lcd.c":254:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 2 (set (reg:SI 2 r2)
        (reg:SI 121)) "../System/lcd.c":254:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 2 (set (reg:SI 1 r1)
        (const_int 185 [0xb9])) "../System/lcd.c":254:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 2 (set (reg:SI 0 r0)
        (const_int 5 [0x5])) "../System/lcd.c":254:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 81 80 0 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/lcd.c":254:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 0000000006cb1b00 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))

;; Function LCD_TCH_demo (LCD_TCH_demo, funcdef_no=872, decl_uid=11885, cgraph_uid=876, symbol_order=882)

Choices when optimizing for size:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Choices when optimizing for speed:
  Splitting mode DI for copy lowering.
  Skipping mode TI for copy lowering.
  Skipping mode EI for copy lowering.
  Skipping mode OI for copy lowering.
  Skipping mode CI for copy lowering.
  Skipping mode XI for copy lowering.
  Skipping mode DQ for copy lowering.
  Skipping mode TQ for copy lowering.
  Skipping mode UDQ for copy lowering.
  Skipping mode UTQ for copy lowering.
  Skipping mode DA for copy lowering.
  Skipping mode TA for copy lowering.
  Skipping mode UDA for copy lowering.
  Skipping mode UTA for copy lowering.
  Skipping mode DF for copy lowering.
  Skipping mode DD for copy lowering.
  Skipping mode TD for copy lowering.
  Skipping mode CSI for copy lowering.
  Skipping mode CDI for copy lowering.
  Skipping mode CTI for copy lowering.
  Skipping mode CEI for copy lowering.
  Skipping mode COI for copy lowering.
  Skipping mode CCI for copy lowering.
  Skipping mode CXI for copy lowering.
  Skipping mode SC for copy lowering.
  Skipping mode DC for copy lowering.
  Skipping mode V8QI for copy lowering.
  Skipping mode V4HI for copy lowering.
  Skipping mode V2SI for copy lowering.
  Skipping mode V16QI for copy lowering.
  Skipping mode V8HI for copy lowering.
  Skipping mode V4SI for copy lowering.
  Skipping mode V2DI for copy lowering.
  Skipping mode V4HF for copy lowering.
  Skipping mode V4BF for copy lowering.
  Skipping mode V2SF for copy lowering.
  Skipping mode V8HF for copy lowering.
  Skipping mode V8BF for copy lowering.
  Skipping mode V4SF for copy lowering.
  Skipping mode V2DF for copy lowering.
  Splitting mode DI for zero_extend lowering.
  Splitting mode DI for ashift lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for lshiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
  Splitting mode DI for ashiftrt lowering with shift amounts = 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

Nothing to lower in this function.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/lcd.c":277:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 123)
        (const_int 0 [0])) "../System/lcd.c":277:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:HI 122)
        (subreg:HI (reg:SI 123) 0)) "../System/lcd.c":277:11 724 {*thumb2_movhi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 8 7 9 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [1 x+0 S2 A32])
        (reg:HI 122)) "../System/lcd.c":277:11 724 {*thumb2_movhi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 125)
        (const_int 0 [0])) "../System/lcd.c":277:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:HI 124)
        (subreg:HI (reg:SI 125) 0)) "../System/lcd.c":277:18 724 {*thumb2_movhi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 11 10 12 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [1 y+0 S2 A16])
        (reg:HI 124)) "../System/lcd.c":277:18 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/lcd.c":282:2 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 126)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -2 [0xfffffffffffffffe]))) "../System/lcd.c":282:7 7 {*arm_addsi3}
     (nil))
(insn 14 13 15 2 (set (reg:SI 127)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../System/lcd.c":282:7 7 {*arm_addsi3}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (reg:SI 126)) "../System/lcd.c":282:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (reg:SI 127)) "../System/lcd.c":282:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("XPT2046_touch_get_coordinates_if_pressed") [flags 0x41]  <function_decl 0000000006e76700 XPT2046_touch_get_coordinates_if_pressed>) [0 XPT2046_touch_get_coordinates_if_pressed S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":282:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("XPT2046_touch_get_coordinates_if_pressed") [flags 0x41]  <function_decl 0000000006e76700 XPT2046_touch_get_coordinates_if_pressed>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 128)
        (reg:SI 0 r0)) "../System/lcd.c":282:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg:SI 113 [ _1 ])
        (reg:SI 128)) "../System/lcd.c":282:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 113 [ _1 ])
            (const_int 0 [0]))) "../System/lcd.c":282:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "../System/lcd.c":282:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 43)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 3 (debug_marker) "../System/lcd.c":286:3 -1
     (nil))
(insn 24 23 25 3 (set (reg:SI 129)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [1 y+0 S2 A16]))) "../System/lcd.c":286:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 25 24 26 3 (set (reg:SI 130)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -4 [0xfffffffffffffffc])) [1 x+0 S2 A32]))) "../System/lcd.c":286:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 26 25 27 3 (set (reg:SI 3 r3)
        (const_int 2016 [0x7e0])) "../System/lcd.c":286:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) "../System/lcd.c":286:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (reg:SI 1 r1)
        (reg:SI 129)) "../System/lcd.c":286:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 3 (set (reg:SI 0 r0)
        (reg:SI 130)) "../System/lcd.c":286:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 30 29 31 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillCircle") [flags 0x41]  <function_decl 0000000006cb1800 UG_FillCircle>) [0 UG_FillCircle S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":286:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillCircle") [flags 0x41]  <function_decl 0000000006cb1800 UG_FillCircle>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 31 30 32 3 (debug_marker) "../System/lcd.c":289:3 -1
     (nil))
(insn 32 31 33 3 (set (reg:SI 131)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -4 [0xfffffffffffffffc])) [1 x+0 S2 A32]))) "../System/lcd.c":289:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 33 32 34 3 (set (reg:SI 132)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82]  <var_decl 0000000007275ea0 *.LC7>)) "../System/lcd.c":289:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 3 (set (reg:SI 1 r1)
        (reg:SI 131)) "../System/lcd.c":289:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 3 (set (reg:SI 0 r0)
        (reg:SI 132)) "../System/lcd.c":289:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 36 35 37 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000005aa0b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":289:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000005aa0b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 37 36 38 3 (debug_marker) "../System/lcd.c":290:3 -1
     (nil))
(insn 38 37 39 3 (set (reg:SI 133)
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [1 y+0 S2 A16]))) "../System/lcd.c":290:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 39 38 40 3 (set (reg:SI 134)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82]  <var_decl 0000000007275f30 *.LC8>)) "../System/lcd.c":290:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 3 (set (reg:SI 1 r1)
        (reg:SI 133)) "../System/lcd.c":290:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 3 (set (reg:SI 0 r0)
        (reg:SI 134)) "../System/lcd.c":290:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 42 41 43 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000005aa0b00 printf>) [0 __builtin_printf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":290:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0000000005aa0b00 printf>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(code_label 43 42 44 4 33 (nil) [1 uses])
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 45 44 46 4 (debug_marker) "../System/lcd.c":296:2 -1
     (nil))
(insn 46 45 47 4 (set (reg:SI 0 r0)
        (const_int 30 [0x1e])) "../System/lcd.c":296:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 47 46 0 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/lcd.c":296:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000006b59e00 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
