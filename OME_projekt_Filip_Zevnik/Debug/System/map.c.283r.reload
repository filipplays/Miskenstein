
;; Function generateMap (generateMap, funcdef_no=4, decl_uid=5634, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=40, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=2,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=18,losers=2 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=6,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=10,overall=9,losers=1,rld_nregs=1
          alt=11,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 11 in insn 21:  (0) k  (1) k  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) I {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 39:  (0) r  (1) j {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp} (sp_off=-576)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 83:  (0) *hk  (1) *mi {*thumb2_movsi_vfp} (sp_off=-576)
      Removing equiv init insn 113 (freq=1)
  113: r185:SI=r135:SI
      REG_EQUIV 0
deleting insn with uid = 113.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) r  (1) I  (2) r {subsi3_compare0}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =l  (1) 0  (2) l {*if_neg_move}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 77
	 Choosing alt 0 in insn 77:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 85
	 Choosing alt 0 in insn 85:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 86:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) l  (1) Py {*arm_cmpsi_insn}
Changing pseudo 185 in operand 1 of insn 115 on equiv 0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=22,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=7,overall=22,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=8,overall=9,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 115:  (0) r  (1) I {*arm_movqi_insn}
      Creating newreg=189, assigning class GENERAL_REGS to r189
  115: r189:QI=0
      REG_DEAD r156:SI
    Inserting insn reload after:
  361: [r156:SI+r179:SI]=r189:QI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=18,losers=2,rld_nregs=1
            1 Super set class reg: reject-=3
          alt=6,overall=3,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 361:  (0) m  (1) r {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 120:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) I {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 143:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) K {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 148:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 151:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) l  (1) Uw {unaligned_loadsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) Uw  (1) l {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 174:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 175:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) r {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 185:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 189:  (0) r  (1) rk  (2) L {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 198:  (0) Uu  (1) l {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 222:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 223:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 245:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 249:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) Uw  (1) l {unaligned_storesi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 252:  (0) Uu  (1) l {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 277:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 278:  (0) l  (1) 0  (2) Py {*arm_addsi3}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5 6 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25

********** Pseudo live ranges #1: **********

  BB 25
  BB 23
   Insn 354: point = 0, n_alt = -1
   Insn 266: point = 0, n_alt = -2
   Insn 265: point = 1, n_alt = -1
   Insn 264: point = 1, n_alt = -1
  BB 22
   Insn 352: point = 2, n_alt = -1
   Insn 258: point = 2, n_alt = -2
   Insn 257: point = 3, n_alt = -1
   Insn 256: point = 3, n_alt = -1
   Insn 252: point = 3, n_alt = 6
   Insn 250: point = 4, n_alt = 1
   Insn 249: point = 4, n_alt = 1
   Insn 248: point = 4, n_alt = 1
   Insn 247: point = 4, n_alt = 1
   Insn 245: point = 5, n_alt = 5
  BB 19
   Insn 225: point = 7, n_alt = -1
   Insn 224: point = 7, n_alt = 0
   Insn 223: point = 7, n_alt = 2
   Insn 222: point = 8, n_alt = 2
  BB 21
   Insn 350: point = 10, n_alt = -1
  BB 20
   Insn 238: point = 11, n_alt = -1
   Insn 237: point = 11, n_alt = 0
  BB 24
   Insn 356: point = 12, n_alt = -1
   Insn 278: point = 12, n_alt = 2
   Insn 277: point = 13, n_alt = 2
  BB 18
   Insn 346: point = 15, n_alt = -1
  BB 17
   Insn 212: point = 16, n_alt = -1
   Insn 211: point = 16, n_alt = 0
  BB 15
   Insn 193: point = 17, n_alt = -1
   Insn 192: point = 17, n_alt = 0
   Insn 189: point = 18, n_alt = 10
  BB 13
   Insn 340: point = 20, n_alt = -1
   Insn 185: point = 20, n_alt = 2
  BB 16
   Insn 342: point = 22, n_alt = -1
   Insn 198: point = 22, n_alt = 6
  BB 14
   Insn 6: point = 23, n_alt = 1
  BB 9
   Insn 334: point = 25, n_alt = -1
   Insn 196: point = 25, n_alt = 1
   Insn 7: point = 26, n_alt = 3
   Insn 143: point = 27, n_alt = 5
  BB 12
   Insn 338: point = 29, n_alt = -1
  BB 11
   Insn 178: point = 30, n_alt = -1
   Insn 177: point = 30, n_alt = 1
   Insn 175: point = 30, n_alt = 2
   Insn 174: point = 31, n_alt = 2
   Insn 168: point = 32, n_alt = 1
   Insn 169: point = 33, n_alt = 1
   Insn 167: point = 34, n_alt = 1
   Insn 166: point = 35, n_alt = 1
   Insn 164: point = 36, n_alt = 1
   Insn 163: point = 37, n_alt = 1
   Insn 162: point = 38, n_alt = 1
   Insn 165: point = 39, n_alt = 1
   Insn 161: point = 40, n_alt = 1
   Insn 160: point = 41, n_alt = 1
   Insn 159: point = 42, n_alt = 1
   Insn 158: point = 43, n_alt = 1
  BB 10
   Insn 151: point = 45, n_alt = 4
   Insn 149: point = 46, n_alt = -2
   Insn 148: point = 48, n_alt = 5
  BB 7
   Insn 126: point = 50, n_alt = -1
   Insn 125: point = 50, n_alt = 3
   Insn 120: point = 50, n_alt = 4
   Insn 361: point = 51, n_alt = 8
   Insn 115: point = 52, n_alt = 2
  BB 6
   Insn 95: point = 54, n_alt = -1
   Insn 94: point = 54, n_alt = 0
   Insn 111: point = 54, n_alt = 1
   Insn 108: point = 56, n_alt = 1
  BB 5
   Insn 90: point = 58, n_alt = -1
   Insn 89: point = 58, n_alt = 0
   Insn 86: point = 59, n_alt = 4
   Insn 85: point = 60, n_alt = 0
   Insn 84: point = 62, n_alt = 5
  BB 4
   Insn 81: point = 65, n_alt = -1
   Insn 80: point = 65, n_alt = 0
   Insn 77: point = 65, n_alt = 0
   Insn 72: point = 67, n_alt = 5
  BB 3
   Insn 69: point = 69, n_alt = -1
   Insn 68: point = 69, n_alt = 0
   Insn 65: point = 69, n_alt = 0
   Insn 64: point = 71, n_alt = 0
   Insn 63: point = 73, n_alt = 0
   Insn 62: point = 75, n_alt = 2
   Insn 59: point = 76, n_alt = -2
   Insn 331: point = 78, n_alt = -2
   Insn 58: point = 79, n_alt = -1
  BB 8
   Insn 332: point = 80, n_alt = -1
   Insn 133: point = 80, n_alt = 0
   Insn 130: point = 82, n_alt = 0
  BB 2
   Insn 5: point = 85, n_alt = -2
   Insn 24: point = 86, n_alt = -2
   Insn 83: point = 87, n_alt = 6
   Insn 71: point = 88, n_alt = 5
   Insn 4: point = 89, n_alt = 1
   Insn 3: point = 90, n_alt = 1
   Insn 42: point = 91, n_alt = -1
   Insn 40: point = 91, n_alt = 1
   Insn 39: point = 91, n_alt = 4
   Insn 41: point = 91, n_alt = 5
   Insn 33: point = 91, n_alt = -1
   Insn 32: point = 91, n_alt = -2
   Insn 31: point = 91, n_alt = 1
   Insn 30: point = 91, n_alt = 1
   Insn 21: point = 91, n_alt = 11
   Insn 11: point = 91, n_alt = -2
  r185 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 35 count 48 (  1.8)
Global pseudo live data have been updated:

BB 2:
    gen: 2:

       13
    killed: 2:

       13  128  131  135  136  137  183  184
    livein: 2:

       13
    liveout: 2:

        7   13  102  103  128  131  135  136  137  183  184

BB 3:
    killed: 3:

      100  113  130  147  148  187
    livein: 3:

      128  131  135  136  137  183  184
    liveout: 3:

        7   13  102  103  128  130  131  135  136  137  183
      184

BB 4:
    gen: 4:

      130  137  183
    killed: 4:

      100  129  179
    livein: 4:

      128  130  131  135  136  137  183  184
    liveout: 4:

        7   13  102  103  128  130  131  135  136  137  179
      183  184

BB 5:
    gen: 5:

      130  136  184
    killed: 5:

      100  118  151  178
    livein: 5:

      128  130  131  135  136  137  179  183  184
    liveout: 5:

        7   13  102  103  128  131  135  136  137  178  179
      183  184

BB 6:
    gen: 6:

      131  178  179
    killed: 6:

      100  154  156
    livein: 6:

      128  131  135  136  137  178  179  183  184
    liveout: 6:

        7   13  102  103  128  131  135  136  137  156  178
      179  183  184

BB 7:
    gen: 7:

      135  156  179
    killed: 7:

      100  135  189
    livein: 7:

      128  131  135  156  178  179  183  184
    liveout: 7:

        7   13  102  103  128  131  135  178  179  183  184

BB 8:
    gen: 8:

      178  179
    killed: 8:

      136  137
    livein: 8:

      128  131  135  178  179  183  184
    liveout: 8:

        7   13  102  103  128  131  135  136  137  183  184

BB 9:
    killed: 9:

      124  126  181
    livein: 9:

      128
    liveout: 9:

        7   13  102  103  124  126  128  181

BB 10:
    gen: 10:

      131
    killed: 10:

      121  132  139
    livein: 10:

      128  131
    liveout: 10:

        7   13  102  103  121  128  132  139

BB 11:
    gen: 11:

      121  132  139
    killed: 11:

      100  121  132  165  166  167  168
    livein: 11:

      121  128  132  139
    liveout: 11:

        7   13  102  103  121  128  132  139

BB 12:
    livein: 12:

      128
    liveout: 12:

        7   13  102  103  128

BB 13:
    gen: 13:

      127
    killed: 13:

      127
    livein: 13:

      124  126  127  128  181
    liveout: 13:

        7   13  102  103  124  126  127  128  181

BB 14:
    killed: 14:

      127
    livein: 14:

      124  126  128  181
    liveout: 14:

        7   13  102  103  124  126  127  128  181

BB 15:
    gen: 15:

      127
    killed: 15:

      100  171
    livein: 15:

      124  126  127  128  181
    liveout: 15:

        7   13  102  103  124  126  127  128  181

BB 16:
    gen: 16:

      126  127  181
    livein: 16:

      124  126  127  128  181
    liveout: 16:

        7   13  102  103  124  126  127  128  181

BB 17:
    gen: 17:

      127
    killed: 17:

      100
    livein: 17:

      124  126  127  128  181
    liveout: 17:

        7   13  102  103  124  126  127  128  181

BB 18:
    livein: 18:

      124  126  128  181
    liveout: 18:

        7   13  102  103  124  126  128  181

BB 19:
    gen: 19:

      124  126
    killed: 19:

      100  124  126
    livein: 19:

      124  126  128  181
    liveout: 19:

        7   13  102  103  124  126  128  181

BB 20:
    gen: 20:

      124
    killed: 20:

      100
    livein: 20:

      124  126  128  181
    liveout: 20:

        7   13  102  103  124  126  128  181

BB 21:
    livein: 21:

      124  126  128  181
    liveout: 21:

        7   13  102  103  124  126  128  181

BB 22:
    gen: 22:

       13  128
    killed: 22:

       13  174  176
    livein: 22:

       13  128
    liveout: 22:

        7   13  102  103

BB 23:
    gen: 23:

       13  128
    killed: 23:

       13
    livein: 23:

       13  128
    liveout: 23:

        7   13  102  103

BB 24:
    gen: 24:

      124  126
    killed: 24:

      124  126
    livein: 24:

      124  126  128  181
    liveout: 24:

        7   13  102  103  124  126  128  181

BB 25:
    liveout: 25:

        7   13  102  103
 r113: [74..76]
 r118: [61..62]
 r121: [30..48]
 r124: [7..26]
 r126: [7..27]
 r127: [16..23]
 r128: [0..91]
 r129: [66..67]
 r130: [63..73]
 r131: [47..86]
 r132: [30..46]
 r135: [50..90]
 r136: [85..89] [54..80]
 r137: [85..85] [54..82]
 r139: [30..45]
 r147: [72..75]
 r148: [70..71]
 r151: [58..59]
 r154: [55..56]
 r156: [51..54]
 r165: [38..43] [32..35]
 r166: [37..42] [33..34]
 r167: [36..41]
 r168: [39..40]
 r171: [17..18]
 r174: [3..5]
 r176: [3..4]
 r178: [81..84] [50..60]
 r179: [83..84] [50..65]
 r181: [7..25]
 r183: [50..88]
 r184: [50..87]
 r185: [50..92]
 r187: [77..78]
 r189: [51..52]
Compressing live ranges: from 93 to 37 - 39%
Ranges after the compression:
 r113: [27..28]
 r118: [17..18]
 r121: [4..9]
 r124: [2..3]
 r126: [2..3]
 r127: [2..3]
 r128: [0..36]
 r129: [21..22]
 r130: [19..26]
 r131: [8..36]
 r132: [4..7]
 r135: [10..36]
 r136: [35..36] [12..30]
 r137: [35..35] [12..32]
 r139: [4..7]
 r147: [25..28]
 r148: [23..24]
 r151: [15..16]
 r154: [13..14]
 r156: [10..12]
 r165: [4..7]
 r166: [4..7]
 r167: [6..7]
 r168: [6..7]
 r171: [2..3]
 r174: [0..1]
 r176: [0..1]
 r178: [31..34] [10..16]
 r179: [33..34] [10..20]
 r181: [2..3]
 r183: [10..36]
 r184: [10..36]
 r185: [10..36]
 r187: [29..30]
 r189: [10..11]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 25
  BB 23
   Insn 354: point = 0, n_alt = -1
   Insn 266: point = 0, n_alt = -2
   Insn 265: point = 1, n_alt = -1
   Insn 264: point = 1, n_alt = -1
  BB 22
   Insn 352: point = 2, n_alt = -1
   Insn 258: point = 2, n_alt = -2
   Insn 257: point = 3, n_alt = -1
   Insn 256: point = 3, n_alt = -1
   Insn 252: point = 3, n_alt = 6
   Insn 250: point = 4, n_alt = 1
   Insn 249: point = 4, n_alt = 1
   Insn 248: point = 4, n_alt = 1
   Insn 247: point = 4, n_alt = 1
   Insn 245: point = 5, n_alt = 5
  BB 19
   Insn 225: point = 7, n_alt = -1
   Insn 224: point = 7, n_alt = 0
   Insn 223: point = 7, n_alt = 2
   Insn 222: point = 8, n_alt = 2
  BB 21
   Insn 350: point = 10, n_alt = -1
  BB 20
   Insn 238: point = 11, n_alt = -1
   Insn 237: point = 11, n_alt = 0
  BB 24
   Insn 356: point = 12, n_alt = -1
   Insn 278: point = 12, n_alt = 2
   Insn 277: point = 13, n_alt = 2
  BB 18
   Insn 346: point = 15, n_alt = -1
  BB 17
   Insn 212: point = 16, n_alt = -1
   Insn 211: point = 16, n_alt = 0
  BB 15
   Insn 193: point = 17, n_alt = -1
   Insn 192: point = 17, n_alt = 0
   Insn 189: point = 18, n_alt = 10
  BB 13
   Insn 340: point = 20, n_alt = -1
   Insn 185: point = 20, n_alt = 2
  BB 16
   Insn 342: point = 22, n_alt = -1
   Insn 198: point = 22, n_alt = 6
  BB 14
   Insn 6: point = 23, n_alt = 1
  BB 9
   Insn 334: point = 25, n_alt = -1
   Insn 196: point = 25, n_alt = 1
   Insn 7: point = 26, n_alt = 3
   Insn 143: point = 27, n_alt = 5
  BB 12
   Insn 338: point = 29, n_alt = -1
  BB 11
   Insn 178: point = 30, n_alt = -1
   Insn 177: point = 30, n_alt = 1
   Insn 175: point = 30, n_alt = 2
   Insn 174: point = 31, n_alt = 2
   Insn 168: point = 32, n_alt = 1
   Insn 169: point = 33, n_alt = 1
   Insn 167: point = 34, n_alt = 1
   Insn 166: point = 35, n_alt = 1
   Insn 164: point = 36, n_alt = 1
   Insn 163: point = 37, n_alt = 1
   Insn 162: point = 38, n_alt = 1
   Insn 165: point = 39, n_alt = 1
   Insn 161: point = 40, n_alt = 1
   Insn 160: point = 41, n_alt = 1
   Insn 159: point = 42, n_alt = 1
   Insn 158: point = 43, n_alt = 1
  BB 10
   Insn 151: point = 45, n_alt = 4
   Insn 149: point = 46, n_alt = -2
   Insn 148: point = 48, n_alt = 5
  BB 7
   Insn 126: point = 50, n_alt = -1
   Insn 125: point = 50, n_alt = 3
   Insn 120: point = 50, n_alt = 4
   Insn 361: point = 51, n_alt = 8
   Insn 115: point = 52, n_alt = 2
  BB 6
   Insn 95: point = 54, n_alt = -1
   Insn 94: point = 54, n_alt = 0
   Insn 111: point = 54, n_alt = 1
   Insn 108: point = 56, n_alt = 1
  BB 5
   Insn 90: point = 58, n_alt = -1
   Insn 89: point = 58, n_alt = 0
   Insn 86: point = 59, n_alt = 4
   Insn 85: point = 60, n_alt = 0
   Insn 84: point = 62, n_alt = 5
  BB 4
   Insn 81: point = 65, n_alt = -1
   Insn 80: point = 65, n_alt = 0
   Insn 77: point = 65, n_alt = 0
   Insn 72: point = 67, n_alt = 5
  BB 3
   Insn 69: point = 69, n_alt = -1
   Insn 68: point = 69, n_alt = 0
   Insn 65: point = 69, n_alt = 0
   Insn 64: point = 71, n_alt = 0
   Insn 63: point = 73, n_alt = 0
   Insn 62: point = 75, n_alt = 2
   Insn 59: point = 76, n_alt = -2
   Insn 331: point = 78, n_alt = -2
   Insn 58: point = 79, n_alt = -1
  BB 8
   Insn 332: point = 80, n_alt = -1
   Insn 133: point = 80, n_alt = 0
   Insn 130: point = 82, n_alt = 0
  BB 2
   Insn 5: point = 85, n_alt = -2
   Insn 24: point = 86, n_alt = -2
   Insn 83: point = 87, n_alt = 6
   Insn 71: point = 88, n_alt = 5
   Insn 4: point = 89, n_alt = 1
   Insn 3: point = 90, n_alt = 1
   Insn 42: point = 91, n_alt = -1
   Insn 40: point = 91, n_alt = 1
   Insn 39: point = 91, n_alt = 4
   Insn 41: point = 91, n_alt = 5
   Insn 33: point = 91, n_alt = -1
   Insn 32: point = 91, n_alt = -2
   Insn 31: point = 91, n_alt = 1
   Insn 30: point = 91, n_alt = 1
   Insn 21: point = 91, n_alt = 11
   Insn 11: point = 91, n_alt = -2
 r113: [74..76]
 r118: [61..62]
 r121: [30..48]
 r124: [7..26]
 r126: [7..27]
 r127: [16..23]
 r128: [0..91]
 r129: [66..67]
 r130: [63..73]
 r131: [47..86]
 r132: [30..46]
 r135: [50..90]
 r136: [85..89] [54..80]
 r137: [85..85] [54..82]
 r139: [30..45]
 r147: [72..75]
 r148: [70..71]
 r151: [58..59]
 r154: [55..56]
 r156: [51..54]
 r165: [38..43] [32..35]
 r166: [37..42] [33..34]
 r167: [36..41]
 r168: [39..40]
 r171: [17..18]
 r174: [3..5]
 r176: [3..4]
 r178: [81..84] [50..60]
 r179: [83..84] [50..65]
 r181: [7..25]
 r183: [50..88]
 r184: [50..87]
 r187: [77..78]
 r189: [51..52]
Compressing live ranges: from 92 to 37 - 40%
Ranges after the compression:
 r113: [27..28]
 r118: [17..18]
 r121: [4..9]
 r124: [2..3]
 r126: [2..3]
 r127: [2..3]
 r128: [0..36]
 r129: [21..22]
 r130: [19..26]
 r131: [8..36]
 r132: [4..7]
 r135: [10..36]
 r136: [35..36] [12..30]
 r137: [35..35] [12..32]
 r139: [4..7]
 r147: [25..28]
 r148: [23..24]
 r151: [15..16]
 r154: [13..14]
 r156: [10..12]
 r165: [4..7]
 r166: [4..7]
 r167: [6..7]
 r168: [6..7]
 r171: [2..3]
 r174: [0..1]
 r176: [0..1]
 r178: [31..34] [10..16]
 r179: [33..34] [10..20]
 r181: [2..3]
 r183: [10..36]
 r184: [10..36]
 r187: [29..30]
 r189: [10..11]

********** Assignment #1: **********

	 Assigning to 189 (cl=GENERAL_REGS, orig=189, freq=2, tfirst=189, tfreq=2)...
	   Assign 0 to reload r189 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=40, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=40)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 59
changing reg in insn 63
changing reg in insn 62
changing reg in insn 62
changing reg in insn 60
changing reg in insn 84
changing reg in insn 174
changing reg in insn 148
changing reg in insn 169
changing reg in insn 168
changing reg in insn 165
changing reg in insn 164
changing reg in insn 163
changing reg in insn 162
changing reg in insn 151
changing reg in insn 177
changing reg in insn 174
changing reg in insn 277
changing reg in insn 222
changing reg in insn 7
changing reg in insn 277
changing reg in insn 275
changing reg in insn 237
changing reg in insn 231
changing reg in insn 228
changing reg in insn 224
changing reg in insn 222
changing reg in insn 220
changing reg in insn 217
changing reg in insn 278
changing reg in insn 223
changing reg in insn 143
changing reg in insn 198
changing reg in insn 278
changing reg in insn 223
changing reg in insn 6
changing reg in insn 185
changing reg in insn 198
changing reg in insn 211
changing reg in insn 209
changing reg in insn 207
changing reg in insn 200
changing reg in insn 189
changing reg in insn 187
changing reg in insn 185
changing reg in insn 11
changing reg in insn 266
changing reg in insn 258
changing reg in insn 72
changing reg in insn 65
changing reg in insn 63
changing reg in insn 316
changing reg in insn 84
changing reg in insn 72
changing reg in insn 73
changing reg in insn 68
changing reg in insn 65
changing reg in insn 72
changing reg in insn 72
changing reg in insn 84
changing reg in insn 24
changing reg in insn 111
changing reg in insn 149
changing reg in insn 175
changing reg in insn 149
changing reg in insn 167
changing reg in insn 166
changing reg in insn 161
changing reg in insn 160
changing reg in insn 159
changing reg in insn 158
changing reg in insn 175
changing reg in insn 120
changing reg in insn 3
changing reg in insn 136
changing reg in insn 125
changing reg in insn 121
changing reg in insn 120
changing reg in insn 116
changing reg in insn 54
changing reg in insn 133
changing reg in insn 4
changing reg in insn 5
changing reg in insn 5
changing reg in insn 130
changing reg in insn 151
changing reg in insn 177
changing reg in insn 62
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 86
changing reg in insn 89
changing reg in insn 108
changing reg in insn 111
changing reg in insn 111
changing reg in insn 115
changing reg in insn 166
changing reg in insn 158
changing reg in insn 168
changing reg in insn 162
changing reg in insn 167
changing reg in insn 159
changing reg in insn 169
changing reg in insn 163
changing reg in insn 160
changing reg in insn 164
changing reg in insn 161
changing reg in insn 165
changing reg in insn 189
changing reg in insn 192
changing reg in insn 245
changing reg in insn 252
changing reg in insn 250
changing reg in insn 249
changing reg in insn 248
changing reg in insn 247
changing reg in insn 250
changing reg in insn 249
changing reg in insn 248
changing reg in insn 85
changing reg in insn 108
changing reg in insn 108
changing reg in insn 86
changing reg in insn 77
changing reg in insn 115
changing reg in insn 94
changing reg in insn 80
changing reg in insn 196
changing reg in insn 71
changing reg in insn 330
changing reg in insn 72
changing reg in insn 72
changing reg in insn 83
changing reg in insn 84
changing reg in insn 331
changing reg in insn 59
deleting insn with uid = 331.
deleting insn with uid = 59.
deleting insn with uid = 149.


try_optimize_cfg iteration 1

Forwarding edge 11->12 to 9 failed.
Forwarding edge 17->18 to 24 failed.
Forwarding edge 20->21 to 19 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 35 count 48 (  1.8)
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 35 count 41 (  1.6)


generateMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,11u} r1={14d,16u} r2={14d,17u} r3={13d,33u,3e} r4={3d,9u} r5={3d,2u} r6={2d,3u,1e} r7={1d,25u} r8={2d,2u} r9={1d,1u} r10={2d,6u} r11={1d,2u} r12={6d} r13={4d,38u} r14={4d} r15={3d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={14d,11u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 512{331d,177u,4e} in 202{199 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 2 12 2 (set (reg/f:SI 11 fp [orig:128 saved_stack.2_40 ] [128])
        (reg/f:SI 13 sp)) "../System/map.c":16:19 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/map.c":17:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:QI walkx (const_int 12 [0xc])) "../System/map.c":17:10 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "../System/map.c":18:2 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:QI walky (const_int 12 [0xc])) "../System/map.c":18:10 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/map.c":19:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:QI part_size (const_int 24 [0x18])) "../System/map.c":19:16 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/map.c":21:2 -1
     (nil))
(debug_insn 19 18 20 2 (var_location:SI D.7602 (const_int 23 [0x17])) "../System/map.c":21:10 -1
     (nil))
(debug_insn 20 19 21 2 (var_location:SI D.7605 (const_int 23 [0x17])) "../System/map.c":21:10 -1
     (nil))
(insn 21 20 30 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -576 [0xfffffffffffffdc0]))) "../System/map.c":21:10 7 {*arm_addsi3}
     (nil))
(insn 30 21 31 2 (set (reg:SI 2 r2)
        (const_int 576 [0x240])) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 2 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 33 32 41 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d800 __builtin_memset>) [0 __builtin_memset S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":24:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d800 __builtin_memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(insn 41 33 39 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 39 41 40 2 (set (reg:SI 2 r2)
        (const_int 1250 [0x4e2])) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 42 2 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 42 40 3 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d900 memset>) [0 __builtin_memset S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":27:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d900 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(insn 3 42 4 2 (set (reg/v:SI 10 r10 [orig:135 i ] [135])
        (const_int 0 [0])) "../System/map.c":31:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 4 3 71 2 (set (reg/v:SI 8 r8 [orig:136 walky ] [136])
        (const_int 12 [0xc])) "../System/map.c":18:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 12 [0xc])
        (nil)))
(insn 71 4 83 2 (set (reg/f:SI 6 r6 [183])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 83 71 24 2 (set (reg/f:SI 9 r9 [184])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 24 83 25 2 (set (reg/f:SI 4 r4 [orig:131 part.0 ] [131])
        (reg/f:SI 13 sp)) "../System/map.c":21:10 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 25 24 26 2 (var_location:SI part.0 (reg/f:SI 13 sp)) "../System/map.c":21:10 -1
     (nil))
(debug_insn 26 25 27 2 (debug_marker) "../System/map.c":22:2 -1
     (nil))
(debug_insn 27 26 28 2 (debug_marker) "../System/map.c":22:6 -1
     (nil))
(debug_insn 28 27 29 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 29 28 34 2 (debug_marker) "../System/map.c":22:14 -1
     (nil))
(debug_insn 34 29 35 2 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 35 34 36 2 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 36 35 43 2 (debug_marker) "../System/map.c":27:2 -1
     (nil))
(debug_insn 43 36 44 2 (debug_marker) "../System/map.c":28:2 -1
     (nil))
(debug_insn 44 43 45 2 (var_location:SI max_i (const_int 250 [0xfa])) "../System/map.c":28:12 -1
     (nil))
(debug_insn 45 44 46 2 (debug_marker) "../System/map.c":29:2 -1
     (nil))
(debug_insn 46 45 47 2 (debug_marker) "../System/map.c":30:2 -1
     (nil))
(debug_insn 47 46 48 2 (debug_marker) "../System/map.c":31:2 -1
     (nil))
(debug_insn 48 47 49 2 (debug_marker) "../System/map.c":31:6 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 50 49 51 2 (var_location:QI walky (const_int 12 [0xc])) -1
     (nil))
(debug_insn 51 50 52 2 (var_location:QI walkx (const_int 12 [0xc])) -1
     (nil))
(debug_insn 52 51 320 2 (debug_marker) "../System/map.c":31:14 -1
     (nil))
(debug_insn 320 52 317 2 (var_location:SI D#8 (const_int 12 [0xc])) -1
     (nil))
(debug_insn 317 320 5 2 (var_location:SI D#7 (const_int 12 [0xc])) -1
     (nil))
(insn 5 317 113 2 (set (reg/v:SI 5 r5 [orig:137 walkx ] [137])
        (reg/v:SI 8 r8 [orig:136 walky ] [136])) "../System/map.c":17:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 12 [0xc])
        (nil)))
(note 113 5 139 2 NOTE_INSN_DELETED)
(code_label 139 113 53 3 5 (nil) [4 uses])
(note 53 139 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 3 (var_location:SI i (reg/v:SI 10 r10 [orig:135 i ] [135])) -1
     (nil))
(debug_insn 55 54 56 3 (var_location:QI walky (subreg:QI (debug_expr:SI D#8) 0)) -1
     (nil))
(debug_insn 56 55 57 3 (var_location:QI walkx (subreg:QI (debug_expr:SI D#7) 0)) -1
     (nil))
(debug_insn 57 56 58 3 (debug_marker) "../System/map.c":32:3 -1
     (nil))
(call_insn 58 57 330 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000005ed0600 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":32:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000005ed0600 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 330 58 329 3 (var_location:SI D#10 (reg/f:SI 6 r6 [183])) -1
     (nil))
(debug_insn 329 330 60 3 (var_location:SI D#9 (debug_expr:SI D#10)) -1
     (nil))
(debug_insn 60 329 61 3 (var_location:SI dir (mod:SI (reg:SI 0 r0 [orig:113 _1 ] [113])
        (const_int 4 [0x4]))) "../System/map.c":32:7 -1
     (nil))
(debug_insn 61 60 62 3 (debug_marker) "../System/map.c":34:3 -1
     (nil))
(insn 62 61 63 3 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 0 r0 [orig:113 _1 ] [113]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [147])
                (minus:SI (const_int 0 [0])
                    (reg:SI 0 r0 [orig:113 _1 ] [113])))
        ]) "../System/map.c":32:7 46 {subsi3_compare0}
     (nil))
(insn 63 62 64 3 (set (reg:SI 3 r3 [orig:130 _42 ] [130])
        (and:SI (reg:SI 0 r0 [orig:113 _1 ] [113])
            (const_int 3 [0x3]))) "../System/map.c":32:7 90 {*arm_andsi3_insn}
     (nil))
(insn 64 63 65 3 (set (reg:SI 2 r2 [148])
        (and:SI (reg:SI 2 r2 [147])
            (const_int 3 [0x3]))) "../System/map.c":32:7 90 {*arm_andsi3_insn}
     (nil))
(insn 65 64 316 3 (set (reg:SI 3 r3 [orig:130 _42 ] [130])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [148]))
            (reg:SI 3 r3 [orig:130 _42 ] [130]))) "../System/map.c":32:7 371 {*if_neg_move}
     (nil))
(debug_insn 316 65 68 3 (var_location:SI D#6 (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                (const_int 4 [0x4]))
            (debug_expr:SI D#9)) [2 CSWTCH.10[_42]+0 S4 A32])) -1
     (nil))
(insn 68 316 69 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:130 _42 ] [130])
            (const_int 3 [0x3]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 69 68 70 3 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 261)
(note 70 69 72 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 73 4 (set (reg/v:SI 2 r2 [orig:129 dirx ] [129])
        (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:SI 6 r6 [183])) [2 CSWTCH.10[_42]+0 S4 A32])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:SI 6 r6 [183])) [2 CSWTCH.10[_42]+0 S4 A32])
        (expr_list:REG_EQUAL (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [2 CSWTCH.10[_42]+0 S4 A32])
            (nil))))
(debug_insn 73 72 74 4 (var_location:SI D#5 (mem/u:SI (plus:SI (ashift:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                (const_int 2 [0x2]))
            (symbol_ref/v:SI ("CSWTCH.11") [flags 0x82]  <var_decl 0000000005fd1ea0 CSWTCH.11>)) [2 CSWTCH.11[_42]+0 S4 A32])) -1
     (nil))
(debug_insn 74 73 75 4 (var_location:SI diry (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 75 74 76 4 (var_location:SI dirx (debug_expr:SI D#6)) -1
     (nil))
(debug_insn 76 75 77 4 (debug_marker) "../System/map.c":57:3 -1
     (nil))
(insn 77 76 80 4 (set (reg:SI 2 r2 [179])
        (plus:SI (reg/v:SI 2 r2 [orig:129 dirx ] [129])
            (reg/v:SI 5 r5 [orig:137 walkx ] [137]))) "../System/map.c":57:11 7 {*arm_addsi3}
     (nil))
(insn 80 77 81 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [179])
            (const_int 0 [0]))) "../System/map.c":57:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 81 80 82 4 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 139)
(note 82 81 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 5 (set (reg/v:SI 3 r3 [orig:118 diry ] [118])
        (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:SI 9 r9 [184])) [2 CSWTCH.11[_42]+0 S4 A32])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/u:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:130 _42 ] [130])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [2 CSWTCH.11[_42]+0 S4 A32])
        (nil)))
(insn 85 84 86 5 (set (reg:SI 3 r3 [178])
        (plus:SI (reg/v:SI 3 r3 [orig:118 diry ] [118])
            (reg/v:SI 8 r8 [orig:136 walky ] [136]))) "../System/map.c":57:29 7 {*arm_addsi3}
     (nil))
(insn 86 85 89 5 (set (reg:SI 1 r1 [151])
        (plus:SI (reg:SI 3 r3 [178])
            (const_int -1 [0xffffffffffffffff]))) "../System/map.c":57:21 7 {*arm_addsi3}
     (nil))
(insn 89 86 90 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [151])
            (const_int 22 [0x16]))) "../System/map.c":57:21 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 90 89 91 5 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:21 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 139)
(note 91 90 97 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 97 91 98 6 (debug_marker) "../System/map.c":59:4 -1
     (nil))
(debug_insn 98 97 99 6 (var_location:QI D#4 (subreg:QI (debug_expr:SI D#6) 0)) "../System/map.c":59:10 -1
     (nil))
(debug_insn 99 98 100 6 (var_location:QI D#3 (plus:QI (debug_expr:QI D#4)
        (subreg:QI (debug_expr:SI D#7) 0))) "../System/map.c":59:10 -1
     (nil))
(debug_insn 100 99 101 6 (var_location:QI walkx (debug_expr:QI D#3)) "../System/map.c":59:10 -1
     (nil))
(debug_insn 101 100 102 6 (debug_marker) "../System/map.c":60:4 -1
     (nil))
(debug_insn 102 101 103 6 (var_location:QI D#2 (subreg:QI (debug_expr:SI D#5) 0)) "../System/map.c":60:10 -1
     (nil))
(debug_insn 103 102 104 6 (var_location:QI D#1 (plus:QI (debug_expr:QI D#2)
        (subreg:QI (debug_expr:SI D#8) 0))) "../System/map.c":60:10 -1
     (nil))
(debug_insn 104 103 105 6 (var_location:QI walky (debug_expr:QI D#1)) "../System/map.c":60:10 -1
     (nil))
(debug_insn 105 104 108 6 (debug_marker) "../System/map.c":61:4 -1
     (nil))
(insn 108 105 111 6 (set (reg:SI 1 r1 [154])
        (plus:SI (ashift:SI (reg:SI 3 r3 [178])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [178]))) "../System/map.c":61:23 318 {*add_shiftsi}
     (nil))
(insn 111 108 94 6 (set (reg:SI 1 r1 [156])
        (plus:SI (ashift:SI (reg:SI 1 r1 [154])
                (const_int 3 [0x3]))
            (reg/f:SI 4 r4 [orig:131 part.0 ] [131]))) "../System/map.c":61:23 318 {*add_shiftsi}
     (nil))
(insn 94 111 95 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [179])
            (const_int 23 [0x17]))) "../System/map.c":57:39 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 95 94 96 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:39 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 139)
(note 96 95 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 107 96 109 7 NOTE_INSN_DELETED)
(note 109 107 115 7 NOTE_INSN_DELETED)
(insn 115 109 361 7 (set (reg:QI 0 r0 [189])
        (const_int 0 [0])) "../System/map.c":61:23 263 {*arm_movqi_insn}
     (nil))
(insn 361 115 116 7 (set (mem:QI (plus:SI (reg:SI 1 r1 [156])
                (reg:SI 2 r2 [179])) [0 (*part.0_46)[_5]{lb: 0 sz: 24}[_3]+0 S1 A8])
        (reg:QI 0 r0 [189])) "../System/map.c":61:23 263 {*arm_movqi_insn}
     (nil))
(debug_insn 116 361 117 7 (var_location:SI i (reg/v:SI 10 r10 [orig:135 i ] [135])) -1
     (nil))
(debug_insn 117 116 118 7 (var_location:QI walky (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 118 117 119 7 (var_location:QI walkx (debug_expr:QI D#3)) -1
     (nil))
(debug_insn 119 118 120 7 (debug_marker) "../System/map.c":31:22 -1
     (nil))
(insn 120 119 121 7 (set (reg/v:SI 10 r10 [orig:135 i ] [135])
        (plus:SI (reg/v:SI 10 r10 [orig:135 i ] [135])
            (const_int 1 [0x1]))) "../System/map.c":31:23 7 {*arm_addsi3}
     (nil))
(debug_insn 121 120 122 7 (var_location:SI i (reg/v:SI 10 r10 [orig:135 i ] [135])) -1
     (nil))
(debug_insn 122 121 123 7 (var_location:QI walky (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 123 122 124 7 (var_location:QI walkx (debug_expr:QI D#3)) -1
     (nil))
(debug_insn 124 123 125 7 (debug_marker) "../System/map.c":31:14 -1
     (nil))
(insn 125 124 126 7 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 10 r10 [orig:135 i ] [135])
            (const_int 250 [0xfa]))) "../System/map.c":31:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 126 125 127 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "../System/map.c":31:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 759896892 (nil))
 -> 146)
(note 127 126 318 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 318 127 130 8 (var_location:SI D#7 (zero_extend:SI (reg:QI 2 r2 [179]))) -1
     (nil))
(insn 130 318 319 8 (set (reg/v:SI 5 r5 [orig:137 walkx ] [137])
        (zero_extend:SI (reg:QI 2 r2 [179]))) "../System/map.c":59:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 319 130 133 8 (var_location:SI D#8 (zero_extend:SI (reg:QI 3 r3 [178]))) -1
     (nil))
(insn 133 319 136 8 (set (reg/v:SI 8 r8 [orig:136 walky ] [136])
        (zero_extend:SI (reg:QI 3 r3 [178]))) "../System/map.c":60:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 136 133 137 8 (var_location:SI i (reg/v:SI 10 r10 [orig:135 i ] [135])) -1
     (nil))
(debug_insn 137 136 138 8 (var_location:QI walky (subreg:QI (debug_expr:SI D#8) 0)) -1
     (nil))
(debug_insn 138 137 332 8 (var_location:QI walkx (subreg:QI (debug_expr:SI D#7) 0)) -1
     (nil))
(jump_insn 332 138 333 8 (set (pc)
        (label_ref 139)) 284 {*arm_jump}
     (nil)
 -> 139)
(barrier 333 332 337)
(code_label 337 333 142 9 19 (nil) [1 uses])
(note 142 337 143 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 7 9 (set (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 49 [0x31])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 49 [0x31])))
        (nil)))
(insn 7 143 196 9 (set (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int -6 [0xfffffffffffffffa])) "../System/map.c":69:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -6 [0xfffffffffffffffa])
        (nil)))
(insn 196 7 334 9 (set (reg:SI 4 r4 [181])
        (const_int 0 [0])) "../System/map.c":78:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(jump_insn 334 196 335 9 (set (pc)
        (label_ref 229)) 284 {*arm_jump}
     (nil)
 -> 229)
(barrier 335 334 146)
(code_label 146 335 147 10 4 (nil) [1 uses])
(note 147 146 148 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 151 10 (set (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 25 [0x19])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 25 [0x19])))
        (nil)))
(insn 151 148 176 10 (set (reg/f:SI 6 r6 [orig:139 _113 ] [139])
        (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
            (const_int 1200 [0x4b0]))) 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 1225 [0x4c9])))
        (nil)))
(code_label 176 151 152 11 7 (nil) [1 uses])
(note 152 176 153 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 153 152 154 11 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 154 153 155 11 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 155 154 158 11 (debug_marker) "../System/map.c":70:15 -1
     (nil))
(insn 158 155 159 11 (set (reg:SI 2 r2 [165])
        (unspec:SI [
                (mem:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132]) [0 MEM <char[1:24]> [(void *)_30]+0 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 159 158 160 11 (set (reg:SI 1 r1 [166])
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
                        (const_int 4 [0x4])) [0 MEM <char[1:24]> [(void *)_30]+4 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 160 159 161 11 (set (reg:SI 0 r0 [167])
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
                        (const_int 8 [0x8])) [0 MEM <char[1:24]> [(void *)_30]+8 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 161 160 165 11 (set (reg:SI 5 r5 [168])
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
                        (const_int 12 [0xc])) [0 MEM <char[1:24]> [(void *)_30]+12 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 165 161 162 11 (set (mem:SI (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
                (const_int 12 [0xc])) [0 MEM <char[1:24]> [(void *)_24]+12 S4 A8])
        (unspec:SI [
                (reg:SI 5 r5 [168])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(insn 162 165 163 11 (set (mem:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121]) [0 MEM <char[1:24]> [(void *)_24]+0 S4 A8])
        (unspec:SI [
                (reg:SI 2 r2 [165])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(insn 163 162 164 11 (set (mem:SI (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
                (const_int 4 [0x4])) [0 MEM <char[1:24]> [(void *)_24]+4 S4 A8])
        (unspec:SI [
                (reg:SI 1 r1 [166])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(insn 164 163 166 11 (set (mem:SI (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
                (const_int 8 [0x8])) [0 MEM <char[1:24]> [(void *)_24]+8 S4 A8])
        (unspec:SI [
                (reg:SI 0 r0 [167])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(insn 166 164 167 11 (set (reg:SI 2 r2 [165])
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
                        (const_int 16 [0x10])) [0 MEM <char[1:24]> [(void *)_30]+16 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 167 166 169 11 (set (reg:SI 1 r1 [166])
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
                        (const_int 20 [0x14])) [0 MEM <char[1:24]> [(void *)_30]+20 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 169 167 170 11 (set (mem:SI (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
                (const_int 20 [0x14])) [0 MEM <char[1:24]> [(void *)_24]+20 S4 A8])
        (unspec:SI [
                (reg:SI 1 r1 [166])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(debug_insn 170 169 171 11 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 171 170 172 11 (debug_marker) "../System/map.c":69:19 -1
     (nil))
(debug_insn 172 171 173 11 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 173 172 168 11 (debug_marker) "../System/map.c":69:14 -1
     (nil))
(insn 168 173 174 11 (set (mem:SI (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
                (const_int 16 [0x10])) [0 MEM <char[1:24]> [(void *)_24]+16 S4 A8])
        (unspec:SI [
                (reg:SI 2 r2 [165])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (nil))
(insn 174 168 175 11 (set (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
        (plus:SI (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
            (const_int 50 [0x32]))) "../System/map.c":69:2 7 {*arm_addsi3}
     (nil))
(insn 175 174 177 11 (set (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
        (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.38 ] [132])
            (const_int 24 [0x18]))) "../System/map.c":69:2 7 {*arm_addsi3}
     (nil))
(insn 177 175 178 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:121 ivtmp.36 ] [121])
            (reg/f:SI 6 r6 [orig:139 _113 ] [139]))) "../System/map.c":69:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 178 177 336 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 176)
            (pc))) "../System/map.c":69:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1029002596 (nil))
 -> 176)
(note 336 178 338 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 338 336 339 12 (set (pc)
        (label_ref 337)) 284 {*arm_jump}
     (nil)
 -> 337)
(barrier 339 338 202)
(code_label 202 339 183 13 10 (nil) [2 uses])
(note 183 202 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 184 183 185 13 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(insn 185 184 340 13 (set (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
        (plus:SI (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
            (const_int 1 [0x1]))) 7 {*arm_addsi3}
     (nil))
(jump_insn 340 185 341 13 (set (pc)
        (label_ref 234)) 284 {*arm_jump}
     (nil)
 -> 234)
(barrier 341 340 287)
(code_label 287 341 286 14 17 (nil) [1 uses])
(note 286 287 6 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 6 286 234 14 (set (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
        (const_int 2 [0x2])) "../System/map.c":17:10 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 234 6 186 15 13 (nil) [1 uses])
(note 186 234 187 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 187 186 188 15 (var_location:SI x (plus:SI (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(debug_insn 188 187 207 15 (debug_marker) "../System/map.c":77:4 -1
     (nil))
(debug_insn 207 188 208 15 (var_location:SI x (plus:SI (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(debug_insn 208 207 209 15 (debug_marker) "../System/map.c":76:20 -1
     (nil))
(debug_insn 209 208 210 15 (var_location:SI x (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])) -1
     (nil))
(debug_insn 210 209 189 15 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(insn 189 210 192 15 (set (reg:SI 2 r2 [171])
        (plus:SI (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
            (const_int -19 [0xffffffffffffffed]))) "../System/map.c":77:6 7 {*arm_addsi3}
     (nil))
(insn 192 189 193 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [171])
            (const_int 6 [0x6]))) "../System/map.c":77:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 193 192 194 15 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "../System/map.c":77:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1073741828 (nil))
 -> 205)
(note 194 193 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 195 194 198 16 (debug_marker) "../System/map.c":78:4 -1
     (nil))
(insn 198 195 199 16 (set (mem:QI (plus:SI (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
                (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])) [0 MEM[base: _106, index: ivtmp.17_86, offset: 0B]+0 S1 A8])
        (reg:QI 4 r4 [181])) "../System/map.c":78:14 263 {*arm_movqi_insn}
     (nil))
(debug_insn 199 198 200 16 (debug_marker) "../System/map.c":76:20 -1
     (nil))
(debug_insn 200 199 201 16 (var_location:SI x (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])) -1
     (nil))
(debug_insn 201 200 342 16 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(jump_insn 342 201 343 16 (set (pc)
        (label_ref 202)) 284 {*arm_jump}
     (nil)
 -> 202)
(barrier 343 342 205)
(code_label 205 343 206 17 9 (nil) [1 uses])
(note 206 205 211 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 211 206 212 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:127 ivtmp.17 ] [127])
            (const_int 26 [0x1a]))) "../System/map.c":76:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 212 211 344 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "../System/map.c":76:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1030747484 (nil))
 -> 202)
(note 344 212 346 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 346 344 347 18 (set (pc)
        (label_ref 345)) 284 {*arm_jump}
     (nil)
 -> 345)
(barrier 347 346 349)
(code_label 349 347 216 19 21 (nil) [1 uses])
(note 216 349 217 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 217 216 218 19 (var_location:SI y (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int 7 [0x7]))) -1
     (nil))
(debug_insn 218 217 219 19 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 219 218 220 19 (debug_marker) "../System/map.c":75:19 -1
     (nil))
(debug_insn 220 219 221 19 (var_location:SI y (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int 8 [0x8]))) -1
     (nil))
(debug_insn 221 220 222 19 (debug_marker) "../System/map.c":75:14 -1
     (nil))
(insn 222 221 223 19 (set (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
            (const_int 1 [0x1]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 223 222 224 19 (set (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
        (plus:SI (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
            (const_int 50 [0x32]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 224 223 225 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
            (const_int 19 [0x13]))) "../System/map.c":75:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 225 224 229 19 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) "../System/map.c":75:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 214971636 (nil))
 -> 243)
(code_label 229 225 230 20 6 (nil) [2 uses])
(note 230 229 231 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 231 230 232 20 (var_location:SI y (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int 7 [0x7]))) -1
     (nil))
(debug_insn 232 231 233 20 (var_location:SI x (const_int 1 [0x1])) -1
     (nil))
(debug_insn 233 232 237 20 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(insn 237 233 238 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
            (const_int 10 [0xa]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 238 237 348 20 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 287)
            (pc))) 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 858993460 (nil))
 -> 287)
(note 348 238 350 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 350 348 351 21 (set (pc)
        (label_ref 349)) 284 {*arm_jump}
     (nil)
 -> 349)
(barrier 351 350 243)
(code_label 243 351 244 22 12 (nil) [1 uses])
(note 244 243 245 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 247 22 (set (reg/f:SI 3 r3 [174])
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 625 [0x271])))) "../System/map.c":84:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 625 [0x271])))
        (nil)))
(insn 247 245 248 22 (set (reg:SI 2 r2 [176])
        (const_int 0 [0])) "../System/map.c":84:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 248 247 249 22 (set (mem/c:SI (reg/f:SI 3 r3 [174]) [0 MEM <char[1:13]> [(void *)&map + 625B]+0 S4 A8])
        (unspec:SI [
                (reg:SI 2 r2 [176])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 249 248 250 22 (set (mem/c:SI (plus:SI (reg/f:SI 3 r3 [174])
                (const_int 4 [0x4])) [0 MEM <char[1:13]> [(void *)&map + 625B]+4 S4 A8])
        (unspec:SI [
                (reg:SI 2 r2 [176])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 250 249 252 22 (set (mem/c:SI (plus:SI (reg/f:SI 3 r3 [174])
                (const_int 8 [0x8])) [0 MEM <char[1:13]> [(void *)&map + 625B]+8 S4 A8])
        (unspec:SI [
                (reg:SI 2 r2 [176])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 252 250 253 22 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [174])
                (const_int 12 [0xc])) [0 MEM <char[1:13]> [(void *)&map + 625B]+12 S1 A8])
        (reg:QI 2 r2 [176])) "../System/map.c":84:21 263 {*arm_movqi_insn}
     (nil))
(debug_insn 253 252 254 22 (var_location:SI pathy (clobber (const_int 0 [0]))) "../System/map.c":82:18 -1
     (nil))
(debug_insn 254 253 255 22 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 255 254 256 22 (var_location:SI pathx (clobber (const_int 0 [0]))) -1
     (nil))
(insn 256 255 257 22 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 257 256 258 22 (clobber (mem:BLK (reg/f:SI 13 sp) [0  A8])) -1
     (nil))
(insn 258 257 352 22 (set (reg/f:SI 13 sp)
        (reg/f:SI 11 fp [orig:128 saved_stack.2_40 ] [128])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 352 258 353 22 (set (pc)
        (label_ref 282)) 284 {*arm_jump}
     (nil)
 -> 282)
(barrier 353 352 261)
(code_label 261 353 262 23 2 (nil) [1 uses])
(note 262 261 263 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 263 262 264 23 (debug_marker) "../System/map.c":54:4 -1
     (nil))
(insn 264 263 265 23 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 265 264 266 23 (clobber (mem:BLK (reg/f:SI 13 sp) [0  A8])) -1
     (nil))
(insn 266 265 354 23 (set (reg/f:SI 13 sp)
        (reg/f:SI 11 fp [orig:128 saved_stack.2_40 ] [128])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 354 266 355 23 (set (pc)
        (label_ref 282)) 284 {*arm_jump}
     (nil)
 -> 282)
(barrier 355 354 345)
(code_label 345 355 272 24 20 (nil) [1 uses])
(note 272 345 273 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 273 272 274 24 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 274 273 275 24 (debug_marker) "../System/map.c":75:19 -1
     (nil))
(debug_insn 275 274 276 24 (var_location:SI y (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int 8 [0x8]))) -1
     (nil))
(debug_insn 276 275 277 24 (debug_marker) "../System/map.c":75:14 -1
     (nil))
(insn 277 276 278 24 (set (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
            (const_int 1 [0x1]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 278 277 227 24 (set (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
        (plus:SI (reg:SI 0 r0 [orig:126 ivtmp.28 ] [126])
            (const_int 50 [0x32]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(debug_insn 227 278 228 24 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 228 227 356 24 (var_location:SI y (plus:SI (reg:SI 1 r1 [orig:124 ivtmp.27 ] [124])
        (const_int 8 [0x8]))) -1
     (nil))
(jump_insn 356 228 357 24 (set (pc)
        (label_ref 229)) 284 {*arm_jump}
     (nil)
 -> 229)
(barrier 357 356 282)
(code_label 282 357 283 25 1 (nil) [2 uses])
(note 283 282 359 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 359 283 360 NOTE_INSN_DELETED)
(note 360 359 0 NOTE_INSN_DELETED)

;; Function drawMiniMap (drawMiniMap, funcdef_no=5, decl_uid=5635, cgraph_uid=6, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=40, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 9:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =t  (1) t {*truncsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =t  (1) t {*truncsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=269 from oldreg=171, assigning class LO_REGS to r269
   26: r269:SI=const(`pixels'+0x8c)
      REG_EQUAL const(`pixels'+0x8c)
    Inserting insn reload after:
  423: r171:SI=r269:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 423:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 14:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=270 from oldreg=126, assigning class GENERAL_REGS to r270
      Creating newreg=271 from oldreg=178, assigning class GENERAL_REGS to r271
   14: r270:SI=r271:SI/r115:SI
      REG_DEAD r178:SI
    Inserting insn reload before:
  425: r271:SI=r178:SI
    Inserting insn reload after:
  424: r126:SI=r270:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 424:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=272 from oldreg=270, assigning class LO_REGS to r272
  424: r126:SI=r272:SI
    Inserting insn reload before:
  426: r272:SI=r270:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 425:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 20:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=273 from oldreg=127, assigning class GENERAL_REGS to r273
      Creating newreg=274 from oldreg=181, assigning class GENERAL_REGS to r274
   20: r273:SI=r274:SI/r115:SI
      REG_DEAD r181:SI
      REG_DEAD r115:SI
    Inserting insn reload before:
  428: r274:SI=r181:SI
    Inserting insn reload after:
  427: r127:SI=r273:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 427:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=275 from oldreg=273, assigning class LO_REGS to r275
  427: r127:SI=r275:SI
    Inserting insn reload before:
  429: r275:SI=r273:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 428:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 60 (freq=1)
   60: r246:SI=`map'
      REG_EQUIV `map'
deleting insn with uid = 60.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 8 in insn 266:  (0) r  (1) rk  (2) Pj {*arm_addsi3}
      Removing equiv init insn 276 (freq=1)
  276: r254:SI=r250:SI+0x540
      REG_EQUIV const(`sp'+0x540)
deleting insn with uid = 276.
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) r  (1) r  (2) M {*arm_shiftsi3}
      Creating newreg=276 from oldreg=249, assigning class CORE_REGS to address r276
	   Change to class GENERAL_REGS for r276
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
   65: r188:SI=zero_extend([r276:SI+r120:SI])
    Inserting insn reload before:
  430: r276:SI=r249:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 430:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r276 for output r276:SI, change to class LO_REGS for r276
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 93:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=277 from oldreg=126, assigning class GENERAL_REGS to r277
   93: cc:CC=cmp(r120:SI,r277:SI)
    Inserting insn reload before:
  431: r277:SI=r126:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 431:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r277 for output r277:SI, change to class LO_REGS for r277
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 96:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=278 from oldreg=127, assigning class GENERAL_REGS to r278
   96: cc:CC=cmp(r264:SI,r278:SI)
    Inserting insn reload before:
  432: r278:SI=r127:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 432:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r278 for output r278:SI, change to class LO_REGS for r278
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 120 (freq=134)
  120: r192:SI=[r244:SI]
      REG_EQUIV [r244:SI]
      REG_EQUAL [`Blocksize']
deleting insn with uid = 120.
Changing pseudo 192 in operand 1 of insn 121 on equiv [r244:SI]
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 121:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=279, assigning class VFP_LO_REGS to r279
  121: r134:SF=float(r279:SI)
      REG_DEAD r192:SI
    Inserting insn reload before:
  433: r279:SI=[r244:SI]

            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=12,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=12,overall=2,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 433:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 132:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=280 from oldreg=196, assigning class GENERAL_REGS to r280
  132: cc:CC=cmp(r120:SI,r280:SI)
      REG_DEAD r196:SI
    Inserting insn reload before:
  434: r280:SI=r196:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 434:  (0) r  (1) *t {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 136:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 139:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=281 from oldreg=200, assigning class GENERAL_REGS to r281
  139: cc:CC=cmp(r264:SI,r281:SI)
      REG_DEAD r200:SI
    Inserting insn reload before:
  435: r281:SI=r200:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 435:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 174:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 165 (freq=134)
  165: r204:SI=[r244:SI]
      REG_EQUIV [r244:SI]
      REG_EQUAL [`Blocksize']
deleting insn with uid = 165.
Changing pseudo 204 in operand 1 of insn 166 on equiv [r244:SI]
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 166:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=282, assigning class VFP_LO_REGS to r282
  166: r144:SF=float(r282:SI)
      REG_DEAD r204:SI
    Inserting insn reload before:
  436: r282:SI=[r244:SI]

            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=12,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=12,overall=2,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 436:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 177:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=283 from oldreg=208, assigning class GENERAL_REGS to r283
  177: cc:CC=cmp(r120:SI,r283:SI)
      REG_DEAD r208:SI
    Inserting insn reload before:
  437: r283:SI=r208:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 437:  (0) r  (1) *t {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 181:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 184:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=284 from oldreg=212, assigning class GENERAL_REGS to r284
  184: cc:CC=cmp(r264:SI,r284:SI)
      REG_DEAD r212:SI
    Inserting insn reload before:
  438: r284:SI=r212:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 438:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 219:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 210 (freq=134)
  210: r216:SI=[r244:SI]
      REG_EQUIV [r244:SI]
      REG_EQUAL [`Blocksize']
deleting insn with uid = 210.
Changing pseudo 216 in operand 1 of insn 211 on equiv [r244:SI]
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 211:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=285, assigning class VFP_LO_REGS to r285
  211: r154:SF=float(r285:SI)
      REG_DEAD r216:SI
    Inserting insn reload before:
  439: r285:SI=[r244:SI]

            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=12,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=12,overall=2,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 439:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 222:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=286 from oldreg=220, assigning class GENERAL_REGS to r286
  222: cc:CC=cmp(r120:SI,r286:SI)
      REG_DEAD r220:SI
    Inserting insn reload before:
  440: r286:SI=r220:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 440:  (0) r  (1) *t {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 226:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 229:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=287 from oldreg=224, assigning class GENERAL_REGS to r287
  229: cc:CC=cmp(r264:SI,r287:SI)
      REG_DEAD r224:SI
    Inserting insn reload before:
  441: r287:SI=r224:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 441:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 249:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 267:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 255 (freq=134)
  255: r228:SI=[r244:SI]
      REG_EQUIV [r244:SI]
      REG_EQUAL [`Blocksize']
deleting insn with uid = 255.
Changing pseudo 228 in operand 1 of insn 256 on equiv [r244:SI]
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 256:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=288, assigning class VFP_LO_REGS to r288
  256: r164:SF=float(r288:SI)
      REG_DEAD r228:SI
    Inserting insn reload before:
  442: r288:SI=[r244:SI]

            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=12,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=12,overall=2,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 442:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 270:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=289 from oldreg=235, assigning class GENERAL_REGS to r289
  270: cc:CC=cmp(r120:SI,r289:SI)
      REG_DEAD r235:SI
      REG_DEAD r120:SI
    Inserting insn reload before:
  443: r289:SI=r235:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 443:  (0) r  (1) *t {*thumb2_movsi_vfp}
Changing address in insn 277 r254:SI -- no change
Changing pseudo 254 in address of insn 277 on equiv const(`sp'+0x540)
      Creating newreg=290, assigning class CORE_REGS to address r290
	   Change to class GENERAL_REGS for r290
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 277:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  277: r241:SF=[r290:SI]
      REG_EQUIV [r254:SI]
      REG_EQUAL [const(`sp'+0x540)]
    Inserting insn reload before:
  444: r290:SI=const(`sp'+0x540)

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 444:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r290
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =t  (1) t {*truncsisf2_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 280:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=291 from oldreg=242, assigning class GENERAL_REGS to r291
  280: cc:CC=cmp(r264:SI,r291:SI)
      REG_DEAD r242:SI
    Inserting insn reload before:
  445: r291:SI=r242:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 445:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 286:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 306:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 297:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) Uw  (1) l {unaligned_storesi}
          alt=1,overall=6,losers=1,rld_nregs=0
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 304:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 309:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 315:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=13,losers=2,rld_nregs=2
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 4 in insn 318:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Creating newreg=292 from oldreg=171, assigning class GENERAL_REGS to r292
      Creating newreg=293 from oldreg=171, assigning class CORE_REGS to r293
  318: r292:SI=r293:SI+0x3c0
    Inserting insn reload before:
  447: r293:SI=r171:SI
    Inserting insn reload after:
  446: r171:SI=r292:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 446:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=294 from oldreg=292, assigning class LO_REGS to r294
  446: r171:SI=r294:SI
    Inserting insn reload before:
  448: r294:SI=r292:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 447:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r293 for output r293:SI, change to class LO_REGS for r293
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 326:  (0) r  (1) r  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) I {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 246 in operand 1 of insn 63 on equiv `map'
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 63:  (0) =r  (1) r  (2) %r  (3) r {*mla}
      Creating newreg=295 from oldreg=249, assigning class GENERAL_REGS to r295
      Creating newreg=296, assigning class GENERAL_REGS to r296
   63: r295:SI=r247:SI*r119:SI+r296:SI
      REG_DEAD r247:SI
    Inserting insn reload before:
  450: r296:SI=`map'
    Inserting insn reload after:
  449: r249:SI=r295:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 449:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=297 from oldreg=295, assigning class LO_REGS to r297
  449: r249:SI=r297:SI
    Inserting insn reload before:
  451: r297:SI=r295:SI

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 450:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r296
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3 4 5 6
EBB 7
EBB 8 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14 15
EBB 16
EBB 17
EBB 18 19
EBB 20
EBB 21
EBB 22 23
EBB 24
EBB 25
EBB 26 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33

********** Pseudo live ranges #1: **********

  BB 33
  BB 31
   Insn 320: point = 0, n_alt = -1
   Insn 319: point = 0, n_alt = 0
   Insn 446: point = 0, n_alt = 7
   Insn 448: point = 2, n_alt = -2
	   Creating copy r292->r294@18
   Insn 318: point = 4, n_alt = 4
   Insn 447: point = 6, n_alt = 5
   Insn 315: point = 8, n_alt = 2
   Insn 417: point = 9, n_alt = -2
  BB 30
   Insn 312: point = 12, n_alt = -1
   Insn 311: point = 12, n_alt = 0
   Insn 309: point = 12, n_alt = 2
   Insn 304: point = 13, n_alt = 2
   Insn 301: point = 14, n_alt = 1
   Insn 299: point = 14, n_alt = 0
   Insn 298: point = 16, n_alt = 0
   Insn 297: point = 17, n_alt = 1
   Insn 306: point = 18, n_alt = 2
  BB 7
   Insn 409: point = 20, n_alt = -1
   Insn 52: point = 20, n_alt = 0
   Insn 399: point = 22, n_alt = -2
   Insn 50: point = 23, n_alt = -1
   Insn 49: point = 23, n_alt = 1
   Insn 48: point = 23, n_alt = -2
   Insn 47: point = 23, n_alt = 1
  BB 29
   Insn 289: point = 24, n_alt = 0
   Insn 406: point = 26, n_alt = -2
   Insn 287: point = 27, n_alt = -1
   Insn 286: point = 27, n_alt = 1
   Insn 285: point = 27, n_alt = -2
   Insn 284: point = 27, n_alt = 1
  BB 28
   Insn 281: point = 28, n_alt = -1
   Insn 280: point = 28, n_alt = 1
   Insn 445: point = 29, n_alt = 10
	Hard reg 30 is preferable by r291 with profit 45
   Insn 279: point = 31, n_alt = 0
   Insn 278: point = 33, n_alt = 0
   Insn 277: point = 34, n_alt = 3
   Insn 444: point = 36, n_alt = 5
  BB 27
   Insn 271: point = 38, n_alt = -1
   Insn 270: point = 38, n_alt = 1
   Insn 443: point = 39, n_alt = 10
	Hard reg 30 is preferable by r289 with profit 134
   Insn 269: point = 41, n_alt = 0
   Insn 268: point = 43, n_alt = 0
   Insn 256: point = 44, n_alt = 0
   Insn 442: point = 46, n_alt = 12
   Insn 267: point = 47, n_alt = 3
  BB 26
   Insn 251: point = 49, n_alt = 0
   Insn 249: point = 50, n_alt = 1
  BB 25
   Insn 238: point = 52, n_alt = 0
   Insn 405: point = 54, n_alt = -2
   Insn 236: point = 55, n_alt = -1
   Insn 235: point = 55, n_alt = 1
   Insn 234: point = 55, n_alt = -2
   Insn 233: point = 55, n_alt = 1
  BB 24
   Insn 230: point = 56, n_alt = -1
   Insn 229: point = 56, n_alt = 1
   Insn 441: point = 57, n_alt = 10
	Hard reg 30 is preferable by r287 with profit 45
   Insn 228: point = 59, n_alt = 0
   Insn 227: point = 61, n_alt = 0
   Insn 226: point = 62, n_alt = 3
  BB 23
   Insn 223: point = 64, n_alt = -1
   Insn 222: point = 64, n_alt = 1
   Insn 440: point = 65, n_alt = 10
	Hard reg 30 is preferable by r286 with profit 134
   Insn 221: point = 67, n_alt = 0
   Insn 220: point = 69, n_alt = 0
   Insn 211: point = 70, n_alt = 0
   Insn 439: point = 72, n_alt = 12
   Insn 219: point = 73, n_alt = 3
  BB 22
   Insn 206: point = 75, n_alt = 0
   Insn 204: point = 76, n_alt = 1
  BB 21
   Insn 193: point = 78, n_alt = 0
   Insn 404: point = 80, n_alt = -2
   Insn 191: point = 81, n_alt = -1
   Insn 190: point = 81, n_alt = 1
   Insn 189: point = 81, n_alt = -2
   Insn 188: point = 81, n_alt = 1
  BB 20
   Insn 185: point = 82, n_alt = -1
   Insn 184: point = 82, n_alt = 1
   Insn 438: point = 83, n_alt = 10
	Hard reg 30 is preferable by r284 with profit 45
   Insn 183: point = 85, n_alt = 0
   Insn 182: point = 87, n_alt = 0
   Insn 181: point = 88, n_alt = 3
  BB 19
   Insn 178: point = 90, n_alt = -1
   Insn 177: point = 90, n_alt = 1
   Insn 437: point = 91, n_alt = 10
	Hard reg 30 is preferable by r283 with profit 134
   Insn 176: point = 93, n_alt = 0
   Insn 175: point = 95, n_alt = 0
   Insn 166: point = 96, n_alt = 0
   Insn 436: point = 98, n_alt = 12
   Insn 174: point = 99, n_alt = 3
  BB 18
   Insn 161: point = 101, n_alt = 0
   Insn 159: point = 102, n_alt = 1
  BB 17
   Insn 148: point = 104, n_alt = 0
   Insn 403: point = 106, n_alt = -2
   Insn 146: point = 107, n_alt = -1
   Insn 145: point = 107, n_alt = 1
   Insn 144: point = 107, n_alt = -2
   Insn 143: point = 107, n_alt = 1
  BB 16
   Insn 140: point = 108, n_alt = -1
   Insn 139: point = 108, n_alt = 1
   Insn 435: point = 109, n_alt = 10
	Hard reg 30 is preferable by r281 with profit 45
   Insn 138: point = 111, n_alt = 0
   Insn 137: point = 113, n_alt = 0
   Insn 136: point = 114, n_alt = 3
  BB 15
   Insn 133: point = 116, n_alt = -1
   Insn 132: point = 116, n_alt = 1
   Insn 434: point = 117, n_alt = 10
	Hard reg 30 is preferable by r280 with profit 134
   Insn 131: point = 119, n_alt = 0
   Insn 130: point = 121, n_alt = 0
   Insn 121: point = 122, n_alt = 0
   Insn 433: point = 124, n_alt = 12
   Insn 129: point = 125, n_alt = 3
  BB 14
   Insn 116: point = 127, n_alt = 0
   Insn 114: point = 128, n_alt = 1
  BB 13
   Insn 105: point = 130, n_alt = 0
   Insn 402: point = 132, n_alt = -2
   Insn 103: point = 133, n_alt = -1
   Insn 102: point = 133, n_alt = -2
   Insn 101: point = 133, n_alt = -2
   Insn 100: point = 133, n_alt = 1
  BB 12
   Insn 97: point = 134, n_alt = -1
   Insn 96: point = 134, n_alt = 1
   Insn 432: point = 135, n_alt = 5
  BB 11
   Insn 94: point = 137, n_alt = -1
   Insn 93: point = 137, n_alt = 1
   Insn 431: point = 138, n_alt = 5
  BB 9
   Insn 411: point = 140, n_alt = -1
   Insn 75: point = 140, n_alt = 0
   Insn 400: point = 142, n_alt = -2
   Insn 73: point = 143, n_alt = -1
   Insn 72: point = 143, n_alt = -2
   Insn 71: point = 143, n_alt = -2
   Insn 70: point = 143, n_alt = 1
  BB 10
   Insn 87: point = 144, n_alt = 0
   Insn 401: point = 146, n_alt = -2
   Insn 85: point = 147, n_alt = -1
   Insn 84: point = 147, n_alt = -2
   Insn 83: point = 147, n_alt = -2
   Insn 82: point = 147, n_alt = 1
  BB 8
   Insn 67: point = 148, n_alt = 0
   Insn 65: point = 149, n_alt = 1
   Insn 430: point = 151, n_alt = 5
   Insn 59: point = 152, n_alt = 2
  BB 6
   Insn 43: point = 154, n_alt = -1
   Insn 42: point = 154, n_alt = 0
  BB 5
   Insn 40: point = 155, n_alt = -1
   Insn 39: point = 155, n_alt = 0
  BB 4
   Insn 37: point = 156, n_alt = 0
  BB 3
   Insn 34: point = 157, n_alt = 0
  BB 32
   Insn 413: point = 158, n_alt = -1
   Insn 421: point = 158, n_alt = -2
   Insn 420: point = 160, n_alt = -2
   Insn 419: point = 162, n_alt = -2
   Insn 418: point = 164, n_alt = -2
   Insn 449: point = 166, n_alt = 7
   Insn 451: point = 168, n_alt = -2
	   Creating copy r295->r297@18
   Insn 63: point = 170, n_alt = 0
   Insn 450: point = 172, n_alt = 5
   Insn 4: point = 173, n_alt = 1
   Insn 3: point = 174, n_alt = 5
   Insn 61: point = 175, n_alt = 1
   Insn 326: point = 176, n_alt = 2
  BB 2
   Insn 407: point = 178, n_alt = -1
   Insn 416: point = 178, n_alt = -2
   Insn 266: point = 180, n_alt = 8
   Insn 5: point = 181, n_alt = 1
   Insn 113: point = 182, n_alt = 5
   Insn 427: point = 183, n_alt = 7
   Insn 429: point = 185, n_alt = -2
	   Creating copy r273->r275@1
   Insn 20: point = 187, n_alt = 0
   Insn 428: point = 189, n_alt = 10
	Hard reg 31 is preferable by r274 with profit 1
   Insn 424: point = 191, n_alt = 7
   Insn 426: point = 193, n_alt = -2
	   Creating copy r270->r272@1
   Insn 14: point = 195, n_alt = 0
   Insn 425: point = 197, n_alt = 10
	Hard reg 30 is preferable by r271 with profit 1
   Insn 423: point = 199, n_alt = 7
   Insn 26: point = 201, n_alt = 5
   Insn 19: point = 202, n_alt = 0
   Insn 13: point = 204, n_alt = 0
   Insn 10: point = 206, n_alt = 5
   Insn 18: point = 207, n_alt = 3
   Insn 12: point = 209, n_alt = 3
   Insn 9: point = 211, n_alt = 6
   Insn 17: point = 212, n_alt = 5
   Insn 11: point = 213, n_alt = 5
  r246 is added to live at bb2 start
  r254 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 63 (  1.9)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      115  126  127  128  171  177  178  179  180  181  182
      244  250  251  263  269  270  271  272  273  274  275
    liveout: 2:

        7   13  102  103  126  127  171  244  250  251  263

BB 3:
    gen: 3:

      265
    killed: 3:

      100
    livein: 3:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 3:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 4:
    gen: 4:

      267
    killed: 4:

      100
    livein: 4:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 4:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 5:
    gen: 5:

      265
    killed: 5:

      100
    livein: 5:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 5:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 6:
    gen: 6:

      267
    killed: 6:

      100
    livein: 6:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 6:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 7:
    killed: 7:

      125  255
    livein: 7:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 7:

        7   13  102  103  125  126  127  171  244  249  250
      251  264  265  266  267

BB 8:
    gen: 8:

      249  267
    killed: 8:

      100  120  188  276
    livein: 8:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 8:

        7   13  102  103  120  126  127  171  244  249  250
      251  264  265  266  267

BB 9:
    killed: 9:

      125  256
    livein: 9:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 9:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 10:
    killed: 10:

      125  257
    livein: 10:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 10:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 11:
    gen: 11:

      120  126
    killed: 11:

      100  277
    livein: 11:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 11:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 12:
    gen: 12:

      127  264
    killed: 12:

      100  278
    livein: 12:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 12:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 13:
    killed: 13:

      125  258
    livein: 13:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 13:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 14:
    gen: 14:

      250
    killed: 14:

      100  190
    livein: 14:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 14:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 15:
    gen: 15:

      120  244  250
    killed: 15:

      100  134  194  195  196  279  280
    livein: 15:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 15:

        7   13  102  103  120  125  126  127  134  171  244
      249  250  251  264  265  266  267

BB 16:
    gen: 16:

      134  250  264
    killed: 16:

      100  198  199  200  281
    livein: 16:

      120  125  126  127  134  171  244  249  250  251  264
      265  266  267
    liveout: 16:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 17:
    killed: 17:

      125  259
    livein: 17:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 17:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 18:
    gen: 18:

      250
    killed: 18:

      100  202
    livein: 18:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 18:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 19:
    gen: 19:

      120  244  250
    killed: 19:

      100  144  206  207  208  282  283
    livein: 19:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 19:

        7   13  102  103  120  125  126  127  144  171  244
      249  250  251  264  265  266  267

BB 20:
    gen: 20:

      144  250  264
    killed: 20:

      100  210  211  212  284
    livein: 20:

      120  125  126  127  144  171  244  249  250  251  264
      265  266  267
    liveout: 20:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 21:
    killed: 21:

      125  260
    livein: 21:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 21:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 22:
    gen: 22:

      250
    killed: 22:

      100  214
    livein: 22:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 22:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 23:
    gen: 23:

      120  244  250
    killed: 23:

      100  154  218  219  220  285  286
    livein: 23:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 23:

        7   13  102  103  120  125  126  127  154  171  244
      249  250  251  264  265  266  267

BB 24:
    gen: 24:

      154  250  264
    killed: 24:

      100  222  223  224  287
    livein: 24:

      120  125  126  127  154  171  244  249  250  251  264
      265  266  267
    liveout: 24:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 25:
    killed: 25:

      125  261
    livein: 25:

      120  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 25:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 26:
    gen: 26:

      250
    killed: 26:

      100  226
    livein: 26:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 26:

        7   13  102  103  120  125  126  127  171  244  249
      250  251  264  265  266  267

BB 27:
    gen: 27:

      120  244  251
    killed: 27:

      100  164  233  234  235  288  289
    livein: 27:

      120  125  126  127  171  244  249  250  251  264  265
      266  267
    liveout: 27:

        7   13  102  103  125  126  127  164  171  244  249
      250  251  264  265  266  267

BB 28:
    gen: 28:

      164  264
    killed: 28:

      100  240  241  242  290  291
    livein: 28:

      125  126  127  164  171  244  249  250  251  264  265
      266  267
    liveout: 28:

        7   13  102  103  125  126  127  171  244  249  250
      251  264  265  266  267

BB 29:
    killed: 29:

      125  262
    livein: 29:

      126  127  171  244  249  250  251  264  265  266  267
    liveout: 29:

        7   13  102  103  125  126  127  171  244  249  250
      251  264  265  266  267

BB 30:
    gen: 30:

      125  266  267
    killed: 30:

      100  243  266  267
    livein: 30:

      125  126  127  171  244  249  250  251  264  265  266
      267
    liveout: 30:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 31:
    gen: 31:

      171  265
    killed: 31:

      100  171  263  292  293  294
    livein: 31:

      126  127  171  244  250  251  265
    liveout: 31:

        7   13  102  103  126  127  171  244  250  251  263

BB 32:
    gen: 32:

      171  263
    killed: 32:

      119  129  130  247  249  264  265  266  267  295  296
      297
    livein: 32:

      126  127  171  244  250  251  263
    liveout: 32:

        7   13  102  103  126  127  171  244  249  250  251
      264  265  266  267

BB 33:
    liveout: 33:

        7   13  102  103
 r115: [188..206]
 r119: [165..176]
 r120: [38..152]
 r125: [144..144] [134..140] [108..130] [82..104] [56..78] [28..52] [24..24] [15..20]
 r126: [0..191]
 r127: [0..183]
 r128: [179..181]
 r129: [161..174]
 r130: [159..173]
 r134: [113..122]
 r144: [87..96]
 r154: [61..70]
 r164: [33..44]
 r171: [7..199] [0..0]
 r177: [210..213]
 r178: [198..204]
 r179: [205..209]
 r180: [208..212]
 r181: [190..202]
 r182: [203..207]
 r188: [148..149]
 r190: [127..128]
 r194: [120..121]
 r195: [121..125]
 r196: [118..119]
 r198: [112..113]
 r199: [113..114]
 r200: [110..111]
 r202: [101..102]
 r206: [94..95]
 r207: [95..99]
 r208: [92..93]
 r210: [86..87]
 r211: [87..88]
 r212: [84..85]
 r214: [75..76]
 r218: [68..69]
 r219: [69..73]
 r220: [66..67]
 r222: [60..61]
 r223: [61..62]
 r224: [58..59]
 r226: [49..50]
 r233: [42..43]
 r234: [43..47]
 r235: [40..41]
 r240: [32..33]
 r241: [33..34]
 r242: [30..31]
 r243: [13..17]
 r244: [0..211]
 r246: [0..214]
 r247: [171..175]
 r249: [12..166]
 r250: [0..182]
 r251: [0..180]
 r254: [0..214]
 r255: [21..22]
 r256: [141..142]
 r257: [145..146]
 r258: [131..132]
 r259: [105..106]
 r260: [79..80]
 r261: [53..54]
 r262: [25..26]
 r263: [163..178] [0..9]
 r264: [12..164]
 r265: [10..162]
 r266: [12..160]
 r267: [12..158]
 r269: [200..201]
 r270: [194..195]
 r271: [196..197]
 r272: [192..193]
 r273: [186..187]
 r274: [188..189]
 r275: [184..185]
 r276: [150..151]
 r277: [137..138]
 r278: [134..135]
 r279: [123..124]
 r280: [116..117]
 r281: [108..109]
 r282: [97..98]
 r283: [90..91]
 r284: [82..83]
 r285: [71..72]
 r286: [64..65]
 r287: [56..57]
 r288: [45..46]
 r289: [38..39]
 r290: [35..36]
 r291: [28..29]
 r292: [3..4]
 r293: [5..6]
 r294: [1..2]
 r295: [169..170]
 r296: [171..172]
 r297: [167..168]
Compressing live ranges: from 215 to 153 - 71%
Ranges after the compression:
 r115: [131..148]
 r119: [117..124]
 r120: [25..110]
 r125: [104..104] [98..101] [78..95] [58..75] [38..55] [16..35] [13..13] [9..10]
 r126: [0..134]
 r127: [0..126]
 r128: [125..126]
 r129: [113..124]
 r130: [111..124]
 r134: [83..91]
 r144: [63..71]
 r154: [43..51]
 r164: [21..31]
 r171: [7..142] [0..0]
 r177: [151..152]
 r178: [141..146]
 r179: [147..150]
 r180: [149..152]
 r181: [133..144]
 r182: [145..148]
 r188: [107..108]
 r190: [94..95]
 r194: [89..90]
 r195: [90..93]
 r196: [87..88]
 r198: [82..83]
 r199: [83..84]
 r200: [80..81]
 r202: [74..75]
 r206: [69..70]
 r207: [70..73]
 r208: [67..68]
 r210: [62..63]
 r211: [63..64]
 r212: [60..61]
 r214: [54..55]
 r218: [49..50]
 r219: [50..53]
 r220: [47..48]
 r222: [42..43]
 r223: [43..44]
 r224: [40..41]
 r226: [34..35]
 r233: [29..30]
 r234: [30..33]
 r235: [27..28]
 r240: [20..21]
 r241: [21..22]
 r242: [18..19]
 r243: [9..10]
 r244: [0..152]
 r246: [0..152]
 r247: [123..124]
 r249: [9..118]
 r250: [0..126]
 r251: [0..126]
 r254: [0..152]
 r255: [11..12]
 r256: [102..103]
 r257: [105..106]
 r258: [96..97]
 r259: [76..77]
 r260: [56..57]
 r261: [36..37]
 r262: [14..15]
 r263: [115..124] [0..8]
 r264: [9..116]
 r265: [9..114]
 r266: [9..112]
 r267: [9..110]
 r269: [143..144]
 r270: [137..138]
 r271: [139..140]
 r272: [135..136]
 r273: [129..130]
 r274: [131..132]
 r275: [127..128]
 r276: [109..110]
 r277: [100..101]
 r278: [98..99]
 r279: [92..93]
 r280: [85..86]
 r281: [78..79]
 r282: [72..73]
 r283: [65..66]
 r284: [58..59]
 r285: [52..53]
 r286: [45..46]
 r287: [38..39]
 r288: [32..33]
 r289: [25..26]
 r290: [23..24]
 r291: [16..17]
 r292: [3..4]
 r293: [5..6]
 r294: [1..2]
 r295: [121..122]
 r296: [123..124]
 r297: [119..120]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 33
  BB 31
   Insn 320: point = 0, n_alt = -1
   Insn 319: point = 0, n_alt = 0
   Insn 446: point = 0, n_alt = 7
   Insn 448: point = 2, n_alt = -2
	   Creating copy r292->r294@18
   Insn 318: point = 4, n_alt = 4
   Insn 447: point = 6, n_alt = 5
   Insn 315: point = 8, n_alt = 2
   Insn 417: point = 9, n_alt = -2
  BB 30
   Insn 312: point = 12, n_alt = -1
   Insn 311: point = 12, n_alt = 0
   Insn 309: point = 12, n_alt = 2
   Insn 304: point = 13, n_alt = 2
   Insn 301: point = 14, n_alt = 1
   Insn 299: point = 14, n_alt = 0
   Insn 298: point = 16, n_alt = 0
   Insn 297: point = 17, n_alt = 1
   Insn 306: point = 18, n_alt = 2
  BB 7
   Insn 409: point = 20, n_alt = -1
   Insn 52: point = 20, n_alt = 0
   Insn 399: point = 22, n_alt = -2
   Insn 50: point = 23, n_alt = -1
   Insn 49: point = 23, n_alt = 1
   Insn 48: point = 23, n_alt = -2
   Insn 47: point = 23, n_alt = 1
  BB 29
   Insn 289: point = 24, n_alt = 0
   Insn 406: point = 26, n_alt = -2
   Insn 287: point = 27, n_alt = -1
   Insn 286: point = 27, n_alt = 1
   Insn 285: point = 27, n_alt = -2
   Insn 284: point = 27, n_alt = 1
  BB 28
   Insn 281: point = 28, n_alt = -1
   Insn 280: point = 28, n_alt = 1
   Insn 445: point = 29, n_alt = 10
	Hard reg 30 is preferable by r291 with profit 45
   Insn 279: point = 31, n_alt = 0
   Insn 278: point = 33, n_alt = 0
   Insn 277: point = 34, n_alt = 3
   Insn 444: point = 36, n_alt = 5
  BB 27
   Insn 271: point = 38, n_alt = -1
   Insn 270: point = 38, n_alt = 1
   Insn 443: point = 39, n_alt = 10
	Hard reg 30 is preferable by r289 with profit 134
   Insn 269: point = 41, n_alt = 0
   Insn 268: point = 43, n_alt = 0
   Insn 256: point = 44, n_alt = 0
   Insn 442: point = 46, n_alt = 12
   Insn 267: point = 47, n_alt = 3
  BB 26
   Insn 251: point = 49, n_alt = 0
   Insn 249: point = 50, n_alt = 1
  BB 25
   Insn 238: point = 52, n_alt = 0
   Insn 405: point = 54, n_alt = -2
   Insn 236: point = 55, n_alt = -1
   Insn 235: point = 55, n_alt = 1
   Insn 234: point = 55, n_alt = -2
   Insn 233: point = 55, n_alt = 1
  BB 24
   Insn 230: point = 56, n_alt = -1
   Insn 229: point = 56, n_alt = 1
   Insn 441: point = 57, n_alt = 10
	Hard reg 30 is preferable by r287 with profit 45
   Insn 228: point = 59, n_alt = 0
   Insn 227: point = 61, n_alt = 0
   Insn 226: point = 62, n_alt = 3
  BB 23
   Insn 223: point = 64, n_alt = -1
   Insn 222: point = 64, n_alt = 1
   Insn 440: point = 65, n_alt = 10
	Hard reg 30 is preferable by r286 with profit 134
   Insn 221: point = 67, n_alt = 0
   Insn 220: point = 69, n_alt = 0
   Insn 211: point = 70, n_alt = 0
   Insn 439: point = 72, n_alt = 12
   Insn 219: point = 73, n_alt = 3
  BB 22
   Insn 206: point = 75, n_alt = 0
   Insn 204: point = 76, n_alt = 1
  BB 21
   Insn 193: point = 78, n_alt = 0
   Insn 404: point = 80, n_alt = -2
   Insn 191: point = 81, n_alt = -1
   Insn 190: point = 81, n_alt = 1
   Insn 189: point = 81, n_alt = -2
   Insn 188: point = 81, n_alt = 1
  BB 20
   Insn 185: point = 82, n_alt = -1
   Insn 184: point = 82, n_alt = 1
   Insn 438: point = 83, n_alt = 10
	Hard reg 30 is preferable by r284 with profit 45
   Insn 183: point = 85, n_alt = 0
   Insn 182: point = 87, n_alt = 0
   Insn 181: point = 88, n_alt = 3
  BB 19
   Insn 178: point = 90, n_alt = -1
   Insn 177: point = 90, n_alt = 1
   Insn 437: point = 91, n_alt = 10
	Hard reg 30 is preferable by r283 with profit 134
   Insn 176: point = 93, n_alt = 0
   Insn 175: point = 95, n_alt = 0
   Insn 166: point = 96, n_alt = 0
   Insn 436: point = 98, n_alt = 12
   Insn 174: point = 99, n_alt = 3
  BB 18
   Insn 161: point = 101, n_alt = 0
   Insn 159: point = 102, n_alt = 1
  BB 17
   Insn 148: point = 104, n_alt = 0
   Insn 403: point = 106, n_alt = -2
   Insn 146: point = 107, n_alt = -1
   Insn 145: point = 107, n_alt = 1
   Insn 144: point = 107, n_alt = -2
   Insn 143: point = 107, n_alt = 1
  BB 16
   Insn 140: point = 108, n_alt = -1
   Insn 139: point = 108, n_alt = 1
   Insn 435: point = 109, n_alt = 10
	Hard reg 30 is preferable by r281 with profit 45
   Insn 138: point = 111, n_alt = 0
   Insn 137: point = 113, n_alt = 0
   Insn 136: point = 114, n_alt = 3
  BB 15
   Insn 133: point = 116, n_alt = -1
   Insn 132: point = 116, n_alt = 1
   Insn 434: point = 117, n_alt = 10
	Hard reg 30 is preferable by r280 with profit 134
   Insn 131: point = 119, n_alt = 0
   Insn 130: point = 121, n_alt = 0
   Insn 121: point = 122, n_alt = 0
   Insn 433: point = 124, n_alt = 12
   Insn 129: point = 125, n_alt = 3
  BB 14
   Insn 116: point = 127, n_alt = 0
   Insn 114: point = 128, n_alt = 1
  BB 13
   Insn 105: point = 130, n_alt = 0
   Insn 402: point = 132, n_alt = -2
   Insn 103: point = 133, n_alt = -1
   Insn 102: point = 133, n_alt = -2
   Insn 101: point = 133, n_alt = -2
   Insn 100: point = 133, n_alt = 1
  BB 12
   Insn 97: point = 134, n_alt = -1
   Insn 96: point = 134, n_alt = 1
   Insn 432: point = 135, n_alt = 5
  BB 11
   Insn 94: point = 137, n_alt = -1
   Insn 93: point = 137, n_alt = 1
   Insn 431: point = 138, n_alt = 5
  BB 9
   Insn 411: point = 140, n_alt = -1
   Insn 75: point = 140, n_alt = 0
   Insn 400: point = 142, n_alt = -2
   Insn 73: point = 143, n_alt = -1
   Insn 72: point = 143, n_alt = -2
   Insn 71: point = 143, n_alt = -2
   Insn 70: point = 143, n_alt = 1
  BB 10
   Insn 87: point = 144, n_alt = 0
   Insn 401: point = 146, n_alt = -2
   Insn 85: point = 147, n_alt = -1
   Insn 84: point = 147, n_alt = -2
   Insn 83: point = 147, n_alt = -2
   Insn 82: point = 147, n_alt = 1
  BB 8
   Insn 67: point = 148, n_alt = 0
   Insn 65: point = 149, n_alt = 1
   Insn 430: point = 151, n_alt = 5
   Insn 59: point = 152, n_alt = 2
  BB 6
   Insn 43: point = 154, n_alt = -1
   Insn 42: point = 154, n_alt = 0
  BB 5
   Insn 40: point = 155, n_alt = -1
   Insn 39: point = 155, n_alt = 0
  BB 4
   Insn 37: point = 156, n_alt = 0
  BB 3
   Insn 34: point = 157, n_alt = 0
  BB 32
   Insn 413: point = 158, n_alt = -1
   Insn 421: point = 158, n_alt = -2
   Insn 420: point = 160, n_alt = -2
   Insn 419: point = 162, n_alt = -2
   Insn 418: point = 164, n_alt = -2
   Insn 449: point = 166, n_alt = 7
   Insn 451: point = 168, n_alt = -2
	   Creating copy r295->r297@18
   Insn 63: point = 170, n_alt = 0
   Insn 450: point = 172, n_alt = 5
   Insn 4: point = 173, n_alt = 1
   Insn 3: point = 174, n_alt = 5
   Insn 61: point = 175, n_alt = 1
   Insn 326: point = 176, n_alt = 2
  BB 2
   Insn 407: point = 178, n_alt = -1
   Insn 416: point = 178, n_alt = -2
   Insn 266: point = 180, n_alt = 8
   Insn 5: point = 181, n_alt = 1
   Insn 113: point = 182, n_alt = 5
   Insn 427: point = 183, n_alt = 7
   Insn 429: point = 185, n_alt = -2
	   Creating copy r273->r275@1
   Insn 20: point = 187, n_alt = 0
   Insn 428: point = 189, n_alt = 10
	Hard reg 31 is preferable by r274 with profit 1
   Insn 424: point = 191, n_alt = 7
   Insn 426: point = 193, n_alt = -2
	   Creating copy r270->r272@1
   Insn 14: point = 195, n_alt = 0
   Insn 425: point = 197, n_alt = 10
	Hard reg 30 is preferable by r271 with profit 1
   Insn 423: point = 199, n_alt = 7
   Insn 26: point = 201, n_alt = 5
   Insn 19: point = 202, n_alt = 0
   Insn 13: point = 204, n_alt = 0
   Insn 10: point = 206, n_alt = 5
   Insn 18: point = 207, n_alt = 3
   Insn 12: point = 209, n_alt = 3
   Insn 9: point = 211, n_alt = 6
   Insn 17: point = 212, n_alt = 5
   Insn 11: point = 213, n_alt = 5
 r115: [188..206]
 r119: [165..176]
 r120: [38..152]
 r125: [144..144] [134..140] [108..130] [82..104] [56..78] [28..52] [24..24] [15..20]
 r126: [0..191]
 r127: [0..183]
 r128: [179..181]
 r129: [161..174]
 r130: [159..173]
 r134: [113..122]
 r144: [87..96]
 r154: [61..70]
 r164: [33..44]
 r171: [7..199] [0..0]
 r177: [210..213]
 r178: [198..204]
 r179: [205..209]
 r180: [208..212]
 r181: [190..202]
 r182: [203..207]
 r188: [148..149]
 r190: [127..128]
 r194: [120..121]
 r195: [121..125]
 r196: [118..119]
 r198: [112..113]
 r199: [113..114]
 r200: [110..111]
 r202: [101..102]
 r206: [94..95]
 r207: [95..99]
 r208: [92..93]
 r210: [86..87]
 r211: [87..88]
 r212: [84..85]
 r214: [75..76]
 r218: [68..69]
 r219: [69..73]
 r220: [66..67]
 r222: [60..61]
 r223: [61..62]
 r224: [58..59]
 r226: [49..50]
 r233: [42..43]
 r234: [43..47]
 r235: [40..41]
 r240: [32..33]
 r241: [33..34]
 r242: [30..31]
 r243: [13..17]
 r244: [0..211]
 r247: [171..175]
 r249: [12..166]
 r250: [0..182]
 r251: [0..180]
 r255: [21..22]
 r256: [141..142]
 r257: [145..146]
 r258: [131..132]
 r259: [105..106]
 r260: [79..80]
 r261: [53..54]
 r262: [25..26]
 r263: [163..178] [0..9]
 r264: [12..164]
 r265: [10..162]
 r266: [12..160]
 r267: [12..158]
 r269: [200..201]
 r270: [194..195]
 r271: [196..197]
 r272: [192..193]
 r273: [186..187]
 r274: [188..189]
 r275: [184..185]
 r276: [150..151]
 r277: [137..138]
 r278: [134..135]
 r279: [123..124]
 r280: [116..117]
 r281: [108..109]
 r282: [97..98]
 r283: [90..91]
 r284: [82..83]
 r285: [71..72]
 r286: [64..65]
 r287: [56..57]
 r288: [45..46]
 r289: [38..39]
 r290: [35..36]
 r291: [28..29]
 r292: [3..4]
 r293: [5..6]
 r294: [1..2]
 r295: [169..170]
 r296: [171..172]
 r297: [167..168]
Compressing live ranges: from 214 to 153 - 71%
Ranges after the compression:
 r115: [131..148]
 r119: [117..124]
 r120: [25..110]
 r125: [104..104] [98..101] [78..95] [58..75] [38..55] [16..35] [13..13] [9..10]
 r126: [0..134]
 r127: [0..126]
 r128: [125..126]
 r129: [113..124]
 r130: [111..124]
 r134: [83..91]
 r144: [63..71]
 r154: [43..51]
 r164: [21..31]
 r171: [7..142] [0..0]
 r177: [151..152]
 r178: [141..146]
 r179: [147..150]
 r180: [149..152]
 r181: [133..144]
 r182: [145..148]
 r188: [107..108]
 r190: [94..95]
 r194: [89..90]
 r195: [90..93]
 r196: [87..88]
 r198: [82..83]
 r199: [83..84]
 r200: [80..81]
 r202: [74..75]
 r206: [69..70]
 r207: [70..73]
 r208: [67..68]
 r210: [62..63]
 r211: [63..64]
 r212: [60..61]
 r214: [54..55]
 r218: [49..50]
 r219: [50..53]
 r220: [47..48]
 r222: [42..43]
 r223: [43..44]
 r224: [40..41]
 r226: [34..35]
 r233: [29..30]
 r234: [30..33]
 r235: [27..28]
 r240: [20..21]
 r241: [21..22]
 r242: [18..19]
 r243: [9..10]
 r244: [0..152]
 r247: [123..124]
 r249: [9..118]
 r250: [0..126]
 r251: [0..126]
 r255: [11..12]
 r256: [102..103]
 r257: [105..106]
 r258: [96..97]
 r259: [76..77]
 r260: [56..57]
 r261: [36..37]
 r262: [14..15]
 r263: [115..124] [0..8]
 r264: [9..116]
 r265: [9..114]
 r266: [9..112]
 r267: [9..110]
 r269: [143..144]
 r270: [137..138]
 r271: [139..140]
 r272: [135..136]
 r273: [129..130]
 r274: [131..132]
 r275: [127..128]
 r276: [109..110]
 r277: [100..101]
 r278: [98..99]
 r279: [92..93]
 r280: [85..86]
 r281: [78..79]
 r282: [72..73]
 r283: [65..66]
 r284: [58..59]
 r285: [52..53]
 r286: [45..46]
 r287: [38..39]
 r288: [32..33]
 r289: [25..26]
 r290: [23..24]
 r291: [16..17]
 r292: [3..4]
 r293: [5..6]
 r294: [1..2]
 r295: [121..122]
 r296: [123..124]
 r297: [119..120]

********** Assignment #1: **********

	 Assigning to 276 (cl=LO_REGS, orig=249, freq=400, tfirst=276, tfreq=400)...
	   Assign 3 to reload r276 (freq=400)
	 Assigning to 277 (cl=LO_REGS, orig=126, freq=400, tfirst=277, tfreq=400)...
	   Assign 3 to reload r277 (freq=400)
	 Assigning to 278 (cl=LO_REGS, orig=127, freq=136, tfirst=278, tfreq=136)...
	   Assign 3 to reload r278 (freq=136)
	 Assigning to 290 (cl=LO_REGS, orig=290, freq=90, tfirst=290, tfreq=90)...
	   Assign 3 to reload r290 (freq=90)
	 Assigning to 293 (cl=LO_REGS, orig=171, freq=36, tfirst=293, tfreq=36)...
	   Assign 3 to reload r293 (freq=36)
	 Assigning to 294 (cl=LO_REGS, orig=171, freq=36, tfirst=294, tfreq=36)...
	   Assign 3 to reload r294 (freq=36)
	Hard reg 3 is preferable by r292 with profit 18
	 Assigning to 296 (cl=LO_REGS, orig=296, freq=36, tfirst=296, tfreq=36)...
	   Assign 3 to reload r296 (freq=36)
	 Assigning to 297 (cl=LO_REGS, orig=249, freq=36, tfirst=297, tfreq=36)...
	   Assign 3 to reload r297 (freq=36)
	Hard reg 3 is preferable by r295 with profit 18
	 Assigning to 269 (cl=LO_REGS, orig=171, freq=2, tfirst=269, tfreq=2)...
	   Assign 2 to reload r269 (freq=2)
	 Assigning to 272 (cl=LO_REGS, orig=126, freq=2, tfirst=272, tfreq=2)...
	   Assign 2 to reload r272 (freq=2)
	Hard reg 2 is preferable by r270 with profit 1
	 Assigning to 275 (cl=LO_REGS, orig=127, freq=2, tfirst=275, tfreq=2)...
	   Assign 3 to reload r275 (freq=2)
	Hard reg 3 is preferable by r273 with profit 1
	 Assigning to 280 (cl=GENERAL_REGS, orig=196, freq=268, tfirst=280, tfreq=268)...
	   Assign 3 to reload r280 (freq=268)
	 Assigning to 283 (cl=GENERAL_REGS, orig=208, freq=268, tfirst=283, tfreq=268)...
	   Assign 3 to reload r283 (freq=268)
	 Assigning to 286 (cl=GENERAL_REGS, orig=220, freq=268, tfirst=286, tfreq=268)...
	   Assign 3 to reload r286 (freq=268)
	 Assigning to 289 (cl=GENERAL_REGS, orig=235, freq=268, tfirst=289, tfreq=268)...
	   Assign 3 to reload r289 (freq=268)
	 Assigning to 281 (cl=GENERAL_REGS, orig=200, freq=90, tfirst=281, tfreq=90)...
	   Assign 3 to reload r281 (freq=90)
	 Assigning to 284 (cl=GENERAL_REGS, orig=212, freq=90, tfirst=284, tfreq=90)...
	   Assign 3 to reload r284 (freq=90)
	 Assigning to 287 (cl=GENERAL_REGS, orig=224, freq=90, tfirst=287, tfreq=90)...
	   Assign 3 to reload r287 (freq=90)
	 Assigning to 291 (cl=GENERAL_REGS, orig=242, freq=90, tfirst=291, tfreq=90)...
	   Assign 3 to reload r291 (freq=90)
	 Assigning to 292 (cl=GENERAL_REGS, orig=171, freq=36, tfirst=292, tfreq=36)...
	   Assign 3 to reload r292 (freq=36)
	 Assigning to 295 (cl=GENERAL_REGS, orig=249, freq=36, tfirst=295, tfreq=36)...
	   Assign 3 to reload r295 (freq=36)
	 Assigning to 270 (cl=GENERAL_REGS, orig=126, freq=2, tfirst=270, tfreq=2)...
	   Assign 2 to reload r270 (freq=2)
	 Assigning to 271 (cl=GENERAL_REGS, orig=178, freq=2, tfirst=271, tfreq=2)...
	   Assign 2 to reload r271 (freq=2)
	 Assigning to 273 (cl=GENERAL_REGS, orig=127, freq=2, tfirst=273, tfreq=2)...
	   Assign 3 to reload r273 (freq=2)
	 Assigning to 274 (cl=GENERAL_REGS, orig=181, freq=2, tfirst=274, tfreq=2)...
	   Assign 2 to reload r274 (freq=2)
	 Assigning to 279 (cl=VFP_LO_REGS, orig=279, freq=268, tfirst=279, tfreq=268)...
	   Assign 31 to reload r279 (freq=268)
	 Assigning to 282 (cl=VFP_LO_REGS, orig=282, freq=268, tfirst=282, tfreq=268)...
	   Assign 31 to reload r282 (freq=268)
	 Assigning to 285 (cl=VFP_LO_REGS, orig=285, freq=268, tfirst=285, tfreq=268)...
	   Assign 31 to reload r285 (freq=268)
	 Assigning to 288 (cl=VFP_LO_REGS, orig=288, freq=268, tfirst=288, tfreq=268)...
	   Assign 31 to reload r288 (freq=268)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 35 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 34 (    1)

Cands:
0 (nop=0, remat_regno=171, reload_regno=269):
(insn 26 19 423 2 (set (reg:SI 269 [orig:171 ivtmp.67 ] [171])
                    (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                            (const_int 140 [0x8c])))) 728 {*thumb2_movsi_vfp}
                 (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                            (const_int 140 [0x8c])))
                    (nil)))

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 250 251 263
  changed regs: 115 126 127 128 171 177 178 179 180 181 182 244 250 251 263 269 270 271 272 273 274 275
  dead regs: 115 128 177 178 179 180 181 182 269 270 271 272 273 274 275
  cands generated in BB 2:

        0
  livein cands in BB 2:

        0
  pavout cands in BB 2:

        0
  avout cands in BB 2:

        0

BB 3:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs:
  dead regs:
  livein cands in BB 3:

        0
  pavin cands in BB 3:

        0
  pavout cands in BB 3:

        0

BB 4:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs:
  dead regs:
  livein cands in BB 4:

        0
  pavin cands in BB 4:

        0
  pavout cands in BB 4:

        0

BB 5:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs:
  dead regs: 100 [cc]
  livein cands in BB 5:

        0
  pavin cands in BB 5:

        0
  pavout cands in BB 5:

        0

BB 6:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs:
  dead regs: 100 [cc]
  livein cands in BB 6:

        0
  pavin cands in BB 6:

        0
  pavout cands in BB 6:

        0

BB 7:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 255
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 255
  livein cands in BB 7:

        0
  pavin cands in BB 7:

        0
  pavout cands in BB 7:

        0

BB 8:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 120 188 276
  dead regs: 188 276
  livein cands in BB 8:

        0
  pavin cands in BB 8:

        0
  pavout cands in BB 8:

        0

BB 9:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 256
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 256
  livein cands in BB 9:

        0
  pavin cands in BB 9:

        0
  pavout cands in BB 9:

        0

BB 10:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 257
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 257
  livein cands in BB 10:

        0
  pavin cands in BB 10:

        0
  pavout cands in BB 10:

        0

BB 11:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 277
  dead regs: 100 [cc] 277
  livein cands in BB 11:

        0
  pavin cands in BB 11:

        0
  pavout cands in BB 11:

        0

BB 12:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 278
  dead regs: 100 [cc] 278
  livein cands in BB 12:

        0
  pavin cands in BB 12:

        0
  pavout cands in BB 12:

        0

BB 13:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 258
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 258
  livein cands in BB 13:

        0
  pavin cands in BB 13:

        0
  pavout cands in BB 13:

        0

BB 14:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 190
  dead regs: 190
  livein cands in BB 14:

        0
  pavin cands in BB 14:

        0
  pavout cands in BB 14:

        0

BB 15:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 134 171 244 249 250 251 264 265 266 267
  changed regs: 134 194 195 196 279 280
  dead regs: 100 [cc] 194 195 196 279 280
  livein cands in BB 15:

        0
  pavin cands in BB 15:

        0
  pavout cands in BB 15:

        0

BB 16:
  register live in: 120 125 126 127 134 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 198 199 200 281
  dead regs: 100 [cc] 134 198 199 200 281
  livein cands in BB 16:

        0
  pavin cands in BB 16:

        0
  pavout cands in BB 16:

        0

BB 17:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 259
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 259
  livein cands in BB 17:

        0
  pavin cands in BB 17:

        0
  pavout cands in BB 17:

        0

BB 18:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 202
  dead regs: 202
  livein cands in BB 18:

        0
  pavin cands in BB 18:

        0
  pavout cands in BB 18:

        0

BB 19:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 144 171 244 249 250 251 264 265 266 267
  changed regs: 144 206 207 208 282 283
  dead regs: 100 [cc] 206 207 208 282 283
  livein cands in BB 19:

        0
  pavin cands in BB 19:

        0
  pavout cands in BB 19:

        0

BB 20:
  register live in: 120 125 126 127 144 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 210 211 212 284
  dead regs: 100 [cc] 144 210 211 212 284
  livein cands in BB 20:

        0
  pavin cands in BB 20:

        0
  pavout cands in BB 20:

        0

BB 21:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 260
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 260
  livein cands in BB 21:

        0
  pavin cands in BB 21:

        0
  pavout cands in BB 21:

        0

BB 22:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 214
  dead regs: 214
  livein cands in BB 22:

        0
  pavin cands in BB 22:

        0
  pavout cands in BB 22:

        0

BB 23:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 154 171 244 249 250 251 264 265 266 267
  changed regs: 154 218 219 220 285 286
  dead regs: 100 [cc] 218 219 220 285 286
  livein cands in BB 23:

        0
  pavin cands in BB 23:

        0
  pavout cands in BB 23:

        0

BB 24:
  register live in: 120 125 126 127 154 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 222 223 224 287
  dead regs: 100 [cc] 154 222 223 224 287
  livein cands in BB 24:

        0
  pavin cands in BB 24:

        0
  pavout cands in BB 24:

        0

BB 25:
  register live in: 120 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 261
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 261
  livein cands in BB 25:

        0
  pavin cands in BB 25:

        0
  pavout cands in BB 25:

        0

BB 26:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 120 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 226
  dead regs: 226
  livein cands in BB 26:

        0
  pavin cands in BB 26:

        0
  pavout cands in BB 26:

        0

BB 27:
  register live in: 120 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 126 127 164 171 244 249 250 251 264 265 266 267
  changed regs: 164 233 234 235 288 289
  dead regs: 100 [cc] 120 233 234 235 288 289
  livein cands in BB 27:

        0
  pavin cands in BB 27:

        0
  pavout cands in BB 27:

        0

BB 28:
  register live in: 125 126 127 164 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 240 241 242 290 291
  dead regs: 100 [cc] 164 240 241 242 290 291
  livein cands in BB 28:

        0
  pavin cands in BB 28:

        0
  pavout cands in BB 28:

        0

BB 29:
  register live in: 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 0 [r0] 1 [r1] 2 [r2] 125 262
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 262
  livein cands in BB 29:

        0
  pavin cands in BB 29:

        0
  pavout cands in BB 29:

        0

BB 30:
  register live in: 125 126 127 171 244 249 250 251 264 265 266 267
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 243 266 267
  dead regs: 100 [cc] 125 243
  livein cands in BB 30:

        0
  pavin cands in BB 30:

        0
  pavout cands in BB 30:

        0

BB 31:
  register live in: 126 127 171 244 250 251 265
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 250 251 263
  changed regs: 171 263 292 293 294
  dead regs: 100 [cc] 171 265 292 293 294
  livein cands in BB 31:

        0
  pavin cands in BB 31:

        0

BB 32:
  register live in: 126 127 171 244 250 251 263
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126 127 171 244 249 250 251 264 265 266 267
  changed regs: 119 129 130 247 249 264 265 266 267 295 296 297
  dead regs: 119 129 130 247 263 295 296 297
  livein cands in BB 32:

        0
  pavin cands in BB 32:

        0
  pavout cands in BB 32:

        0

BB 33:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs:
  dead regs:
  livein cands in BB 33:

        0
subreg regs:
  Slot 0 regnos (width = 0):	 249
  Slot 1 regnos (width = 0):	 126
  Slot 2 regnos (width = 0):	 127
  Slot 3 regnos (width = 0):	 171
Changing spilled pseudos to memory in insn #423
Changing spilled pseudos to memory in insn #424
Changing spilled pseudos to memory in insn #15
Changing spilled pseudos to memory in insn #427
Changing spilled pseudos to memory in insn #21
Changing spilled pseudos to memory in insn #430
Changing spilled pseudos to memory in insn #431
Changing spilled pseudos to memory in insn #432
Changing spilled pseudos to memory in insn #447
Changing spilled pseudos to memory in insn #446
Changing spilled pseudos to memory in insn #3
Changing spilled pseudos to memory in insn #449
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=40)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 449:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 447:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 432:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 431:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 430:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 427:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 424:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 423:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=56)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=16)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
changing reg in insn 10
changing reg in insn 20
changing reg in insn 14
changing reg in insn 326
changing reg in insn 418
changing reg in insn 63
changing reg in insn 59
changing reg in insn 65
changing reg in insn 270
changing reg in insn 222
changing reg in insn 177
changing reg in insn 132
changing reg in insn 93
changing reg in insn 289
changing reg in insn 238
changing reg in insn 193
changing reg in insn 148
changing reg in insn 105
changing reg in insn 87
changing reg in insn 75
changing reg in insn 52
changing reg in insn 299
changing reg in insn 298
changing reg in insn 5
changing reg in insn 416
changing reg in insn 3
changing reg in insn 420
changing reg in insn 4
changing reg in insn 421
changing reg in insn 121
changing reg in insn 137
changing reg in insn 130
changing reg in insn 125
changing reg in insn 122
changing reg in insn 166
changing reg in insn 182
changing reg in insn 175
changing reg in insn 170
changing reg in insn 167
changing reg in insn 211
changing reg in insn 227
changing reg in insn 220
changing reg in insn 215
changing reg in insn 212
changing reg in insn 256
changing reg in insn 278
changing reg in insn 268
changing reg in insn 260
changing reg in insn 257
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 65
changing reg in insn 67
changing reg in insn 114
changing reg in insn 116
changing reg in insn 130
changing reg in insn 131
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 137
changing reg in insn 138
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 159
changing reg in insn 161
changing reg in insn 175
changing reg in insn 176
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 182
changing reg in insn 183
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 204
changing reg in insn 206
changing reg in insn 220
changing reg in insn 221
changing reg in insn 219
changing reg in insn 220
changing reg in insn 221
changing reg in insn 227
changing reg in insn 228
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 249
changing reg in insn 251
changing reg in insn 268
changing reg in insn 269
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 278
changing reg in insn 279
changing reg in insn 277
changing reg in insn 278
changing reg in insn 279
changing reg in insn 299
changing reg in insn 298
changing reg in insn 297
changing reg in insn 304
changing reg in insn 301
changing reg in insn 299
changing reg in insn 298
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 61
changing reg in insn 63
changing reg in insn 113
changing reg in insn 266
changing reg in insn 249
changing reg in insn 226
changing reg in insn 219
changing reg in insn 204
changing reg in insn 181
changing reg in insn 174
changing reg in insn 159
changing reg in insn 136
changing reg in insn 129
changing reg in insn 114
changing reg in insn 226
changing reg in insn 219
changing reg in insn 181
changing reg in insn 174
changing reg in insn 136
changing reg in insn 129
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 399
changing reg in insn 400
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 404
changing reg in insn 405
changing reg in insn 406
changing reg in insn 416
changing reg in insn 417
changing reg in insn 315
changing reg in insn 419
changing reg in insn 319
changing reg in insn 316
changing reg in insn 315
changing reg in insn 326
changing reg in insn 323
changing reg in insn 418
changing reg in insn 96
changing reg in insn 139
changing reg in insn 184
changing reg in insn 229
changing reg in insn 280
changing reg in insn 419
changing reg in insn 417
changing reg in insn 34
changing reg in insn 39
changing reg in insn 420
changing reg in insn 309
changing reg in insn 309
changing reg in insn 304
changing reg in insn 301
changing reg in insn 421
changing reg in insn 306
changing reg in insn 30
changing reg in insn 37
changing reg in insn 42
changing reg in insn 59
changing reg in insn 311
changing reg in insn 307
changing reg in insn 306
deleting insn with uid = 426.
deleting insn with uid = 429.
deleting insn with uid = 416.
deleting insn with uid = 399.
deleting insn with uid = 400.
deleting insn with uid = 401.
deleting insn with uid = 402.
deleting insn with uid = 403.
deleting insn with uid = 404.
deleting insn with uid = 405.
deleting insn with uid = 406.
deleting insn with uid = 417.
deleting insn with uid = 448.
deleting insn with uid = 451.
deleting insn with uid = 418.
deleting insn with uid = 419.
deleting insn with uid = 420.
deleting insn with uid = 421.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 287.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 45 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 36 (  1.1)


drawMiniMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 29 [s13] 30 [s14] 31 [s15] 100 [cc]
;;  ref usage 	r0={25d,35u} r1={17d,8u} r2={27d,29u} r3={31d,24u} r4={2d,7u} r5={2d,3u} r6={2d,7u} r7={1d,11u,6e} r8={1d,5u,1e} r9={1d,6u} r10={2d,7u} r11={1d,1u,1e} r12={16d} r13={1d,53u} r14={9d} r15={8d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={17d,8u} r30={27d,18u} r31={19d,22u} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={29d,14u} r101={8d} r104={8d} r105={8d} r106={8d} r254={1e} 
;;    total ref usage 1070{803d,258u,9e} in 261{253 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 2 11 2 (debug_marker) "../System/map.c":90:2 -1
     (nil))
(insn 11 8 17 2 (set (reg/f:SI 2 r2 [177])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>)) "../System/map.c":90:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>)
        (nil)))
(insn 17 11 9 2 (set (reg/f:SI 3 r3 [180])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>)) "../System/map.c":91:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>)
        (nil)))
(insn 9 17 12 2 (set (reg/f:SI 8 r8 [244])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>)) "../System/map.c":90:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>)
        (nil)))
(insn 12 9 18 2 (set (reg:SF 30 s14 [orig:179 px ] [179])
        (mem/c:SF (reg/f:SI 2 r2 [177]) [1 px+0 S4 A32])) "../System/map.c":90:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 18 12 10 2 (set (reg:SF 31 s15 [orig:182 py ] [182])
        (mem/c:SF (reg/f:SI 3 r3 [180]) [1 py+0 S4 A32])) "../System/map.c":91:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 10 18 13 2 (set (reg:SI 3 r3 [orig:115 Blocksize.4_3 ] [115])
        (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])) "../System/map.c":90:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 13 10 19 2 (set (reg:SI 30 s14 [178])
        (fix:SI (fix:SF (reg:SF 30 s14 [orig:179 px ] [179])))) "../System/map.c":90:13 805 {*truncsisf2_vfp}
     (nil))
(insn 19 13 26 2 (set (reg:SI 31 s15 [181])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:182 py ] [182])))) "../System/map.c":91:13 805 {*truncsisf2_vfp}
     (nil))
(insn 26 19 423 2 (set (reg:SI 2 r2 [orig:171 ivtmp.67 ] [171])
        (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                (const_int 140 [0x8c])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                (const_int 140 [0x8c])))
        (nil)))
(insn 423 26 425 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [7 %sfp+-4 S4 A32])
        (reg:SI 2 r2 [orig:171 ivtmp.67 ] [171])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 425 423 14 2 (set (reg:SI 2 r2 [178])
        (reg:SI 30 s14 [178])) "../System/map.c":90:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 425 424 2 (set (reg/v:SI 2 r2 [orig:126 dpx ] [126])
        (div:SI (reg:SI 2 r2 [178])
            (reg:SI 3 r3 [orig:115 Blocksize.4_3 ] [115]))) "../System/map.c":90:6 162 {divsi3}
     (nil))
(insn 424 14 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [7 %sfp+-12 S4 A32])
        (reg/v:SI 2 r2 [orig:126 dpx ] [126])) "../System/map.c":90:6 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 15 424 16 2 (var_location:SI dpx (mem/c:SI (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4])) [7 %sfp+-12 S4 A32])) "../System/map.c":90:6 -1
     (nil))
(debug_insn 16 15 428 2 (debug_marker) "../System/map.c":91:2 -1
     (nil))
(insn 428 16 20 2 (set (reg:SI 2 r2 [181])
        (reg:SI 31 s15 [181])) "../System/map.c":91:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 20 428 427 2 (set (reg/v:SI 3 r3 [orig:127 dpy ] [127])
        (div:SI (reg:SI 2 r2 [181])
            (reg:SI 3 r3 [orig:115 Blocksize.4_3 ] [115]))) "../System/map.c":91:6 162 {divsi3}
     (nil))
(insn 427 20 21 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [7 %sfp+-8 S4 A32])
        (reg/v:SI 3 r3 [orig:127 dpy ] [127])) "../System/map.c":91:6 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 21 427 22 2 (var_location:SI dpy (mem/c:SI (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8])) [7 %sfp+-8 S4 A32])) "../System/map.c":91:6 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/map.c":92:2 -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "../System/map.c":92:6 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 25 24 113 2 (debug_marker) "../System/map.c":92:14 -1
     (nil))
(insn 113 25 60 2 (set (reg/f:SI 7 r7 [250])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)) "../System/map.c":102:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
        (nil)))
(note 60 113 5 2 NOTE_INSN_DELETED)
(insn 5 60 266 2 (set (reg/v:SI 6 r6 [orig:128 y ] [128])
        (const_int 0 [0])) "../System/map.c":92:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 266 5 276 2 (set (reg/f:SI 11 fp [251])
        (plus:SI (reg/f:SI 7 r7 [250])
            (const_int 1340 [0x53c]))) "../System/map.c":103:21 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1340 [0x53c])))
        (nil)))
(note 276 266 407 2 NOTE_INSN_DELETED)
(jump_insn 407 276 408 2 (set (pc)
        (label_ref 321)) 284 {*arm_jump}
     (nil)
 -> 321)
(barrier 408 407 310)
(code_label 310 408 29 3 39 (nil) [2 uses])
(note 29 310 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 33 29 30 3 NOTE_INSN_DELETED)
(debug_insn 30 33 31 3 (var_location:SI x (reg/v:SI 4 r4 [orig:130 x ] [130])) -1
     (nil))
(debug_insn 31 30 32 3 (debug_marker) "../System/map.c":94:4 -1
     (nil))
(debug_insn 32 31 34 3 (debug_marker) "../System/map.c":95:4 -1
     (nil))
(jump_insn 34 32 35 3 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 6 r6 [orig:128 y ] [128])
                        (const_int 0 [0]))
                    (label_ref:SI 44)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":95:6 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 232894604 (nil))
 -> 44)
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 36 35 37 4 NOTE_INSN_DELETED)
(jump_insn 37 36 38 4 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 4 r4 [orig:130 x ] [130])
                        (const_int 0 [0]))
                    (label_ref:SI 44)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":95:14 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 386547060 (nil))
 -> 44)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:128 y ] [128])
            (const_int 48 [0x30]))) "../System/map.c":95:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 44)
            (pc))) "../System/map.c":95:24 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 241269788 (nil))
 -> 44)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:130 x ] [130])
            (const_int 98 [0x62]))) "../System/map.c":95:47 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "../System/map.c":95:47 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 602047044 (nil))
 -> 56)
(code_label 44 43 45 7 30 (nil) [3 uses])
(note 45 44 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 51 45 46 7 NOTE_INSN_DELETED)
(debug_insn 46 51 47 7 (debug_marker) "../System/map.c":96:5 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 2 r2)
        (const_int 71 [0x47])) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 7 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(insn 49 48 50 7 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 50 49 52 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":96:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 52 50 53 7 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [255]))) "../System/map.c":96:11 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 53 52 409 7 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":96:11 -1
     (nil))
(jump_insn 409 53 410 7 (set (pc)
        (label_ref 291)) "../System/map.c":96:11 284 {*arm_jump}
     (nil)
 -> 291)
(barrier 410 409 56)
(code_label 56 410 57 8 31 (nil) [1 uses])
(note 57 56 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 66 57 58 8 NOTE_INSN_DELETED)
(debug_insn 58 66 59 8 (debug_marker) "../System/map.c":98:5 -1
     (nil))
(insn 59 58 430 8 (set (reg:SI 10 r10 [orig:120 _9 ] [120])
        (ashiftrt:SI (reg/v:SI 4 r4 [orig:130 x ] [130])
            (const_int 1 [0x1]))) "../System/map.c":98:18 147 {*arm_shiftsi3}
     (nil))
(insn 430 59 65 8 (set (reg:SI 3 r3 [249])
        (mem/c:SI (reg/f:SI 13 sp) [7 %sfp+-16 S4 A32])) "../System/map.c":98:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 65 430 67 8 (set (reg:SI 2 r2 [orig:188 map[_8][_9] ] [188])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 3 r3 [249])
                    (reg:SI 10 r10 [orig:120 _9 ] [120])) [0 map[_8][_9]+0 S1 A8]))) "../System/map.c":98:7 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 67 65 68 8 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:188 map[_8][_9] ] [188])
                        (const_int 0 [0]))
                    (label_ref 79)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":98:7 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 79)
(note 68 67 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 74 68 69 9 NOTE_INSN_DELETED)
(debug_insn 69 74 70 9 (debug_marker) "../System/map.c":98:28 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 2 r2)
        (const_int 255 [0xff])) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 9 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))
(insn 72 71 73 9 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))
(call_insn 73 72 75 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":98:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 75 73 76 9 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [256]))) "../System/map.c":98:34 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 76 75 411 9 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":98:34 -1
     (nil))
(jump_insn 411 76 412 9 (set (pc)
        (label_ref 89)) 284 {*arm_jump}
     (nil)
 -> 89)
(barrier 412 411 79)
(code_label 79 412 80 10 33 (nil) [1 uses])
(note 80 79 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 86 80 81 10 NOTE_INSN_DELETED)
(debug_insn 81 86 82 10 (debug_marker) "../System/map.c":99:10 -1
     (nil))
(insn 82 81 83 10 (set (reg:SI 2 r2)
        (const_int 71 [0x47])) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 10 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(insn 84 83 85 10 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(call_insn 85 84 87 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":99:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 87 85 88 10 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [257]))) "../System/map.c":99:16 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 88 87 89 10 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":99:16 -1
     (nil))
(code_label 89 88 90 11 34 (nil) [1 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 91 90 92 11 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 92 91 431 11 (debug_marker) "../System/map.c":100:5 -1
     (nil))
(insn 431 92 93 11 (set (reg/v:SI 3 r3 [orig:126 dpx ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [7 %sfp+-12 S4 A32])) "../System/map.c":100:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 93 431 94 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 10 r10 [orig:120 _9 ] [120])
            (reg/v:SI 3 r3 [orig:126 dpx ] [126]))) "../System/map.c":100:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 94 93 95 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../System/map.c":100:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 107)
(note 95 94 432 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 432 95 96 12 (set (reg/v:SI 3 r3 [orig:127 dpy ] [127])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [7 %sfp+-8 S4 A32])) "../System/map.c":100:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 96 432 97 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 9 r9 [orig:119 _8 ] [119])
            (reg/v:SI 3 r3 [orig:127 dpy ] [127]))) "../System/map.c":100:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 97 96 98 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../System/map.c":100:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 107)
(note 98 97 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 104 98 99 13 NOTE_INSN_DELETED)
(debug_insn 99 104 100 13 (debug_marker) "../System/map.c":100:34 -1
     (nil))
(insn 100 99 101 13 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 13 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 102 101 103 13 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(call_insn 103 102 105 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":100:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 105 103 106 13 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [258]))) "../System/map.c":100:40 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 106 105 107 13 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":100:40 -1
     (nil))
(code_label 107 106 108 14 35 (nil) [2 uses])
(note 108 107 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 115 108 109 14 NOTE_INSN_DELETED)
(debug_insn 109 115 110 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 110 109 111 14 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 111 110 112 14 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 112 111 114 14 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 114 112 116 14 (set (reg:SI 2 r2 [orig:190 sp[0].life ] [190])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7 [250])
                    (const_int 24 [0x18])) [0 sp[0].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 24 [0x18]))) [0 sp[0].life+0 S1 A32]))
        (nil)))
(jump_insn 116 114 117 14 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 2 r2 [orig:190 sp[0].life ] [190])
                        (const_int 0 [0]))
                    (label_ref:SI 150)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 150)
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 118 117 129 15 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 129 118 120 15 (set (reg:SF 29 s13 [orig:195 sp[0].x ] [195])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (nil))))
(note 120 129 433 15 NOTE_INSN_DELETED)
(insn 433 120 121 15 (set (reg:SI 31 s15 [279])
        (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 121 433 122 15 (set (reg:SF 31 s15 [orig:134 _73 ] [134])
        (float:SF (reg:SI 31 s15 [279]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 122 121 123 15 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (reg:SF 31 s15 [orig:134 _73 ] [134])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 123 122 124 15 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 124 123 125 15 (var_location:SF D#18 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 125 124 126 15 (var_location:SF D#17 (div:SF (debug_expr:SF D#18)
        (reg:SF 31 s15 [orig:134 _73 ] [134]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 126 125 127 15 (var_location:SI spy (fix:SI (debug_expr:SF D#17))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 127 126 130 15 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 130 127 131 15 (set (reg:SF 30 s14 [194])
        (div:SF (reg:SF 29 s13 [orig:195 sp[0].x ] [195])
            (reg:SF 31 s15 [orig:134 _73 ] [134]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (nil))
(insn 131 130 434 15 (set (reg:SI 30 s14 [orig:196 spx ] [196])
        (fix:SI (fix:SF (reg:SF 30 s14 [194])))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (nil))
(insn 434 131 132 15 (set (reg:SI 3 r3 [orig:196 spx ] [196])
        (reg:SI 30 s14 [orig:196 spx ] [196])) "../System/map.c":105:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 132 434 133 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 10 r10 [orig:120 _9 ] [120])
            (reg:SI 3 r3 [orig:196 spx ] [196]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 133 132 134 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 150)
(note 134 133 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 134 137 16 (set (reg:SF 29 s13 [orig:199 sp[0].y ] [199])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])
            (nil))))
(insn 137 136 138 16 (set (reg:SF 30 s14 [198])
        (div:SF (reg:SF 29 s13 [orig:199 sp[0].y ] [199])
            (reg:SF 31 s15 [orig:134 _73 ] [134]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (nil))
(insn 138 137 435 16 (set (reg:SI 30 s14 [orig:200 spy ] [200])
        (fix:SI (fix:SF (reg:SF 30 s14 [198])))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (nil))
(insn 435 138 139 16 (set (reg:SI 3 r3 [orig:200 spy ] [200])
        (reg:SI 30 s14 [orig:200 spy ] [200])) "../System/map.c":105:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 139 435 140 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 9 r9 [orig:119 _8 ] [119])
            (reg:SI 3 r3 [orig:200 spy ] [200]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 140 139 141 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 150)
(note 141 140 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 147 141 142 17 NOTE_INSN_DELETED)
(debug_insn 142 147 143 17 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 143 142 144 17 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 144 143 145 17 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 145 144 146 17 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 146 145 148 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 148 146 149 17 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [259]))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 149 148 150 17 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":105:40 -1
     (nil))
(code_label 150 149 151 18 36 (nil) [3 uses])
(note 151 150 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 160 151 152 18 NOTE_INSN_DELETED)
(debug_insn 152 160 153 18 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 153 152 154 18 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 154 153 155 18 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 155 154 156 18 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 156 155 157 18 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 157 156 159 18 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 159 157 161 18 (set (reg:SI 2 r2 [orig:202 sp[1].life ] [202])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7 [250])
                    (const_int 468 [0x1d4])) [0 sp[1].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 468 [0x1d4]))) [0 sp[1].life+0 S1 A32]))
        (nil)))
(jump_insn 161 159 162 18 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 2 r2 [orig:202 sp[1].life ] [202])
                        (const_int 0 [0]))
                    (label_ref:SI 195)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 195)
(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 174 19 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 174 163 165 19 (set (reg:SF 29 s13 [orig:207 sp[1].x ] [207])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (nil))))
(note 165 174 436 19 NOTE_INSN_DELETED)
(insn 436 165 166 19 (set (reg:SI 31 s15 [282])
        (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 166 436 167 19 (set (reg:SF 31 s15 [orig:144 _91 ] [144])
        (float:SF (reg:SI 31 s15 [282]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 167 166 168 19 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (reg:SF 31 s15 [orig:144 _91 ] [144])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 168 167 169 19 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 169 168 170 19 (var_location:SF D#16 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 170 169 171 19 (var_location:SF D#15 (div:SF (debug_expr:SF D#16)
        (reg:SF 31 s15 [orig:144 _91 ] [144]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 171 170 172 19 (var_location:SI spy (fix:SI (debug_expr:SF D#15))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 172 171 175 19 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 175 172 176 19 (set (reg:SF 30 s14 [206])
        (div:SF (reg:SF 29 s13 [orig:207 sp[1].x ] [207])
            (reg:SF 31 s15 [orig:144 _91 ] [144]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (nil))
(insn 176 175 437 19 (set (reg:SI 30 s14 [orig:208 spx ] [208])
        (fix:SI (fix:SF (reg:SF 30 s14 [206])))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (nil))
(insn 437 176 177 19 (set (reg:SI 3 r3 [orig:208 spx ] [208])
        (reg:SI 30 s14 [orig:208 spx ] [208])) "../System/map.c":105:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 177 437 178 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 10 r10 [orig:120 _9 ] [120])
            (reg:SI 3 r3 [orig:208 spx ] [208]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 178 177 179 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 195)
(note 179 178 181 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 181 179 182 20 (set (reg:SF 29 s13 [orig:211 sp[1].y ] [211])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])
            (nil))))
(insn 182 181 183 20 (set (reg:SF 30 s14 [210])
        (div:SF (reg:SF 29 s13 [orig:211 sp[1].y ] [211])
            (reg:SF 31 s15 [orig:144 _91 ] [144]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (nil))
(insn 183 182 438 20 (set (reg:SI 30 s14 [orig:212 spy ] [212])
        (fix:SI (fix:SF (reg:SF 30 s14 [210])))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (nil))
(insn 438 183 184 20 (set (reg:SI 3 r3 [orig:212 spy ] [212])
        (reg:SI 30 s14 [orig:212 spy ] [212])) "../System/map.c":105:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 184 438 185 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 9 r9 [orig:119 _8 ] [119])
            (reg:SI 3 r3 [orig:212 spy ] [212]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 185 184 186 20 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 195)
(note 186 185 192 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 192 186 187 21 NOTE_INSN_DELETED)
(debug_insn 187 192 188 21 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 188 187 189 21 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 189 188 190 21 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 190 189 191 21 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 191 190 193 21 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 193 191 194 21 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [260]))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 194 193 195 21 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":105:40 -1
     (nil))
(code_label 195 194 196 22 37 (nil) [3 uses])
(note 196 195 205 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 205 196 197 22 NOTE_INSN_DELETED)
(debug_insn 197 205 198 22 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 198 197 199 22 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 199 198 200 22 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 200 199 201 22 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 201 200 202 22 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 202 201 204 22 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 204 202 206 22 (set (reg:SI 2 r2 [orig:214 sp[2].life ] [214])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7 [250])
                    (const_int 912 [0x390])) [0 sp[2].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 912 [0x390]))) [0 sp[2].life+0 S1 A32]))
        (nil)))
(jump_insn 206 204 207 22 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 2 r2 [orig:214 sp[2].life ] [214])
                        (const_int 0 [0]))
                    (label_ref:SI 240)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 240)
(note 207 206 208 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 208 207 219 23 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 219 208 210 23 (set (reg:SF 29 s13 [orig:219 sp[2].x ] [219])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (nil))))
(note 210 219 439 23 NOTE_INSN_DELETED)
(insn 439 210 211 23 (set (reg:SI 31 s15 [285])
        (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 211 439 212 23 (set (reg:SF 31 s15 [orig:154 _109 ] [154])
        (float:SF (reg:SI 31 s15 [285]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 212 211 213 23 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (reg:SF 31 s15 [orig:154 _109 ] [154])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 213 212 214 23 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 214 213 215 23 (var_location:SF D#14 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 215 214 216 23 (var_location:SF D#13 (div:SF (debug_expr:SF D#14)
        (reg:SF 31 s15 [orig:154 _109 ] [154]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 216 215 217 23 (var_location:SI spy (fix:SI (debug_expr:SF D#13))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 217 216 220 23 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 220 217 221 23 (set (reg:SF 30 s14 [218])
        (div:SF (reg:SF 29 s13 [orig:219 sp[2].x ] [219])
            (reg:SF 31 s15 [orig:154 _109 ] [154]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (nil))
(insn 221 220 440 23 (set (reg:SI 30 s14 [orig:220 spx ] [220])
        (fix:SI (fix:SF (reg:SF 30 s14 [218])))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (nil))
(insn 440 221 222 23 (set (reg:SI 3 r3 [orig:220 spx ] [220])
        (reg:SI 30 s14 [orig:220 spx ] [220])) "../System/map.c":105:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 222 440 223 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 10 r10 [orig:120 _9 ] [120])
            (reg:SI 3 r3 [orig:220 spx ] [220]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 223 222 224 23 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 240)
(note 224 223 226 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 226 224 227 24 (set (reg:SF 29 s13 [orig:223 sp[2].y ] [223])
        (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 7 r7 [250])
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])
            (nil))))
(insn 227 226 228 24 (set (reg:SF 30 s14 [222])
        (div:SF (reg:SF 29 s13 [orig:223 sp[2].y ] [223])
            (reg:SF 31 s15 [orig:154 _109 ] [154]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (nil))
(insn 228 227 441 24 (set (reg:SI 30 s14 [orig:224 spy ] [224])
        (fix:SI (fix:SF (reg:SF 30 s14 [222])))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (nil))
(insn 441 228 229 24 (set (reg:SI 3 r3 [orig:224 spy ] [224])
        (reg:SI 30 s14 [orig:224 spy ] [224])) "../System/map.c":105:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 229 441 230 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 9 r9 [orig:119 _8 ] [119])
            (reg:SI 3 r3 [orig:224 spy ] [224]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 230 229 231 24 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 240)
(note 231 230 237 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 237 231 232 25 NOTE_INSN_DELETED)
(debug_insn 232 237 233 25 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 233 232 234 25 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 234 233 235 25 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 235 234 236 25 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 236 235 238 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 238 236 239 25 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [261]))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 239 238 240 25 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":105:40 -1
     (nil))
(code_label 240 239 241 26 38 (nil) [3 uses])
(note 241 240 250 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 250 241 242 26 NOTE_INSN_DELETED)
(debug_insn 242 250 243 26 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 243 242 244 26 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 244 243 245 26 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 245 244 246 26 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 246 245 247 26 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 247 246 249 26 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 249 247 251 26 (set (reg:SI 2 r2 [orig:226 sp[3].life ] [226])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7 [250])
                    (const_int 1356 [0x54c])) [0 sp[3].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1356 [0x54c]))) [0 sp[3].life+0 S1 A32]))
        (nil)))
(jump_insn 251 249 252 26 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 2 r2 [orig:226 sp[3].life ] [226])
                        (const_int 0 [0]))
                    (label_ref:SI 291)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 291)
(note 252 251 253 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 253 252 267 27 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 267 253 255 27 (set (reg:SF 29 s13 [orig:234 sp[3].x ] [234])
        (mem/c:SF (reg/f:SI 11 fp [251]) [1 sp[3].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 11 fp [251]) [1 sp[3].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
            (nil))))
(note 255 267 442 27 NOTE_INSN_DELETED)
(insn 442 255 256 27 (set (reg:SI 31 s15 [288])
        (mem/c:SI (reg/f:SI 8 r8 [244]) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 256 442 257 27 (set (reg:SF 31 s15 [orig:164 _127 ] [164])
        (float:SF (reg:SI 31 s15 [288]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 257 256 258 27 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
            (reg:SF 31 s15 [orig:164 _127 ] [164])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 258 257 259 27 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 259 258 260 27 (var_location:SF D#12 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 260 259 261 27 (var_location:SF D#11 (div:SF (debug_expr:SF D#12)
        (reg:SF 31 s15 [orig:164 _127 ] [164]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 261 260 262 27 (var_location:SI spy (fix:SI (debug_expr:SF D#11))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 262 261 268 27 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 268 262 269 27 (set (reg:SF 30 s14 [233])
        (div:SF (reg:SF 29 s13 [orig:234 sp[3].x ] [234])
            (reg:SF 31 s15 [orig:164 _127 ] [164]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (nil))
(insn 269 268 443 27 (set (reg:SI 30 s14 [orig:235 spx ] [235])
        (fix:SI (fix:SF (reg:SF 30 s14 [233])))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (nil))
(insn 443 269 270 27 (set (reg:SI 3 r3 [orig:235 spx ] [235])
        (reg:SI 30 s14 [orig:235 spx ] [235])) "../System/map.c":105:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 270 443 271 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 10 r10 [orig:120 _9 ] [120])
            (reg:SI 3 r3 [orig:235 spx ] [235]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 271 270 272 27 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 291)
(note 272 271 444 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 444 272 277 28 (set (reg:SI 3 r3 [290])
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1344 [0x540])))) "../System/map.c":104:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 277 444 278 28 (set (reg:SF 29 s13 [orig:241 sp[3].y ] [241])
        (mem/c:SF (reg:SI 3 r3 [290]) [1 sp[3].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 254) [1 sp[3].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])
            (nil))))
(insn 278 277 279 28 (set (reg:SF 30 s14 [240])
        (div:SF (reg:SF 29 s13 [orig:241 sp[3].y ] [241])
            (reg:SF 31 s15 [orig:164 _127 ] [164]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (nil))
(insn 279 278 445 28 (set (reg:SI 30 s14 [orig:242 spy ] [242])
        (fix:SI (fix:SF (reg:SF 30 s14 [240])))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (nil))
(insn 445 279 280 28 (set (reg:SI 3 r3 [orig:242 spy ] [242])
        (reg:SI 30 s14 [orig:242 spy ] [242])) "../System/map.c":105:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 280 445 281 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 9 r9 [orig:119 _8 ] [119])
            (reg:SI 3 r3 [orig:242 spy ] [242]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 281 280 282 28 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 291)
(note 282 281 288 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 288 282 283 29 NOTE_INSN_DELETED)
(debug_insn 283 288 284 29 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 284 283 285 29 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 285 284 286 29 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 286 285 287 29 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 287 286 289 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 289 287 290 29 (set (reg/v:SI 0 r0 [orig:125 color ] [125])
        (zero_extend:SI (reg:HI 0 r0 [262]))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 290 289 291 29 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) "../System/map.c":105:40 -1
     (nil))
(code_label 291 290 292 30 32 (nil) [4 uses])
(note 292 291 293 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 293 292 294 30 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 294 293 295 30 (var_location:HI color (reg:HI 0 r0 [orig:125 color ] [125])) -1
     (nil))
(debug_insn 295 294 296 30 (debug_marker) "../System/map.c":109:4 -1
     (nil))
(debug_insn 296 295 306 30 (debug_marker) "../System/map.c":110:4 -1
     (nil))
(insn 306 296 297 30 (set (reg/v:SI 4 r4 [orig:130 x ] [130])
        (plus:SI (reg/v:SI 4 r4 [orig:130 x ] [130])
            (const_int 2 [0x2]))) "../System/map.c":93:30 7 {*arm_addsi3}
     (nil))
(insn 297 306 298 30 (set (reg:SI 3 r3 [orig:243 color ] [243])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 298 297 299 30 (set (zero_extract:SI (reg:SI 3 r3 [orig:243 color ] [243])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 0 r0 [orig:125 color ] [125])) 99 {insv_t2}
     (nil))
(insn 299 298 301 30 (set (zero_extract:SI (reg:SI 3 r3 [orig:243 color ] [243])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 0 r0 [orig:125 color ] [125])) 99 {insv_t2}
     (nil))
(insn 301 299 302 30 (set (mem:SI (reg:SI 5 r5 [orig:129 ivtmp.54 ] [129]) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.45_242]+0 S4 A16])
        (unspec:SI [
                (reg:SI 3 r3 [orig:243 color ] [243])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":109:27 158 {unaligned_storesi}
     (nil))
(debug_insn 302 301 303 30 (debug_marker) "../System/map.c":111:4 -1
     (nil))
(debug_insn 303 302 304 30 (debug_marker) "../System/map.c":112:4 -1
     (nil))
(insn 304 303 305 30 (set (mem:SI (plus:SI (reg:SI 5 r5 [orig:129 ivtmp.54 ] [129])
                (const_int 480 [0x1e0])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)_229]+0 S4 A16])
        (unspec:SI [
                (reg:SI 3 r3 [orig:243 color ] [243])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":111:31 158 {unaligned_storesi}
     (nil))
(debug_insn 305 304 307 30 (debug_marker) "../System/map.c":93:29 -1
     (nil))
(debug_insn 307 305 308 30 (var_location:SI x (reg/v:SI 4 r4 [orig:130 x ] [130])) -1
     (nil))
(debug_insn 308 307 309 30 (debug_marker) "../System/map.c":93:15 -1
     (nil))
(insn 309 308 311 30 (set (reg:SI 5 r5 [orig:129 ivtmp.54 ] [129])
        (plus:SI (reg:SI 5 r5 [orig:129 ivtmp.54 ] [129])
            (const_int 4 [0x4]))) "../System/map.c":93:3 7 {*arm_addsi3}
     (nil))
(insn 311 309 312 30 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:130 x ] [130])
            (const_int 100 [0x64]))) "../System/map.c":93:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 312 311 313 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 310)
            (pc))) "../System/map.c":93:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1052275756 (nil))
 -> 310)
(note 313 312 314 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 314 313 315 31 (debug_marker) "../System/map.c":92:29 -1
     (nil))
(insn 315 314 316 31 (set (reg/v:SI 6 r6 [orig:128 y ] [128])
        (plus:SI (reg/v:SI 6 r6 [orig:128 y ] [128])
            (const_int 2 [0x2]))) "../System/map.c":92:30 7 {*arm_addsi3}
     (nil))
(debug_insn 316 315 317 31 (var_location:SI y (reg/v:SI 6 r6 [orig:128 y ] [128])) -1
     (nil))
(debug_insn 317 316 447 31 (debug_marker) "../System/map.c":92:14 -1
     (nil))
(insn 447 317 318 31 (set (reg:SI 3 r3 [orig:171 ivtmp.67 ] [171])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [7 %sfp+-4 S4 A32])) "../System/map.c":92:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 318 447 446 31 (set (reg:SI 3 r3 [orig:171 ivtmp.67 ] [171])
        (plus:SI (reg:SI 3 r3 [orig:171 ivtmp.67 ] [171])
            (const_int 960 [0x3c0]))) "../System/map.c":92:2 7 {*arm_addsi3}
     (nil))
(insn 446 318 319 31 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [7 %sfp+-4 S4 A32])
        (reg:SI 3 r3 [orig:171 ivtmp.67 ] [171])) "../System/map.c":92:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 319 446 320 31 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:128 y ] [128])
            (const_int 50 [0x32]))) "../System/map.c":92:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 320 319 321 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 331)
            (pc))) "../System/map.c":92:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 42994324 (nil))
 -> 331)
(code_label 321 320 322 32 29 (nil) [1 uses])
(note 322 321 62 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(note 62 322 323 32 NOTE_INSN_DELETED)
(debug_insn 323 62 324 32 (var_location:SI y (reg/v:SI 6 r6 [orig:128 y ] [128])) -1
     (nil))
(debug_insn 324 323 325 32 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 325 324 326 32 (debug_marker) "../System/map.c":93:15 -1
     (nil))
(insn 326 325 61 32 (set (reg:SI 9 r9 [orig:119 _8 ] [119])
        (ashiftrt:SI (reg/v:SI 6 r6 [orig:128 y ] [128])
            (const_int 1 [0x1]))) "../System/map.c":98:13 147 {*arm_shiftsi3}
     (nil))
(insn 61 326 3 32 (set (reg:SI 10 r10 [247])
        (const_int 50 [0x32])) "../System/map.c":98:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 3 61 4 32 (set (reg:SI 5 r5 [orig:129 ivtmp.54 ] [129])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [7 %sfp+-4 S4 A32])) "../System/map.c":98:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 450 32 (set (reg/v:SI 4 r4 [orig:130 x ] [130])
        (const_int 0 [0])) "../System/map.c":93:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 450 4 63 32 (set (reg:SI 3 r3 [296])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)) "../System/map.c":98:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 63 450 449 32 (set (reg:SI 3 r3 [249])
        (plus:SI (mult:SI (reg:SI 10 r10 [247])
                (reg:SI 9 r9 [orig:119 _8 ] [119]))
            (reg:SI 3 r3 [296]))) "../System/map.c":98:16 57 {*mla}
     (nil))
(insn 449 63 413 32 (set (mem/c:SI (reg/f:SI 13 sp) [7 %sfp+-16 S4 A32])
        (reg:SI 3 r3 [249])) "../System/map.c":98:16 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 413 449 414 32 (set (pc)
        (label_ref 310)) 284 {*arm_jump}
     (nil)
 -> 310)
(barrier 414 413 331)
(code_label 331 414 332 33 28 (nil) [1 uses])
(note 332 331 415 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(note 415 332 422 NOTE_INSN_DELETED)
(note 422 415 0 NOTE_INSN_DELETED)
