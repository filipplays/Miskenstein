
;; Function generateMap (generateMap, funcdef_no=4, decl_uid=5634, cgraph_uid=5, symbol_order=4)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 35 count 48 (  1.8)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 3
;;  header 20, multiple latches: 19 24
;;  depth 1, outer 0
;;  nodes: 20 19 24 18 17 15 14 13 16 21
;;
;; Loop 4
;;  header 15, latch 13
;;  depth 2, outer 3
;;  nodes: 15 13 17 16
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 3, multiple latches: 6 4 5 8
;;  depth 1, outer 0
;;  nodes: 3 6 4 5 8 7
;; 2 succs { 3 }
;; 3 succs { 4 23 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 10 }
;; 8 succs { 3 }
;; 9 succs { 20 }
;; 10 succs { 11 }
;; 11 succs { 11 12 }
;; 12 succs { 9 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 13 }
;; 17 succs { 13 18 }
;; 18 succs { 24 }
;; 19 succs { 20 22 }
;; 20 succs { 21 14 }
;; 21 succs { 19 }
;; 22 succs { 25 }
;; 23 succs { 25 }
;; 24 succs { 20 }
;; 25 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 128 uninteresting (no unique first use)
Reg 184: def dominates all uses has unique first use
Reg 131: def dominates all uses has unique first use
Reg 185: def dominates all uses has unique first use
Reg 187 uninteresting
Reg 113 uninteresting
Reg 148 uninteresting
Ignoring reg 129, has equiv memory
Reg 179 uninteresting
Reg 118 uninteresting
Reg 178 uninteresting
Reg 151 uninteresting
Reg 154 uninteresting
Reg 156: def dominates all uses has unique first use
Reg 181: def dominates all uses has unique first use
Reg 139: def dominates all uses has unique first use
Reg 167: local to bb 11 def dominates all uses has unique first use
Reg 168 uninteresting
Reg 171 uninteresting
Reg 174: local to bb 22 def dominates all uses has unique first use
Reg 176 uninteresting
Reg 131 not local to one basic block
Reg 139 not local to one basic block
Reg 156 not local to one basic block
Found def insn 160 for 167 to be not moveable
Ignoring reg 174 with equiv init insn
Reg 181 not local to one basic block
Reg 184 not local to one basic block
Reg 185 not local to one basic block
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 3
;;  header 20, multiple latches: 19 24
;;  depth 1, outer 0
;;  nodes: 20 19 24 18 17 15 14 13 16 21
;;
;; Loop 4
;;  header 15, latch 13
;;  depth 2, outer 3
;;  nodes: 15 13 17 16
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 3, multiple latches: 6 4 5 8
;;  depth 1, outer 0
;;  nodes: 3 6 4 5 8 7
;; 2 succs { 3 }
;; 3 succs { 4 23 }
;; 4 succs { 3 5 }
;; 5 succs { 3 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 10 }
;; 8 succs { 3 }
;; 9 succs { 20 }
;; 10 succs { 11 }
;; 11 succs { 11 12 }
;; 12 succs { 9 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 13 }
;; 17 succs { 13 18 }
;; 18 succs { 24 }
;; 19 succs { 20 22 }
;; 20 succs { 21 14 }
;; 21 succs { 19 }
;; 22 succs { 25 }
;; 23 succs { 25 }
;; 24 succs { 20 }
;; 25 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 129: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 151 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 245 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 247 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 196 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 71 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 83 (nil))
init_insns for 185: (insn_list:REG_DEP_TRUE 113 (nil))

Pass 1 for finding pseudo/allocno costs

    r187: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r184: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r184,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r183,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r174: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred LO_REGS, alternative NO_REGS, allocno LO_REGS
    r128: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a35 (r128,l1) best ALL_REGS, allocno ALL_REGS
    a28 (r128,l2) best ALL_REGS, allocno ALL_REGS
    a24 (r128,l4) best ALL_REGS, allocno ALL_REGS
    a18 (r128,l3) best ALL_REGS, allocno ALL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r126: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r126,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r126,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r121,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r128,l0) costs: GENERAL_REGS:6,6 VFP_D0_D7_REGS:90,90 VFP_LO_REGS:90,90 ALL_REGS:45,45 MEM:60,60
  a1(r174,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:75,75 VFP_LO_REGS:75,75 ALL_REGS:75,75 MEM:50,50
  a2(r176,l0) costs: GENERAL_REGS:0,0 MEM:50,50
  a3(r139,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,315 VFP_LO_REGS:15,315 ALL_REGS:15,315 MEM:10,210
  a4(r121,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:30,2730 VFP_LO_REGS:30,2730 ALL_REGS:30,2730 MEM:20,1820
  a5(r132,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,2415 VFP_LO_REGS:15,2415 ALL_REGS:15,2415 MEM:10,1610
  a6(r131,l0) costs: GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,105 VFP_LO_REGS:45,105 ALL_REGS:30,90 MEM:30,70
  a7(r181,l0) costs: GENERAL_REGS:0,0 MEM:10,20
  a8(r124,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,1020 VFP_LO_REGS:15,1020 ALL_REGS:15,1020 MEM:10,680
  a9(r126,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,659 VFP_LO_REGS:15,659 ALL_REGS:15,659 MEM:10,440
  a10(r185,l0) costs: GENERAL_REGS:0,0 MEM:10,20
  a11(r135,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,75 VFP_LO_REGS:30,75 ALL_REGS:30,75 MEM:20,50
  a12(r137,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,225 VFP_LO_REGS:15,225 ALL_REGS:15,225 MEM:10,150
  a13(r136,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,165 VFP_LO_REGS:30,165 ALL_REGS:30,165 MEM:20,110
  a14(r184,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,135 VFP_LO_REGS:15,135 ALL_REGS:15,135 MEM:10,90
  a15(r183,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,405 VFP_LO_REGS:15,405 ALL_REGS:15,405 MEM:10,270
  a16(r124,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1005,1005 VFP_LO_REGS:1005,1005 ALL_REGS:1005,1005 MEM:670,670
  a17(r126,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:630,644 VFP_LO_REGS:630,644 ALL_REGS:630,644 MEM:420,430
  a18(r128,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a19(r181,l3) costs: GENERAL_REGS:0,0 MEM:0,10
  a20(r127,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:255,25379 VFP_LO_REGS:255,25379 ALL_REGS:255,25379 MEM:170,16920
  a21(r124,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a22(r126,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:14,14 VFP_LO_REGS:14,14 ALL_REGS:14,14 MEM:10,10
  a23(r127,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:25124,25124 VFP_LO_REGS:25124,25124 ALL_REGS:25124,25124 MEM:16750,16750
  a24(r128,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a25(r181,l4) costs: GENERAL_REGS:0,0 MEM:10,10
  a26(r171,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:12810,12810 VFP_LO_REGS:12810,12810 ALL_REGS:12810,12810 MEM:8540,8540
  a27(r121,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:2700,2700 MEM:1800,1800
  a28(r128,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a29(r132,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2400,2400 VFP_LO_REGS:2400,2400 ALL_REGS:2400,2400 MEM:1600,1600
  a30(r139,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a31(r165,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1200,1200 VFP_LO_REGS:1200,1200 ALL_REGS:1200,1200 MEM:800,800
  a32(r166,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1200,1200 VFP_LO_REGS:1200,1200 ALL_REGS:1200,1200 MEM:800,800
  a33(r167,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:600,600 VFP_LO_REGS:600,600 ALL_REGS:600,600 MEM:400,400
  a34(r168,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:600,600 VFP_LO_REGS:600,600 ALL_REGS:600,600 MEM:400,400
  a35(r128,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a36(r131,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:60,60 VFP_LO_REGS:60,60 ALL_REGS:60,60 MEM:40,40
  a37(r135,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:45,45 VFP_LO_REGS:45,45 ALL_REGS:45,45 MEM:30,30
  a38(r136,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:135,135 VFP_LO_REGS:135,135 ALL_REGS:135,135 MEM:90,90
  a39(r137,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:210,210 VFP_LO_REGS:210,210 ALL_REGS:210,210 MEM:140,140
  a40(r183,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:390,390 VFP_LO_REGS:390,390 ALL_REGS:390,390 MEM:260,260
  a41(r184,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:120,120 VFP_LO_REGS:120,120 ALL_REGS:120,120 MEM:80,80
  a42(r185,l1) costs: GENERAL_REGS:0,0 MEM:10,10
  a43(r178,l1) costs: GENERAL_REGS:0,0 MEM:250,250
  a44(r179,l1) costs: GENERAL_REGS:0,0 MEM:320,320
  a45(r156,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:74,74 VFP_LO_REGS:74,74 ALL_REGS:74,74 MEM:50,50
  a46(r154,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:120,120 VFP_LO_REGS:120,120 ALL_REGS:120,120 MEM:80,80
  a47(r151,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:240,240 VFP_LO_REGS:240,240 ALL_REGS:240,240 MEM:160,160
  a48(r118,l1) costs: LO_REGS:0,0 HI_REGS:16,16 CALLER_SAVE_REGS:16,16 EVEN_REG:16,16 GENERAL_REGS:16,16 VFP_D0_D7_REGS:240,240 VFP_LO_REGS:240,240 ALL_REGS:240,240 MEM:160,160
  a49(r130,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1350,1350 VFP_LO_REGS:1350,1350 ALL_REGS:1350,1350 MEM:900,900
  a50(r129,l1) costs: LO_REGS:0,0 HI_REGS:26,26 CALLER_SAVE_REGS:26,26 EVEN_REG:26,26 GENERAL_REGS:26,26 VFP_D0_D7_REGS:390,390 VFP_LO_REGS:390,390 ALL_REGS:390,390 MEM:0,0
  a51(r148,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:420,420 VFP_LO_REGS:420,420 ALL_REGS:420,420 MEM:280,280
  a52(r147,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:420,420 VFP_LO_REGS:420,420 ALL_REGS:420,420 MEM:280,280
  a53(r113,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:630,630 VFP_LO_REGS:630,630 ALL_REGS:630,630 MEM:420,420
  a54(r187,l1) costs: GENERAL_REGS:28,28 VFP_D0_D7_REGS:630,630 VFP_LO_REGS:630,630 ALL_REGS:420,420 MEM:420,420

   Insn 354(l0): point = 1
   Insn 266(l0): point = 3
   Insn 265(l0): point = 5
   Insn 264(l0): point = 7
   Insn 352(l0): point = 10
   Insn 258(l0): point = 12
   Insn 257(l0): point = 14
   Insn 256(l0): point = 16
   Insn 252(l0): point = 18
   Insn 250(l0): point = 20
   Insn 249(l0): point = 22
   Insn 248(l0): point = 24
   Insn 247(l0): point = 26
   Insn 245(l0): point = 28
   Insn 151(l0): point = 31
   Insn 149(l0): point = 33
   Insn 148(l0): point = 35
   Insn 334(l0): point = 38
   Insn 196(l0): point = 40
   Insn 7(l0): point = 42
   Insn 143(l0): point = 44
   Insn 338(l0): point = 47
   Insn 113(l0): point = 50
   Insn 5(l0): point = 52
   Insn 24(l0): point = 54
   Insn 83(l0): point = 56
   Insn 71(l0): point = 58
   Insn 4(l0): point = 60
   Insn 3(l0): point = 62
   Insn 42(l0): point = 64
   Insn 40(l0): point = 66
   Insn 39(l0): point = 68
   Insn 41(l0): point = 70
   Insn 33(l0): point = 72
   Insn 32(l0): point = 74
   Insn 31(l0): point = 76
   Insn 30(l0): point = 78
   Insn 21(l0): point = 80
   Insn 11(l0): point = 82
   Insn 6(l3): point = 85
   Insn 238(l3): point = 88
   Insn 237(l3): point = 90
   Insn 225(l3): point = 93
   Insn 224(l3): point = 95
   Insn 223(l3): point = 97
   Insn 222(l3): point = 99
   Insn 350(l3): point = 102
   Insn 356(l3): point = 105
   Insn 278(l3): point = 107
   Insn 277(l3): point = 109
   Insn 346(l3): point = 112
   Insn 340(l4): point = 115
   Insn 185(l4): point = 117
   Insn 212(l4): point = 120
   Insn 211(l4): point = 122
   Insn 342(l4): point = 125
   Insn 198(l4): point = 127
   Insn 193(l4): point = 130
   Insn 192(l4): point = 132
   Insn 189(l4): point = 134
   Insn 178(l2): point = 137
   Insn 177(l2): point = 139
   Insn 175(l2): point = 141
   Insn 174(l2): point = 143
   Insn 168(l2): point = 145
   Insn 169(l2): point = 147
   Insn 167(l2): point = 149
   Insn 166(l2): point = 151
   Insn 164(l2): point = 153
   Insn 163(l2): point = 155
   Insn 162(l2): point = 157
   Insn 165(l2): point = 159
   Insn 161(l2): point = 161
   Insn 160(l2): point = 163
   Insn 159(l2): point = 165
   Insn 158(l2): point = 167
   Insn 69(l1): point = 170
   Insn 68(l1): point = 172
   Insn 65(l1): point = 174
   Insn 64(l1): point = 178
   Insn 63(l1): point = 180
   Insn 62(l1): point = 182
   Insn 59(l1): point = 184
   Insn 331(l1): point = 186
   Insn 58(l1): point = 188
   Insn 95(l1): point = 191
   Insn 94(l1): point = 193
   Insn 111(l1): point = 195
   Insn 108(l1): point = 197
   Insn 81(l1): point = 200
   Insn 80(l1): point = 202
   Insn 77(l1): point = 204
   Insn 72(l1): point = 206
   Insn 90(l1): point = 209
   Insn 89(l1): point = 211
   Insn 86(l1): point = 213
   Insn 85(l1): point = 215
   Insn 84(l1): point = 217
   Insn 332(l1): point = 220
   Insn 133(l1): point = 222
   Insn 130(l1): point = 224
   Insn 126(l1): point = 227
   Insn 125(l1): point = 229
   Insn 120(l1): point = 231
   Insn 115(l1): point = 233
 a0(r128): [13..82] [4..9]
 a1(r174): [19..28]
 a2(r176): [19..26]
 a3(r139): [31..31]
 a4(r121): [31..35]
 a5(r132): [31..33]
 a6(r131): [50..54] [34..37]
 a7(r181): [38..40]
 a8(r124): [38..42]
 a9(r126): [38..44]
 a10(r185): [50..50]
 a11(r135): [50..62]
 a12(r137): [50..52]
 a13(r136): [50..60]
 a14(r184): [50..56]
 a15(r183): [50..58]
 a16(r124): [85..114]
 a17(r126): [85..114]
 a18(r128): [85..114]
 a19(r181): [85..114]
 a20(r127): [85..85]
 a21(r124): [115..136]
 a22(r126): [115..136]
 a23(r127): [115..136]
 a24(r128): [115..136]
 a25(r181): [115..136]
 a26(r171): [133..134]
 a27(r121): [137..169]
 a28(r128): [137..169]
 a29(r132): [137..169]
 a30(r139): [137..169]
 a31(r165): [158..167] [146..151]
 a32(r166): [156..165] [148..149]
 a33(r167): [154..163]
 a34(r168): [160..161]
 a35(r128): [170..235]
 a36(r131): [170..235]
 a37(r135): [170..235]
 a38(r136): [170..222]
 a39(r137): [170..224]
 a40(r183): [170..235]
 a41(r184): [170..235]
 a42(r185): [170..235]
 a43(r178): [223..235] [209..215] [191..199]
 a44(r179): [225..235] [209..219] [191..204]
 a45(r156): [234..235] [191..195]
 a46(r154): [196..197]
 a47(r151): [212..213]
 a48(r118): [216..217]
 a49(r130): [218..219] [200..208] [170..180]
 a50(r129): [205..206]
 a51(r148): [175..178]
 a52(r147): [179..182]
 a53(r113): [181..184]
 a54(r187): [185..186]
 Rebuilding regno allocno list for 187
      Moving ranges of a42r185 to a10r185:  [170..235]
      Moving ranges of a41r184 to a14r184:  [170..235]
      Moving ranges of a40r183 to a15r183:  [170..235]
      Moving ranges of a25r181 to a19r181:  [115..136]
      Moving ranges of a19r181 to a7r181:  [85..136]
 Rebuilding regno allocno list for 179
 Rebuilding regno allocno list for 178
 Rebuilding regno allocno list for 171
 Rebuilding regno allocno list for 168
 Rebuilding regno allocno list for 167
 Rebuilding regno allocno list for 166
 Rebuilding regno allocno list for 165
 Rebuilding regno allocno list for 156
 Rebuilding regno allocno list for 154
 Rebuilding regno allocno list for 151
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 147
      Moving ranges of a30r139 to a3r139:  [137..169]
      Moving ranges of a39r137 to a12r137:  [170..224]
      Moving ranges of a38r136 to a13r136:  [170..222]
      Moving ranges of a37r135 to a11r135:  [170..235]
      Moving ranges of a29r132 to a5r132:  [137..169]
      Moving ranges of a36r131 to a6r131:  [170..235]
 Rebuilding regno allocno list for 130
 Rebuilding regno allocno list for 129
      Moving ranges of a35r128 to a0r128:  [170..235]
      Moving ranges of a28r128 to a0r128:  [137..169]
      Moving ranges of a24r128 to a18r128:  [115..136]
      Moving ranges of a18r128 to a0r128:  [85..136]
      Moving ranges of a23r127 to a20r127:  [115..136]
 Rebuilding regno allocno list for 127
      Moving ranges of a22r126 to a17r126:  [115..136]
      Moving ranges of a17r126 to a9r126:  [85..136]
      Moving ranges of a21r124 to a16r124:  [115..136]
      Moving ranges of a16r124 to a8r124:  [85..136]
      Moving ranges of a27r121 to a4r121:  [137..169]
 Rebuilding regno allocno list for 118
 Rebuilding regno allocno list for 113
Compressing live ranges: from 236 to 45 - 19%
Ranges after the compression:
 a0(r128): [0..44]
 a1(r174): [2..3]
 a2(r176): [2..3]
 a3(r139): [15..18] [4..4]
 a4(r121): [15..18] [4..7]
 a5(r132): [15..18] [4..5]
 a6(r131): [19..44] [10..11] [6..7]
 a7(r181): [12..14] [8..9]
 a8(r124): [12..14] [8..9]
 a9(r126): [12..14] [8..9]
 a10(r185): [19..44] [10..10]
 a11(r135): [19..44] [10..11]
 a12(r137): [19..42] [10..11]
 a13(r136): [19..40] [10..11]
 a14(r184): [19..44] [10..11]
 a15(r183): [19..44] [10..11]
 a20(r127): [12..14]
 a26(r171): [13..14]
 a31(r165): [15..18]
 a32(r166): [15..18]
 a33(r167): [17..18]
 a34(r168): [17..18]
 a43(r178): [41..44] [35..36] [27..30]
 a44(r179): [43..44] [35..40] [27..32]
 a45(r156): [43..44] [27..28]
 a46(r154): [29..30]
 a47(r151): [35..36]
 a48(r118): [37..38]
 a49(r130): [39..40] [31..34] [19..22]
 a50(r129): [33..34]
 a51(r148): [19..20]
 a52(r147): [21..24]
 a53(r113): [23..24]
 a54(r187): [25..26]
+++Allocating 272 bytes for conflict table (uncompressed size 440)
;; a0(r128,l0) conflicts: a1(r174,l0) a2(r176,l0) a3(r139,l0) a4(r121,l0) a5(r132,l0) a6(r131,l0) a7(r181,l0) a8(r124,l0) a9(r126,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a20(r127,l0) a26(r171,l0) a31(r165,l0) a32(r166,l0) a33(r167,l0) a34(r168,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a1(r174,l0) conflicts: a0(r128,l0) a2(r176,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r176,l0) conflicts: a0(r128,l0) a1(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r139,l0) conflicts: a0(r128,l0) a4(r121,l0) a5(r132,l0) a31(r165,l0) a32(r166,l0) a33(r167,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r121,l0) conflicts: a0(r128,l0) a3(r139,l0) a5(r132,l0) a6(r131,l0) a31(r165,l0) a32(r166,l0) a33(r167,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r132,l0) conflicts: a0(r128,l0) a3(r139,l0) a4(r121,l0) a31(r165,l0) a32(r166,l0) a33(r167,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r131,l0) conflicts: a0(r128,l0) a4(r121,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a7(r181,l0) conflicts: a0(r128,l0) a8(r124,l0) a9(r126,l0) a20(r127,l0) a26(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r124,l0) conflicts: a0(r128,l0) a7(r181,l0) a9(r126,l0) a20(r127,l0) a26(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r126,l0) conflicts: a0(r128,l0) a7(r181,l0) a8(r124,l0) a20(r127,l0) a26(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r185,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a11(r135,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a12(r137,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a13(r136,l0) conflicts: a0(r128,l0) a6(r131,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a14(r184,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a15(r183,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a15(r183,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a51(r148,l0) a49(r130,l0) a52(r147,l0) a53(r113,l0) a54(r187,l0) a43(r178,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a50(r129,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a20(r127,l0) conflicts: a0(r128,l0) a7(r181,l0) a8(r124,l0) a9(r126,l0) a26(r171,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r171,l0) conflicts: a0(r128,l0) a7(r181,l0) a8(r124,l0) a9(r126,l0) a20(r127,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r165,l0) conflicts: a0(r128,l0) a3(r139,l0) a4(r121,l0) a5(r132,l0) a32(r166,l0) a33(r167,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r166,l0) conflicts: a0(r128,l0) a3(r139,l0) a4(r121,l0) a5(r132,l0) a31(r165,l0) a33(r167,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r167,l0) conflicts: a0(r128,l0) a3(r139,l0) a4(r121,l0) a5(r132,l0) a31(r165,l0) a32(r166,l0) a34(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r168,l0) conflicts: a0(r128,l0) a3(r139,l0) a4(r121,l0) a5(r132,l0) a31(r165,l0) a32(r166,l0) a33(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r178,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a44(r179,l0) a45(r156,l0) a46(r154,l0) a47(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r179,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a49(r130,l0) a43(r178,l0) a45(r156,l0) a46(r154,l0) a47(r151,l0) a48(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r156,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a43(r178,l0) a44(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r154,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a43(r178,l0) a44(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r151,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a43(r178,l0) a44(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r118,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a44(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r130,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a51(r148,l0) a52(r147,l0) a44(r179,l0) a50(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r129,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a49(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r148,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a49(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r147,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a49(r130,l0) a53(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r113,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0) a52(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r187,l0) conflicts: a0(r128,l0) a6(r131,l0) a13(r136,l0) a12(r137,l0) a10(r185,l0) a11(r135,l0) a14(r184,l0) a15(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a5(r132)<->a6(r131)@1:move
  cp1:a45(r156)<->a46(r154)@1:shuffle
  cp2:a43(r178)<->a48(r118)@1:shuffle
  cp3:a44(r179)<->a50(r129)@1:shuffle
  cp4:a53(r113)<->a54(r187)@14:move
  cp5:a49(r130)<->a53(r113)@1:shuffle
  cp6:a51(r148)<->a52(r147)@1:shuffle
  pref0:a54(r187)<-hr0@28
  regions=5, blocks=26, points=45
    allocnos=55 (big 0), copies=7, conflicts=0, ranges=55

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 25 23 22 24 21 20 19 18 14 17 16 15 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r128 1r174 2r176 3r139 4r121 5r132 6r131 7r181 8r124 9r126 10r185 11r135 12r137 13r136 14r184 15r183 20r127 26r171 31r165 32r166 33r167 34r168 43r178 44r179 45r156 46r154 47r151 48r118 49r130 50r129 51r148 52r147 53r113 54r187
    modified regnos: 113 118 121 124 126 127 128 129 130 131 132 135 136 137 139 147 148 151 154 156 165 166 167 168 171 174 176 178 179 181 183 184 185 187
    border:
    Pressure: GENERAL_REGS=11
    Hard reg set forest:
      0:( 0-6 8-12 14 16-47)@0
        1:( 0-6 8-12 14)@72904
          2:( 4-6 8-11)@1624
      Allocno a0r128 of ALL_REGS(46) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0-2 7 12-15 48-106)
      Allocno a1r174 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a2r176 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a3r139 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a4r121 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a5r132 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a6r131 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a7r181 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a8r124 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a9r126 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a10r185 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a11r135 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a12r137 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a13r136 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a14r184 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a15r183 of GENERAL_REGS(14) has 7 avail. regs  4-6 8-11, node:  4-6 8-11 (confl regs =  0 7 12-106)
      Allocno a20r127 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a26r171 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a31r165 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a32r166 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a33r167 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a34r168 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a43r178 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a44r179 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a45r156 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a46r154 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a47r151 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a48r118 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a49r130 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a50r129 of LO_REGS(8) has 7 avail. regs  0-6, ^node:  0-6 8-12 14 (confl regs =  7-106)
      Allocno a51r148 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a52r147 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a53r113 of GENERAL_REGS(14) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15-106)
      Allocno a54r187 of ALL_REGS(46) has 13 avail. regs  0-6 8-12 14, node:  0-6 8-12 14 (confl regs =  7 13 15 48-106)
      Forming thread by copy 4:a53r113-a54r187 (freq=14):
        Result (freq=84): a53r113(56) a54r187(28)
      Forming thread by copy 0:a5r132-a6r131 (freq=1):
        Result (freq=167): a5r132(161) a6r131(6)
      Forming thread by copy 1:a45r156-a46r154 (freq=1):
        Result (freq=13): a45r156(5) a46r154(8)
      Forming thread by copy 2:a43r178-a48r118 (freq=1):
        Result (freq=41): a43r178(25) a48r118(16)
      Forming thread by copy 5:a49r130-a53r113 (freq=1):
        Result (freq=161): a49r130(77) a53r113(56) a54r187(28)
      Forming thread by copy 6:a51r148-a52r147 (freq=1):
        Result (freq=56): a51r148(28) a52r147(28)
      Pushing a7(r181,l0)(cost 0)
      Pushing a2(r176,l0)(cost 0)
      Pushing a1(r174,l0)(cost 0)
      Pushing a45(r156,l0)(cost 0)
      Forming thread by copy 3:a44r179-a50r129 (freq=1):
        Result (freq=58): a44r179(32) a50r129(26)
        Making a44(r179,l0) colorable
      Pushing a46(r154,l0)(cost 0)
      Pushing a47(r151,l0)(cost 0)
      Pushing a3(r139,l0)(cost 0)
      Pushing a50(r129,l0)(cost 0)
      Pushing a34(r168,l0)(cost 0)
      Pushing a33(r167,l0)(cost 0)
      Pushing a48(r118,l0)(cost 0)
      Pushing a43(r178,l0)(cost 0)
      Pushing a9(r126,l0)(cost 0)
      Pushing a52(r147,l0)(cost 0)
      Pushing a51(r148,l0)(cost 0)
      Pushing a44(r179,l0)(cost 320)
      Pushing a8(r124,l0)(cost 0)
      Pushing a32(r166,l0)(cost 0)
      Pushing a31(r165,l0)(cost 0)
      Pushing a54(r187,l0)(cost 0)
      Pushing a53(r113,l0)(cost 0)
      Pushing a49(r130,l0)(cost 0)
      Pushing a5(r132,l0)(cost 0)
      Pushing a4(r121,l0)(cost 0)
      Pushing a26(r171,l0)(cost 0)
      Pushing a20(r127,l0)(cost 0)
      Pushing a10(r185,l0)(potential spill: pri=20, cost=20)
        Making a0(r128,l0) colorable
        Making a6(r131,l0) colorable
        Making a13(r136,l0) colorable
        Making a12(r137,l0) colorable
        Making a11(r135,l0) colorable
        Making a14(r184,l0) colorable
        Making a15(r183,l0) colorable
      Pushing a0(r128,l0)(cost 54)
      Pushing a11(r135,l0)(cost 50)
      Pushing a14(r184,l0)(cost 90)
      Pushing a13(r136,l0)(cost 110)
      Pushing a15(r183,l0)(cost 270)
      Pushing a12(r137,l0)(cost 150)
      Pushing a6(r131,l0)(cost 68)
      Popping a6(r131,l0)  -- assign reg 4
      Popping a12(r137,l0)  -- assign reg 5
      Popping a15(r183,l0)  -- assign reg 6
      Popping a13(r136,l0)  -- assign reg 8
      Popping a14(r184,l0)  -- assign reg 9
      Popping a11(r135,l0)  -- assign reg 10
      Popping a0(r128,l0)  -- assign reg 11
      Popping a10(r185,l0)  -- spill
      Popping a20(r127,l0)  -- assign reg 3
      Popping a26(r171,l0)  -- assign reg 2
      Popping a4(r121,l0)  -- assign reg 3
      Popping a5(r132,l0)  -- assign reg 4
      Popping a49(r130,l0)  -- assign reg 3
      Popping a53(r113,l0)  -- assign reg 0
      Popping a54(r187,l0)  -- assign reg 0
      Popping a31(r165,l0)  -- assign reg 2
      Popping a32(r166,l0)  -- assign reg 1
      Popping a8(r124,l0)  -- assign reg 1
      Popping a44(r179,l0)  -- assign reg 2
      Popping a51(r148,l0)  -- assign reg 2
      Popping a52(r147,l0)  -- assign reg 2
      Popping a9(r126,l0)  -- assign reg 0
      Popping a43(r178,l0)  -- assign reg 3
      Popping a48(r118,l0)  -- assign reg 3
      Popping a33(r167,l0)  -- assign reg 0
      Popping a34(r168,l0)  -- assign reg 5
      Popping a50(r129,l0)  -- assign reg 2
      Popping a3(r139,l0)  -- assign reg 6
      Popping a47(r151,l0)  -- assign reg 1
      Popping a46(r154,l0)  -- assign reg 1
      Popping a45(r156,l0)  -- assign reg 1
      Popping a1(r174,l0)  -- assign reg 3
      Popping a2(r176,l0)  -- assign reg 2
      Popping a7(r181,l0)  -- assign reg 4
Disposition:
   53:r113 l0     0   48:r118 l0     3    4:r121 l0     3    8:r124 l0     1
    9:r126 l0     0   20:r127 l0     3    0:r128 l0    11   50:r129 l0     2
   49:r130 l0     3    6:r131 l0     4    5:r132 l0     4   11:r135 l0    10
   13:r136 l0     8   12:r137 l0     5    3:r139 l0     6   52:r147 l0     2
   51:r148 l0     2   47:r151 l0     1   46:r154 l0     1   45:r156 l0     1
   31:r165 l0     2   32:r166 l0     1   33:r167 l0     0   34:r168 l0     5
   26:r171 l0     2    1:r174 l0     3    2:r176 l0     2   43:r178 l0     3
   44:r179 l0     2    7:r181 l0     4   15:r183 l0     6   14:r184 l0     9
   10:r185 l0   mem   54:r187 l0     0
New iteration of spill/restore move
+++Costs: overall -362, reg -382, mem 20, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


generateMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={6d,3u} r1={6d,2u} r2={6d,2u} r3={4d} r7={1d,25u} r12={6d} r13={4d,38u} r14={4d} r15={3d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={14d,11u} r101={3d} r102={1d,25u} r103={1d,24u} r104={3d} r105={3d} r106={3d} r113={1d,4u} r118={1d,1u} r121={2d,9u} r124={3d,9u} r126={3d,3u} r127={2d,8u} r128={1d,2u} r129={1d,1u} r130={2d,6u,3e} r131={1d,2u} r132={2d,7u} r135={2d,7u} r136={2d,2u} r137={2d,1u} r139={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r154={1d,1u} r156={1d,1u} r165={2d,2u} r166={2d,2u} r167={1d,1u} r168={1d,1u} r171={1d,1u} r174={1d,4u} r176={1d,4u} r178={1d,5u} r179={1d,5u} r181={1d,1u} r183={1d,2u,1e} r184={1d,1u} r185={1d,1u} r187={1d,1u} 
;;    total ref usage 568{335d,229u,4e} in 205{202 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 2 12 2 (set (reg/f:SI 128 [ saved_stack.2_40 ])
        (reg/f:SI 13 sp)) "../System/map.c":16:19 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/map.c":17:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:QI walkx (const_int 12 [0xc])) "../System/map.c":17:10 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "../System/map.c":18:2 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:QI walky (const_int 12 [0xc])) "../System/map.c":18:10 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/map.c":19:2 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:QI part_size (const_int 24 [0x18])) "../System/map.c":19:16 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/map.c":21:2 -1
     (nil))
(debug_insn 19 18 20 2 (var_location:SI D.7602 (const_int 23 [0x17])) "../System/map.c":21:10 -1
     (nil))
(debug_insn 20 19 21 2 (var_location:SI D.7605 (const_int 23 [0x17])) "../System/map.c":21:10 -1
     (nil))
(insn 21 20 30 2 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -576 [0xfffffffffffffdc0]))) "../System/map.c":21:10 7 {*arm_addsi3}
     (nil))
(insn 30 21 31 2 (set (reg:SI 2 r2)
        (const_int 576 [0x240])) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 2 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) "../System/map.c":24:25 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 33 32 41 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d800 __builtin_memset>) [0 __builtin_memset S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":24:25 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d800 __builtin_memset>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(insn 41 33 39 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 39 41 40 2 (set (reg:SI 2 r2)
        (const_int 1250 [0x4e2])) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 42 2 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/map.c":27:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 42 40 3 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d900 memset>) [0 __builtin_memset S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":27:2 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0000000005b0d900 memset>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(insn 3 42 4 2 (set (reg/v:SI 135 [ i ])
        (const_int 0 [0])) "../System/map.c":31:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 4 3 71 2 (set (reg/v:SI 136 [ walky ])
        (const_int 12 [0xc])) "../System/map.c":18:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 12 [0xc])
        (nil)))
(insn 71 4 83 2 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 83 71 24 2 (set (reg/f:SI 184)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 24 83 25 2 (set (reg/f:SI 131 [ part.0 ])
        (reg/f:SI 13 sp)) "../System/map.c":21:10 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 25 24 26 2 (var_location:SI part.0 (reg/f:SI 13 sp)) "../System/map.c":21:10 -1
     (nil))
(debug_insn 26 25 27 2 (debug_marker) "../System/map.c":22:2 -1
     (nil))
(debug_insn 27 26 28 2 (debug_marker) "../System/map.c":22:6 -1
     (nil))
(debug_insn 28 27 29 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 29 28 34 2 (debug_marker) "../System/map.c":22:14 -1
     (nil))
(debug_insn 34 29 35 2 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 35 34 36 2 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 36 35 43 2 (debug_marker) "../System/map.c":27:2 -1
     (nil))
(debug_insn 43 36 44 2 (debug_marker) "../System/map.c":28:2 -1
     (nil))
(debug_insn 44 43 45 2 (var_location:SI max_i (const_int 250 [0xfa])) "../System/map.c":28:12 -1
     (nil))
(debug_insn 45 44 46 2 (debug_marker) "../System/map.c":29:2 -1
     (nil))
(debug_insn 46 45 47 2 (debug_marker) "../System/map.c":30:2 -1
     (nil))
(debug_insn 47 46 48 2 (debug_marker) "../System/map.c":31:2 -1
     (nil))
(debug_insn 48 47 49 2 (debug_marker) "../System/map.c":31:6 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 50 49 51 2 (var_location:QI walky (const_int 12 [0xc])) -1
     (nil))
(debug_insn 51 50 52 2 (var_location:QI walkx (const_int 12 [0xc])) -1
     (nil))
(debug_insn 52 51 320 2 (debug_marker) "../System/map.c":31:14 -1
     (nil))
(debug_insn 320 52 317 2 (var_location:SI D#8 (const_int 12 [0xc])) -1
     (nil))
(debug_insn 317 320 5 2 (var_location:SI D#7 (const_int 12 [0xc])) -1
     (nil))
(insn 5 317 113 2 (set (reg/v:SI 137 [ walkx ])
        (reg/v:SI 136 [ walky ])) "../System/map.c":17:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 12 [0xc])
        (nil)))
(insn 113 5 139 2 (set (reg:SI 185)
        (reg/v:SI 135 [ i ])) "../System/map.c":61:23 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(code_label 139 113 53 3 5 (nil) [4 uses])
(note 53 139 54 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 3 (var_location:SI i (reg/v:SI 135 [ i ])) -1
     (nil))
(debug_insn 55 54 56 3 (var_location:QI walky (subreg:QI (debug_expr:SI D#8) 0)) -1
     (nil))
(debug_insn 56 55 57 3 (var_location:QI walkx (subreg:QI (debug_expr:SI D#7) 0)) -1
     (nil))
(debug_insn 57 56 58 3 (debug_marker) "../System/map.c":32:3 -1
     (nil))
(call_insn 58 57 330 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000005ed0600 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":32:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000005ed0600 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 330 58 329 3 (var_location:SI D#10 (reg/f:SI 183)) -1
     (nil))
(debug_insn 329 330 331 3 (var_location:SI D#9 (debug_expr:SI D#10)) -1
     (nil))
(insn 331 329 59 3 (set (reg:SI 187)
        (reg:SI 0 r0)) "../System/map.c":32:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 59 331 60 3 (set (reg:SI 113 [ _1 ])
        (reg:SI 187)) "../System/map.c":32:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))
(debug_insn 60 59 61 3 (var_location:SI dir (mod:SI (reg:SI 113 [ _1 ])
        (const_int 4 [0x4]))) "../System/map.c":32:7 -1
     (nil))
(debug_insn 61 60 62 3 (debug_marker) "../System/map.c":34:3 -1
     (nil))
(insn 62 61 63 3 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 113 [ _1 ]))
                    (const_int 0 [0])))
            (set (reg:SI 147)
                (minus:SI (const_int 0 [0])
                    (reg:SI 113 [ _1 ])))
        ]) "../System/map.c":32:7 46 {subsi3_compare0}
     (nil))
(insn 63 62 64 3 (set (reg:SI 130 [ _42 ])
        (and:SI (reg:SI 113 [ _1 ])
            (const_int 3 [0x3]))) "../System/map.c":32:7 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _1 ])
        (nil)))
(insn 64 63 65 3 (set (reg:SI 148)
        (and:SI (reg:SI 147)
            (const_int 3 [0x3]))) "../System/map.c":32:7 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 65 64 316 3 (set (reg:SI 130 [ _42 ])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 148))
            (reg:SI 130 [ _42 ]))) "../System/map.c":32:7 371 {*if_neg_move}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
            (nil))))
(debug_insn 316 65 68 3 (var_location:SI D#6 (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                (const_int 4 [0x4]))
            (debug_expr:SI D#9)) [2 CSWTCH.10[_42]+0 S4 A32])) -1
     (nil))
(insn 68 316 69 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 130 [ _42 ])
            (const_int 3 [0x3]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 69 68 70 3 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 261)
            (pc))) 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 261)
(note 70 69 72 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 73 4 (set (reg/v:SI 129 [ dirx ])
        (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 183)) [2 CSWTCH.10[_42]+0 S4 A32])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 183)) [2 CSWTCH.10[_42]+0 S4 A32])
        (expr_list:REG_EQUAL (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [2 CSWTCH.10[_42]+0 S4 A32])
            (nil))))
(debug_insn 73 72 74 4 (var_location:SI D#5 (mem/u:SI (plus:SI (ashift:SI (reg:SI 130 [ _42 ])
                (const_int 2 [0x2]))
            (symbol_ref/v:SI ("CSWTCH.11") [flags 0x82]  <var_decl 0000000005fd1ea0 CSWTCH.11>)) [2 CSWTCH.11[_42]+0 S4 A32])) -1
     (nil))
(debug_insn 74 73 75 4 (var_location:SI diry (debug_expr:SI D#5)) -1
     (nil))
(debug_insn 75 74 76 4 (var_location:SI dirx (debug_expr:SI D#6)) -1
     (nil))
(debug_insn 76 75 77 4 (debug_marker) "../System/map.c":57:3 -1
     (nil))
(insn 77 76 80 4 (set (reg:SI 179)
        (plus:SI (reg/v:SI 137 [ walkx ])
            (reg/v:SI 129 [ dirx ]))) "../System/map.c":57:11 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 129 [ dirx ])
        (nil)))
(insn 80 77 81 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0]))) "../System/map.c":57:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 81 80 82 4 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 139)
(note 82 81 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 5 (set (reg/v:SI 118 [ diry ])
        (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 184)) [2 CSWTCH.11[_42]+0 S4 A32])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 130 [ _42 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:SI (mult:SI (reg:SI 130 [ _42 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [2 CSWTCH.11[_42]+0 S4 A32])
            (nil))))
(insn 85 84 86 5 (set (reg:SI 178)
        (plus:SI (reg/v:SI 136 [ walky ])
            (reg/v:SI 118 [ diry ]))) "../System/map.c":57:29 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 118 [ diry ])
        (nil)))
(insn 86 85 89 5 (set (reg:SI 151)
        (plus:SI (reg:SI 178)
            (const_int -1 [0xffffffffffffffff]))) "../System/map.c":57:21 7 {*arm_addsi3}
     (nil))
(insn 89 86 90 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 151)
            (const_int 22 [0x16]))) "../System/map.c":57:21 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(jump_insn 90 89 91 5 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:21 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 139)
(note 91 90 97 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 97 91 98 6 (debug_marker) "../System/map.c":59:4 -1
     (nil))
(debug_insn 98 97 99 6 (var_location:QI D#4 (subreg:QI (debug_expr:SI D#6) 0)) "../System/map.c":59:10 -1
     (nil))
(debug_insn 99 98 100 6 (var_location:QI D#3 (plus:QI (debug_expr:QI D#4)
        (subreg:QI (debug_expr:SI D#7) 0))) "../System/map.c":59:10 -1
     (nil))
(debug_insn 100 99 101 6 (var_location:QI walkx (debug_expr:QI D#3)) "../System/map.c":59:10 -1
     (nil))
(debug_insn 101 100 102 6 (debug_marker) "../System/map.c":60:4 -1
     (nil))
(debug_insn 102 101 103 6 (var_location:QI D#2 (subreg:QI (debug_expr:SI D#5) 0)) "../System/map.c":60:10 -1
     (nil))
(debug_insn 103 102 104 6 (var_location:QI D#1 (plus:QI (debug_expr:QI D#2)
        (subreg:QI (debug_expr:SI D#8) 0))) "../System/map.c":60:10 -1
     (nil))
(debug_insn 104 103 105 6 (var_location:QI walky (debug_expr:QI D#1)) "../System/map.c":60:10 -1
     (nil))
(debug_insn 105 104 108 6 (debug_marker) "../System/map.c":61:4 -1
     (nil))
(insn 108 105 111 6 (set (reg:SI 154)
        (plus:SI (ashift:SI (reg:SI 178)
                (const_int 1 [0x1]))
            (reg:SI 178))) "../System/map.c":61:23 318 {*add_shiftsi}
     (nil))
(insn 111 108 94 6 (set (reg:SI 156)
        (plus:SI (ashift:SI (reg:SI 154)
                (const_int 3 [0x3]))
            (reg/f:SI 131 [ part.0 ]))) "../System/map.c":61:23 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 94 111 95 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 179)
            (const_int 23 [0x17]))) "../System/map.c":57:39 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 95 94 96 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../System/map.c":57:39 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 139)
(note 96 95 107 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 107 96 109 7 NOTE_INSN_DELETED)
(note 109 107 115 7 NOTE_INSN_DELETED)
(insn 115 109 116 7 (set (mem:QI (plus:SI (reg:SI 156)
                (reg:SI 179)) [0 (*part.0_46)[_5]{lb: 0 sz: 24}[_3]+0 S1 A8])
        (subreg:QI (reg:SI 185) 0)) "../System/map.c":61:23 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(debug_insn 116 115 117 7 (var_location:SI i (reg/v:SI 135 [ i ])) -1
     (nil))
(debug_insn 117 116 118 7 (var_location:QI walky (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 118 117 119 7 (var_location:QI walkx (debug_expr:QI D#3)) -1
     (nil))
(debug_insn 119 118 120 7 (debug_marker) "../System/map.c":31:22 -1
     (nil))
(insn 120 119 121 7 (set (reg/v:SI 135 [ i ])
        (plus:SI (reg/v:SI 135 [ i ])
            (const_int 1 [0x1]))) "../System/map.c":31:23 7 {*arm_addsi3}
     (nil))
(debug_insn 121 120 122 7 (var_location:SI i (reg/v:SI 135 [ i ])) -1
     (nil))
(debug_insn 122 121 123 7 (var_location:QI walky (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 123 122 124 7 (var_location:QI walkx (debug_expr:QI D#3)) -1
     (nil))
(debug_insn 124 123 125 7 (debug_marker) "../System/map.c":31:14 -1
     (nil))
(insn 125 124 126 7 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 135 [ i ])
            (const_int 250 [0xfa]))) "../System/map.c":31:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 126 125 127 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "../System/map.c":31:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 759896892 (nil)))
 -> 146)
(note 127 126 318 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 318 127 130 8 (var_location:SI D#7 (zero_extend:SI (subreg:QI (reg:SI 179) 0))) -1
     (nil))
(insn 130 318 319 8 (set (reg/v:SI 137 [ walkx ])
        (zero_extend:SI (subreg:QI (reg:SI 179) 0))) "../System/map.c":59:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(debug_insn 319 130 133 8 (var_location:SI D#8 (zero_extend:SI (subreg:QI (reg:SI 178) 0))) -1
     (nil))
(insn 133 319 136 8 (set (reg/v:SI 136 [ walky ])
        (zero_extend:SI (subreg:QI (reg:SI 178) 0))) "../System/map.c":60:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(debug_insn 136 133 137 8 (var_location:SI i (reg/v:SI 135 [ i ])) -1
     (nil))
(debug_insn 137 136 138 8 (var_location:QI walky (subreg:QI (debug_expr:SI D#8) 0)) -1
     (nil))
(debug_insn 138 137 332 8 (var_location:QI walkx (subreg:QI (debug_expr:SI D#7) 0)) -1
     (nil))
(jump_insn 332 138 333 8 (set (pc)
        (label_ref 139)) 284 {*arm_jump}
     (nil)
 -> 139)
(barrier 333 332 337)
(code_label 337 333 142 9 19 (nil) [1 uses])
(note 142 337 143 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 7 9 (set (reg:SI 126 [ ivtmp.28 ])
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 49 [0x31])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 49 [0x31])))
        (nil)))
(insn 7 143 196 9 (set (reg:SI 124 [ ivtmp.27 ])
        (const_int -6 [0xfffffffffffffffa])) "../System/map.c":69:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -6 [0xfffffffffffffffa])
        (nil)))
(insn 196 7 334 9 (set (reg:SI 181)
        (const_int 0 [0])) "../System/map.c":78:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(jump_insn 334 196 335 9 (set (pc)
        (label_ref 229)) 284 {*arm_jump}
     (nil)
 -> 229)
(barrier 335 334 146)
(code_label 146 335 147 10 4 (nil) [1 uses])
(note 147 146 148 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 10 (set (reg:SI 121 [ ivtmp.36 ])
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 25 [0x19])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 25 [0x19])))
        (nil)))
(insn 149 148 151 10 (set (reg:SI 132 [ ivtmp.38 ])
        (reg/f:SI 131 [ part.0 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 131 [ part.0 ])
        (nil)))
(insn 151 149 176 10 (set (reg/f:SI 139 [ _113 ])
        (plus:SI (reg:SI 121 [ ivtmp.36 ])
            (const_int 1200 [0x4b0]))) 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 1225 [0x4c9])))
        (nil)))
(code_label 176 151 152 11 7 (nil) [1 uses])
(note 152 176 153 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 153 152 154 11 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 154 153 155 11 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 155 154 158 11 (debug_marker) "../System/map.c":70:15 -1
     (nil))
(insn 158 155 159 11 (set (reg:SI 165)
        (unspec:SI [
                (mem:SI (reg:SI 132 [ ivtmp.38 ]) [0 MEM <char[1:24]> [(void *)_30]+0 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 159 158 160 11 (set (reg:SI 166)
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 132 [ ivtmp.38 ])
                        (const_int 4 [0x4])) [0 MEM <char[1:24]> [(void *)_30]+4 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 160 159 161 11 (set (reg:SI 167)
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 132 [ ivtmp.38 ])
                        (const_int 8 [0x8])) [0 MEM <char[1:24]> [(void *)_30]+8 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 161 160 165 11 (set (reg:SI 168)
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 132 [ ivtmp.38 ])
                        (const_int 12 [0xc])) [0 MEM <char[1:24]> [(void *)_30]+12 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 165 161 162 11 (set (mem:SI (plus:SI (reg:SI 121 [ ivtmp.36 ])
                (const_int 12 [0xc])) [0 MEM <char[1:24]> [(void *)_24]+12 S4 A8])
        (unspec:SI [
                (reg:SI 168)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
(insn 162 165 163 11 (set (mem:SI (reg:SI 121 [ ivtmp.36 ]) [0 MEM <char[1:24]> [(void *)_24]+0 S4 A8])
        (unspec:SI [
                (reg:SI 165)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 163 162 164 11 (set (mem:SI (plus:SI (reg:SI 121 [ ivtmp.36 ])
                (const_int 4 [0x4])) [0 MEM <char[1:24]> [(void *)_24]+4 S4 A8])
        (unspec:SI [
                (reg:SI 166)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 164 163 166 11 (set (mem:SI (plus:SI (reg:SI 121 [ ivtmp.36 ])
                (const_int 8 [0x8])) [0 MEM <char[1:24]> [(void *)_24]+8 S4 A8])
        (unspec:SI [
                (reg:SI 167)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(insn 166 164 167 11 (set (reg:SI 165)
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 132 [ ivtmp.38 ])
                        (const_int 16 [0x10])) [0 MEM <char[1:24]> [(void *)_30]+16 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 167 166 169 11 (set (reg:SI 166)
        (unspec:SI [
                (mem:SI (plus:SI (reg:SI 132 [ ivtmp.38 ])
                        (const_int 20 [0x14])) [0 MEM <char[1:24]> [(void *)_30]+20 S4 A8])
            ] UNSPEC_UNALIGNED_LOAD)) "../System/map.c":71:17 154 {unaligned_loadsi}
     (nil))
(insn 169 167 170 11 (set (mem:SI (plus:SI (reg:SI 121 [ ivtmp.36 ])
                (const_int 20 [0x14])) [0 MEM <char[1:24]> [(void *)_24]+20 S4 A8])
        (unspec:SI [
                (reg:SI 166)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(debug_insn 170 169 171 11 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 171 170 172 11 (debug_marker) "../System/map.c":69:19 -1
     (nil))
(debug_insn 172 171 173 11 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 173 172 168 11 (debug_marker) "../System/map.c":69:14 -1
     (nil))
(insn 168 173 174 11 (set (mem:SI (plus:SI (reg:SI 121 [ ivtmp.36 ])
                (const_int 16 [0x10])) [0 MEM <char[1:24]> [(void *)_24]+16 S4 A8])
        (unspec:SI [
                (reg:SI 165)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":71:17 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 174 168 175 11 (set (reg:SI 121 [ ivtmp.36 ])
        (plus:SI (reg:SI 121 [ ivtmp.36 ])
            (const_int 50 [0x32]))) "../System/map.c":69:2 7 {*arm_addsi3}
     (nil))
(insn 175 174 177 11 (set (reg:SI 132 [ ivtmp.38 ])
        (plus:SI (reg:SI 132 [ ivtmp.38 ])
            (const_int 24 [0x18]))) "../System/map.c":69:2 7 {*arm_addsi3}
     (nil))
(insn 177 175 178 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 121 [ ivtmp.36 ])
            (reg/f:SI 139 [ _113 ]))) "../System/map.c":69:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 178 177 336 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 176)
            (pc))) "../System/map.c":69:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1029002596 (nil)))
 -> 176)
(note 336 178 338 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 338 336 339 12 (set (pc)
        (label_ref 337)) 284 {*arm_jump}
     (nil)
 -> 337)
(barrier 339 338 202)
(code_label 202 339 183 13 10 (nil) [2 uses])
(note 183 202 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 184 183 185 13 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(insn 185 184 340 13 (set (reg:SI 127 [ ivtmp.17 ])
        (plus:SI (reg:SI 127 [ ivtmp.17 ])
            (const_int 1 [0x1]))) 7 {*arm_addsi3}
     (nil))
(jump_insn 340 185 341 13 (set (pc)
        (label_ref 234)) 284 {*arm_jump}
     (nil)
 -> 234)
(barrier 341 340 287)
(code_label 287 341 286 14 17 (nil) [1 uses])
(note 286 287 6 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 6 286 234 14 (set (reg:SI 127 [ ivtmp.17 ])
        (const_int 2 [0x2])) "../System/map.c":17:10 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 234 6 186 15 13 (nil) [1 uses])
(note 186 234 187 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 187 186 188 15 (var_location:SI x (plus:SI (reg:SI 127 [ ivtmp.17 ])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(debug_insn 188 187 207 15 (debug_marker) "../System/map.c":77:4 -1
     (nil))
(debug_insn 207 188 208 15 (var_location:SI x (plus:SI (reg:SI 127 [ ivtmp.17 ])
        (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(debug_insn 208 207 209 15 (debug_marker) "../System/map.c":76:20 -1
     (nil))
(debug_insn 209 208 210 15 (var_location:SI x (reg:SI 127 [ ivtmp.17 ])) -1
     (nil))
(debug_insn 210 209 189 15 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(insn 189 210 192 15 (set (reg:SI 171)
        (plus:SI (reg:SI 127 [ ivtmp.17 ])
            (const_int -19 [0xffffffffffffffed]))) "../System/map.c":77:6 7 {*arm_addsi3}
     (nil))
(insn 192 189 193 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 171)
            (const_int 6 [0x6]))) "../System/map.c":77:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(jump_insn 193 192 194 15 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "../System/map.c":77:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1073741828 (nil)))
 -> 205)
(note 194 193 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 195 194 198 16 (debug_marker) "../System/map.c":78:4 -1
     (nil))
(insn 198 195 199 16 (set (mem:QI (plus:SI (reg:SI 126 [ ivtmp.28 ])
                (reg:SI 127 [ ivtmp.17 ])) [0 MEM[base: _106, index: ivtmp.17_86, offset: 0B]+0 S1 A8])
        (subreg:QI (reg:SI 181) 0)) "../System/map.c":78:14 263 {*arm_movqi_insn}
     (nil))
(debug_insn 199 198 200 16 (debug_marker) "../System/map.c":76:20 -1
     (nil))
(debug_insn 200 199 201 16 (var_location:SI x (reg:SI 127 [ ivtmp.17 ])) -1
     (nil))
(debug_insn 201 200 342 16 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(jump_insn 342 201 343 16 (set (pc)
        (label_ref 202)) 284 {*arm_jump}
     (nil)
 -> 202)
(barrier 343 342 205)
(code_label 205 343 206 17 9 (nil) [1 uses])
(note 206 205 211 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 211 206 212 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 127 [ ivtmp.17 ])
            (const_int 26 [0x1a]))) "../System/map.c":76:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 212 211 344 17 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "../System/map.c":76:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1030747484 (nil)))
 -> 202)
(note 344 212 346 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 346 344 347 18 (set (pc)
        (label_ref 345)) 284 {*arm_jump}
     (nil)
 -> 345)
(barrier 347 346 349)
(code_label 349 347 216 19 21 (nil) [1 uses])
(note 216 349 217 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 217 216 218 19 (var_location:SI y (plus:SI (reg:SI 124 [ ivtmp.27 ])
        (const_int 7 [0x7]))) -1
     (nil))
(debug_insn 218 217 219 19 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 219 218 220 19 (debug_marker) "../System/map.c":75:19 -1
     (nil))
(debug_insn 220 219 221 19 (var_location:SI y (plus:SI (reg:SI 124 [ ivtmp.27 ])
        (const_int 8 [0x8]))) -1
     (nil))
(debug_insn 221 220 222 19 (debug_marker) "../System/map.c":75:14 -1
     (nil))
(insn 222 221 223 19 (set (reg:SI 124 [ ivtmp.27 ])
        (plus:SI (reg:SI 124 [ ivtmp.27 ])
            (const_int 1 [0x1]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 223 222 224 19 (set (reg:SI 126 [ ivtmp.28 ])
        (plus:SI (reg:SI 126 [ ivtmp.28 ])
            (const_int 50 [0x32]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 224 223 225 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 124 [ ivtmp.27 ])
            (const_int 19 [0x13]))) "../System/map.c":75:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 225 224 229 19 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) "../System/map.c":75:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 214971636 (nil)))
 -> 243)
(code_label 229 225 230 20 6 (nil) [2 uses])
(note 230 229 231 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 231 230 232 20 (var_location:SI y (plus:SI (reg:SI 124 [ ivtmp.27 ])
        (const_int 7 [0x7]))) -1
     (nil))
(debug_insn 232 231 233 20 (var_location:SI x (const_int 1 [0x1])) -1
     (nil))
(debug_insn 233 232 237 20 (debug_marker) "../System/map.c":76:15 -1
     (nil))
(insn 237 233 238 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 124 [ ivtmp.27 ])
            (const_int 10 [0xa]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 238 237 348 20 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 287)
            (pc))) 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 858993460 (nil)))
 -> 287)
(note 348 238 350 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 350 348 351 21 (set (pc)
        (label_ref 349)) 284 {*arm_jump}
     (nil)
 -> 349)
(barrier 351 350 243)
(code_label 243 351 244 22 12 (nil) [1 uses])
(note 244 243 245 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 247 22 (set (reg/f:SI 174)
        (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 625 [0x271])))) "../System/map.c":84:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
                (const_int 625 [0x271])))
        (nil)))
(insn 247 245 248 22 (set (reg:SI 176)
        (const_int 0 [0])) "../System/map.c":84:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 248 247 249 22 (set (mem/c:SI (reg/f:SI 174) [0 MEM <char[1:13]> [(void *)&map + 625B]+0 S4 A8])
        (unspec:SI [
                (reg:SI 176)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 249 248 250 22 (set (mem/c:SI (plus:SI (reg/f:SI 174)
                (const_int 4 [0x4])) [0 MEM <char[1:13]> [(void *)&map + 625B]+4 S4 A8])
        (unspec:SI [
                (reg:SI 176)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 250 249 252 22 (set (mem/c:SI (plus:SI (reg/f:SI 174)
                (const_int 8 [0x8])) [0 MEM <char[1:13]> [(void *)&map + 625B]+8 S4 A8])
        (unspec:SI [
                (reg:SI 176)
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":84:21 158 {unaligned_storesi}
     (nil))
(insn 252 250 253 22 (set (mem/c:QI (plus:SI (reg/f:SI 174)
                (const_int 12 [0xc])) [0 MEM <char[1:13]> [(void *)&map + 625B]+12 S1 A8])
        (subreg:QI (reg:SI 176) 0)) "../System/map.c":84:21 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg/f:SI 174)
            (nil))))
(debug_insn 253 252 254 22 (var_location:SI pathy (clobber (const_int 0 [0]))) "../System/map.c":82:18 -1
     (nil))
(debug_insn 254 253 255 22 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 255 254 256 22 (var_location:SI pathx (clobber (const_int 0 [0]))) -1
     (nil))
(insn 256 255 257 22 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 257 256 258 22 (clobber (mem:BLK (reg/f:SI 13 sp) [0  A8])) -1
     (nil))
(insn 258 257 352 22 (set (reg/f:SI 13 sp)
        (reg/f:SI 128 [ saved_stack.2_40 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 128 [ saved_stack.2_40 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 352 258 353 22 (set (pc)
        (label_ref 282)) 284 {*arm_jump}
     (nil)
 -> 282)
(barrier 353 352 261)
(code_label 261 353 262 23 2 (nil) [1 uses])
(note 262 261 263 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 263 262 264 23 (debug_marker) "../System/map.c":54:4 -1
     (nil))
(insn 264 263 265 23 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 265 264 266 23 (clobber (mem:BLK (reg/f:SI 13 sp) [0  A8])) -1
     (nil))
(insn 266 265 354 23 (set (reg/f:SI 13 sp)
        (reg/f:SI 128 [ saved_stack.2_40 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 128 [ saved_stack.2_40 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 354 266 355 23 (set (pc)
        (label_ref 282)) 284 {*arm_jump}
     (nil)
 -> 282)
(barrier 355 354 345)
(code_label 345 355 272 24 20 (nil) [1 uses])
(note 272 345 273 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 273 272 274 24 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 274 273 275 24 (debug_marker) "../System/map.c":75:19 -1
     (nil))
(debug_insn 275 274 276 24 (var_location:SI y (plus:SI (reg:SI 124 [ ivtmp.27 ])
        (const_int 8 [0x8]))) -1
     (nil))
(debug_insn 276 275 277 24 (debug_marker) "../System/map.c":75:14 -1
     (nil))
(insn 277 276 278 24 (set (reg:SI 124 [ ivtmp.27 ])
        (plus:SI (reg:SI 124 [ ivtmp.27 ])
            (const_int 1 [0x1]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(insn 278 277 227 24 (set (reg:SI 126 [ ivtmp.28 ])
        (plus:SI (reg:SI 126 [ ivtmp.28 ])
            (const_int 50 [0x32]))) "../System/map.c":75:2 7 {*arm_addsi3}
     (nil))
(debug_insn 227 278 228 24 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 228 227 356 24 (var_location:SI y (plus:SI (reg:SI 124 [ ivtmp.27 ])
        (const_int 8 [0x8]))) -1
     (nil))
(jump_insn 356 228 357 24 (set (pc)
        (label_ref 229)) 284 {*arm_jump}
     (nil)
 -> 229)
(barrier 357 356 282)
(code_label 282 357 283 25 1 (nil) [2 uses])
(note 283 282 359 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 359 283 0 NOTE_INSN_DELETED)

;; Function drawMiniMap (drawMiniMap, funcdef_no=5, decl_uid=5635, cgraph_uid=6, symbol_order=5)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 63 (  1.9)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 30 28 27 26 29 7 4 5 3 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;;
;; Loop 2
;;  header 3, latch 30
;;  depth 2, outer 1
;;  nodes: 3 30 28 27 26 29 7 4 5 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;; 2 succs { 32 }
;; 3 succs { 7 4 }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 30 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 18 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 22 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 26 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 30 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 3 31 }
;; 31 succs { 32 33 }
;; 32 succs { 3 }
;; 33 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 177: local to bb 2 def dominates all uses has unique first use
Reg 180: local to bb 2 def dominates all uses has unique first use
Reg 179: local to bb 2 def dominates all uses has unique first use
Reg 182: local to bb 2 def dominates all uses has unique first use
Ignoring reg 115, has equiv memory
Reg 178: local to bb 2 def dominates all uses has unique first use
Reg 181: local to bb 2 def dominates all uses has unique first use
Reg 126: def dominates all uses has unique first use
Reg 127: def dominates all uses has unique first use
Reg 246: def dominates all uses has unique first use
Reg 255 uninteresting
Reg 120 uninteresting
Reg 188 uninteresting
Reg 256 uninteresting
Reg 257 uninteresting
Reg 258 uninteresting
Reg 190 uninteresting
Ignoring reg 195, has equiv memory
Ignoring reg 192, has equiv memory
Reg 134 uninteresting
Reg 194 uninteresting
Reg 196 uninteresting
Ignoring reg 199, has equiv memory
Reg 198 uninteresting
Reg 200 uninteresting
Reg 259 uninteresting
Reg 202 uninteresting
Ignoring reg 207, has equiv memory
Ignoring reg 204, has equiv memory
Reg 144 uninteresting
Reg 206 uninteresting
Reg 208 uninteresting
Ignoring reg 211, has equiv memory
Reg 210 uninteresting
Reg 212 uninteresting
Reg 260 uninteresting
Reg 214 uninteresting
Ignoring reg 219, has equiv memory
Ignoring reg 216, has equiv memory
Reg 154 uninteresting
Reg 218 uninteresting
Reg 220 uninteresting
Ignoring reg 223, has equiv memory
Reg 222 uninteresting
Reg 224 uninteresting
Reg 261 uninteresting
Reg 226 uninteresting
Ignoring reg 234, has equiv memory
Ignoring reg 228, has equiv memory
Reg 164 uninteresting
Reg 233 uninteresting
Reg 235 uninteresting
Ignoring reg 241, has equiv memory
Reg 240 uninteresting
Reg 242 uninteresting
Reg 262 uninteresting
Reg 119: def dominates all uses has unique first use
Reg 247: local to bb 32 def dominates all uses has unique first use
Reg 249: def dominates all uses has unique first use
Reg 119 not local to one basic block
Reg 126 not local to one basic block
Reg 127 not local to one basic block
Ignoring reg 177 with equiv init insn
Examining insn 13, def for 178
  all ok
Found def insn 12 for 179 to be not moveable
Ignoring reg 180 with equiv init insn
Examining insn 19, def for 181
  all ok
Found def insn 18 for 182 to be not moveable
Reg 246 not local to one basic block
Ignoring reg 247 with equiv init insn
Reg 249 not local to one basic block
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 30 28 27 26 29 7 4 5 3 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;;
;; Loop 2
;;  header 3, latch 30
;;  depth 2, outer 1
;;  nodes: 3 30 28 27 26 29 7 4 5 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;; 2 succs { 32 }
;; 3 succs { 7 4 }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 30 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 18 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 22 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 26 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 30 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 3 31 }
;; 31 succs { 32 33 }
;; 32 succs { 3 }
;; 33 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 115: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 120 (nil))
init_insns for 195: (insn_list:REG_DEP_TRUE 129 (nil))
init_insns for 199: (insn_list:REG_DEP_TRUE 136 (nil))
init_insns for 204: (insn_list:REG_DEP_TRUE 165 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 174 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 181 (nil))
init_insns for 216: (insn_list:REG_DEP_TRUE 210 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 226 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 255 (nil))
init_insns for 234: (insn_list:REG_DEP_TRUE 267 (nil))
init_insns for 241: (insn_list:REG_DEP_TRUE 277 (nil))
init_insns for 244: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 246: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 247: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 250: (insn_list:REG_DEP_TRUE 113 (nil))
init_insns for 251: (insn_list:REG_DEP_TRUE 266 (nil))
init_insns for 254: (insn_list:REG_DEP_TRUE 276 (nil))

Pass 1 for finding pseudo/allocno costs

    r262: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r261: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r260: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r259: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r258: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r257: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r256: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r255: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r250: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r250,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r250,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r246: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r246,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r246,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r244,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r244,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r242: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r241: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r240: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r235: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r234: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r233: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r228: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a54 (r228,l2) best NO_REGS, allocno NO_REGS
    r226: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r223: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r222: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r220: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r219: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r218: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r216: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a64 (r216,l2) best NO_REGS, allocno NO_REGS
    r214: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r211: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r210: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r208: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r207: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r206: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r204: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a74 (r204,l2) best NO_REGS, allocno NO_REGS
    r202: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r199: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r198: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r196: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r195: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r194: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r192: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a84 (r192,l2) best NO_REGS, allocno NO_REGS
    r190: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r181: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r180: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r178: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r177: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r171,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r171,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r154: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r144: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r134: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r130: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r254,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,1365 VFP_LO_REGS:15,1365 ALL_REGS:15,1365 MEM:10,910
  a1(r250,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,28155 VFP_LO_REGS:45,28155 ALL_REGS:45,28155 MEM:30,18770
  a2(r251,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,4035 VFP_LO_REGS:15,4035 ALL_REGS:15,4035 MEM:10,2690
  a3(r128,l0) costs: LO_REGS:0,0 HI_REGS:0,1836 CALLER_SAVE_REGS:0,1836 EVEN_REG:0,1836 GENERAL_REGS:0,1836 VFP_D0_D7_REGS:15,21765 VFP_LO_REGS:15,21765 ALL_REGS:15,21765 MEM:10,14510
  a4(r246,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,285 VFP_LO_REGS:15,285 ALL_REGS:15,285 MEM:10,190
  a5(r127,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,1035 VFP_LO_REGS:15,1035 ALL_REGS:15,1035 MEM:10,690
  a6(r115,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,45 VFP_LO_REGS:45,45 ALL_REGS:45,45 MEM:10,10
  a7(r181,l0) costs: LO_REGS:15,15 HI_REGS:15,15 CALLER_SAVE_REGS:15,15 EVEN_REG:15,15 GENERAL_REGS:15,15 VFP_D0_D7_REGS:15,15 VFP_LO_REGS:15,15 ALL_REGS:30,30 MEM:20,20
  a8(r126,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,3015 VFP_LO_REGS:15,3015 ALL_REGS:15,3015 MEM:10,2010
  a9(r178,l0) costs: LO_REGS:15,15 HI_REGS:15,15 CALLER_SAVE_REGS:15,15 EVEN_REG:15,15 GENERAL_REGS:15,15 VFP_D0_D7_REGS:15,15 VFP_LO_REGS:15,15 ALL_REGS:30,30 MEM:20,20
  a10(r171,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,825 VFP_LO_REGS:15,825 ALL_REGS:15,825 MEM:10,550
  a11(r182,l0) costs: LO_REGS:30,30 HI_REGS:30,30 CALLER_SAVE_REGS:30,30 EVEN_REG:30,30 GENERAL_REGS:30,30 VFP_LO_REGS:0,0 ALL_REGS:30,30 MEM:20,20
  a12(r179,l0) costs: LO_REGS:30,30 HI_REGS:30,30 CALLER_SAVE_REGS:30,30 EVEN_REG:30,30 GENERAL_REGS:30,30 VFP_LO_REGS:0,0 ALL_REGS:30,30 MEM:20,20
  a13(r244,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,16125 VFP_LO_REGS:45,16125 ALL_REGS:45,16125 MEM:30,10750
  a14(r180,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:30,30 VFP_LO_REGS:30,30 ALL_REGS:30,30 MEM:20,20
  a15(r177,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:30,30 VFP_LO_REGS:30,30 ALL_REGS:30,30 MEM:20,20
  a16(r126,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,3000 VFP_LO_REGS:0,3000 ALL_REGS:0,3000 MEM:0,2000
  a17(r127,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,1020 VFP_LO_REGS:0,1020 ALL_REGS:0,1020 MEM:0,680
  a18(r128,l1) costs: LO_REGS:0,0 HI_REGS:0,1836 CALLER_SAVE_REGS:0,1836 EVEN_REG:0,1836 GENERAL_REGS:0,1836 VFP_D0_D7_REGS:1080,21750 VFP_LO_REGS:1080,21750 ALL_REGS:1080,21750 MEM:720,14500
  a19(r171,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:810,810 VFP_LO_REGS:810,810 ALL_REGS:810,810 MEM:540,540
  a20(r244,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,16080 VFP_LO_REGS:0,16080 ALL_REGS:0,16080 MEM:0,10720
  a21(r246,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a22(r250,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,28110 VFP_LO_REGS:0,28110 ALL_REGS:0,28110 MEM:0,18740
  a23(r251,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,4020 VFP_LO_REGS:0,4020 ALL_REGS:0,4020 MEM:0,2680
  a24(r254,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,1350 VFP_LO_REGS:0,1350 ALL_REGS:0,1350 MEM:0,900
  a25(r249,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,3270 VFP_LO_REGS:270,3270 ALL_REGS:270,3270 MEM:180,2180
  a26(r119,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,4260 VFP_LO_REGS:540,4260 ALL_REGS:540,4260 MEM:360,2840
  a27(r247,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a28(r130,l1) costs: LO_REGS:0,0 HI_REGS:0,1436 CALLER_SAVE_REGS:0,1436 EVEN_REG:0,1436 GENERAL_REGS:0,1436 VFP_D0_D7_REGS:270,60690 VFP_LO_REGS:270,60690 ALL_REGS:270,60690 MEM:180,40460
  a29(r129,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,55350 VFP_LO_REGS:270,55350 ALL_REGS:270,55350 MEM:180,36900
  a30(r119,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3720,3720 VFP_LO_REGS:3720,3720 ALL_REGS:3720,3720 MEM:2480,2480
  a31(r126,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3000,3000 VFP_LO_REGS:3000,3000 ALL_REGS:3000,3000 MEM:2000,2000
  a32(r127,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1020,1020 VFP_LO_REGS:1020,1020 ALL_REGS:1020,1020 MEM:680,680
  a33(r128,l2) costs: LO_REGS:0,0 HI_REGS:1836,1836 CALLER_SAVE_REGS:1836,1836 EVEN_REG:1836,1836 GENERAL_REGS:1836,1836 VFP_D0_D7_REGS:20670,20670 VFP_LO_REGS:20670,20670 ALL_REGS:20670,20670 MEM:13780,13780
  a34(r129,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:55080,55080 VFP_LO_REGS:55080,55080 ALL_REGS:55080,55080 MEM:36720,36720
  a35(r130,l2) costs: LO_REGS:0,0 HI_REGS:1436,1436 CALLER_SAVE_REGS:1436,1436 EVEN_REG:1436,1436 GENERAL_REGS:1436,1436 VFP_D0_D7_REGS:60420,60420 VFP_LO_REGS:60420,60420 ALL_REGS:60420,60420 MEM:40280,40280
  a36(r171,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r244,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:16080,16080 VFP_LO_REGS:16080,16080 ALL_REGS:16080,16080 MEM:10720,10720
  a38(r246,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r249,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3000,3000 VFP_LO_REGS:3000,3000 ALL_REGS:3000,3000 MEM:2000,2000
  a40(r250,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:28110,28110 VFP_LO_REGS:28110,28110 ALL_REGS:28110,28110 MEM:18740,18740
  a41(r251,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:4020,4020 VFP_LO_REGS:4020,4020 ALL_REGS:4020,4020 MEM:2680,2680
  a42(r254,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1350,1350 VFP_LO_REGS:1350,1350 ALL_REGS:1350,1350 MEM:900,900
  a43(r243,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:151470,151470 VFP_LO_REGS:151470,151470 ALL_REGS:151470,151470 MEM:100980,100980
  a44(r125,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:42045,42045 VFP_LO_REGS:42045,42045 ALL_REGS:42045,42045 MEM:28030,28030
  a45(r262,l2) costs: GENERAL_REGS:18,18 VFP_D0_D7_REGS:405,405 VFP_LO_REGS:405,405 ALL_REGS:270,270 MEM:270,270
  a46(r242,l2) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:1350,1350 MEM:900,900
  a47(r240,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:900,900
  a48(r164,l2) costs: LO_REGS:6705,6705 HI_REGS:6705,6705 CALLER_SAVE_REGS:6705,6705 EVEN_REG:6705,6705 GENERAL_REGS:6705,6705 VFP_LO_REGS:2010,2010 ALL_REGS:6705,6705 MEM:5140,5140
  a49(r241,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:0,0
  a50(r235,l2) costs: LO_REGS:2010,2010 HI_REGS:2010,2010 CALLER_SAVE_REGS:2010,2010 EVEN_REG:2010,2010 GENERAL_REGS:2010,2010 VFP_D0_D7_REGS:2010,2010 VFP_LO_REGS:2010,2010 ALL_REGS:4020,4020 MEM:2680,2680
  a51(r120,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:17040,17040 VFP_LO_REGS:17040,17040 ALL_REGS:17040,17040 MEM:11360,11360
  a52(r233,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:2680,2680
  a53(r234,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:0,0
  a54(r228,l2) costs: LO_REGS:4020,4020 HI_REGS:4288,4288 CALLER_SAVE_REGS:4288,4288 EVEN_REG:4288,4288 GENERAL_REGS:4288,4288 VFP_D0_D7_REGS:4020,4020 VFP_LO_REGS:4020,4020 ALL_REGS:6030,6030 MEM:2010,2010
  a55(r226,l2) costs: LO_REGS:0,0 HI_REGS:400,400 CALLER_SAVE_REGS:400,400 EVEN_REG:400,400 GENERAL_REGS:400,400 VFP_D0_D7_REGS:6000,6000 VFP_LO_REGS:6000,6000 ALL_REGS:6000,6000 MEM:4000,4000
  a56(r261,l2) costs: GENERAL_REGS:18,18 VFP_D0_D7_REGS:405,405 VFP_LO_REGS:405,405 ALL_REGS:270,270 MEM:270,270
  a57(r224,l2) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:1350,1350 MEM:900,900
  a58(r222,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:900,900
  a59(r154,l2) costs: LO_REGS:6705,6705 HI_REGS:6705,6705 CALLER_SAVE_REGS:6705,6705 EVEN_REG:6705,6705 GENERAL_REGS:6705,6705 VFP_LO_REGS:2010,2010 ALL_REGS:6705,6705 MEM:5140,5140
  a60(r223,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:0,0
  a61(r220,l2) costs: LO_REGS:2010,2010 HI_REGS:2010,2010 CALLER_SAVE_REGS:2010,2010 EVEN_REG:2010,2010 GENERAL_REGS:2010,2010 VFP_D0_D7_REGS:2010,2010 VFP_LO_REGS:2010,2010 ALL_REGS:4020,4020 MEM:2680,2680
  a62(r218,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:2680,2680
  a63(r219,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:0,0
  a64(r216,l2) costs: LO_REGS:4020,4020 HI_REGS:4288,4288 CALLER_SAVE_REGS:4288,4288 EVEN_REG:4288,4288 GENERAL_REGS:4288,4288 VFP_D0_D7_REGS:4020,4020 VFP_LO_REGS:4020,4020 ALL_REGS:6030,6030 MEM:2010,2010
  a65(r214,l2) costs: LO_REGS:0,0 HI_REGS:400,400 CALLER_SAVE_REGS:400,400 EVEN_REG:400,400 GENERAL_REGS:400,400 VFP_D0_D7_REGS:6000,6000 VFP_LO_REGS:6000,6000 ALL_REGS:6000,6000 MEM:4000,4000
  a66(r260,l2) costs: GENERAL_REGS:18,18 VFP_D0_D7_REGS:405,405 VFP_LO_REGS:405,405 ALL_REGS:270,270 MEM:270,270
  a67(r212,l2) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:1350,1350 MEM:900,900
  a68(r210,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:900,900
  a69(r144,l2) costs: LO_REGS:6705,6705 HI_REGS:6705,6705 CALLER_SAVE_REGS:6705,6705 EVEN_REG:6705,6705 GENERAL_REGS:6705,6705 VFP_LO_REGS:2010,2010 ALL_REGS:6705,6705 MEM:5140,5140
  a70(r211,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:0,0
  a71(r208,l2) costs: LO_REGS:2010,2010 HI_REGS:2010,2010 CALLER_SAVE_REGS:2010,2010 EVEN_REG:2010,2010 GENERAL_REGS:2010,2010 VFP_D0_D7_REGS:2010,2010 VFP_LO_REGS:2010,2010 ALL_REGS:4020,4020 MEM:2680,2680
  a72(r206,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:2680,2680
  a73(r207,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:0,0
  a74(r204,l2) costs: LO_REGS:4020,4020 HI_REGS:4288,4288 CALLER_SAVE_REGS:4288,4288 EVEN_REG:4288,4288 GENERAL_REGS:4288,4288 VFP_D0_D7_REGS:4020,4020 VFP_LO_REGS:4020,4020 ALL_REGS:6030,6030 MEM:2010,2010
  a75(r202,l2) costs: LO_REGS:0,0 HI_REGS:400,400 CALLER_SAVE_REGS:400,400 EVEN_REG:400,400 GENERAL_REGS:400,400 VFP_D0_D7_REGS:6000,6000 VFP_LO_REGS:6000,6000 ALL_REGS:6000,6000 MEM:4000,4000
  a76(r259,l2) costs: GENERAL_REGS:18,18 VFP_D0_D7_REGS:405,405 VFP_LO_REGS:405,405 ALL_REGS:270,270 MEM:270,270
  a77(r200,l2) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:1350,1350 MEM:900,900
  a78(r198,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:900,900
  a79(r134,l2) costs: LO_REGS:6705,6705 HI_REGS:6705,6705 CALLER_SAVE_REGS:6705,6705 EVEN_REG:6705,6705 GENERAL_REGS:6705,6705 VFP_LO_REGS:2010,2010 ALL_REGS:6705,6705 MEM:5140,5140
  a80(r199,l2) costs: LO_REGS:1350,1350 HI_REGS:1350,1350 CALLER_SAVE_REGS:1350,1350 EVEN_REG:1350,1350 GENERAL_REGS:1350,1350 VFP_LO_REGS:0,0 ALL_REGS:1350,1350 MEM:0,0
  a81(r196,l2) costs: LO_REGS:2010,2010 HI_REGS:2010,2010 CALLER_SAVE_REGS:2010,2010 EVEN_REG:2010,2010 GENERAL_REGS:2010,2010 VFP_D0_D7_REGS:2010,2010 VFP_LO_REGS:2010,2010 ALL_REGS:4020,4020 MEM:2680,2680
  a82(r194,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:2680,2680
  a83(r195,l2) costs: LO_REGS:4020,4020 HI_REGS:4020,4020 CALLER_SAVE_REGS:4020,4020 EVEN_REG:4020,4020 GENERAL_REGS:4020,4020 VFP_LO_REGS:0,0 ALL_REGS:4020,4020 MEM:0,0
  a84(r192,l2) costs: LO_REGS:4020,4020 HI_REGS:4288,4288 CALLER_SAVE_REGS:4288,4288 EVEN_REG:4288,4288 GENERAL_REGS:4288,4288 VFP_D0_D7_REGS:4020,4020 VFP_LO_REGS:4020,4020 ALL_REGS:6030,6030 MEM:2010,2010
  a85(r190,l2) costs: LO_REGS:0,0 HI_REGS:400,400 CALLER_SAVE_REGS:400,400 EVEN_REG:400,400 GENERAL_REGS:400,400 VFP_D0_D7_REGS:6000,6000 VFP_LO_REGS:6000,6000 ALL_REGS:6000,6000 MEM:4000,4000
  a86(r258,l2) costs: GENERAL_REGS:26,26 VFP_D0_D7_REGS:585,585 VFP_LO_REGS:585,585 ALL_REGS:390,390 MEM:390,390
  a87(r257,l2) costs: GENERAL_REGS:200,200 VFP_D0_D7_REGS:4500,4500 VFP_LO_REGS:4500,4500 ALL_REGS:3000,3000 MEM:3000,3000
  a88(r256,l2) costs: GENERAL_REGS:200,200 VFP_D0_D7_REGS:4500,4500 VFP_LO_REGS:4500,4500 ALL_REGS:3000,3000 MEM:3000,3000
  a89(r188,l2) costs: LO_REGS:0,0 HI_REGS:400,400 CALLER_SAVE_REGS:400,400 EVEN_REG:400,400 GENERAL_REGS:400,400 VFP_D0_D7_REGS:6000,6000 VFP_LO_REGS:6000,6000 ALL_REGS:6000,6000 MEM:4000,4000
  a90(r255,l2) costs: GENERAL_REGS:1436,1436 VFP_D0_D7_REGS:32310,32310 VFP_LO_REGS:32310,32310 ALL_REGS:21540,21540 MEM:21540,21540

   Insn 407(l0): point = 1
   Insn 276(l0): point = 3
   Insn 266(l0): point = 5
   Insn 5(l0): point = 7
   Insn 60(l0): point = 9
   Insn 113(l0): point = 11
   Insn 20(l0): point = 13
   Insn 14(l0): point = 15
   Insn 26(l0): point = 17
   Insn 19(l0): point = 19
   Insn 13(l0): point = 21
   Insn 10(l0): point = 23
   Insn 18(l0): point = 25
   Insn 12(l0): point = 27
   Insn 9(l0): point = 29
   Insn 17(l0): point = 31
   Insn 11(l0): point = 33
   Insn 413(l1): point = 36
   Insn 63(l1): point = 38
   Insn 4(l1): point = 40
   Insn 3(l1): point = 42
   Insn 61(l1): point = 44
   Insn 326(l1): point = 46
   Insn 320(l1): point = 49
   Insn 319(l1): point = 51
   Insn 318(l1): point = 53
   Insn 315(l1): point = 55
   Insn 34(l2): point = 58
   Insn 312(l2): point = 61
   Insn 311(l2): point = 63
   Insn 309(l2): point = 65
   Insn 304(l2): point = 67
   Insn 301(l2): point = 69
   Insn 299(l2): point = 71
   Insn 298(l2): point = 73
   Insn 297(l2): point = 75
   Insn 306(l2): point = 77
   Insn 281(l2): point = 80
   Insn 280(l2): point = 82
   Insn 279(l2): point = 84
   Insn 278(l2): point = 86
   Insn 277(l2): point = 89
   Insn 271(l2): point = 92
   Insn 270(l2): point = 94
   Insn 269(l2): point = 96
   Insn 268(l2): point = 98
   Insn 256(l2): point = 101
   Insn 255(l2): point = 103
   Insn 267(l2): point = 105
   Insn 251(l2): point = 108
   Insn 249(l2): point = 110
   Insn 206(l2): point = 113
   Insn 204(l2): point = 115
   Insn 161(l2): point = 118
   Insn 159(l2): point = 120
   Insn 116(l2): point = 123
   Insn 114(l2): point = 125
   Insn 94(l2): point = 128
   Insn 93(l2): point = 130
   Insn 87(l2): point = 133
   Insn 401(l2): point = 135
   Insn 85(l2): point = 137
   Insn 84(l2): point = 139
   Insn 83(l2): point = 141
   Insn 82(l2): point = 143
   Insn 411(l2): point = 146
   Insn 75(l2): point = 148
   Insn 400(l2): point = 150
   Insn 73(l2): point = 152
   Insn 72(l2): point = 154
   Insn 71(l2): point = 156
   Insn 70(l2): point = 158
   Insn 67(l2): point = 161
   Insn 65(l2): point = 163
   Insn 59(l2): point = 165
   Insn 105(l2): point = 168
   Insn 402(l2): point = 170
   Insn 103(l2): point = 172
   Insn 102(l2): point = 174
   Insn 101(l2): point = 176
   Insn 100(l2): point = 178
   Insn 97(l2): point = 181
   Insn 96(l2): point = 183
   Insn 148(l2): point = 186
   Insn 403(l2): point = 188
   Insn 146(l2): point = 190
   Insn 145(l2): point = 192
   Insn 144(l2): point = 194
   Insn 143(l2): point = 196
   Insn 133(l2): point = 199
   Insn 132(l2): point = 201
   Insn 131(l2): point = 203
   Insn 130(l2): point = 205
   Insn 121(l2): point = 208
   Insn 120(l2): point = 210
   Insn 129(l2): point = 212
   Insn 140(l2): point = 215
   Insn 139(l2): point = 217
   Insn 138(l2): point = 219
   Insn 137(l2): point = 221
   Insn 136(l2): point = 224
   Insn 193(l2): point = 227
   Insn 404(l2): point = 229
   Insn 191(l2): point = 231
   Insn 190(l2): point = 233
   Insn 189(l2): point = 235
   Insn 188(l2): point = 237
   Insn 178(l2): point = 240
   Insn 177(l2): point = 242
   Insn 176(l2): point = 244
   Insn 175(l2): point = 246
   Insn 166(l2): point = 249
   Insn 165(l2): point = 251
   Insn 174(l2): point = 253
   Insn 185(l2): point = 256
   Insn 184(l2): point = 258
   Insn 183(l2): point = 260
   Insn 182(l2): point = 262
   Insn 181(l2): point = 265
   Insn 238(l2): point = 268
   Insn 405(l2): point = 270
   Insn 236(l2): point = 272
   Insn 235(l2): point = 274
   Insn 234(l2): point = 276
   Insn 233(l2): point = 278
   Insn 223(l2): point = 281
   Insn 222(l2): point = 283
   Insn 221(l2): point = 285
   Insn 220(l2): point = 287
   Insn 211(l2): point = 290
   Insn 210(l2): point = 292
   Insn 219(l2): point = 294
   Insn 230(l2): point = 297
   Insn 229(l2): point = 299
   Insn 228(l2): point = 301
   Insn 227(l2): point = 303
   Insn 226(l2): point = 306
   Insn 289(l2): point = 309
   Insn 406(l2): point = 311
   Insn 287(l2): point = 313
   Insn 286(l2): point = 315
   Insn 285(l2): point = 317
   Insn 284(l2): point = 319
   Insn 409(l2): point = 322
   Insn 52(l2): point = 324
   Insn 399(l2): point = 326
   Insn 50(l2): point = 328
   Insn 49(l2): point = 330
   Insn 48(l2): point = 332
   Insn 47(l2): point = 334
   Insn 37(l2): point = 337
   Insn 40(l2): point = 340
   Insn 39(l2): point = 342
   Insn 43(l2): point = 345
   Insn 42(l2): point = 347
 a0(r254): [1..3]
 a1(r250): [1..11]
 a2(r251): [1..5]
 a3(r128): [1..7]
 a4(r246): [1..9]
 a5(r127): [1..13]
 a6(r115): [14..23]
 a7(r181): [14..19]
 a8(r126): [1..15]
 a9(r178): [16..21]
 a10(r171): [1..17]
 a11(r182): [20..25]
 a12(r179): [22..27]
 a13(r244): [1..29]
 a14(r180): [26..31]
 a15(r177): [28..33]
 a16(r126): [36..57]
 a17(r127): [36..57]
 a18(r128): [36..57]
 a19(r171): [36..57]
 a20(r244): [36..57]
 a21(r246): [36..57]
 a22(r250): [36..57]
 a23(r251): [36..57]
 a24(r254): [36..57]
 a25(r249): [36..38]
 a26(r119): [36..46]
 a27(r247): [39..44]
 a28(r130): [36..40]
 a29(r129): [36..42]
 a30(r119): [58..349]
 a31(r126): [58..349]
 a32(r127): [58..349]
 a33(r128): [58..349]
 a34(r129): [58..349]
 a35(r130): [58..349]
 a36(r171): [58..349]
 a37(r244): [58..349]
 a38(r246): [58..349]
 a39(r249): [58..349]
 a40(r250): [58..349]
 a41(r251): [58..349]
 a42(r254): [58..349]
 a43(r243): [68..75]
 a44(r125): [322..324] [281..309] [240..268] [199..227] [181..186] [168..168] [146..148] [72..133]
 a45(r262): [310..311]
 a46(r242): [83..84]
 a47(r240): [85..87]
 a48(r164): [87..101]
 a49(r241): [87..89]
 a50(r235): [95..96]
 a51(r120): [168..308] [95..165]
 a52(r233): [97..99]
 a53(r234): [99..105]
 a54(r228): [102..103]
 a55(r226): [109..110]
 a56(r261): [269..270]
 a57(r224): [300..301]
 a58(r222): [302..304]
 a59(r154): [304..308] [281..290]
 a60(r223): [304..306]
 a61(r220): [284..285]
 a62(r218): [286..288]
 a63(r219): [288..294]
 a64(r216): [291..292]
 a65(r214): [114..115]
 a66(r260): [228..229]
 a67(r212): [259..260]
 a68(r210): [261..263]
 a69(r144): [263..267] [240..249]
 a70(r211): [263..265]
 a71(r208): [243..244]
 a72(r206): [245..247]
 a73(r207): [247..253]
 a74(r204): [250..251]
 a75(r202): [119..120]
 a76(r259): [187..188]
 a77(r200): [218..219]
 a78(r198): [220..222]
 a79(r134): [222..226] [199..208]
 a80(r199): [222..224]
 a81(r196): [202..203]
 a82(r194): [204..206]
 a83(r195): [206..212]
 a84(r192): [209..210]
 a85(r190): [124..125]
 a86(r258): [169..170]
 a87(r257): [134..135]
 a88(r256): [149..150]
 a89(r188): [162..163]
 a90(r255): [325..326]
Compressing live ranges: from 350 to 101 - 28%
Ranges after the compression:
 a0(r254): [0..1]
 a1(r250): [0..1]
 a2(r251): [0..1]
 a3(r128): [0..1]
 a4(r246): [0..1]
 a5(r127): [0..1]
 a6(r115): [2..9]
 a7(r181): [2..5]
 a8(r126): [0..3]
 a9(r178): [4..7]
 a10(r171): [0..5]
 a11(r182): [6..9]
 a12(r179): [8..11]
 a13(r244): [0..13]
 a14(r180): [10..13]
 a15(r177): [12..13]
 a16(r126): [14..17]
 a17(r127): [14..17]
 a18(r128): [14..17]
 a19(r171): [14..17]
 a20(r244): [14..17]
 a21(r246): [14..17]
 a22(r250): [14..17]
 a23(r251): [14..17]
 a24(r254): [14..17]
 a25(r249): [14..15]
 a26(r119): [14..17]
 a27(r247): [16..17]
 a28(r130): [14..17]
 a29(r129): [14..17]
 a30(r119): [18..100]
 a31(r126): [18..100]
 a32(r127): [18..100]
 a33(r128): [18..100]
 a34(r129): [18..100]
 a35(r130): [18..100]
 a36(r171): [18..100]
 a37(r244): [18..100]
 a38(r246): [18..100]
 a39(r249): [18..100]
 a40(r250): [18..100]
 a41(r251): [18..100]
 a42(r254): [18..100]
 a43(r243): [18..19]
 a44(r125): [97..98] [83..94] [69..80] [55..66] [51..52] [48..48] [42..43] [18..39]
 a45(r262): [95..96]
 a46(r242): [20..21]
 a47(r240): [22..23]
 a48(r164): [23..29]
 a49(r241): [23..24]
 a50(r235): [25..26]
 a51(r120): [25..94]
 a52(r233): [27..28]
 a53(r234): [28..31]
 a54(r228): [30..31]
 a55(r226): [32..33]
 a56(r261): [81..82]
 a57(r224): [90..91]
 a58(r222): [92..93]
 a59(r154): [93..94] [83..87]
 a60(r223): [93..94]
 a61(r220): [83..84]
 a62(r218): [85..86]
 a63(r219): [86..89]
 a64(r216): [88..89]
 a65(r214): [34..35]
 a66(r260): [67..68]
 a67(r212): [76..77]
 a68(r210): [78..79]
 a69(r144): [79..80] [69..73]
 a70(r211): [79..80]
 a71(r208): [69..70]
 a72(r206): [71..72]
 a73(r207): [72..75]
 a74(r204): [74..75]
 a75(r202): [36..37]
 a76(r259): [53..54]
 a77(r200): [62..63]
 a78(r198): [64..65]
 a79(r134): [65..66] [55..59]
 a80(r199): [65..66]
 a81(r196): [55..56]
 a82(r194): [57..58]
 a83(r195): [58..61]
 a84(r192): [60..61]
 a85(r190): [38..39]
 a86(r258): [49..50]
 a87(r257): [40..41]
 a88(r256): [44..45]
 a89(r188): [46..47]
 a90(r255): [99..100]
    Creating cap  a91(r249,l0: a25(r249,l1))
    Creating cap  a92(r119,l0: a26(r119,l1))
    Creating cap  a93(r247,l0: a27(r247,l1))
    Creating cap  a94(r130,l0: a28(r130,l1))
    Creating cap  a95(r129,l0: a29(r129,l1))
    Creating cap  a96(r243,l1: a43(r243,l2))
    Creating cap  a97(r125,l1: a44(r125,l2))
    Creating cap  a98(r262,l1: a45(r262,l2))
    Creating cap  a99(r242,l1: a46(r242,l2))
    Creating cap  a100(r240,l1: a47(r240,l2))
    Creating cap  a101(r164,l1: a48(r164,l2))
    Creating cap  a102(r241,l1: a49(r241,l2))
    Creating cap  a103(r235,l1: a50(r235,l2))
    Creating cap  a104(r120,l1: a51(r120,l2))
    Creating cap  a105(r233,l1: a52(r233,l2))
    Creating cap  a106(r234,l1: a53(r234,l2))
    Creating cap  a107(r228,l1: a54(r228,l2))
    Creating cap  a108(r226,l1: a55(r226,l2))
    Creating cap  a109(r261,l1: a56(r261,l2))
    Creating cap  a110(r224,l1: a57(r224,l2))
    Creating cap  a111(r222,l1: a58(r222,l2))
    Creating cap  a112(r154,l1: a59(r154,l2))
    Creating cap  a113(r223,l1: a60(r223,l2))
    Creating cap  a114(r220,l1: a61(r220,l2))
    Creating cap  a115(r218,l1: a62(r218,l2))
    Creating cap  a116(r219,l1: a63(r219,l2))
    Creating cap  a117(r216,l1: a64(r216,l2))
    Creating cap  a118(r214,l1: a65(r214,l2))
    Creating cap  a119(r260,l1: a66(r260,l2))
    Creating cap  a120(r212,l1: a67(r212,l2))
    Creating cap  a121(r210,l1: a68(r210,l2))
    Creating cap  a122(r144,l1: a69(r144,l2))
    Creating cap  a123(r211,l1: a70(r211,l2))
    Creating cap  a124(r208,l1: a71(r208,l2))
    Creating cap  a125(r206,l1: a72(r206,l2))
    Creating cap  a126(r207,l1: a73(r207,l2))
    Creating cap  a127(r204,l1: a74(r204,l2))
    Creating cap  a128(r202,l1: a75(r202,l2))
    Creating cap  a129(r259,l1: a76(r259,l2))
    Creating cap  a130(r200,l1: a77(r200,l2))
    Creating cap  a131(r198,l1: a78(r198,l2))
    Creating cap  a132(r134,l1: a79(r134,l2))
    Creating cap  a133(r199,l1: a80(r199,l2))
    Creating cap  a134(r196,l1: a81(r196,l2))
    Creating cap  a135(r194,l1: a82(r194,l2))
    Creating cap  a136(r195,l1: a83(r195,l2))
    Creating cap  a137(r192,l1: a84(r192,l2))
    Creating cap  a138(r190,l1: a85(r190,l2))
    Creating cap  a139(r258,l1: a86(r258,l2))
    Creating cap  a140(r257,l1: a87(r257,l2))
    Creating cap  a141(r256,l1: a88(r256,l2))
    Creating cap  a142(r188,l1: a89(r188,l2))
    Creating cap  a143(r255,l1: a90(r255,l2))
    Creating cap  a144(r243,l0: a96(r243,l1: a43(r243,l2)))
    Creating cap  a145(r125,l0: a97(r125,l1: a44(r125,l2)))
    Creating cap  a146(r262,l0: a98(r262,l1: a45(r262,l2)))
    Creating cap  a147(r242,l0: a99(r242,l1: a46(r242,l2)))
    Creating cap  a148(r240,l0: a100(r240,l1: a47(r240,l2)))
    Creating cap  a149(r164,l0: a101(r164,l1: a48(r164,l2)))
    Creating cap  a150(r241,l0: a102(r241,l1: a49(r241,l2)))
    Creating cap  a151(r235,l0: a103(r235,l1: a50(r235,l2)))
    Creating cap  a152(r120,l0: a104(r120,l1: a51(r120,l2)))
    Creating cap  a153(r233,l0: a105(r233,l1: a52(r233,l2)))
    Creating cap  a154(r234,l0: a106(r234,l1: a53(r234,l2)))
    Creating cap  a155(r228,l0: a107(r228,l1: a54(r228,l2)))
    Creating cap  a156(r226,l0: a108(r226,l1: a55(r226,l2)))
    Creating cap  a157(r261,l0: a109(r261,l1: a56(r261,l2)))
    Creating cap  a158(r224,l0: a110(r224,l1: a57(r224,l2)))
    Creating cap  a159(r222,l0: a111(r222,l1: a58(r222,l2)))
    Creating cap  a160(r154,l0: a112(r154,l1: a59(r154,l2)))
    Creating cap  a161(r223,l0: a113(r223,l1: a60(r223,l2)))
    Creating cap  a162(r220,l0: a114(r220,l1: a61(r220,l2)))
    Creating cap  a163(r218,l0: a115(r218,l1: a62(r218,l2)))
    Creating cap  a164(r219,l0: a116(r219,l1: a63(r219,l2)))
    Creating cap  a165(r216,l0: a117(r216,l1: a64(r216,l2)))
    Creating cap  a166(r214,l0: a118(r214,l1: a65(r214,l2)))
    Creating cap  a167(r260,l0: a119(r260,l1: a66(r260,l2)))
    Creating cap  a168(r212,l0: a120(r212,l1: a67(r212,l2)))
    Creating cap  a169(r210,l0: a121(r210,l1: a68(r210,l2)))
    Creating cap  a170(r144,l0: a122(r144,l1: a69(r144,l2)))
    Creating cap  a171(r211,l0: a123(r211,l1: a70(r211,l2)))
    Creating cap  a172(r208,l0: a124(r208,l1: a71(r208,l2)))
    Creating cap  a173(r206,l0: a125(r206,l1: a72(r206,l2)))
    Creating cap  a174(r207,l0: a126(r207,l1: a73(r207,l2)))
    Creating cap  a175(r204,l0: a127(r204,l1: a74(r204,l2)))
    Creating cap  a176(r202,l0: a128(r202,l1: a75(r202,l2)))
    Creating cap  a177(r259,l0: a129(r259,l1: a76(r259,l2)))
    Creating cap  a178(r200,l0: a130(r200,l1: a77(r200,l2)))
    Creating cap  a179(r198,l0: a131(r198,l1: a78(r198,l2)))
    Creating cap  a180(r134,l0: a132(r134,l1: a79(r134,l2)))
    Creating cap  a181(r199,l0: a133(r199,l1: a80(r199,l2)))
    Creating cap  a182(r196,l0: a134(r196,l1: a81(r196,l2)))
    Creating cap  a183(r194,l0: a135(r194,l1: a82(r194,l2)))
    Creating cap  a184(r195,l0: a136(r195,l1: a83(r195,l2)))
    Creating cap  a185(r192,l0: a137(r192,l1: a84(r192,l2)))
    Creating cap  a186(r190,l0: a138(r190,l1: a85(r190,l2)))
    Creating cap  a187(r258,l0: a139(r258,l1: a86(r258,l2)))
    Creating cap  a188(r257,l0: a140(r257,l1: a87(r257,l2)))
    Creating cap  a189(r256,l0: a141(r256,l1: a88(r256,l2)))
    Creating cap  a190(r188,l0: a142(r188,l1: a89(r188,l2)))
    Creating cap  a191(r255,l0: a143(r255,l1: a90(r255,l2)))
+++Allocating 3864 bytes for conflict table (uncompressed size 4608)
;; a0(r254,l0) conflicts: a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a1(r250,l0) conflicts: a0(r254,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a2(r251,l0) conflicts: a0(r254,l0) a1(r250,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a3(r128,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a4(r246,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a5(r127,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a6(r115,l0) conflicts: a8(r126,l0) a10(r171,l0) a13(r244,l0) a7(r181,l0) a9(r178,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r181,l0) conflicts: a8(r126,l0) a10(r171,l0) a13(r244,l0) a6(r115,l0) a9(r178,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r126,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a10(r171,l0) a13(r244,l0) a7(r181,l0) a6(r115,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a9(r178,l0) conflicts: a10(r171,l0) a13(r244,l0) a7(r181,l0) a6(r115,l0) a11(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r171,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a13(r244,l0) a7(r181,l0) a6(r115,l0) a9(r178,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a11(r182,l0) conflicts: a9(r178,l0) a12(r179,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r179,l0) conflicts: a11(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r244,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a7(r181,l0) a6(r115,l0) a9(r178,l0) a14(r180,l0) a15(r177,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a14(r180,l0) conflicts: a13(r244,l0) a15(r177,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r177,l0) conflicts: a13(r244,l0) a14(r180,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r126,l1) conflicts: a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a17(r127,l1) conflicts: a16(r126,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a18(r128,l1) conflicts: a16(r126,l1) a17(r127,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a19(r171,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a20(r244,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a21(r246,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a22(r250,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a23(r251,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a24(r254,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a25(r249,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a26(r119,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a28(r130,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a27(r247,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r130,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a29(r129,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a29(r129,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a27(r247,l1) a96(r243,l1) a97(r125,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1) a98(r262,l1) a143(r255,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a30(r119,l2) conflicts: a43(r243,l2) a44(r125,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a31(r126,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a32(r127,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a33(r128,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a34(r129,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a35(r130,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a36(r171,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a37(r244,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a38(r246,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a39(r249,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a40(r250,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a41(r251,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a42(r254,l2) conflicts: a43(r243,l2) a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2) a45(r262,l2) a90(r255,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a43(r243,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r125,l2) conflicts: a43(r243,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a46(r242,l2) a50(r235,l2) a51(r120,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a81(r196,l2) a77(r200,l2) a71(r208,l2) a67(r212,l2) a61(r220,l2) a57(r224,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r262,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r242,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r240,l2) conflicts: a49(r241,l2) a48(r164,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r164,l2) conflicts: a47(r240,l2) a49(r241,l2) a50(r235,l2) a52(r233,l2) a53(r234,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r241,l2) conflicts: a47(r240,l2) a48(r164,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r235,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a48(r164,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r120,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a50(r235,l2) a55(r226,l2) a65(r214,l2) a75(r202,l2) a85(r190,l2) a87(r257,l2) a88(r256,l2) a89(r188,l2) a86(r258,l2) a76(r259,l2) a81(r196,l2) a77(r200,l2) a66(r260,l2) a71(r208,l2) a67(r212,l2) a56(r261,l2) a61(r220,l2) a57(r224,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a52(r233,l2) conflicts: a48(r164,l2) a53(r234,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r234,l2) conflicts: a48(r164,l2) a52(r233,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r228,l2) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r226,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r261,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r224,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r222,l2) conflicts: a59(r154,l2) a60(r223,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r154,l2) conflicts: a61(r220,l2) a62(r218,l2) a63(r219,l2) a58(r222,l2) a60(r223,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r223,l2) conflicts: a59(r154,l2) a58(r222,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r220,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2) a59(r154,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r218,l2) conflicts: a59(r154,l2) a63(r219,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r219,l2) conflicts: a59(r154,l2) a62(r218,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r216,l2) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r214,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r260,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r212,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r210,l2) conflicts: a69(r144,l2) a70(r211,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r144,l2) conflicts: a71(r208,l2) a72(r206,l2) a73(r207,l2) a68(r210,l2) a70(r211,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r211,l2) conflicts: a69(r144,l2) a68(r210,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r208,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2) a69(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r206,l2) conflicts: a69(r144,l2) a73(r207,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r207,l2) conflicts: a69(r144,l2) a72(r206,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r204,l2) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r202,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r259,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r200,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r198,l2) conflicts: a79(r134,l2) a80(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r134,l2) conflicts: a81(r196,l2) a82(r194,l2) a83(r195,l2) a78(r198,l2) a80(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r199,l2) conflicts: a79(r134,l2) a78(r198,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r196,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2) a79(r134,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r194,l2) conflicts: a79(r134,l2) a83(r195,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r195,l2) conflicts: a79(r134,l2) a82(r194,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r192,l2) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r190,l2) conflicts: a44(r125,l2) a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r258,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r257,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r256,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r188,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2) a51(r120,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a90(r255,l2) conflicts: a30(r119,l2) a31(r126,l2) a32(r127,l2) a33(r128,l2) a34(r129,l2) a35(r130,l2) a36(r171,l2) a37(r244,l2) a38(r246,l2) a39(r249,l2) a40(r250,l2) a41(r251,l2) a42(r254,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a91(r249,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a92(r119,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a94(r130,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a93(r247,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r130,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a95(r129,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a95(r129,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a93(r247,l0) a144(r243,l0) a145(r125,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0) a146(r262,l0) a191(r255,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a96(r243,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r125,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a96(r243,l1) a99(r242,l1) a103(r235,l1) a104(r120,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a134(r196,l1) a130(r200,l1) a124(r208,l1) a120(r212,l1) a114(r220,l1) a110(r224,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r262,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r242,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r240,l1) conflicts: a102(r241,l1) a101(r164,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r164,l1) conflicts: a100(r240,l1) a102(r241,l1) a103(r235,l1) a105(r233,l1) a106(r234,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r241,l1) conflicts: a100(r240,l1) a101(r164,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r235,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a101(r164,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r120,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a103(r235,l1) a108(r226,l1) a118(r214,l1) a128(r202,l1) a138(r190,l1) a140(r257,l1) a141(r256,l1) a142(r188,l1) a139(r258,l1) a129(r259,l1) a134(r196,l1) a130(r200,l1) a119(r260,l1) a124(r208,l1) a120(r212,l1) a109(r261,l1) a114(r220,l1) a110(r224,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a105(r233,l1) conflicts: a101(r164,l1) a106(r234,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r234,l1) conflicts: a101(r164,l1) a105(r233,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a107(r228,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r226,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r261,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r224,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r222,l1) conflicts: a112(r154,l1) a113(r223,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r154,l1) conflicts: a114(r220,l1) a115(r218,l1) a116(r219,l1) a111(r222,l1) a113(r223,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r223,l1) conflicts: a112(r154,l1) a111(r222,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a114(r220,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1) a112(r154,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a115(r218,l1) conflicts: a112(r154,l1) a116(r219,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r219,l1) conflicts: a112(r154,l1) a115(r218,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r216,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r214,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a119(r260,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a120(r212,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r210,l1) conflicts: a122(r144,l1) a123(r211,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a122(r144,l1) conflicts: a124(r208,l1) a125(r206,l1) a126(r207,l1) a121(r210,l1) a123(r211,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a123(r211,l1) conflicts: a122(r144,l1) a121(r210,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a124(r208,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1) a122(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a125(r206,l1) conflicts: a122(r144,l1) a126(r207,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a126(r207,l1) conflicts: a122(r144,l1) a125(r206,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a127(r204,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a128(r202,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a129(r259,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a130(r200,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a131(r198,l1) conflicts: a132(r134,l1) a133(r199,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a132(r134,l1) conflicts: a134(r196,l1) a135(r194,l1) a136(r195,l1) a131(r198,l1) a133(r199,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a133(r199,l1) conflicts: a132(r134,l1) a131(r198,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a134(r196,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1) a132(r134,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a135(r194,l1) conflicts: a132(r134,l1) a136(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a136(r195,l1) conflicts: a132(r134,l1) a135(r194,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a137(r192,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a138(r190,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a97(r125,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a139(r258,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a140(r257,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a141(r256,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a142(r188,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1) a104(r120,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a143(r255,l1) conflicts: a16(r126,l1) a17(r127,l1) a18(r128,l1) a19(r171,l1) a20(r244,l1) a21(r246,l1) a22(r250,l1) a23(r251,l1) a24(r254,l1) a25(r249,l1) a26(r119,l1) a28(r130,l1) a29(r129,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a144(r243,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a145(r125,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a144(r243,l0) a147(r242,l0) a151(r235,l0) a152(r120,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a182(r196,l0) a178(r200,l0) a172(r208,l0) a168(r212,l0) a162(r220,l0) a158(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a146(r262,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a147(r242,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a148(r240,l0) conflicts: a150(r241,l0) a149(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a149(r164,l0) conflicts: a148(r240,l0) a150(r241,l0) a151(r235,l0) a153(r233,l0) a154(r234,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a150(r241,l0) conflicts: a148(r240,l0) a149(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r235,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a149(r164,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a152(r120,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a151(r235,l0) a156(r226,l0) a166(r214,l0) a176(r202,l0) a186(r190,l0) a188(r257,l0) a189(r256,l0) a190(r188,l0) a187(r258,l0) a177(r259,l0) a182(r196,l0) a178(r200,l0) a167(r260,l0) a172(r208,l0) a168(r212,l0) a157(r261,l0) a162(r220,l0) a158(r224,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a153(r233,l0) conflicts: a149(r164,l0) a154(r234,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r234,l0) conflicts: a149(r164,l0) a153(r233,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r228,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r226,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r261,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a158(r224,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a159(r222,l0) conflicts: a160(r154,l0) a161(r223,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r154,l0) conflicts: a162(r220,l0) a163(r218,l0) a164(r219,l0) a159(r222,l0) a161(r223,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r223,l0) conflicts: a160(r154,l0) a159(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r220,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0) a160(r154,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r218,l0) conflicts: a160(r154,l0) a164(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a164(r219,l0) conflicts: a160(r154,l0) a163(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r216,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a166(r214,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r260,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a168(r212,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a169(r210,l0) conflicts: a170(r144,l0) a171(r211,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a170(r144,l0) conflicts: a172(r208,l0) a173(r206,l0) a174(r207,l0) a169(r210,l0) a171(r211,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a171(r211,l0) conflicts: a170(r144,l0) a169(r210,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a172(r208,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0) a170(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a173(r206,l0) conflicts: a170(r144,l0) a174(r207,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a174(r207,l0) conflicts: a170(r144,l0) a173(r206,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a175(r204,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r202,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a177(r259,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a178(r200,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r198,l0) conflicts: a180(r134,l0) a181(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a180(r134,l0) conflicts: a182(r196,l0) a183(r194,l0) a184(r195,l0) a179(r198,l0) a181(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a181(r199,l0) conflicts: a180(r134,l0) a179(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a182(r196,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0) a180(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a183(r194,l0) conflicts: a180(r134,l0) a184(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a184(r195,l0) conflicts: a180(r134,l0) a183(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a185(r192,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a186(r190,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a145(r125,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a187(r258,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a188(r257,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a189(r256,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a190(r188,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0) a152(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a191(r255,l0) conflicts: a0(r254,l0) a1(r250,l0) a2(r251,l0) a3(r128,l0) a4(r246,l0) a5(r127,l0) a8(r126,l0) a10(r171,l0) a13(r244,l0) a91(r249,l0) a92(r119,l0) a94(r130,l0) a95(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a9(r178)<->a12(r179)@1:shuffle
  cp1:a7(r181)<->a11(r182)@1:shuffle
  cp2:a8(r126)<->a9(r178)@1:shuffle
  cp3:a5(r127)<->a7(r181)@1:shuffle
  cp4:a5(r127)<->a6(r115)@1:shuffle
  cp5:a25(r249)<->a27(r247)@2:shuffle
  cp6:a44(r125)<->a45(r262)@1:shuffle
  cp7:a46(r242)<->a47(r240)@5:shuffle
  cp8:a48(r164)<->a54(r228)@16:shuffle
  cp9:a50(r235)<->a52(r233)@16:shuffle
  cp10:a44(r125)<->a56(r261)@1:shuffle
  cp11:a57(r224)<->a58(r222)@5:shuffle
  cp12:a59(r154)<->a64(r216)@16:shuffle
  cp13:a61(r220)<->a62(r218)@16:shuffle
  cp14:a44(r125)<->a66(r260)@1:shuffle
  cp15:a67(r212)<->a68(r210)@5:shuffle
  cp16:a69(r144)<->a74(r204)@16:shuffle
  cp17:a71(r208)<->a72(r206)@16:shuffle
  cp18:a44(r125)<->a76(r259)@1:shuffle
  cp19:a77(r200)<->a78(r198)@5:shuffle
  cp20:a79(r134)<->a84(r192)@16:shuffle
  cp21:a81(r196)<->a82(r194)@16:shuffle
  cp22:a44(r125)<->a86(r258)@1:shuffle
  cp23:a44(r125)<->a87(r257)@12:shuffle
  cp24:a44(r125)<->a88(r256)@12:shuffle
  cp25:a44(r125)<->a90(r255)@89:shuffle
  cp26:a91(r249)<->a93(r247)@2:shuffle
  cp27:a97(r125)<->a98(r262)@1:shuffle
  cp28:a99(r242)<->a100(r240)@5:shuffle
  cp29:a101(r164)<->a107(r228)@16:shuffle
  cp30:a103(r235)<->a105(r233)@16:shuffle
  cp31:a97(r125)<->a109(r261)@1:shuffle
  cp32:a110(r224)<->a111(r222)@5:shuffle
  cp33:a112(r154)<->a117(r216)@16:shuffle
  cp34:a114(r220)<->a115(r218)@16:shuffle
  cp35:a97(r125)<->a119(r260)@1:shuffle
  cp36:a120(r212)<->a121(r210)@5:shuffle
  cp37:a122(r144)<->a127(r204)@16:shuffle
  cp38:a124(r208)<->a125(r206)@16:shuffle
  cp39:a97(r125)<->a129(r259)@1:shuffle
  cp40:a130(r200)<->a131(r198)@5:shuffle
  cp41:a132(r134)<->a137(r192)@16:shuffle
  cp42:a134(r196)<->a135(r194)@16:shuffle
  cp43:a97(r125)<->a139(r258)@1:shuffle
  cp44:a97(r125)<->a140(r257)@12:shuffle
  cp45:a97(r125)<->a141(r256)@12:shuffle
  cp46:a97(r125)<->a143(r255)@89:shuffle
  cp47:a145(r125)<->a146(r262)@1:shuffle
  cp48:a147(r242)<->a148(r240)@5:shuffle
  cp49:a149(r164)<->a155(r228)@16:shuffle
  cp50:a151(r235)<->a153(r233)@16:shuffle
  cp51:a145(r125)<->a157(r261)@1:shuffle
  cp52:a158(r224)<->a159(r222)@5:shuffle
  cp53:a160(r154)<->a165(r216)@16:shuffle
  cp54:a162(r220)<->a163(r218)@16:shuffle
  cp55:a145(r125)<->a167(r260)@1:shuffle
  cp56:a168(r212)<->a169(r210)@5:shuffle
  cp57:a170(r144)<->a175(r204)@16:shuffle
  cp58:a172(r208)<->a173(r206)@16:shuffle
  cp59:a145(r125)<->a177(r259)@1:shuffle
  cp60:a178(r200)<->a179(r198)@5:shuffle
  cp61:a180(r134)<->a185(r192)@16:shuffle
  cp62:a182(r196)<->a183(r194)@16:shuffle
  cp63:a145(r125)<->a187(r258)@1:shuffle
  cp64:a145(r125)<->a188(r257)@12:shuffle
  cp65:a145(r125)<->a189(r256)@12:shuffle
  cp66:a145(r125)<->a191(r255)@89:shuffle
  pref0:a45(r262)<-hr0@18
  pref1:a56(r261)<-hr0@18
  pref2:a66(r260)<-hr0@18
  pref3:a76(r259)<-hr0@18
  pref4:a86(r258)<-hr0@26
  pref5:a87(r257)<-hr0@200
  pref6:a88(r256)<-hr0@200
  pref7:a90(r255)<-hr0@1436
  pref8:a98(r262)<-hr0@9
  pref9:a146(r262)<-hr0@9
  pref10:a109(r261)<-hr0@9
  pref11:a157(r261)<-hr0@9
  pref12:a119(r260)<-hr0@9
  pref13:a167(r260)<-hr0@9
  pref14:a129(r259)<-hr0@9
  pref15:a177(r259)<-hr0@9
  pref16:a139(r258)<-hr0@13
  pref17:a187(r258)<-hr0@13
  pref18:a140(r257)<-hr0@100
  pref19:a188(r257)<-hr0@100
  pref20:a141(r256)<-hr0@100
  pref21:a189(r256)<-hr0@100
  pref22:a143(r255)<-hr0@718
  pref23:a191(r255)<-hr0@718
  regions=3, blocks=34, points=101
    allocnos=192 (big 0), copies=67, conflicts=60, ranges=101

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 33 2(->32:l1)
    all: 0r254 1r250 2r251 3r128 4r246 5r127 6r115 7r181 8r126 9r178 10r171 11r182 12r179 13r244 14r180 15r177 91r249 92r119 93r247 94r130 95r129 144r243 145r125 146r262 147r242 148r240 149r164 150r241 151r235 152r120 153r233 154r234 155r228 156r226 157r261 158r224 159r222 160r154 161r223 162r220 163r218 164r219 165r216 166r214 167r260 168r212 169r210 170r144 171r211 172r208 173r206 174r207 175r204 176r202 177r259 178r200 179r198 180r134 181r199 182r196 183r194 184r195 185r192 186r190 187r258 188r257 189r256 190r188 191r255
    modified regnos: 115 119 120 125 126 127 128 129 130 134 144 154 164 171 177 178 179 180 181 182 188 190 192 194 195 196 198 199 200 202 204 206 207 208 210 211 212 214 216 218 219 220 222 223 224 226 228 233 234 235 240 241 242 243 244 246 247 249 250 251 254 255 256 257 258 259 260 261 262
    border:
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=3
    Hard reg set forest:
      0:( 0-12 14 16-47)@7180
        1:( 16-47)@53760
        2:( 0-12 14)@411012
          3:( 3-11)@177440
            4:( 4-11)@112180
      Spill a155(r228,l0: a107(r228,l1: a54(r228,l2)))
      Spill a165(r216,l0: a117(r216,l1: a64(r216,l2)))
      Spill a175(r204,l0: a127(r204,l1: a74(r204,l2)))
      Spill a185(r192,l0: a137(r192,l1: a84(r192,l2)))
      Allocno a0r254 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a1r250 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a2r251 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a3r128 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a4r246 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a5r127 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a6r115 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a7r181 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a8r126 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a9r178 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a10r171 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a11r182 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a12r179 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a13r244 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a14r180 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a15r177 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a91r249 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a92r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-2 12-106)
      Allocno a93r247 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a94r130 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a95r129 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a144r243 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a145r125 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a146r262 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a147r242 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a148r240 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a149r164 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a150r241 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a151r235 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a152r120 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a153r233 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a154r234 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a156r226 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a157r261 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a158r224 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a159r222 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a160r154 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a161r223 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a162r220 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a163r218 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a164r219 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a166r214 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a167r260 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a168r212 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a169r210 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a170r144 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a171r211 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a172r208 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a173r206 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a174r207 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a176r202 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a177r259 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a178r200 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a179r198 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a180r134 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a181r199 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a182r196 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a183r194 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a184r195 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a186r190 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a187r258 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a188r257 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a189r256 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a190r188 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a191r255 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Forming thread by copy 49:a149r164-a155r228 (freq=16):
        Result (freq=581): a149r164(313) a155r228(268)
      Forming thread by copy 50:a151r235-a153r233 (freq=16):
        Result (freq=536): a151r235(268) a153r233(268)
      Forming thread by copy 53:a160r154-a165r216 (freq=16):
        Result (freq=581): a160r154(313) a165r216(268)
      Forming thread by copy 54:a162r220-a163r218 (freq=16):
        Result (freq=536): a162r220(268) a163r218(268)
      Forming thread by copy 57:a170r144-a175r204 (freq=16):
        Result (freq=581): a170r144(313) a175r204(268)
      Forming thread by copy 58:a172r208-a173r206 (freq=16):
        Result (freq=536): a172r208(268) a173r206(268)
      Forming thread by copy 61:a180r134-a185r192 (freq=16):
        Result (freq=581): a180r134(313) a185r192(268)
      Forming thread by copy 62:a182r196-a183r194 (freq=16):
        Result (freq=536): a182r196(268) a183r194(268)
      Forming thread by copy 48:a147r242-a148r240 (freq=5):
        Result (freq=180): a147r242(90) a148r240(90)
      Forming thread by copy 52:a158r224-a159r222 (freq=5):
        Result (freq=180): a158r224(90) a159r222(90)
      Forming thread by copy 56:a168r212-a169r210 (freq=5):
        Result (freq=180): a168r212(90) a169r210(90)
      Forming thread by copy 60:a178r200-a179r198 (freq=5):
        Result (freq=180): a178r200(90) a179r198(90)
      Forming thread by copy 0:a9r178-a12r179 (freq=1):
        Result (freq=4): a9r178(2) a12r179(2)
      Forming thread by copy 1:a7r181-a11r182 (freq=1):
        Result (freq=4): a7r181(2) a11r182(2)
      Pushing a15(r177,l0)(cost 0)
      Pushing a14(r180,l0)(cost 0)
      Pushing a6(r115,l0)(cost 0)
      Pushing a9(r178,l0)(cost 0)
      Pushing a12(r179,l0)(cost 0)
      Pushing a7(r181,l0)(cost 0)
      Pushing a11(r182,l0)(cost 0)
      Pushing a177(r259,l0: a129(r259,l1: a76(r259,l2)))(cost 0)
      Pushing a167(r260,l0: a119(r260,l1: a66(r260,l2)))(cost 0)
      Pushing a157(r261,l0: a109(r261,l1: a56(r261,l2)))(cost 0)
      Pushing a146(r262,l0: a98(r262,l1: a45(r262,l2)))(cost 0)
      Pushing a187(r258,l0: a139(r258,l1: a86(r258,l2)))(cost 0)
      Pushing a93(r247,l0: a27(r247,l1))(cost 0)
      Pushing a181(r199,l0: a133(r199,l1: a80(r199,l2)))(cost 0)
      Pushing a171(r211,l0: a123(r211,l1: a70(r211,l2)))(cost 0)
      Pushing a161(r223,l0: a113(r223,l1: a60(r223,l2)))(cost 0)
      Pushing a150(r241,l0: a102(r241,l1: a49(r241,l2)))(cost 0)
      Pushing a178(r200,l0: a130(r200,l1: a77(r200,l2)))(cost 0)
      Pushing a179(r198,l0: a131(r198,l1: a78(r198,l2)))(cost 0)
      Pushing a168(r212,l0: a120(r212,l1: a67(r212,l2)))(cost 0)
      Pushing a169(r210,l0: a121(r210,l1: a68(r210,l2)))(cost 0)
      Pushing a158(r224,l0: a110(r224,l1: a57(r224,l2)))(cost 0)
      Pushing a159(r222,l0: a111(r222,l1: a58(r222,l2)))(cost 0)
      Pushing a147(r242,l0: a99(r242,l1: a46(r242,l2)))(cost 0)
      Pushing a148(r240,l0: a100(r240,l1: a47(r240,l2)))(cost 0)
      Pushing a189(r256,l0: a141(r256,l1: a88(r256,l2)))(cost 0)
      Pushing a188(r257,l0: a140(r257,l1: a87(r257,l2)))(cost 0)
      Pushing a184(r195,l0: a136(r195,l1: a83(r195,l2)))(cost 0)
      Pushing a174(r207,l0: a126(r207,l1: a73(r207,l2)))(cost 0)
      Pushing a164(r219,l0: a116(r219,l1: a63(r219,l2)))(cost 0)
      Pushing a154(r234,l0: a106(r234,l1: a53(r234,l2)))(cost 0)
      Pushing a190(r188,l0: a142(r188,l1: a89(r188,l2)))(cost 0)
      Pushing a186(r190,l0: a138(r190,l1: a85(r190,l2)))(cost 0)
      Pushing a176(r202,l0: a128(r202,l1: a75(r202,l2)))(cost 0)
      Pushing a166(r214,l0: a118(r214,l1: a65(r214,l2)))(cost 0)
      Pushing a156(r226,l0: a108(r226,l1: a55(r226,l2)))(cost 0)
      Pushing a182(r196,l0: a134(r196,l1: a81(r196,l2)))(cost 0)
      Forming thread by copy 66:a145r125-a191r255 (freq=89):
        Result (freq=4239): a145r125(2803) a191r255(1436)
      Forming thread by copy 64:a145r125-a188r257 (freq=12):
        Result (freq=4439): a145r125(2803) a188r257(200) a191r255(1436)
      Forming thread by copy 65:a145r125-a189r256 (freq=12):
        Result (freq=4639): a145r125(2803) a189r256(200) a188r257(200) a191r255(1436)
      Forming thread by copy 47:a145r125-a146r262 (freq=1):
        Result (freq=4657): a145r125(2803) a146r262(18) a189r256(200) a188r257(200) a191r255(1436)
      Forming thread by copy 51:a145r125-a157r261 (freq=1):
        Result (freq=4675): a145r125(2803) a157r261(18) a146r262(18) a189r256(200) a188r257(200) a191r255(1436)
      Forming thread by copy 55:a145r125-a167r260 (freq=1):
        Result (freq=4693): a145r125(2803) a167r260(18) a157r261(18) a146r262(18) a189r256(200) a188r257(200) a191r255(1436)
      Forming thread by copy 59:a145r125-a177r259 (freq=1):
        Result (freq=4711): a145r125(2803) a177r259(18) a167r260(18) a157r261(18) a146r262(18) a189r256(200) a188r257(200) a191r255(1436)
      Forming thread by copy 63:a145r125-a187r258 (freq=1):
        Result (freq=4737): a145r125(2803) a187r258(26) a177r259(18) a167r260(18) a157r261(18) a146r262(18) a189r256(200) a188r257(200) a191r255(1436)
        Making a145(r125,l0: a97(r125,l1: a44(r125,l2))) colorable
      Pushing a183(r194,l0: a135(r194,l1: a82(r194,l2)))(cost 0)
      Pushing a172(r208,l0: a124(r208,l1: a71(r208,l2)))(cost 0)
      Pushing a173(r206,l0: a125(r206,l1: a72(r206,l2)))(cost 0)
      Pushing a162(r220,l0: a114(r220,l1: a61(r220,l2)))(cost 0)
      Pushing a163(r218,l0: a115(r218,l1: a62(r218,l2)))(cost 0)
      Pushing a151(r235,l0: a103(r235,l1: a50(r235,l2)))(cost 0)
      Pushing a153(r233,l0: a105(r233,l1: a52(r233,l2)))(cost 0)
      Pushing a180(r134,l0: a132(r134,l1: a79(r134,l2)))(cost 0)
      Pushing a170(r144,l0: a122(r144,l1: a69(r144,l2)))(cost 0)
      Pushing a160(r154,l0: a112(r154,l1: a59(r154,l2)))(cost 0)
      Pushing a149(r164,l0: a101(r164,l1: a48(r164,l2)))(cost 0)
      Pushing a191(r255,l0: a143(r255,l1: a90(r255,l2)))(cost 0)
      Pushing a144(r243,l0: a96(r243,l1: a43(r243,l2)))(cost 0)
      Pushing a145(r125,l0: a97(r125,l1: a44(r125,l2)))(cost 28030)
      Pushing a4(r246,l0)(potential spill: pri=0, cost=190)
      Pushing a10(r171,l0)(potential spill: pri=2, cost=550)
      Pushing a5(r127,l0)(potential spill: pri=3, cost=690)
      Pushing a0(r254,l0)(potential spill: pri=4, cost=910)
      Pushing a8(r126,l0)(potential spill: pri=9, cost=2010)
        Making a94(r130,l0: a28(r130,l1)) colorable
        Making a95(r129,l0: a29(r129,l1)) colorable
        Making a152(r120,l0: a104(r120,l1: a51(r120,l2))) colorable
      Pushing a152(r120,l0: a104(r120,l1: a51(r120,l2)))(cost 11360)
        Making a1(r250,l0) colorable
        Making a2(r251,l0) colorable
        Making a3(r128,l0) colorable
        Making a13(r244,l0) colorable
      Forming thread by copy 26:a91r249-a93r247 (freq=2):
        Result (freq=254): a91r249(218) a93r247(36)
        Making a91(r249,l0: a25(r249,l1)) colorable
        Making a92(r119,l0: a26(r119,l1)) colorable
      Pushing a2(r251,l0)(cost 2690)
      Pushing a91(r249,l0: a25(r249,l1))(cost 2180)
      Pushing a92(r119,l0: a26(r119,l1))(cost 2840)
      Pushing a13(r244,l0)(cost 10750)
      Pushing a1(r250,l0)(cost 18770)
      Pushing a3(r128,l0)(cost 14510)
      Pushing a95(r129,l0: a29(r129,l1))(cost 36900)
      Pushing a94(r130,l0: a28(r130,l1))(cost 40460)
      Popping a94(r130,l0: a28(r130,l1))  -- assign reg 4
      Popping a95(r129,l0: a29(r129,l1))  -- assign reg 5
      Popping a3(r128,l0)  -- assign reg 6
      Popping a1(r250,l0)  -- assign reg 7
      Popping a13(r244,l0)  -- assign reg 8
      Popping a92(r119,l0: a26(r119,l1))  -- assign reg 9
      Popping a91(r249,l0: a25(r249,l1))  -- assign reg 10
      Popping a2(r251,l0)  -- assign reg 11
      Popping a152(r120,l0: a104(r120,l1: a51(r120,l2)))  -- assign reg 3
      Popping a8(r126,l0)  -- spill
      Popping a0(r254,l0)  -- spill
      Popping a5(r127,l0)  -- spill
      Popping a10(r171,l0)  -- spill
      Popping a4(r246,l0)  -- spill
      Popping a145(r125,l0: a97(r125,l1: a44(r125,l2)))  -- assign reg 0
      Popping a144(r243,l0: a96(r243,l1: a43(r243,l2)))  -- assign reg 3
      Popping a191(r255,l0: a143(r255,l1: a90(r255,l2)))  -- assign reg 0
      Popping a149(r164,l0: a101(r164,l1: a48(r164,l2)))  -- assign reg 31
      Popping a160(r154,l0: a112(r154,l1: a59(r154,l2)))  -- assign reg 31
      Popping a170(r144,l0: a122(r144,l1: a69(r144,l2)))  -- assign reg 31
      Popping a180(r134,l0: a132(r134,l1: a79(r134,l2)))  -- assign reg 31
      Popping a153(r233,l0: a105(r233,l1: a52(r233,l2)))  -- assign reg 30
      Popping a151(r235,l0: a103(r235,l1: a50(r235,l2)))  -- assign reg 30
      Popping a163(r218,l0: a115(r218,l1: a62(r218,l2)))  -- assign reg 30
      Popping a162(r220,l0: a114(r220,l1: a61(r220,l2)))  -- assign reg 30
      Popping a173(r206,l0: a125(r206,l1: a72(r206,l2)))  -- assign reg 30
      Popping a172(r208,l0: a124(r208,l1: a71(r208,l2)))  -- assign reg 30
      Popping a183(r194,l0: a135(r194,l1: a82(r194,l2)))  -- assign reg 30
      Popping a182(r196,l0: a134(r196,l1: a81(r196,l2)))  -- assign reg 30
      Popping a156(r226,l0: a108(r226,l1: a55(r226,l2)))  -- assign reg 2
      Popping a166(r214,l0: a118(r214,l1: a65(r214,l2)))  -- assign reg 2
      Popping a176(r202,l0: a128(r202,l1: a75(r202,l2)))  -- assign reg 2
      Popping a186(r190,l0: a138(r190,l1: a85(r190,l2)))  -- assign reg 2
      Popping a190(r188,l0: a142(r188,l1: a89(r188,l2)))  -- assign reg 2
      Popping a154(r234,l0: a106(r234,l1: a53(r234,l2)))  -- assign reg 29
      Popping a164(r219,l0: a116(r219,l1: a63(r219,l2)))  -- assign reg 29
      Popping a174(r207,l0: a126(r207,l1: a73(r207,l2)))  -- assign reg 29
      Popping a184(r195,l0: a136(r195,l1: a83(r195,l2)))  -- assign reg 29
      Popping a188(r257,l0: a140(r257,l1: a87(r257,l2)))  -- assign reg 0
      Popping a189(r256,l0: a141(r256,l1: a88(r256,l2)))  -- assign reg 0
      Popping a148(r240,l0: a100(r240,l1: a47(r240,l2)))  -- assign reg 30
      Popping a147(r242,l0: a99(r242,l1: a46(r242,l2)))  -- assign reg 30
      Popping a159(r222,l0: a111(r222,l1: a58(r222,l2)))  -- assign reg 30
      Popping a158(r224,l0: a110(r224,l1: a57(r224,l2)))  -- assign reg 30
      Popping a169(r210,l0: a121(r210,l1: a68(r210,l2)))  -- assign reg 30
      Popping a168(r212,l0: a120(r212,l1: a67(r212,l2)))  -- assign reg 30
      Popping a179(r198,l0: a131(r198,l1: a78(r198,l2)))  -- assign reg 30
      Popping a178(r200,l0: a130(r200,l1: a77(r200,l2)))  -- assign reg 30
      Popping a150(r241,l0: a102(r241,l1: a49(r241,l2)))  -- assign reg 29
      Popping a161(r223,l0: a113(r223,l1: a60(r223,l2)))  -- assign reg 29
      Popping a171(r211,l0: a123(r211,l1: a70(r211,l2)))  -- assign reg 29
      Popping a181(r199,l0: a133(r199,l1: a80(r199,l2)))  -- assign reg 29
      Popping a93(r247,l0: a27(r247,l1))  -- assign reg 10
      Popping a187(r258,l0: a139(r258,l1: a86(r258,l2)))  -- assign reg 0
      Popping a146(r262,l0: a98(r262,l1: a45(r262,l2)))  -- assign reg 0
      Popping a157(r261,l0: a109(r261,l1: a56(r261,l2)))  -- assign reg 0
      Popping a167(r260,l0: a119(r260,l1: a66(r260,l2)))  -- assign reg 0
      Popping a177(r259,l0: a129(r259,l1: a76(r259,l2)))  -- assign reg 0
      Popping a11(r182,l0)  -- assign reg 31
      Popping a7(r181,l0)  -- assign reg 31
      Popping a12(r179,l0)  -- assign reg 30
      Popping a9(r178,l0)  -- assign reg 30
      Popping a6(r115,l0)  -- assign reg 3
      Popping a14(r180,l0)  -- assign reg 3
      Popping a15(r177,l0)  -- assign reg 2
Spilling a91r249 for a152r120
Assigning 10 to a152r120
       a91(r249,l0: a25(r249,l1))  -- assign memory

  Loop 1 (parent 0, header bb32, depth 1)
    bbs: 32(->3:l2) 31(->33:l0)
    all: 16r126 17r127 18r128 19r171 20r244 21r246 22r250 23r251 24r254 25r249 26r119 27r247 28r130 29r129 96r243 97r125 98r262 99r242 100r240 101r164 102r241 103r235 104r120 105r233 106r234 107r228 108r226 109r261 110r224 111r222 112r154 113r223 114r220 115r218 116r219 117r216 118r214 119r260 120r212 121r210 122r144 123r211 124r208 125r206 126r207 127r204 128r202 129r259 130r200 131r198 132r134 133r199 134r196 135r194 136r195 137r192 138r190 139r258 140r257 141r256 142r188 143r255
    modified regnos: 119 120 125 128 129 130 134 144 154 164 171 188 190 192 194 195 196 198 199 200 202 204 206 207 208 210 211 212 214 216 218 219 220 222 223 224 226 228 233 234 235 240 241 242 243 247 249 255 256 257 258 259 260 261 262
    border: 16r126 17r127 18r128 19r171 20r244 21r246 22r250 23r251 24r254
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=3
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-6 9-10 12 14 16-47)@1800
          2:( 0-6 9-10 12 14 16-30 32-47)@5360
            3:( 0-6 9-10 12 14)@410912
              4:( 3-6 9-10)@177440
                5:( 4-6 9-10)@45480
      Allocno a16r126 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a17r127 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a18r128 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a19r171 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a25r249 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a26r119 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a27r247 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a28r130 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a29r129 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a96r243 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a97r125 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a98r262 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a99r242 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a103r235 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a104r120 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a108r226 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a109r261 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a110r224 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a114r220 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a118r214 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a119r260 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a120r212 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a124r208 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a128r202 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a129r259 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a130r200 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a134r196 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a138r190 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a139r258 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a140r257 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a141r256 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a142r188 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a143r255 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Forming thread by copy 30:a103r235-a105r233 (freq=16):
        Result (freq=536): a103r235(268) a105r233(268)
      Forming thread by copy 34:a114r220-a115r218 (freq=16):
        Result (freq=536): a114r220(268) a115r218(268)
      Forming thread by copy 38:a124r208-a125r206 (freq=16):
        Result (freq=536): a124r208(268) a125r206(268)
      Forming thread by copy 42:a134r196-a135r194 (freq=16):
        Result (freq=536): a134r196(268) a135r194(268)
      Forming thread by copy 28:a99r242-a100r240 (freq=5):
        Result (freq=180): a99r242(90) a100r240(90)
      Forming thread by copy 32:a110r224-a111r222 (freq=5):
        Result (freq=180): a110r224(90) a111r222(90)
      Forming thread by copy 36:a120r212-a121r210 (freq=5):
        Result (freq=180): a120r212(90) a121r210(90)
      Forming thread by copy 40:a130r200-a131r198 (freq=5):
        Result (freq=180): a130r200(90) a131r198(90)
      Pushing a129(r259,l1: a76(r259,l2))(cost 0)
      Pushing a119(r260,l1: a66(r260,l2))(cost 0)
      Pushing a109(r261,l1: a56(r261,l2))(cost 0)
      Pushing a98(r262,l1: a45(r262,l2))(cost 0)
      Pushing a139(r258,l1: a86(r258,l2))(cost 0)
      Pushing a27(r247,l1)(cost 0)
      Pushing a130(r200,l1: a77(r200,l2))(cost 0)
      Pushing a120(r212,l1: a67(r212,l2))(cost 0)
      Pushing a110(r224,l1: a57(r224,l2))(cost 0)
      Pushing a99(r242,l1: a46(r242,l2))(cost 0)
      Pushing a141(r256,l1: a88(r256,l2))(cost 0)
      Pushing a140(r257,l1: a87(r257,l2))(cost 0)
      Pushing a142(r188,l1: a89(r188,l2))(cost 0)
      Pushing a138(r190,l1: a85(r190,l2))(cost 0)
      Pushing a128(r202,l1: a75(r202,l2))(cost 0)
      Pushing a118(r214,l1: a65(r214,l2))(cost 0)
      Pushing a108(r226,l1: a55(r226,l2))(cost 0)
      Pushing a134(r196,l1: a81(r196,l2))(cost 0)
      Forming thread by copy 46:a97r125-a143r255 (freq=89):
        Result (freq=4239): a97r125(2803) a143r255(1436)
      Forming thread by copy 44:a97r125-a140r257 (freq=12):
        Result (freq=4439): a97r125(2803) a140r257(200) a143r255(1436)
      Forming thread by copy 45:a97r125-a141r256 (freq=12):
        Result (freq=4639): a97r125(2803) a141r256(200) a140r257(200) a143r255(1436)
      Forming thread by copy 27:a97r125-a98r262 (freq=1):
        Result (freq=4657): a97r125(2803) a98r262(18) a141r256(200) a140r257(200) a143r255(1436)
      Forming thread by copy 31:a97r125-a109r261 (freq=1):
        Result (freq=4675): a97r125(2803) a109r261(18) a98r262(18) a141r256(200) a140r257(200) a143r255(1436)
      Forming thread by copy 35:a97r125-a119r260 (freq=1):
        Result (freq=4693): a97r125(2803) a119r260(18) a109r261(18) a98r262(18) a141r256(200) a140r257(200) a143r255(1436)
      Forming thread by copy 39:a97r125-a129r259 (freq=1):
        Result (freq=4711): a97r125(2803) a129r259(18) a119r260(18) a109r261(18) a98r262(18) a141r256(200) a140r257(200) a143r255(1436)
      Forming thread by copy 43:a97r125-a139r258 (freq=1):
        Result (freq=4737): a97r125(2803) a139r258(26) a129r259(18) a119r260(18) a109r261(18) a98r262(18) a141r256(200) a140r257(200) a143r255(1436)
        Making a97(r125,l1: a44(r125,l2)) colorable
      Pushing a124(r208,l1: a71(r208,l2))(cost 0)
      Pushing a114(r220,l1: a61(r220,l2))(cost 0)
      Pushing a103(r235,l1: a50(r235,l2))(cost 0)
      Pushing a143(r255,l1: a90(r255,l2))(cost 0)
      Pushing a96(r243,l1: a43(r243,l2))(cost 0)
      Pushing a97(r125,l1: a44(r125,l2))(cost 28030)
      Pushing a19(r171,l1)(potential spill: pri=2, cost=500)
      Pushing a17(r127,l1)(potential spill: pri=2, cost=640)
      Pushing a16(r126,l1)(potential spill: pri=9, cost=1960)
        Making a28(r130,l1) colorable
        Making a29(r129,l1) colorable
        Making a104(r120,l1: a51(r120,l2)) colorable
      Pushing a104(r120,l1: a51(r120,l2))(cost 11360)
        Making a18(r128,l1) colorable
      Forming thread by copy 5:a25r249-a27r247 (freq=2):
        Result (freq=254): a25r249(218) a27r247(36)
        Making a25(r249,l1) colorable
        Making a26(r119,l1) colorable
      Pushing a25(r249,l1)(cost 2180)
      Pushing a26(r119,l1)(cost 2840)
      Pushing a18(r128,l1)(cost 14540)
      Pushing a29(r129,l1)(cost 36900)
      Pushing a28(r130,l1)(cost 40460)
      Popping a28(r130,l1)  -- assign reg 4
      Popping a29(r129,l1)  -- assign reg 5
      Popping a18(r128,l1)  -- assign reg 6
      Popping a26(r119,l1)  -- assign reg 9
      Popping a25(r249,l1)  -- assign reg 10
      Popping a104(r120,l1: a51(r120,l2))  -- assign reg 3
      Popping a16(r126,l1)  -- spill
      Popping a17(r127,l1)  -- spill
      Popping a19(r171,l1)  -- spill
      Popping a97(r125,l1: a44(r125,l2))  -- assign reg 0
      Popping a96(r243,l1: a43(r243,l2))  -- assign reg 3
      Popping a143(r255,l1: a90(r255,l2))  -- assign reg 0
      Popping a103(r235,l1: a50(r235,l2))  -- assign reg 30
      Popping a114(r220,l1: a61(r220,l2))  -- assign reg 30
      Popping a124(r208,l1: a71(r208,l2))  -- assign reg 30
      Popping a134(r196,l1: a81(r196,l2))  -- assign reg 30
      Popping a108(r226,l1: a55(r226,l2))  -- assign reg 2
      Popping a118(r214,l1: a65(r214,l2))  -- assign reg 2
      Popping a128(r202,l1: a75(r202,l2))  -- assign reg 2
      Popping a138(r190,l1: a85(r190,l2))  -- assign reg 2
      Popping a142(r188,l1: a89(r188,l2))  -- assign reg 2
      Popping a140(r257,l1: a87(r257,l2))  -- assign reg 0
      Popping a141(r256,l1: a88(r256,l2))  -- assign reg 0
      Popping a99(r242,l1: a46(r242,l2))  -- assign reg 30
      Popping a110(r224,l1: a57(r224,l2))  -- assign reg 30
      Popping a120(r212,l1: a67(r212,l2))  -- assign reg 30
      Popping a130(r200,l1: a77(r200,l2))  -- assign reg 30
      Popping a27(r247,l1)  -- assign reg 10
      Popping a139(r258,l1: a86(r258,l2))  -- assign reg 0
      Popping a98(r262,l1: a45(r262,l2))  -- assign reg 0
      Popping a109(r261,l1: a56(r261,l2))  -- assign reg 0
      Popping a119(r260,l1: a66(r260,l2))  -- assign reg 0
      Popping a129(r259,l1: a76(r259,l2))  -- assign reg 0
Spilling a25r249 for a104r120
Assigning 10 to a104r120
       a25(r249,l1)  -- assign memory

  Loop 2 (parent 1, header bb3, depth 2)
    bbs: 30(->31:l1) 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3
    all: 30r119 31r126 32r127 33r128 34r129 35r130 36r171 37r244 38r246 39r249 40r250 41r251 42r254 43r243 44r125 45r262 46r242 47r240 48r164 49r241 50r235 51r120 52r233 53r234 54r228 55r226 56r261 57r224 58r222 59r154 60r223 61r220 62r218 63r219 64r216 65r214 66r260 67r212 68r210 69r144 70r211 71r208 72r206 73r207 74r204 75r202 76r259 77r200 78r198 79r134 80r199 81r196 82r194 83r195 84r192 85r190 86r258 87r257 88r256 89r188 90r255
    modified regnos: 120 125 129 130 134 144 154 164 188 190 192 194 195 196 198 199 200 202 204 206 207 208 210 211 212 214 216 218 219 220 222 223 224 226 228 233 234 235 240 241 242 243 255 256 257 258 259 260 261 262
    border: 30r119 31r126 32r127 33r128 34r129 35r130 36r171 37r244 38r246 39r249 40r250 41r251 42r254
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=3
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-6 9-10 12 14 16-47)@1800
          2:( 0-6 9-10 12 14 16-30 32-47)@5360
            3:( 0-6 9-10 12 14)@410192
              4:( 3-6 9-10)@176720
                5:( 4-6 9-10)@41880
      Spill a36(r171,l2)
      Allocno a30r119 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a31r126 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a32r127 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a33r128 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a34r129 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a35r130 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a39r249 of GENERAL_REGS(14) has 5 avail. regs  4-6 9-10, node:  4-6 9-10 (confl regs =  0-2 12-106)
      Allocno a43r243 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a44r125 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a45r262 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a46r242 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a50r235 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a51r120 of GENERAL_REGS(14) has 6 avail. regs  3-6 9-10, node:  3-6 9-10 (confl regs =  0-2 12-106)
      Allocno a55r226 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a56r261 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a57r224 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a61r220 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a65r214 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a66r260 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a67r212 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a71r208 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a75r202 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a76r259 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a77r200 of ALL_REGS(46) has 43 avail. regs  0-6 9-10 12 14 16-47, node:  0-6 9-10 12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a81r196 of ALL_REGS(46) has 42 avail. regs  0-6 9-10 12 14 16-30 32-47, node:  0-6 9-10 12 14 16-30 32-47 (confl regs =  13 15 48-106)
      Allocno a85r190 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a86r258 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a87r257 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a88r256 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Allocno a89r188 of GENERAL_REGS(14) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15-106)
      Allocno a90r255 of ALL_REGS(46) has 11 avail. regs  0-6 9-10 12 14, node:  0-6 9-10 12 14 (confl regs =  13 15 48-106)
      Forming thread by copy 9:a50r235-a52r233 (freq=16):
        Result (freq=536): a50r235(268) a52r233(268)
      Forming thread by copy 13:a61r220-a62r218 (freq=16):
        Result (freq=536): a61r220(268) a62r218(268)
      Forming thread by copy 17:a71r208-a72r206 (freq=16):
        Result (freq=536): a71r208(268) a72r206(268)
      Forming thread by copy 21:a81r196-a82r194 (freq=16):
        Result (freq=536): a81r196(268) a82r194(268)
      Forming thread by copy 7:a46r242-a47r240 (freq=5):
        Result (freq=180): a46r242(90) a47r240(90)
      Forming thread by copy 11:a57r224-a58r222 (freq=5):
        Result (freq=180): a57r224(90) a58r222(90)
      Forming thread by copy 15:a67r212-a68r210 (freq=5):
        Result (freq=180): a67r212(90) a68r210(90)
      Forming thread by copy 19:a77r200-a78r198 (freq=5):
        Result (freq=180): a77r200(90) a78r198(90)
      Pushing a76(r259,l2)(cost 0)
      Pushing a66(r260,l2)(cost 0)
      Pushing a56(r261,l2)(cost 0)
      Pushing a45(r262,l2)(cost 0)
      Pushing a86(r258,l2)(cost 0)
      Pushing a77(r200,l2)(cost 0)
      Pushing a67(r212,l2)(cost 0)
      Pushing a57(r224,l2)(cost 0)
      Pushing a46(r242,l2)(cost 0)
      Pushing a88(r256,l2)(cost 0)
      Pushing a87(r257,l2)(cost 0)
      Pushing a89(r188,l2)(cost 0)
      Pushing a85(r190,l2)(cost 0)
      Pushing a75(r202,l2)(cost 0)
      Pushing a65(r214,l2)(cost 0)
      Pushing a55(r226,l2)(cost 0)
      Pushing a81(r196,l2)(cost 0)
      Forming thread by copy 25:a44r125-a90r255 (freq=89):
        Result (freq=4239): a44r125(2803) a90r255(1436)
      Forming thread by copy 23:a44r125-a87r257 (freq=12):
        Result (freq=4439): a44r125(2803) a87r257(200) a90r255(1436)
      Forming thread by copy 24:a44r125-a88r256 (freq=12):
        Result (freq=4639): a44r125(2803) a88r256(200) a87r257(200) a90r255(1436)
      Forming thread by copy 6:a44r125-a45r262 (freq=1):
        Result (freq=4657): a44r125(2803) a45r262(18) a88r256(200) a87r257(200) a90r255(1436)
      Forming thread by copy 10:a44r125-a56r261 (freq=1):
        Result (freq=4675): a44r125(2803) a56r261(18) a45r262(18) a88r256(200) a87r257(200) a90r255(1436)
      Forming thread by copy 14:a44r125-a66r260 (freq=1):
        Result (freq=4693): a44r125(2803) a66r260(18) a56r261(18) a45r262(18) a88r256(200) a87r257(200) a90r255(1436)
      Forming thread by copy 18:a44r125-a76r259 (freq=1):
        Result (freq=4711): a44r125(2803) a76r259(18) a66r260(18) a56r261(18) a45r262(18) a88r256(200) a87r257(200) a90r255(1436)
      Forming thread by copy 22:a44r125-a86r258 (freq=1):
        Result (freq=4737): a44r125(2803) a86r258(26) a76r259(18) a66r260(18) a56r261(18) a45r262(18) a88r256(200) a87r257(200) a90r255(1436)
        Making a44(r125,l2) colorable
      Pushing a71(r208,l2)(cost 0)
      Pushing a61(r220,l2)(cost 0)
      Pushing a50(r235,l2)(cost 0)
      Pushing a90(r255,l2)(cost 0)
      Pushing a43(r243,l2)(cost 0)
      Pushing a44(r125,l2)(cost 28030)
      Pushing a32(r127,l2)(potential spill: pri=0, cost=-40)
      Pushing a31(r126,l2)(potential spill: pri=5, cost=1280)
        Making a34(r129,l2) colorable
        Making a35(r130,l2) colorable
        Making a51(r120,l2) colorable
      Pushing a51(r120,l2)(cost 11360)
        Making a30(r119,l2) colorable
        Making a33(r128,l2) colorable
        Making a39(r249,l2) colorable
      Pushing a39(r249,l2)(cost 1620)
      Pushing a30(r119,l2)(cost 2860)
      Pushing a33(r128,l2)(cost 14500)
      Pushing a34(r129,l2)(cost 37100)
      Pushing a35(r130,l2)(cost 40660)
      Popping a35(r130,l2)  -- assign reg 4
      Popping a34(r129,l2)  -- assign reg 5
      Popping a33(r128,l2)  -- assign reg 6
      Popping a30(r119,l2)  -- assign reg 9
      Popping a39(r249,l2)  -- assign reg 10
      Popping a51(r120,l2)  -- assign reg 3
      Popping a31(r126,l2)  -- spill
      Popping a32(r127,l2)  -- spill
      Popping a44(r125,l2)  -- assign reg 0
      Popping a43(r243,l2)  -- assign reg 3
      Popping a90(r255,l2)  -- assign reg 0
      Popping a50(r235,l2)  -- assign reg 30
      Popping a61(r220,l2)  -- assign reg 30
      Popping a71(r208,l2)  -- assign reg 30
      Popping a81(r196,l2)  -- assign reg 30
      Popping a55(r226,l2)  -- assign reg 2
      Popping a65(r214,l2)  -- assign reg 2
      Popping a75(r202,l2)  -- assign reg 2
      Popping a85(r190,l2)  -- assign reg 2
      Popping a89(r188,l2)  -- assign reg 2
      Popping a87(r257,l2)  -- assign reg 0
      Popping a88(r256,l2)  -- assign reg 0
      Popping a46(r242,l2)  -- assign reg 30
      Popping a57(r224,l2)  -- assign reg 30
      Popping a67(r212,l2)  -- assign reg 30
      Popping a77(r200,l2)  -- assign reg 30
      Popping a86(r258,l2)  -- assign reg 0
      Popping a45(r262,l2)  -- assign reg 0
      Popping a56(r261,l2)  -- assign reg 0
      Popping a66(r260,l2)  -- assign reg 0
      Popping a76(r259,l2)  -- assign reg 0
Spilling a39r249 for a51r120
Assigning 10 to a51r120
       a39(r249,l2)  -- assign memory
Disposition:
    6:r115 l0     3   30:r119 l2     9   26:r119 l1     9   51:r120 l2    10
   44:r125 l2     0   31:r126 l2   mem   16:r126 l1   mem    8:r126 l0   mem
   32:r127 l2   mem   17:r127 l1   mem    5:r127 l0   mem   33:r128 l2     6
   18:r128 l1     6    3:r128 l0     6   34:r129 l2     5   29:r129 l1     5
   35:r130 l2     4   28:r130 l1     4   79:r134 l2    31   69:r144 l2    31
   59:r154 l2    31   48:r164 l2    31   36:r171 l2   mem   19:r171 l1   mem
   10:r171 l0   mem   15:r177 l0     2    9:r178 l0    30   12:r179 l0    30
   14:r180 l0     3    7:r181 l0    31   11:r182 l0    31   89:r188 l2     2
   85:r190 l2     2   84:r192 l2   mem   82:r194 l2    30   83:r195 l2    29
   81:r196 l2    30   78:r198 l2    30   80:r199 l2    29   77:r200 l2    30
   75:r202 l2     2   74:r204 l2   mem   72:r206 l2    30   73:r207 l2    29
   71:r208 l2    30   68:r210 l2    30   70:r211 l2    29   67:r212 l2    30
   65:r214 l2     2   64:r216 l2   mem   62:r218 l2    30   63:r219 l2    29
   61:r220 l2    30   58:r222 l2    30   60:r223 l2    29   57:r224 l2    30
   55:r226 l2     2   54:r228 l2   mem   52:r233 l2    30   53:r234 l2    29
   50:r235 l2    30   47:r240 l2    30   49:r241 l2    29   46:r242 l2    30
   43:r243 l2     3   37:r244 l2     8   20:r244 l1     8   13:r244 l0     8
   38:r246 l2   mem   21:r246 l1   mem    4:r246 l0   mem   27:r247 l1    10
   39:r249 l2   mem   25:r249 l1   mem   40:r250 l2     7   22:r250 l1     7
    1:r250 l0     7   41:r251 l2    11   23:r251 l1    11    2:r251 l0    11
   42:r254 l2   mem   24:r254 l1   mem    0:r254 l0   mem   90:r255 l2     0
   88:r256 l2     0   87:r257 l2     0   86:r258 l2     0   76:r259 l2     0
   66:r260 l2     0   56:r261 l2     0   45:r262 l2     0
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb32)
  6 vs parent 6:      Creating newreg=263 from oldreg=128
rescanning insn with uid = 323.
rescanning insn with uid = 326.
rescanning insn with uid = 315.
rescanning insn with uid = 316.
rescanning insn with uid = 319.
      Changing RTL for loop 2 (header bb3)
  9 vs parent 9:      Creating newreg=264 from oldreg=119
  6 vs parent 6:      Creating newreg=265 from oldreg=263
  5 vs parent 5:      Creating newreg=266 from oldreg=129
  4 vs parent 4:      Creating newreg=267 from oldreg=130
rescanning insn with uid = 306.
rescanning insn with uid = 301.
rescanning insn with uid = 304.
rescanning insn with uid = 307.
rescanning insn with uid = 309.
rescanning insn with uid = 311.
rescanning insn with uid = 280.
rescanning insn with uid = 229.
rescanning insn with uid = 184.
rescanning insn with uid = 139.
rescanning insn with uid = 96.
rescanning insn with uid = 59.
rescanning insn with uid = 42.
rescanning insn with uid = 39.
rescanning insn with uid = 37.
rescanning insn with uid = 30.
rescanning insn with uid = 34.
scanning new insn with uid = 417.
    Adding cp67:a3r128-a18r263
    Adding range [102..102] to allocno a3r128
    Adding range [103..103] to allocno a18r263
    Adding range [102..103] to live through  allocno a8r126
    Adding range [102..103] to live through  allocno a5r127
    Adding range [102..103] to live through  allocno a10r171
    Adding range [102..103] to live through  allocno a13r244
    Adding range [102..103] to live through  allocno a4r246
    Adding range [102..103] to live through  allocno a1r250
    Adding range [102..103] to live through  allocno a2r251
    Adding range [102..103] to live through  allocno a0r254
    Adding cp68:a18r263-a33r265
    Adding range [105..105] to allocno a33r265
    Adding range [106..106] to allocno a18r263
    Adding range [105..106] to live through  allocno a16r126
    Adding range [105..106] to live through  allocno a17r127
    Adding range [105..106] to live through  allocno a19r171
    Adding range [105..106] to live through  allocno a20r244
    Adding range [105..106] to live through  allocno a21r246
    Adding range [105..106] to live through  allocno a22r250
    Adding range [105..106] to live through  allocno a23r251
    Adding range [105..106] to live through  allocno a24r254
    Adding cp69:a26r119-a30r264
    Adding range [108..108] to allocno a26r119
    Adding cp70:a18r263-a33r265
    Adding range [108..110] to allocno a18r263
    Adding cp71:a29r129-a34r266
    Adding range [108..112] to allocno a29r129
    Adding cp72:a28r130-a35r267
    Adding range [108..114] to allocno a28r130
    Adding range [109..115] to allocno a30r264
    Adding range [111..115] to allocno a33r265
    Adding range [113..115] to allocno a34r266
    Adding range [115..115] to allocno a35r267
    Adding range [108..115] to live through  allocno a16r126
    Adding range [108..115] to live through  allocno a17r127
    Adding range [108..115] to live through  allocno a19r171
    Adding range [108..115] to live through  allocno a20r244
    Adding range [108..115] to live through  allocno a21r246
    Adding range [108..115] to live through  allocno a25r249
    Adding range [108..115] to live through  allocno a22r250
    Adding range [108..115] to live through  allocno a23r251
    Adding range [108..115] to live through  allocno a24r254
scanning new insn with uid = 416.
scanning new insn with uid = 418.
scanning new insn with uid = 419.
scanning new insn with uid = 420.
scanning new insn with uid = 421.
    New r263: setting preferred LO_REGS, alternative GENERAL_REGS
    New r264: setting preferred GENERAL_REGS, alternative NO_REGS
    New r265: setting preferred LO_REGS, alternative GENERAL_REGS
    New r266: setting preferred GENERAL_REGS, alternative NO_REGS
    New r267: setting preferred LO_REGS, alternative GENERAL_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 34 n_edges 54 count 63 (  1.9)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
;;
;; Loop 1
;;  header 32, latch 31
;;  depth 1, outer 0
;;  nodes: 32 31 30 28 27 26 29 7 4 5 3 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;;
;; Loop 2
;;  header 3, latch 30
;;  depth 2, outer 1
;;  nodes: 3 30 28 27 26 29 7 4 5 6 22 25 23 24 18 21 19 20 14 17 15 16 11 13 12 10 9 8
;; 2 succs { 32 }
;; 3 succs { 7 4 }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 30 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 18 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 22 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 26 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 30 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 3 31 }
;; 31 succs { 32 33 }
;; 32 succs { 3 }
;; 33 succs { 1 }
+++Costs: overall 17854, reg -24856, mem 42710, ld 0, st 0, move 182
+++       move loops 0, new jumps 2


drawMiniMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={17d,16u} r1={17d,8u} r2={17d,19u} r3={9d} r7={1d,33u} r12={16d} r13={1d,41u} r14={9d} r15={8d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={29d,14u} r101={8d} r102={1d,33u} r103={1d,32u} r104={8d} r105={8d} r106={8d} r115={1d,2u} r119={1d,2u} r120={1d,6u} r125={8d,19u} r126={1d,2u} r127={1d,2u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r134={1d,4u} r144={1d,4u} r154={1d,4u} r164={1d,4u} r171={2d,2u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r204={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r214={1d,1u} r216={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r226={1d,1u} r228={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={3d,4u} r244={1d,5u,5e} r246={1d,1u} r247={1d,1u} r249={1d,1u} r250={1d,12u,6e} r251={1d,1u,1e} r254={1d,1u,1e} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={3d,6u} r264={1d,5u} r265={1d,3u} r266={2d,3u} r267={2d,7u} 
;;    total ref usage 1166{806d,347u,13e} in 256{248 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 2 11 2 (debug_marker) "../System/map.c":90:2 -1
     (nil))
(insn 11 8 17 2 (set (reg/f:SI 177)
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>)) "../System/map.c":90:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>)
        (nil)))
(insn 17 11 9 2 (set (reg/f:SI 180)
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>)) "../System/map.c":91:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>)
        (nil)))
(insn 9 17 12 2 (set (reg/f:SI 244)
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>)) "../System/map.c":90:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>)
        (nil)))
(insn 12 9 18 2 (set (reg:SF 179 [ px ])
        (mem/c:SF (reg/f:SI 177) [1 px+0 S4 A32])) "../System/map.c":90:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059d42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 18 12 10 2 (set (reg:SF 182 [ py ])
        (mem/c:SF (reg/f:SI 180) [1 py+0 S4 A32])) "../System/map.c":91:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059d4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 10 18 13 2 (set (reg:SI 115 [ Blocksize.4_3 ])
        (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])) "../System/map.c":90:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 13 10 19 2 (set (reg:SI 178)
        (fix:SI (fix:SF (reg:SF 179 [ px ])))) "../System/map.c":90:13 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 179 [ px ])
        (nil)))
(insn 19 13 26 2 (set (reg:SI 181)
        (fix:SI (fix:SF (reg:SF 182 [ py ])))) "../System/map.c":91:13 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 182 [ py ])
        (nil)))
(insn 26 19 14 2 (set (reg:SI 171 [ ivtmp.67 ])
        (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                (const_int 140 [0x8c])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 00000000059d4a20 pixels>)
                (const_int 140 [0x8c])))
        (nil)))
(insn 14 26 15 2 (set (reg/v:SI 126 [ dpx ])
        (div:SI (reg:SI 178)
            (reg:SI 115 [ Blocksize.4_3 ]))) "../System/map.c":90:6 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(debug_insn 15 14 16 2 (var_location:SI dpx (reg/v:SI 126 [ dpx ])) "../System/map.c":90:6 -1
     (nil))
(debug_insn 16 15 20 2 (debug_marker) "../System/map.c":91:2 -1
     (nil))
(insn 20 16 21 2 (set (reg/v:SI 127 [ dpy ])
        (div:SI (reg:SI 181)
            (reg:SI 115 [ Blocksize.4_3 ]))) "../System/map.c":91:6 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg:SI 115 [ Blocksize.4_3 ])
            (nil))))
(debug_insn 21 20 22 2 (var_location:SI dpy (reg/v:SI 127 [ dpy ])) "../System/map.c":91:6 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/map.c":92:2 -1
     (nil))
(debug_insn 23 22 24 2 (debug_marker) "../System/map.c":92:6 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 25 24 113 2 (debug_marker) "../System/map.c":92:14 -1
     (nil))
(insn 113 25 60 2 (set (reg/f:SI 250)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)) "../System/map.c":102:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
        (nil)))
(insn 60 113 5 2 (set (reg/f:SI 246)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)) "../System/map.c":98:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059d4990 map>)
        (nil)))
(insn 5 60 266 2 (set (reg/v:SI 128 [ y ])
        (const_int 0 [0])) "../System/map.c":92:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 266 5 276 2 (set (reg/f:SI 251)
        (plus:SI (reg/f:SI 250)
            (const_int 1340 [0x53c]))) "../System/map.c":103:21 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1340 [0x53c])))
        (nil)))
(insn 276 266 416 2 (set (reg/f:SI 254)
        (plus:SI (reg/f:SI 250)
            (const_int 1344 [0x540]))) "../System/map.c":104:21 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1344 [0x540])))
        (nil)))
(insn 416 276 407 2 (set (reg/v:SI 263 [orig:128 y ] [128])
        (reg/v:SI 128 [ y ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 128 [ y ])
        (nil)))
(jump_insn 407 416 408 2 (set (pc)
        (label_ref 321)) 284 {*arm_jump}
     (nil)
 -> 321)
(barrier 408 407 310)
(code_label 310 408 29 3 39 (nil) [2 uses])
(note 29 310 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 33 29 30 3 NOTE_INSN_DELETED)
(debug_insn 30 33 31 3 (var_location:SI x (reg/v:SI 267 [orig:130 x ] [130])) -1
     (nil))
(debug_insn 31 30 32 3 (debug_marker) "../System/map.c":94:4 -1
     (nil))
(debug_insn 32 31 34 3 (debug_marker) "../System/map.c":95:4 -1
     (nil))
(jump_insn 34 32 35 3 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 265 [orig:128 y ] [128])
                        (const_int 0 [0]))
                    (label_ref:SI 44)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":95:6 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 232894604 (nil)))
 -> 44)
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 36 35 37 4 NOTE_INSN_DELETED)
(jump_insn 37 36 38 4 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 267 [orig:130 x ] [130])
                        (const_int 0 [0]))
                    (label_ref:SI 44)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":95:14 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 386547060 (nil)))
 -> 44)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 265 [orig:128 y ] [128])
            (const_int 48 [0x30]))) "../System/map.c":95:24 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 44)
            (pc))) "../System/map.c":95:24 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 241269788 (nil)))
 -> 44)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 267 [orig:130 x ] [130])
            (const_int 98 [0x62]))) "../System/map.c":95:47 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "../System/map.c":95:47 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 602047044 (nil)))
 -> 56)
(code_label 44 43 45 7 30 (nil) [3 uses])
(note 45 44 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 51 45 46 7 NOTE_INSN_DELETED)
(debug_insn 46 51 47 7 (debug_marker) "../System/map.c":96:5 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 2 r2)
        (const_int 71 [0x47])) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 7 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(insn 49 48 50 7 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 50 49 399 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":96:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 399 50 52 7 (set (reg:SI 255)
        (reg:SI 0 r0)) "../System/map.c":96:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 52 399 53 7 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 255) 0))) "../System/map.c":96:11 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 255)
        (nil)))
(debug_insn 53 52 409 7 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":96:11 -1
     (nil))
(jump_insn 409 53 410 7 (set (pc)
        (label_ref 291)) "../System/map.c":96:11 284 {*arm_jump}
     (nil)
 -> 291)
(barrier 410 409 56)
(code_label 56 410 57 8 31 (nil) [1 uses])
(note 57 56 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 66 57 58 8 NOTE_INSN_DELETED)
(debug_insn 58 66 59 8 (debug_marker) "../System/map.c":98:5 -1
     (nil))
(insn 59 58 65 8 (set (reg:SI 120 [ _9 ])
        (ashiftrt:SI (reg/v:SI 267 [orig:130 x ] [130])
            (const_int 1 [0x1]))) "../System/map.c":98:18 147 {*arm_shiftsi3}
     (nil))
(insn 65 59 67 8 (set (reg:SI 188 [ map[_8][_9] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 249)
                    (reg:SI 120 [ _9 ])) [0 map[_8][_9]+0 S1 A8]))) "../System/map.c":98:7 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 67 65 68 8 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 188 [ map[_8][_9] ])
                        (const_int 0 [0]))
                    (label_ref 79)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":98:7 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 188 [ map[_8][_9] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 79)
(note 68 67 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 74 68 69 9 NOTE_INSN_DELETED)
(debug_insn 69 74 70 9 (debug_marker) "../System/map.c":98:28 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 2 r2)
        (const_int 255 [0xff])) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 9 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))
(insn 72 71 73 9 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 255 [0xff])
        (nil)))
(call_insn 73 72 400 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":98:36 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 400 73 75 9 (set (reg:SI 256)
        (reg:SI 0 r0)) "../System/map.c":98:36 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 75 400 76 9 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 256) 0))) "../System/map.c":98:34 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(debug_insn 76 75 411 9 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":98:34 -1
     (nil))
(jump_insn 411 76 412 9 (set (pc)
        (label_ref 89)) 284 {*arm_jump}
     (nil)
 -> 89)
(barrier 412 411 79)
(code_label 79 412 80 10 33 (nil) [1 uses])
(note 80 79 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 86 80 81 10 NOTE_INSN_DELETED)
(debug_insn 81 86 82 10 (debug_marker) "../System/map.c":99:10 -1
     (nil))
(insn 82 81 83 10 (set (reg:SI 2 r2)
        (const_int 71 [0x47])) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 10 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(insn 84 83 85 10 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 71 [0x47])
        (nil)))
(call_insn 85 84 401 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":99:18 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 401 85 87 10 (set (reg:SI 257)
        (reg:SI 0 r0)) "../System/map.c":99:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 87 401 88 10 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 257) 0))) "../System/map.c":99:16 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(debug_insn 88 87 89 10 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":99:16 -1
     (nil))
(code_label 89 88 90 11 34 (nil) [1 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 91 90 92 11 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 92 91 93 11 (debug_marker) "../System/map.c":100:5 -1
     (nil))
(insn 93 92 94 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 120 [ _9 ])
            (reg/v:SI 126 [ dpx ]))) "../System/map.c":100:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 94 93 95 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../System/map.c":100:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 107)
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 264 [orig:119 _8 ] [119])
            (reg/v:SI 127 [ dpy ]))) "../System/map.c":100:19 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 97 96 98 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "../System/map.c":100:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 107)
(note 98 97 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 104 98 99 13 NOTE_INSN_DELETED)
(debug_insn 99 104 100 13 (debug_marker) "../System/map.c":100:34 -1
     (nil))
(insn 100 99 101 13 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 13 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 102 101 103 13 (set (reg:SI 0 r0)
        (reg:SI 2 r2)) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(call_insn 103 102 402 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":100:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 402 103 105 13 (set (reg:SI 258)
        (reg:SI 0 r0)) "../System/map.c":100:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 105 402 106 13 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 258) 0))) "../System/map.c":100:40 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 258)
        (nil)))
(debug_insn 106 105 107 13 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":100:40 -1
     (nil))
(code_label 107 106 108 14 35 (nil) [2 uses])
(note 108 107 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 115 108 109 14 NOTE_INSN_DELETED)
(debug_insn 109 115 110 14 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 110 109 111 14 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 111 110 112 14 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 112 111 114 14 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 114 112 116 14 (set (reg:SI 190 [ sp[0].life ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 250)
                    (const_int 24 [0x18])) [0 sp[0].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 24 [0x18]))) [0 sp[0].life+0 S1 A32]))
        (nil)))
(jump_insn 116 114 117 14 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 190 [ sp[0].life ])
                        (const_int 0 [0]))
                    (label_ref:SI 150)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 190 [ sp[0].life ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 354334804 (nil))))
 -> 150)
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 118 117 129 15 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 129 118 120 15 (set (reg:SF 195 [ sp[0].x ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (nil))))
(insn 120 129 121 15 (set (reg:SI 192 [ Blocksize ])
        (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 121 120 122 15 (set (reg:SF 134 [ _73 ])
        (float:SF (reg:SI 192 [ Blocksize ]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 192 [ Blocksize ])
        (nil)))
(debug_insn 122 121 123 15 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (reg:SF 134 [ _73 ])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 123 122 124 15 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 124 123 125 15 (var_location:SF D#18 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 125 124 126 15 (var_location:SF D#17 (div:SF (debug_expr:SF D#18)
        (reg:SF 134 [ _73 ]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 126 125 127 15 (var_location:SI spy (fix:SI (debug_expr:SF D#17))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 127 126 130 15 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 130 127 131 15 (set (reg:SF 194)
        (div:SF (reg:SF 195 [ sp[0].x ])
            (reg:SF 134 [ _73 ]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 195 [ sp[0].x ])
        (nil)))
(insn 131 130 132 15 (set (reg:SI 196 [ spx ])
        (fix:SI (fix:SF (reg:SF 194)))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 194)
        (nil)))
(insn 132 131 133 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 120 [ _9 ])
            (reg:SI 196 [ spx ]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 196 [ spx ])
        (nil)))
(jump_insn 133 132 134 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 150)
(note 134 133 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 134 137 16 (set (reg:SF 199 [ sp[0].y ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])
            (nil))))
(insn 137 136 138 16 (set (reg:SF 198)
        (div:SF (reg:SF 199 [ sp[0].y ])
            (reg:SF 134 [ _73 ]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 199 [ sp[0].y ])
        (expr_list:REG_DEAD (reg:SF 134 [ _73 ])
            (nil))))
(insn 138 137 139 16 (set (reg:SI 200 [ spy ])
        (fix:SI (fix:SF (reg:SF 198)))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 198)
        (nil)))
(insn 139 138 140 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 264 [orig:119 _8 ] [119])
            (reg:SI 200 [ spy ]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 200 [ spy ])
        (nil)))
(jump_insn 140 139 141 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 150)
(note 141 140 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 147 141 142 17 NOTE_INSN_DELETED)
(debug_insn 142 147 143 17 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 143 142 144 17 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 144 143 145 17 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 145 144 146 17 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 146 145 403 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 403 146 148 17 (set (reg:SI 259)
        (reg:SI 0 r0)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 148 403 149 17 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 259) 0))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 259)
        (nil)))
(debug_insn 149 148 150 17 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":105:40 -1
     (nil))
(code_label 150 149 151 18 36 (nil) [3 uses])
(note 151 150 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 160 151 152 18 NOTE_INSN_DELETED)
(debug_insn 152 160 153 18 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 153 152 154 18 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 154 153 155 18 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 155 154 156 18 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 156 155 157 18 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 157 156 159 18 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 159 157 161 18 (set (reg:SI 202 [ sp[1].life ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 250)
                    (const_int 468 [0x1d4])) [0 sp[1].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 468 [0x1d4]))) [0 sp[1].life+0 S1 A32]))
        (nil)))
(jump_insn 161 159 162 18 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 202 [ sp[1].life ])
                        (const_int 0 [0]))
                    (label_ref:SI 195)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 202 [ sp[1].life ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 354334804 (nil))))
 -> 195)
(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 163 162 174 19 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 174 163 165 19 (set (reg:SF 207 [ sp[1].x ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (nil))))
(insn 165 174 166 19 (set (reg:SI 204 [ Blocksize ])
        (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 166 165 167 19 (set (reg:SF 144 [ _91 ])
        (float:SF (reg:SI 204 [ Blocksize ]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 204 [ Blocksize ])
        (nil)))
(debug_insn 167 166 168 19 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (reg:SF 144 [ _91 ])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 168 167 169 19 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 169 168 170 19 (var_location:SF D#16 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 170 169 171 19 (var_location:SF D#15 (div:SF (debug_expr:SF D#16)
        (reg:SF 144 [ _91 ]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 171 170 172 19 (var_location:SI spy (fix:SI (debug_expr:SF D#15))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 172 171 175 19 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 175 172 176 19 (set (reg:SF 206)
        (div:SF (reg:SF 207 [ sp[1].x ])
            (reg:SF 144 [ _91 ]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 207 [ sp[1].x ])
        (nil)))
(insn 176 175 177 19 (set (reg:SI 208 [ spx ])
        (fix:SI (fix:SF (reg:SF 206)))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 206)
        (nil)))
(insn 177 176 178 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 120 [ _9 ])
            (reg:SI 208 [ spx ]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 208 [ spx ])
        (nil)))
(jump_insn 178 177 179 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 195)
(note 179 178 181 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 181 179 182 20 (set (reg:SF 211 [ sp[1].y ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])
            (nil))))
(insn 182 181 183 20 (set (reg:SF 210)
        (div:SF (reg:SF 211 [ sp[1].y ])
            (reg:SF 144 [ _91 ]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 211 [ sp[1].y ])
        (expr_list:REG_DEAD (reg:SF 144 [ _91 ])
            (nil))))
(insn 183 182 184 20 (set (reg:SI 212 [ spy ])
        (fix:SI (fix:SF (reg:SF 210)))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 210)
        (nil)))
(insn 184 183 185 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 264 [orig:119 _8 ] [119])
            (reg:SI 212 [ spy ]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 212 [ spy ])
        (nil)))
(jump_insn 185 184 186 20 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 195)
(note 186 185 192 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 192 186 187 21 NOTE_INSN_DELETED)
(debug_insn 187 192 188 21 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 188 187 189 21 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 189 188 190 21 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 190 189 191 21 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 191 190 404 21 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 404 191 193 21 (set (reg:SI 260)
        (reg:SI 0 r0)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 193 404 194 21 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 260) 0))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 260)
        (nil)))
(debug_insn 194 193 195 21 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":105:40 -1
     (nil))
(code_label 195 194 196 22 37 (nil) [3 uses])
(note 196 195 205 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 205 196 197 22 NOTE_INSN_DELETED)
(debug_insn 197 205 198 22 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 198 197 199 22 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 199 198 200 22 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 200 199 201 22 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 201 200 202 22 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 202 201 204 22 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 204 202 206 22 (set (reg:SI 214 [ sp[2].life ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 250)
                    (const_int 912 [0x390])) [0 sp[2].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 912 [0x390]))) [0 sp[2].life+0 S1 A32]))
        (nil)))
(jump_insn 206 204 207 22 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 214 [ sp[2].life ])
                        (const_int 0 [0]))
                    (label_ref:SI 240)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 214 [ sp[2].life ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 354334804 (nil))))
 -> 240)
(note 207 206 208 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 208 207 219 23 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 219 208 210 23 (set (reg:SF 219 [ sp[2].x ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (nil))))
(insn 210 219 211 23 (set (reg:SI 216 [ Blocksize ])
        (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 211 210 212 23 (set (reg:SF 154 [ _109 ])
        (float:SF (reg:SI 216 [ Blocksize ]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 216 [ Blocksize ])
        (nil)))
(debug_insn 212 211 213 23 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (reg:SF 154 [ _109 ])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 213 212 214 23 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 214 213 215 23 (var_location:SF D#14 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 215 214 216 23 (var_location:SF D#13 (div:SF (debug_expr:SF D#14)
        (reg:SF 154 [ _109 ]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 216 215 217 23 (var_location:SI spy (fix:SI (debug_expr:SF D#13))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 217 216 220 23 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 220 217 221 23 (set (reg:SF 218)
        (div:SF (reg:SF 219 [ sp[2].x ])
            (reg:SF 154 [ _109 ]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 219 [ sp[2].x ])
        (nil)))
(insn 221 220 222 23 (set (reg:SI 220 [ spx ])
        (fix:SI (fix:SF (reg:SF 218)))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 218)
        (nil)))
(insn 222 221 223 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 120 [ _9 ])
            (reg:SI 220 [ spx ]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 220 [ spx ])
        (nil)))
(jump_insn 223 222 224 23 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 240)
(note 224 223 226 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 226 224 227 24 (set (reg:SF 223 [ sp[2].y ])
        (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 250)
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])
            (nil))))
(insn 227 226 228 24 (set (reg:SF 222)
        (div:SF (reg:SF 223 [ sp[2].y ])
            (reg:SF 154 [ _109 ]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 223 [ sp[2].y ])
        (expr_list:REG_DEAD (reg:SF 154 [ _109 ])
            (nil))))
(insn 228 227 229 24 (set (reg:SI 224 [ spy ])
        (fix:SI (fix:SF (reg:SF 222)))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 222)
        (nil)))
(insn 229 228 230 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 264 [orig:119 _8 ] [119])
            (reg:SI 224 [ spy ]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 224 [ spy ])
        (nil)))
(jump_insn 230 229 231 24 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 240)
(note 231 230 237 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 237 231 232 25 NOTE_INSN_DELETED)
(debug_insn 232 237 233 25 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 233 232 234 25 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 234 233 235 25 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 235 234 236 25 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 236 235 405 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 405 236 238 25 (set (reg:SI 261)
        (reg:SI 0 r0)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 238 405 239 25 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 261) 0))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 261)
        (nil)))
(debug_insn 239 238 240 25 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":105:40 -1
     (nil))
(code_label 240 239 241 26 38 (nil) [3 uses])
(note 241 240 250 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 250 241 242 26 NOTE_INSN_DELETED)
(debug_insn 242 250 243 26 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 243 242 244 26 (debug_marker) "../System/map.c":101:33 -1
     (nil))
(debug_insn 244 243 245 26 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 245 244 246 26 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 246 245 247 26 (debug_marker) "../System/map.c":101:17 -1
     (nil))
(debug_insn 247 246 249 26 (debug_marker) "../System/map.c":102:6 -1
     (nil))
(insn 249 247 251 26 (set (reg:SI 226 [ sp[3].life ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 250)
                    (const_int 1356 [0x54c])) [0 sp[3].life+0 S1 A32]))) "../System/map.c":102:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1356 [0x54c]))) [0 sp[3].life+0 S1 A32]))
        (nil)))
(jump_insn 251 249 252 26 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 226 [ sp[3].life ])
                        (const_int 0 [0]))
                    (label_ref:SI 291)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/map.c":102:8 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 226 [ sp[3].life ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 354334804 (nil))))
 -> 291)
(note 252 251 253 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 253 252 267 27 (debug_marker) "../System/map.c":103:6 -1
     (nil))
(insn 267 253 255 27 (set (reg:SF 234 [ sp[3].x ])
        (mem/c:SF (reg/f:SI 251) [1 sp[3].x+0 S4 A32])) "../System/map.c":103:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 251) [1 sp[3].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
            (nil))))
(insn 255 267 256 27 (set (reg:SI 228 [ Blocksize ])
        (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])) "../System/map.c":103:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 244) [2 Blocksize+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059d47e0 Blocksize>) [2 Blocksize+0 S4 A32])
            (nil))))
(insn 256 255 257 27 (set (reg:SF 164 [ _127 ])
        (float:SF (reg:SI 228 [ Blocksize ]))) "../System/map.c":103:24 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 228 [ Blocksize ])
        (nil)))
(debug_insn 257 256 258 27 (var_location:SI spx (fix:SI (div:SF (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
            (reg:SF 164 [ _127 ])))) "../System/map.c":103:10 -1
     (nil))
(debug_insn 258 257 259 27 (debug_marker) "../System/map.c":104:6 -1
     (nil))
(debug_insn 259 258 260 27 (var_location:SF D#12 (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])) "../System/map.c":104:21 -1
     (nil))
(debug_insn 260 259 261 27 (var_location:SF D#11 (div:SF (debug_expr:SF D#12)
        (reg:SF 164 [ _127 ]))) "../System/map.c":104:24 -1
     (nil))
(debug_insn 261 260 262 27 (var_location:SI spy (fix:SI (debug_expr:SF D#11))) "../System/map.c":104:10 -1
     (nil))
(debug_insn 262 261 268 27 (debug_marker) "../System/map.c":105:6 -1
     (nil))
(insn 268 262 269 27 (set (reg:SF 233)
        (div:SF (reg:SF 234 [ sp[3].x ])
            (reg:SF 164 [ _127 ]))) "../System/map.c":103:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 234 [ sp[3].x ])
        (nil)))
(insn 269 268 270 27 (set (reg:SI 235 [ spx ])
        (fix:SI (fix:SF (reg:SF 233)))) "../System/map.c":103:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 233)
        (nil)))
(insn 270 269 271 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 120 [ _9 ])
            (reg:SI 235 [ spx ]))) "../System/map.c":105:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 235 [ spx ])
        (expr_list:REG_DEAD (reg:SI 120 [ _9 ])
            (nil))))
(jump_insn 271 270 272 27 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "../System/map.c":105:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 291)
(note 272 271 277 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 277 272 278 28 (set (reg:SF 241 [ sp[3].y ])
        (mem/c:SF (reg/f:SI 254) [1 sp[3].y+0 S4 A32])) "../System/map.c":104:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 254) [1 sp[3].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059d4870 sp>)
                        (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])
            (nil))))
(insn 278 277 279 28 (set (reg:SF 240)
        (div:SF (reg:SF 241 [ sp[3].y ])
            (reg:SF 164 [ _127 ]))) "../System/map.c":104:24 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 241 [ sp[3].y ])
        (expr_list:REG_DEAD (reg:SF 164 [ _127 ])
            (nil))))
(insn 279 278 280 28 (set (reg:SI 242 [ spy ])
        (fix:SI (fix:SF (reg:SF 240)))) "../System/map.c":104:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 240)
        (nil)))
(insn 280 279 281 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 264 [orig:119 _8 ] [119])
            (reg:SI 242 [ spy ]))) "../System/map.c":105:19 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 242 [ spy ])
        (nil)))
(jump_insn 281 280 282 28 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "../System/map.c":105:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 856416484 (nil)))
 -> 291)
(note 282 281 288 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 288 282 283 29 NOTE_INSN_DELETED)
(debug_insn 283 288 284 29 (debug_marker) "../System/map.c":105:34 -1
     (nil))
(insn 284 283 285 29 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(insn 285 284 286 29 (set (reg:SI 1 r1)
        (reg:SI 2 r2)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 286 285 287 29 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 287 286 406 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/map.c":105:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e2b600 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 406 287 289 29 (set (reg:SI 262)
        (reg:SI 0 r0)) "../System/map.c":105:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 289 406 290 29 (set (reg/v:SI 125 [ color ])
        (zero_extend:SI (subreg:HI (reg:SI 262) 0))) "../System/map.c":105:40 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(debug_insn 290 289 291 29 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) "../System/map.c":105:40 -1
     (nil))
(code_label 291 290 292 30 32 (nil) [4 uses])
(note 292 291 293 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 293 292 294 30 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 294 293 295 30 (var_location:HI color (subreg:HI (reg/v:SI 125 [ color ]) 0)) -1
     (nil))
(debug_insn 295 294 296 30 (debug_marker) "../System/map.c":109:4 -1
     (nil))
(debug_insn 296 295 306 30 (debug_marker) "../System/map.c":110:4 -1
     (nil))
(insn 306 296 297 30 (set (reg/v:SI 267 [orig:130 x ] [130])
        (plus:SI (reg/v:SI 267 [orig:130 x ] [130])
            (const_int 2 [0x2]))) "../System/map.c":93:30 7 {*arm_addsi3}
     (nil))
(insn 297 306 298 30 (set (reg:SI 243 [ color ])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 298 297 299 30 (set (zero_extract:SI (reg:SI 243 [ color ])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 125 [ color ])) 99 {insv_t2}
     (nil))
(insn 299 298 301 30 (set (zero_extract:SI (reg:SI 243 [ color ])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 125 [ color ])) 99 {insv_t2}
     (expr_list:REG_DEAD (reg/v:SI 125 [ color ])
        (nil)))
(insn 301 299 302 30 (set (mem:SI (reg:SI 266 [orig:129 ivtmp.54 ] [129]) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.45_242]+0 S4 A16])
        (unspec:SI [
                (reg:SI 243 [ color ])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":109:27 158 {unaligned_storesi}
     (nil))
(debug_insn 302 301 303 30 (debug_marker) "../System/map.c":111:4 -1
     (nil))
(debug_insn 303 302 304 30 (debug_marker) "../System/map.c":112:4 -1
     (nil))
(insn 304 303 305 30 (set (mem:SI (plus:SI (reg:SI 266 [orig:129 ivtmp.54 ] [129])
                (const_int 480 [0x1e0])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)_229]+0 S4 A16])
        (unspec:SI [
                (reg:SI 243 [ color ])
            ] UNSPEC_UNALIGNED_STORE)) "../System/map.c":111:31 158 {unaligned_storesi}
     (expr_list:REG_DEAD (reg:SI 243 [ color ])
        (nil)))
(debug_insn 305 304 307 30 (debug_marker) "../System/map.c":93:29 -1
     (nil))
(debug_insn 307 305 308 30 (var_location:SI x (reg/v:SI 267 [orig:130 x ] [130])) -1
     (nil))
(debug_insn 308 307 309 30 (debug_marker) "../System/map.c":93:15 -1
     (nil))
(insn 309 308 311 30 (set (reg:SI 266 [orig:129 ivtmp.54 ] [129])
        (plus:SI (reg:SI 266 [orig:129 ivtmp.54 ] [129])
            (const_int 4 [0x4]))) "../System/map.c":93:3 7 {*arm_addsi3}
     (nil))
(insn 311 309 312 30 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 267 [orig:130 x ] [130])
            (const_int 100 [0x64]))) "../System/map.c":93:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 312 311 313 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 310)
            (pc))) "../System/map.c":93:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1052275756 (nil)))
 -> 310)
(note 313 312 417 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 417 313 314 31 (set (reg/v:SI 263 [orig:128 y ] [128])
        (reg/v:SI 265 [orig:128 y ] [128])) "../System/map.c":92:30 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 265 [orig:128 y ] [128])
        (nil)))
(debug_insn 314 417 315 31 (debug_marker) "../System/map.c":92:29 -1
     (nil))
(insn 315 314 316 31 (set (reg/v:SI 263 [orig:128 y ] [128])
        (plus:SI (reg/v:SI 263 [orig:128 y ] [128])
            (const_int 2 [0x2]))) "../System/map.c":92:30 7 {*arm_addsi3}
     (nil))
(debug_insn 316 315 317 31 (var_location:SI y (reg/v:SI 263 [orig:128 y ] [128])) -1
     (nil))
(debug_insn 317 316 318 31 (debug_marker) "../System/map.c":92:14 -1
     (nil))
(insn 318 317 319 31 (set (reg:SI 171 [ ivtmp.67 ])
        (plus:SI (reg:SI 171 [ ivtmp.67 ])
            (const_int 960 [0x3c0]))) "../System/map.c":92:2 7 {*arm_addsi3}
     (nil))
(insn 319 318 320 31 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 263 [orig:128 y ] [128])
            (const_int 50 [0x32]))) "../System/map.c":92:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 320 319 321 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 331)
            (pc))) "../System/map.c":92:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 42994324 (nil)))
 -> 331)
(code_label 321 320 322 32 29 (nil) [1 uses])
(note 322 321 62 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(note 62 322 323 32 NOTE_INSN_DELETED)
(debug_insn 323 62 324 32 (var_location:SI y (reg/v:SI 263 [orig:128 y ] [128])) -1
     (nil))
(debug_insn 324 323 325 32 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 325 324 326 32 (debug_marker) "../System/map.c":93:15 -1
     (nil))
(insn 326 325 61 32 (set (reg:SI 119 [ _8 ])
        (ashiftrt:SI (reg/v:SI 263 [orig:128 y ] [128])
            (const_int 1 [0x1]))) "../System/map.c":98:13 147 {*arm_shiftsi3}
     (nil))
(insn 61 326 3 32 (set (reg:SI 247)
        (const_int 50 [0x32])) "../System/map.c":98:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 3 61 4 32 (set (reg:SI 129 [ ivtmp.54 ])
        (reg:SI 171 [ ivtmp.67 ])) "../System/map.c":98:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 63 32 (set (reg/v:SI 130 [ x ])
        (const_int 0 [0])) "../System/map.c":93:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 63 4 418 32 (set (reg:SI 249)
        (plus:SI (mult:SI (reg:SI 247)
                (reg:SI 119 [ _8 ]))
            (reg/f:SI 246))) "../System/map.c":98:16 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 247)
        (nil)))
(insn 418 63 419 32 (set (reg:SI 264 [orig:119 _8 ] [119])
        (reg:SI 119 [ _8 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 119 [ _8 ])
        (nil)))
(insn 419 418 420 32 (set (reg/v:SI 265 [orig:128 y ] [128])
        (reg/v:SI 263 [orig:128 y ] [128])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 263 [orig:128 y ] [128])
        (nil)))
(insn 420 419 421 32 (set (reg:SI 266 [orig:129 ivtmp.54 ] [129])
        (reg:SI 129 [ ivtmp.54 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 129 [ ivtmp.54 ])
        (nil)))
(insn 421 420 413 32 (set (reg/v:SI 267 [orig:130 x ] [130])
        (reg/v:SI 130 [ x ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 130 [ x ])
        (nil)))
(jump_insn 413 421 414 32 (set (pc)
        (label_ref 310)) 284 {*arm_jump}
     (nil)
 -> 310)
(barrier 414 413 331)
(code_label 331 414 332 33 28 (nil) [1 uses])
(note 332 331 415 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(note 415 332 0 NOTE_INSN_DELETED)
