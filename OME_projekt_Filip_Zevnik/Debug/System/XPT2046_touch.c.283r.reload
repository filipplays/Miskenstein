
;; Function XPT2046_touch_pressed (XPT2046_touch_pressed, funcdef_no=357, decl_uid=10099, cgraph_uid=361, symbol_order=360)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =r  (1) %r  (2) I {*arm_xorsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 18: point = 0, n_alt = -1
   Insn 17: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 5
   Insn 6: point = 5, n_alt = 5
 r113: [2..3]
 r116: [4..5]
 r119: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [2..3]
 r116: [4..5]
 r119: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 9
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 17


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


XPT2046_touch_pressed

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 3 [r3]
;;  ref usage 	r0={4d,4u} r1={1d} r2={1d} r3={2d,1u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 33{26d,7u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 2 11 2 NOTE_INSN_DELETED)
(note 11 8 12 2 NOTE_INSN_DELETED)
(note 12 11 5 2 NOTE_INSN_DELETED)
(debug_insn 5 12 6 2 (debug_marker) "../System/XPT2046_touch.c":46:5 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 3 r3 [116])
        (const_int 1207962624 [0x48000c00])) "../System/XPT2046_touch.c":46:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1207962624 [0x48000c00])
        (nil)))
(insn 7 6 9 2 (set (reg:SI 0 r0 [orig:113 _1 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 16 [0x10])) [3 MEM[(struct GPIO_TypeDef *)1207962624B].IDR+0 S4 A64])) "../System/XPT2046_touch.c":46:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 9 7 17 2 (set (reg:SI 0 r0 [119])
        (xor:SI (reg:SI 0 r0 [orig:113 _1 ] [113])
            (const_int 64 [0x40]))) "../System/XPT2046_touch.c":46:66 109 {*arm_xorsi3}
     (nil))
(insn 17 9 18 2 (set (reg/i:SI 0 r0)
        (zero_extract:SI (reg:SI 0 r0 [119])
            (const_int 1 [0x1])
            (const_int 6 [0x6]))) "../System/XPT2046_touch.c":47:1 161 {extzv_t2}
     (nil))
(insn 18 17 21 2 (use (reg/i:SI 0 r0)) "../System/XPT2046_touch.c":47:1 -1
     (nil))
(note 21 18 22 NOTE_INSN_DELETED)
(note 22 21 0 NOTE_INSN_DELETED)

;; Function XPT2046_touch_get_coordinates (XPT2046_touch_get_coordinates, funcdef_no=358, decl_uid=10102, cgraph_uid=362, symbol_order=361)

      Creating newreg=212
Removing SCRATCH in insn #108 (nop 3)
rescanning insn with uid = 108.
      Creating newreg=213
Removing SCRATCH in insn #125 (nop 3)
rescanning insn with uid = 125.
      Creating newreg=214
Removing SCRATCH in insn #137 (nop 3)
rescanning insn with uid = 137.
      Creating newreg=215
Removing SCRATCH in insn #169 (nop 3)
rescanning insn with uid = 169.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 51:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
      Removing equiv init insn 187 (freq=10)
  187: r204:SI=sfp:SI+0x8
      REG_EQUIV sfp:SI-0x8
deleting insn with uid = 187.
      Removing equiv init insn 188 (freq=10)
  188: r205:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x4
deleting insn with uid = 188.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 204 in operand 1 of insn 50 on equiv sfp:SI+0x8
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=216, assigning class CORE_REGS to r216
   50: r2:SI=r216:SI
      REG_EQUAL sfp:SI-0x8
    Inserting insn reload before:
  219: r216:SI=sfp:SI+0x8

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 219:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r216
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 48:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 68:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 205 in operand 1 of insn 70 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=217, assigning class CORE_REGS to r217
   70: r2:SI=r217:SI
      REG_EQUAL sfp:SI-0x4
    Inserting insn reload before:
  220: r217:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 220:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r217
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) r  (1) m {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) l  (1) l {*arm_rev16}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) l  (1) l {*arm_rev16}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 91:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) r  (2) r {*arm_zero_extendhisi2addsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) r  (2) r {*arm_zero_extendhisi2addsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) r  (2) I {*andsi3_compare0}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
      Change to class GENERAL_REGS for r212
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 112:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 102:  (0) m  (1) l {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) r  (1) r {*arm_cmpsi_insn}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
      Change to class GENERAL_REGS for r213
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 127:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 128:  (0) =r  (1) %0  (2) r {*thumb2_uminsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 209:  (0) r  (1) rk  (2) L {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 210:  (0) r  (1) rk  (2) L {*arm_addsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
      Change to class GENERAL_REGS for r214
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 152:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 153:  (0) =r  (1) %0  (2) r {*thumb2_uminsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 159:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 160:  (0) =r  (1) %0  (2) r {*thumb32_umaxsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 205:  (0) r  (1) rk  (2) L {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 206:  (0) r  (1) rk  (2) L {*arm_addsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
      Change to class GENERAL_REGS for r215
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 157:  (0) m  (1) r {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 177:  (0) m  (1) r {*thumb2_movhi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 177: point = 0, n_alt = 4
   Insn 157: point = 1, n_alt = 4
   Insn 170: point = 2, n_alt = 1
   Insn 169: point = 4, n_alt = 0
   Insn 206: point = 6, n_alt = 10
   Insn 205: point = 7, n_alt = 10
   Insn 168: point = 9, n_alt = 5
   Insn 164: point = 10, n_alt = 1
   Insn 163: point = 12, n_alt = 1
   Insn 160: point = 14, n_alt = 0
   Insn 159: point = 16, n_alt = 4
   Insn 153: point = 17, n_alt = 0
   Insn 152: point = 19, n_alt = 4
  BB 5
   Insn 201: point = 21, n_alt = -1
   Insn 147: point = 21, n_alt = 0
   Insn 140: point = 23, n_alt = 1
   Insn 138: point = 25, n_alt = 0
   Insn 137: point = 27, n_alt = 0
   Insn 210: point = 29, n_alt = 10
   Insn 209: point = 30, n_alt = 10
   Insn 136: point = 32, n_alt = 5
   Insn 132: point = 33, n_alt = 1
   Insn 131: point = 35, n_alt = 1
   Insn 128: point = 37, n_alt = 0
   Insn 127: point = 39, n_alt = 4
   Insn 126: point = 40, n_alt = 1
   Insn 125: point = 42, n_alt = 0
  BB 6
   Insn 8: point = 45, n_alt = -2
  BB 4
   Insn 120: point = 48, n_alt = -1
   Insn 119: point = 48, n_alt = 1
   Insn 102: point = 49, n_alt = 7
   Insn 101: point = 50, n_alt = 1
   Insn 118: point = 51, n_alt = 5
   Insn 100: point = 52, n_alt = 5
   Insn 112: point = 53, n_alt = 4
   Insn 109: point = 55, n_alt = 1
   Insn 108: point = 57, n_alt = 0
   Insn 107: point = 59, n_alt = 5
  BB 3
   Insn 95: point = 61, n_alt = -1
   Insn 94: point = 61, n_alt = 0
   Insn 84: point = 63, n_alt = 0
   Insn 78: point = 65, n_alt = 0
   Insn 91: point = 67, n_alt = 4
   Insn 82: point = 69, n_alt = 1
   Insn 76: point = 71, n_alt = 1
   Insn 81: point = 73, n_alt = 5
   Insn 75: point = 74, n_alt = 5
   Insn 73: point = 75, n_alt = -1
   Insn 198: point = 75, n_alt = -2
   Insn 197: point = 75, n_alt = -2
   Insn 70: point = 75, n_alt = 0
	Hard reg 2 is preferable by r217 with profit 990
   Insn 220: point = 76, n_alt = 4
   Insn 69: point = 77, n_alt = 1
   Insn 68: point = 77, n_alt = 8
   Insn 61: point = 77, n_alt = -1
   Insn 196: point = 77, n_alt = -2
   Insn 58: point = 77, n_alt = 1
   Insn 57: point = 77, n_alt = 1
   Insn 59: point = 77, n_alt = 5
   Insn 53: point = 77, n_alt = -1
   Insn 195: point = 77, n_alt = -2
   Insn 48: point = 77, n_alt = 8
   Insn 194: point = 77, n_alt = -2
   Insn 50: point = 77, n_alt = 0
	Hard reg 2 is preferable by r216 with profit 990
   Insn 219: point = 78, n_alt = 4
   Insn 49: point = 79, n_alt = 1
   Insn 41: point = 79, n_alt = -1
   Insn 192: point = 79, n_alt = -2
   Insn 38: point = 79, n_alt = 1
   Insn 191: point = 79, n_alt = 1
   Insn 39: point = 79, n_alt = 5
  BB 2
   Insn 37: point = 80, n_alt = 1
   Insn 7: point = 81, n_alt = -2
   Insn 51: point = 82, n_alt = 6
   Insn 40: point = 83, n_alt = 5
   Insn 5: point = 84, n_alt = 1
   Insn 19: point = 85, n_alt = 7
   Insn 3: point = 86, n_alt = -2
   Insn 2: point = 88, n_alt = -2
   Insn 6: point = 90, n_alt = 1
   Insn 18: point = 91, n_alt = 1
   Insn 200: point = 92, n_alt = -2
   Insn 199: point = 93, n_alt = -2
   Insn 17: point = 94, n_alt = 5
  r204 is added to live at bb2 start
  r205 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 9 (  1.1)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      113  130  131  136  137  138  139  206  207  208  209
      210
    liveout: 2:

        7   13  102  103  113  130  131  136  137  206  207
      208

BB 3:
    gen: 3:

      113  130  131  206  207  208
    killed: 3:

      100  113  130  131  152  153  155  156  158  216  217
    livein: 3:

      113  130  131  136  137  206  207  208
    liveout: 3:

        7   13  102  103  113  130  131  136  137  206  207
      208

BB 4:
    gen: 4:

      130  131
    killed: 4:

      100  128  129  159  160  161  162  163  212
    livein: 4:

      113  130  131  136  137
    liveout: 4:

        7   13  102  103  113  129  130  136  137  162

BB 5:
    gen: 5:

      130  162
    killed: 5:

      100  135  164  165  167  170  171  172  175  176  177
      179  213  214
    livein: 5:

      129  130  136  137  162
    liveout: 5:

        7   13  102  103  129  135  136  137

BB 6:
    gen: 6:

      113
    killed: 6:

      135
    livein: 6:

      113  129  136  137
    liveout: 6:

        7   13  102  103  129  135  136  137

BB 7:
    gen: 7:

      129  135  136  137
    killed: 7:

      100  123  185  187  188  191  192  193  195  196  197
      215
    livein: 7:

      129  135  136  137
    liveout: 7:

        7   13  102  103
 r113: [68..84] [46..61]
 r123: [15..17]
 r128: [54..55]
 r129: [18..53]
 r130: [48..81] [43..44]
 r131: [58..90]
 r135: [45..45] [1..21]
 r136: [1..88]
 r137: [0..86]
 r138: [85..94]
 r139: [85..91]
 r152: [66..71]
 r153: [72..74]
 r155: [64..69]
 r156: [70..73]
 r158: [62..67]
 r159: [49..52]
 r160: [49..50]
 r161: [56..57]
 r162: [48..59] [43..44]
 r163: [48..51]
 r164: [36..40]
 r165: [41..42]
 r167: [38..39]
 r170: [34..35]
 r171: [31..33]
 r172: [26..30]
 r175: [24..27]
 r176: [28..32]
 r177: [24..25]
 r179: [22..23]
 r185: [18..19]
 r187: [13..14]
 r188: [15..16]
 r191: [11..12]
 r192: [8..10]
 r193: [5..7]
 r195: [0..2]
 r196: [3..4]
 r197: [5..9]
 r204: [61..95]
 r205: [61..95]
 r206: [61..80]
 r207: [61..83]
 r208: [61..82]
 r209: [89..93]
 r210: [87..92]
 r212: [57..57]
 r213: [42..42]
 r214: [27..27]
 r215: [4..4]
 r216: [77..78]
 r217: [75..76]
Compressing live ranges: from 96 to 62 - 64%
Ranges after the compression:
 r113: [46..55] [35..43]
 r123: [12..13]
 r128: [37..38]
 r129: [14..36]
 r130: [35..55] [32..33]
 r131: [41..61]
 r135: [34..34] [0..15]
 r136: [0..59]
 r137: [0..57]
 r138: [56..61]
 r139: [56..61]
 r152: [44..49]
 r153: [50..51]
 r155: [44..47]
 r156: [48..51]
 r158: [44..45]
 r159: [35..36]
 r160: [35..36]
 r161: [39..40]
 r162: [35..42] [32..33]
 r163: [35..36]
 r164: [28..29]
 r165: [30..31]
 r167: [28..29]
 r170: [26..27]
 r171: [24..25]
 r172: [20..23]
 r175: [18..21]
 r176: [22..25]
 r177: [18..19]
 r179: [16..17]
 r185: [14..15]
 r187: [10..11]
 r188: [12..13]
 r191: [8..9]
 r192: [6..7]
 r193: [4..5]
 r195: [0..1]
 r196: [2..3]
 r197: [4..7]
 r204: [43..61]
 r205: [43..61]
 r206: [43..55]
 r207: [43..55]
 r208: [43..55]
 r209: [60..61]
 r210: [58..61]
 r212: [40..40]
 r213: [31..31]
 r214: [21..21]
 r215: [3..3]
 r216: [54..55]
 r217: [52..53]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 7
   Insn 177: point = 0, n_alt = 4
   Insn 157: point = 1, n_alt = 4
   Insn 170: point = 2, n_alt = 1
   Insn 169: point = 4, n_alt = 0
   Insn 206: point = 6, n_alt = 10
   Insn 205: point = 7, n_alt = 10
   Insn 168: point = 9, n_alt = 5
   Insn 164: point = 10, n_alt = 1
   Insn 163: point = 12, n_alt = 1
   Insn 160: point = 14, n_alt = 0
   Insn 159: point = 16, n_alt = 4
   Insn 153: point = 17, n_alt = 0
   Insn 152: point = 19, n_alt = 4
  BB 5
   Insn 201: point = 21, n_alt = -1
   Insn 147: point = 21, n_alt = 0
   Insn 140: point = 23, n_alt = 1
   Insn 138: point = 25, n_alt = 0
   Insn 137: point = 27, n_alt = 0
   Insn 210: point = 29, n_alt = 10
   Insn 209: point = 30, n_alt = 10
   Insn 136: point = 32, n_alt = 5
   Insn 132: point = 33, n_alt = 1
   Insn 131: point = 35, n_alt = 1
   Insn 128: point = 37, n_alt = 0
   Insn 127: point = 39, n_alt = 4
   Insn 126: point = 40, n_alt = 1
   Insn 125: point = 42, n_alt = 0
  BB 6
   Insn 8: point = 45, n_alt = -2
  BB 4
   Insn 120: point = 48, n_alt = -1
   Insn 119: point = 48, n_alt = 1
   Insn 102: point = 49, n_alt = 7
   Insn 101: point = 50, n_alt = 1
   Insn 118: point = 51, n_alt = 5
   Insn 100: point = 52, n_alt = 5
   Insn 112: point = 53, n_alt = 4
   Insn 109: point = 55, n_alt = 1
   Insn 108: point = 57, n_alt = 0
   Insn 107: point = 59, n_alt = 5
  BB 3
   Insn 95: point = 61, n_alt = -1
   Insn 94: point = 61, n_alt = 0
   Insn 84: point = 63, n_alt = 0
   Insn 78: point = 65, n_alt = 0
   Insn 91: point = 67, n_alt = 4
   Insn 82: point = 69, n_alt = 1
   Insn 76: point = 71, n_alt = 1
   Insn 81: point = 73, n_alt = 5
   Insn 75: point = 74, n_alt = 5
   Insn 73: point = 75, n_alt = -1
   Insn 198: point = 75, n_alt = -2
   Insn 197: point = 75, n_alt = -2
   Insn 70: point = 75, n_alt = 0
	Hard reg 2 is preferable by r217 with profit 990
   Insn 220: point = 76, n_alt = 4
   Insn 69: point = 77, n_alt = 1
   Insn 68: point = 77, n_alt = 8
   Insn 61: point = 77, n_alt = -1
   Insn 196: point = 77, n_alt = -2
   Insn 58: point = 77, n_alt = 1
   Insn 57: point = 77, n_alt = 1
   Insn 59: point = 77, n_alt = 5
   Insn 53: point = 77, n_alt = -1
   Insn 195: point = 77, n_alt = -2
   Insn 48: point = 77, n_alt = 8
   Insn 194: point = 77, n_alt = -2
   Insn 50: point = 77, n_alt = 0
	Hard reg 2 is preferable by r216 with profit 990
   Insn 219: point = 78, n_alt = 4
   Insn 49: point = 79, n_alt = 1
   Insn 41: point = 79, n_alt = -1
   Insn 192: point = 79, n_alt = -2
   Insn 38: point = 79, n_alt = 1
   Insn 191: point = 79, n_alt = 1
   Insn 39: point = 79, n_alt = 5
  BB 2
   Insn 37: point = 80, n_alt = 1
   Insn 7: point = 81, n_alt = -2
   Insn 51: point = 82, n_alt = 6
   Insn 40: point = 83, n_alt = 5
   Insn 5: point = 84, n_alt = 1
   Insn 19: point = 85, n_alt = 7
   Insn 3: point = 86, n_alt = -2
   Insn 2: point = 88, n_alt = -2
   Insn 6: point = 90, n_alt = 1
   Insn 18: point = 91, n_alt = 1
   Insn 200: point = 92, n_alt = -2
   Insn 199: point = 93, n_alt = -2
   Insn 17: point = 94, n_alt = 5
 r113: [68..84] [46..61]
 r123: [15..17]
 r128: [54..55]
 r129: [18..53]
 r130: [48..81] [43..44]
 r131: [58..90]
 r135: [45..45] [1..21]
 r136: [1..88]
 r137: [0..86]
 r138: [85..94]
 r139: [85..91]
 r152: [66..71]
 r153: [72..74]
 r155: [64..69]
 r156: [70..73]
 r158: [62..67]
 r159: [49..52]
 r160: [49..50]
 r161: [56..57]
 r162: [48..59] [43..44]
 r163: [48..51]
 r164: [36..40]
 r165: [41..42]
 r167: [38..39]
 r170: [34..35]
 r171: [31..33]
 r172: [26..30]
 r175: [24..27]
 r176: [28..32]
 r177: [24..25]
 r179: [22..23]
 r185: [18..19]
 r187: [13..14]
 r188: [15..16]
 r191: [11..12]
 r192: [8..10]
 r193: [5..7]
 r195: [0..2]
 r196: [3..4]
 r197: [5..9]
 r206: [61..80]
 r207: [61..83]
 r208: [61..82]
 r209: [89..93]
 r210: [87..92]
 r212: [57..57]
 r213: [42..42]
 r214: [27..27]
 r215: [4..4]
 r216: [77..78]
 r217: [75..76]
Compressing live ranges: from 95 to 62 - 65%
Ranges after the compression:
 r113: [46..55] [35..43]
 r123: [12..13]
 r128: [37..38]
 r129: [14..36]
 r130: [35..55] [32..33]
 r131: [41..61]
 r135: [34..34] [0..15]
 r136: [0..59]
 r137: [0..57]
 r138: [56..61]
 r139: [56..61]
 r152: [44..49]
 r153: [50..51]
 r155: [44..47]
 r156: [48..51]
 r158: [44..45]
 r159: [35..36]
 r160: [35..36]
 r161: [39..40]
 r162: [35..42] [32..33]
 r163: [35..36]
 r164: [28..29]
 r165: [30..31]
 r167: [28..29]
 r170: [26..27]
 r171: [24..25]
 r172: [20..23]
 r175: [18..21]
 r176: [22..25]
 r177: [18..19]
 r179: [16..17]
 r185: [14..15]
 r187: [10..11]
 r188: [12..13]
 r191: [8..9]
 r192: [6..7]
 r193: [4..5]
 r195: [0..1]
 r196: [2..3]
 r197: [4..7]
 r206: [43..55]
 r207: [43..55]
 r208: [43..55]
 r209: [60..61]
 r210: [58..61]
 r212: [40..40]
 r213: [31..31]
 r214: [21..21]
 r215: [3..3]
 r216: [54..55]
 r217: [52..53]

********** Assignment #1: **********

	 Assigning to 216 (cl=GENERAL_REGS, orig=216, freq=1980, tfirst=216, tfreq=1980)...
	   Assign 2 to reload r216 (freq=1980)
	 Assigning to 217 (cl=GENERAL_REGS, orig=217, freq=1980, tfirst=217, tfreq=1980)...
	   Assign 2 to reload r217 (freq=1980)
	 Assigning to 212 (cl=GENERAL_REGS, orig=212, freq=10, tfirst=212, tfreq=10)...
	   Assign 1 to reload r212 (freq=10)
	 Assigning to 215 (cl=GENERAL_REGS, orig=215, freq=10, tfirst=215, tfreq=10)...
	   Assign 2 to reload r215 (freq=10)
	 Assigning to 213 (cl=GENERAL_REGS, orig=213, freq=5, tfirst=213, tfreq=5)...
	   Assign 1 to reload r213 (freq=5)
	 Assigning to 214 (cl=GENERAL_REGS, orig=214, freq=5, tfirst=214, tfreq=5)...
	   Assign 0 to reload r214 (freq=5)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=56)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=36, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=16)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 94
changing reg in insn 5
changing reg in insn 8
changing reg in insn 91
changing reg in insn 153
changing reg in insn 160
changing reg in insn 154
changing reg in insn 160
changing reg in insn 109
changing reg in insn 217
changing reg in insn 112
changing reg in insn 112
changing reg in insn 153
changing reg in insn 113
changing reg in insn 153
changing reg in insn 78
changing reg in insn 7
changing reg in insn 125
changing reg in insn 78
changing reg in insn 119
changing reg in insn 104
changing reg in insn 89
changing reg in insn 79
changing reg in insn 33
changing reg in insn 125
changing reg in insn 119
changing reg in insn 84
changing reg in insn 6
changing reg in insn 108
changing reg in insn 84
changing reg in insn 7
changing reg in insn 88
changing reg in insn 85
changing reg in insn 32
changing reg in insn 108
changing reg in insn 147
changing reg in insn 8
changing reg in insn 2
changing reg in insn 157
changing reg in insn 3
changing reg in insn 177
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 76
changing reg in insn 78
changing reg in insn 75
changing reg in insn 76
changing reg in insn 82
changing reg in insn 84
changing reg in insn 81
changing reg in insn 82
changing reg in insn 91
changing reg in insn 94
changing reg in insn 94
changing reg in insn 100
changing reg in insn 102
changing reg in insn 101
changing reg in insn 102
changing reg in insn 108
changing reg in insn 109
changing reg in insn 107
changing reg in insn 125
changing reg in insn 108
changing reg in insn 118
changing reg in insn 119
changing reg in insn 128
changing reg in insn 126
changing reg in insn 131
changing reg in insn 131
changing reg in insn 128
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 209
changing reg in insn 210
changing reg in insn 209
changing reg in insn 137
changing reg in insn 210
changing reg in insn 138
changing reg in insn 137
changing reg in insn 137
changing reg in insn 140
changing reg in insn 138
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 140
changing reg in insn 140
changing reg in insn 147
changing reg in insn 152
changing reg in insn 153
changing reg in insn 160
changing reg in insn 163
changing reg in insn 163
changing reg in insn 159
changing reg in insn 160
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 205
changing reg in insn 206
changing reg in insn 205
changing reg in insn 169
changing reg in insn 206
changing reg in insn 169
changing reg in insn 170
changing reg in insn 169
changing reg in insn 170
changing reg in insn 168
changing reg in insn 169
changing reg in insn 37
changing reg in insn 68
changing reg in insn 48
changing reg in insn 40
changing reg in insn 198
changing reg in insn 196
changing reg in insn 195
changing reg in insn 192
changing reg in insn 51
changing reg in insn 197
changing reg in insn 194
changing reg in insn 199
changing reg in insn 2
changing reg in insn 200
changing reg in insn 3
changing reg in insn 108
changing reg in insn 125
changing reg in insn 137
changing reg in insn 169
deleting insn with uid = 199.
deleting insn with uid = 200.
deleting insn with uid = 50.
deleting insn with uid = 70.
deleting insn with uid = 8.


try_optimize_cfg iteration 1

Edge 4->6 redirected to 7
deleting block 6
Removing jump 201.
deleting insn with uid = 201.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 73.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 8 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 8 (  1.1)


XPT2046_touch_get_coordinates

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,6u} r1={15d,10u} r2={26d,23u,1e} r3={23d,22u,3e} r4={4d,4u} r5={2d,5u} r6={2d,6u,1e} r7={2d,7u,2e} r8={1d,2u} r9={1d,2u} r10={1d,1u} r11={1d,1u} r12={8d} r13={1d,18u} r14={5d} r15={4d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={9d,2u} r101={4d} r102={2e} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 538{420d,109u,9e} in 132{128 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 9 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 4 12 2 (debug_marker) "../System/XPT2046_touch.c":56:2 -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/XPT2046_touch.c":57:5 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/XPT2046_touch.c":58:5 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "../System/XPT2046_touch.c":60:5 -1
     (nil))
(debug_insn 15 14 16 2 (debug_marker:BLK) "../System/XPT2046_touch.c":32:13 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/XPT2046_touch.c":34:2 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 3 r3 [138])
        (const_int 1207963648 [0x48001000])) "../System/XPT2046_touch.c":34:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1207963648 [0x48001000])
        (nil)))
(insn 18 17 6 2 (set (reg:SI 2 r2 [139])
        (const_int 2 [0x2])) "../System/XPT2046_touch.c":34:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 6 18 2 2 (set (reg/v:SI 6 r6 [orig:131 avg_y ] [131])
        (const_int 0 [0])) "../System/XPT2046_touch.c":63:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 2 6 3 2 (set (reg/v/f:SI 11 fp [orig:136 x ] [136])
        (reg:SI 0 r0 [209])) "../System/XPT2046_touch.c":53:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 19 2 (set (reg/v/f:SI 10 r10 [orig:137 y ] [137])
        (reg:SI 1 r1 [210])) "../System/XPT2046_touch.c":53:1 728 {*thumb2_movsi_vfp}
     (nil))
(insn 19 3 20 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 40 [0x28])) [3 MEM[(struct GPIO_TypeDef *)1207963648B].BRR+0 S4 A64])
        (reg:SI 2 r2 [139])) "../System/XPT2046_touch.c":34:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 20 19 21 2 (debug_marker) "../System/XPT2046_touch.c":62:5 -1
     (nil))
(debug_insn 21 20 22 2 (var_location:SI avg_x (const_int 0 [0])) "../System/XPT2046_touch.c":62:14 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/XPT2046_touch.c":63:5 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI avg_y (const_int 0 [0])) "../System/XPT2046_touch.c":63:14 -1
     (nil))
(debug_insn 24 23 25 2 (debug_marker) "../System/XPT2046_touch.c":66:5 -1
     (nil))
(debug_insn 25 24 26 2 (debug_marker) "../System/XPT2046_touch.c":66:9 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:QI i (const_int 0 [0])) -1
     (nil))
(debug_insn 27 26 28 2 (var_location:SI avg_y (const_int 0 [0])) -1
     (nil))
(debug_insn 28 27 29 2 (var_location:SI avg_x (const_int 0 [0])) -1
     (nil))
(debug_insn 29 28 5 2 (debug_marker) "../System/XPT2046_touch.c":66:24 -1
     (nil))
(insn 5 29 40 2 (set (reg:SI 4 r4 [orig:113 ivtmp_2 ] [113])
        (const_int 100 [0x64])) "../System/XPT2046_touch.c":34:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 100 [0x64])
        (nil)))
(insn 40 5 51 2 (set (reg/f:SI 5 r5 [207])
        (symbol_ref:SI ("hspi1") [flags 0xc0]  <var_decl 0000000006af7c60 hspi1>)) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("hspi1") [flags 0xc0]  <var_decl 0000000006af7c60 hspi1>)
        (nil)))
(insn 51 40 7 2 (set (reg/f:SI 9 r9 [208])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) "../System/XPT2046_touch.c":73:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 7 51 187 2 (set (reg/v:SI 7 r7 [orig:130 avg_x ] [130])
        (reg/v:SI 6 r6 [orig:131 avg_y ] [131])) "../System/XPT2046_touch.c":62:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(note 187 7 188 2 NOTE_INSN_DELETED)
(note 188 187 37 2 NOTE_INSN_DELETED)
(insn 37 188 93 2 (set (reg:SI 8 r8 [206])
        (const_int -1 [0xffffffffffffffff])) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
(code_label 93 37 30 3 6 (nil) [1 uses])
(note 30 93 77 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 77 30 83 3 NOTE_INSN_DELETED)
(note 83 77 92 3 NOTE_INSN_DELETED)
(note 92 83 31 3 NOTE_INSN_DELETED)
(debug_insn 31 92 32 3 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 32 31 33 3 (var_location:SI avg_y (reg/v:SI 6 r6 [orig:131 avg_y ] [131])) -1
     (nil))
(debug_insn 33 32 34 3 (var_location:SI avg_x (reg/v:SI 7 r7 [orig:130 avg_x ] [130])) -1
     (nil))
(debug_insn 34 33 39 3 (debug_marker) "../System/XPT2046_touch.c":70:9 -1
     (nil))
(insn 39 34 191 3 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 191 39 38 3 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 38 191 192 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 192 38 41 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [207])) "../System/XPT2046_touch.c":70:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 41 192 42 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_SPI_Transmit") [flags 0x41]  <function_decl 0000000006aa4e00 HAL_SPI_Transmit>) [0 HAL_SPI_Transmit S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/XPT2046_touch.c":70:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_SPI_Transmit") [flags 0x41]  <function_decl 0000000006aa4e00 HAL_SPI_Transmit>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 42 41 43 3 (debug_marker) "../System/XPT2046_touch.c":71:9 -1
     (nil))
(debug_insn 43 42 49 3 (debug_marker) "../System/XPT2046_touch.c":73:9 -1
     (nil))
(insn 49 43 219 3 (set (reg:SI 3 r3)
        (const_int 2 [0x2])) "../System/XPT2046_touch.c":73:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 219 49 194 3 (set (reg:SI 2 r2 [216])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/XPT2046_touch.c":73:9 7 {*arm_addsi3}
     (nil))
(insn 194 219 48 3 (set (reg:SI 1 r1)
        (reg/f:SI 9 r9 [208])) "../System/XPT2046_touch.c":73:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 48 194 195 3 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 8 r8 [206])) "../System/XPT2046_touch.c":73:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 195 48 53 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [207])) "../System/XPT2046_touch.c":73:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 53 195 54 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_SPI_TransmitReceive") [flags 0x41]  <function_decl 0000000006ac1000 HAL_SPI_TransmitReceive>) [0 HAL_SPI_TransmitReceive S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/XPT2046_touch.c":73:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_SPI_TransmitReceive") [flags 0x41]  <function_decl 0000000006ac1000 HAL_SPI_TransmitReceive>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:HI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 54 53 59 3 (debug_marker) "../System/XPT2046_touch.c":75:9 -1
     (nil))
(insn 59 54 57 3 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/XPT2046_touch.c":75:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 57 59 58 3 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) "../System/XPT2046_touch.c":75:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 196 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../System/XPT2046_touch.c":75:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 196 58 61 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [207])) "../System/XPT2046_touch.c":75:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 61 196 62 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_SPI_Transmit") [flags 0x41]  <function_decl 0000000006aa4e00 HAL_SPI_Transmit>) [0 HAL_SPI_Transmit S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/XPT2046_touch.c":75:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_SPI_Transmit") [flags 0x41]  <function_decl 0000000006aa4e00 HAL_SPI_Transmit>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 62 61 63 3 (debug_marker) "../System/XPT2046_touch.c":76:9 -1
     (nil))
(debug_insn 63 62 68 3 (debug_marker) "../System/XPT2046_touch.c":78:9 -1
     (nil))
(insn 68 63 69 3 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 8 r8 [206])) "../System/XPT2046_touch.c":78:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 220 3 (set (reg:SI 3 r3)
        (const_int 2 [0x2])) "../System/XPT2046_touch.c":78:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 220 69 197 3 (set (reg:SI 2 r2 [217])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) "../System/XPT2046_touch.c":78:9 7 {*arm_addsi3}
     (nil))
(insn 197 220 198 3 (set (reg:SI 1 r1)
        (reg/f:SI 9 r9 [208])) "../System/XPT2046_touch.c":78:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 198 197 73 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [207])) "../System/XPT2046_touch.c":78:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 73 198 74 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_SPI_TransmitReceive") [flags 0x41]  <function_decl 0000000006ac1000 HAL_SPI_TransmitReceive>) [0 HAL_SPI_TransmitReceive S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/XPT2046_touch.c":78:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_SPI_TransmitReceive") [flags 0x41]  <function_decl 0000000006ac1000 HAL_SPI_TransmitReceive>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:HI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 74 73 75 3 (debug_marker) "../System/XPT2046_touch.c":80:9 -1
     (nil))
(insn 75 74 81 3 (set (reg:HI 2 r2 [orig:153 MEM <short unsigned int> [(unsigned char *)&x_raw] ] [153])
        (mem/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 MEM <short unsigned int> [(unsigned char *)&x_raw]+0 S2 A32])) "../System/XPT2046_touch.c":80:46 724 {*thumb2_movhi_vfp}
     (expr_list:REG_EQUIV (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 MEM <short unsigned int> [(unsigned char *)&x_raw]+0 S2 A32])
        (nil)))
(insn 81 75 76 3 (set (reg:HI 3 r3 [orig:156 MEM <short unsigned int> [(unsigned char *)&y_raw] ] [156])
        (mem/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 MEM <short unsigned int> [(unsigned char *)&y_raw]+0 S2 A64])) "../System/XPT2046_touch.c":81:46 724 {*thumb2_movhi_vfp}
     (expr_list:REG_EQUIV (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 MEM <short unsigned int> [(unsigned char *)&y_raw]+0 S2 A64])
        (nil)))
(insn 76 81 82 3 (set (reg:HI 2 r2 [152])
        (bswap:HI (reg:HI 2 r2 [orig:153 MEM <short unsigned int> [(unsigned char *)&x_raw] ] [153]))) "../System/XPT2046_touch.c":80:46 406 {*arm_rev16}
     (nil))
(insn 82 76 91 3 (set (reg:HI 3 r3 [155])
        (bswap:HI (reg:HI 3 r3 [orig:156 MEM <short unsigned int> [(unsigned char *)&y_raw] ] [156]))) "../System/XPT2046_touch.c":81:46 406 {*arm_rev16}
     (nil))
(insn 91 82 78 3 (set (reg:SI 4 r4 [158])
        (plus:SI (reg:SI 4 r4 [orig:113 ivtmp_2 ] [113])
            (const_int -1 [0xffffffffffffffff]))) "../System/XPT2046_touch.c":66:5 7 {*arm_addsi3}
     (nil))
(insn 78 91 79 3 (set (reg/v:SI 7 r7 [orig:130 avg_x ] [130])
        (plus:SI (zero_extend:SI (reg:HI 2 r2 [152]))
            (reg/v:SI 7 r7 [orig:130 avg_x ] [130]))) "../System/XPT2046_touch.c":80:15 174 {*arm_zero_extendhisi2addsi}
     (nil))
(debug_insn 79 78 80 3 (var_location:SI avg_x (reg/v:SI 7 r7 [orig:130 avg_x ] [130])) "../System/XPT2046_touch.c":80:15 -1
     (nil))
(debug_insn 80 79 84 3 (debug_marker) "../System/XPT2046_touch.c":81:9 -1
     (nil))
(insn 84 80 85 3 (set (reg/v:SI 6 r6 [orig:131 avg_y ] [131])
        (plus:SI (zero_extend:SI (reg:HI 3 r3 [155]))
            (reg/v:SI 6 r6 [orig:131 avg_y ] [131]))) "../System/XPT2046_touch.c":81:15 174 {*arm_zero_extendhisi2addsi}
     (nil))
(debug_insn 85 84 86 3 (var_location:SI avg_y (reg/v:SI 6 r6 [orig:131 avg_y ] [131])) "../System/XPT2046_touch.c":81:15 -1
     (nil))
(debug_insn 86 85 87 3 (debug_marker) "../System/XPT2046_touch.c":66:54 -1
     (nil))
(debug_insn 87 86 88 3 (var_location:QI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 88 87 89 3 (var_location:SI avg_y (reg/v:SI 6 r6 [orig:131 avg_y ] [131])) -1
     (nil))
(debug_insn 89 88 90 3 (var_location:SI avg_x (reg/v:SI 7 r7 [orig:130 avg_x ] [130])) -1
     (nil))
(debug_insn 90 89 94 3 (debug_marker) "../System/XPT2046_touch.c":66:24 -1
     (nil))
(insn 94 90 95 3 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (and:SI (reg:SI 4 r4 [158])
                        (const_int 255 [0xff]))
                    (const_int 0 [0])))
            (set (reg:SI 4 r4 [orig:113 ivtmp_2 ] [113])
                (and:SI (reg:SI 4 r4 [158])
                    (const_int 255 [0xff])))
        ]) "../System/XPT2046_touch.c":66:5 91 {*andsi3_compare0}
     (nil))
(jump_insn 95 94 96 3 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 93)
            (pc))) "../System/XPT2046_touch.c":66:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 93)
(note 96 95 97 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 97 96 98 4 (debug_marker) "../System/XPT2046_touch.c":84:5 -1
     (nil))
(debug_insn 98 97 99 4 (debug_marker:BLK) "../System/XPT2046_touch.c":38:13 -1
     (nil))
(debug_insn 99 98 107 4 (debug_marker) "../System/XPT2046_touch.c":40:2 -1
     (nil))
(insn 107 99 108 4 (set (reg:SI 2 r2 [162])
        (const_int 1374389535 [0x51eb851f])) "../System/XPT2046_touch.c":88:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1374389535 [0x51eb851f])
        (nil)))
(insn 108 107 109 4 (parallel [
            (set (reg:SI 3 r3 [161])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 6 r6 [orig:131 avg_y ] [131]))
                            (zero_extend:DI (reg:SI 2 r2 [162])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [212]))
        ]) "../System/XPT2046_touch.c":88:14 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 6 r6 [orig:131 avg_y ] [131]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))
(insn 109 108 217 4 (set (reg/v:SI 3 r3 [orig:128 raw_y ] [128])
        (lshiftrt:SI (reg:SI 3 r3 [161])
            (const_int 5 [0x5]))) "../System/XPT2046_touch.c":88:14 147 {*arm_shiftsi3}
     (nil))
(debug_insn 217 109 112 4 (var_location:SI D#2 (reg/v:SI 3 r3 [orig:128 raw_y ] [128])) -1
     (nil))
(insn 112 217 100 4 (set (reg/v:SI 3 r3 [orig:129 raw_y ] [129])
        (minus:SI (const_int 32768 [0x8000])
            (reg/v:SI 3 r3 [orig:128 raw_y ] [128]))) "../System/XPT2046_touch.c":91:8 45 {*arm_subsi3_insn}
     (nil))
(insn 100 112 118 4 (set (reg/f:SI 0 r0 [159])
        (const_int 1207963648 [0x48001000])) "../System/XPT2046_touch.c":40:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1207963648 [0x48001000])
        (nil)))
(insn 118 100 101 4 (set (reg:SI 1 r1 [163])
        (const_int 175599 [0x2adef])) "../System/XPT2046_touch.c":105:8 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 175599 [0x2adef])
        (nil)))
(insn 101 118 102 4 (set (reg:SI 5 r5 [160])
        (const_int 2 [0x2])) "../System/XPT2046_touch.c":40:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 102 101 103 4 (set (mem/v:SI (plus:SI (reg/f:SI 0 r0 [159])
                (const_int 24 [0x18])) [3 MEM[(struct GPIO_TypeDef *)1207963648B].BSRR+0 S4 A64])
        (reg:SI 5 r5 [160])) "../System/XPT2046_touch.c":40:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 103 102 104 4 (debug_marker) "../System/XPT2046_touch.c":87:5 -1
     (nil))
(debug_insn 104 103 105 4 (var_location:SI D#1 (udiv:SI (reg/v:SI 7 r7 [orig:130 avg_x ] [130])
        (const_int 100 [0x64]))) "../System/XPT2046_touch.c":87:14 -1
     (nil))
(debug_insn 105 104 106 4 (var_location:SI raw_x (debug_expr:SI D#1)) "../System/XPT2046_touch.c":87:14 -1
     (nil))
(debug_insn 106 105 110 4 (debug_marker) "../System/XPT2046_touch.c":88:5 -1
     (nil))
(debug_insn 110 106 111 4 (var_location:SI raw_y (debug_expr:SI D#2)) "../System/XPT2046_touch.c":88:14 -1
     (nil))
(debug_insn 111 110 113 4 (debug_marker) "../System/XPT2046_touch.c":91:3 -1
     (nil))
(debug_insn 113 111 114 4 (var_location:SI raw_y (reg/v:SI 3 r3 [orig:129 raw_y ] [129])) "../System/XPT2046_touch.c":91:8 -1
     (nil))
(debug_insn 114 113 115 4 (debug_marker) "../System/XPT2046_touch.c":98:5 -1
     (nil))
(debug_insn 115 114 119 4 (debug_marker) "../System/XPT2046_touch.c":105:6 -1
     (nil))
(insn 119 115 120 4 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:130 avg_x ] [130])
            (reg:SI 1 r1 [163]))) "../System/XPT2046_touch.c":105:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg/v:SI 7 r7 [orig:130 avg_x ] [130])
            (const_int 175599 [0x2adef]))
        (nil)))
(jump_insn 120 119 121 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 148)
            (pc))) "../System/XPT2046_touch.c":105:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 148)
(note 121 120 130 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 130 121 134 5 NOTE_INSN_DELETED)
(note 134 130 139 5 NOTE_INSN_DELETED)
(note 139 134 141 5 NOTE_INSN_DELETED)
(note 141 139 122 5 NOTE_INSN_DELETED)
(debug_insn 122 141 123 5 (var_location:SI raw_x (debug_expr:SI D#1)) -1
     (nil))
(debug_insn 123 122 125 5 (debug_marker) "../System/XPT2046_touch.c":106:9 -1
     (nil))
(insn 125 123 126 5 (parallel [
            (set (reg:SI 2 r2 [165])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 7 r7 [orig:130 avg_x ] [130]))
                            (zero_extend:DI (reg:SI 2 r2 [162])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [213]))
        ]) "../System/XPT2046_touch.c":87:14 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 7 r7 [orig:130 avg_x ] [130]))
                    (const_int 1374389535 [0x51eb851f]))
                (const_int 32 [0x20])))
        (nil)))
(insn 126 125 127 5 (set (reg:SI 2 r2 [orig:164 raw_x ] [164])
        (lshiftrt:SI (reg:SI 2 r2 [165])
            (const_int 5 [0x5]))) "../System/XPT2046_touch.c":87:14 147 {*arm_shiftsi3}
     (nil))
(insn 127 126 128 5 (set (reg:SI 1 r1 [167])
        (const_int 28899 [0x70e3])) "../System/XPT2046_touch.c":111:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 28899 [0x70e3])
        (nil)))
(insn 128 127 131 5 (parallel [
            (set (reg:SI 2 r2 [orig:164 raw_x ] [164])
                (umin:SI (reg:SI 2 r2 [orig:164 raw_x ] [164])
                    (reg:SI 1 r1 [167])))
            (clobber (reg:CC 100 cc))
        ]) "../System/XPT2046_touch.c":111:42 973 {*thumb2_uminsi3}
     (nil))
(insn 131 128 132 5 (set (reg:SI 2 r2 [170])
        (minus:SI (ashift:SI (reg:SI 2 r2 [orig:164 raw_x ] [164])
                (const_int 4 [0x4]))
            (reg:SI 2 r2 [orig:164 raw_x ] [164]))) "../System/XPT2046_touch.c":111:42 319 {*rsb_shiftsi}
     (nil))
(insn 132 131 136 5 (set (reg:SI 2 r2 [171])
        (ashift:SI (reg:SI 2 r2 [170])
            (const_int 4 [0x4]))) "../System/XPT2046_touch.c":111:42 147 {*arm_shiftsi3}
     (nil))
(insn 136 132 209 5 (set (reg:SI 1 r1 [176])
        (const_int 890070775 [0x350d66f7])) "../System/XPT2046_touch.c":111:60 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 890070775 [0x350d66f7])
        (nil)))
(insn 209 136 210 5 (set (reg:SI 2 r2 [172])
        (plus:SI (reg:SI 2 r2 [171])
            (const_int -419840 [0xfffffffffff99800]))) "../System/XPT2046_touch.c":111:42 7 {*arm_addsi3}
     (nil))
(insn 210 209 137 5 (set (reg:SI 2 r2 [172])
        (plus:SI (reg:SI 2 r2 [172])
            (const_int -1600 [0xfffffffffffff9c0]))) "../System/XPT2046_touch.c":111:42 7 {*arm_addsi3}
     (nil))
(insn 137 210 138 5 (parallel [
            (set (reg:SI 1 r1 [175])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [172]))
                            (zero_extend:DI (reg:SI 1 r1 [176])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [214]))
        ]) "../System/XPT2046_touch.c":111:60 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [172]))
                    (const_int 890070775 [0x350d66f7]))
                (const_int 32 [0x20])))
        (nil)))
(insn 138 137 140 5 (set (reg:SI 2 r2 [177])
        (minus:SI (reg:SI 2 r2 [172])
            (reg:SI 1 r1 [175]))) "../System/XPT2046_touch.c":111:60 45 {*arm_subsi3_insn}
     (nil))
(insn 140 138 147 5 (set (reg:SI 2 r2 [179])
        (plus:SI (lshiftrt:SI (reg:SI 2 r2 [177])
                (const_int 1 [0x1]))
            (reg:SI 1 r1 [175]))) "../System/XPT2046_touch.c":111:60 318 {*add_shiftsi}
     (nil))
(insn 147 140 148 5 (set (reg:SI 4 r4 [orig:135 _64 ] [135])
        (zero_extract:SI (reg:SI 2 r2 [179])
            (const_int 16 [0x10])
            (const_int 14 [0xe]))) "../System/XPT2046_touch.c":111:12 161 {extzv_t2}
     (nil))
(code_label 148 147 149 7 7 (nil) [1 uses])
(note 149 148 162 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 162 149 166 7 NOTE_INSN_DELETED)
(note 166 162 150 7 NOTE_INSN_DELETED)
(debug_insn 150 166 151 7 (var_location:SI raw_x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 151 150 152 7 (debug_marker) "../System/XPT2046_touch.c":108:9 -1
     (nil))
(insn 152 151 153 7 (set (reg:SI 2 r2 [185])
        (const_int 30198 [0x75f6])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 30198 [0x75f6])
        (nil)))
(insn 153 152 154 7 (parallel [
            (set (reg:SI 3 r3 [orig:123 _29 ] [123])
                (umin:SI (reg/v:SI 3 r3 [orig:129 raw_y ] [129])
                    (reg:SI 2 r2 [185])))
            (clobber (reg:CC 100 cc))
        ]) 973 {*thumb2_uminsi3}
     (expr_list:REG_EQUAL (umin:SI (reg/v:SI 3 r3 [orig:129 raw_y ] [129])
            (const_int 30198 [0x75f6]))
        (nil)))
(debug_insn 154 153 155 7 (var_location:SI raw_y (umax:SI (reg:SI 3 r3 [orig:123 _29 ] [123])
        (const_int 3327 [0xcff]))) -1
     (nil))
(debug_insn 155 154 159 7 (debug_marker) "../System/XPT2046_touch.c":111:9 -1
     (nil))
(insn 159 155 160 7 (set (reg:SI 2 r2 [188])
        (const_int 3327 [0xcff])) "../System/XPT2046_touch.c":112:41 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3327 [0xcff])
        (nil)))
(insn 160 159 163 7 (parallel [
            (set (reg:SI 3 r3 [orig:187 raw_y ] [187])
                (umax:SI (reg:SI 3 r3 [orig:123 _29 ] [123])
                    (reg:SI 2 r2 [188])))
            (clobber (reg:CC 100 cc))
        ]) "../System/XPT2046_touch.c":112:41 972 {*thumb32_umaxsi3}
     (expr_list:REG_EQUAL (umax:SI (reg:SI 3 r3 [orig:123 _29 ] [123])
            (const_int 3327 [0xcff]))
        (nil)))
(insn 163 160 164 7 (set (reg:SI 3 r3 [191])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:187 raw_y ] [187])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [orig:187 raw_y ] [187]))) "../System/XPT2046_touch.c":112:41 318 {*add_shiftsi}
     (nil))
(insn 164 163 168 7 (set (reg:SI 3 r3 [192])
        (ashift:SI (reg:SI 3 r3 [191])
            (const_int 6 [0x6]))) "../System/XPT2046_touch.c":112:41 147 {*arm_shiftsi3}
     (nil))
(insn 168 164 205 7 (set (reg:SI 2 r2 [197])
        (const_int 1309380823 [0x4e0b90d7])) "../System/XPT2046_touch.c":112:59 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1309380823 [0x4e0b90d7])
        (nil)))
(insn 205 168 206 7 (set (reg:SI 3 r3 [193])
        (plus:SI (reg:SI 3 r3 [192])
            (const_int -1056768 [0xffffffffffefe000]))) "../System/XPT2046_touch.c":112:41 7 {*arm_addsi3}
     (nil))
(insn 206 205 169 7 (set (reg:SI 3 r3 [193])
        (plus:SI (reg:SI 3 r3 [193])
            (const_int -7872 [0xffffffffffffe140]))) "../System/XPT2046_touch.c":112:41 7 {*arm_addsi3}
     (nil))
(insn 169 206 170 7 (parallel [
            (set (reg:SI 3 r3 [196])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 3 r3 [193]))
                            (zero_extend:DI (reg:SI 2 r2 [197])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [215]))
        ]) "../System/XPT2046_touch.c":112:59 72 {*umull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 3 r3 [193]))
                    (const_int 1309380823 [0x4e0b90d7]))
                (const_int 32 [0x20])))
        (nil)))
(insn 170 169 157 7 (set (reg:SI 3 r3 [195])
        (lshiftrt:SI (reg:SI 3 r3 [196])
            (const_int 13 [0xd]))) "../System/XPT2046_touch.c":112:59 147 {*arm_shiftsi3}
     (nil))
(insn 157 170 158 7 (set (mem:HI (reg/v/f:SI 11 fp [orig:136 x ] [136]) [1 *x_37(D)+0 S2 A16])
        (reg:HI 4 r4 [orig:135 _64 ] [135])) "../System/XPT2046_touch.c":111:12 724 {*thumb2_movhi_vfp}
     (nil))
(debug_insn 158 157 177 7 (debug_marker) "../System/XPT2046_touch.c":112:8 -1
     (nil))
(insn 177 158 216 7 (set (mem:HI (reg/v/f:SI 10 r10 [orig:137 y ] [137]) [1 *y_39(D)+0 S2 A16])
        (reg:HI 3 r3 [195])) "../System/XPT2046_touch.c":112:11 724 {*thumb2_movhi_vfp}
     (nil))
(note 216 177 218 NOTE_INSN_DELETED)
(note 218 216 0 NOTE_INSN_DELETED)

;; Function XPT2046_touch_get_coordinates_if_pressed (XPT2046_touch_get_coordinates_if_pressed, funcdef_no=359, decl_uid=10105, cgraph_uid=363, symbol_order=362)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r  (1) n  (2) n {*zeroextractsi_compare0_scratch}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = -2
  BB 3
   Insn 36: point = 2, n_alt = -1
   Insn 5: point = 2, n_alt = 1
   Insn 21: point = 3, n_alt = -1
  BB 4
   Insn 6: point = 3, n_alt = 1
  BB 2
   Insn 16: point = 4, n_alt = -1
   Insn 15: point = 4, n_alt = 0
   Insn 13: point = 5, n_alt = 5
   Insn 12: point = 7, n_alt = 5
 r113: [4..5]
 r115: [0..3]
 r118: [6..7]
Compressing live ranges: from 8 to 6 - 75%
Ranges after the compression:
 r113: [2..3]
 r115: [0..1]
 r118: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=8)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 15
changing reg in insn 6
changing reg in insn 5
changing reg in insn 29
changing reg in insn 12
changing reg in insn 13
deleting insn with uid = 29.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)


XPT2046_touch_get_coordinates_if_pressed

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d} r3={4d,2u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 121{108d,13u,0e} in 14{13 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 7 14 2 NOTE_INSN_FUNCTION_BEG)
(note 14 4 9 2 NOTE_INSN_DELETED)
(debug_insn 9 14 10 2 (debug_marker) "../System/XPT2046_touch.c":124:2 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker:BLK) "../System/XPT2046_touch.c":44:6 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/XPT2046_touch.c":46:5 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [118])
        (const_int 1207962624 [0x48000c00])) "../System/XPT2046_touch.c":46:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1207962624 [0x48000c00])
        (nil)))
(insn 13 12 15 2 (set (reg:SI 3 r3 [orig:113 _7 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [118])
                (const_int 16 [0x10])) [3 MEM[(struct GPIO_TypeDef *)1207962624B].IDR+0 S4 A64])) "../System/XPT2046_touch.c":46:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 15 13 16 2 (set (reg:CC_NZ 100 cc)
        (compare:CC_NZ (zero_extract:SI (reg:SI 3 r3 [orig:113 _7 ] [113])
                (const_int 1 [0x1])
                (const_int 6 [0x6]))
            (const_int 0 [0]))) "../System/XPT2046_touch.c":124:4 93 {*zeroextractsi_compare0_scratch}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 35)
            (pc))) "../System/XPT2046_touch.c":124:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 35)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 18 17 21 3 (debug_marker) "../System/XPT2046_touch.c":126:3 -1
     (nil))
(call_insn 21 18 22 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("XPT2046_touch_get_coordinates") [flags 0x3]  <function_decl 0000000006c00200 XPT2046_touch_get_coordinates>) [0 XPT2046_touch_get_coordinates S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/XPT2046_touch.c":126:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("XPT2046_touch_get_coordinates") [flags 0x3]  <function_decl 0000000006c00200 XPT2046_touch_get_coordinates>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 22 21 5 3 (debug_marker) "../System/XPT2046_touch.c":127:3 -1
     (nil))
(insn 5 22 36 3 (set (reg:SI 0 r0 [orig:115 <retval> ] [115])
        (const_int 1 [0x1])) "../System/XPT2046_touch.c":127:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 36 5 37 3 (set (pc)
        (label_ref 23)) "../System/XPT2046_touch.c":127:10 284 {*arm_jump}
     (nil)
 -> 23)
(barrier 37 36 35)
(code_label 35 37 34 4 15 (nil) [1 uses])
(note 34 35 6 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 6 34 23 4 (set (reg:SI 0 r0 [orig:115 <retval> ] [115])
        (const_int 0 [0])) "../System/XPT2046_touch.c":131:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 23 6 24 5 14 (nil) [1 uses])
(note 24 23 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 24 39 5 (use (reg/i:SI 0 r0)) "../System/XPT2046_touch.c":133:1 -1
     (nil))
(note 39 30 40 NOTE_INSN_DELETED)
(note 40 39 0 NOTE_INSN_DELETED)
