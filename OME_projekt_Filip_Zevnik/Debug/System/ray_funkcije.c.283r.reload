
;; Function drawGun (drawGun, funcdef_no=356, decl_uid=5812, cgraph_uid=360, symbol_order=368)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=56, prev_offset=0)
Can't eliminate 103 to 11 (offset=56, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
      Removing equiv init insn 19 (freq=1)
   19: r192:SI=`time_gun'
      REG_EQUIV `time_gun'
deleting insn with uid = 19.
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=210 from oldreg=152, assigning class LO_REGS to r210
   21: r210:SI=`t_guns'
      REG_EQUAL `t_guns'
    Inserting insn reload after:
  270: r152:SI=r210:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) m  (1) l {*thumb2_movsi_vfp}
Changing address in insn 20 r192:SI -- no change
Changing pseudo 192 in address of insn 20 on equiv `time_gun'
      Creating newreg=211, assigning class CORE_REGS to address r211
	   Change to class GENERAL_REGS for r211
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
   20: r119:SI=zero_extend([r211:SI])
      REG_EQUAL zero_extend([`time_gun'])
    Inserting insn reload before:
  271: r211:SI=`time_gun'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 271:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r211
      Removing equiv init insn 228 (freq=1)
  228: r191:SI=`t_gun_2'
      REG_EQUIV `t_gun_2'
deleting insn with uid = 228.
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=212 from oldreg=146, assigning class GENERAL_REGS to r212
    5: r212:SI=0
      REG_EQUAL 0
    Inserting insn reload after:
  272: r146:SI=r212:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 272:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=213 from oldreg=212, assigning class LO_REGS to r213
  272: r146:SI=r213:SI
    Inserting insn reload before:
  273: r213:SI=r212:SI

            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 149:  (0) t  (1) Dv {*thumb2_movsf_vfp}
      Removing equiv init insn 159 (freq=1)
  159: r197:DF=2.39999999999999991118215802998747676610946655273e+0
      REG_EQUIV 2.39999999999999991118215802998747676610946655273e+0
deleting insn with uid = 159.
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3,overall=6,losers=1 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 63:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3,overall=6,losers=1 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) I {*arm_cmpsi_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 75:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=214 from oldreg=208, assigning class VFP_LO_REGS to r214
   75: r159:SF=float(r214:SI)
    Inserting insn reload before:
  274: r214:SI=r208:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 274:  (0) *t  (1) r {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 113:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 116:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =t  (1) t {*truncsisf2_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 117:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 83:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=215 from oldreg=0, assigning class VFP_LO_REGS to r215
   83: r215:SI=fix(fix(r164:SF))
      REG_DEAD r164:SF
    Inserting insn reload after:
  275: r0:SI=r215:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 275:  (0) r  (1) *t {*thumb2_movsi_vfp}
Changing pseudo 197 in operand 1 of insn 237 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 237:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
Changing address in insn 111 r192:SI -- no change
Changing pseudo 192 in address of insn 111 on equiv `time_gun'
      Creating newreg=216, assigning class CORE_REGS to address r216
	   Change to class GENERAL_REGS for r216
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
  111: r206:SI=zero_extend([r216:SI])
      REG_EQUAL zero_extend([`time_gun'])
    Inserting insn reload before:
  276: r216:SI=`time_gun'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 276:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r216
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 127:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 130:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 131:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
          alt=2,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=4,overall=13,losers=2,rld_nregs=2
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 2 in insn 137:  (0) l  (1) 0  (2) Py {*arm_addsi3}
      Creating newreg=217 from oldreg=146, assigning class LO_REGS to r217
  137: r217:SI=r217:SI+0x2
    Inserting insn reload before:
  277: r217:SI=r146:SI
    Inserting insn reload after:
  278: r146:SI=r217:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 278:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 277:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=13,losers=2,rld_nregs=2
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 4 in insn 140:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Creating newreg=218 from oldreg=152, assigning class GENERAL_REGS to r218
      Creating newreg=219 from oldreg=152, assigning class CORE_REGS to r219
  140: r218:SI=r219:SI+0x300
    Inserting insn reload before:
  280: r219:SI=r152:SI
    Inserting insn reload after:
  279: r152:SI=r218:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 279:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=220 from oldreg=218, assigning class LO_REGS to r220
  279: r152:SI=r220:SI
    Inserting insn reload before:
  281: r220:SI=r218:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 280:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r219 for output r219:SI, change to class LO_REGS for r219
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=15,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=15,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            alt=4: Bad operand -- refuse
	 Choosing alt 0 in insn 141:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=221 from oldreg=146, assigning class LO_REGS to r221
  141: cc:CC=cmp(r221:SI,0x80)
    Inserting insn reload before:
  282: r221:SI=r146:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 282:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 148:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=222 from oldreg=146, assigning class VFP_LO_REGS to r222
  148: r172:SF=float(r222:SI)
    Inserting insn reload before:
  283: r222:SI=r146:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=8,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=14,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Costly loser: reject++
            alt=11,overall=9,losers=1 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
            1 Non pseudo reload: reject++
          alt=12,overall=3,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 283:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =t  (1) t {*truncsisf2_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 156:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=223 from oldreg=0, assigning class VFP_LO_REGS to r223
  156: r223:SI=fix(fix(r177:SF))
      REG_DEAD r177:SF
    Inserting insn reload after:
  284: r0:SI=r223:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 284:  (0) r  (1) *t {*thumb2_movsi_vfp}
Changing pseudo 197 in operand 1 of insn 238 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 238:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=1,overall=12,losers=2,rld_nregs=2
	 Choosing alt 1 in insn 170:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
      Creating newreg=224 from oldreg=146, assigning class CORE_REGS to r224
	 Reuse r224 for reload r146:SI, change to class GENERAL_REGS for r224
  170: r202:SI=r224:SI<<0x1+r224:SI
    Inserting insn reload before:
  285: r224:SI=r146:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 285:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r224 for output r224:SI, change to class LO_REGS for r224
Changing pseudo 191 in operand 1 of insn 174 on equiv `t_gun_2'
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 174:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
      Creating newreg=225, assigning class CORE_REGS to r225
  174: r114:SI=r185:SI<<0x7+r225:SI
      REG_DEAD r185:SI
    Inserting insn reload before:
  286: r225:SI=`t_gun_2'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 286:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r225
          alt=0,overall=6,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 182:  (0) ?r {*thumb2_cbz}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 186:  (0) r  (1) rk  (2) rI {*arm_addsi3}
Changing address in insn 188 r192:SI -- no change
Changing pseudo 192 in address of insn 188 on equiv `time_gun'
      Creating newreg=226, assigning class CORE_REGS to address r226
	   Change to class GENERAL_REGS for r226
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 188:  (0) m  (1) r {*arm_movqi_insn}
  188: [r226:SI]=r189:SI#0
      REG_DEAD r192:SI
      REG_DEAD r189:SI
    Inserting insn reload before:
  287: r226:SI=`time_gun'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 287:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r226
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6
EBB 7
	  ((((((((((((((((((((((((((((((((((((((((((((((((
      Creating newreg=227, assigning class NO_REGS to save r227
  106: r2:SI=r169:SI
      REG_DEAD r169:SI
    Add reg<-save before:
  289: r169:SI=r227:SI

  102: r169:SI=zero_extend(r199:SI#0)
      REG_DEAD r199:SI
    Add save<-reg after:
  288: r227:SI=r169:SI

	  ))))))))))))))))))))))))))))))))))))))))))))))))
EBB 8
EBB 9
EBB 15
EBB 10
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=228 from oldreg=146, assigning class LO_REGS to inheritance r228
    Original reg change 146->228 (bb10):
  278: r228:SI=r217:SI
    Add original<-inheritance after:
  290: r146:SI=r228:SI

    Inheritance reuse change 146->228 (bb10):
  138: debug y => r228:SI
    Inheritance reuse change 146->228 (bb10):
  282: r221:SI=r228:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 146 because of disjoint classes VFP_LO_REGS and GENERAL_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 12 13
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
  BB 13
   Insn 188: point = 0, n_alt = 8
   Insn 287: point = 1, n_alt = 5
   Insn 186: point = 2, n_alt = 4
  r192 is removed as live at bb13 start
  BB 12
   Insn 182: point = 5, n_alt = 1
   Insn 267: point = 5, n_alt = -2
  BB 10
   Insn 142: point = 8, n_alt = -1
   Insn 141: point = 8, n_alt = 0
   Insn 282: point = 9, n_alt = 5
	   Creating copy r221<-r228@15
   Insn 279: point = 11, n_alt = 7
   Insn 281: point = 13, n_alt = -2
	   Creating copy r218->r220@15
   Insn 140: point = 15, n_alt = 4
   Insn 280: point = 17, n_alt = 5
   Insn 290: point = 19, n_alt = -1
   Insn 278: point = 20, n_alt = 7
	   Creating copy r217->r228@15
   Insn 137: point = 22, n_alt = 2
   Insn 277: point = 23, n_alt = 5
  BB 8
   Insn 253: point = 26, n_alt = -1
   Insn 260: point = 26, n_alt = -2
  BB 15
   Insn 261: point = 29, n_alt = -2
  BB 9
   Insn 133: point = 32, n_alt = -1
   Insn 132: point = 32, n_alt = 0
   Insn 131: point = 32, n_alt = 2
   Insn 130: point = 33, n_alt = 2
   Insn 127: point = 34, n_alt = 2
  BB 6
   Insn 68: point = 36, n_alt = -1
   Insn 67: point = 36, n_alt = 3
   Insn 64: point = 37, n_alt = 0
   Insn 63: point = 39, n_alt = 4
  BB 4
   Insn 250: point = 41, n_alt = -1
   Insn 41: point = 41, n_alt = 1
   Insn 38: point = 42, n_alt = 1
   Insn 35: point = 43, n_alt = 1
  BB 5
   Insn 55: point = 45, n_alt = 1
   Insn 52: point = 46, n_alt = 1
   Insn 49: point = 47, n_alt = 1
  BB 3
   Insn 31: point = 49, n_alt = 0
  BB 11
   Insn 255: point = 50, n_alt = -1
   Insn 266: point = 50, n_alt = -2
   Insn 265: point = 52, n_alt = -2
   Insn 264: point = 54, n_alt = -2
   Insn 263: point = 56, n_alt = -2
   Insn 262: point = 58, n_alt = -2
   Insn 174: point = 60, n_alt = 1
   Insn 286: point = 62, n_alt = 5
   Insn 258: point = 63, n_alt = -2
   Insn 166: point = 65, n_alt = -2
   Insn 170: point = 67, n_alt = 1
   Insn 285: point = 69, n_alt = 5
   Insn 247: point = 70, n_alt = -2
   Insn 165: point = 71, n_alt = -1
   Insn 161: point = 71, n_alt = -1
   Insn 238: point = 71, n_alt = 6
   Insn 157: point = 71, n_alt = -1
   Insn 284: point = 71, n_alt = 10
	Hard reg 0 is preferable by r223 with profit 15
   Insn 156: point = 72, n_alt = 0
   Insn 154: point = 74, n_alt = 0
   Insn 152: point = 76, n_alt = 0
   Insn 80: point = 78, n_alt = 2
   Insn 151: point = 79, n_alt = 0
   Insn 4: point = 81, n_alt = 1
   Insn 150: point = 82, n_alt = 0
   Insn 3: point = 84, n_alt = 5
   Insn 148: point = 85, n_alt = 0
   Insn 283: point = 87, n_alt = 12
  BB 2
   Insn 248: point = 89, n_alt = -1
   Insn 259: point = 89, n_alt = -2
   Insn 149: point = 91, n_alt = 2
   Insn 272: point = 92, n_alt = 7
   Insn 273: point = 94, n_alt = -2
	   Creating copy r212->r213@1
   Insn 5: point = 96, n_alt = 1
   Insn 153: point = 97, n_alt = 3
   Insn 20: point = 98, n_alt = 1
   Insn 271: point = 100, n_alt = 5
   Insn 270: point = 101, n_alt = 7
   Insn 21: point = 103, n_alt = 5
  r197 is added to live at bb2 start
  r192 is added to live at bb2 start
  r191 is added to live at bb2 start
  BB 7
   Insn 120: point = 105, n_alt = -1
   Insn 119: point = 105, n_alt = 0
   Insn 111: point = 105, n_alt = 1
   Insn 276: point = 107, n_alt = 5
   Insn 109: point = 108, n_alt = -1
   Insn 107: point = 108, n_alt = -2
   Insn 106: point = 108, n_alt = -2
   Insn 289: point = 109, n_alt = -1
	Hard reg 2 is preferable by r227 with profit 324
   Insn 104: point = 111, n_alt = -1
   Insn 103: point = 111, n_alt = -2
   Insn 288: point = 112, n_alt = -1
	Hard reg 2 is preferable by r227 with profit 648
   Insn 102: point = 114, n_alt = 0
   Insn 246: point = 116, n_alt = -2
   Insn 100: point = 117, n_alt = -1
   Insn 99: point = 117, n_alt = -2
   Insn 98: point = 118, n_alt = -2
   Insn 89: point = 119, n_alt = -2
   Insn 97: point = 121, n_alt = -2
   Insn 245: point = 122, n_alt = -2
   Insn 88: point = 123, n_alt = -1
   Insn 237: point = 123, n_alt = 6
   Insn 84: point = 123, n_alt = -1
   Insn 275: point = 123, n_alt = 10
	Hard reg 0 is preferable by r215 with profit 324
   Insn 83: point = 124, n_alt = 0
   Insn 81: point = 126, n_alt = 0
   Insn 79: point = 128, n_alt = 0
   Insn 117: point = 130, n_alt = 2
   Insn 78: point = 131, n_alt = 0
   Insn 116: point = 133, n_alt = 2
   Insn 77: point = 134, n_alt = 0
   Insn 113: point = 136, n_alt = 2
   Insn 75: point = 137, n_alt = 0
   Insn 274: point = 139, n_alt = 9
	Hard reg 6 is preferable by r214 with profit 324
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 31 (  1.9)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      119  146  152  174  178  203  210  211  212  213
    liveout: 2:

        7   13  102  103  146  152  174  178  203

BB 3:
    gen: 3:

      206
    killed: 3:

      100
    livein: 3:

      146  152  174  178  195  204  205  206  207  208
    liveout: 3:

        7   13  102  103  146  152  174  178  195  204  205
      206  207  208

BB 4:
    gen: 4:

      205
    killed: 4:

      141  142  143
    livein: 4:

      146  152  174  178  195  204  205  206  207  208
    liveout: 4:

        7   13  102  103  141  142  143  146  152  174  178
      195  204  205  206  207  208

BB 5:
    gen: 5:

      204
    killed: 5:

      141  142  143
    livein: 5:

      146  152  174  178  195  204  205  206  207  208
    liveout: 5:

        7   13  102  103  141  142  143  146  152  174  178
      195  204  205  206  207  208

BB 6:
    gen: 6:

      141  142  143
    killed: 6:

      100  157  158
    livein: 6:

      141  142  143  146  152  174  178  195  204  205  206
      207  208
    liveout: 6:

        7   13  102  103  141  142  143  146  152  174  178
      195  204  205  206  207  208

BB 7:
    gen: 7:

      141  142  143  174  195  204  205  207  208
    killed: 7:

      100  159  160  162  163  164  168  169  198  199  204
      205  206  208  214  215  216  227
    livein: 7:

      141  142  143  146  152  174  178  195  204  205  207
      208
    liveout: 7:

        7   13  102  103  146  152  174  178  195  204  205
      206  207  208

BB 8:
    gen: 8:

      206
    killed: 8:

      203
    livein: 8:

      146  152  174  178  206
    liveout: 8:

        7   13  102  103  146  152  174  178  203

BB 9:
    gen: 9:

      204  205  208
    killed: 9:

      100  204  205  208
    livein: 9:

      146  152  174  178  195  204  205  206  207  208
    liveout: 9:

        7   13  102  103  146  152  174  178  195  204  205
      206  207  208

BB 15:
    gen: 15:

      206
    killed: 15:

      203
    livein: 15:

      146  152  174  178  206
    liveout: 15:

        7   13  102  103  146  152  174  178  203

BB 10:
    gen: 10:

      146  152
    killed: 10:

      100  146  152  217  218  219  220  221  228
    livein: 10:

      146  152  174  178  203
    liveout: 10:

        7   13  102  103  146  152  174  178  203

BB 11:
    gen: 11:

      146  152  174  178  203
    killed: 11:

      114  116  150  151  172  173  175  176  177  185  195
      200  202  204  205  206  207  208  222  223  224  225
    livein: 11:

      146  152  174  178  203
    liveout: 11:

        7   13  102  103  146  152  174  178  195  204  205
      206  207  208

BB 12:
    gen: 12:

      203
    killed: 12:

      100  119
    livein: 12:

      203
    liveout: 12:

        7   13  102  103  119

BB 13:
    gen: 13:

      119
    killed: 13:

      189  226
    livein: 13:

      119
    liveout: 13:

        7   13  102  103

BB 14:
    liveout: 14:

        7   13  102  103
 r114: [59..60]
 r116: [57..84]
 r119: [90..98] [3..5]
 r141: [117..140] [45..47] [36..43]
 r142: [118..140] [45..46] [36..42]
 r143: [121..140] [45..45] [36..41]
 r146: [105..140] [24..92] [8..19]
 r150: [53..65]
 r151: [51..81]
 r152: [105..140] [18..101] [8..11]
 r157: [38..39]
 r158: [36..37]
 r159: [135..137]
 r160: [132..134]
 r162: [129..131]
 r163: [127..128]
 r164: [125..126]
 r168: [111..119]
 r169: [113..114] [108..109]
 r172: [83..85]
 r173: [80..82]
 r174: [105..140] [8..91]
 r175: [77..79]
 r176: [75..76]
 r177: [73..74]
 r178: [105..140] [8..97]
 r185: [61..63]
 r189: [0..2]
 r191: [8..140]
 r192: [5..140]
 r195: [105..140] [32..78]
 r197: [8..140]
 r198: [120..122]
 r199: [115..116]
 r200: [66..70]
 r202: [64..67]
 r203: [55..89] [29..29] [6..26]
 r204: [105..140] [32..58]
 r205: [105..140] [32..56]
 r206: [105..105] [30..54] [27..28]
 r207: [105..140] [32..52]
 r208: [105..140] [32..50]
 r210: [102..103]
 r211: [99..100]
 r212: [95..96]
 r213: [93..94]
 r214: [138..139]
 r215: [123..124]
 r216: [106..107]
 r217: [21..23]
 r218: [14..15]
 r219: [16..17]
 r220: [12..13]
 r221: [8..9]
 r222: [86..87]
 r223: [71..72]
 r224: [68..69]
 r225: [61..62]
 r226: [0..1]
 r227: [110..112]
 r228: [10..20]
Compressing live ranges: from 141 to 100 - 70%
Ranges after the compression:
 r114: [37..38]
 r116: [35..58]
 r119: [61..66] [2..3]
 r141: [82..99] [23..28]
 r142: [82..99] [23..28]
 r143: [84..99] [23..27]
 r146: [71..99] [18..62] [4..15]
 r150: [31..42]
 r151: [29..56]
 r152: [71..99] [14..68] [4..7]
 r157: [25..26]
 r158: [23..24]
 r159: [96..97]
 r160: [94..95]
 r162: [92..93]
 r163: [90..91]
 r164: [88..89]
 r168: [76..83]
 r169: [78..79] [74..75]
 r172: [57..58]
 r173: [55..56]
 r174: [71..99] [4..62]
 r175: [53..54]
 r176: [51..52]
 r177: [49..50]
 r178: [71..99] [4..66]
 r185: [39..40]
 r189: [0..1]
 r191: [4..99]
 r192: [3..99]
 r195: [71..99] [23..54]
 r197: [4..99]
 r198: [84..85]
 r199: [80..81]
 r200: [43..46]
 r202: [41..44]
 r203: [33..60] [22..22] [4..19]
 r204: [71..99] [23..36]
 r205: [71..99] [23..34]
 r206: [71..71] [23..32] [20..21]
 r207: [71..99] [23..30]
 r208: [71..99] [23..28]
 r210: [69..70]
 r211: [67..68]
 r212: [65..66]
 r213: [63..64]
 r214: [98..99]
 r215: [86..87]
 r216: [72..73]
 r217: [16..17]
 r218: [10..11]
 r219: [12..13]
 r220: [8..9]
 r221: [4..5]
 r222: [59..60]
 r223: [47..48]
 r224: [45..46]
 r225: [39..40]
 r226: [0..1]
 r227: [76..77]
 r228: [6..15]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 14
  BB 13
   Insn 188: point = 0, n_alt = 8
   Insn 287: point = 1, n_alt = 5
   Insn 186: point = 2, n_alt = 4
  BB 12
   Insn 182: point = 5, n_alt = 1
   Insn 267: point = 5, n_alt = -2
  BB 10
   Insn 142: point = 8, n_alt = -1
   Insn 141: point = 8, n_alt = 0
   Insn 282: point = 9, n_alt = 5
	   Creating copy r221<-r228@15
   Insn 279: point = 11, n_alt = 7
   Insn 281: point = 13, n_alt = -2
	   Creating copy r218->r220@15
   Insn 140: point = 15, n_alt = 4
   Insn 280: point = 17, n_alt = 5
   Insn 290: point = 19, n_alt = -1
   Insn 278: point = 20, n_alt = 7
	   Creating copy r217->r228@15
   Insn 137: point = 22, n_alt = 2
   Insn 277: point = 23, n_alt = 5
  BB 8
   Insn 253: point = 26, n_alt = -1
   Insn 260: point = 26, n_alt = -2
  BB 15
   Insn 261: point = 29, n_alt = -2
  BB 9
   Insn 133: point = 32, n_alt = -1
   Insn 132: point = 32, n_alt = 0
   Insn 131: point = 32, n_alt = 2
   Insn 130: point = 33, n_alt = 2
   Insn 127: point = 34, n_alt = 2
  BB 6
   Insn 68: point = 36, n_alt = -1
   Insn 67: point = 36, n_alt = 3
   Insn 64: point = 37, n_alt = 0
   Insn 63: point = 39, n_alt = 4
  BB 4
   Insn 250: point = 41, n_alt = -1
   Insn 41: point = 41, n_alt = 1
   Insn 38: point = 42, n_alt = 1
   Insn 35: point = 43, n_alt = 1
  BB 5
   Insn 55: point = 45, n_alt = 1
   Insn 52: point = 46, n_alt = 1
   Insn 49: point = 47, n_alt = 1
  BB 3
   Insn 31: point = 49, n_alt = 0
  BB 11
   Insn 255: point = 50, n_alt = -1
   Insn 266: point = 50, n_alt = -2
   Insn 265: point = 52, n_alt = -2
   Insn 264: point = 54, n_alt = -2
   Insn 263: point = 56, n_alt = -2
   Insn 262: point = 58, n_alt = -2
   Insn 174: point = 60, n_alt = 1
   Insn 286: point = 62, n_alt = 5
   Insn 258: point = 63, n_alt = -2
   Insn 166: point = 65, n_alt = -2
   Insn 170: point = 67, n_alt = 1
   Insn 285: point = 69, n_alt = 5
   Insn 247: point = 70, n_alt = -2
   Insn 165: point = 71, n_alt = -1
   Insn 161: point = 71, n_alt = -1
   Insn 238: point = 71, n_alt = 6
   Insn 157: point = 71, n_alt = -1
   Insn 284: point = 71, n_alt = 10
	Hard reg 0 is preferable by r223 with profit 15
   Insn 156: point = 72, n_alt = 0
   Insn 154: point = 74, n_alt = 0
   Insn 152: point = 76, n_alt = 0
   Insn 80: point = 78, n_alt = 2
   Insn 151: point = 79, n_alt = 0
   Insn 4: point = 81, n_alt = 1
   Insn 150: point = 82, n_alt = 0
   Insn 3: point = 84, n_alt = 5
   Insn 148: point = 85, n_alt = 0
   Insn 283: point = 87, n_alt = 12
  BB 2
   Insn 248: point = 89, n_alt = -1
   Insn 259: point = 89, n_alt = -2
   Insn 149: point = 91, n_alt = 2
   Insn 272: point = 92, n_alt = 7
   Insn 273: point = 94, n_alt = -2
	   Creating copy r212->r213@1
   Insn 5: point = 96, n_alt = 1
   Insn 153: point = 97, n_alt = 3
   Insn 20: point = 98, n_alt = 1
   Insn 271: point = 100, n_alt = 5
   Insn 270: point = 101, n_alt = 7
   Insn 21: point = 103, n_alt = 5
  BB 7
   Insn 120: point = 104, n_alt = -1
   Insn 119: point = 104, n_alt = 0
   Insn 111: point = 104, n_alt = 1
   Insn 276: point = 106, n_alt = 5
   Insn 109: point = 107, n_alt = -1
   Insn 107: point = 107, n_alt = -2
   Insn 106: point = 107, n_alt = -2
   Insn 289: point = 108, n_alt = -1
	Hard reg 2 is preferable by r227 with profit 324
   Insn 104: point = 110, n_alt = -1
   Insn 103: point = 110, n_alt = -2
   Insn 288: point = 111, n_alt = -1
	Hard reg 2 is preferable by r227 with profit 648
   Insn 102: point = 113, n_alt = 0
   Insn 246: point = 115, n_alt = -2
   Insn 100: point = 116, n_alt = -1
   Insn 99: point = 116, n_alt = -2
   Insn 98: point = 117, n_alt = -2
   Insn 89: point = 118, n_alt = -2
   Insn 97: point = 120, n_alt = -2
   Insn 245: point = 121, n_alt = -2
   Insn 88: point = 122, n_alt = -1
   Insn 237: point = 122, n_alt = 6
   Insn 84: point = 122, n_alt = -1
   Insn 275: point = 122, n_alt = 10
	Hard reg 0 is preferable by r215 with profit 324
   Insn 83: point = 123, n_alt = 0
   Insn 81: point = 125, n_alt = 0
   Insn 79: point = 127, n_alt = 0
   Insn 117: point = 129, n_alt = 2
   Insn 78: point = 130, n_alt = 0
   Insn 116: point = 132, n_alt = 2
   Insn 77: point = 133, n_alt = 0
   Insn 113: point = 135, n_alt = 2
   Insn 75: point = 136, n_alt = 0
   Insn 274: point = 138, n_alt = 9
	Hard reg 6 is preferable by r214 with profit 324
 r114: [59..60]
 r116: [57..84]
 r119: [90..98] [3..5]
 r141: [116..139] [45..47] [36..43]
 r142: [117..139] [45..46] [36..42]
 r143: [120..139] [45..45] [36..41]
 r146: [104..139] [24..92] [8..19]
 r150: [53..65]
 r151: [51..81]
 r152: [104..139] [18..101] [8..11]
 r157: [38..39]
 r158: [36..37]
 r159: [134..136]
 r160: [131..133]
 r162: [128..130]
 r163: [126..127]
 r164: [124..125]
 r168: [110..118]
 r169: [112..113] [107..108]
 r172: [83..85]
 r173: [80..82]
 r174: [104..139] [8..91]
 r175: [77..79]
 r176: [75..76]
 r177: [73..74]
 r178: [104..139] [8..97]
 r185: [61..63]
 r189: [0..2]
 r195: [104..139] [32..78]
 r198: [119..121]
 r199: [114..115]
 r200: [66..70]
 r202: [64..67]
 r203: [55..89] [29..29] [6..26]
 r204: [104..139] [32..58]
 r205: [104..139] [32..56]
 r206: [104..104] [30..54] [27..28]
 r207: [104..139] [32..52]
 r208: [104..139] [32..50]
 r210: [102..103]
 r211: [99..100]
 r212: [95..96]
 r213: [93..94]
 r214: [137..138]
 r215: [122..123]
 r216: [105..106]
 r217: [21..23]
 r218: [14..15]
 r219: [16..17]
 r220: [12..13]
 r221: [8..9]
 r222: [86..87]
 r223: [71..72]
 r224: [68..69]
 r225: [61..62]
 r226: [0..1]
 r227: [109..111]
 r228: [10..20]
Compressing live ranges: from 140 to 100 - 71%
Ranges after the compression:
 r114: [37..38]
 r116: [35..58]
 r119: [61..66] [2..3]
 r141: [82..99] [23..28]
 r142: [82..99] [23..28]
 r143: [84..99] [23..27]
 r146: [71..99] [18..62] [4..15]
 r150: [31..42]
 r151: [29..56]
 r152: [71..99] [14..68] [4..7]
 r157: [25..26]
 r158: [23..24]
 r159: [96..97]
 r160: [94..95]
 r162: [92..93]
 r163: [90..91]
 r164: [88..89]
 r168: [76..83]
 r169: [78..79] [74..75]
 r172: [57..58]
 r173: [55..56]
 r174: [71..99] [4..62]
 r175: [53..54]
 r176: [51..52]
 r177: [49..50]
 r178: [71..99] [4..66]
 r185: [39..40]
 r189: [0..1]
 r195: [71..99] [23..54]
 r198: [84..85]
 r199: [80..81]
 r200: [43..46]
 r202: [41..44]
 r203: [33..60] [22..22] [4..19]
 r204: [71..99] [23..36]
 r205: [71..99] [23..34]
 r206: [71..71] [23..32] [20..21]
 r207: [71..99] [23..30]
 r208: [71..99] [23..28]
 r210: [69..70]
 r211: [67..68]
 r212: [65..66]
 r213: [63..64]
 r214: [98..99]
 r215: [86..87]
 r216: [72..73]
 r217: [16..17]
 r218: [10..11]
 r219: [12..13]
 r220: [8..9]
 r221: [4..5]
 r222: [59..60]
 r223: [47..48]
 r224: [45..46]
 r225: [39..40]
 r226: [0..1]
 r227: [76..77]
 r228: [6..15]

********** Assignment #1: **********

	 Assigning to 216 (cl=LO_REGS, orig=216, freq=648, tfirst=216, tfreq=648)...
	   Assign 3 to reload r216 (freq=648)
	 Assigning to 228 (cl=LO_REGS, orig=146, freq=45, tfirst=217, tfreq=60)...
	   Assign 3 to inheritance r228 (freq=45)
	Hard reg 3 is preferable by r217 with profit 15
	Hard reg 3 is preferable by r221 with profit 15
	 Assigning to 217 (cl=LO_REGS, orig=146, freq=45, tfirst=217, tfreq=60)...
	   Assign 3 to reload r217 (freq=45)
	 Assigning to 221 (cl=LO_REGS, orig=146, freq=30, tfirst=217, tfreq=60)...
	   Assign 3 to reload r221 (freq=30)
	 Assigning to 219 (cl=LO_REGS, orig=152, freq=30, tfirst=219, tfreq=30)...
	   Assign 2 to reload r219 (freq=30)
	 Assigning to 220 (cl=LO_REGS, orig=152, freq=30, tfirst=220, tfreq=30)...
	   Assign 2 to reload r220 (freq=30)
	Hard reg 2 is preferable by r218 with profit 15
	 Assigning to 224 (cl=LO_REGS, orig=146, freq=30, tfirst=224, tfreq=30)...
	   Assign 3 to reload r224 (freq=30)
	 Assigning to 225 (cl=LO_REGS, orig=225, freq=30, tfirst=225, tfreq=30)...
	   Assign 3 to reload r225 (freq=30)
	 Assigning to 210 (cl=LO_REGS, orig=152, freq=2, tfirst=210, tfreq=2)...
	   Assign 3 to reload r210 (freq=2)
	 Assigning to 211 (cl=LO_REGS, orig=211, freq=2, tfirst=211, tfreq=2)...
	   Assign 3 to reload r211 (freq=2)
	 Assigning to 213 (cl=LO_REGS, orig=146, freq=2, tfirst=213, tfreq=2)...
	   Assign 3 to reload r213 (freq=2)
	Hard reg 3 is preferable by r212 with profit 1
	 Assigning to 226 (cl=LO_REGS, orig=226, freq=2, tfirst=226, tfreq=2)...
	   Assign 3 to reload r226 (freq=2)
	 Assigning to 218 (cl=GENERAL_REGS, orig=152, freq=30, tfirst=218, tfreq=30)...
	   Assign 2 to reload r218 (freq=30)
	 Assigning to 212 (cl=GENERAL_REGS, orig=146, freq=2, tfirst=212, tfreq=2)...
	   Assign 3 to reload r212 (freq=2)
	 Assigning to 214 (cl=VFP_LO_REGS, orig=151, freq=648, tfirst=214, tfreq=648)...
	   Assign 31 to reload r214 (freq=648)
	 Assigning to 215 (cl=VFP_LO_REGS, orig=215, freq=648, tfirst=215, tfreq=648)...
	   Assign 31 to reload r215 (freq=648)
	 Assigning to 222 (cl=VFP_LO_REGS, orig=146, freq=30, tfirst=222, tfreq=30)...
	   Assign 31 to reload r222 (freq=30)
	 Assigning to 223 (cl=VFP_LO_REGS, orig=223, freq=30, tfirst=223, tfreq=30)...
	   Assign 31 to reload r223 (freq=30)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 1 out of 1 (100.00%)
	     Keep split r227 (orig=r169)
Split 1 out of 1 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 290:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 288:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 289:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 20 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 16 (    1)

Cands:
0 (nop=0, remat_regno=152, reload_regno=210):
(insn 21 19 270 2 (set (reg:SI 210 [orig:152 ivtmp.105 ] [152])
                    (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)) 728 {*thumb2_movsi_vfp}
                 (expr_list:REG_EQUAL (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)
                    (nil)))
1 (nop=0, remat_regno=146, reload_regno=-1):
(insn 290 278 138 10 (set (reg/v:SI 146 [ y ])
                    (reg/v:SI 228 [orig:146 y ] [146])) "../System/ray_funkcije.c":42:29 728 {*thumb2_movsi_vfp}
                 (nil))

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 203
  changed regs: 119 146 152 174 178 203 210 211 212 213
  dead regs: 119 210 211 212 213
  cands generated in BB 2:

        0
  livein cands in BB 2:

        0
  pavout cands in BB 2:

        0
  avout cands in BB 2:

        0

BB 3:
  register live in: 146 152 174 178 195 204 205 206 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 195 204 205 206 207 208
  changed regs:
  dead regs:
  livein cands in BB 3:

        0
  pavin cands in BB 3:

        0
  pavout cands in BB 3:

        0

BB 4:
  register live in: 146 152 174 178 195 204 205 206 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 142 143 146 152 174 178 195 204 205 206 207 208
  changed regs: 141 142 143
  dead regs:
  livein cands in BB 4:

        0
  pavin cands in BB 4:

        0
  pavout cands in BB 4:

        0

BB 5:
  register live in: 146 152 174 178 195 204 205 206 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 142 143 146 152 174 178 195 204 205 206 207 208
  changed regs: 141 142 143
  dead regs:
  livein cands in BB 5:

        0
  pavin cands in BB 5:

        0
  pavout cands in BB 5:

        0

BB 6:
  register live in: 141 142 143 146 152 174 178 195 204 205 206 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 142 143 146 152 174 178 195 204 205 206 207 208
  changed regs: 157 158
  dead regs: 100 [cc] 157 158
  livein cands in BB 6:

        0
  pavin cands in BB 6:

        0
  pavout cands in BB 6:

        0

BB 7:
  register live in: 141 142 143 146 152 174 178 195 204 205 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 195 204 205 206 207 208
  changed regs: 0 [r0] 1 [r1] 2 [r2] 159 160 162 163 164 168 169 198 199 204 205 206 208 214 215 216 227
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 141 142 143 159 160 162 163 164 168 169 198 199 214 215 216 227
  livein cands in BB 7:

        0
  pavin cands in BB 7:

        0
  pavout cands in BB 7:

        0

BB 8:
  register live in: 146 152 174 178 206
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 203
  changed regs: 203
  dead regs: 206
  livein cands in BB 8:

        0
  pavin cands in BB 8:

        0
  pavout cands in BB 8:

        0

BB 9:
  register live in: 146 152 174 178 195 204 205 206 207 208
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 195 204 205 206 207 208
  changed regs: 204 205 208
  dead regs: 100 [cc]
  livein cands in BB 9:

        0
  pavin cands in BB 9:

        0
  pavout cands in BB 9:

        0

BB 15:
  register live in: 146 152 174 178 206
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 203
  changed regs: 203
  dead regs: 206
  livein cands in BB 15:

        0
  pavin cands in BB 15:

        0
  pavout cands in BB 15:

        0

BB 10:
  register live in: 146 152 174 178 203
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 203
  changed regs: 146 152 217 218 219 220 221 228
  dead regs: 100 [cc] 146 152 217 218 219 220 221 228
  livein cands in BB 10:

        0
  pavin cands in BB 10:

        0

BB 11:
  register live in: 146 152 174 178 203
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 146 152 174 178 195 204 205 206 207 208
  changed regs: 0 [r0] 2 [r2] 114 116 150 151 172 173 175 176 177 185 195 200 202 204 205 206 207 208 222 223 224 225
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 114 116 150 151 172 173 175 176 177 185 200 202 203 222 223 224 225
  livein cands in BB 11:

        0
  pavin cands in BB 11:

        0
  pavout cands in BB 11:

        0

BB 12:
  register live in: 203
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119
  changed regs: 119
  dead regs: 203
  livein cands in BB 12:

        0

BB 13:
  register live in: 119
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 189 226
  dead regs: 119 189 226
  livein cands in BB 13:

        0

BB 14:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs:
  dead regs:
  livein cands in BB 14:

        0
subreg regs:
  Slot 0 regnos (width = 0):	 227
  Slot 1 regnos (width = 0):	 146
  Slot 2 regnos (width = 0):	 152
Changing spilled pseudos to memory in insn #270
Changing spilled pseudos to memory in insn #272
Changing spilled pseudos to memory in insn #288
Changing spilled pseudos to memory in insn #289
Changing spilled pseudos to memory in insn #277
Changing spilled pseudos to memory in insn #290
Changing spilled pseudos to memory in insn #280
Changing spilled pseudos to memory in insn #279
Changing spilled pseudos to memory in insn #145
Changing spilled pseudos to memory in insn #283
Changing spilled pseudos to memory in insn #3
Changing spilled pseudos to memory in insn #285
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=72, prev_offset=56)
Can't eliminate 103 to 102 (offset=56, prev_offset=0)
Can't eliminate 103 to 11 (offset=52, prev_offset=0)
Can eliminate 103 to 7 (offset=72, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 285:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly set: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            0 Costly set: reject++
          alt=12,overall=1,losers=0,rld_nregs=0
	 Choosing alt 12 in insn 283:  (0) *t  (1) *UvTu {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 279:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 280:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 290:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 277:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 289:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 288:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=72, prev_offset=72)
Can't eliminate 103 to 102 (offset=56, prev_offset=0)
Can't eliminate 103 to 11 (offset=52, prev_offset=0)
Can eliminate 103 to 7 (offset=72, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=16)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
changing reg in insn 174
changing reg in insn 262
changing reg in insn 3
changing reg in insn 263
changing reg in insn 267
changing reg in insn 20
changing reg in insn 259
changing reg in insn 182
changing reg in insn 186
changing reg in insn 35
changing reg in insn 49
changing reg in insn 99
changing reg in insn 63
changing reg in insn 61
changing reg in insn 50
changing reg in insn 36
changing reg in insn 38
changing reg in insn 52
changing reg in insn 98
changing reg in insn 63
changing reg in insn 60
changing reg in insn 53
changing reg in insn 39
changing reg in insn 41
changing reg in insn 55
changing reg in insn 97
changing reg in insn 64
changing reg in insn 59
changing reg in insn 56
changing reg in insn 42
changing reg in insn 166
changing reg in insn 265
changing reg in insn 4
changing reg in insn 266
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 67
changing reg in insn 75
changing reg in insn 77
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 81
changing reg in insn 81
changing reg in insn 83
changing reg in insn 89
changing reg in insn 103
changing reg in insn 93
changing reg in insn 91
changing reg in insn 102
changing reg in insn 106
changing reg in insn 148
changing reg in insn 150
changing reg in insn 150
changing reg in insn 150
changing reg in insn 151
changing reg in insn 149
changing reg in insn 77
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 154
changing reg in insn 154
changing reg in insn 154
changing reg in insn 156
changing reg in insn 153
changing reg in insn 154
changing reg in insn 258
changing reg in insn 174
changing reg in insn 186
changing reg in insn 80
changing reg in insn 81
changing reg in insn 245
changing reg in insn 89
changing reg in insn 246
changing reg in insn 247
changing reg in insn 166
changing reg in insn 170
changing reg in insn 258
changing reg in insn 261
changing reg in insn 259
changing reg in insn 260
changing reg in insn 264
changing reg in insn 267
changing reg in insn 262
changing reg in insn 117
changing reg in insn 131
changing reg in insn 55
changing reg in insn 52
changing reg in insn 49
changing reg in insn 117
changing reg in insn 131
changing reg in insn 263
changing reg in insn 116
changing reg in insn 130
changing reg in insn 28
changing reg in insn 41
changing reg in insn 38
changing reg in insn 35
changing reg in insn 116
changing reg in insn 130
changing reg in insn 264
changing reg in insn 111
changing reg in insn 261
changing reg in insn 260
changing reg in insn 31
changing reg in insn 265
changing reg in insn 107
changing reg in insn 266
changing reg in insn 113
changing reg in insn 127
changing reg in insn 26
changing reg in insn 119
changing reg in insn 114
changing reg in insn 113
changing reg in insn 191
changing reg in insn 132
changing reg in insn 128
changing reg in insn 127
deleting insn with uid = 273.
deleting insn with uid = 259.
deleting insn with uid = 245.
deleting insn with uid = 246.
deleting insn with uid = 106.
deleting insn with uid = 278.
deleting insn with uid = 281.
deleting insn with uid = 282.
deleting insn with uid = 247.
deleting insn with uid = 258.
deleting insn with uid = 262.
deleting insn with uid = 263.
deleting insn with uid = 265.
deleting insn with uid = 266.
deleting insn with uid = 267.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 161.
verify found no changes in insn with uid = 165.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 19 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 21 (  1.3)


drawGun

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 100 [cc]
;;  ref usage 	r0={13d,12u} r1={16d,8u} r2={18d,10u} r3={22d,16u} r4={4d,6u} r5={3d,6u} r6={3d,9u} r7={2d,5u} r8={5d,7u} r9={3d,8u} r10={2d,5u} r11={1d,1u} r12={16d} r13={1d,35u} r14={9d} r15={8d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={23d,14u,4e} r32={1d,2u} r33={1d,1u} r34={1d,1u} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={14d,4u} r101={8d} r104={8d} r105={8d} r106={8d} 
;;    total ref usage 903{749d,150u,4e} in 153{145 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 2 9 2 (debug_marker) "../System/ray_funkcije.c":38:2 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:SF scale (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":38:8 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/ray_funkcije.c":39:2 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI tx_step (const_int 2 [0x2])) "../System/ray_funkcije.c":39:6 -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/ray_funkcije.c":40:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:SI ty_step (const_int 2 [0x2])) "../System/ray_funkcije.c":40:6 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "../System/ray_funkcije.c":41:2 -1
     (nil))
(debug_insn 15 14 16 2 (debug_marker) "../System/ray_funkcije.c":42:2 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/ray_funkcije.c":42:7 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/ray_funkcije.c":42:18 -1
     (nil))
(note 19 18 21 2 NOTE_INSN_DELETED)
(insn 21 19 270 2 (set (reg:SI 3 r3 [orig:152 ivtmp.105 ] [152])
        (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)
        (nil)))
(insn 270 21 271 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-4 S4 A32])
        (reg:SI 3 r3 [orig:152 ivtmp.105 ] [152])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 271 270 20 2 (set (reg:SI 3 r3 [211])
        (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>)) "../System/ray_funkcije.c":45:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 20 271 228 2 (set (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])
        (zero_extend:SI (mem/c:QI (reg:SI 3 r3 [211]) [0 time_gun+0 S1 A8]))) "../System/ray_funkcije.c":45:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>) [0 time_gun+0 S1 A8]))
        (nil)))
(note 228 20 153 2 NOTE_INSN_DELETED)
(insn 153 228 5 2 (set (reg:SF 34 s18 [178])
        (const_double:SF 4.4e+1 [0x0.bp+6])) "../System/ray_funkcije.c":58:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.4e+1 [0x0.bp+6])
        (nil)))
(insn 5 153 272 2 (set (reg/v:SI 3 r3 [orig:146 y ] [146])
        (const_int 0 [0])) "../System/ray_funkcije.c":42:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 272 5 149 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])
        (reg/v:SI 3 r3 [orig:146 y ] [146])) "../System/ray_funkcije.c":42:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 149 272 159 2 (set (reg:SF 32 s16 [174])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":57:57 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(note 159 149 248 2 NOTE_INSN_DELETED)
(jump_insn 248 159 249 2 (set (pc)
        (label_ref 143)) 284 {*arm_jump}
     (nil)
 -> 143)
(barrier 249 248 175)
(code_label 175 249 25 3 9 (nil) [3 uses])
(note 25 175 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 30 25 26 3 NOTE_INSN_DELETED)
(debug_insn 26 30 27 3 (var_location:SI x (reg/v:SI 6 r6 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker) "../System/ray_funkcije.c":44:4 -1
     (nil))
(debug_insn 28 27 29 3 (var_location:SI pixel (minus:SI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
        (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>))) "../System/ray_funkcije.c":44:8 -1
     (nil))
(debug_insn 29 28 33 3 (debug_marker) "../System/ray_funkcije.c":45:4 -1
     (nil))
(debug_insn 33 29 47 3 (debug_marker) "../System/ray_funkcije.c":46:5 -1
     (nil))
(debug_insn 47 33 31 3 (debug_marker) "../System/ray_funkcije.c":50:5 -1
     (nil))
(jump_insn 31 47 32 3 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:119 prephitmp_10 ] [119])
                        (const_int 0 [0]))
                    (label_ref 45)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":45:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 45)
(note 32 31 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 32 36 4 (set (reg/v:SI 7 r7 [orig:141 red ] [141])
        (zero_extend:SI (mem:QI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116]) [0 MEM[base: _72, offset: 0B]+0 S1 A16]))) "../System/ray_funkcije.c":46:9 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 36 35 37 4 (var_location:SI red (reg/v:SI 7 r7 [orig:141 red ] [141])) "../System/ray_funkcije.c":46:9 -1
     (nil))
(debug_insn 37 36 38 4 (debug_marker) "../System/ray_funkcije.c":47:5 -1
     (nil))
(insn 38 37 39 4 (set (reg/v:SI 10 r10 [orig:142 green ] [142])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
                    (const_int 1 [0x1])) [0 MEM[base: _72, offset: 1B]+0 S1 A8]))) "../System/ray_funkcije.c":47:11 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 39 38 40 4 (var_location:SI green (reg/v:SI 10 r10 [orig:142 green ] [142])) "../System/ray_funkcije.c":47:11 -1
     (nil))
(debug_insn 40 39 41 4 (debug_marker) "../System/ray_funkcije.c":48:5 -1
     (nil))
(insn 41 40 42 4 (set (reg/v:SI 9 r9 [orig:143 blue ] [143])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
                    (const_int 2 [0x2])) [0 MEM[base: _72, offset: 2B]+0 S1 A16]))) "../System/ray_funkcije.c":48:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 42 41 250 4 (var_location:SI blue (reg/v:SI 9 r9 [orig:143 blue ] [143])) "../System/ray_funkcije.c":48:10 -1
     (nil))
(jump_insn 250 42 251 4 (set (pc)
        (label_ref 57)) 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 251 250 45)
(code_label 45 251 46 5 3 (nil) [1 uses])
(note 46 45 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 46 50 5 (set (reg/v:SI 7 r7 [orig:141 red ] [141])
        (zero_extend:SI (mem:QI (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114]) [0 MEM[base: _65, offset: 0B]+0 S1 A16]))) "../System/ray_funkcije.c":50:9 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 50 49 51 5 (var_location:SI red (reg/v:SI 7 r7 [orig:141 red ] [141])) "../System/ray_funkcije.c":50:9 -1
     (nil))
(debug_insn 51 50 52 5 (debug_marker) "../System/ray_funkcije.c":51:5 -1
     (nil))
(insn 52 51 53 5 (set (reg/v:SI 10 r10 [orig:142 green ] [142])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
                    (const_int 1 [0x1])) [0 MEM[base: _65, offset: 1B]+0 S1 A8]))) "../System/ray_funkcije.c":51:11 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 53 52 54 5 (var_location:SI green (reg/v:SI 10 r10 [orig:142 green ] [142])) "../System/ray_funkcije.c":51:11 -1
     (nil))
(debug_insn 54 53 55 5 (debug_marker) "../System/ray_funkcije.c":52:5 -1
     (nil))
(insn 55 54 56 5 (set (reg/v:SI 9 r9 [orig:143 blue ] [143])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
                    (const_int 2 [0x2])) [0 MEM[base: _65, offset: 2B]+0 S1 A16]))) "../System/ray_funkcije.c":52:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 56 55 57 5 (var_location:SI blue (reg/v:SI 9 r9 [orig:143 blue ] [143])) "../System/ray_funkcije.c":52:10 -1
     (nil))
(code_label 57 56 58 6 4 (nil) [1 uses])
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 59 58 60 6 (var_location:SI blue (reg/v:SI 9 r9 [orig:143 blue ] [143])) -1
     (nil))
(debug_insn 60 59 61 6 (var_location:SI green (reg/v:SI 10 r10 [orig:142 green ] [142])) -1
     (nil))
(debug_insn 61 60 62 6 (var_location:SI red (reg/v:SI 7 r7 [orig:141 red ] [141])) -1
     (nil))
(debug_insn 62 61 126 6 (debug_marker) "../System/ray_funkcije.c":54:4 -1
     (nil))
(debug_insn 126 62 63 6 (debug_marker) "../System/ray_funkcije.c":43:28 -1
     (nil))
(insn 63 126 64 6 (set (reg:SI 3 r3 [157])
        (plus:SI (reg/v:SI 7 r7 [orig:141 red ] [141])
            (reg/v:SI 10 r10 [orig:142 green ] [142]))) "../System/ray_funkcije.c":54:13 7 {*arm_addsi3}
     (nil))
(insn 64 63 67 6 (set (reg:SI 3 r3 [158])
        (plus:SI (reg:SI 3 r3 [157])
            (reg/v:SI 9 r9 [orig:143 blue ] [143]))) "../System/ray_funkcije.c":54:21 7 {*arm_addsi3}
     (nil))
(insn 67 64 68 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [158])
            (const_int 688 [0x2b0]))) "../System/ray_funkcije.c":54:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "../System/ray_funkcije.c":54:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 124)
(note 69 68 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 82 69 101 7 NOTE_INSN_DELETED)
(note 101 82 70 7 NOTE_INSN_DELETED)
(debug_insn 70 101 191 7 (debug_marker) "../System/ray_funkcije.c":55:5 -1
     (nil))
(debug_insn 191 70 71 7 (var_location:SF D#1 (mult:SF (float:SF (reg/v:SI 6 r6 [orig:151 x ] [151]))
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":70:1 -1
     (nil))
(debug_insn 71 191 72 7 (var_location:SI gun_x (fix:SI (plus:SF (float:SF (fix:SI (debug_expr:SF D#1)))
            (const_double:SF 1.8e+1 [0x0.9p+5])))) "../System/ray_funkcije.c":55:9 -1
     (nil))
(debug_insn 72 71 192 7 (debug_marker) "../System/ray_funkcije.c":57:5 -1
     (nil))
(debug_insn 192 72 73 7 (var_location:SF D#2 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":70:1 -1
     (nil))
(debug_insn 73 192 74 7 (var_location:SI gun_y (fix:SI (plus:SF (float:SF (fix:SI (debug_expr:SF D#2)))
            (const_double:SF 4.4e+1 [0x0.bp+6])))) "../System/ray_funkcije.c":57:9 -1
     (nil))
(debug_insn 74 73 274 7 (debug_marker) "../System/ray_funkcije.c":60:5 -1
     (nil))
(insn 274 74 75 7 (set (reg/v:SI 31 s15 [orig:151 x ] [151])
        (reg/v:SI 6 r6 [orig:151 x ] [151])) "../System/ray_funkcije.c":56:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 75 274 113 7 (set (reg:SF 31 s15 [159])
        (float:SF (reg/v:SI 31 s15 [orig:151 x ] [151]))) "../System/ray_funkcije.c":56:16 809 {*floatsisf2_vfp}
     (nil))
(insn 113 75 77 7 (set (reg/v:SI 6 r6 [orig:151 x ] [151])
        (plus:SI (reg/v:SI 6 r6 [orig:151 x ] [151])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":43:30 7 {*arm_addsi3}
     (nil))
(insn 77 113 116 7 (set (reg:SF 31 s15 [160])
        (mult:SF (reg:SF 31 s15 [159])
            (reg:SF 32 s16 [174]))) "../System/ray_funkcije.c":56:26 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 31 s15 [159])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 116 77 78 7 (set (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
        (plus:SI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 78 116 117 7 (set (reg:SI 31 s15 [162])
        (fix:SI (fix:SF (reg:SF 31 s15 [160])))) "../System/ray_funkcije.c":56:9 805 {*truncsisf2_vfp}
     (nil))
(insn 117 78 79 7 (set (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
        (plus:SI (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 79 117 81 7 (set (reg:SF 31 s15 [163])
        (float:SF (reg:SI 31 s15 [162]))) "../System/ray_funkcije.c":56:7 809 {*floatsisf2_vfp}
     (nil))
(insn 81 79 83 7 (set (reg:SF 31 s15 [164])
        (plus:SF (reg:SF 31 s15 [163])
            (reg:SF 33 s17 [195]))) "../System/ray_funkcije.c":56:7 758 {*addsf3_vfp}
     (expr_list:REG_EQUAL (plus:SF (reg:SF 31 s15 [163])
            (const_double:SF 1.8e+1 [0x0.9p+5]))
        (nil)))
(insn 83 81 275 7 (set (reg:SI 31 s15 [215])
        (fix:SI (fix:SF (reg:SF 31 s15 [164])))) "../System/ray_funkcije.c":60:11 805 {*truncsisf2_vfp}
     (nil))
(insn 275 83 84 7 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [215])) "../System/ray_funkcije.c":60:11 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 84 275 237 7 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 237 84 88 7 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 88 237 97 7 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 97 88 89 7 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:143 blue ] [143])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 89 97 91 7 (set (reg:DF 8 r8 [168])
        (reg:DF 0 r0 [198])) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (nil))
(debug_insn 91 89 92 7 (var_location:SI gun_x (fix:SI (reg:DF 8 r8 [168]))) "../System/ray_funkcije.c":60:11 -1
     (nil))
(debug_insn 92 91 93 7 (debug_marker) "../System/ray_funkcije.c":61:5 -1
     (nil))
(debug_insn 93 92 94 7 (var_location:SI gun_x (fix:SI (reg:DF 8 r8 [168]))) "../System/ray_funkcije.c":61:11 -1
     (nil))
(debug_insn 94 93 95 7 (debug_marker) "../System/ray_funkcije.c":62:5 -1
     (nil))
(debug_insn 95 94 96 7 (var_location:SI gun_y (fix:SI (debug_expr:DF D#3))) "../System/ray_funkcije.c":62:11 -1
     (nil))
(debug_insn 96 95 98 7 (debug_marker) "../System/ray_funkcije.c":64:5 -1
     (nil))
(insn 98 96 99 7 (set (reg:SI 1 r1)
        (reg/v:SI 10 r10 [orig:142 green ] [142])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 7 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:141 red ] [141])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 100 99 102 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":65:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 102 100 288 7 (set (reg:SI 2 r2 [orig:169 _30 ] [169])
        (zero_extend:SI (reg:HI 0 r0 [199]))) "../System/ray_funkcije.c":64:5 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 288 102 103 7 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [8 %sfp+-12 S4 A32])
        (reg:SI 2 r2 [orig:169 _30 ] [169])) "../System/ray_funkcije.c":64:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 103 288 104 7 (set (reg:DF 0 r0)
        (reg:DF 8 r8 [168])) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 104 103 289 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 289 104 107 7 (set (reg:SI 2 r2 [orig:169 _30 ] [169])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [8 %sfp+-12 S4 A32])) "../System/ray_funkcije.c":64:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 107 289 109 7 (set (reg:SI 1 r1)
        (reg/v:SI 11 fp [orig:150 gun_y ] [150])) "../System/ray_funkcije.c":64:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 109 107 276 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>) [0 narisi_velik_kvadrat S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":64:5 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(insn 276 109 111 7 (set (reg:SI 3 r3 [216])
        (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>)) "../System/ray_funkcije.c":69:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 111 276 112 7 (set (reg:SI 2 r2 [orig:119 prephitmp_10 ] [119])
        (zero_extend:SI (mem/c:QI (reg:SI 3 r3 [216]) [0 time_gun+0 S1 A8]))) "../System/ray_funkcije.c":69:14 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>) [0 time_gun+0 S1 A8]))
        (nil)))
(debug_insn 112 111 114 7 (debug_marker) "../System/ray_funkcije.c":43:28 -1
     (nil))
(debug_insn 114 112 115 7 (var_location:SI x (reg/v:SI 6 r6 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 115 114 119 7 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 119 115 120 7 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:151 x ] [151])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":43:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 120 119 252 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 175)
            (pc))) "../System/ray_funkcije.c":43:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1056947572 (nil))
 -> 175)
(note 252 120 260 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 260 252 253 8 (set (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])
        (reg:SI 2 r2 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 253 260 254 8 (set (pc)
        (label_ref 134)) 284 {*arm_jump}
     (nil)
 -> 134)
(barrier 254 253 124)
(code_label 124 254 125 9 5 (nil) [1 uses])
(note 125 124 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 9 (set (reg/v:SI 6 r6 [orig:151 x ] [151])
        (plus:SI (reg/v:SI 6 r6 [orig:151 x ] [151])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":43:30 7 {*arm_addsi3}
     (nil))
(debug_insn 128 127 129 9 (var_location:SI x (reg/v:SI 6 r6 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 129 128 130 9 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 130 129 131 9 (set (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
        (plus:SI (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 131 130 132 9 (set (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
        (plus:SI (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 132 131 133 9 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:151 x ] [151])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":43:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 133 132 268 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 175)
            (pc))) "../System/ray_funkcije.c":43:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1056947572 (nil))
 -> 175)
(note 268 133 261 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 261 268 134 10 (set (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])
        (reg:SI 2 r2 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 134 261 135 11 7 (nil) [1 uses])
(note 135 134 136 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 136 135 277 11 (debug_marker) "../System/ray_funkcije.c":42:27 -1
     (nil))
(insn 277 136 137 11 (set (reg/v:SI 3 r3 [orig:146 y ] [146])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":42:29 728 {*thumb2_movsi_vfp}
     (nil))
(insn 137 277 290 11 (set (reg/v:SI 3 r3 [orig:146 y ] [146])
        (plus:SI (reg/v:SI 3 r3 [orig:146 y ] [146])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":42:29 7 {*arm_addsi3}
     (nil))
(insn 290 137 138 11 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])
        (reg/v:SI 3 r3 [orig:146 y ] [146])) "../System/ray_funkcije.c":42:29 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 138 290 139 11 (var_location:SI y (reg/v:SI 3 r3 [orig:146 y ] [146])) -1
     (nil))
(debug_insn 139 138 280 11 (debug_marker) "../System/ray_funkcije.c":42:18 -1
     (nil))
(insn 280 139 140 11 (set (reg:SI 2 r2 [orig:152 ivtmp.105 ] [152])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":42:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 140 280 279 11 (set (reg:SI 2 r2 [orig:152 ivtmp.105 ] [152])
        (plus:SI (reg:SI 2 r2 [orig:152 ivtmp.105 ] [152])
            (const_int 768 [0x300]))) "../System/ray_funkcije.c":42:2 7 {*arm_addsi3}
     (nil))
(insn 279 140 141 11 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-4 S4 A32])
        (reg:SI 2 r2 [orig:152 ivtmp.105 ] [152])) "../System/ray_funkcije.c":42:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 141 279 142 11 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:146 y ] [146])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":42:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 142 141 143 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "../System/ray_funkcije.c":42:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 16794292 (nil))
 -> 178)
(code_label 143 142 144 12 2 (nil) [1 uses])
(note 144 143 155 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 155 144 169 12 NOTE_INSN_DELETED)
(note 169 155 171 12 NOTE_INSN_DELETED)
(note 171 169 145 12 NOTE_INSN_DELETED)
(debug_insn 145 171 146 12 (var_location:SI y (mem/c:SI (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])) -1
     (nil))
(debug_insn 146 145 147 12 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 147 146 283 12 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 283 147 148 12 (set (reg/v:SI 31 s15 [orig:146 y ] [146])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":57:47 728 {*thumb2_movsi_vfp}
     (nil))
(insn 148 283 3 12 (set (reg:SF 31 s15 [172])
        (float:SF (reg/v:SI 31 s15 [orig:146 y ] [146]))) "../System/ray_funkcije.c":57:47 809 {*floatsisf2_vfp}
     (nil))
(insn 3 148 150 12 (set (reg:SI 5 r5 [orig:116 ivtmp.94 ] [116])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 150 3 4 12 (set (reg:SF 31 s15 [173])
        (mult:SF (reg:SF 31 s15 [172])
            (reg:SF 32 s16 [174]))) "../System/ray_funkcije.c":57:57 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 31 s15 [172])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 4 150 151 12 (set (reg/v:SI 6 r6 [orig:151 x ] [151])
        (const_int 0 [0])) "../System/ray_funkcije.c":43:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 151 4 80 12 (set (reg:SI 31 s15 [175])
        (fix:SI (fix:SF (reg:SF 31 s15 [173])))) "../System/ray_funkcije.c":57:40 805 {*truncsisf2_vfp}
     (nil))
(insn 80 151 152 12 (set (reg:SF 33 s17 [195])
        (const_double:SF 1.8e+1 [0x0.9p+5])) "../System/ray_funkcije.c":56:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.8e+1 [0x0.9p+5])
        (nil)))
(insn 152 80 154 12 (set (reg:SF 31 s15 [176])
        (float:SF (reg:SI 31 s15 [175]))) "../System/ray_funkcije.c":57:38 809 {*floatsisf2_vfp}
     (nil))
(insn 154 152 156 12 (set (reg:SF 31 s15 [177])
        (plus:SF (reg:SF 31 s15 [176])
            (reg:SF 34 s18 [178]))) "../System/ray_funkcije.c":58:7 758 {*addsf3_vfp}
     (expr_list:REG_EQUAL (plus:SF (reg:SF 31 s15 [176])
            (const_double:SF 4.4e+1 [0x0.bp+6]))
        (nil)))
(insn 156 154 284 12 (set (reg:SI 31 s15 [223])
        (fix:SI (fix:SF (reg:SF 31 s15 [177])))) "../System/ray_funkcije.c":62:11 805 {*truncsisf2_vfp}
     (nil))
(insn 284 156 157 12 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [223])) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 157 284 238 12 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 238 157 161 12 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":62:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 161 238 196 12 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(debug_insn 196 161 195 12 (var_location:DF D#4 (reg:DF 0 r0)) -1
     (nil))
(debug_insn 195 196 165 12 (var_location:DF D#3 (debug_expr:DF D#4)) -1
     (nil))
(call_insn/u 165 195 285 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 285 165 170 12 (set (reg/v:SI 3 r3 [orig:146 y ] [146])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-8 S4 A32])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 170 285 166 12 (set (reg:SI 4 r4 [185])
        (plus:SI (ashift:SI (reg/v:SI 3 r3 [orig:146 y ] [146])
                (const_int 1 [0x1]))
            (reg/v:SI 3 r3 [orig:146 y ] [146]))) 318 {*add_shiftsi}
     (nil))
(insn 166 170 286 12 (set (reg/v:SI 11 fp [orig:150 gun_y ] [150])
        (reg:SI 0 r0 [200])) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 286 166 174 12 (set (reg:SI 3 r3 [225])
        (symbol_ref:SI ("t_gun_2") [flags 0x82]  <var_decl 0000000006be3e10 t_gun_2>)) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 174 286 264 12 (set (reg:SI 4 r4 [orig:114 ivtmp.95 ] [114])
        (plus:SI (ashift:SI (reg:SI 4 r4 [185])
                (const_int 7 [0x7]))
            (reg:SI 3 r3 [225]))) 318 {*add_shiftsi}
     (nil))
(insn 264 174 255 12 (set (reg:SI 2 r2 [orig:119 prephitmp_10 ] [119])
        (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 255 264 256 12 (set (pc)
        (label_ref 175)) 284 {*arm_jump}
     (nil)
 -> 175)
(barrier 256 255 178)
(code_label 178 256 179 13 8 (nil) [1 uses])
(note 179 178 181 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 181 179 180 13 NOTE_INSN_DELETED)
(debug_insn 180 181 182 13 (debug_marker) "../System/ray_funkcije.c":69:2 -1
     (nil))
(jump_insn 182 180 183 13 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])
                        (const_int 0 [0]))
                    (label_ref:SI 193)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":69:4 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 193)
(note 183 182 184 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 184 183 186 14 (debug_marker) "../System/ray_funkcije.c":69:19 -1
     (nil))
(insn 186 184 287 14 (set (reg:SI 8 r8 [189])
        (plus:SI (reg:SI 8 r8 [orig:119 prephitmp_10 ] [119])
            (const_int -1 [0xffffffffffffffff]))) "../System/ray_funkcije.c":69:27 7 {*arm_addsi3}
     (nil))
(insn 287 186 188 14 (set (reg:SI 3 r3 [226])
        (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>)) "../System/ray_funkcije.c":69:27 728 {*thumb2_movsi_vfp}
     (nil))
(insn 188 287 193 14 (set (mem/c:QI (reg:SI 3 r3 [226]) [0 time_gun+0 S1 A8])
        (reg:QI 8 r8 [189])) "../System/ray_funkcije.c":69:27 263 {*arm_movqi_insn}
     (nil))
(code_label 193 188 194 15 1 (nil) [1 uses])
(note 194 193 257 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 257 194 269 NOTE_INSN_DELETED)
(note 269 257 0 NOTE_INSN_DELETED)

;; Function drawMap (drawMap, funcdef_no=357, decl_uid=5813, cgraph_uid=361, symbol_order=369)

      Creating newreg=1101
Removing SCRATCH in insn #322 (nop 3)
rescanning insn with uid = 322.
      Creating newreg=1102
Removing SCRATCH in insn #328 (nop 3)
rescanning insn with uid = 328.
      Creating newreg=1103
Removing SCRATCH in insn #359 (nop 3)
rescanning insn with uid = 359.
      Creating newreg=1104
Removing SCRATCH in insn #364 (nop 3)
rescanning insn with uid = 364.
      Creating newreg=1105
Removing SCRATCH in insn #421 (nop 3)
rescanning insn with uid = 421.
      Creating newreg=1106
Removing SCRATCH in insn #427 (nop 3)
rescanning insn with uid = 427.
      Creating newreg=1107
Removing SCRATCH in insn #468 (nop 3)
rescanning insn with uid = 468.
      Creating newreg=1108
Removing SCRATCH in insn #473 (nop 3)
rescanning insn with uid = 473.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=96, prev_offset=0)
Can't eliminate 103 to 102 (offset=96, prev_offset=0)
Can't eliminate 103 to 11 (offset=96, prev_offset=0)
Can eliminate 103 to 7 (offset=96, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
      Removing equiv init insn 62 (freq=13)
   62: r971:SI=`px'
      REG_EQUIV `px'
deleting insn with uid = 62.
      Removing equiv init insn 67 (freq=13)
   67: r972:SI=`py'
      REG_EQUIV `py'
deleting insn with uid = 67.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing address in insn 63 r971:SI -- no change
Changing pseudo 971 in address of insn 63 on equiv `px'
      Creating newreg=1109, assigning class CORE_REGS to address r1109
	   Change to class GENERAL_REGS for r1109
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
   63: r481:SF=[r1109:SI]
      REG_EQUIV [r971:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2270: r1109:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2270:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1109
Changing address in insn 68 r972:SI -- no change
Changing pseudo 972 in address of insn 68 on equiv `py'
      Creating newreg=1110, assigning class CORE_REGS to address r1110
	   Change to class GENERAL_REGS for r1110
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
   68: r483:SF=[r1110:SI]
      REG_EQUIV [r972:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2271: r1110:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2271:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1110
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 64:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1111 from oldreg=355, assigning class VFP_LO_REGS to r1111
   64: r1111:SI=fix(fix(r481:SF))
      REG_DEAD r481:SF
    Inserting insn reload after:
 2272: r355:SI=r1111:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 2272:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 69:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1112 from oldreg=356, assigning class VFP_LO_REGS to r1112
   69: r1112:SI=fix(fix(r483:SF))
      REG_DEAD r483:SF
    Inserting insn reload after:
 2273: r356:SI=r1112:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 2273:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 1942:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1113 from oldreg=967, assigning class LO_REGS to r1113
 1942: r1113:SI=`angle'
      REG_EQUAL `angle'
    Inserting insn reload after:
 2274: r967:SI=r1113:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2274:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 96:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1114 from oldreg=967, assigning class LO_REGS to r1114
   96: r1114:SI=`angle'
      REG_EQUAL `angle'
    Inserting insn reload after:
 2275: r967:SI=r1114:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2275:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=1115 from oldreg=967, assigning class CORE_REGS to address r1115
	   Change to class GENERAL_REGS for r1115
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) r  (1) mHa {*thumb2_movsf_vfp}
   98: r0:SF=[r1115:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2276: r1115:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2276:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1115 for output r1115:SI, change to class LO_REGS for r1115
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 101:  (0) r  (1) mHa {*thumb2_movdf_vfp}
      Creating newreg=1116 from oldreg=967, assigning class CORE_REGS to address r1116
	   Change to class GENERAL_REGS for r1116
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 108:  (0) m  (1) r {*thumb2_movsf_vfp}
  108: [r1116:SI]=r998:SF
      REG_DEAD r998:SF
    Inserting insn reload before:
 2277: r1116:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2277:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1116 for output r1116:SI, change to class LO_REGS for r1116
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=1117 from oldreg=967, assigning class CORE_REGS to address r1117
	   Change to class GENERAL_REGS for r1117
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  124: r125:SF=[r1117:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2278: r1117:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2278:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1117 for output r1117:SI, change to class LO_REGS for r1117
      Creating newreg=1118 from oldreg=967, assigning class CORE_REGS to address r1118
	   Change to class GENERAL_REGS for r1118
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  131: r0:SF=[r1118:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2279: r1118:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2279:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1118 for output r1118:SI, change to class LO_REGS for r1118
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 134:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
      Creating newreg=1119 from oldreg=967, assigning class CORE_REGS to address r1119
	   Change to class GENERAL_REGS for r1119
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 142:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  142: [r1119:SI]=r125:SF
    Inserting insn reload before:
 2280: r1119:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2280:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1119 for output r1119:SI, change to class LO_REGS for r1119
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 1943:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1120 from oldreg=967, assigning class LO_REGS to r1120
 1943: r1120:SI=`angle'
      REG_EQUAL `angle'
    Inserting insn reload after:
 2281: r967:SI=r1120:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2281:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 160:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1121 from oldreg=967, assigning class LO_REGS to r1121
  160: r1121:SI=`angle'
      REG_EQUAL `angle'
    Inserting insn reload after:
 2282: r967:SI=r1121:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2282:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=1122 from oldreg=967, assigning class CORE_REGS to address r1122
	   Change to class GENERAL_REGS for r1122
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 162:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  162: r0:SF=[r1122:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2283: r1122:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2283:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1122 for output r1122:SI, change to class LO_REGS for r1122
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 165:  (0) r  (1) mHa {*thumb2_movdf_vfp}
      Creating newreg=1123 from oldreg=967, assigning class CORE_REGS to address r1123
	   Change to class GENERAL_REGS for r1123
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 172:  (0) m  (1) r {*thumb2_movsf_vfp}
  172: [r1123:SI]=r1002:SF
      REG_DEAD r1002:SF
    Inserting insn reload before:
 2284: r1123:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2284:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1123 for output r1123:SI, change to class LO_REGS for r1123
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=1124 from oldreg=967, assigning class CORE_REGS to address r1124
	   Change to class GENERAL_REGS for r1124
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 188:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  188: r125:SF=[r1124:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2285: r1124:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2285:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1124 for output r1124:SI, change to class LO_REGS for r1124
      Creating newreg=1125 from oldreg=967, assigning class CORE_REGS to address r1125
	   Change to class GENERAL_REGS for r1125
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 195:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  195: r0:SF=[r1125:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2286: r1125:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2286:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1125 for output r1125:SI, change to class LO_REGS for r1125
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 198:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
      Creating newreg=1126 from oldreg=967, assigning class CORE_REGS to address r1126
	   Change to class GENERAL_REGS for r1126
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 206:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  206: [r1126:SI]=r125:SF
    Inserting insn reload before:
 2287: r1126:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2287:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1126 for output r1126:SI, change to class LO_REGS for r1126
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=13,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 210:  (0) r  (1) mHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2218:  (0) t  (1) G {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=13,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 219:  (0) r  (1) mHa {*thumb2_movsf_vfp}
      Creating newreg=1127 from oldreg=967, assigning class CORE_REGS to address r1127
	   Change to class GENERAL_REGS for r1127
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 220:  (0) m  (1) r {*thumb2_movsf_vfp}
  220: [r1127:SI]=r521:SF
      REG_DEAD r521:SF
    Inserting insn reload before:
 2288: r1127:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2288:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1127 for output r1127:SI, change to class LO_REGS for r1127
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) K {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 238:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) l {*thumb2_cbz}
      Creating newreg=1128 from oldreg=967, assigning class CORE_REGS to address r1128
	   Change to class GENERAL_REGS for r1128
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 251:  (0) m  (1) r {*thumb2_movsf_vfp}
  251: [r1128:SI]=r519:SF
      REG_DEAD r519:SF
    Inserting insn reload before:
 2289: r1128:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2289:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1128 for output r1128:SI, change to class LO_REGS for r1128
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2216:  (0) t  (1) G {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) r  (1) K {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2214:  (0) t  (1) G {*cmpsf_trap_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=20,losers=2 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=20,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=5,overall=11,losers=1,rld_nregs=1
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=7,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1981:  (0) r  (1) K  (2) rI {*thumb2_movsicc_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 321:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15,overall=12,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
	 Choosing alt 1 in insn 326:  (0) l  (1) l  (2) l {*arm_addsi3}
      Creating newreg=1129 from oldreg=355, assigning class LO_REGS to r1129
  326: r538:SI=r1129:SI+r342:SI
    Inserting insn reload before:
 2290: r1129:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2290:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 320:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 322:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1101
      Creating newreg=1130 from oldreg=356, assigning class GENERAL_REGS to r1130
  322: {r534:SI=trunc(sign_extend(r1130:SI)*sign_extend(r535:SI) 0>>0x20);clobber r1101:SI;}
      REG_UNUSED r1101:SI
      REG_EQUAL trunc(sign_extend(r356:SI)*0x66666667 0>>0x20)
    Inserting insn reload before:
 2291: r1130:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2291:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1130 for output r1130:SI, change to class LO_REGS for r1130
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1102
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 324:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=1131 from oldreg=356, assigning class LO_REGS to r1131
  324: r537:SI=r1131:SI>>0x1f
    Inserting insn reload before:
 2292: r1131:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2292:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 332:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) l {*thumb2_cbnz}
      Creating newreg=1132 from oldreg=967, assigning class CORE_REGS to address r1132
	   Change to class GENERAL_REGS for r1132
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 343:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  343: s0:SF=[r1132:SI]
    Inserting insn reload before:
 2293: r1132:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2293:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1132 for output r1132:SI, change to class LO_REGS for r1132
Changing address in insn 348 r971:SI -- no change
Changing pseudo 971 in address of insn 348 on equiv `px'
      Creating newreg=1133, assigning class CORE_REGS to address r1133
	   Change to class GENERAL_REGS for r1133
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 348:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  348: r553:SF=[r1133:SI]
      REG_EQUIV [r971:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2294: r1133:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2294:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1133
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 347:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
Changing address in insn 351 r971:SI -- no change
Changing pseudo 971 in address of insn 351 on equiv `px'
      Creating newreg=1134, assigning class CORE_REGS to address r1134
	   Change to class GENERAL_REGS for r1134
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 351:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  351: [r1134:SI]=r146:SF
      REG_DEAD r146:SF
    Inserting insn reload before:
 2295: r1134:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2295:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1134
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 358:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=14,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15,overall=12,losers=1 -- refuse
	 Choosing alt 1 in insn 357:  (0) l  (1) l  (2) l {*arm_addsi3}
      Creating newreg=1135 from oldreg=356, assigning class LO_REGS to r1135
  357: r556:SI=r343:SI+r1135:SI
    Inserting insn reload before:
 2296: r1135:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2296:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1103
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 362:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 364:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1104
      Creating newreg=1136 from oldreg=355, assigning class GENERAL_REGS to r1136
  364: {r563:SI=trunc(sign_extend(r1136:SI)*sign_extend(r559:SI) 0>>0x20);clobber r1104:SI;}
      REG_UNUSED r1104:SI
      REG_DEAD r559:SI
      REG_EQUAL trunc(sign_extend(r355:SI)*0x66666667 0>>0x20)
    Inserting insn reload before:
 2297: r1136:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2297:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1136 for output r1136:SI, change to class LO_REGS for r1136
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 366:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=1137 from oldreg=355, assigning class LO_REGS to r1137
  366: r566:SI=r1137:SI>>0x1f
    Inserting insn reload before:
 2298: r1137:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2298:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 367:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 368:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) l {*thumb2_cbnz}
      Creating newreg=1138 from oldreg=967, assigning class CORE_REGS to address r1138
	   Change to class GENERAL_REGS for r1138
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 379:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  379: s0:SF=[r1138:SI]
    Inserting insn reload before:
 2299: r1138:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2299:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1138 for output r1138:SI, change to class LO_REGS for r1138
Changing address in insn 384 r972:SI -- no change
Changing pseudo 972 in address of insn 384 on equiv `py'
      Creating newreg=1139, assigning class CORE_REGS to address r1139
	   Change to class GENERAL_REGS for r1139
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  384: r576:SF=[r1139:SI]
      REG_EQUIV [r972:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2300: r1139:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2300:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1139
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 383:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
Changing address in insn 387 r972:SI -- no change
Changing pseudo 972 in address of insn 387 on equiv `py'
      Creating newreg=1140, assigning class CORE_REGS to address r1140
	   Change to class GENERAL_REGS for r1140
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 387:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  387: [r1140:SI]=r154:SF
      REG_DEAD r154:SF
    Inserting insn reload before:
 2301: r1140:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2301:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1140
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=1141 from oldreg=967, assigning class CORE_REGS to address r1141
	   Change to class GENERAL_REGS for r1141
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 403:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  403: r411:SF=[r1141:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2302: r1141:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2302:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1141 for output r1141:SI, change to class LO_REGS for r1141
Changing address in insn 411 r971:SI -- no change
Changing pseudo 971 in address of insn 411 on equiv `px'
      Creating newreg=1142, assigning class CORE_REGS to address r1142
	   Change to class GENERAL_REGS for r1142
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 411:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  411: r410:SF=[r1142:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2303: r1142:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2303:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1142
Changing address in insn 413 r972:SI -- no change
Changing pseudo 972 in address of insn 413 on equiv `py'
      Creating newreg=1143, assigning class CORE_REGS to address r1143
	   Change to class GENERAL_REGS for r1143
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 413:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  413: r413:SF=[r1143:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2304: r1143:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2304:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1143
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=6,losers=1,rld_nregs=1
            alt=7: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=8: Bad operand -- refuse
	 Choosing alt 0 in insn 425:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
      Creating newreg=1144 from oldreg=355, assigning class LO_REGS to r1144
  425: r590:SI=r1144:SI-r342:SI
      REG_DEAD r342:SI
    Inserting insn reload before:
 2305: r1144:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2305:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 420:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 419:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 421:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1105
      Creating newreg=1145 from oldreg=356, assigning class GENERAL_REGS to r1145
  421: {r586:SI=trunc(sign_extend(r1145:SI)*sign_extend(r587:SI) 0>>0x20);clobber r1105:SI;}
      REG_UNUSED r1105:SI
      REG_EQUAL trunc(sign_extend(r356:SI)*0x66666667 0>>0x20)
    Inserting insn reload before:
 2306: r1145:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2306:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1145 for output r1145:SI, change to class LO_REGS for r1145
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1106
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 423:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=1146 from oldreg=356, assigning class LO_REGS to r1146
  423: r589:SI=r1146:SI>>0x1f
    Inserting insn reload before:
 2307: r1146:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2307:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 424:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) l {*thumb2_cbz}
      Creating newreg=1147 from oldreg=967, assigning class CORE_REGS to address r1147
	   Change to class GENERAL_REGS for r1147
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 440:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  440: r160:SF=[r1147:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2308: r1147:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2308:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1147 for output r1147:SI, change to class LO_REGS for r1147
Changing address in insn 445 r971:SI -- no change
Changing pseudo 971 in address of insn 445 on equiv `px'
      Creating newreg=1148, assigning class CORE_REGS to address r1148
	   Change to class GENERAL_REGS for r1148
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 445:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  445: r410:SF=[r1148:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2309: r1148:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2309:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1148
      Creating newreg=1149 from oldreg=967, assigning class CORE_REGS to address r1149
	   Change to class GENERAL_REGS for r1149
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 452:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  452: r160:SF=[r1149:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2310: r1149:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2310:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1149 for output r1149:SI, change to class LO_REGS for r1149
Changing address in insn 458 r971:SI -- no change
Changing pseudo 971 in address of insn 458 on equiv `px'
      Creating newreg=1150, assigning class CORE_REGS to address r1150
	   Change to class GENERAL_REGS for r1150
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 458:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  458: r606:SF=[r1150:SI]
      REG_EQUIV [r971:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2311: r1150:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2311:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1150
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 457:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 459:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
Changing address in insn 461 r971:SI -- no change
Changing pseudo 971 in address of insn 461 on equiv `px'
      Creating newreg=1151, assigning class CORE_REGS to address r1151
	   Change to class GENERAL_REGS for r1151
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 461:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  461: [r1151:SI]=r410:SF
    Inserting insn reload before:
 2312: r1151:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2312:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1151
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=6,losers=1,rld_nregs=1
            alt=7: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=8: Bad operand -- refuse
	 Choosing alt 0 in insn 466:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
      Creating newreg=1152 from oldreg=356, assigning class LO_REGS to r1152
  466: r609:SI=r1152:SI-r343:SI
      REG_DEAD r343:SI
    Inserting insn reload before:
 2313: r1152:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2313:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 467:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 468:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1107
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            3 Scratch win: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 473:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r1108
      Creating newreg=1153 from oldreg=355, assigning class GENERAL_REGS to r1153
  473: {r616:SI=trunc(sign_extend(r1153:SI)*sign_extend(r612:SI) 0>>0x20);clobber r1108:SI;}
      REG_UNUSED r1108:SI
      REG_DEAD r612:SI
      REG_EQUAL trunc(sign_extend(r355:SI)*0x66666667 0>>0x20)
    Inserting insn reload before:
 2314: r1153:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2314:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1153 for output r1153:SI, change to class LO_REGS for r1153
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 475:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=1154 from oldreg=355, assigning class LO_REGS to r1154
  475: r619:SI=r1154:SI>>0x1f
    Inserting insn reload before:
 2315: r1154:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2315:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 477:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 481:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) l {*thumb2_cbz}
Changing address in insn 489 r972:SI -- no change
Changing pseudo 972 in address of insn 489 on equiv `py'
      Creating newreg=1155, assigning class CORE_REGS to address r1155
	   Change to class GENERAL_REGS for r1155
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 489:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  489: r413:SF=[r1155:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2316: r1155:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2316:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1155
Changing address in insn 500 r972:SI -- no change
Changing pseudo 972 in address of insn 500 on equiv `py'
      Creating newreg=1156, assigning class CORE_REGS to address r1156
	   Change to class GENERAL_REGS for r1156
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 500:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  500: r628:SF=[r1156:SI]
      REG_EQUIV [r972:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2317: r1156:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2317:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1156
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 499:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
Changing address in insn 503 r972:SI -- no change
Changing pseudo 972 in address of insn 503 on equiv `py'
      Creating newreg=1157, assigning class CORE_REGS to address r1157
	   Change to class GENERAL_REGS for r1157
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 503:  (0) Uv  (1) t {*thumb2_movsf_vfp}
  503: [r1157:SI]=r413:SF
    Inserting insn reload before:
 2318: r1157:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2318:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1157
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 515:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) l {*thumb2_cbz}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 522:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1158 from oldreg=970, assigning class LO_REGS to r1158
  522: r1158:SI=`Blocksize'
      REG_EQUAL `Blocksize'
    Inserting insn reload after:
 2319: r970:SI=r1158:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2319:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=1159 from oldreg=970, assigning class CORE_REGS to address r1159
	   Change to class GENERAL_REGS for r1159
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 523:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
  523: r416:SI=[r1159:SI]
      REG_EQUAL [`Blocksize']
    Inserting insn reload before:
 2320: r1159:SI=r970:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2320:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1159 for output r1159:SI, change to class LO_REGS for r1159
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 528:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 5 in insn 530:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Creating newreg=1160 from oldreg=970, assigning class LO_REGS to r1160
  530: r1160:SI=`Blocksize'
      REG_EQUAL `Blocksize'
    Inserting insn reload after:
 2321: r970:SI=r1160:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2321:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 538:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 539:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=1161 from oldreg=970, assigning class CORE_REGS to address r1161
	   Change to class GENERAL_REGS for r1161
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 531:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
  531: r416:SI=[r1161:SI]
      REG_EQUAL [`Blocksize']
    Inserting insn reload before:
 2322: r1161:SI=r970:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2322:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1161 for output r1161:SI, change to class LO_REGS for r1161
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =t  (1) t {*truncsisf2_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 533:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1162 from oldreg=634, assigning class GENERAL_REGS to r1162
  533: r169:SI=r1162:SI/r416:SI
      REG_DEAD r634:SI
    Inserting insn reload before:
 2323: r1162:SI=r634:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2323:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) =r  (1) r  (2) %r  (3) r {*mla}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =t  (1) t {*truncsisf2_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 537:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1163 from oldreg=636, assigning class GENERAL_REGS to r1163
  537: r171:SI=r1163:SI/r416:SI
      REG_DEAD r636:SI
    Inserting insn reload before:
 2324: r1163:SI=r636:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2324:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 543:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 555:  (0) Uu  (1) l {*arm_movqi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) t  (1) Dv {*thumb2_movsf_vfp}
      Removing equiv init insn 770 (freq=13)
  770: r987:SI=`map'
      REG_EQUIV `map'
deleting insn with uid = 770.
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 12:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=1164 from oldreg=463, assigning class GENERAL_REGS to r1164
   12: r1164:SI=0x3c
      REG_EQUAL 0x3c
    Inserting insn reload after:
 2325: r463:SI=r1164:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 2325:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=1165 from oldreg=1164, assigning class LO_REGS to r1165
 2325: r463:SI=r1165:SI
    Inserting insn reload before:
 2326: r1165:SI=r1164:SI

      Removing equiv init insn 581 (freq=13)
  581: r989:DF=1.74532899999999997764366099772814777679741382599e-2
      REG_EQUIV 1.74532899999999997764366099772814777679741382599e-2
deleting insn with uid = 581.
      Removing equiv init insn 632 (freq=13)
  632: r990:DF=6.28317999999999976523668010486289858818054199219e+0
      REG_EQUIV 6.28317999999999976523668010486289858818054199219e+0
deleting insn with uid = 632.
      Removing equiv init insn 1445 (freq=13)
 1445: r992:DF=1.84751999999999998181010596454143524169921875e+3
      REG_EQUIV 1.84751999999999998181010596454143524169921875e+3
deleting insn with uid = 1445.
      Removing equiv init insn 1472 (freq=13)
 1472: r993:DF=3.33333333333333348136306995002087205648422241211e+0
      REG_EQUIV 3.33333333333333348136306995002087205648422241211e+0
deleting insn with uid = 1472.
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 578:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 989 in operand 1 of insn 2004 on equiv 1.74532899999999997764366099772814777679741382599e-2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2004:  (0) r  (1) mHa {*thumb2_movdf_vfp}
      Creating newreg=1166 from oldreg=967, assigning class CORE_REGS to address r1166
	   Change to class GENERAL_REGS for r1166
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 586:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  586: r0:SF=[r1166:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2327: r1166:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2327:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1166 for output r1166:SI, change to class LO_REGS for r1166
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2208:  (0) t  (1) G {*cmpsf_trap_vfp}
Changing pseudo 990 in operand 1 of insn 2007 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2007:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing pseudo 990 in operand 1 of insn 2005 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2005:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) l {*thumb2_cbz}
Changing pseudo 990 in operand 1 of insn 2006 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2006:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 662:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 669:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) l {*thumb2_cbz}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 712:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1167 from oldreg=1078, assigning class VFP_LO_REGS to r1167
  712: r404:SF=float(r1167:SI)
    Inserting insn reload before:
 2328: r1167:SI=r1078:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2328:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 681:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1168 from oldreg=356, assigning class GENERAL_REGS to r1168
  681: r672:SI=r1168:SI/r1078:SI
    Inserting insn reload before:
 2329: r1168:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2329:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1168 for output r1168:SI, change to class LO_REGS for r1168
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 683:  (0) =r  (1) r  (2) r  (3) r {*mls}
      Creating newreg=1169 from oldreg=356, assigning class GENERAL_REGS to r1169
  683: r674:SI=r1169:SI-r1078:SI*r672:SI
      REG_DEAD r672:SI
    Inserting insn reload before:
 2330: r1169:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2330:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1169 for output r1169:SI, change to class LO_REGS for r1169
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=6,losers=1,rld_nregs=1
            alt=7: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=8: Bad operand -- refuse
	 Choosing alt 0 in insn 685:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
      Creating newreg=1170 from oldreg=356, assigning class LO_REGS to r1170
  685: r0:SI=r1170:SI-r674:SI
      REG_DEAD r674:SI
    Inserting insn reload before:
 2331: r1170:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2331:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 688:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing address in insn 699 r972:SI -- no change
Changing pseudo 972 in address of insn 699 on equiv `py'
      Creating newreg=1171, assigning class CORE_REGS to address r1171
	   Change to class GENERAL_REGS for r1171
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 699:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  699: r193:SF=[r1171:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2332: r1171:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2332:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1171
Changing address in insn 701 r971:SI -- no change
Changing pseudo 971 in address of insn 701 on equiv `px'
      Creating newreg=1172, assigning class CORE_REGS to address r1172
	   Change to class GENERAL_REGS for r1172
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 701:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  701: r195:SF=[r1172:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2333: r1172:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2333:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1172
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 703:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1173 from oldreg=402, assigning class VFP_LO_REGS to r1173
  703: r1173:SF={r681:SF*r359:SF+r1173:SF}
      REG_DEAD r681:SF
    Inserting insn reload before:
 2334: r1173:SF=r195:SF
    Inserting insn reload after:
 2335: r402:SF=r1173:SF

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 706:  (0) r  (1) r {*arm_negsi2}
      Creating newreg=1174 from oldreg=682, assigning class GENERAL_REGS to r1174
  706: r1174:SI=-r1078:SI
    Inserting insn reload after:
 2336: r682:SI=r1174:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2336:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 707:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
Changing address in insn 729 r972:SI -- no change
Changing pseudo 972 in address of insn 729 on equiv `py'
      Creating newreg=1175, assigning class CORE_REGS to address r1175
	   Change to class GENERAL_REGS for r1175
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 729:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  729: r193:SF=[r1175:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2337: r1175:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2337:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1175
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 736:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1176 from oldreg=1078, assigning class VFP_LO_REGS to r1176
  736: r360:SF=float(r1176:SI)
    Inserting insn reload before:
 2338: r1176:SI=r1078:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2338:  (0) *t  (1) r {*thumb2_movsi_vfp}
Changing address in insn 731 r971:SI -- no change
Changing pseudo 971 in address of insn 731 on equiv `px'
      Creating newreg=1177, assigning class CORE_REGS to address r1177
	   Change to class GENERAL_REGS for r1177
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 731:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  731: r195:SF=[r1177:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2339: r1177:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2339:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1177
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 720:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1178 from oldreg=356, assigning class GENERAL_REGS to r1178
  720: r688:SI=r1178:SI/r1078:SI
    Inserting insn reload before:
 2340: r1178:SI=r356:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2340:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1178 for output r1178:SI, change to class LO_REGS for r1178
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) r  (2) %r  (3) r {*mla}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 725:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1179 from oldreg=692, assigning class VFP_LO_REGS to r1179
  725: r403:SF=float(r1179:SI)
      REG_DEAD r692:SI
    Inserting insn reload before:
 2341: r1179:SI=r692:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2341:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 733:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1180 from oldreg=402, assigning class VFP_LO_REGS to r1180
  733: r1180:SF={r695:SF*r359:SF+r1180:SF}
      REG_DEAD r695:SF
      REG_DEAD r359:SF
    Inserting insn reload before:
 2342: r1180:SF=r195:SF
    Inserting insn reload after:
 2343: r402:SF=r1180:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 752:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1181 from oldreg=400, assigning class VFP_LO_REGS to r1181
  752: r1181:SI=fix(fix(r696:SF))
      REG_DEAD r696:SF
    Inserting insn reload after:
 2344: r400:SI=r1181:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2344:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =t  (1) t {*truncsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) l  (1) Py {*arm_cmpsi_insn}
Changing pseudo 987 in operand 1 of insn 773 on equiv `map'
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 773:  (0) =r  (1) r  (2) %r  (3) r {*mla}
      Creating newreg=1182, assigning class GENERAL_REGS to r1182
      Creating newreg=1183 from oldreg=401, assigning class GENERAL_REGS to r1183
  773: r701:SI=r988:SI*r1183:SI+r1182:SI
    Inserting insn reload before:
 2345: r1182:SI=`map'
 2346: r1183:SI=r401:SI

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2345:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1182
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2346:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=15,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=15,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            alt=4: Bad operand -- refuse
	 Choosing alt 0 in insn 767:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=1184 from oldreg=401, assigning class LO_REGS to r1184
  767: cc:CC=cmp(r1184:SI,0x18)
      REG_DEAD r401:SI
    Inserting insn reload before:
 2347: r1184:SI=r401:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=13,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=16,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2347:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 775:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 795:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) =l  (1) l  (2) lPt {thumb2_addsi3_compare0}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 825:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 771:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 839:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 840:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 842:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1185 from oldreg=704, assigning class VFP_LO_REGS to r1185
  842: r1185:SF={r200:SF*r200:SF+r1185:SF}
      REG_DEAD r704:SF
      REG_DEAD r200:SF
    Inserting insn reload before:
 2348: r1185:SF=r704:SF
    Inserting insn reload after:
 2349: r0:SF=r1185:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2349:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 845:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2072:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 859:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (0) l {*thumb2_cbnz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 867:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 894:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 880:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1186 from oldreg=355, assigning class GENERAL_REGS to r1186
  880: r716:SI=r1186:SI/r1078:SI
    Inserting insn reload before:
 2350: r1186:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2350:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1186 for output r1186:SI, change to class LO_REGS for r1186
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) =r  (1) r  (2) %r  (3) r {*mla}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 885:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1187 from oldreg=720, assigning class VFP_LO_REGS to r1187
  885: r397:SF=float(r1187:SI)
      REG_DEAD r720:SI
    Inserting insn reload before:
 2351: r1187:SI=r720:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2351:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 888:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 889:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1188 from oldreg=398, assigning class VFP_LO_REGS to r1188
  889: r1188:SF={r183:SF*r721:SF+r1188:SF}
      REG_DEAD r721:SF
      REG_DEAD r183:SF
    Inserting insn reload before:
 2352: r1188:SF=r193:SF
    Inserting insn reload after:
 2353: r398:SF=r1188:SF

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 903:  (0) =r  (1) r  (2) r {divsi3}
      Creating newreg=1189 from oldreg=355, assigning class GENERAL_REGS to r1189
  903: r727:SI=r1189:SI/r1078:SI
    Inserting insn reload before:
 2354: r1189:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2354:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1189 for output r1189:SI, change to class LO_REGS for r1189
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 905:  (0) =r  (1) r  (2) r  (3) r {*mls}
      Creating newreg=1190 from oldreg=355, assigning class GENERAL_REGS to r1190
  905: r729:SI=r1190:SI-r1078:SI*r727:SI
      REG_DEAD r727:SI
    Inserting insn reload before:
 2355: r1190:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2355:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1190 for output r1190:SI, change to class LO_REGS for r1190
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            alt=5: Bad operand -- refuse
          alt=6,overall=6,losers=1,rld_nregs=1
            alt=7: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=8: Bad operand -- refuse
	 Choosing alt 0 in insn 907:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
      Creating newreg=1191 from oldreg=355, assigning class LO_REGS to r1191
  907: r0:SI=r1191:SI-r729:SI
      REG_DEAD r729:SI
    Inserting insn reload before:
 2356: r1191:SI=r355:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2356:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 910:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 916:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 924:  (0) r  (1) r {*arm_negsi2}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 925:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1192 from oldreg=735, assigning class VFP_LO_REGS to r1192
  925: r404:SF=float(r1192:SI)
      REG_DEAD r735:SI
    Inserting insn reload before:
 2357: r1192:SI=r735:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2357:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 920:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 928:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 921:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1193 from oldreg=398, assigning class VFP_LO_REGS to r1193
  921: r1193:SF={r183:SF*r734:SF+r1193:SF}
      REG_DEAD r734:SF
      REG_DEAD r183:SF
    Inserting insn reload before:
 2358: r1193:SF=r193:SF
    Inserting insn reload after:
 2359: r398:SF=r1193:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 940:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 952:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 941:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1194 from oldreg=395, assigning class VFP_LO_REGS to r1194
  941: r1194:SI=fix(fix(r736:SF))
      REG_DEAD r736:SF
    Inserting insn reload after:
 2360: r395:SI=r1194:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2360:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 953:  (0) =t  (1) t {*truncsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 949:  (0) l  (1) Py {*arm_cmpsi_insn}
Changing pseudo 987 in operand 1 of insn 962 on equiv `map'
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 962:  (0) =r  (1) r  (2) %r  (3) r {*mla}
      Creating newreg=1195, assigning class GENERAL_REGS to r1195
      Creating newreg=1196 from oldreg=396, assigning class GENERAL_REGS to r1196
  962: r741:SI=r986:SI*r1196:SI+r1195:SI
    Inserting insn reload before:
 2361: r1195:SI=`map'
 2362: r1196:SI=r396:SI

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2361:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1195
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=9,overall=614,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2362:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=15,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=15,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            alt=4: Bad operand -- refuse
	 Choosing alt 0 in insn 956:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=1197 from oldreg=396, assigning class LO_REGS to r1197
  956: cc:CC=cmp(r1197:SI,0x18)
      REG_DEAD r396:SI
    Inserting insn reload before:
 2363: r1197:SI=r396:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=13,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=16,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2363:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 964:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 987:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 999:  (0) =l  (1) l  (2) lPt {thumb2_addsi3_compare0}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 960:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1024:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1026:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 1028:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=1198 from oldreg=743, assigning class VFP_LO_REGS to r1198
 1028: r1198:SF={r221:SF*r221:SF+r1198:SF}
      REG_DEAD r743:SF
      REG_DEAD r221:SF
    Inserting insn reload before:
 2364: r1198:SF=r743:SF
    Inserting insn reload after:
 2365: r0:SF=r1198:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2365:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1031:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2078:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2206:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1063:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1067:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1073:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Creating newreg=1199 from oldreg=970, assigning class CORE_REGS to address r1199
	   Change to class GENERAL_REGS for r1199
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1059:  (0) l  (1) mi {*thumb2_movsi_vfp}
 1059: r227:SI=[r1199:SI]
      REG_EQUAL [`Blocksize']
    Inserting insn reload before:
 2366: r1199:SI=r970:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2366:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1199 for output r1199:SI, change to class LO_REGS for r1199
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1060:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=0,overall=15,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1061:  (0) r  (1) r  (2) r {*mul}
      Creating newreg=1200 from oldreg=747, assigning class GENERAL_REGS to r1200
 1061: r1200:SI=r748:SI*r227:SI
      REG_EQUAL r227:SI*0x64
    Inserting insn reload after:
 2367: r747:SI=r1200:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2367:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1062:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1064:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1068:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2204:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1079:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1078:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1080:  (0) =t  (1) t  (2) t  (3) 0 {*fmsubsf4}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1081:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1082:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1201 from oldreg=389, assigning class VFP_LO_REGS to r1201
 1082: r1201:SI=fix(fix(r756:SF))
      REG_DEAD r756:SF
    Inserting insn reload after:
 2368: r389:SI=r1201:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2368:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1093:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1095:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1094:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1096:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1110:  (0) =t  (1) 0  (2) Dt {*combine_vcvt_f32_s32}
      Creating newreg=1202 from oldreg=366, assigning class VFP_LO_REGS to r1202
 1110: r1202:SF=float(r1202:SF#0)*3.125e-2
      REG_DEAD r227:SI
    Inserting insn reload before:
 2369: clobber r1202:SF
 2370: r1202:SF#0=r227:SI
    Inserting insn reload after:
 2371: r366:SF=r1202:SF

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2370:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1115:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2202:  (0) t  (1) t {*cmpsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1120:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1121:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1203 from oldreg=765, assigning class VFP_LO_REGS to r1203
 1121: r1203:SI=fix(fix(r764:SF))
      REG_DEAD r764:SF
    Inserting insn reload after:
 2372: r765:SI=r1203:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2372:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1122:  (0) r  (1) I  (2) r {subsi3_compare0}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1123:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1124:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1125:  (0) =l  (1) 0  (2) l {*if_neg_move}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1126:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1204 from oldreg=767, assigning class VFP_LO_REGS to r1204
 1126: r349:SF=float(r1204:SI)
      REG_DEAD r767:SI
    Inserting insn reload before:
 2373: r1204:SI=r767:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2373:  (0) *t  (1) r {*thumb2_movsi_vfp}
Changing pseudo 990 in operand 1 of insn 2011 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2011:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1141:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1149:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1150:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1205 from oldreg=774, assigning class VFP_LO_REGS to r1205
 1150: r1205:SI=fix(fix(r773:SF))
      REG_DEAD r773:SF
    Inserting insn reload after:
 2374: r774:SI=r1205:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2374:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1151:  (0) r  (1) I  (2) r {subsi3_compare0}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1152:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1153:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1154:  (0) =l  (1) 0  (2) l {*if_neg_move}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1155:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1206 from oldreg=776, assigning class VFP_LO_REGS to r1206
 1155: r349:SF=float(r1206:SI)
      REG_DEAD r776:SI
    Inserting insn reload before:
 2375: r1206:SI=r776:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2375:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1159:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1164:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1170:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1175:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1181:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1182:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1191:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1192:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1193:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1194:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1196:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1207 from oldreg=0, assigning class VFP_LO_REGS to r1207
 1196: r1207:SI=fix(fix(r786:SF))
      REG_DEAD r786:SF
    Inserting insn reload after:
 2376: r0:SI=r1207:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2376:  (0) r  (1) *t {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1199:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2200:  (0) t  (1) G {*cmpsf_trap_vfp}
      Creating newreg=1208 from oldreg=967, assigning class CORE_REGS to address r1208
	   Change to class GENERAL_REGS for r1208
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1234:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
 1234: r794:SF=[r1208:SI]
      REG_EQUIV [r967:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 2377: r1208:SI=r967:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2377:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1208 for output r1208:SI, change to class LO_REGS for r1208
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1235:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2198:  (0) t  (1) G {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1246:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1247:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1209 from oldreg=429, assigning class VFP_LO_REGS to r1209
 1247: r1209:SI=fix(fix(r349:SF))
      REG_DEAD r349:SF
    Inserting insn reload after:
 2378: r429:SI=r1209:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 2378:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
      Removing equiv init insn 1276 (freq=97)
 1276: r982:SI=`*.LANCHOR1'
      REG_EQUIV `*.LANCHOR1'
deleting insn with uid = 1276.
      Removing equiv init insn 1304 (freq=97)
 1304: r983:SI=`t_wall'
      REG_EQUIV `t_wall'
deleting insn with uid = 1304.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
      Removing equiv init insn 1340 (freq=97)
 1340: r984:DF=2.39999999999999991118215802998747676610946655273e+0
      REG_EQUIV 2.39999999999999991118215802998747676610946655273e+0
deleting insn with uid = 1340.
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2251:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=2,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2253:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1252:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1210 from oldreg=796, assigning class VFP_LO_REGS to r1210
 1252: r1210:SI=fix(fix(r393:SF))
    Inserting insn reload after:
 2379: r796:SI=r1210:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2379:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1254:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1257:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1265:  (0) r  (1) I {*arm_cmpsi_insn}
Changing pseudo 983 in operand 1 of insn 1312 on equiv `t_wall'
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
	 Choosing alt 1 in insn 1312:  (0) l  (1) l  (2) l {*arm_addsi3}
      Creating newreg=1211, assigning class LO_REGS to r1211
 1312: r821:SI=r1211:SI+r801:SI
      REG_EQUAL r801:SI+`t_wall'
    Inserting insn reload before:
 2380: r1211:SI=`t_wall'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2380:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1268:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 982 in operand 1 of insn 1284 on equiv `*.LANCHOR1'
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
	 Choosing alt 1 in insn 1284:  (0) l  (1) l  (2) l {*arm_addsi3}
      Creating newreg=1212, assigning class LO_REGS to r1212
 1284: r807:SI=r1212:SI+r801:SI
      REG_EQUAL r801:SI+`*.LANCHOR1'
    Inserting insn reload before:
 2381: r1212:SI=`*.LANCHOR1'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2381:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing address in insn 1277 r982:SI+r801:SI -- no change
Changing pseudo 982 in address of insn 1277 on equiv `*.LANCHOR1'
      Creating newreg=1213, assigning class CORE_REGS to address r1213
	   Change to class GENERAL_REGS for r1213
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1277:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1214 from oldreg=803, assigning class GENERAL_REGS to r1214
 1277: r1214:SI=zero_extend([r1213:SI+r801:SI])
      REG_DEAD r801:SI
      REG_EQUAL zero_extend([r801:SI+`*.LANCHOR1'])
    Inserting insn reload before:
 2382: r1213:SI=`*.LANCHOR1'
    Inserting insn reload after:
 2383: r803:SI=r1214:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2383:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2382:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1213
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1278:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1285:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1215 from oldreg=808, assigning class GENERAL_REGS to r1215
 1285: r1215:SI=zero_extend([r807:SI+0x1])
    Inserting insn reload after:
 2384: r808:SI=r1215:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2384:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1293:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1216 from oldreg=813, assigning class GENERAL_REGS to r1216
 1293: r1216:SI=zero_extend([r807:SI+0x2])
      REG_DEAD r807:SI
    Inserting insn reload after:
 2385: r813:SI=r1216:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2385:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1279:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1287:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1280:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1217 from oldreg=350, assigning class VFP_LO_REGS to r1217
 1280: r1217:SI=fix(fix(r805:SF))
      REG_DEAD r805:SF
    Inserting insn reload after:
 2386: r350:SI=r1217:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2386:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1288:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1218 from oldreg=352, assigning class VFP_LO_REGS to r1218
 1288: r1218:SI=fix(fix(r810:SF))
      REG_DEAD r810:SF
    Inserting insn reload after:
 2387: r352:SI=r1218:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2387:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1296:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1219 from oldreg=351, assigning class VFP_LO_REGS to r1219
 1296: r1219:SI=fix(fix(r815:SF))
      REG_DEAD r815:SF
    Inserting insn reload after:
 2388: r351:SI=r1219:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2388:  (0) r  (1) *t {*thumb2_movsi_vfp}
Changing address in insn 1305 r983:SI+r801:SI -- no change
Changing pseudo 983 in address of insn 1305 on equiv `t_wall'
      Creating newreg=1220, assigning class CORE_REGS to address r1220
	   Change to class GENERAL_REGS for r1220
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1305:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1221 from oldreg=817, assigning class GENERAL_REGS to r1221
 1305: r1221:SI=zero_extend([r1220:SI+r801:SI])
      REG_DEAD r801:SI
      REG_EQUAL zero_extend([r801:SI+`t_wall'])
    Inserting insn reload before:
 2389: r1220:SI=`t_wall'
    Inserting insn reload after:
 2390: r817:SI=r1221:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2390:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2389:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1220
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1313:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1222 from oldreg=822, assigning class GENERAL_REGS to r1222
 1313: r1222:SI=zero_extend([r821:SI+0x1])
    Inserting insn reload after:
 2391: r822:SI=r1222:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2391:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1321:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1223 from oldreg=827, assigning class GENERAL_REGS to r1223
 1321: r1223:SI=zero_extend([r821:SI+0x2])
      REG_DEAD r821:SI
    Inserting insn reload after:
 2392: r827:SI=r1223:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2392:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1314:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1322:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1307:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1323:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1308:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1224 from oldreg=350, assigning class VFP_LO_REGS to r1224
 1308: r1224:SI=fix(fix(r819:SF))
      REG_DEAD r819:SF
    Inserting insn reload after:
 2393: r350:SI=r1224:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2393:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1316:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1225 from oldreg=352, assigning class VFP_LO_REGS to r1225
 1316: r1225:SI=fix(fix(r824:SF))
      REG_DEAD r824:SF
    Inserting insn reload after:
 2394: r352:SI=r1225:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2394:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1324:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1226 from oldreg=351, assigning class VFP_LO_REGS to r1226
 1324: r1226:SI=fix(fix(r829:SF))
      REG_DEAD r829:SF
    Inserting insn reload after:
 2395: r351:SI=r1226:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2395:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1335:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1364:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1337:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1227 from oldreg=0, assigning class VFP_LO_REGS to r1227
 1337: r1227:SI=fix(fix(r830:SF))
      REG_DEAD r830:SF
    Inserting insn reload after:
 2396: r0:SI=r1227:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2396:  (0) r  (1) *t {*thumb2_movsi_vfp}
Changing pseudo 984 in operand 1 of insn 1999 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1999:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1352:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1368:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1228 from oldreg=1090, assigning class VFP_LO_REGS to r1228
 1368: r279:SF=float(r1228:SI)
    Inserting insn reload before:
 2397: r1228:SI=r1090:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2397:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1361:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2196:  (0) t  (1) t {*cmpsf_trap_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2255:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1379:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 990 in operand 1 of insn 2014 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2014:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1389:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1397:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 990 in operand 1 of insn 2012 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2012:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) l {*thumb2_cbz}
Changing pseudo 990 in operand 1 of insn 2013 on equiv 6.28317999999999976523668010486289858818054199219e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2013:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1418:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1429:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1439:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 992 in operand 1 of insn 2015 on equiv 1.84751999999999998181010596454143524169921875e+3
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2015:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1451:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing pseudo 992 in operand 1 of insn 2016 on equiv 1.84751999999999998181010596454143524169921875e+3
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2016:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1464:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing address in insn 1469 r971:SI -- no change
Changing pseudo 971 in address of insn 1469 on equiv `px'
      Creating newreg=1229, assigning class CORE_REGS to address r1229
	   Change to class GENERAL_REGS for r1229
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1469:  (0) r  (1) mHa {*thumb2_movsf_vfp}
 1469: r0:SF=[r1229:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 2398: r1229:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2398:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1229
Changing pseudo 993 in operand 1 of insn 2017 on equiv 3.33333333333333348136306995002087205648422241211e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2017:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1478:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing address in insn 1483 r972:SI -- no change
Changing pseudo 972 in address of insn 1483 on equiv `py'
      Creating newreg=1230, assigning class CORE_REGS to address r1230
	   Change to class GENERAL_REGS for r1230
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1483:  (0) r  (1) mHa {*thumb2_movsf_vfp}
 1483: r0:SF=[r1230:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 2399: r1230:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2399:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r1230
Changing pseudo 993 in operand 1 of insn 2018 on equiv 3.33333333333333348136306995002087205648422241211e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2018:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1492:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1502:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1506:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1507:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=2,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1517:  (0) =l  (1) l  (2) lPt {thumb2_addsi3_compare0}
      Creating newreg=1231 from oldreg=463, assigning class LO_REGS to r1231
      Creating newreg=1232 from oldreg=463, assigning class LO_REGS to r1232
 1517: {cc:CC_NZ=cmp(r1232:SI-0x1,0);r1231:SI=r1232:SI-0x1;}
    Inserting insn reload before:
 2401: r1232:SI=r463:SI
    Inserting insn reload after:
 2400: r463:SI=r1231:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2400:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2401:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1536:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1946:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1947:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 1603 (freq=97)
 1603: r981:DF=2.39999999999999991118215802998747676610946655273e+0
      REG_EQUIV 2.39999999999999991118215802998747676610946655273e+0
deleting insn with uid = 1603.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1944:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1945:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1535:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1233 from oldreg=1084, assigning class VFP_LO_REGS to r1233
 1535: r858:SF=float(r1233:SI)
    Inserting insn reload before:
 2402: r1233:SI=r1084:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2402:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1994:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1537:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1538:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1543:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1548:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1544:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1549:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1545:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1234 from oldreg=863, assigning class VFP_LO_REGS to r1234
 1545: r1234:SI=fix(fix(r862:SF))
      REG_DEAD r862:SF
    Inserting insn reload after:
 2403: r863:SI=r1234:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2403:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1546:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1550:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1235 from oldreg=868, assigning class VFP_LO_REGS to r1235
 1550: r1235:SI=fix(fix(r867:SF))
      REG_DEAD r867:SF
    Inserting insn reload after:
 2404: r868:SI=r1235:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2404:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1551:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1552:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1555:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1569:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1572:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1585:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1236 from oldreg=880, assigning class GENERAL_REGS to r1236
 1585: r1236:SI=zero_extend([r1085:SI+r309:SI])
      REG_EQUAL zero_extend([r309:SI+`t_floor'])
    Inserting insn reload after:
 2405: r880:SI=r1236:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2405:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1586:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1587:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1580:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1237 from oldreg=875, assigning class GENERAL_REGS to r1237
 1580: r1237:SI=zero_extend([r1085:SI+r314:SI])
      REG_EQUAL zero_extend([r314:SI+`t_floor'])
    Inserting insn reload after:
 2406: r875:SI=r1237:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2406:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1581:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1582:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1590:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1238 from oldreg=885, assigning class GENERAL_REGS to r1238
 1590: r1238:SI=zero_extend([r1085:SI+r873:SI])
      REG_EQUAL zero_extend([r873:SI+`t_floor'])
    Inserting insn reload after:
 2407: r885:SI=r1238:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2407:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1591:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1592:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1594:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1239 from oldreg=2, assigning class VFP_LO_REGS to r1239
 1594: r1239:SI=fix(fix(r877:SF))
      REG_DEAD r877:SF
    Inserting insn reload after:
 2408: r2:SI=r1239:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2408:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1595:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1240 from oldreg=1, assigning class VFP_LO_REGS to r1240
 1595: r1240:SI=fix(fix(r882:SF))
      REG_DEAD r882:SF
    Inserting insn reload after:
 2409: r1:SI=r1240:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2409:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1596:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1241 from oldreg=0, assigning class VFP_LO_REGS to r1241
 1596: r1241:SI=fix(fix(r887:SF))
      REG_DEAD r887:SF
    Inserting insn reload after:
 2410: r0:SI=r1241:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2410:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1599:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
Changing pseudo 981 in operand 1 of insn 1995 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1995:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1626:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1242 from oldreg=894, assigning class GENERAL_REGS to r1242
 1626: r1242:SI=zero_extend([r1086:SI+r314:SI])
      REG_DEAD r314:SI
      REG_EQUAL zero_extend([r314:SI+`t_wall'])
    Inserting insn reload after:
 2411: r894:SI=r1242:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2411:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1627:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1631:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1243 from oldreg=899, assigning class GENERAL_REGS to r1243
 1631: r1243:SI=zero_extend([r1086:SI+r309:SI])
      REG_DEAD r309:SI
      REG_EQUAL zero_extend([r309:SI+`t_wall'])
    Inserting insn reload after:
 2412: r899:SI=r1243:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2412:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1632:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1636:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1244 from oldreg=904, assigning class GENERAL_REGS to r1244
 1636: r1244:SI=zero_extend([r1086:SI+r873:SI])
      REG_DEAD r873:SI
      REG_EQUAL zero_extend([r873:SI+`t_wall'])
    Inserting insn reload after:
 2413: r904:SI=r1244:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2413:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1637:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1628:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1633:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1638:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1640:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1245 from oldreg=2, assigning class VFP_LO_REGS to r1245
 1640: r1245:SI=fix(fix(r896:SF))
      REG_DEAD r896:SF
    Inserting insn reload after:
 2414: r2:SI=r1245:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2414:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1641:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1246 from oldreg=1, assigning class VFP_LO_REGS to r1246
 1641: r1246:SI=fix(fix(r901:SF))
      REG_DEAD r901:SF
    Inserting insn reload after:
 2415: r1:SI=r1246:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2415:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1642:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1247 from oldreg=0, assigning class VFP_LO_REGS to r1247
 1642: r1247:SI=fix(fix(r906:SF))
      REG_DEAD r906:SF
    Inserting insn reload after:
 2416: r0:SI=r1247:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2416:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1645:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1647:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 1662:  (0) l  (1) 0  (2) Py {*arm_addsi3}
Changing pseudo 981 in operand 1 of insn 1996 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1996:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1666:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1678:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 1736 (freq=97)
 1736: r979:DF=2.39999999999999991118215802998747676610946655273e+0
      REG_EQUIV 2.39999999999999991118215802998747676610946655273e+0
deleting insn with uid = 1736.
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1677:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=1248 from oldreg=1080, assigning class VFP_LO_REGS to r1248
 1677: r913:SF=float(r1248:SI)
    Inserting insn reload before:
 2417: r1248:SI=r1080:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2417:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1679:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1680:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1685:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1690:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1686:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1691:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1687:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1249 from oldreg=918, assigning class VFP_LO_REGS to r1249
 1687: r1249:SI=fix(fix(r917:SF))
      REG_DEAD r917:SF
    Inserting insn reload after:
 2418: r918:SI=r1249:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2418:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1688:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1692:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1250 from oldreg=923, assigning class VFP_LO_REGS to r1250
 1692: r1250:SI=fix(fix(r922:SF))
      REG_DEAD r922:SF
    Inserting insn reload after:
 2419: r923:SI=r1250:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2419:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 1693:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1694:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1697:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1705:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1708:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1720:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1251 from oldreg=934, assigning class GENERAL_REGS to r1251
 1720: r1251:SI=zero_extend([r1081:SI+r457:SI])
      REG_EQUAL zero_extend([r457:SI+`t_floor'])
    Inserting insn reload after:
 2420: r934:SI=r1251:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2420:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1721:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1716:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1252 from oldreg=930, assigning class GENERAL_REGS to r1252
 1716: r1252:SI=zero_extend([r1081:SI+r452:SI])
      REG_EQUAL zero_extend([r452:SI+`t_floor'])
    Inserting insn reload after:
 2421: r930:SI=r1252:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2421:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1717:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1724:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1253 from oldreg=938, assigning class GENERAL_REGS to r1253
 1724: r1253:SI=zero_extend([r1081:SI+r928:SI])
      REG_EQUAL zero_extend([r928:SI+`t_floor'])
    Inserting insn reload after:
 2422: r938:SI=r1253:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2422:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1725:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1727:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1254 from oldreg=2, assigning class VFP_LO_REGS to r1254
 1727: r1254:SI=fix(fix(r931:SF))
      REG_DEAD r931:SF
    Inserting insn reload after:
 2423: r2:SI=r1254:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2423:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1728:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1255 from oldreg=1, assigning class VFP_LO_REGS to r1255
 1728: r1255:SI=fix(fix(r935:SF))
      REG_DEAD r935:SF
    Inserting insn reload after:
 2424: r1:SI=r1255:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2424:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1729:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1256 from oldreg=0, assigning class VFP_LO_REGS to r1256
 1729: r1256:SI=fix(fix(r939:SF))
      REG_DEAD r939:SF
    Inserting insn reload after:
 2425: r0:SI=r1256:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2425:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1732:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
Changing pseudo 979 in operand 1 of insn 1992 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1992:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1759:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1257 from oldreg=946, assigning class GENERAL_REGS to r1257
 1759: r1257:SI=zero_extend([r1082:SI+r452:SI])
      REG_DEAD r452:SI
      REG_EQUAL zero_extend([r452:SI+`t_wall'])
    Inserting insn reload after:
 2426: r946:SI=r1257:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2426:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1760:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1763:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1258 from oldreg=950, assigning class GENERAL_REGS to r1258
 1763: r1258:SI=zero_extend([r1082:SI+r457:SI])
      REG_DEAD r457:SI
      REG_EQUAL zero_extend([r457:SI+`t_wall'])
    Inserting insn reload after:
 2427: r950:SI=r1258:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2427:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1764:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1767:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=1259 from oldreg=954, assigning class GENERAL_REGS to r1259
 1767: r1259:SI=zero_extend([r1082:SI+r928:SI])
      REG_DEAD r928:SI
      REG_EQUAL zero_extend([r928:SI+`t_wall'])
    Inserting insn reload after:
 2428: r954:SI=r1259:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2428:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1768:  (0) =t  (1) t {*floatsisf2_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1770:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1260 from oldreg=2, assigning class VFP_LO_REGS to r1260
 1770: r1260:SI=fix(fix(r947:SF))
      REG_DEAD r947:SF
    Inserting insn reload after:
 2429: r2:SI=r1260:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2429:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1771:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1261 from oldreg=1, assigning class VFP_LO_REGS to r1261
 1771: r1261:SI=fix(fix(r951:SF))
      REG_DEAD r951:SF
    Inserting insn reload after:
 2430: r1:SI=r1261:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2430:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1772:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=1262 from oldreg=0, assigning class VFP_LO_REGS to r1262
 1772: r1262:SI=fix(fix(r955:SF))
      REG_DEAD r955:SF
    Inserting insn reload after:
 2431: r0:SI=r1262:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2431:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1775:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1777:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 1792:  (0) l  (1) 0  (2) Py {*arm_addsi3}
Changing pseudo 979 in operand 1 of insn 1993 on equiv 2.39999999999999991118215802998747676610946655273e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1993:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1796:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1806:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 989 in operand 1 of insn 2019 on equiv 1.74532899999999997764366099772814777679741382599e-2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2019:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1816:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
      Creating newreg=1263 from oldreg=970, assigning class CORE_REGS to address r1263
	   Change to class GENERAL_REGS for r1263
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1805:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
 1805: r1078:SI=[r1263:SI]
      REG_EQUAL [`Blocksize']
    Inserting insn reload before:
 2432: r1263:SI=r970:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 2432:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r1263 for output r1263:SI, change to class LO_REGS for r1263
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1826:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1827:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1264 from oldreg=967, assigning class LO_REGS to inheritance r1264
    Original reg change 967->1264 (bb5):
 2276: r1115:SI=r1264:SI
    Add inheritance<-original before:
 2433: r1264:SI=r967:SI

    Inheritance reuse change 967->1264 (bb5):
 2277: r1116:SI=r1264:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1265 from oldreg=967, assigning class LO_REGS to inheritance r1265
    Original reg change 967->1265 (bb5):
 2275: r1265:SI=r1114:SI
    Add original<-inheritance after:
 2434: r967:SI=r1265:SI

    Inheritance reuse change 967->1265 (bb5):
 2433: r1264:SI=r1265:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 6 7
EBB 8
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1266 from oldreg=967, assigning class LO_REGS to inheritance r1266
    Original reg change 967->1266 (bb8):
 2279: r1118:SI=r1266:SI
    Add inheritance<-original before:
 2435: r1266:SI=r967:SI

    Inheritance reuse change 967->1266 (bb8):
 2280: r1119:SI=r1266:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 9 10
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1267 from oldreg=967, assigning class LO_REGS to inheritance r1267
    Original reg change 967->1267 (bb11):
 2283: r1122:SI=r1267:SI
    Add inheritance<-original before:
 2436: r1267:SI=r967:SI

    Inheritance reuse change 967->1267 (bb11):
 2284: r1123:SI=r1267:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1268 from oldreg=967, assigning class LO_REGS to inheritance r1268
    Original reg change 967->1268 (bb11):
 2282: r1268:SI=r1121:SI
    Add original<-inheritance after:
 2437: r967:SI=r1268:SI

    Inheritance reuse change 967->1268 (bb11):
 2436: r1267:SI=r1268:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 12 13
EBB 14
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1269 from oldreg=967, assigning class LO_REGS to inheritance r1269
    Original reg change 967->1269 (bb14):
 2286: r1125:SI=r1269:SI
    Add inheritance<-original before:
 2438: r1269:SI=r967:SI

    Inheritance reuse change 967->1269 (bb14):
 2287: r1126:SI=r1269:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 15 16
EBB 17 18
EBB 19 20
EBB 21
EBB 22
EBB 23 24 25
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=1270 from oldreg=1133, assigning class LO_REGS to invariant inheritance r1270
 2294: r1133:SI=`px'
    Add invariant inheritance<-original after:
 2439: r1270:SI=r1133:SI

 2295: r1134:SI=`px'
    Changing reload<-inheritance after:
 2440: r1134:SI=r1270:SI

deleting insn with uid = 2295.
    Invariant inheritance reuse change 1270 (bb25):
 2295: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1271 from oldreg=356, assigning class LO_REGS to inheritance r1271
    Original reg change 356->1271 (bb24):
 2291: r1130:SI=r1271:SI
    Add inheritance<-original before:
 2441: r1271:SI=r356:SI

    Inheritance reuse change 356->1271 (bb24):
 2292: r1131:SI=r1271:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 26 27
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=1272 from oldreg=1139, assigning class LO_REGS to invariant inheritance r1272
 2300: r1139:SI=`py'
    Add invariant inheritance<-original after:
 2442: r1272:SI=r1139:SI

 2301: r1140:SI=`py'
    Changing reload<-inheritance after:
 2443: r1140:SI=r1272:SI

deleting insn with uid = 2301.
    Invariant inheritance reuse change 1272 (bb27):
 2301: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1273 from oldreg=355, assigning class LO_REGS to inheritance r1273
    Original reg change 355->1273 (bb26):
 2297: r1136:SI=r1273:SI
    Add inheritance<-original before:
 2444: r1273:SI=r355:SI

    Inheritance reuse change 355->1273 (bb26):
 2298: r1137:SI=r1273:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 28 29
EBB 30 31
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1274 from oldreg=356, assigning class LO_REGS to inheritance r1274
    Original reg change 356->1274 (bb30):
 2306: r1145:SI=r1274:SI
    Add inheritance<-original before:
 2445: r1274:SI=r356:SI

    Inheritance reuse change 356->1274 (bb30):
 2307: r1146:SI=r1274:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 32
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=1275 from oldreg=1150, assigning class LO_REGS to invariant inheritance r1275
 2311: r1150:SI=`px'
    Add invariant inheritance<-original after:
 2446: r1275:SI=r1150:SI

 2312: r1151:SI=`px'
    Changing reload<-inheritance after:
 2447: r1151:SI=r1275:SI

deleting insn with uid = 2312.
    Invariant inheritance reuse change 1275 (bb32):
 2312: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 33 34
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1276 from oldreg=355, assigning class LO_REGS to inheritance r1276
    Original reg change 355->1276 (bb33):
 2314: r1153:SI=r1276:SI
    Add inheritance<-original before:
 2448: r1276:SI=r355:SI

    Inheritance reuse change 355->1276 (bb33):
 2315: r1154:SI=r1276:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 35
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=1277 from oldreg=1156, assigning class LO_REGS to invariant inheritance r1277
 2317: r1156:SI=`py'
    Add invariant inheritance<-original after:
 2449: r1277:SI=r1156:SI

 2318: r1157:SI=`py'
    Changing reload<-inheritance after:
 2450: r1157:SI=r1277:SI

deleting insn with uid = 2318.
    Invariant inheritance reuse change 1277 (bb35):
 2318: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 36 37
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1278 from oldreg=970, assigning class LO_REGS to inheritance r1278
    Original reg change 970->1278 (bb37):
 2319: r1278:SI=r1158:SI
    Add original<-inheritance after:
 2451: r970:SI=r1278:SI

    Inheritance reuse change 970->1278 (bb37):
 2320: r1159:SI=r1278:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 38
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1279 from oldreg=970, assigning class LO_REGS to inheritance r1279
    Original reg change 970->1279 (bb38):
 2321: r1279:SI=r1160:SI
    Add original<-inheritance after:
 2452: r970:SI=r1279:SI

    Inheritance reuse change 970->1279 (bb38):
 2322: r1161:SI=r1279:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 39
EBB 40
EBB 41 42
EBB 43 44
EBB 45 46
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1280 from oldreg=356, assigning class LO_REGS to inheritance r1280
    Original reg change 356->1280 (bb46):
 2330: r1169:SI=r1280:SI
    Add inheritance<-original before:
 2453: r1280:SI=r356:SI

    Inheritance reuse change 356->1280 (bb46):
 2331: r1170:SI=r1280:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1281 from oldreg=356, assigning class LO_REGS to inheritance r1281
    Original reg change 356->1281 (bb46):
 2329: r1168:SI=r1281:SI
    Add inheritance<-original before:
 2454: r1281:SI=r356:SI

    Inheritance reuse change 356->1281 (bb46):
 2453: r1280:SI=r1281:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 47
EBB 48 49 50 51
EBB 52
EBB 53
EBB 54
EBB 55 56
EBB 57
EBB 58
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1282 from oldreg=355, assigning class LO_REGS to inheritance r1282
    Original reg change 355->1282 (bb58):
 2355: r1190:SI=r1282:SI
    Add inheritance<-original before:
 2455: r1282:SI=r355:SI

    Inheritance reuse change 355->1282 (bb58):
 2356: r1191:SI=r1282:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=1283 from oldreg=355, assigning class LO_REGS to inheritance r1283
    Original reg change 355->1283 (bb58):
 2354: r1189:SI=r1283:SI
    Add inheritance<-original before:
 2456: r1283:SI=r355:SI

    Inheritance reuse change 355->1283 (bb58):
 2455: r1282:SI=r1283:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 59 60 61 62
EBB 63
EBB 64
EBB 65
EBB 66 67
EBB 68
EBB 69 70
EBB 71
EBB 72 73 74
EBB 75 76 77
EBB 78
EBB 79 80
EBB 81
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 429 because of disjoint classes VFP_LO_REGS and GENERAL_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 82 83 84
EBB 85
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=1284 from oldreg=1212, assigning class LO_REGS to invariant inheritance r1284
 2381: r1212:SI=`*.LANCHOR1'
    Add invariant inheritance<-original after:
 2457: r1284:SI=r1212:SI

 2382: r1213:SI=`*.LANCHOR1'
    Changing reload<-inheritance after:
 2458: r1213:SI=r1284:SI

deleting insn with uid = 2382.
    Invariant inheritance reuse change 1284 (bb85):
 2382: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 86
EBB 87
	  ((((((((((((((((((((((((((((((((((((((((((((((((
      Creating newreg=1285, assigning class NO_REGS to save r1285
 1356: r2:SI=r834:SI
      REG_DEAD r834:SI
    Add reg<-save before:
 2460: r834:SI=r1285:SI

 1352: r834:SI=zero_extend(r1047:SI#0)
      REG_DEAD r1047:SI
    Add save<-reg after:
 2459: r1285:SI=r834:SI

	  ))))))))))))))))))))))))))))))))))))))))))))))))
EBB 88
EBB 89
EBB 90 91
EBB 92
EBB 93
EBB 94
EBB 95 96
EBB 97
EBB 98
EBB 104
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103

********** Pseudo live ranges #1: **********

  BB 103
   Insn 1827: point = 0, n_alt = 1
   Insn 1826: point = 0, n_alt = 5
  BB 94
   Insn 2185: point = 0, n_alt = -1
  BB 93
   Insn 1518: point = 0, n_alt = -1
   Insn 2400: point = 0, n_alt = 7
   Insn 1517: point = 2, n_alt = 0
   Insn 2401: point = 4, n_alt = 5
   Insn 1507: point = 6, n_alt = 0
   Insn 1506: point = 8, n_alt = 2
  BB 101
   Insn 2192: point = 10, n_alt = -1
  BB 100
   Insn 1797: point = 11, n_alt = -1
   Insn 1796: point = 11, n_alt = 0
   Insn 1790: point = 11, n_alt = -1
   Insn 1789: point = 11, n_alt = -2
   Insn 1788: point = 11, n_alt = -2
   Insn 1787: point = 12, n_alt = -2
   Insn 2107: point = 13, n_alt = -2
   Insn 1785: point = 14, n_alt = -1
   Insn 1782: point = 14, n_alt = -1
   Insn 1993: point = 14, n_alt = 6
   Insn 1778: point = 14, n_alt = -1
   Insn 1792: point = 14, n_alt = 2
   Insn 1777: point = 15, n_alt = 4
   Insn 1775: point = 15, n_alt = 0
   Insn 2106: point = 17, n_alt = -2
   Insn 1773: point = 18, n_alt = -1
   Insn 2431: point = 18, n_alt = 10
	Hard reg 0 is preferable by r1262 with profit 890
   Insn 1772: point = 19, n_alt = 0
   Insn 2430: point = 21, n_alt = 10
	Hard reg 1 is preferable by r1261 with profit 890
   Insn 1771: point = 22, n_alt = 0
   Insn 2429: point = 24, n_alt = 10
	Hard reg 2 is preferable by r1260 with profit 890
   Insn 1770: point = 25, n_alt = 0
   Insn 1768: point = 27, n_alt = 0
   Insn 2428: point = 29, n_alt = 9
	Hard reg 31 is preferable by r1259 with profit 890
   Insn 1767: point = 31, n_alt = 1
   Insn 1764: point = 33, n_alt = 0
   Insn 2427: point = 35, n_alt = 9
	Hard reg 30 is preferable by r1258 with profit 890
   Insn 1763: point = 37, n_alt = 1
   Insn 1760: point = 39, n_alt = 0
   Insn 2426: point = 41, n_alt = 9
	Hard reg 29 is preferable by r1257 with profit 890
   Insn 1759: point = 43, n_alt = 1
   Insn 1746: point = 45, n_alt = -1
   Insn 1745: point = 45, n_alt = -2
   Insn 1744: point = 45, n_alt = -2
   Insn 1743: point = 46, n_alt = -2
   Insn 2105: point = 47, n_alt = -2
   Insn 1741: point = 48, n_alt = -1
   Insn 1738: point = 48, n_alt = -1
   Insn 1992: point = 48, n_alt = 6
   Insn 1734: point = 48, n_alt = -1
   Insn 1733: point = 48, n_alt = -2
   Insn 1732: point = 48, n_alt = 0
   Insn 2104: point = 50, n_alt = -2
   Insn 1730: point = 51, n_alt = -1
   Insn 2425: point = 51, n_alt = 10
	Hard reg 0 is preferable by r1256 with profit 890
   Insn 1729: point = 52, n_alt = 0
   Insn 2424: point = 54, n_alt = 10
	Hard reg 1 is preferable by r1255 with profit 890
   Insn 1728: point = 55, n_alt = 0
   Insn 2423: point = 57, n_alt = 10
	Hard reg 2 is preferable by r1254 with profit 890
   Insn 1727: point = 58, n_alt = 0
   Insn 1725: point = 60, n_alt = 0
   Insn 2422: point = 62, n_alt = 9
	Hard reg 31 is preferable by r1253 with profit 890
   Insn 1724: point = 64, n_alt = 1
   Insn 1717: point = 65, n_alt = 0
   Insn 2421: point = 67, n_alt = 9
	Hard reg 29 is preferable by r1252 with profit 890
   Insn 1716: point = 69, n_alt = 1
   Insn 1721: point = 70, n_alt = 0
   Insn 2420: point = 72, n_alt = 9
	Hard reg 30 is preferable by r1251 with profit 890
   Insn 1720: point = 74, n_alt = 1
   Insn 1708: point = 75, n_alt = 4
   Insn 1705: point = 76, n_alt = 4
   Insn 1697: point = 77, n_alt = 1
   Insn 1694: point = 79, n_alt = 1
   Insn 1693: point = 81, n_alt = 0
   Insn 2419: point = 83, n_alt = 10
	Hard reg 4 is preferable by r1250 with profit 890
   Insn 1692: point = 85, n_alt = 0
   Insn 1688: point = 87, n_alt = 0
   Insn 2418: point = 89, n_alt = 10
	Hard reg 4 is preferable by r1249 with profit 890
   Insn 1687: point = 91, n_alt = 0
   Insn 1691: point = 93, n_alt = 0
   Insn 1686: point = 95, n_alt = 0
   Insn 1690: point = 97, n_alt = 0
   Insn 1685: point = 98, n_alt = 0
   Insn 1680: point = 99, n_alt = 0
   Insn 1679: point = 101, n_alt = 0
   Insn 1677: point = 103, n_alt = 0
   Insn 2417: point = 105, n_alt = 9
	Hard reg 5 is preferable by r1248 with profit 890
  BB 99
   Insn 2267: point = 107, n_alt = -2
   Insn 2266: point = 109, n_alt = -2
   Insn 2265: point = 111, n_alt = -2
   Insn 2264: point = 113, n_alt = -2
   Insn 1678: point = 115, n_alt = 3
  r979 is added to live at bb99 start
  BB 97
   Insn 2189: point = 117, n_alt = -1
   Insn 1945: point = 117, n_alt = 5
   Insn 1944: point = 118, n_alt = 5
  BB 104
   Insn 2263: point = 120, n_alt = -2
   Insn 2262: point = 122, n_alt = -2
   Insn 2261: point = 124, n_alt = -2
   Insn 2260: point = 126, n_alt = -2
  BB 98
   Insn 1667: point = 129, n_alt = -1
   Insn 1666: point = 129, n_alt = 0
   Insn 1660: point = 129, n_alt = -1
   Insn 1659: point = 129, n_alt = -2
   Insn 1658: point = 129, n_alt = -2
   Insn 1657: point = 130, n_alt = -2
   Insn 2103: point = 131, n_alt = -2
   Insn 1655: point = 132, n_alt = -1
   Insn 1652: point = 132, n_alt = -1
   Insn 1996: point = 132, n_alt = 6
   Insn 1648: point = 132, n_alt = -1
   Insn 1662: point = 132, n_alt = 2
   Insn 1647: point = 133, n_alt = 4
   Insn 1645: point = 133, n_alt = 0
   Insn 2102: point = 135, n_alt = -2
   Insn 1643: point = 136, n_alt = -1
   Insn 2416: point = 136, n_alt = 10
	Hard reg 0 is preferable by r1247 with profit 890
   Insn 1642: point = 137, n_alt = 0
   Insn 2415: point = 139, n_alt = 10
	Hard reg 1 is preferable by r1246 with profit 890
   Insn 1641: point = 140, n_alt = 0
   Insn 2414: point = 142, n_alt = 10
	Hard reg 2 is preferable by r1245 with profit 890
   Insn 1640: point = 143, n_alt = 0
   Insn 1638: point = 145, n_alt = 0
   Insn 1633: point = 147, n_alt = 0
   Insn 1628: point = 149, n_alt = 0
   Insn 1637: point = 151, n_alt = 0
   Insn 2413: point = 153, n_alt = 9
	Hard reg 16 is preferable by r1244 with profit 890
   Insn 1636: point = 155, n_alt = 1
   Insn 1632: point = 157, n_alt = 0
   Insn 2412: point = 159, n_alt = 9
	Hard reg 31 is preferable by r1243 with profit 890
   Insn 1631: point = 161, n_alt = 1
   Insn 1627: point = 163, n_alt = 0
   Insn 2411: point = 165, n_alt = 9
	Hard reg 30 is preferable by r1242 with profit 890
   Insn 1626: point = 167, n_alt = 1
   Insn 1613: point = 169, n_alt = -1
   Insn 1612: point = 169, n_alt = -2
   Insn 1611: point = 169, n_alt = -2
   Insn 1610: point = 170, n_alt = -2
   Insn 2101: point = 171, n_alt = -2
   Insn 1608: point = 172, n_alt = -1
   Insn 1605: point = 172, n_alt = -1
   Insn 1995: point = 172, n_alt = 6
   Insn 1601: point = 172, n_alt = -1
   Insn 1600: point = 172, n_alt = -2
   Insn 1599: point = 172, n_alt = 0
   Insn 2100: point = 174, n_alt = -2
   Insn 1597: point = 175, n_alt = -1
   Insn 2410: point = 175, n_alt = 10
	Hard reg 0 is preferable by r1241 with profit 890
   Insn 1596: point = 176, n_alt = 0
   Insn 2409: point = 178, n_alt = 10
	Hard reg 1 is preferable by r1240 with profit 890
   Insn 1595: point = 179, n_alt = 0
   Insn 2408: point = 181, n_alt = 10
	Hard reg 2 is preferable by r1239 with profit 890
   Insn 1594: point = 182, n_alt = 0
   Insn 1592: point = 184, n_alt = 0
   Insn 1591: point = 186, n_alt = 0
   Insn 2407: point = 188, n_alt = 9
	Hard reg 31 is preferable by r1238 with profit 890
   Insn 1590: point = 190, n_alt = 1
   Insn 1582: point = 191, n_alt = 0
   Insn 1581: point = 193, n_alt = 0
   Insn 2406: point = 195, n_alt = 9
	Hard reg 29 is preferable by r1237 with profit 890
   Insn 1580: point = 197, n_alt = 1
   Insn 1587: point = 198, n_alt = 0
   Insn 1586: point = 200, n_alt = 0
   Insn 2405: point = 202, n_alt = 9
	Hard reg 30 is preferable by r1236 with profit 890
   Insn 1585: point = 204, n_alt = 1
   Insn 1572: point = 205, n_alt = 4
   Insn 1569: point = 206, n_alt = 4
   Insn 1564: point = 207, n_alt = -2
   Insn 2099: point = 209, n_alt = -2
   Insn 1563: point = 210, n_alt = -1
   Insn 1555: point = 210, n_alt = 1
   Insn 1552: point = 212, n_alt = 1
   Insn 1551: point = 214, n_alt = 0
   Insn 2404: point = 216, n_alt = 10
	Hard reg 4 is preferable by r1235 with profit 890
   Insn 1550: point = 218, n_alt = 0
   Insn 1546: point = 220, n_alt = 0
   Insn 2403: point = 222, n_alt = 10
	Hard reg 4 is preferable by r1234 with profit 890
   Insn 1545: point = 224, n_alt = 0
   Insn 1549: point = 226, n_alt = 0
   Insn 1544: point = 228, n_alt = 0
   Insn 1548: point = 230, n_alt = 0
   Insn 1543: point = 231, n_alt = 0
   Insn 1538: point = 232, n_alt = 0
   Insn 1537: point = 234, n_alt = 0
   Insn 1994: point = 236, n_alt = 2
   Insn 1535: point = 236, n_alt = 0
   Insn 2402: point = 238, n_alt = 9
	Hard reg 5 is preferable by r1233 with profit 890
  BB 96
   Insn 2187: point = 240, n_alt = -1
   Insn 2259: point = 240, n_alt = -2
   Insn 2258: point = 242, n_alt = -2
   Insn 2257: point = 244, n_alt = -2
   Insn 2256: point = 246, n_alt = -2
   Insn 1947: point = 248, n_alt = 5
   Insn 1946: point = 249, n_alt = 5
   Insn 1536: point = 250, n_alt = 3
  r981 is added to live at bb96 start
  BB 95
   Insn 1527: point = 252, n_alt = -1
   Insn 1526: point = 252, n_alt = 0
  BB 92
   Insn 1503: point = 253, n_alt = -1
   Insn 1502: point = 253, n_alt = 0
   Insn 1492: point = 253, n_alt = 0
   Insn 2098: point = 255, n_alt = -2
   Insn 1491: point = 256, n_alt = -1
   Insn 1488: point = 256, n_alt = -1
   Insn 2018: point = 256, n_alt = 6
   Insn 1484: point = 256, n_alt = -1
   Insn 1483: point = 256, n_alt = 5
   Insn 2399: point = 257, n_alt = 5
   Insn 1478: point = 258, n_alt = 0
   Insn 2097: point = 260, n_alt = -2
   Insn 1477: point = 261, n_alt = -1
   Insn 1474: point = 261, n_alt = -1
   Insn 2017: point = 261, n_alt = 6
   Insn 1470: point = 261, n_alt = -1
   Insn 1469: point = 261, n_alt = 5
   Insn 2398: point = 262, n_alt = 5
   Insn 1464: point = 263, n_alt = 0
   Insn 2096: point = 265, n_alt = -2
   Insn 1463: point = 266, n_alt = -1
   Insn 1460: point = 266, n_alt = -1
   Insn 2016: point = 266, n_alt = 6
   Insn 1456: point = 266, n_alt = -1
   Insn 1455: point = 266, n_alt = -2
   Insn 1451: point = 267, n_alt = 0
   Insn 2095: point = 269, n_alt = -2
   Insn 1450: point = 270, n_alt = -1
   Insn 1447: point = 270, n_alt = -1
   Insn 2015: point = 270, n_alt = 6
   Insn 1443: point = 270, n_alt = -1
   Insn 1439: point = 270, n_alt = 1
   Insn 1442: point = 272, n_alt = -2
   Insn 2094: point = 273, n_alt = -2
   Insn 1438: point = 274, n_alt = -1
   Insn 1437: point = 274, n_alt = -2
   Insn 1434: point = 275, n_alt = -2
   Insn 2093: point = 277, n_alt = -2
   Insn 1433: point = 278, n_alt = -1
   Insn 1429: point = 278, n_alt = 1
   Insn 1432: point = 280, n_alt = -2
   Insn 2092: point = 281, n_alt = -2
   Insn 1428: point = 282, n_alt = -1
   Insn 1427: point = 282, n_alt = -2
  BB 89
   Insn 2181: point = 283, n_alt = -1
   Insn 1389: point = 283, n_alt = 0
   Insn 2088: point = 285, n_alt = -2
   Insn 1388: point = 286, n_alt = -1
   Insn 1384: point = 286, n_alt = -1
   Insn 2014: point = 286, n_alt = 6
   Insn 1380: point = 286, n_alt = -1
   Insn 1379: point = 286, n_alt = 1
  BB 80
   Insn 2172: point = 288, n_alt = -1
  BB 91
   Insn 1418: point = 289, n_alt = 0
   Insn 2091: point = 291, n_alt = -2
   Insn 1417: point = 292, n_alt = -1
   Insn 1414: point = 292, n_alt = -1
   Insn 2013: point = 292, n_alt = 6
   Insn 1413: point = 292, n_alt = -2
  BB 90
   Insn 1406: point = 294, n_alt = 0
   Insn 2090: point = 295, n_alt = -2
   Insn 1403: point = 296, n_alt = -1
   Insn 2012: point = 296, n_alt = 6
   Insn 1399: point = 296, n_alt = -2
   Insn 2089: point = 298, n_alt = -2
   Insn 1398: point = 299, n_alt = -1
   Insn 1397: point = 299, n_alt = 1
  BB 79
   Insn 1240: point = 300, n_alt = -1
   Insn 2199: point = 300, n_alt = -2
   Insn 2198: point = 300, n_alt = 1
   Insn 1235: point = 300, n_alt = 0
   Insn 1234: point = 302, n_alt = 3
   Insn 2377: point = 304, n_alt = 5
  BB 88
   Insn 2179: point = 306, n_alt = -1
   Insn 2255: point = 306, n_alt = 5
   Insn 2254: point = 308, n_alt = -2
  BB 87
   Insn 1371: point = 311, n_alt = -1
   Insn 2197: point = 311, n_alt = -2
   Insn 2196: point = 311, n_alt = 0
   Insn 1361: point = 311, n_alt = 0
   Insn 1368: point = 312, n_alt = 0
   Insn 2397: point = 314, n_alt = 9
	Hard reg 10 is preferable by r1228 with profit 890
   Insn 1359: point = 315, n_alt = -1
   Insn 1358: point = 315, n_alt = -2
   Insn 1357: point = 315, n_alt = -2
   Insn 1356: point = 316, n_alt = -2
   Insn 2460: point = 317, n_alt = -1
	Hard reg 2 is preferable by r1285 with profit 890
   Insn 2087: point = 319, n_alt = -2
   Insn 1354: point = 320, n_alt = -1
   Insn 1353: point = 320, n_alt = -2
   Insn 2459: point = 321, n_alt = -1
	Hard reg 2 is preferable by r1285 with profit 1780
   Insn 1352: point = 323, n_alt = 0
   Insn 2086: point = 325, n_alt = -2
   Insn 1350: point = 326, n_alt = -1
   Insn 1349: point = 326, n_alt = -2
   Insn 1348: point = 327, n_alt = -2
   Insn 1343: point = 328, n_alt = -2
   Insn 1347: point = 330, n_alt = -2
   Insn 2085: point = 331, n_alt = -2
   Insn 1342: point = 332, n_alt = -1
   Insn 1999: point = 332, n_alt = 6
   Insn 1338: point = 332, n_alt = -1
   Insn 2396: point = 332, n_alt = 10
	Hard reg 0 is preferable by r1227 with profit 890
   Insn 1337: point = 333, n_alt = 0
   Insn 1364: point = 335, n_alt = 4
   Insn 1335: point = 336, n_alt = 0
  BB 85
   Insn 2176: point = 339, n_alt = -1
   Insn 2388: point = 339, n_alt = 10
	Hard reg 7 is preferable by r1219 with profit 296
   Insn 1296: point = 341, n_alt = 0
   Insn 2387: point = 343, n_alt = 10
	Hard reg 4 is preferable by r1218 with profit 296
   Insn 1288: point = 345, n_alt = 0
   Insn 2386: point = 347, n_alt = 10
	Hard reg 5 is preferable by r1217 with profit 296
   Insn 1280: point = 349, n_alt = 0
   Insn 1295: point = 351, n_alt = 0
   Insn 1287: point = 353, n_alt = 0
   Insn 1279: point = 355, n_alt = 0
   Insn 1294: point = 357, n_alt = 0
   Insn 1286: point = 359, n_alt = 0
   Insn 2385: point = 361, n_alt = 9
	Hard reg 30 is preferable by r1216 with profit 296
   Insn 1293: point = 363, n_alt = 1
   Insn 2384: point = 365, n_alt = 9
	Hard reg 29 is preferable by r1215 with profit 296
   Insn 1285: point = 367, n_alt = 1
   Insn 1278: point = 368, n_alt = 0
   Insn 2383: point = 370, n_alt = 9
	Hard reg 28 is preferable by r1214 with profit 296
   Insn 1277: point = 372, n_alt = 1
   Insn 2458: point = 374, n_alt = -1
	   Creating copy r1213<-r1284@296
   Insn 1284: point = 376, n_alt = 1
   Insn 2457: point = 378, n_alt = -1
	   Creating copy r1212->r1284@296
   Insn 2381: point = 379, n_alt = 5
  BB 86
   Insn 2395: point = 381, n_alt = 10
	Hard reg 7 is preferable by r1226 with profit 296
   Insn 1324: point = 383, n_alt = 0
   Insn 2394: point = 385, n_alt = 10
	Hard reg 4 is preferable by r1225 with profit 296
   Insn 1316: point = 387, n_alt = 0
   Insn 2393: point = 389, n_alt = 10
	Hard reg 5 is preferable by r1224 with profit 296
   Insn 1308: point = 391, n_alt = 0
   Insn 1323: point = 393, n_alt = 0
   Insn 1315: point = 395, n_alt = 0
   Insn 1307: point = 397, n_alt = 0
   Insn 1322: point = 399, n_alt = 0
   Insn 1314: point = 401, n_alt = 0
   Insn 1306: point = 403, n_alt = 0
   Insn 2392: point = 405, n_alt = 9
	Hard reg 30 is preferable by r1223 with profit 296
   Insn 1321: point = 407, n_alt = 1
   Insn 2391: point = 409, n_alt = 9
	Hard reg 29 is preferable by r1222 with profit 296
   Insn 1313: point = 411, n_alt = 1
   Insn 2390: point = 412, n_alt = 9
	Hard reg 28 is preferable by r1221 with profit 296
   Insn 1305: point = 414, n_alt = 1
   Insn 2389: point = 416, n_alt = 5
  BB 84
   Insn 2174: point = 418, n_alt = -1
   Insn 34: point = 418, n_alt = -2
   Insn 33: point = 419, n_alt = -2
  BB 83
   Insn 1269: point = 421, n_alt = -1
   Insn 32: point = 421, n_alt = 1
   Insn 1268: point = 422, n_alt = 3
   Insn 1312: point = 422, n_alt = 1
   Insn 2380: point = 424, n_alt = 5
  BB 82
   Insn 1266: point = 426, n_alt = -1
   Insn 1265: point = 426, n_alt = 3
   Insn 1257: point = 426, n_alt = 1
   Insn 1254: point = 428, n_alt = 1
   Insn 2379: point = 430, n_alt = 10
	Hard reg 3 is preferable by r1210 with profit 890
   Insn 1252: point = 432, n_alt = 0
  BB 81
   Insn 2253: point = 434, n_alt = 6
   Insn 2252: point = 436, n_alt = -2
   Insn 2251: point = 438, n_alt = 7
   Insn 2250: point = 440, n_alt = -2
   Insn 2249: point = 442, n_alt = -2
   Insn 30: point = 444, n_alt = 1
   Insn 2378: point = 445, n_alt = 13
   Insn 1247: point = 447, n_alt = 0
   Insn 31: point = 449, n_alt = 3
   Insn 1246: point = 450, n_alt = 0
  r982 is added to live at bb81 start
  r983 is added to live at bb81 start
  r984 is added to live at bb81 start
  BB 78
   Insn 1218: point = 453, n_alt = -1
   Insn 2201: point = 453, n_alt = -2
   Insn 2200: point = 453, n_alt = 1
   Insn 1206: point = 453, n_alt = -2
   Insn 2084: point = 455, n_alt = -2
   Insn 1205: point = 456, n_alt = -1
   Insn 1201: point = 456, n_alt = -1
   Insn 1199: point = 456, n_alt = 6
   Insn 1197: point = 456, n_alt = -1
   Insn 2376: point = 456, n_alt = 10
	Hard reg 0 is preferable by r1207 with profit 110
   Insn 1196: point = 457, n_alt = 0
   Insn 1194: point = 459, n_alt = 0
   Insn 1193: point = 461, n_alt = 3
   Insn 1192: point = 462, n_alt = 0
   Insn 1191: point = 464, n_alt = 2
  BB 74
   Insn 2168: point = 466, n_alt = -1
   Insn 1142: point = 466, n_alt = 0
   Insn 1141: point = 468, n_alt = 2
  BB 73
   Insn 1135: point = 470, n_alt = 0
   Insn 2081: point = 471, n_alt = -2
   Insn 1132: point = 472, n_alt = -1
   Insn 2011: point = 472, n_alt = 6
   Insn 1126: point = 472, n_alt = 0
   Insn 2373: point = 474, n_alt = 9
	Hard reg 3 is preferable by r1204 with profit 55
   Insn 1125: point = 476, n_alt = 0
   Insn 1124: point = 478, n_alt = 0
   Insn 1123: point = 480, n_alt = 0
   Insn 1122: point = 482, n_alt = 2
   Insn 2372: point = 483, n_alt = 10
	Hard reg 3 is preferable by r1203 with profit 55
   Insn 1121: point = 485, n_alt = 0
   Insn 1131: point = 487, n_alt = -2
   Insn 1120: point = 488, n_alt = 0
  BB 77
   Insn 1182: point = 490, n_alt = 0
   Insn 1181: point = 492, n_alt = 2
  BB 76
   Insn 1175: point = 494, n_alt = 0
   Insn 2083: point = 495, n_alt = -2
   Insn 1172: point = 496, n_alt = -1
   Insn 1170: point = 496, n_alt = 6
   Insn 1171: point = 496, n_alt = -2
  BB 75
   Insn 1164: point = 498, n_alt = 0
   Insn 2082: point = 499, n_alt = -2
   Insn 1161: point = 500, n_alt = -1
   Insn 1160: point = 500, n_alt = -2
   Insn 1159: point = 500, n_alt = 6
   Insn 1155: point = 500, n_alt = 0
   Insn 2375: point = 502, n_alt = 9
	Hard reg 3 is preferable by r1206 with profit 55
   Insn 1154: point = 504, n_alt = 0
   Insn 1153: point = 506, n_alt = 0
   Insn 1152: point = 508, n_alt = 0
   Insn 1151: point = 510, n_alt = 2
   Insn 2374: point = 511, n_alt = 10
	Hard reg 3 is preferable by r1205 with profit 55
   Insn 1150: point = 513, n_alt = 0
   Insn 1149: point = 515, n_alt = 0
  BB 72
   Insn 1117: point = 517, n_alt = -1
   Insn 2203: point = 517, n_alt = -2
   Insn 2202: point = 517, n_alt = 0
   Insn 1115: point = 518, n_alt = 2
   Insn 2371: point = 519, n_alt = -2
	Hard reg 30 is preferable by r1202 with profit 110
   Insn 1110: point = 521, n_alt = 0
   Insn 2370: point = 522, n_alt = 9
   Insn 2369: point = 524, n_alt = -1
  BB 70
   Insn 2166: point = 526, n_alt = -1
   Insn 2368: point = 526, n_alt = 10
	Hard reg 5 is preferable by r1201 with profit 55
   Insn 1082: point = 528, n_alt = 0
   Insn 1081: point = 530, n_alt = 0
   Insn 29: point = 531, n_alt = 3
   Insn 1080: point = 532, n_alt = 0
   Insn 1078: point = 534, n_alt = 2
   Insn 1079: point = 535, n_alt = 3
  BB 71
   Insn 26: point = 537, n_alt = -2
   Insn 28: point = 539, n_alt = -2
   Insn 1096: point = 541, n_alt = 0
   Insn 27: point = 543, n_alt = 3
   Insn 1094: point = 544, n_alt = 0
   Insn 1095: point = 546, n_alt = 2
   Insn 1093: point = 547, n_alt = 0
  BB 69
   Insn 1075: point = 550, n_alt = -1
   Insn 2205: point = 550, n_alt = -2
   Insn 2204: point = 550, n_alt = 0
   Insn 1068: point = 550, n_alt = 0
   Insn 1064: point = 551, n_alt = 0
   Insn 1062: point = 552, n_alt = 0
   Insn 2367: point = 554, n_alt = 9
	Hard reg 31 is preferable by r1200 with profit 110
   Insn 1061: point = 556, n_alt = 1
   Insn 1060: point = 557, n_alt = 1
   Insn 1059: point = 558, n_alt = 5
   Insn 2366: point = 560, n_alt = 5
   Insn 1073: point = 561, n_alt = 3
   Insn 1067: point = 562, n_alt = 3
   Insn 1063: point = 563, n_alt = 0
   Insn 1055: point = 565, n_alt = -2
   Insn 2080: point = 567, n_alt = -2
   Insn 1054: point = 568, n_alt = -1
   Insn 1053: point = 568, n_alt = -2
  BB 67
   Insn 2164: point = 569, n_alt = -1
   Insn 25: point = 569, n_alt = 2
   Insn 21: point = 570, n_alt = -2
   Insn 24: point = 572, n_alt = -2
   Insn 23: point = 574, n_alt = -2
   Insn 22: point = 576, n_alt = -2
  BB 68
   Insn 20: point = 579, n_alt = 2
  BB 66
   Insn 1043: point = 581, n_alt = -1
   Insn 2207: point = 581, n_alt = -2
   Insn 2206: point = 581, n_alt = 0
   Insn 1036: point = 581, n_alt = 0
   Insn 2079: point = 583, n_alt = -2
   Insn 1035: point = 584, n_alt = -1
   Insn 1034: point = 584, n_alt = -2
   Insn 2078: point = 585, n_alt = 1
   Insn 1032: point = 586, n_alt = -1
   Insn 1031: point = 586, n_alt = 0
   Insn 2077: point = 587, n_alt = -2
   Insn 1029: point = 588, n_alt = -1
   Insn 2365: point = 588, n_alt = 1
	Hard reg 0 is preferable by r1198 with profit 110
   Insn 1028: point = 589, n_alt = 0
   Insn 2364: point = 591, n_alt = -2
	Hard reg 0 is preferable by r1198 with profit 110
	Hard reg 43 is preferable by r1198 with profit 110
   Insn 1026: point = 593, n_alt = 0
   Insn 1024: point = 595, n_alt = 0
   Insn 1025: point = 597, n_alt = 0
  BB 64
   Insn 2160: point = 600, n_alt = -1
   Insn 19: point = 600, n_alt = -2
   Insn 2245: point = 602, n_alt = -2
   Insn 2244: point = 604, n_alt = -2
   Insn 2243: point = 606, n_alt = -2
  BB 62
   Insn 2158: point = 609, n_alt = -1
   Insn 971: point = 609, n_alt = -2
   Insn 2242: point = 611, n_alt = -2
   Insn 2241: point = 613, n_alt = -2
   Insn 2240: point = 615, n_alt = -2
  BB 61
   Insn 966: point = 618, n_alt = 0
   Insn 964: point = 618, n_alt = 1
  BB 60
   Insn 957: point = 621, n_alt = -1
   Insn 956: point = 621, n_alt = 0
   Insn 2363: point = 622, n_alt = 10
	Hard reg 31 is preferable by r1197 with profit 262
   Insn 962: point = 624, n_alt = 0
   Insn 2362: point = 626, n_alt = 10
	Hard reg 31 is preferable by r1196 with profit 262
   Insn 2361: point = 627, n_alt = 5
  BB 59
   Insn 950: point = 629, n_alt = -1
   Insn 949: point = 629, n_alt = 0
   Insn 953: point = 629, n_alt = 0
   Insn 2229: point = 631, n_alt = -2
   Insn 2360: point = 633, n_alt = 10
	Hard reg 3 is preferable by r1194 with profit 890
   Insn 941: point = 635, n_alt = 0
   Insn 2228: point = 637, n_alt = -2
   Insn 952: point = 639, n_alt = 0
   Insn 940: point = 640, n_alt = 0
  BB 65
   Insn 2162: point = 642, n_alt = -1
   Insn 2248: point = 642, n_alt = -2
   Insn 2247: point = 644, n_alt = -2
   Insn 2246: point = 646, n_alt = -2
   Insn 960: point = 648, n_alt = 1
   Insn 18: point = 649, n_alt = 1
  BB 58
   Insn 2156: point = 651, n_alt = -1
   Insn 2359: point = 651, n_alt = -2
	Hard reg 37 is preferable by r1193 with profit 27
   Insn 921: point = 653, n_alt = 0
   Insn 2358: point = 655, n_alt = -2
	Hard reg 37 is preferable by r1193 with profit 27
	Hard reg 43 is preferable by r1193 with profit 27
   Insn 928: point = 656, n_alt = 0
   Insn 920: point = 657, n_alt = 0
   Insn 925: point = 658, n_alt = 0
   Insn 2357: point = 660, n_alt = 9
	Hard reg 8 is preferable by r1192 with profit 27
   Insn 924: point = 662, n_alt = 1
   Insn 916: point = 664, n_alt = 0
   Insn 2076: point = 666, n_alt = -2
   Insn 915: point = 667, n_alt = -1
   Insn 912: point = 667, n_alt = -1
   Insn 910: point = 667, n_alt = 6
   Insn 908: point = 667, n_alt = -1
   Insn 907: point = 667, n_alt = 0
   Insn 2356: point = 668, n_alt = 5
	   Creating copy r1191<-r1282@27
   Insn 905: point = 670, n_alt = 0
   Insn 2355: point = 672, n_alt = 5
	   Creating copy r1190<-r1282@27
   Insn 2455: point = 673, n_alt = -1
	   Creating copy r1282<-r1283@27
   Insn 903: point = 675, n_alt = 0
   Insn 2354: point = 677, n_alt = 5
	   Creating copy r1189<-r1283@27
   Insn 2456: point = 678, n_alt = -1
  BB 57
   Insn 2154: point = 680, n_alt = -1
   Insn 2353: point = 680, n_alt = -2
	Hard reg 37 is preferable by r1188 with profit 82
   Insn 889: point = 682, n_alt = 0
   Insn 2352: point = 684, n_alt = -2
	Hard reg 37 is preferable by r1188 with profit 82
	Hard reg 43 is preferable by r1188 with profit 82
   Insn 888: point = 685, n_alt = 0
   Insn 885: point = 686, n_alt = 0
   Insn 2351: point = 688, n_alt = 9
	Hard reg 8 is preferable by r1187 with profit 82
   Insn 884: point = 690, n_alt = 0
   Insn 880: point = 692, n_alt = 0
   Insn 2350: point = 694, n_alt = 5
   Insn 894: point = 695, n_alt = 0
  BB 56
   Insn 872: point = 697, n_alt = 0
   Insn 2075: point = 698, n_alt = -2
   Insn 869: point = 699, n_alt = -1
   Insn 868: point = 699, n_alt = -2
   Insn 867: point = 699, n_alt = 6
  BB 55
   Insn 864: point = 700, n_alt = 0
   Insn 2074: point = 701, n_alt = -2
   Insn 861: point = 702, n_alt = -1
   Insn 860: point = 702, n_alt = -2
   Insn 859: point = 702, n_alt = 6
   Insn 850: point = 702, n_alt = 0
   Insn 2073: point = 704, n_alt = -2
   Insn 849: point = 705, n_alt = -1
   Insn 848: point = 705, n_alt = -2
   Insn 2072: point = 706, n_alt = 1
   Insn 846: point = 707, n_alt = -1
   Insn 845: point = 707, n_alt = 0
   Insn 2071: point = 708, n_alt = -2
   Insn 843: point = 709, n_alt = -1
   Insn 2349: point = 709, n_alt = 1
	Hard reg 0 is preferable by r1185 with profit 110
   Insn 842: point = 710, n_alt = 0
   Insn 2348: point = 712, n_alt = -2
	Hard reg 0 is preferable by r1185 with profit 110
	Hard reg 31 is preferable by r1185 with profit 110
   Insn 2224: point = 714, n_alt = -2
   Insn 840: point = 716, n_alt = 0
   Insn 2225: point = 718, n_alt = -2
   Insn 838: point = 720, n_alt = 0
   Insn 839: point = 721, n_alt = 0
  BB 53
   Insn 2149: point = 723, n_alt = -1
   Insn 17: point = 723, n_alt = -2
   Insn 2236: point = 725, n_alt = -2
   Insn 2235: point = 727, n_alt = -2
   Insn 2234: point = 729, n_alt = -2
  BB 51
   Insn 2147: point = 732, n_alt = -1
   Insn 782: point = 732, n_alt = -2
   Insn 2233: point = 734, n_alt = -2
   Insn 2232: point = 736, n_alt = -2
   Insn 2231: point = 738, n_alt = -2
  BB 50
   Insn 777: point = 741, n_alt = 0
   Insn 775: point = 741, n_alt = 1
  BB 49
   Insn 768: point = 744, n_alt = -1
   Insn 767: point = 744, n_alt = 0
   Insn 2347: point = 745, n_alt = 10
	Hard reg 31 is preferable by r1184 with profit 262
   Insn 773: point = 747, n_alt = 0
   Insn 2346: point = 749, n_alt = 10
	Hard reg 31 is preferable by r1183 with profit 262
   Insn 2345: point = 750, n_alt = 5
  BB 48
   Insn 761: point = 752, n_alt = -1
   Insn 760: point = 752, n_alt = 0
   Insn 764: point = 752, n_alt = 0
   Insn 2227: point = 754, n_alt = -2
   Insn 2344: point = 756, n_alt = 10
	Hard reg 3 is preferable by r1181 with profit 890
   Insn 752: point = 758, n_alt = 0
   Insn 2226: point = 760, n_alt = -2
   Insn 763: point = 762, n_alt = 0
   Insn 751: point = 763, n_alt = 0
  BB 54
   Insn 2151: point = 765, n_alt = -1
   Insn 2239: point = 765, n_alt = -2
   Insn 2238: point = 767, n_alt = -2
   Insn 2237: point = 769, n_alt = -2
   Insn 771: point = 771, n_alt = 1
   Insn 15: point = 772, n_alt = 1
   Insn 826: point = 773, n_alt = 0
   Insn 825: point = 774, n_alt = 2
  BB 47
   Insn 2145: point = 776, n_alt = -1
   Insn 2343: point = 776, n_alt = -2
	Hard reg 39 is preferable by r1180 with profit 55
   Insn 733: point = 778, n_alt = 0
   Insn 2342: point = 780, n_alt = -2
	Hard reg 39 is preferable by r1180 with profit 55
	Hard reg 44 is preferable by r1180 with profit 55
   Insn 732: point = 781, n_alt = 0
   Insn 725: point = 782, n_alt = 0
   Insn 2341: point = 784, n_alt = 9
	Hard reg 3 is preferable by r1179 with profit 55
   Insn 724: point = 786, n_alt = 0
   Insn 720: point = 788, n_alt = 0
   Insn 2340: point = 790, n_alt = 5
   Insn 16: point = 791, n_alt = -2
   Insn 739: point = 792, n_alt = 0
   Insn 731: point = 793, n_alt = 3
   Insn 2339: point = 795, n_alt = 5
   Insn 736: point = 796, n_alt = 0
   Insn 2338: point = 798, n_alt = 9
	Hard reg 8 is preferable by r1176 with profit 55
   Insn 729: point = 799, n_alt = 3
   Insn 2337: point = 801, n_alt = 5
  BB 46
   Insn 2143: point = 803, n_alt = -1
   Insn 710: point = 803, n_alt = 0
   Insn 707: point = 805, n_alt = 0
   Insn 2336: point = 807, n_alt = 9
	Hard reg 29 is preferable by r1174 with profit 55
   Insn 706: point = 809, n_alt = 1
   Insn 2335: point = 810, n_alt = -2
	Hard reg 39 is preferable by r1173 with profit 55
   Insn 703: point = 812, n_alt = 0
   Insn 2334: point = 814, n_alt = -2
	Hard reg 39 is preferable by r1173 with profit 55
	Hard reg 44 is preferable by r1173 with profit 55
   Insn 702: point = 815, n_alt = 0
   Insn 701: point = 816, n_alt = 3
   Insn 2333: point = 818, n_alt = 5
   Insn 699: point = 819, n_alt = 3
   Insn 2332: point = 821, n_alt = 5
   Insn 694: point = 822, n_alt = 0
   Insn 2070: point = 824, n_alt = -2
   Insn 693: point = 825, n_alt = -1
   Insn 690: point = 825, n_alt = -1
   Insn 688: point = 825, n_alt = 6
   Insn 686: point = 825, n_alt = -1
   Insn 685: point = 825, n_alt = 0
   Insn 2331: point = 826, n_alt = 5
	   Creating copy r1170<-r1280@55
   Insn 683: point = 828, n_alt = 0
   Insn 2330: point = 830, n_alt = 5
	   Creating copy r1169<-r1280@55
   Insn 2453: point = 831, n_alt = -1
	   Creating copy r1280<-r1281@55
   Insn 681: point = 833, n_alt = 0
   Insn 2329: point = 835, n_alt = 5
	   Creating copy r1168<-r1281@55
   Insn 2454: point = 836, n_alt = -1
   Insn 712: point = 837, n_alt = 0
   Insn 2328: point = 839, n_alt = 9
	Hard reg 8 is preferable by r1167 with profit 55
  BB 45
   Insn 674: point = 841, n_alt = 0
   Insn 2069: point = 842, n_alt = -2
   Insn 671: point = 843, n_alt = -1
   Insn 670: point = 843, n_alt = -2
   Insn 669: point = 843, n_alt = 6
   Insn 663: point = 843, n_alt = 0
   Insn 662: point = 844, n_alt = 2
   Insn 661: point = 845, n_alt = -2
   Insn 2068: point = 847, n_alt = -2
   Insn 660: point = 848, n_alt = -1
   Insn 659: point = 848, n_alt = -2
  BB 42
   Insn 2140: point = 849, n_alt = -1
   Insn 622: point = 849, n_alt = -2
   Insn 2063: point = 851, n_alt = -2
   Insn 621: point = 852, n_alt = -1
   Insn 617: point = 852, n_alt = 0
   Insn 2062: point = 854, n_alt = -2
   Insn 616: point = 855, n_alt = -1
   Insn 612: point = 855, n_alt = -1
   Insn 2007: point = 855, n_alt = 6
   Insn 608: point = 855, n_alt = -1
  BB 44
   Insn 654: point = 856, n_alt = -2
   Insn 2067: point = 858, n_alt = -2
   Insn 653: point = 859, n_alt = -1
   Insn 649: point = 859, n_alt = 0
   Insn 2066: point = 861, n_alt = -2
   Insn 648: point = 862, n_alt = -1
   Insn 645: point = 862, n_alt = -1
   Insn 2006: point = 862, n_alt = 6
   Insn 644: point = 862, n_alt = -2
  BB 43
   Insn 637: point = 864, n_alt = 0
   Insn 2065: point = 865, n_alt = -2
   Insn 634: point = 866, n_alt = -1
   Insn 2005: point = 866, n_alt = 6
   Insn 630: point = 866, n_alt = -2
   Insn 2064: point = 868, n_alt = -2
   Insn 629: point = 869, n_alt = -1
  BB 41
   Insn 601: point = 870, n_alt = -1
   Insn 2209: point = 870, n_alt = -2
   Insn 2208: point = 870, n_alt = 1
   Insn 595: point = 870, n_alt = 0
   Insn 2061: point = 872, n_alt = -2
   Insn 594: point = 873, n_alt = -1
   Insn 591: point = 873, n_alt = -1
   Insn 590: point = 873, n_alt = -2
   Insn 589: point = 874, n_alt = -2
   Insn 2060: point = 875, n_alt = -2
   Insn 587: point = 876, n_alt = -1
   Insn 586: point = 876, n_alt = 5
   Insn 2327: point = 877, n_alt = 5
   Insn 584: point = 878, n_alt = -2
   Insn 2059: point = 880, n_alt = -2
   Insn 583: point = 881, n_alt = -1
   Insn 2004: point = 881, n_alt = 6
   Insn 579: point = 881, n_alt = -1
   Insn 578: point = 881, n_alt = 1
  BB 102
   Insn 2194: point = 882, n_alt = -1
   Insn 1805: point = 882, n_alt = 6
   Insn 2432: point = 884, n_alt = 5
   Insn 1818: point = 885, n_alt = -2
   Insn 2109: point = 887, n_alt = -2
   Insn 1817: point = 888, n_alt = -1
   Insn 1816: point = 888, n_alt = 0
   Insn 2108: point = 889, n_alt = -2
   Insn 1814: point = 890, n_alt = -1
   Insn 1811: point = 890, n_alt = -1
   Insn 2019: point = 890, n_alt = 6
   Insn 1807: point = 890, n_alt = -1
   Insn 1806: point = 890, n_alt = 1
  BB 40
   Insn 2230: point = 891, n_alt = -2
   Insn 2325: point = 893, n_alt = 7
   Insn 2326: point = 895, n_alt = -2
	   Creating copy r1164->r1165@13
   Insn 12: point = 897, n_alt = 1
   Insn 14: point = 898, n_alt = 2
   Insn 13: point = 899, n_alt = 3
  r993 is added to live at bb40 start
  r992 is added to live at bb40 start
  r987 is added to live at bb40 start
  r989 is added to live at bb40 start
  r990 is added to live at bb40 start
  BB 37
   Insn 2137: point = 901, n_alt = -1
   Insn 523: point = 901, n_alt = 6
   Insn 2320: point = 903, n_alt = 5
	   Creating copy r1159<-r1278@6
   Insn 2451: point = 905, n_alt = -1
   Insn 2319: point = 906, n_alt = 7
	   Creating copy r1158->r1278@6
   Insn 522: point = 908, n_alt = 5
  BB 39
   Insn 555: point = 910, n_alt = 6
  BB 38
   Insn 545: point = 912, n_alt = -1
   Insn 544: point = 912, n_alt = 0
   Insn 543: point = 913, n_alt = 1
   Insn 537: point = 914, n_alt = 0
   Insn 2324: point = 916, n_alt = 10
	Hard reg 32 is preferable by r1163 with profit 6
   Insn 536: point = 918, n_alt = 0
   Insn 541: point = 920, n_alt = 0
   Insn 533: point = 922, n_alt = 0
   Insn 2323: point = 924, n_alt = 10
	Hard reg 33 is preferable by r1162 with profit 6
   Insn 532: point = 926, n_alt = 0
   Insn 531: point = 928, n_alt = 6
   Insn 2322: point = 930, n_alt = 5
	   Creating copy r1161<-r1279@6
   Insn 539: point = 932, n_alt = 1
   Insn 538: point = 933, n_alt = 5
   Insn 2452: point = 934, n_alt = -1
   Insn 2321: point = 935, n_alt = 7
	   Creating copy r1160->r1279@6
   Insn 530: point = 937, n_alt = 5
   Insn 535: point = 938, n_alt = 0
   Insn 529: point = 940, n_alt = 0
   Insn 528: point = 942, n_alt = 2
  BB 36
   Insn 520: point = 944, n_alt = 0
   Insn 519: point = 944, n_alt = -2
   Insn 2058: point = 946, n_alt = -2
   Insn 516: point = 947, n_alt = -1
   Insn 515: point = 947, n_alt = 1
  BB 34
   Insn 2135: point = 948, n_alt = -1
   Insn 489: point = 948, n_alt = 3
   Insn 2316: point = 950, n_alt = 5
   Insn 487: point = 951, n_alt = -2
   Insn 2056: point = 953, n_alt = -2
   Insn 486: point = 954, n_alt = -1
   Insn 485: point = 954, n_alt = -2
  BB 29
   Insn 2131: point = 956, n_alt = -1
   Insn 413: point = 956, n_alt = 3
   Insn 2304: point = 958, n_alt = 5
   Insn 411: point = 959, n_alt = 3
   Insn 2303: point = 961, n_alt = 5
   Insn 409: point = 962, n_alt = -2
   Insn 2053: point = 964, n_alt = -2
   Insn 408: point = 965, n_alt = -1
   Insn 406: point = 965, n_alt = -2
   Insn 407: point = 967, n_alt = -2
   Insn 2052: point = 968, n_alt = -2
   Insn 405: point = 969, n_alt = -1
   Insn 404: point = 969, n_alt = -2
   Insn 403: point = 969, n_alt = 3
   Insn 2302: point = 971, n_alt = 5
  BB 35
   Insn 503: point = 973, n_alt = 4
   Insn 2450: point = 974, n_alt = -1
	   Creating copy r1157<-r1277@3
   Insn 501: point = 976, n_alt = 0
   Insn 499: point = 978, n_alt = 2
   Insn 500: point = 979, n_alt = 3
   Insn 2449: point = 981, n_alt = -1
	   Creating copy r1156->r1277@3
   Insn 2317: point = 982, n_alt = 5
   Insn 497: point = 983, n_alt = -2
   Insn 2057: point = 985, n_alt = -2
   Insn 496: point = 986, n_alt = -1
   Insn 495: point = 986, n_alt = -2
  BB 33
   Insn 483: point = 988, n_alt = 0
   Insn 481: point = 989, n_alt = 1
   Insn 479: point = 991, n_alt = 0
   Insn 477: point = 993, n_alt = 1
   Insn 476: point = 994, n_alt = 1
   Insn 475: point = 996, n_alt = 1
   Insn 2315: point = 998, n_alt = 5
	   Creating copy r1154<-r1276@6
   Insn 473: point = 1000, n_alt = 0
   Insn 2314: point = 1002, n_alt = 5
	   Creating copy r1153<-r1276@6
   Insn 2448: point = 1003, n_alt = -1
   Insn 471: point = 1004, n_alt = 1
   Insn 468: point = 1006, n_alt = 0
   Insn 470: point = 1008, n_alt = 1
   Insn 467: point = 1009, n_alt = 5
   Insn 466: point = 1010, n_alt = 0
   Insn 2313: point = 1012, n_alt = 5
  BB 31
   Insn 2133: point = 1014, n_alt = -1
   Insn 445: point = 1014, n_alt = 3
   Insn 2309: point = 1016, n_alt = 5
   Insn 443: point = 1017, n_alt = -2
   Insn 2054: point = 1019, n_alt = -2
   Insn 442: point = 1020, n_alt = -1
   Insn 441: point = 1020, n_alt = -2
   Insn 440: point = 1020, n_alt = 3
   Insn 2308: point = 1022, n_alt = 5
  BB 32
   Insn 461: point = 1024, n_alt = 4
   Insn 2447: point = 1025, n_alt = -1
	   Creating copy r1151<-r1275@3
   Insn 459: point = 1027, n_alt = 0
   Insn 457: point = 1029, n_alt = 2
   Insn 458: point = 1030, n_alt = 3
   Insn 2446: point = 1032, n_alt = -1
	   Creating copy r1150->r1275@3
   Insn 2311: point = 1033, n_alt = 5
   Insn 455: point = 1034, n_alt = -2
   Insn 2055: point = 1036, n_alt = -2
   Insn 454: point = 1037, n_alt = -1
   Insn 453: point = 1037, n_alt = -2
   Insn 452: point = 1037, n_alt = 3
   Insn 2310: point = 1039, n_alt = 5
  BB 30
   Insn 437: point = 1041, n_alt = 0
   Insn 435: point = 1042, n_alt = 1
   Insn 433: point = 1044, n_alt = 0
   Insn 431: point = 1046, n_alt = 1
   Insn 424: point = 1047, n_alt = 1
   Insn 423: point = 1049, n_alt = 1
   Insn 2307: point = 1051, n_alt = 5
	   Creating copy r1146<-r1274@6
   Insn 430: point = 1053, n_alt = 1
   Insn 429: point = 1055, n_alt = 1
   Insn 427: point = 1057, n_alt = 0
   Insn 421: point = 1059, n_alt = 0
   Insn 2306: point = 1061, n_alt = 5
	   Creating copy r1145<-r1274@6
   Insn 2445: point = 1062, n_alt = -1
   Insn 419: point = 1063, n_alt = 5
   Insn 420: point = 1064, n_alt = 5
   Insn 425: point = 1065, n_alt = 0
   Insn 2305: point = 1067, n_alt = 5
  BB 28
   Insn 400: point = 1069, n_alt = -1
   Insn 399: point = 1069, n_alt = 0
   Insn 2051: point = 1070, n_alt = -2
   Insn 392: point = 1071, n_alt = -1
   Insn 391: point = 1071, n_alt = 1
  BB 27
   Insn 387: point = 1072, n_alt = 4
   Insn 2443: point = 1073, n_alt = -1
	   Creating copy r1140<-r1272@3
   Insn 385: point = 1075, n_alt = 0
   Insn 383: point = 1077, n_alt = 2
   Insn 384: point = 1078, n_alt = 3
   Insn 2442: point = 1080, n_alt = -1
	   Creating copy r1139->r1272@3
   Insn 2300: point = 1081, n_alt = 5
   Insn 2050: point = 1082, n_alt = -2
   Insn 380: point = 1083, n_alt = -1
   Insn 379: point = 1083, n_alt = 3
   Insn 2299: point = 1084, n_alt = 5
  BB 26
   Insn 374: point = 1086, n_alt = 0
   Insn 372: point = 1087, n_alt = 1
   Insn 370: point = 1089, n_alt = 0
   Insn 368: point = 1091, n_alt = 1
   Insn 367: point = 1092, n_alt = 1
   Insn 366: point = 1094, n_alt = 1
   Insn 2298: point = 1096, n_alt = 5
	   Creating copy r1137<-r1273@6
   Insn 364: point = 1098, n_alt = 0
   Insn 2297: point = 1100, n_alt = 5
	   Creating copy r1136<-r1273@6
   Insn 2444: point = 1101, n_alt = -1
   Insn 362: point = 1102, n_alt = 1
   Insn 361: point = 1104, n_alt = 1
   Insn 359: point = 1106, n_alt = 0
   Insn 357: point = 1107, n_alt = 1
   Insn 2296: point = 1109, n_alt = 5
   Insn 358: point = 1110, n_alt = 5
  BB 25
   Insn 351: point = 1112, n_alt = 4
   Insn 2440: point = 1113, n_alt = -1
	   Creating copy r1134<-r1270@3
   Insn 349: point = 1115, n_alt = 0
   Insn 347: point = 1117, n_alt = 2
   Insn 348: point = 1118, n_alt = 3
   Insn 2439: point = 1120, n_alt = -1
	   Creating copy r1133->r1270@3
   Insn 2294: point = 1121, n_alt = 5
   Insn 2049: point = 1122, n_alt = -2
   Insn 344: point = 1123, n_alt = -1
   Insn 343: point = 1123, n_alt = 3
   Insn 2293: point = 1124, n_alt = 5
  BB 24
   Insn 338: point = 1126, n_alt = 0
   Insn 336: point = 1127, n_alt = 1
   Insn 334: point = 1129, n_alt = 0
   Insn 332: point = 1131, n_alt = 1
   Insn 325: point = 1132, n_alt = 1
   Insn 324: point = 1134, n_alt = 1
   Insn 2292: point = 1136, n_alt = 5
	   Creating copy r1131<-r1271@6
   Insn 331: point = 1138, n_alt = 1
   Insn 330: point = 1140, n_alt = 1
   Insn 328: point = 1142, n_alt = 0
   Insn 322: point = 1144, n_alt = 0
   Insn 2291: point = 1146, n_alt = 5
	   Creating copy r1130<-r1271@6
   Insn 2441: point = 1147, n_alt = -1
   Insn 320: point = 1148, n_alt = 5
   Insn 326: point = 1149, n_alt = 1
   Insn 2290: point = 1151, n_alt = 5
   Insn 321: point = 1152, n_alt = 5
  BB 23
   Insn 313: point = 1154, n_alt = -1
   Insn 312: point = 1154, n_alt = 0
   Insn 2048: point = 1155, n_alt = -2
   Insn 305: point = 1156, n_alt = -1
   Insn 304: point = 1156, n_alt = 1
  BB 18
   Insn 2126: point = 1157, n_alt = -1
   Insn 7: point = 1157, n_alt = -2
   Insn 6: point = 1158, n_alt = 1
   Insn 251: point = 1159, n_alt = 6
   Insn 2289: point = 1160, n_alt = 5
  BB 22
   Insn 1981: point = 1162, n_alt = 9
   Insn 2215: point = 1163, n_alt = -2
   Insn 2214: point = 1163, n_alt = 1
  BB 20
   Insn 2129: point = 1165, n_alt = -1
   Insn 4: point = 1165, n_alt = 3
   Insn 282: point = 1166, n_alt = -2
   Insn 2046: point = 1168, n_alt = -2
   Insn 281: point = 1169, n_alt = -1
   Insn 280: point = 1169, n_alt = -2
  BB 21
   Insn 5: point = 1171, n_alt = 1
   Insn 291: point = 1172, n_alt = -2
   Insn 2047: point = 1174, n_alt = -2
   Insn 290: point = 1175, n_alt = -1
   Insn 289: point = 1175, n_alt = -2
  BB 19
   Insn 275: point = 1177, n_alt = -1
   Insn 2217: point = 1177, n_alt = -2
   Insn 2216: point = 1177, n_alt = 1
   Insn 2045: point = 1178, n_alt = -2
   Insn 271: point = 1179, n_alt = -1
   Insn 270: point = 1179, n_alt = -2
  BB 17
   Insn 243: point = 1180, n_alt = 0
   Insn 2044: point = 1181, n_alt = -2
   Insn 240: point = 1182, n_alt = -1
   Insn 238: point = 1182, n_alt = 6
   Insn 235: point = 1182, n_alt = -1
   Insn 234: point = 1182, n_alt = 1
  BB 16
   Insn 2123: point = 1183, n_alt = -1
   Insn 10: point = 1183, n_alt = 3
   Insn 9: point = 1184, n_alt = 1
   Insn 220: point = 1185, n_alt = 6
   Insn 2288: point = 1186, n_alt = 5
   Insn 219: point = 1187, n_alt = 5
  BB 15
   Insn 212: point = 1189, n_alt = -1
   Insn 2219: point = 1189, n_alt = -2
   Insn 2218: point = 1189, n_alt = 1
   Insn 210: point = 1189, n_alt = 5
  BB 13
   Insn 2120: point = 1191, n_alt = -1
   Insn 188: point = 1191, n_alt = 3
   Insn 2285: point = 1193, n_alt = 5
  BB 14
   Insn 206: point = 1195, n_alt = 4
   Insn 2287: point = 1196, n_alt = 5
	   Creating copy r1126<-r1269@3
   Insn 204: point = 1198, n_alt = 0
   Insn 2043: point = 1200, n_alt = -2
   Insn 203: point = 1201, n_alt = -1
   Insn 200: point = 1201, n_alt = -1
   Insn 198: point = 1201, n_alt = 6
   Insn 196: point = 1201, n_alt = -1
   Insn 195: point = 1201, n_alt = 5
   Insn 2286: point = 1202, n_alt = 5
	   Creating copy r1125<-r1269@3
   Insn 2438: point = 1203, n_alt = -1
  BB 12
   Insn 185: point = 1205, n_alt = -1
   Insn 184: point = 1205, n_alt = 0
   Insn 2042: point = 1206, n_alt = -2
   Insn 177: point = 1207, n_alt = -1
   Insn 176: point = 1207, n_alt = 1
  BB 10
   Insn 2118: point = 1208, n_alt = -1
   Insn 2281: point = 1208, n_alt = 7
   Insn 1943: point = 1210, n_alt = 5
  BB 11
   Insn 172: point = 1212, n_alt = 6
   Insn 2284: point = 1213, n_alt = 5
	   Creating copy r1123<-r1267@3
   Insn 2041: point = 1215, n_alt = -2
   Insn 170: point = 1216, n_alt = -1
   Insn 167: point = 1216, n_alt = -1
   Insn 165: point = 1216, n_alt = 6
   Insn 163: point = 1216, n_alt = -1
   Insn 162: point = 1216, n_alt = 5
   Insn 2283: point = 1217, n_alt = 5
	   Creating copy r1122<-r1267@3
   Insn 2436: point = 1218, n_alt = -1
	   Creating copy r1267<-r1268@3
   Insn 2437: point = 1220, n_alt = -1
   Insn 2282: point = 1221, n_alt = 7
	   Creating copy r1121->r1268@3
   Insn 160: point = 1223, n_alt = 5
  BB 9
   Insn 157: point = 1225, n_alt = -1
   Insn 156: point = 1225, n_alt = 0
   Insn 2040: point = 1226, n_alt = -2
   Insn 149: point = 1227, n_alt = -1
   Insn 148: point = 1227, n_alt = 1
  BB 8
   Insn 2115: point = 1228, n_alt = -1
   Insn 142: point = 1228, n_alt = 4
   Insn 2280: point = 1229, n_alt = 5
	   Creating copy r1119<-r1266@3
   Insn 140: point = 1231, n_alt = 0
   Insn 2039: point = 1233, n_alt = -2
   Insn 139: point = 1234, n_alt = -1
   Insn 136: point = 1234, n_alt = -1
   Insn 134: point = 1234, n_alt = 6
   Insn 132: point = 1234, n_alt = -1
   Insn 131: point = 1234, n_alt = 5
   Insn 2279: point = 1235, n_alt = 5
	   Creating copy r1118<-r1266@3
   Insn 2435: point = 1236, n_alt = -1
  BB 7
   Insn 2113: point = 1238, n_alt = -1
   Insn 124: point = 1238, n_alt = 3
   Insn 2278: point = 1240, n_alt = 5
  BB 6
   Insn 121: point = 1242, n_alt = -1
   Insn 120: point = 1242, n_alt = 0
   Insn 2038: point = 1243, n_alt = -2
   Insn 113: point = 1244, n_alt = -1
   Insn 112: point = 1244, n_alt = 1
  BB 4
   Insn 2111: point = 1245, n_alt = -1
   Insn 2274: point = 1245, n_alt = 7
   Insn 1942: point = 1247, n_alt = 5
  BB 5
   Insn 108: point = 1249, n_alt = 6
   Insn 2277: point = 1250, n_alt = 5
	   Creating copy r1116<-r1264@3
   Insn 2037: point = 1252, n_alt = -2
   Insn 106: point = 1253, n_alt = -1
   Insn 103: point = 1253, n_alt = -1
   Insn 101: point = 1253, n_alt = 6
   Insn 99: point = 1253, n_alt = -1
   Insn 98: point = 1253, n_alt = 5
   Insn 2276: point = 1254, n_alt = 5
	   Creating copy r1115<-r1264@3
   Insn 2433: point = 1255, n_alt = -1
	   Creating copy r1264<-r1265@3
   Insn 2434: point = 1257, n_alt = -1
   Insn 2275: point = 1258, n_alt = 7
	   Creating copy r1114->r1265@3
   Insn 96: point = 1260, n_alt = 5
  BB 3
   Insn 93: point = 1262, n_alt = -1
   Insn 92: point = 1262, n_alt = 0
   Insn 2036: point = 1263, n_alt = -2
   Insn 85: point = 1264, n_alt = -1
   Insn 84: point = 1264, n_alt = 1
  BB 2
   Insn 81: point = 1265, n_alt = -1
   Insn 80: point = 1265, n_alt = 0
   Insn 2035: point = 1266, n_alt = -2
   Insn 73: point = 1267, n_alt = -1
   Insn 2273: point = 1267, n_alt = 13
   Insn 69: point = 1269, n_alt = 0
   Insn 2272: point = 1271, n_alt = 13
   Insn 64: point = 1273, n_alt = 0
   Insn 72: point = 1275, n_alt = 1
   Insn 68: point = 1275, n_alt = 3
   Insn 2271: point = 1277, n_alt = 5
   Insn 63: point = 1278, n_alt = 3
   Insn 2270: point = 1280, n_alt = 5
   Insn 60: point = 1281, n_alt = -1
   Insn 40: point = 1281, n_alt = -1
   Insn 39: point = 1281, n_alt = 5
  r971 is added to live at bb2 start
  r972 is added to live at bb2 start
  BB 52
   Insn 811: point = 1282, n_alt = -1
   Insn 810: point = 1282, n_alt = 0
   Insn 798: point = 1283, n_alt = 0
   Insn 795: point = 1284, n_alt = 0
  BB 63
   Insn 1000: point = 1286, n_alt = -1
   Insn 999: point = 1286, n_alt = 0
   Insn 987: point = 1287, n_alt = 0
   Insn 984: point = 1288, n_alt = 0
df_worklist_dataflow_doublequeue: n_basic_blocks 105 n_edges 150 count 186 (  1.8)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  355  356  481  483  996 1109 1110 1111 1112
    liveout: 2:

        7   13  102  103  355  356

BB 3:
    killed: 3:

      100  997
    livein: 3:

      355  356
    liveout: 3:

        7   13  102  103  355  356

BB 4:
    killed: 4:

      967 1113
    livein: 4:

      355  356
    liveout: 4:

        7   13  102  103  355  356  967

BB 5:
    killed: 5:

      967  998 1114 1115 1116 1264 1265
    livein: 5:

      355  356
    liveout: 5:

        7   13  102  103  355  356  967

BB 6:
    killed: 6:

      100  999
    livein: 6:

      355  356  967
    liveout: 6:

        7   13  102  103  355  356  967

BB 7:
    gen: 7:

      967
    killed: 7:

      125 1117
    livein: 7:

      355  356  967
    liveout: 7:

        7   13  102  103  125  355  356  967

BB 8:
    gen: 8:

      967
    killed: 8:

      125 1000 1118 1119 1266
    livein: 8:

      355  356  967
    liveout: 8:

        7   13  102  103  125  355  356  967

BB 9:
    killed: 9:

      100 1001
    livein: 9:

      355  356
    liveout: 9:

        7   13  102  103  355  356

BB 10:
    killed: 10:

      967 1120
    livein: 10:

      355  356
    liveout: 10:

        7   13  102  103  355  356  967

BB 11:
    killed: 11:

      967 1002 1121 1122 1123 1267 1268
    livein: 11:

      355  356
    liveout: 11:

        7   13  102  103  355  356  967

BB 12:
    killed: 12:

      100 1003
    livein: 12:

      355  356  967
    liveout: 12:

        7   13  102  103  355  356  967

BB 13:
    gen: 13:

      967
    killed: 13:

      125 1124
    livein: 13:

      355  356  967
    liveout: 13:

        7   13  102  103  125  355  356  967

BB 14:
    gen: 14:

      967
    killed: 14:

      125 1004 1125 1126 1269
    livein: 14:

      355  356  967
    liveout: 14:

        7   13  102  103  125  355  356  967

BB 15:
    gen: 15:

      125
    killed: 15:

      100  101  519
    livein: 15:

      125  355  356  967
    liveout: 15:

        7   13  102  103  125  355  356  519  967

BB 16:
    gen: 16:

      967
    killed: 16:

      342  343  521 1127
    livein: 16:

      355  356  967
    liveout: 16:

        7   13  102  103  342  343  355  356  967

BB 17:
    gen: 17:

      125
    killed: 17:

      100 1005
    livein: 17:

      125  355  356  519  967
    liveout: 17:

        7   13  102  103  125  355  356  519  967

BB 18:
    gen: 18:

      519  967
    killed: 18:

      342  343 1128
    livein: 18:

      355  356  519  967
    liveout: 18:

        7   13  102  103  342  343  355  356  967

BB 19:
    gen: 19:

      125
    killed: 19:

      100  101 1006
    livein: 19:

      125  355  356  967
    liveout: 19:

        7   13  102  103  125  355  356  967

BB 20:
    gen: 20:

      125
    killed: 20:

      342  408 1007
    livein: 20:

      125  355  356  967
    liveout: 20:

        7   13  102  103  342  355  356  408  967

BB 21:
    gen: 21:

      125
    killed: 21:

      342  408 1008
    livein: 21:

      125  355  356  967
    liveout: 21:

        7   13  102  103  342  355  356  408  967

BB 22:
    gen: 22:

      408
    killed: 22:

      100  101  343
    livein: 22:

      342  355  356  408  967
    liveout: 22:

        7   13  102  103  342  343  355  356  967

BB 23:
    killed: 23:

      100 1009
    livein: 23:

      342  343  355  356  967
    liveout: 23:

        7   13  102  103  342  343  355  356  967

BB 24:
    gen: 24:

      342  355  356
    killed: 24:

      100  533  534  535  537  538  539  540  543  545  546
      548  973 1101 1102 1129 1130 1131 1271
    livein: 24:

      342  343  355  356  967
    liveout: 24:

        7   13  102  103  342  343  355  356  967  973

BB 25:
    gen: 25:

      967
    killed: 25:

      146  552  553 1010 1132 1133 1134 1270
    livein: 25:

      342  343  355  356  967  973
    liveout: 25:

        7   13  102  103  342  343  355  356  967  973

BB 26:
    gen: 26:

      343  355  356  973
    killed: 26:

      100  556  557  558  559  561  562  563  566  568  569
      571 1103 1104 1135 1136 1137 1273
    livein: 26:

      342  343  355  356  967  973
    liveout: 26:

        7   13  102  103  342  343  355  356  967

BB 27:
    gen: 27:

      967
    killed: 27:

      154  575  576 1011 1138 1139 1140 1272
    livein: 27:

      342  343  355  356  967
    liveout: 27:

        7   13  102  103  342  343  355  356  967

BB 28:
    killed: 28:

      100 1012
    livein: 28:

      342  343  355  356  967
    liveout: 28:

        7   13  102  103  342  343  355  356  967

BB 29:
    gen: 29:

      967
    killed: 29:

      409  410  411  412  413 1013 1014 1141 1142 1143
    livein: 29:

      355  356  967
    liveout: 29:

        7   13  102  103  355  356  409  410  412  413  967

BB 30:
    gen: 30:

      342  355  356
    killed: 30:

      100  585  586  587  589  590  591  592  595  597  598
      600  973 1105 1106 1144 1145 1146 1274
    livein: 30:

      342  343  355  356  967
    liveout: 30:

        7   13  102  103  343  355  356  967  973

BB 31:
    gen: 31:

      967
    killed: 31:

      160  409  410 1015 1147 1148
    livein: 31:

      343  355  356  967  973
    liveout: 31:

        7   13  102  103  160  343  355  356  409  410  967
      973

BB 32:
    gen: 32:

      967
    killed: 32:

      160  409  410  605  606 1016 1149 1150 1151 1275
    livein: 32:

      343  355  356  967  973
    liveout: 32:

        7   13  102  103  160  343  355  356  409  410  967
      973

BB 33:
    gen: 33:

      343  355  356  973
    killed: 33:

      100  609  610  611  612  614  615  616  619  621  622
      624 1107 1108 1152 1153 1154 1276
    livein: 33:

      160  343  355  356  409  410  967  973
    liveout: 33:

        7   13  102  103  160  355  356  409  410  967

BB 34:
    gen: 34:

      160
    killed: 34:

      412  413 1017 1155
    livein: 34:

      160  355  356  409  410  967
    liveout: 34:

        7   13  102  103  355  356  409  410  412  413  967

BB 35:
    gen: 35:

      160
    killed: 35:

      412  413  627  628 1018 1156 1157 1277
    livein: 35:

      160  355  356  409  410  967
    liveout: 35:

        7   13  102  103  355  356  409  410  412  413  967

BB 36:
    killed: 36:

      100  630 1019
    livein: 36:

      355  356  409  410  412  413  967
    liveout: 36:

        7   13  102  103  355  356  409  410  412  413  630
      967

BB 37:
    killed: 37:

      416  970 1158 1159 1278
    livein: 37:

      355  356  967
    liveout: 37:

        7   13  102  103  355  356  416  967  970

BB 38:
    gen: 38:

      409  410  412  413
    killed: 38:

      100  169  171  357  358  416  632  634  636  637  639
      640  642  970 1160 1161 1162 1163 1279
    livein: 38:

      355  356  409  410  412  413  630  967
    liveout: 38:

        7   13  102  103  171  355  356  416  630  640  967
      970

BB 39:
    gen: 39:

      171  630  640
    livein: 39:

      171  355  356  416  630  640  967  970
    liveout: 39:

        7   13  102  103  355  356  416  967  970

BB 40:
    gen: 40:

      416
    killed: 40:

      339  418  463 1078 1164 1165
    livein: 40:

      355  356  416  967  970
    liveout: 40:

        7   13  102  103  339  355  356  418  463  967  970
     1078

BB 41:
    gen: 41:

      339  967
    killed: 41:

      100  101  346  651 1020 1021 1022 1166
    livein: 41:

      339  355  356  418  463  967  970 1078
    liveout: 41:

        0    7   13  102  103  339  346  355  356  418  463
      967  970 1078

BB 42:
    killed: 42:

      181  346 1023 1024
    livein: 42:

      339  355  356  418  463  967  970 1078
    liveout: 42:

        7   13  102  103  181  339  346  355  356  418  463
      967  970 1078

BB 43:
    killed: 43:

      100  181 1025 1026
    livein: 43:

      339  346  355  356  418  463  967  970 1078
    liveout: 43:

        7   13  102  103  181  339  346  355  356  418  463
      967  970 1078

BB 44:
    gen: 44:

      181
    killed: 44:

      181  346 1027 1028
    livein: 44:

      181  339  355  356  418  463  967  970 1078
    liveout: 44:

        7   13  102  103  181  339  346  355  356  418  463
      967  970 1078

BB 45:
    gen: 45:

      181  346
    killed: 45:

      100  183  359  664 1029 1030
    livein: 45:

      181  339  346  355  356  418  463  967  970 1078
    liveout: 45:

        7   13  102  103  181  183  339  346  355  356  359
      418  463  967  970 1078

BB 46:
    gen: 46:

      356  359 1078
    killed: 46:

      193  195  360  361  402  403  404  672  674  681  682
     1031 1167 1168 1169 1170 1171 1172 1173 1174 1280 1281
    livein: 46:

      181  183  339  346  355  356  359  418  463  967  970
     1078
    liveout: 46:

        7   13  102  103  181  183  193  195  339  346  355
      356  360  361  402  403  404  418  463  967  970 1078

BB 47:
    gen: 47:

      356  359 1078
    killed: 47:

      193  195  360  361  402  403  404  688  692  695 1175
     1176 1177 1178 1179 1180
    livein: 47:

      181  183  339  346  355  356  359  418  463  967  970
     1078
    liveout: 47:

        7   13  102  103  181  183  193  195  339  346  355
      356  360  361  402  403  404  418  463  967  970 1078

BB 48:
    gen: 48:

      354  402  403
    killed: 48:

      100  400  401  696  697 1074 1075 1181
    livein: 48:

      183  193  195  339  346  354  355  356  360  361  402
      403  404  418  463  967  970  988 1096 1097 1098
    liveout: 48:

        7   13  102  103  183  193  195  339  346  354  355
      356  360  361  400  401  402  403  404  418  463  967
      970  988 1096 1097 1098

BB 49:
    gen: 49:

      401  988
    killed: 49:

      100  701 1182 1183 1184
    livein: 49:

      183  193  195  339  346  354  355  356  360  361  400
      401  402  403  404  418  463  967  970  988 1096 1097
     1098
    liveout: 49:

        7   13  102  103  183  193  195  339  346  354  355
      356  360  361  400  402  403  404  418  463  701  967
      970  988 1096 1097 1098

BB 50:
    gen: 50:

      400  701
    killed: 50:

      100 1099
    livein: 50:

      183  193  195  339  346  354  355  356  360  361  400
      402  403  404  418  463  701  967  970  988 1096 1097
     1098
    liveout: 50:

        7   13  102  103  183  193  195  339  346  354  355
      356  360  361  402  403  404  418  463  967  970  988
     1096 1097 1098 1099

BB 51:
    gen: 51:

     1096 1098 1099
    killed: 51:

      181  199  345 1078
    livein: 51:

      183  193  195  339  346  354  355  356  402  403  404
      418  463  967  970 1096 1098 1099
    liveout: 51:

        7   13  102  103  181  183  193  195  339  345  346
      354  355  356  402  403  404  418  463  967  970 1078

BB 52:
    gen: 52:

      360  361  402  403 1097
    killed: 52:

      100  402  403 1097
    livein: 52:

      183  193  195  339  346  354  355  356  360  361  402
      403  404  418  463  967  970  988 1096 1097 1098
    liveout: 52:

        7   13  102  103  183  193  195  339  346  354  355
      356  360  361  402  403  404  418  463  967  970  988
     1096 1097 1098

BB 53:
    gen: 53:

     1096 1097 1098
    killed: 53:

      181  341  345 1078
    livein: 53:

      183  193  195  339  346  354  355  356  402  403  404
      418  463  967  970 1096 1097 1098
    liveout: 53:

        7   13  102  103  181  183  193  195  339  345  346
      354  355  356  402  403  404  418  463  967  970 1078

BB 54:
    gen: 54:

      181  404 1078
    killed: 54:

      341  354  703  988 1096 1097 1098
    livein: 54:

      181  183  193  195  339  346  355  356  360  361  402
      403  404  418  463  967  970 1078
    liveout: 54:

        7   13  102  103  183  193  195  339  346  354  355
      356  360  361  402  403  404  418  463  967  970  988
     1096 1097 1098

BB 55:
    gen: 55:

      181  193  195  402  403
    killed: 55:

      100  200  201  362  704 1032 1033 1034 1035 1072 1073
     1185
    livein: 55:

      181  183  193  195  339  345  346  354  355  356  402
      403  404  418  463  967  970 1078
    liveout: 55:

        7   13  102  103  181  183  193  195  339  345  346
      354  355  356  362  402  403  404  418  463  967  970
     1078

BB 56:
    gen: 56:

      181
    killed: 56:

      100 1036
    livein: 56:

      181  183  193  195  339  345  346  354  355  356  362
      402  403  404  418  463  967  970 1078
    liveout: 56:

        7   13  102  103  181  183  193  195  339  345  346
      354  355  356  362  402  403  404  418  463  967  970
     1078

BB 57:
    gen: 57:

      183  193  195  355  404 1078
    killed: 57:

      363  397  398  716  720  721 1186 1187 1188
    livein: 57:

      181  183  193  195  339  345  346  354  355  356  362
      402  403  404  418  463  967  970 1078
    liveout: 57:

        7   13  102  103  181  193  195  339  345  346  354
      355  356  362  363  397  398  402  403  404  418  463
      967  970

BB 58:
    gen: 58:

      183  193  195  355 1078
    killed: 58:

      363  397  398  404  727  729  734  735 1037 1189 1190
     1191 1192 1193 1282 1283
    livein: 58:

      181  183  193  195  339  345  346  354  355  356  362
      402  403  418  463  967  970 1078
    liveout: 58:

        7   13  102  103  181  193  195  339  345  346  354
      355  356  362  363  397  398  402  403  404  418  463
      967  970

BB 59:
    gen: 59:

      354  397  398
    killed: 59:

      100  395  396  736  737 1076 1077 1194
    livein: 59:

      193  195  339  346  354  355  356  362  363  397  398
      402  403  404  418  463  967  970  986 1092 1093 1094
    liveout: 59:

        7   13  102  103  193  195  339  346  354  355  356
      362  363  395  396  397  398  402  403  404  418  463
      967  970  986 1092 1093 1094

BB 60:
    gen: 60:

      396  986
    killed: 60:

      100  741 1195 1196 1197
    livein: 60:

      193  195  339  346  354  355  356  362  363  395  396
      397  398  402  403  404  418  463  967  970  986 1092
     1093 1094
    liveout: 60:

        7   13  102  103  193  195  339  346  354  355  356
      362  363  395  397  398  402  403  404  418  463  741
      967  970  986 1092 1093 1094

BB 61:
    gen: 61:

      395  741
    killed: 61:

      100 1095
    livein: 61:

      193  195  339  346  354  355  356  362  363  395  397
      398  402  403  404  418  463  741  967  970  986 1092
     1093 1094
    liveout: 61:

        7   13  102  103  193  195  339  346  354  355  356
      362  363  397  398  402  403  404  418  463  967  970
      986 1092 1093 1094 1095

BB 62:
    gen: 62:

     1092 1093 1095
    killed: 62:

      173  181  220  345
    livein: 62:

      193  195  339  346  355  356  362  397  398  402  403
      418  463  967  970 1092 1093 1095
    liveout: 62:

        7   13  102  103  173  181  193  195  339  345  346
      355  356  362  397  398  402  403  418  463  967  970

BB 63:
    gen: 63:

      363  397  398  404 1094
    killed: 63:

      100  397  398 1094
    livein: 63:

      193  195  339  346  354  355  356  362  363  397  398
      402  403  404  418  463  967  970  986 1092 1093 1094
    liveout: 63:

        7   13  102  103  193  195  339  346  354  355  356
      362  363  397  398  402  403  404  418  463  967  970
      986 1092 1093 1094

BB 64:
    gen: 64:

     1092 1093 1094
    killed: 64:

      173  181  345  420
    livein: 64:

      193  195  339  346  355  356  362  397  398  402  403
      418  463  967  970 1092 1093 1094
    liveout: 64:

        7   13  102  103  173  181  193  195  339  345  346
      355  356  362  397  398  402  403  418  463  967  970

BB 65:
    gen: 65:

      181  345
    killed: 65:

      420  986 1092 1093 1094
    livein: 65:

      181  193  195  339  345  346  354  355  356  362  363
      397  398  402  403  404  418  463  967  970
    liveout: 65:

        7   13  102  103  193  195  339  346  354  355  356
      362  363  397  398  402  403  404  418  463  967  970
      986 1092 1093 1094

BB 66:
    gen: 66:

      193  195  362  397  398
    killed: 66:

      100  101  221  222  340  743 1038 1039 1040 1198
    livein: 66:

      173  181  193  195  339  345  346  355  356  362  397
      398  402  403  418  463  967  970
    liveout: 66:

        7   13  102  103  173  181  339  340  345  346  355
      356  362  397  398  402  403  418  463  967  970

BB 67:
    gen: 67:

      345  362  402  403
    killed: 67:

      173  340  347  397  398
    livein: 67:

      181  339  345  346  355  356  362  402  403  418  463
      967  970
    liveout: 67:

        7   13  102  103  173  181  339  340  346  347  355
      356  397  398  418  463  967  970

BB 68:
    killed: 68:

      347
    livein: 68:

      173  181  339  340  346  355  356  397  398  418  463
      967  970
    liveout: 68:

        7   13  102  103  173  181  339  340  346  347  355
      356  397  398  418  463  967  970

BB 69:
    gen: 69:

      340  418  970
    killed: 69:

      100  101  227  348  364  365  747  748  749  750  751
      752 1041 1199 1200
    livein: 69:

      173  181  339  340  346  347  355  356  397  398  418
      463  967  970
    liveout: 69:

        7   13  102  103  173  181  227  339  346  347  348
      355  356  364  365  397  398  463  748  752  967  970

BB 70:
    gen: 70:

      348
    killed: 70:

      389  393  423  754  755  756 1201
    livein: 70:

      173  181  227  339  346  347  348  355  356  364  365
      397  398  463  967  970
    liveout: 70:

        7   13  102  103  173  181  227  339  346  347  348
      355  356  364  365  389  393  397  398  423  463  967
      970

BB 71:
    gen: 71:

      348  365  748  752
    killed: 71:

      348  389  393  423  757  759  760
    livein: 71:

      173  181  227  339  346  347  348  355  356  364  365
      397  398  463  748  752  967  970
    liveout: 71:

        7   13  102  103  173  181  227  339  346  347  348
      355  356  364  365  389  393  397  398  423  463  967
      970

BB 72:
    gen: 72:

      227  347
    killed: 72:

      100  101  366  763 1202
    livein: 72:

      173  181  227  339  346  347  348  355  356  364  365
      389  393  397  398  423  463  967  970
    liveout: 72:

        7   13  102  103  173  181  339  346  347  348  355
      356  364  365  366  389  393  397  398  423  463  967
      970

BB 73:
    gen: 73:

      181  366  397
    killed: 73:

      100  349  764  765  767  768  769 1042 1203 1204
    livein: 73:

      173  181  339  346  347  348  355  356  364  365  366
      389  393  397  423  463  967  970
    liveout: 73:

        7   13  102  103  173  339  346  347  348  349  355
      356  364  365  389  393  423  463  967  970

BB 74:
    gen: 74:

      349
    killed: 74:

      349  772
    livein: 74:

      173  339  346  347  348  349  355  356  364  365  389
      393  423  463  967  970
    liveout: 74:

        7   13  102  103  173  339  346  347  348  349  355
      356  364  365  389  393  423  463  967  970

BB 75:
    gen: 75:

      181  366  398
    killed: 75:

      100  349  773  774  776  777  778 1043 1205 1206
    livein: 75:

      173  181  339  346  347  348  355  356  364  365  366
      389  393  398  423  463  967  970
    liveout: 75:

        7   13  102  103  173  181  339  346  347  348  349
      355  356  364  365  389  393  423  463  967  970

BB 76:
    gen: 76:

      181
    killed: 76:

      100 1044
    livein: 76:

      173  181  339  346  347  348  349  355  356  364  365
      389  393  423  463  967  970
    liveout: 76:

        7   13  102  103  173  339  346  347  348  349  355
      356  364  365  389  393  423  463  967  970

BB 77:
    gen: 77:

      349
    killed: 77:

      349  783
    livein: 77:

      173  339  346  347  348  349  355  356  364  365  389
      393  423  463  967  970
    liveout: 77:

        7   13  102  103  173  339  346  347  348  349  355
      356  364  365  389  393  423  463  967  970

BB 78:
    gen: 78:

      339  348
    killed: 78:

      100  101  368  784  785  786  787 1045 1207
    livein: 78:

      173  339  346  347  348  349  355  356  364  365  389
      393  423  463  967  970
    liveout: 78:

        7   13  102  103  173  339  346  347  348  349  355
      356  364  365  368  389  393  423  463  967  970

BB 79:
    gen: 79:

      346  967
    killed: 79:

      100  101  353  794 1208
    livein: 79:

      339  346  355  356  368  389  463  967  970
    liveout: 79:

        7   13  102  103  339  346  353  355  356  368  389
      463  967  970

BB 80:
    livein: 80:

      339  346  353  355  356  368  389  463  967  970
    liveout: 80:

        7   13  102  103  339  346  353  355  356  368  389
      463  967  970

BB 81:
    gen: 81:

      173  347  349  364  368  389
    killed: 81:

      216  279  394  429 1087 1088 1089 1090 1091 1209
    livein: 81:

      173  339  346  347  348  349  355  356  364  365  368
      389  393  423  463  967  970
    liveout: 81:

        7   13  102  103  216  279  339  346  348  355  356
      365  393  423  463  967  970 1087 1088 1089 1090 1091

BB 82:
    gen: 82:

      393 1087 1091
    killed: 82:

      100  796  798  801 1210
    livein: 82:

      216  279  339  346  348  355  356  365  393  423  463
      967  970 1087 1088 1089 1090 1091
    liveout: 82:

        7   13  102  103  216  279  339  346  348  355  356
      365  393  423  463  801  967  970 1087 1088 1089 1090
     1091

BB 83:
    gen: 83:

      801 1087
    killed: 83:

      100  352  821 1211
    livein: 83:

      216  279  339  346  348  355  356  365  393  423  463
      801  967  970 1087 1088 1089 1090 1091
    liveout: 83:

        7   13  102  103  216  279  339  346  348  352  355
      356  365  393  423  463  801  821  967  970 1087 1088
     1089 1090 1091

BB 84:
    gen: 84:

      352
    killed: 84:

      350  351
    livein: 84:

      216  279  339  346  348  352  355  356  365  393  423
      463  967  970 1087 1088 1089 1090 1091
    liveout: 84:

        7   13  102  103  216  279  339  346  348  350  351
      352  355  356  365  393  423  463  967  970 1087 1088
     1089 1090 1091

BB 85:
    gen: 85:

      216  801
    killed: 85:

      350  351  352  803  804  805  807  808  809  810  813
      814  815 1212 1213 1214 1215 1216 1217 1218 1219 1284
    livein: 85:

      216  279  339  346  348  355  356  365  393  423  463
      801  967  970 1087 1088 1089 1090 1091
    liveout: 85:

        7   13  102  103  216  279  339  346  348  350  351
      352  355  356  365  393  423  463  967  970 1087 1088
     1089 1090 1091

BB 86:
    gen: 86:

      216  801  821
    killed: 86:

      350  351  352  817  818  819  822  823  824  827  828
      829 1220 1221 1222 1223 1224 1225 1226
    livein: 86:

      216  279  339  346  348  355  356  365  393  423  463
      801  821  967  970 1087 1088 1089 1090 1091
    liveout: 86:

        7   13  102  103  216  279  339  346  348  350  351
      352  355  356  365  393  423  463  967  970 1087 1088
     1089 1090 1091

BB 87:
    gen: 87:

      279  348  350  351  352  365  393  423 1088 1090
    killed: 87:

      100  101  279  393  830  833  834 1046 1047 1048 1090
     1227 1228 1285
    livein: 87:

      216  279  339  346  348  350  351  352  355  356  365
      393  423  463  967  970 1087 1088 1089 1090 1091
    liveout: 87:

        7   13  102  103  216  279  339  346  348  355  356
      365  393  423  463  967  970 1087 1088 1089 1090 1091

BB 88:
    gen: 88:

     1088 1089
    killed: 88:

      368  389
    livein: 88:

      339  346  355  356  463  967  970 1088 1089
    liveout: 88:

        7   13  102  103  339  346  355  356  368  389  463
      967  970

BB 89:
    gen: 89:

      353
    killed: 89:

      353 1049
    livein: 89:

      339  346  353  355  356  368  389  463  967  970
    liveout: 89:

        7   13  102  103  339  346  353  355  356  368  389
      463  967  970

BB 90:
    gen: 90:

      353
    killed: 90:

      100  283 1050 1051
    livein: 90:

      339  346  353  355  356  368  389  463  967  970
    liveout: 90:

        7   13  102  103  283  339  346  353  355  356  368
      389  463  967  970

BB 91:
    gen: 91:

      283
    killed: 91:

      353 1052
    livein: 91:

      283  339  346  355  356  368  389  463  967  970
    liveout: 91:

        7   13  102  103  339  346  353  355  356  368  389
      463  967  970

BB 92:
    gen: 92:

      346  353  389
    killed: 92:

      100  369  370  371  372  373  374  375 1053 1054 1055
     1056 1057 1058 1059 1229 1230
    livein: 92:

      339  346  353  355  356  368  389  463  967  970
    liveout: 92:

        7   13  102  103  339  355  356  368  370  372  373
      374  375  389  463  967  970

BB 93:
    gen: 93:

      339  463
    killed: 93:

      100  339  463  857 1231 1232
    livein: 93:

      339  355  356  463  967  970
    liveout: 93:

        7   13  102  103  339  355  356  463  967  970

BB 94:
    liveout: 94:

        7   13  102  103

BB 95:
    gen: 95:

      389
    killed: 95:

      100
    livein: 95:

      339  355  356  368  370  372  373  374  375  389  463
      967  970
    liveout: 95:

        7   13  102  103  339  355  356  368  370  372  373
      374  375  389  463  967  970

BB 96:
    gen: 96:

      368  389
    killed: 96:

      860  968  969 1083 1084 1085 1086
    livein: 96:

      339  355  356  368  370  372  373  374  375  389  463
      967  970
    liveout: 96:

        7   13  102  103  339  355  356  370  372  373  374
      375  463  860  967  970 1083 1084 1085 1086

BB 97:
    killed: 97:

      968  969
    livein: 97:

      339  355  356  368  370  372  373  374  375  389  463
      967  970
    liveout: 97:

        7   13  102  103  339  355  356  368  370  372  373
      374  375  389  463  967  968  969  970

BB 98:
    gen: 98:

      370  372  373  374  375  860 1083 1084 1085 1086
    killed: 98:

      100  296  309  314  380  858  859  861  862  863  864
      866  867  868  869  870  873  875  876  877  880  881
      882  885  886  887  889  894  895  896  899  900  901
      904  905  906  908 1060 1061 1062 1063 1064 1084 1233
     1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244
     1245 1246 1247
    livein: 98:

      339  355  356  370  372  373  374  375  463  860  967
      970 1083 1084 1085 1086
    liveout: 98:

        7   13  102  103  339  355  356  370  372  373  374
      375  463  860  967  970 1083 1084 1085 1086

BB 104:
    gen: 104:

     1083 1084 1085 1086
    killed: 104:

      368  389  968  969
    livein: 104:

      339  355  356  370  372  373  374  375  463  967  970
     1083 1084 1085 1086
    liveout: 104:

        7   13  102  103  339  355  356  368  370  372  373
      374  375  389  463  967  968  969  970

BB 99:
    gen: 99:

      368  389  968  969
    killed: 99:

      915 1079 1080 1081 1082
    livein: 99:

      339  355  356  368  370  372  373  374  375  389  463
      967  968  969  970
    liveout: 99:

        7   13  102  103  339  355  356  370  372  373  374
      375  463  915  967  970 1079 1080 1081 1082

BB 100:
    gen: 100:

      370  372  373  374  375  915 1079 1080 1081 1082
    killed: 100:

      100  452  457  475  913  914  916  917  918  919  921
      922  923  924  925  928  930  931  934  935  938  939
      941  946  947  950  951  954  955  957 1065 1066 1067
     1068 1080 1248 1249 1250 1251 1252 1253 1254 1255 1256
     1257 1258 1259 1260 1261 1262
    livein: 100:

      339  355  356  370  372  373  374  375  463  915  967
      970 1079 1080 1081 1082
    liveout: 100:

        7   13  102  103  339  355  356  370  372  373  374
      375  463  915  967  970 1079 1080 1081 1082

BB 101:
    livein: 101:

      339  355  356  463  967  970
    liveout: 101:

        7   13  102  103  339  355  356  463  967  970

BB 102:
    gen: 102:

      339  970
    killed: 102:

      418 1069 1070 1078 1263
    livein: 102:

      339  355  356  463  967  970
    liveout: 102:

        7   13  102  103  339  355  356  418  463  967  970
     1078

BB 103:
    liveout: 103:

        7   13  102  103
 r125: [1238..1238] [1228..1231] [1195..1198] [1189..1191] [1175..1182] [1169..1170]
 r146: [1112..1115]
 r154: [1072..1075]
 r160: [1024..1037] [986..1020] [954..955]
 r169: [921..922]
 r171: [910..914]
 r173: [609..609] [579..600] [443..570]
 r181: [862..866] [856..856] [770..849] [732..738] [647..729] [609..615] [496..606] [487..489]
 r183: [1282..1285] [683..845] [654..679]
 r193: [1282..1289] [803..819] [598..799]
 r195: [1282..1289] [803..816] [596..793]
 r199: [733..736]
 r200: [711..714]
 r201: [717..718]
 r216: [311..450]
 r220: [610..613]
 r221: [590..595]
 r222: [594..597]
 r227: [523..558]
 r279: [337..449] [311..312]
 r283: [292..296]
 r296: [230..232]
 r309: [162..206]
 r314: [168..205]
 r339: [1282..1289] [0..898]
 r340: [579..581] [564..572]
 r341: [768..772] [724..727]
 r342: [1183..1184] [1171..1171] [1162..1165] [1066..1158]
 r343: [1183..1183] [1162..1162] [1011..1157]
 r345: [732..732] [645..723] [609..611] [581..604] [571..578]
 r346: [1282..1289] [864..870] [856..859] [274..852]
 r347: [579..579] [451..569]
 r348: [548..551] [311..539]
 r349: [490..500] [448..472]
 r350: [418..418] [381..389] [326..347]
 r351: [418..419] [381..381] [330..339]
 r352: [418..421] [381..385] [327..343]
 r353: [294..300] [286..289] [280..283]
 r354: [1282..1289] [618..773]
 r355: [1282..1289] [0..1271]
 r356: [1282..1289] [0..1267]
 r357: [919..938]
 r358: [927..940]
 r359: [804..843] [779..802]
 r360: [1282..1285] [803..805] [741..796]
 r361: [1282..1285] [803..803] [741..792]
 r362: [1286..1289] [581..702] [573..578]
 r363: [1286..1289] [680..695] [618..656]
 r364: [451..565]
 r365: [311..550]
 r366: [515..519] [488..489]
 r368: [441..453] [247..308] [114..126]
 r369: [272..278]
 r370: [11..275]
 r371: [266..270]
 r372: [11..267]
 r373: [11..263]
 r374: [11..258]
 r375: [11..253]
 r380: [146..207]
 r389: [537..537] [439..526] [245..306] [112..124]
 r393: [537..541] [311..531]
 r394: [437..444]
 r395: [619..633]
 r396: [623..629]
 r397: [1286..1289] [680..686] [579..664] [517..574] [488..489]
 r398: [1286..1289] [680..680] [579..651] [515..576]
 r400: [742..756]
 r401: [746..752]
 r402: [1282..1289] [803..810] [581..776] [575..578]
 r403: [1282..1289] [803..822] [581..782] [577..578]
 r404: [1282..1289] [803..837] [680..791] [618..658]
 r408: [1171..1172] [1163..1166]
 r409: [1024..1034] [973..1017] [939..965]
 r410: [1024..1027] [973..1014] [939..959]
 r411: [967..969]
 r412: [973..983] [956..962] [941..951]
 r413: [973..976] [956..956] [941..948]
 r416: [910..928] [892..901]
 r418: [1282..1289] [891..899] [564..885]
 r420: [643..649] [601..602]
 r423: [537..543] [311..532]
 r429: [435..445]
 r452: [44..75]
 r457: [38..76]
 r463: [1282..1289] [5..893] [0..0]
 r475: [97..99]
 r481: [1274..1278]
 r483: [1270..1275]
 r519: [1189..1189] [1180..1182] [1159..1161]
 r521: [1185..1187]
 r533: [1130..1132]
 r534: [1133..1144]
 r535: [1143..1152]
 r537: [1133..1134]
 r538: [1141..1149]
 r539: [1128..1138]
 r540: [1139..1142]
 r543: [1139..1140]
 r545: [1130..1131]
 r546: [1128..1129]
 r548: [1126..1127]
 r552: [1116..1117]
 r553: [1116..1118]
 r556: [1105..1107]
 r557: [1090..1102]
 r558: [1103..1106]
 r559: [1099..1110]
 r561: [1103..1104]
 r562: [1088..1092]
 r563: [1093..1098]
 r566: [1093..1094]
 r568: [1090..1091]
 r569: [1088..1089]
 r571: [1086..1087]
 r575: [1076..1077]
 r576: [1076..1078]
 r585: [1045..1047]
 r586: [1048..1059]
 r587: [1058..1064]
 r589: [1048..1049]
 r590: [1056..1065]
 r591: [1043..1053]
 r592: [1054..1057]
 r595: [1054..1055]
 r597: [1045..1046]
 r598: [1043..1044]
 r600: [1041..1042]
 r605: [1028..1029]
 r606: [1028..1030]
 r609: [1007..1010]
 r610: [992..1004]
 r611: [1005..1006]
 r612: [1001..1009]
 r614: [1005..1008]
 r615: [990..994]
 r616: [995..1000]
 r619: [995..996]
 r621: [992..993]
 r622: [990..991]
 r624: [988..989]
 r627: [977..978]
 r628: [977..979]
 r630: [910..944]
 r632: [939..942]
 r634: [925..926]
 r636: [917..918]
 r637: [921..933]
 r639: [921..932]
 r640: [910..920]
 r642: [912..913]
 r651: [873..878]
 r664: [843..844]
 r672: [829..833]
 r674: [825..828]
 r681: [813..815]
 r682: [806..807]
 r688: [787..788]
 r692: [785..786]
 r695: [779..781]
 r696: [759..760]
 r697: [753..754]
 r701: [742..747]
 r703: [773..774]
 r704: [713..716]
 r716: [691..692]
 r720: [689..690]
 r721: [683..685]
 r727: [671..675]
 r729: [667..670]
 r734: [654..657]
 r735: [661..662]
 r736: [636..637]
 r737: [630..631]
 r741: [619..624]
 r743: [592..593]
 r747: [553..554]
 r748: [538..557]
 r749: [551..552]
 r750: [551..563]
 r751: [550..562]
 r752: [540..561]
 r754: [533..534]
 r755: [533..535]
 r756: [529..530]
 r757: [545..547]
 r759: [542..544]
 r760: [542..546]
 r763: [517..518]
 r764: [486..488]
 r765: [481..483]
 r767: [475..480]
 r768: [479..482]
 r769: [477..478]
 r772: [467..468]
 r773: [514..515]
 r774: [509..511]
 r776: [503..508]
 r777: [507..510]
 r778: [505..506]
 r783: [491..492]
 r784: [460..462]
 r785: [463..464]
 r786: [458..459]
 r787: [460..461]
 r794: [301..302]
 r796: [429..430]
 r798: [427..428]
 r801: [421..426] [415..417] [373..380]
 r803: [369..370]
 r804: [356..368]
 r805: [350..355]
 r807: [364..376]
 r808: [360..365]
 r809: [354..359]
 r810: [346..353]
 r813: [358..361]
 r814: [352..357]
 r815: [342..351]
 r817: [404..412]
 r818: [398..403]
 r819: [392..397]
 r821: [421..422] [408..417]
 r822: [402..409]
 r823: [396..401]
 r824: [388..395]
 r827: [400..405]
 r828: [394..399]
 r829: [384..393]
 r830: [334..336]
 r833: [320..328]
 r834: [322..323] [316..317]
 r857: [7..8]
 r858: [235..236]
 r859: [233..234]
 r860: [129..250]
 r861: [229..231]
 r862: [225..228]
 r863: [221..222]
 r864: [213..220]
 r866: [227..230]
 r867: [219..226]
 r868: [215..216]
 r869: [213..214]
 r870: [211..212]
 r873: [156..210]
 r875: [194..195]
 r876: [192..193]
 r877: [183..191]
 r880: [201..202]
 r881: [199..200]
 r882: [180..198]
 r885: [187..188]
 r886: [185..186]
 r887: [177..184]
 r889: [170..172]
 r894: [164..165]
 r895: [150..163]
 r896: [144..149]
 r899: [158..159]
 r900: [148..157]
 r901: [141..147]
 r904: [152..153]
 r905: [146..151]
 r906: [138..145]
 r908: [130..133]
 r913: [102..103]
 r914: [100..101]
 r915: [11..115]
 r916: [96..98]
 r917: [92..95]
 r918: [88..89]
 r919: [80..87]
 r921: [94..97]
 r922: [86..93]
 r923: [82..83]
 r924: [80..81]
 r925: [78..79]
 r928: [32..77]
 r930: [66..67]
 r931: [59..65]
 r934: [71..72]
 r935: [56..70]
 r938: [61..62]
 r939: [53..60]
 r941: [46..48]
 r946: [40..41]
 r947: [26..39]
 r950: [34..35]
 r951: [23..33]
 r954: [28..29]
 r955: [20..27]
 r957: [12..15]
 r967: [1282..1289] [1249..1257] [1228..1245] [1212..1220] [0..1208]
 r968: [243..248] [120..122] [110..117]
 r969: [241..249] [120..120] [108..118]
 r970: [1282..1289] [910..934] [0..905]
 r971: [0..1289]
 r972: [0..1289]
 r973: [1090..1148] [992..1063]
 r979: [11..116]
 r981: [129..251]
 r982: [311..452]
 r983: [311..452]
 r984: [311..452]
 r986: [1286..1289] [618..648]
 r987: [1282..1289] [0..900]
 r988: [1282..1285] [741..771]
 r989: [1282..1289] [0..900]
 r990: [1282..1289] [0..900]
 r992: [1282..1289] [0..900]
 r993: [1282..1289] [0..900]
 r996: [1265..1266]
 r997: [1262..1263]
 r998: [1249..1252]
 r999: [1242..1243]
 r1000: [1232..1233]
 r1001: [1225..1226]
 r1002: [1212..1215]
 r1003: [1205..1206]
 r1004: [1199..1200]
 r1005: [1180..1181]
 r1006: [1177..1178]
 r1007: [1167..1168]
 r1008: [1173..1174]
 r1009: [1154..1155]
 r1010: [1116..1122]
 r1011: [1076..1082]
 r1012: [1069..1070]
 r1013: [966..968]
 r1014: [963..964]
 r1015: [1018..1019]
 r1016: [1035..1036]
 r1017: [952..953]
 r1018: [984..985]
 r1019: [945..946]
 r1020: [879..880]
 r1021: [874..875]
 r1022: [871..872]
 r1023: [853..854]
 r1024: [850..851]
 r1025: [867..868]
 r1026: [864..865]
 r1027: [860..861]
 r1028: [857..858]
 r1029: [846..847]
 r1030: [841..842]
 r1031: [823..824]
 r1032: [707..708]
 r1033: [705..706]
 r1034: [703..704]
 r1035: [700..701]
 r1036: [697..698]
 r1037: [665..666]
 r1038: [586..587]
 r1039: [584..585]
 r1040: [582..583]
 r1041: [566..567]
 r1042: [470..471]
 r1043: [498..499]
 r1044: [494..495]
 r1045: [454..455]
 r1046: [329..331]
 r1047: [324..325]
 r1048: [315..319]
 r1049: [284..285]
 r1050: [297..298]
 r1051: [294..295]
 r1052: [290..291]
 r1053: [279..281]
 r1054: [276..277]
 r1055: [271..273]
 r1056: [268..269]
 r1057: [264..265]
 r1058: [259..260]
 r1059: [254..255]
 r1060: [208..209]
 r1061: [173..174]
 r1062: [169..171]
 r1063: [134..135]
 r1064: [129..131]
 r1065: [49..50]
 r1066: [45..47]
 r1067: [16..17]
 r1068: [11..13]
 r1069: [888..889]
 r1070: [886..887]
 r1072: [715..720]
 r1073: [719..721]
 r1074: [761..763]
 r1075: [755..762]
 r1076: [638..640]
 r1077: [632..639]
 r1078: [891..891] [766..882] [732..734] [691..725] [663..679]
 r1079: [11..113]
 r1080: [11..111]
 r1081: [11..109]
 r1082: [11..107]
 r1083: [127..246]
 r1084: [125..244]
 r1085: [123..242]
 r1086: [121..240]
 r1087: [311..442]
 r1088: [309..440]
 r1089: [307..438]
 r1090: [311..436]
 r1091: [311..434]
 r1092: [1286..1289] [616..646] [607..608]
 r1093: [1286..1289] [612..644] [605..608]
 r1094: [1286..1289] [618..642] [603..608]
 r1095: [614..618]
 r1096: [1282..1285] [739..769] [730..731]
 r1097: [1282..1285] [741..767] [728..731]
 r1098: [1282..1285] [735..765] [726..731]
 r1099: [737..741]
 r1101: [1144..1144]
 r1102: [1142..1142]
 r1103: [1106..1106]
 r1104: [1098..1098]
 r1105: [1059..1059]
 r1106: [1057..1057]
 r1107: [1006..1006]
 r1108: [1000..1000]
 r1109: [1279..1280]
 r1110: [1276..1277]
 r1111: [1272..1273]
 r1112: [1268..1269]
 r1113: [1246..1247]
 r1114: [1259..1260]
 r1115: [1253..1254]
 r1116: [1249..1250]
 r1117: [1239..1240]
 r1118: [1234..1235]
 r1119: [1228..1229]
 r1120: [1209..1210]
 r1121: [1222..1223]
 r1122: [1216..1217]
 r1123: [1212..1213]
 r1124: [1192..1193]
 r1125: [1201..1202]
 r1126: [1195..1196]
 r1127: [1185..1186]
 r1128: [1159..1160]
 r1129: [1150..1151]
 r1130: [1145..1146]
 r1131: [1135..1136]
 r1132: [1123..1124]
 r1133: [1119..1121]
 r1134: [1112..1113]
 r1135: [1108..1109]
 r1136: [1099..1100]
 r1137: [1095..1096]
 r1138: [1083..1084]
 r1139: [1079..1081]
 r1140: [1072..1073]
 r1141: [970..971]
 r1142: [960..961]
 r1143: [957..958]
 r1144: [1066..1067]
 r1145: [1060..1061]
 r1146: [1050..1051]
 r1147: [1021..1022]
 r1148: [1015..1016]
 r1149: [1038..1039]
 r1150: [1031..1033]
 r1151: [1024..1025]
 r1152: [1011..1012]
 r1153: [1001..1002]
 r1154: [997..998]
 r1155: [949..950]
 r1156: [980..982]
 r1157: [973..974]
 r1158: [907..908]
 r1159: [902..903]
 r1160: [936..937]
 r1161: [929..930]
 r1162: [923..924]
 r1163: [915..916]
 r1164: [896..897]
 r1165: [894..895]
 r1166: [876..877]
 r1167: [838..839]
 r1168: [834..835]
 r1169: [829..830]
 r1170: [825..826]
 r1171: [820..821]
 r1172: [817..818]
 r1173: [811..814]
 r1174: [808..809]
 r1175: [800..801]
 r1176: [797..798]
 r1177: [794..795]
 r1178: [789..790]
 r1179: [783..784]
 r1180: [777..780]
 r1181: [757..758]
 r1182: [748..750]
 r1183: [748..749]
 r1184: [744..745]
 r1185: [709..712]
 r1186: [693..694]
 r1187: [687..688]
 r1188: [681..684]
 r1189: [676..677]
 r1190: [671..672]
 r1191: [667..668]
 r1192: [659..660]
 r1193: [652..655]
 r1194: [634..635]
 r1195: [625..627]
 r1196: [625..626]
 r1197: [621..622]
 r1198: [588..591]
 r1199: [559..560]
 r1200: [555..556]
 r1201: [527..528]
 r1202: [524..524] [520..522]
 r1203: [484..485]
 r1204: [473..474]
 r1205: [512..513]
 r1206: [501..502]
 r1207: [456..457]
 r1208: [303..304]
 r1209: [446..447]
 r1210: [431..432]
 r1211: [423..424]
 r1212: [377..379]
 r1213: [373..374]
 r1214: [371..372]
 r1215: [366..367]
 r1216: [362..363]
 r1217: [348..349]
 r1218: [344..345]
 r1219: [340..341]
 r1220: [415..416]
 r1221: [413..414]
 r1222: [410..411]
 r1223: [406..407]
 r1224: [390..391]
 r1225: [386..387]
 r1226: [382..383]
 r1227: [332..333]
 r1228: [313..314]
 r1229: [261..262]
 r1230: [256..257]
 r1231: [1..2]
 r1232: [3..4]
 r1233: [237..238]
 r1234: [223..224]
 r1235: [217..218]
 r1236: [203..204]
 r1237: [196..197]
 r1238: [189..190]
 r1239: [181..182]
 r1240: [178..179]
 r1241: [175..176]
 r1242: [166..167]
 r1243: [160..161]
 r1244: [154..155]
 r1245: [142..143]
 r1246: [139..140]
 r1247: [136..137]
 r1248: [104..105]
 r1249: [90..91]
 r1250: [84..85]
 r1251: [73..74]
 r1252: [68..69]
 r1253: [63..64]
 r1254: [57..58]
 r1255: [54..55]
 r1256: [51..52]
 r1257: [42..43]
 r1258: [36..37]
 r1259: [30..31]
 r1260: [24..25]
 r1261: [21..22]
 r1262: [18..19]
 r1263: [883..884]
 r1264: [1251..1255]
 r1265: [1256..1258]
 r1266: [1230..1236]
 r1267: [1214..1218]
 r1268: [1219..1221]
 r1269: [1197..1203]
 r1270: [1114..1120]
 r1271: [1137..1147]
 r1272: [1074..1080]
 r1273: [1097..1101]
 r1274: [1052..1062]
 r1275: [1026..1032]
 r1276: [999..1003]
 r1277: [975..981]
 r1278: [904..906]
 r1279: [931..935]
 r1280: [827..831]
 r1281: [832..836]
 r1282: [669..673]
 r1283: [674..678]
 r1284: [375..378]
 r1285: [318..321]
Compressing live ranges: from 1290 to 968 - 75%
Ranges after the compression:
 r125: [931..931] [923..926] [899..902] [895..896] [887..890] [881..882]
 r146: [840..843]
 r154: [809..812]
 r160: [773..782] [747..770] [724..725]
 r169: [700..701]
 r171: [692..693]
 r173: [480..480] [454..471] [357..445]
 r181: [661..662] [656..656] [599..651] [570..576] [509..567] [480..486] [396..477] [389..391]
 r183: [964..965] [532..649] [511..530]
 r193: [964..967] [619..629] [470..616]
 r195: [964..967] [619..627] [468..612]
 r199: [571..574]
 r200: [552..555]
 r201: [558..559]
 r216: [240..362]
 r220: [481..484]
 r221: [462..467]
 r222: [466..469]
 r227: [414..439]
 r279: [262..362] [240..241]
 r283: [230..231]
 r296: [186..187]
 r309: [129..164]
 r314: [135..164]
 r339: [964..967] [0..685]
 r340: [454..455] [442..447]
 r341: [597..600] [562..565]
 r342: [891..892] [883..883] [876..878] [805..873]
 r343: [891..891] [876..876] [765..873]
 r345: [570..570] [507..561] [480..482] [455..475] [446..453]
 r346: [964..967] [661..664] [656..658] [218..653]
 r347: [454..454] [363..445]
 r348: [432..434] [240..425]
 r349: [392..397] [361..378]
 r350: [337..337] [302..310] [254..271]
 r351: [337..338] [302..302] [256..263]
 r352: [337..339] [302..306] [254..267]
 r353: [230..233] [226..227] [222..223]
 r354: [964..967] [488..601]
 r355: [964..967] [0..955]
 r356: [964..967] [0..951]
 r357: [698..713]
 r358: [706..715]
 r359: [620..648] [603..618]
 r360: [964..965] [619..621] [578..614]
 r361: [964..965] [619..619] [578..612]
 r362: [966..967] [455..545] [448..453]
 r363: [966..967] [531..541] [488..512]
 r364: [363..443]
 r365: [240..433]
 r366: [409..411] [390..391]
 r368: [355..364] [200..239] [92..100]
 r369: [216..221]
 r370: [7..219]
 r371: [212..215]
 r372: [7..213]
 r373: [7..209]
 r374: [7..205]
 r375: [7..201]
 r380: [113..164]
 r389: [423..423] [353..416] [198..237] [90..98]
 r393: [423..427] [240..420]
 r394: [351..358]
 r395: [489..498]
 r396: [491..494]
 r397: [966..967] [531..533] [454..518] [410..449] [390..391]
 r398: [966..967] [531..531] [454..510] [409..451]
 r400: [579..588]
 r401: [581..584]
 r402: [964..967] [619..625] [455..602] [450..453]
 r403: [964..967] [619..631] [455..604] [452..453]
 r404: [964..967] [619..643] [531..612] [488..512]
 r408: [883..884] [877..878]
 r409: [773..780] [737..768] [714..732]
 r410: [773..776] [737..766] [714..728]
 r411: [733..734]
 r412: [737..744] [726..730] [716..721]
 r413: [737..740] [726..726] [716..719]
 r416: [692..707] [680..685]
 r418: [964..967] [679..685] [442..674]
 r420: [505..510] [472..473]
 r423: [423..429] [240..420]
 r429: [349..358]
 r452: [35..58]
 r457: [29..58]
 r463: [964..967] [5..681] [0..0]
 r475: [78..79]
 r481: [958..961]
 r483: [954..959]
 r519: [895..895] [889..890] [874..875]
 r521: [893..894]
 r533: [854..855]
 r534: [856..867]
 r535: [866..871]
 r537: [856..857]
 r538: [864..869]
 r539: [852..861]
 r540: [862..865]
 r543: [862..863]
 r545: [854..855]
 r546: [852..853]
 r548: [850..851]
 r552: [844..845]
 r553: [844..845]
 r556: [835..837]
 r557: [823..832]
 r558: [833..836]
 r559: [831..839]
 r561: [833..834]
 r562: [821..824]
 r563: [825..830]
 r566: [825..826]
 r568: [823..824]
 r569: [821..822]
 r571: [819..820]
 r575: [813..814]
 r576: [813..814]
 r585: [789..790]
 r586: [791..802]
 r587: [801..804]
 r589: [791..792]
 r590: [799..804]
 r591: [787..796]
 r592: [797..800]
 r595: [797..798]
 r597: [789..790]
 r598: [787..788]
 r600: [785..786]
 r605: [777..778]
 r606: [777..778]
 r609: [763..764]
 r610: [751..760]
 r611: [761..762]
 r612: [759..764]
 r614: [761..764]
 r615: [749..752]
 r616: [753..758]
 r619: [753..754]
 r621: [751..752]
 r622: [749..750]
 r624: [747..748]
 r627: [741..742]
 r628: [741..742]
 r630: [692..717]
 r632: [714..717]
 r634: [704..705]
 r636: [696..697]
 r637: [700..711]
 r639: [700..711]
 r640: [692..699]
 r642: [692..693]
 r651: [667..670]
 r664: [648..649]
 r672: [638..641]
 r674: [634..637]
 r681: [626..627]
 r682: [622..623]
 r688: [609..610]
 r692: [607..608]
 r695: [603..604]
 r696: [591..592]
 r697: [585..586]
 r701: [579..582]
 r703: [601..602]
 r704: [554..557]
 r716: [538..539]
 r720: [536..537]
 r721: [532..533]
 r727: [525..528]
 r729: [521..524]
 r734: [511..512]
 r735: [515..516]
 r736: [501..502]
 r737: [495..496]
 r741: [489..492]
 r743: [464..465]
 r747: [436..437]
 r748: [424..439]
 r749: [434..435]
 r750: [434..441]
 r751: [433..441]
 r752: [426..441]
 r754: [421..422]
 r755: [421..422]
 r756: [419..420]
 r757: [430..431]
 r759: [428..429]
 r760: [428..431]
 r763: [410..411]
 r764: [389..390]
 r765: [385..386]
 r767: [381..384]
 r768: [383..386]
 r769: [381..382]
 r772: [375..376]
 r773: [408..409]
 r774: [404..405]
 r776: [400..403]
 r777: [402..405]
 r778: [400..401]
 r783: [392..393]
 r784: [371..372]
 r785: [373..374]
 r786: [369..370]
 r787: [371..372]
 r794: [234..235]
 r796: [345..346]
 r798: [343..344]
 r801: [339..342] [335..336] [296..301]
 r803: [292..293]
 r804: [280..291]
 r805: [274..279]
 r807: [288..299]
 r808: [284..289]
 r809: [278..283]
 r810: [270..277]
 r813: [282..285]
 r814: [276..281]
 r815: [266..275]
 r817: [325..332]
 r818: [319..324]
 r819: [313..318]
 r821: [339..340] [329..336]
 r822: [323..330]
 r823: [317..322]
 r824: [309..316]
 r827: [321..326]
 r828: [315..320]
 r829: [305..314]
 r830: [260..261]
 r833: [248..255]
 r834: [250..251] [244..245]
 r857: [5..6]
 r858: [190..191]
 r859: [188..189]
 r860: [101..201]
 r861: [185..187]
 r862: [181..184]
 r863: [177..178]
 r864: [169..176]
 r866: [183..186]
 r867: [175..182]
 r868: [171..172]
 r869: [169..170]
 r870: [167..168]
 r873: [123..166]
 r875: [155..156]
 r876: [153..154]
 r877: [145..152]
 r880: [161..162]
 r881: [159..160]
 r882: [143..158]
 r885: [149..150]
 r886: [147..148]
 r887: [141..146]
 r889: [135..136]
 r894: [131..132]
 r895: [117..130]
 r896: [111..116]
 r899: [125..126]
 r900: [115..124]
 r901: [109..114]
 r904: [119..120]
 r905: [113..118]
 r906: [107..112]
 r908: [101..102]
 r913: [82..83]
 r914: [80..81]
 r915: [7..93]
 r916: [77..79]
 r917: [73..76]
 r918: [69..70]
 r919: [61..68]
 r921: [75..78]
 r922: [67..74]
 r923: [63..64]
 r924: [61..62]
 r925: [59..60]
 r928: [23..58]
 r930: [51..52]
 r931: [45..50]
 r934: [55..56]
 r935: [43..54]
 r938: [47..48]
 r939: [41..46]
 r941: [35..36]
 r946: [31..32]
 r947: [17..30]
 r950: [25..26]
 r951: [15..24]
 r954: [19..20]
 r955: [13..18]
 r957: [7..8]
 r967: [964..967] [938..945] [923..935] [911..918] [0..908]
 r968: [196..201] [88..96]
 r969: [194..201] [86..94]
 r970: [964..967] [692..711] [0..689]
 r971: [0..967]
 r972: [0..967]
 r973: [823..869] [751..804]
 r979: [7..93]
 r981: [101..201]
 r982: [240..364]
 r983: [240..364]
 r984: [240..364]
 r986: [966..967] [488..510]
 r987: [964..967] [0..685]
 r988: [964..965] [578..600]
 r989: [964..967] [0..685]
 r990: [964..967] [0..685]
 r992: [964..967] [0..685]
 r993: [964..967] [0..685]
 r996: [950..951]
 r997: [948..949]
 r998: [938..941]
 r999: [934..935]
 r1000: [927..928]
 r1001: [921..922]
 r1002: [911..914]
 r1003: [907..908]
 r1004: [903..904]
 r1005: [889..890]
 r1006: [887..888]
 r1007: [879..880]
 r1008: [885..886]
 r1009: [872..873]
 r1010: [844..847]
 r1011: [813..816]
 r1012: [807..808]
 r1013: [733..734]
 r1014: [731..732]
 r1015: [769..770]
 r1016: [781..782]
 r1017: [722..723]
 r1018: [745..746]
 r1019: [718..719]
 r1020: [671..672]
 r1021: [667..668]
 r1022: [665..666]
 r1023: [654..655]
 r1024: [652..653]
 r1025: [663..664]
 r1026: [661..662]
 r1027: [659..660]
 r1028: [657..658]
 r1029: [650..651]
 r1030: [646..647]
 r1031: [632..633]
 r1032: [550..551]
 r1033: [548..549]
 r1034: [546..547]
 r1035: [544..545]
 r1036: [542..543]
 r1037: [519..520]
 r1038: [460..461]
 r1039: [458..459]
 r1040: [456..457]
 r1041: [444..445]
 r1042: [377..378]
 r1043: [396..397]
 r1044: [394..395]
 r1045: [365..366]
 r1046: [256..257]
 r1047: [252..253]
 r1048: [244..247]
 r1049: [224..225]
 r1050: [232..233]
 r1051: [230..231]
 r1052: [228..229]
 r1053: [222..223]
 r1054: [220..221]
 r1055: [216..217]
 r1056: [214..215]
 r1057: [210..211]
 r1058: [206..207]
 r1059: [202..203]
 r1060: [165..166]
 r1061: [137..138]
 r1062: [135..136]
 r1063: [103..104]
 r1064: [101..102]
 r1065: [37..38]
 r1066: [35..36]
 r1067: [9..10]
 r1068: [7..8]
 r1069: [677..678]
 r1070: [675..676]
 r1072: [556..561]
 r1073: [560..561]
 r1074: [593..594]
 r1075: [587..594]
 r1076: [503..504]
 r1077: [497..504]
 r1078: [679..679] [595..672] [570..572] [538..563] [517..530]
 r1079: [7..91]
 r1080: [7..89]
 r1081: [7..87]
 r1082: [7..85]
 r1083: [101..199]
 r1084: [99..197]
 r1085: [97..195]
 r1086: [95..193]
 r1087: [240..356]
 r1088: [240..354]
 r1089: [238..352]
 r1090: [240..350]
 r1091: [240..348]
 r1092: [966..967] [487..508] [478..479]
 r1093: [966..967] [483..506] [476..479]
 r1094: [966..967] [488..504] [474..479]
 r1095: [485..488]
 r1096: [964..965] [577..598] [568..569]
 r1097: [964..965] [578..596] [566..569]
 r1098: [964..965] [573..594] [564..569]
 r1099: [575..578]
 r1101: [867..867]
 r1102: [865..865]
 r1103: [836..836]
 r1104: [830..830]
 r1105: [802..802]
 r1106: [800..800]
 r1107: [762..762]
 r1108: [758..758]
 r1109: [962..963]
 r1110: [960..961]
 r1111: [956..957]
 r1112: [952..953]
 r1113: [936..937]
 r1114: [946..947]
 r1115: [942..943]
 r1116: [938..939]
 r1117: [932..933]
 r1118: [929..930]
 r1119: [923..924]
 r1120: [909..910]
 r1121: [919..920]
 r1122: [915..916]
 r1123: [911..912]
 r1124: [897..898]
 r1125: [905..906]
 r1126: [899..900]
 r1127: [893..894]
 r1128: [874..875]
 r1129: [870..871]
 r1130: [868..869]
 r1131: [858..859]
 r1132: [848..849]
 r1133: [846..847]
 r1134: [840..841]
 r1135: [838..839]
 r1136: [831..832]
 r1137: [827..828]
 r1138: [817..818]
 r1139: [815..816]
 r1140: [809..810]
 r1141: [735..736]
 r1142: [729..730]
 r1143: [727..728]
 r1144: [805..806]
 r1145: [803..804]
 r1146: [793..794]
 r1147: [771..772]
 r1148: [767..768]
 r1149: [783..784]
 r1150: [779..780]
 r1151: [773..774]
 r1152: [765..766]
 r1153: [759..760]
 r1154: [755..756]
 r1155: [720..721]
 r1156: [743..744]
 r1157: [737..738]
 r1158: [690..691]
 r1159: [686..687]
 r1160: [712..713]
 r1161: [708..709]
 r1162: [702..703]
 r1163: [694..695]
 r1164: [684..685]
 r1165: [682..683]
 r1166: [669..670]
 r1167: [644..645]
 r1168: [642..643]
 r1169: [638..639]
 r1170: [634..635]
 r1171: [630..631]
 r1172: [628..629]
 r1173: [626..627]
 r1174: [624..625]
 r1175: [617..618]
 r1176: [615..616]
 r1177: [613..614]
 r1178: [611..612]
 r1179: [605..606]
 r1180: [603..604]
 r1181: [589..590]
 r1182: [583..584]
 r1183: [583..584]
 r1184: [579..580]
 r1185: [552..553]
 r1186: [540..541]
 r1187: [534..535]
 r1188: [532..533]
 r1189: [529..530]
 r1190: [525..526]
 r1191: [521..522]
 r1192: [513..514]
 r1193: [511..512]
 r1194: [499..500]
 r1195: [493..494]
 r1196: [493..494]
 r1197: [489..490]
 r1198: [462..463]
 r1199: [440..441]
 r1200: [438..439]
 r1201: [417..418]
 r1202: [415..415] [412..413]
 r1203: [387..388]
 r1204: [379..380]
 r1205: [406..407]
 r1206: [398..399]
 r1207: [367..368]
 r1208: [236..237]
 r1209: [359..360]
 r1210: [347..348]
 r1211: [341..342]
 r1212: [300..301]
 r1213: [296..297]
 r1214: [294..295]
 r1215: [290..291]
 r1216: [286..287]
 r1217: [272..273]
 r1218: [268..269]
 r1219: [264..265]
 r1220: [335..336]
 r1221: [333..334]
 r1222: [331..332]
 r1223: [327..328]
 r1224: [311..312]
 r1225: [307..308]
 r1226: [303..304]
 r1227: [258..259]
 r1228: [242..243]
 r1229: [208..209]
 r1230: [204..205]
 r1231: [1..2]
 r1232: [3..4]
 r1233: [192..193]
 r1234: [179..180]
 r1235: [173..174]
 r1236: [163..164]
 r1237: [157..158]
 r1238: [151..152]
 r1239: [143..144]
 r1240: [141..142]
 r1241: [139..140]
 r1242: [133..134]
 r1243: [127..128]
 r1244: [121..122]
 r1245: [109..110]
 r1246: [107..108]
 r1247: [105..106]
 r1248: [84..85]
 r1249: [71..72]
 r1250: [65..66]
 r1251: [57..58]
 r1252: [53..54]
 r1253: [49..50]
 r1254: [43..44]
 r1255: [41..42]
 r1256: [39..40]
 r1257: [33..34]
 r1258: [27..28]
 r1259: [21..22]
 r1260: [15..16]
 r1261: [13..14]
 r1262: [11..12]
 r1263: [673..674]
 r1264: [940..943]
 r1265: [944..945]
 r1266: [925..930]
 r1267: [913..916]
 r1268: [917..918]
 r1269: [901..906]
 r1270: [842..847]
 r1271: [860..869]
 r1272: [811..816]
 r1273: [829..832]
 r1274: [795..804]
 r1275: [775..780]
 r1276: [757..760]
 r1277: [739..744]
 r1278: [688..689]
 r1279: [710..711]
 r1280: [636..639]
 r1281: [640..643]
 r1282: [523..526]
 r1283: [527..530]
 r1284: [298..301]
 r1285: [246..249]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 103
   Insn 1827: point = 0, n_alt = 1
   Insn 1826: point = 0, n_alt = 5
  BB 94
   Insn 2185: point = 0, n_alt = -1
  BB 93
   Insn 1518: point = 0, n_alt = -1
   Insn 2400: point = 0, n_alt = 7
   Insn 1517: point = 2, n_alt = 0
   Insn 2401: point = 4, n_alt = 5
   Insn 1507: point = 6, n_alt = 0
   Insn 1506: point = 8, n_alt = 2
  BB 101
   Insn 2192: point = 10, n_alt = -1
  BB 100
   Insn 1797: point = 11, n_alt = -1
   Insn 1796: point = 11, n_alt = 0
   Insn 1790: point = 11, n_alt = -1
   Insn 1789: point = 11, n_alt = -2
   Insn 1788: point = 11, n_alt = -2
   Insn 1787: point = 12, n_alt = -2
   Insn 2107: point = 13, n_alt = -2
   Insn 1785: point = 14, n_alt = -1
   Insn 1782: point = 14, n_alt = -1
   Insn 1993: point = 14, n_alt = 6
   Insn 1778: point = 14, n_alt = -1
   Insn 1792: point = 14, n_alt = 2
   Insn 1777: point = 15, n_alt = 4
   Insn 1775: point = 15, n_alt = 0
   Insn 2106: point = 17, n_alt = -2
   Insn 1773: point = 18, n_alt = -1
   Insn 2431: point = 18, n_alt = 10
	Hard reg 0 is preferable by r1262 with profit 890
   Insn 1772: point = 19, n_alt = 0
   Insn 2430: point = 21, n_alt = 10
	Hard reg 1 is preferable by r1261 with profit 890
   Insn 1771: point = 22, n_alt = 0
   Insn 2429: point = 24, n_alt = 10
	Hard reg 2 is preferable by r1260 with profit 890
   Insn 1770: point = 25, n_alt = 0
   Insn 1768: point = 27, n_alt = 0
   Insn 2428: point = 29, n_alt = 9
	Hard reg 31 is preferable by r1259 with profit 890
   Insn 1767: point = 31, n_alt = 1
   Insn 1764: point = 33, n_alt = 0
   Insn 2427: point = 35, n_alt = 9
	Hard reg 30 is preferable by r1258 with profit 890
   Insn 1763: point = 37, n_alt = 1
   Insn 1760: point = 39, n_alt = 0
   Insn 2426: point = 41, n_alt = 9
	Hard reg 29 is preferable by r1257 with profit 890
   Insn 1759: point = 43, n_alt = 1
   Insn 1746: point = 45, n_alt = -1
   Insn 1745: point = 45, n_alt = -2
   Insn 1744: point = 45, n_alt = -2
   Insn 1743: point = 46, n_alt = -2
   Insn 2105: point = 47, n_alt = -2
   Insn 1741: point = 48, n_alt = -1
   Insn 1738: point = 48, n_alt = -1
   Insn 1992: point = 48, n_alt = 6
   Insn 1734: point = 48, n_alt = -1
   Insn 1733: point = 48, n_alt = -2
   Insn 1732: point = 48, n_alt = 0
   Insn 2104: point = 50, n_alt = -2
   Insn 1730: point = 51, n_alt = -1
   Insn 2425: point = 51, n_alt = 10
	Hard reg 0 is preferable by r1256 with profit 890
   Insn 1729: point = 52, n_alt = 0
   Insn 2424: point = 54, n_alt = 10
	Hard reg 1 is preferable by r1255 with profit 890
   Insn 1728: point = 55, n_alt = 0
   Insn 2423: point = 57, n_alt = 10
	Hard reg 2 is preferable by r1254 with profit 890
   Insn 1727: point = 58, n_alt = 0
   Insn 1725: point = 60, n_alt = 0
   Insn 2422: point = 62, n_alt = 9
	Hard reg 31 is preferable by r1253 with profit 890
   Insn 1724: point = 64, n_alt = 1
   Insn 1717: point = 65, n_alt = 0
   Insn 2421: point = 67, n_alt = 9
	Hard reg 29 is preferable by r1252 with profit 890
   Insn 1716: point = 69, n_alt = 1
   Insn 1721: point = 70, n_alt = 0
   Insn 2420: point = 72, n_alt = 9
	Hard reg 30 is preferable by r1251 with profit 890
   Insn 1720: point = 74, n_alt = 1
   Insn 1708: point = 75, n_alt = 4
   Insn 1705: point = 76, n_alt = 4
   Insn 1697: point = 77, n_alt = 1
   Insn 1694: point = 79, n_alt = 1
   Insn 1693: point = 81, n_alt = 0
   Insn 2419: point = 83, n_alt = 10
	Hard reg 4 is preferable by r1250 with profit 890
   Insn 1692: point = 85, n_alt = 0
   Insn 1688: point = 87, n_alt = 0
   Insn 2418: point = 89, n_alt = 10
	Hard reg 4 is preferable by r1249 with profit 890
   Insn 1687: point = 91, n_alt = 0
   Insn 1691: point = 93, n_alt = 0
   Insn 1686: point = 95, n_alt = 0
   Insn 1690: point = 97, n_alt = 0
   Insn 1685: point = 98, n_alt = 0
   Insn 1680: point = 99, n_alt = 0
   Insn 1679: point = 101, n_alt = 0
   Insn 1677: point = 103, n_alt = 0
   Insn 2417: point = 105, n_alt = 9
	Hard reg 5 is preferable by r1248 with profit 890
  BB 99
   Insn 2267: point = 107, n_alt = -2
   Insn 2266: point = 109, n_alt = -2
   Insn 2265: point = 111, n_alt = -2
   Insn 2264: point = 113, n_alt = -2
   Insn 1678: point = 115, n_alt = 3
  BB 97
   Insn 2189: point = 117, n_alt = -1
   Insn 1945: point = 117, n_alt = 5
   Insn 1944: point = 118, n_alt = 5
  BB 104
   Insn 2263: point = 120, n_alt = -2
   Insn 2262: point = 122, n_alt = -2
   Insn 2261: point = 124, n_alt = -2
   Insn 2260: point = 126, n_alt = -2
  BB 98
   Insn 1667: point = 129, n_alt = -1
   Insn 1666: point = 129, n_alt = 0
   Insn 1660: point = 129, n_alt = -1
   Insn 1659: point = 129, n_alt = -2
   Insn 1658: point = 129, n_alt = -2
   Insn 1657: point = 130, n_alt = -2
   Insn 2103: point = 131, n_alt = -2
   Insn 1655: point = 132, n_alt = -1
   Insn 1652: point = 132, n_alt = -1
   Insn 1996: point = 132, n_alt = 6
   Insn 1648: point = 132, n_alt = -1
   Insn 1662: point = 132, n_alt = 2
   Insn 1647: point = 133, n_alt = 4
   Insn 1645: point = 133, n_alt = 0
   Insn 2102: point = 135, n_alt = -2
   Insn 1643: point = 136, n_alt = -1
   Insn 2416: point = 136, n_alt = 10
	Hard reg 0 is preferable by r1247 with profit 890
   Insn 1642: point = 137, n_alt = 0
   Insn 2415: point = 139, n_alt = 10
	Hard reg 1 is preferable by r1246 with profit 890
   Insn 1641: point = 140, n_alt = 0
   Insn 2414: point = 142, n_alt = 10
	Hard reg 2 is preferable by r1245 with profit 890
   Insn 1640: point = 143, n_alt = 0
   Insn 1638: point = 145, n_alt = 0
   Insn 1633: point = 147, n_alt = 0
   Insn 1628: point = 149, n_alt = 0
   Insn 1637: point = 151, n_alt = 0
   Insn 2413: point = 153, n_alt = 9
	Hard reg 16 is preferable by r1244 with profit 890
   Insn 1636: point = 155, n_alt = 1
   Insn 1632: point = 157, n_alt = 0
   Insn 2412: point = 159, n_alt = 9
	Hard reg 31 is preferable by r1243 with profit 890
   Insn 1631: point = 161, n_alt = 1
   Insn 1627: point = 163, n_alt = 0
   Insn 2411: point = 165, n_alt = 9
	Hard reg 30 is preferable by r1242 with profit 890
   Insn 1626: point = 167, n_alt = 1
   Insn 1613: point = 169, n_alt = -1
   Insn 1612: point = 169, n_alt = -2
   Insn 1611: point = 169, n_alt = -2
   Insn 1610: point = 170, n_alt = -2
   Insn 2101: point = 171, n_alt = -2
   Insn 1608: point = 172, n_alt = -1
   Insn 1605: point = 172, n_alt = -1
   Insn 1995: point = 172, n_alt = 6
   Insn 1601: point = 172, n_alt = -1
   Insn 1600: point = 172, n_alt = -2
   Insn 1599: point = 172, n_alt = 0
   Insn 2100: point = 174, n_alt = -2
   Insn 1597: point = 175, n_alt = -1
   Insn 2410: point = 175, n_alt = 10
	Hard reg 0 is preferable by r1241 with profit 890
   Insn 1596: point = 176, n_alt = 0
   Insn 2409: point = 178, n_alt = 10
	Hard reg 1 is preferable by r1240 with profit 890
   Insn 1595: point = 179, n_alt = 0
   Insn 2408: point = 181, n_alt = 10
	Hard reg 2 is preferable by r1239 with profit 890
   Insn 1594: point = 182, n_alt = 0
   Insn 1592: point = 184, n_alt = 0
   Insn 1591: point = 186, n_alt = 0
   Insn 2407: point = 188, n_alt = 9
	Hard reg 31 is preferable by r1238 with profit 890
   Insn 1590: point = 190, n_alt = 1
   Insn 1582: point = 191, n_alt = 0
   Insn 1581: point = 193, n_alt = 0
   Insn 2406: point = 195, n_alt = 9
	Hard reg 29 is preferable by r1237 with profit 890
   Insn 1580: point = 197, n_alt = 1
   Insn 1587: point = 198, n_alt = 0
   Insn 1586: point = 200, n_alt = 0
   Insn 2405: point = 202, n_alt = 9
	Hard reg 30 is preferable by r1236 with profit 890
   Insn 1585: point = 204, n_alt = 1
   Insn 1572: point = 205, n_alt = 4
   Insn 1569: point = 206, n_alt = 4
   Insn 1564: point = 207, n_alt = -2
   Insn 2099: point = 209, n_alt = -2
   Insn 1563: point = 210, n_alt = -1
   Insn 1555: point = 210, n_alt = 1
   Insn 1552: point = 212, n_alt = 1
   Insn 1551: point = 214, n_alt = 0
   Insn 2404: point = 216, n_alt = 10
	Hard reg 4 is preferable by r1235 with profit 890
   Insn 1550: point = 218, n_alt = 0
   Insn 1546: point = 220, n_alt = 0
   Insn 2403: point = 222, n_alt = 10
	Hard reg 4 is preferable by r1234 with profit 890
   Insn 1545: point = 224, n_alt = 0
   Insn 1549: point = 226, n_alt = 0
   Insn 1544: point = 228, n_alt = 0
   Insn 1548: point = 230, n_alt = 0
   Insn 1543: point = 231, n_alt = 0
   Insn 1538: point = 232, n_alt = 0
   Insn 1537: point = 234, n_alt = 0
   Insn 1994: point = 236, n_alt = 2
   Insn 1535: point = 236, n_alt = 0
   Insn 2402: point = 238, n_alt = 9
	Hard reg 5 is preferable by r1233 with profit 890
  BB 96
   Insn 2187: point = 240, n_alt = -1
   Insn 2259: point = 240, n_alt = -2
   Insn 2258: point = 242, n_alt = -2
   Insn 2257: point = 244, n_alt = -2
   Insn 2256: point = 246, n_alt = -2
   Insn 1947: point = 248, n_alt = 5
   Insn 1946: point = 249, n_alt = 5
   Insn 1536: point = 250, n_alt = 3
  BB 95
   Insn 1527: point = 252, n_alt = -1
   Insn 1526: point = 252, n_alt = 0
  BB 92
   Insn 1503: point = 253, n_alt = -1
   Insn 1502: point = 253, n_alt = 0
   Insn 1492: point = 253, n_alt = 0
   Insn 2098: point = 255, n_alt = -2
   Insn 1491: point = 256, n_alt = -1
   Insn 1488: point = 256, n_alt = -1
   Insn 2018: point = 256, n_alt = 6
   Insn 1484: point = 256, n_alt = -1
   Insn 1483: point = 256, n_alt = 5
   Insn 2399: point = 257, n_alt = 5
   Insn 1478: point = 258, n_alt = 0
   Insn 2097: point = 260, n_alt = -2
   Insn 1477: point = 261, n_alt = -1
   Insn 1474: point = 261, n_alt = -1
   Insn 2017: point = 261, n_alt = 6
   Insn 1470: point = 261, n_alt = -1
   Insn 1469: point = 261, n_alt = 5
   Insn 2398: point = 262, n_alt = 5
   Insn 1464: point = 263, n_alt = 0
   Insn 2096: point = 265, n_alt = -2
   Insn 1463: point = 266, n_alt = -1
   Insn 1460: point = 266, n_alt = -1
   Insn 2016: point = 266, n_alt = 6
   Insn 1456: point = 266, n_alt = -1
   Insn 1455: point = 266, n_alt = -2
   Insn 1451: point = 267, n_alt = 0
   Insn 2095: point = 269, n_alt = -2
   Insn 1450: point = 270, n_alt = -1
   Insn 1447: point = 270, n_alt = -1
   Insn 2015: point = 270, n_alt = 6
   Insn 1443: point = 270, n_alt = -1
   Insn 1439: point = 270, n_alt = 1
   Insn 1442: point = 272, n_alt = -2
   Insn 2094: point = 273, n_alt = -2
   Insn 1438: point = 274, n_alt = -1
   Insn 1437: point = 274, n_alt = -2
   Insn 1434: point = 275, n_alt = -2
   Insn 2093: point = 277, n_alt = -2
   Insn 1433: point = 278, n_alt = -1
   Insn 1429: point = 278, n_alt = 1
   Insn 1432: point = 280, n_alt = -2
   Insn 2092: point = 281, n_alt = -2
   Insn 1428: point = 282, n_alt = -1
   Insn 1427: point = 282, n_alt = -2
  BB 89
   Insn 2181: point = 283, n_alt = -1
   Insn 1389: point = 283, n_alt = 0
   Insn 2088: point = 285, n_alt = -2
   Insn 1388: point = 286, n_alt = -1
   Insn 1384: point = 286, n_alt = -1
   Insn 2014: point = 286, n_alt = 6
   Insn 1380: point = 286, n_alt = -1
   Insn 1379: point = 286, n_alt = 1
  BB 80
   Insn 2172: point = 288, n_alt = -1
  BB 91
   Insn 1418: point = 289, n_alt = 0
   Insn 2091: point = 291, n_alt = -2
   Insn 1417: point = 292, n_alt = -1
   Insn 1414: point = 292, n_alt = -1
   Insn 2013: point = 292, n_alt = 6
   Insn 1413: point = 292, n_alt = -2
  BB 90
   Insn 1406: point = 294, n_alt = 0
   Insn 2090: point = 295, n_alt = -2
   Insn 1403: point = 296, n_alt = -1
   Insn 2012: point = 296, n_alt = 6
   Insn 1399: point = 296, n_alt = -2
   Insn 2089: point = 298, n_alt = -2
   Insn 1398: point = 299, n_alt = -1
   Insn 1397: point = 299, n_alt = 1
  BB 79
   Insn 1240: point = 300, n_alt = -1
   Insn 2199: point = 300, n_alt = -2
   Insn 2198: point = 300, n_alt = 1
   Insn 1235: point = 300, n_alt = 0
   Insn 1234: point = 302, n_alt = 3
   Insn 2377: point = 304, n_alt = 5
  BB 88
   Insn 2179: point = 306, n_alt = -1
   Insn 2255: point = 306, n_alt = 5
   Insn 2254: point = 308, n_alt = -2
  BB 87
   Insn 1371: point = 311, n_alt = -1
   Insn 2197: point = 311, n_alt = -2
   Insn 2196: point = 311, n_alt = 0
   Insn 1361: point = 311, n_alt = 0
   Insn 1368: point = 312, n_alt = 0
   Insn 2397: point = 314, n_alt = 9
	Hard reg 10 is preferable by r1228 with profit 890
   Insn 1359: point = 315, n_alt = -1
   Insn 1358: point = 315, n_alt = -2
   Insn 1357: point = 315, n_alt = -2
   Insn 1356: point = 316, n_alt = -2
   Insn 2460: point = 317, n_alt = -1
	Hard reg 2 is preferable by r1285 with profit 890
   Insn 2087: point = 319, n_alt = -2
   Insn 1354: point = 320, n_alt = -1
   Insn 1353: point = 320, n_alt = -2
   Insn 2459: point = 321, n_alt = -1
	Hard reg 2 is preferable by r1285 with profit 1780
   Insn 1352: point = 323, n_alt = 0
   Insn 2086: point = 325, n_alt = -2
   Insn 1350: point = 326, n_alt = -1
   Insn 1349: point = 326, n_alt = -2
   Insn 1348: point = 327, n_alt = -2
   Insn 1343: point = 328, n_alt = -2
   Insn 1347: point = 330, n_alt = -2
   Insn 2085: point = 331, n_alt = -2
   Insn 1342: point = 332, n_alt = -1
   Insn 1999: point = 332, n_alt = 6
   Insn 1338: point = 332, n_alt = -1
   Insn 2396: point = 332, n_alt = 10
	Hard reg 0 is preferable by r1227 with profit 890
   Insn 1337: point = 333, n_alt = 0
   Insn 1364: point = 335, n_alt = 4
   Insn 1335: point = 336, n_alt = 0
  BB 85
   Insn 2176: point = 339, n_alt = -1
   Insn 2388: point = 339, n_alt = 10
	Hard reg 7 is preferable by r1219 with profit 296
   Insn 1296: point = 341, n_alt = 0
   Insn 2387: point = 343, n_alt = 10
	Hard reg 4 is preferable by r1218 with profit 296
   Insn 1288: point = 345, n_alt = 0
   Insn 2386: point = 347, n_alt = 10
	Hard reg 5 is preferable by r1217 with profit 296
   Insn 1280: point = 349, n_alt = 0
   Insn 1295: point = 351, n_alt = 0
   Insn 1287: point = 353, n_alt = 0
   Insn 1279: point = 355, n_alt = 0
   Insn 1294: point = 357, n_alt = 0
   Insn 1286: point = 359, n_alt = 0
   Insn 2385: point = 361, n_alt = 9
	Hard reg 30 is preferable by r1216 with profit 296
   Insn 1293: point = 363, n_alt = 1
   Insn 2384: point = 365, n_alt = 9
	Hard reg 29 is preferable by r1215 with profit 296
   Insn 1285: point = 367, n_alt = 1
   Insn 1278: point = 368, n_alt = 0
   Insn 2383: point = 370, n_alt = 9
	Hard reg 28 is preferable by r1214 with profit 296
   Insn 1277: point = 372, n_alt = 1
   Insn 2458: point = 374, n_alt = -1
	   Creating copy r1213<-r1284@296
   Insn 1284: point = 376, n_alt = 1
   Insn 2457: point = 378, n_alt = -1
	   Creating copy r1212->r1284@296
   Insn 2381: point = 379, n_alt = 5
  BB 86
   Insn 2395: point = 381, n_alt = 10
	Hard reg 7 is preferable by r1226 with profit 296
   Insn 1324: point = 383, n_alt = 0
   Insn 2394: point = 385, n_alt = 10
	Hard reg 4 is preferable by r1225 with profit 296
   Insn 1316: point = 387, n_alt = 0
   Insn 2393: point = 389, n_alt = 10
	Hard reg 5 is preferable by r1224 with profit 296
   Insn 1308: point = 391, n_alt = 0
   Insn 1323: point = 393, n_alt = 0
   Insn 1315: point = 395, n_alt = 0
   Insn 1307: point = 397, n_alt = 0
   Insn 1322: point = 399, n_alt = 0
   Insn 1314: point = 401, n_alt = 0
   Insn 1306: point = 403, n_alt = 0
   Insn 2392: point = 405, n_alt = 9
	Hard reg 30 is preferable by r1223 with profit 296
   Insn 1321: point = 407, n_alt = 1
   Insn 2391: point = 409, n_alt = 9
	Hard reg 29 is preferable by r1222 with profit 296
   Insn 1313: point = 411, n_alt = 1
   Insn 2390: point = 412, n_alt = 9
	Hard reg 28 is preferable by r1221 with profit 296
   Insn 1305: point = 414, n_alt = 1
   Insn 2389: point = 416, n_alt = 5
  BB 84
   Insn 2174: point = 418, n_alt = -1
   Insn 34: point = 418, n_alt = -2
   Insn 33: point = 419, n_alt = -2
  BB 83
   Insn 1269: point = 421, n_alt = -1
   Insn 32: point = 421, n_alt = 1
   Insn 1268: point = 422, n_alt = 3
   Insn 1312: point = 422, n_alt = 1
   Insn 2380: point = 424, n_alt = 5
  BB 82
   Insn 1266: point = 426, n_alt = -1
   Insn 1265: point = 426, n_alt = 3
   Insn 1257: point = 426, n_alt = 1
   Insn 1254: point = 428, n_alt = 1
   Insn 2379: point = 430, n_alt = 10
	Hard reg 3 is preferable by r1210 with profit 890
   Insn 1252: point = 432, n_alt = 0
  BB 81
   Insn 2253: point = 434, n_alt = 6
   Insn 2252: point = 436, n_alt = -2
   Insn 2251: point = 438, n_alt = 7
   Insn 2250: point = 440, n_alt = -2
   Insn 2249: point = 442, n_alt = -2
   Insn 30: point = 444, n_alt = 1
   Insn 2378: point = 445, n_alt = 13
   Insn 1247: point = 447, n_alt = 0
   Insn 31: point = 449, n_alt = 3
   Insn 1246: point = 450, n_alt = 0
  BB 78
   Insn 1218: point = 453, n_alt = -1
   Insn 2201: point = 453, n_alt = -2
   Insn 2200: point = 453, n_alt = 1
   Insn 1206: point = 453, n_alt = -2
   Insn 2084: point = 455, n_alt = -2
   Insn 1205: point = 456, n_alt = -1
   Insn 1201: point = 456, n_alt = -1
   Insn 1199: point = 456, n_alt = 6
   Insn 1197: point = 456, n_alt = -1
   Insn 2376: point = 456, n_alt = 10
	Hard reg 0 is preferable by r1207 with profit 110
   Insn 1196: point = 457, n_alt = 0
   Insn 1194: point = 459, n_alt = 0
   Insn 1193: point = 461, n_alt = 3
   Insn 1192: point = 462, n_alt = 0
   Insn 1191: point = 464, n_alt = 2
  BB 74
   Insn 2168: point = 466, n_alt = -1
   Insn 1142: point = 466, n_alt = 0
   Insn 1141: point = 468, n_alt = 2
  BB 73
   Insn 1135: point = 470, n_alt = 0
   Insn 2081: point = 471, n_alt = -2
   Insn 1132: point = 472, n_alt = -1
   Insn 2011: point = 472, n_alt = 6
   Insn 1126: point = 472, n_alt = 0
   Insn 2373: point = 474, n_alt = 9
	Hard reg 3 is preferable by r1204 with profit 55
   Insn 1125: point = 476, n_alt = 0
   Insn 1124: point = 478, n_alt = 0
   Insn 1123: point = 480, n_alt = 0
   Insn 1122: point = 482, n_alt = 2
   Insn 2372: point = 483, n_alt = 10
	Hard reg 3 is preferable by r1203 with profit 55
   Insn 1121: point = 485, n_alt = 0
   Insn 1131: point = 487, n_alt = -2
   Insn 1120: point = 488, n_alt = 0
  BB 77
   Insn 1182: point = 490, n_alt = 0
   Insn 1181: point = 492, n_alt = 2
  BB 76
   Insn 1175: point = 494, n_alt = 0
   Insn 2083: point = 495, n_alt = -2
   Insn 1172: point = 496, n_alt = -1
   Insn 1170: point = 496, n_alt = 6
   Insn 1171: point = 496, n_alt = -2
  BB 75
   Insn 1164: point = 498, n_alt = 0
   Insn 2082: point = 499, n_alt = -2
   Insn 1161: point = 500, n_alt = -1
   Insn 1160: point = 500, n_alt = -2
   Insn 1159: point = 500, n_alt = 6
   Insn 1155: point = 500, n_alt = 0
   Insn 2375: point = 502, n_alt = 9
	Hard reg 3 is preferable by r1206 with profit 55
   Insn 1154: point = 504, n_alt = 0
   Insn 1153: point = 506, n_alt = 0
   Insn 1152: point = 508, n_alt = 0
   Insn 1151: point = 510, n_alt = 2
   Insn 2374: point = 511, n_alt = 10
	Hard reg 3 is preferable by r1205 with profit 55
   Insn 1150: point = 513, n_alt = 0
   Insn 1149: point = 515, n_alt = 0
  BB 72
   Insn 1117: point = 517, n_alt = -1
   Insn 2203: point = 517, n_alt = -2
   Insn 2202: point = 517, n_alt = 0
   Insn 1115: point = 518, n_alt = 2
   Insn 2371: point = 519, n_alt = -2
	Hard reg 30 is preferable by r1202 with profit 110
   Insn 1110: point = 521, n_alt = 0
   Insn 2370: point = 522, n_alt = 9
   Insn 2369: point = 524, n_alt = -1
  BB 70
   Insn 2166: point = 526, n_alt = -1
   Insn 2368: point = 526, n_alt = 10
	Hard reg 5 is preferable by r1201 with profit 55
   Insn 1082: point = 528, n_alt = 0
   Insn 1081: point = 530, n_alt = 0
   Insn 29: point = 531, n_alt = 3
   Insn 1080: point = 532, n_alt = 0
   Insn 1078: point = 534, n_alt = 2
   Insn 1079: point = 535, n_alt = 3
  BB 71
   Insn 26: point = 537, n_alt = -2
   Insn 28: point = 539, n_alt = -2
   Insn 1096: point = 541, n_alt = 0
   Insn 27: point = 543, n_alt = 3
   Insn 1094: point = 544, n_alt = 0
   Insn 1095: point = 546, n_alt = 2
   Insn 1093: point = 547, n_alt = 0
  BB 69
   Insn 1075: point = 550, n_alt = -1
   Insn 2205: point = 550, n_alt = -2
   Insn 2204: point = 550, n_alt = 0
   Insn 1068: point = 550, n_alt = 0
   Insn 1064: point = 551, n_alt = 0
   Insn 1062: point = 552, n_alt = 0
   Insn 2367: point = 554, n_alt = 9
	Hard reg 31 is preferable by r1200 with profit 110
   Insn 1061: point = 556, n_alt = 1
   Insn 1060: point = 557, n_alt = 1
   Insn 1059: point = 558, n_alt = 5
   Insn 2366: point = 560, n_alt = 5
   Insn 1073: point = 561, n_alt = 3
   Insn 1067: point = 562, n_alt = 3
   Insn 1063: point = 563, n_alt = 0
   Insn 1055: point = 565, n_alt = -2
   Insn 2080: point = 567, n_alt = -2
   Insn 1054: point = 568, n_alt = -1
   Insn 1053: point = 568, n_alt = -2
  BB 67
   Insn 2164: point = 569, n_alt = -1
   Insn 25: point = 569, n_alt = 2
   Insn 21: point = 570, n_alt = -2
   Insn 24: point = 572, n_alt = -2
   Insn 23: point = 574, n_alt = -2
   Insn 22: point = 576, n_alt = -2
  BB 68
   Insn 20: point = 579, n_alt = 2
  BB 66
   Insn 1043: point = 581, n_alt = -1
   Insn 2207: point = 581, n_alt = -2
   Insn 2206: point = 581, n_alt = 0
   Insn 1036: point = 581, n_alt = 0
   Insn 2079: point = 583, n_alt = -2
   Insn 1035: point = 584, n_alt = -1
   Insn 1034: point = 584, n_alt = -2
   Insn 2078: point = 585, n_alt = 1
   Insn 1032: point = 586, n_alt = -1
   Insn 1031: point = 586, n_alt = 0
   Insn 2077: point = 587, n_alt = -2
   Insn 1029: point = 588, n_alt = -1
   Insn 2365: point = 588, n_alt = 1
	Hard reg 0 is preferable by r1198 with profit 110
   Insn 1028: point = 589, n_alt = 0
   Insn 2364: point = 591, n_alt = -2
	Hard reg 0 is preferable by r1198 with profit 110
	Hard reg 43 is preferable by r1198 with profit 110
   Insn 1026: point = 593, n_alt = 0
   Insn 1024: point = 595, n_alt = 0
   Insn 1025: point = 597, n_alt = 0
  BB 64
   Insn 2160: point = 600, n_alt = -1
   Insn 19: point = 600, n_alt = -2
   Insn 2245: point = 602, n_alt = -2
   Insn 2244: point = 604, n_alt = -2
   Insn 2243: point = 606, n_alt = -2
  BB 62
   Insn 2158: point = 609, n_alt = -1
   Insn 971: point = 609, n_alt = -2
   Insn 2242: point = 611, n_alt = -2
   Insn 2241: point = 613, n_alt = -2
   Insn 2240: point = 615, n_alt = -2
  BB 61
   Insn 966: point = 618, n_alt = 0
   Insn 964: point = 618, n_alt = 1
  BB 60
   Insn 957: point = 621, n_alt = -1
   Insn 956: point = 621, n_alt = 0
   Insn 2363: point = 622, n_alt = 10
	Hard reg 31 is preferable by r1197 with profit 262
   Insn 962: point = 624, n_alt = 0
   Insn 2362: point = 626, n_alt = 10
	Hard reg 31 is preferable by r1196 with profit 262
   Insn 2361: point = 627, n_alt = 5
  BB 59
   Insn 950: point = 629, n_alt = -1
   Insn 949: point = 629, n_alt = 0
   Insn 953: point = 629, n_alt = 0
   Insn 2229: point = 631, n_alt = -2
   Insn 2360: point = 633, n_alt = 10
	Hard reg 3 is preferable by r1194 with profit 890
   Insn 941: point = 635, n_alt = 0
   Insn 2228: point = 637, n_alt = -2
   Insn 952: point = 639, n_alt = 0
   Insn 940: point = 640, n_alt = 0
  BB 65
   Insn 2162: point = 642, n_alt = -1
   Insn 2248: point = 642, n_alt = -2
   Insn 2247: point = 644, n_alt = -2
   Insn 2246: point = 646, n_alt = -2
   Insn 960: point = 648, n_alt = 1
   Insn 18: point = 649, n_alt = 1
  BB 58
   Insn 2156: point = 651, n_alt = -1
   Insn 2359: point = 651, n_alt = -2
	Hard reg 37 is preferable by r1193 with profit 27
   Insn 921: point = 653, n_alt = 0
   Insn 2358: point = 655, n_alt = -2
	Hard reg 37 is preferable by r1193 with profit 27
	Hard reg 43 is preferable by r1193 with profit 27
   Insn 928: point = 656, n_alt = 0
   Insn 920: point = 657, n_alt = 0
   Insn 925: point = 658, n_alt = 0
   Insn 2357: point = 660, n_alt = 9
	Hard reg 8 is preferable by r1192 with profit 27
   Insn 924: point = 662, n_alt = 1
   Insn 916: point = 664, n_alt = 0
   Insn 2076: point = 666, n_alt = -2
   Insn 915: point = 667, n_alt = -1
   Insn 912: point = 667, n_alt = -1
   Insn 910: point = 667, n_alt = 6
   Insn 908: point = 667, n_alt = -1
   Insn 907: point = 667, n_alt = 0
   Insn 2356: point = 668, n_alt = 5
	   Creating copy r1191<-r1282@27
   Insn 905: point = 670, n_alt = 0
   Insn 2355: point = 672, n_alt = 5
	   Creating copy r1190<-r1282@27
   Insn 2455: point = 673, n_alt = -1
	   Creating copy r1282<-r1283@27
   Insn 903: point = 675, n_alt = 0
   Insn 2354: point = 677, n_alt = 5
	   Creating copy r1189<-r1283@27
   Insn 2456: point = 678, n_alt = -1
  BB 57
   Insn 2154: point = 680, n_alt = -1
   Insn 2353: point = 680, n_alt = -2
	Hard reg 37 is preferable by r1188 with profit 82
   Insn 889: point = 682, n_alt = 0
   Insn 2352: point = 684, n_alt = -2
	Hard reg 37 is preferable by r1188 with profit 82
	Hard reg 43 is preferable by r1188 with profit 82
   Insn 888: point = 685, n_alt = 0
   Insn 885: point = 686, n_alt = 0
   Insn 2351: point = 688, n_alt = 9
	Hard reg 8 is preferable by r1187 with profit 82
   Insn 884: point = 690, n_alt = 0
   Insn 880: point = 692, n_alt = 0
   Insn 2350: point = 694, n_alt = 5
   Insn 894: point = 695, n_alt = 0
  BB 56
   Insn 872: point = 697, n_alt = 0
   Insn 2075: point = 698, n_alt = -2
   Insn 869: point = 699, n_alt = -1
   Insn 868: point = 699, n_alt = -2
   Insn 867: point = 699, n_alt = 6
  BB 55
   Insn 864: point = 700, n_alt = 0
   Insn 2074: point = 701, n_alt = -2
   Insn 861: point = 702, n_alt = -1
   Insn 860: point = 702, n_alt = -2
   Insn 859: point = 702, n_alt = 6
   Insn 850: point = 702, n_alt = 0
   Insn 2073: point = 704, n_alt = -2
   Insn 849: point = 705, n_alt = -1
   Insn 848: point = 705, n_alt = -2
   Insn 2072: point = 706, n_alt = 1
   Insn 846: point = 707, n_alt = -1
   Insn 845: point = 707, n_alt = 0
   Insn 2071: point = 708, n_alt = -2
   Insn 843: point = 709, n_alt = -1
   Insn 2349: point = 709, n_alt = 1
	Hard reg 0 is preferable by r1185 with profit 110
   Insn 842: point = 710, n_alt = 0
   Insn 2348: point = 712, n_alt = -2
	Hard reg 0 is preferable by r1185 with profit 110
	Hard reg 31 is preferable by r1185 with profit 110
   Insn 2224: point = 714, n_alt = -2
   Insn 840: point = 716, n_alt = 0
   Insn 2225: point = 718, n_alt = -2
   Insn 838: point = 720, n_alt = 0
   Insn 839: point = 721, n_alt = 0
  BB 53
   Insn 2149: point = 723, n_alt = -1
   Insn 17: point = 723, n_alt = -2
   Insn 2236: point = 725, n_alt = -2
   Insn 2235: point = 727, n_alt = -2
   Insn 2234: point = 729, n_alt = -2
  BB 51
   Insn 2147: point = 732, n_alt = -1
   Insn 782: point = 732, n_alt = -2
   Insn 2233: point = 734, n_alt = -2
   Insn 2232: point = 736, n_alt = -2
   Insn 2231: point = 738, n_alt = -2
  BB 50
   Insn 777: point = 741, n_alt = 0
   Insn 775: point = 741, n_alt = 1
  BB 49
   Insn 768: point = 744, n_alt = -1
   Insn 767: point = 744, n_alt = 0
   Insn 2347: point = 745, n_alt = 10
	Hard reg 31 is preferable by r1184 with profit 262
   Insn 773: point = 747, n_alt = 0
   Insn 2346: point = 749, n_alt = 10
	Hard reg 31 is preferable by r1183 with profit 262
   Insn 2345: point = 750, n_alt = 5
  BB 48
   Insn 761: point = 752, n_alt = -1
   Insn 760: point = 752, n_alt = 0
   Insn 764: point = 752, n_alt = 0
   Insn 2227: point = 754, n_alt = -2
   Insn 2344: point = 756, n_alt = 10
	Hard reg 3 is preferable by r1181 with profit 890
   Insn 752: point = 758, n_alt = 0
   Insn 2226: point = 760, n_alt = -2
   Insn 763: point = 762, n_alt = 0
   Insn 751: point = 763, n_alt = 0
  BB 54
   Insn 2151: point = 765, n_alt = -1
   Insn 2239: point = 765, n_alt = -2
   Insn 2238: point = 767, n_alt = -2
   Insn 2237: point = 769, n_alt = -2
   Insn 771: point = 771, n_alt = 1
   Insn 15: point = 772, n_alt = 1
   Insn 826: point = 773, n_alt = 0
   Insn 825: point = 774, n_alt = 2
  BB 47
   Insn 2145: point = 776, n_alt = -1
   Insn 2343: point = 776, n_alt = -2
	Hard reg 39 is preferable by r1180 with profit 55
   Insn 733: point = 778, n_alt = 0
   Insn 2342: point = 780, n_alt = -2
	Hard reg 39 is preferable by r1180 with profit 55
	Hard reg 44 is preferable by r1180 with profit 55
   Insn 732: point = 781, n_alt = 0
   Insn 725: point = 782, n_alt = 0
   Insn 2341: point = 784, n_alt = 9
	Hard reg 3 is preferable by r1179 with profit 55
   Insn 724: point = 786, n_alt = 0
   Insn 720: point = 788, n_alt = 0
   Insn 2340: point = 790, n_alt = 5
   Insn 16: point = 791, n_alt = -2
   Insn 739: point = 792, n_alt = 0
   Insn 731: point = 793, n_alt = 3
   Insn 2339: point = 795, n_alt = 5
   Insn 736: point = 796, n_alt = 0
   Insn 2338: point = 798, n_alt = 9
	Hard reg 8 is preferable by r1176 with profit 55
   Insn 729: point = 799, n_alt = 3
   Insn 2337: point = 801, n_alt = 5
  BB 46
   Insn 2143: point = 803, n_alt = -1
   Insn 710: point = 803, n_alt = 0
   Insn 707: point = 805, n_alt = 0
   Insn 2336: point = 807, n_alt = 9
	Hard reg 29 is preferable by r1174 with profit 55
   Insn 706: point = 809, n_alt = 1
   Insn 2335: point = 810, n_alt = -2
	Hard reg 39 is preferable by r1173 with profit 55
   Insn 703: point = 812, n_alt = 0
   Insn 2334: point = 814, n_alt = -2
	Hard reg 39 is preferable by r1173 with profit 55
	Hard reg 44 is preferable by r1173 with profit 55
   Insn 702: point = 815, n_alt = 0
   Insn 701: point = 816, n_alt = 3
   Insn 2333: point = 818, n_alt = 5
   Insn 699: point = 819, n_alt = 3
   Insn 2332: point = 821, n_alt = 5
   Insn 694: point = 822, n_alt = 0
   Insn 2070: point = 824, n_alt = -2
   Insn 693: point = 825, n_alt = -1
   Insn 690: point = 825, n_alt = -1
   Insn 688: point = 825, n_alt = 6
   Insn 686: point = 825, n_alt = -1
   Insn 685: point = 825, n_alt = 0
   Insn 2331: point = 826, n_alt = 5
	   Creating copy r1170<-r1280@55
   Insn 683: point = 828, n_alt = 0
   Insn 2330: point = 830, n_alt = 5
	   Creating copy r1169<-r1280@55
   Insn 2453: point = 831, n_alt = -1
	   Creating copy r1280<-r1281@55
   Insn 681: point = 833, n_alt = 0
   Insn 2329: point = 835, n_alt = 5
	   Creating copy r1168<-r1281@55
   Insn 2454: point = 836, n_alt = -1
   Insn 712: point = 837, n_alt = 0
   Insn 2328: point = 839, n_alt = 9
	Hard reg 8 is preferable by r1167 with profit 55
  BB 45
   Insn 674: point = 841, n_alt = 0
   Insn 2069: point = 842, n_alt = -2
   Insn 671: point = 843, n_alt = -1
   Insn 670: point = 843, n_alt = -2
   Insn 669: point = 843, n_alt = 6
   Insn 663: point = 843, n_alt = 0
   Insn 662: point = 844, n_alt = 2
   Insn 661: point = 845, n_alt = -2
   Insn 2068: point = 847, n_alt = -2
   Insn 660: point = 848, n_alt = -1
   Insn 659: point = 848, n_alt = -2
  BB 42
   Insn 2140: point = 849, n_alt = -1
   Insn 622: point = 849, n_alt = -2
   Insn 2063: point = 851, n_alt = -2
   Insn 621: point = 852, n_alt = -1
   Insn 617: point = 852, n_alt = 0
   Insn 2062: point = 854, n_alt = -2
   Insn 616: point = 855, n_alt = -1
   Insn 612: point = 855, n_alt = -1
   Insn 2007: point = 855, n_alt = 6
   Insn 608: point = 855, n_alt = -1
  BB 44
   Insn 654: point = 856, n_alt = -2
   Insn 2067: point = 858, n_alt = -2
   Insn 653: point = 859, n_alt = -1
   Insn 649: point = 859, n_alt = 0
   Insn 2066: point = 861, n_alt = -2
   Insn 648: point = 862, n_alt = -1
   Insn 645: point = 862, n_alt = -1
   Insn 2006: point = 862, n_alt = 6
   Insn 644: point = 862, n_alt = -2
  BB 43
   Insn 637: point = 864, n_alt = 0
   Insn 2065: point = 865, n_alt = -2
   Insn 634: point = 866, n_alt = -1
   Insn 2005: point = 866, n_alt = 6
   Insn 630: point = 866, n_alt = -2
   Insn 2064: point = 868, n_alt = -2
   Insn 629: point = 869, n_alt = -1
  BB 41
   Insn 601: point = 870, n_alt = -1
   Insn 2209: point = 870, n_alt = -2
   Insn 2208: point = 870, n_alt = 1
   Insn 595: point = 870, n_alt = 0
   Insn 2061: point = 872, n_alt = -2
   Insn 594: point = 873, n_alt = -1
   Insn 591: point = 873, n_alt = -1
   Insn 590: point = 873, n_alt = -2
   Insn 589: point = 874, n_alt = -2
   Insn 2060: point = 875, n_alt = -2
   Insn 587: point = 876, n_alt = -1
   Insn 586: point = 876, n_alt = 5
   Insn 2327: point = 877, n_alt = 5
   Insn 584: point = 878, n_alt = -2
   Insn 2059: point = 880, n_alt = -2
   Insn 583: point = 881, n_alt = -1
   Insn 2004: point = 881, n_alt = 6
   Insn 579: point = 881, n_alt = -1
   Insn 578: point = 881, n_alt = 1
  BB 102
   Insn 2194: point = 882, n_alt = -1
   Insn 1805: point = 882, n_alt = 6
   Insn 2432: point = 884, n_alt = 5
   Insn 1818: point = 885, n_alt = -2
   Insn 2109: point = 887, n_alt = -2
   Insn 1817: point = 888, n_alt = -1
   Insn 1816: point = 888, n_alt = 0
   Insn 2108: point = 889, n_alt = -2
   Insn 1814: point = 890, n_alt = -1
   Insn 1811: point = 890, n_alt = -1
   Insn 2019: point = 890, n_alt = 6
   Insn 1807: point = 890, n_alt = -1
   Insn 1806: point = 890, n_alt = 1
  BB 40
   Insn 2230: point = 891, n_alt = -2
   Insn 2325: point = 893, n_alt = 7
   Insn 2326: point = 895, n_alt = -2
	   Creating copy r1164->r1165@13
   Insn 12: point = 897, n_alt = 1
   Insn 14: point = 898, n_alt = 2
   Insn 13: point = 899, n_alt = 3
  BB 37
   Insn 2137: point = 901, n_alt = -1
   Insn 523: point = 901, n_alt = 6
   Insn 2320: point = 903, n_alt = 5
	   Creating copy r1159<-r1278@6
   Insn 2451: point = 905, n_alt = -1
   Insn 2319: point = 906, n_alt = 7
	   Creating copy r1158->r1278@6
   Insn 522: point = 908, n_alt = 5
  BB 39
   Insn 555: point = 910, n_alt = 6
  BB 38
   Insn 545: point = 912, n_alt = -1
   Insn 544: point = 912, n_alt = 0
   Insn 543: point = 913, n_alt = 1
   Insn 537: point = 914, n_alt = 0
   Insn 2324: point = 916, n_alt = 10
	Hard reg 32 is preferable by r1163 with profit 6
   Insn 536: point = 918, n_alt = 0
   Insn 541: point = 920, n_alt = 0
   Insn 533: point = 922, n_alt = 0
   Insn 2323: point = 924, n_alt = 10
	Hard reg 33 is preferable by r1162 with profit 6
   Insn 532: point = 926, n_alt = 0
   Insn 531: point = 928, n_alt = 6
   Insn 2322: point = 930, n_alt = 5
	   Creating copy r1161<-r1279@6
   Insn 539: point = 932, n_alt = 1
   Insn 538: point = 933, n_alt = 5
   Insn 2452: point = 934, n_alt = -1
   Insn 2321: point = 935, n_alt = 7
	   Creating copy r1160->r1279@6
   Insn 530: point = 937, n_alt = 5
   Insn 535: point = 938, n_alt = 0
   Insn 529: point = 940, n_alt = 0
   Insn 528: point = 942, n_alt = 2
  BB 36
   Insn 520: point = 944, n_alt = 0
   Insn 519: point = 944, n_alt = -2
   Insn 2058: point = 946, n_alt = -2
   Insn 516: point = 947, n_alt = -1
   Insn 515: point = 947, n_alt = 1
  BB 34
   Insn 2135: point = 948, n_alt = -1
   Insn 489: point = 948, n_alt = 3
   Insn 2316: point = 950, n_alt = 5
   Insn 487: point = 951, n_alt = -2
   Insn 2056: point = 953, n_alt = -2
   Insn 486: point = 954, n_alt = -1
   Insn 485: point = 954, n_alt = -2
  BB 29
   Insn 2131: point = 956, n_alt = -1
   Insn 413: point = 956, n_alt = 3
   Insn 2304: point = 958, n_alt = 5
   Insn 411: point = 959, n_alt = 3
   Insn 2303: point = 961, n_alt = 5
   Insn 409: point = 962, n_alt = -2
   Insn 2053: point = 964, n_alt = -2
   Insn 408: point = 965, n_alt = -1
   Insn 406: point = 965, n_alt = -2
   Insn 407: point = 967, n_alt = -2
   Insn 2052: point = 968, n_alt = -2
   Insn 405: point = 969, n_alt = -1
   Insn 404: point = 969, n_alt = -2
   Insn 403: point = 969, n_alt = 3
   Insn 2302: point = 971, n_alt = 5
  BB 35
   Insn 503: point = 973, n_alt = 4
   Insn 2450: point = 974, n_alt = -1
	   Creating copy r1157<-r1277@3
   Insn 501: point = 976, n_alt = 0
   Insn 499: point = 978, n_alt = 2
   Insn 500: point = 979, n_alt = 3
   Insn 2449: point = 981, n_alt = -1
	   Creating copy r1156->r1277@3
   Insn 2317: point = 982, n_alt = 5
   Insn 497: point = 983, n_alt = -2
   Insn 2057: point = 985, n_alt = -2
   Insn 496: point = 986, n_alt = -1
   Insn 495: point = 986, n_alt = -2
  BB 33
   Insn 483: point = 988, n_alt = 0
   Insn 481: point = 989, n_alt = 1
   Insn 479: point = 991, n_alt = 0
   Insn 477: point = 993, n_alt = 1
   Insn 476: point = 994, n_alt = 1
   Insn 475: point = 996, n_alt = 1
   Insn 2315: point = 998, n_alt = 5
	   Creating copy r1154<-r1276@6
   Insn 473: point = 1000, n_alt = 0
   Insn 2314: point = 1002, n_alt = 5
	   Creating copy r1153<-r1276@6
   Insn 2448: point = 1003, n_alt = -1
   Insn 471: point = 1004, n_alt = 1
   Insn 468: point = 1006, n_alt = 0
   Insn 470: point = 1008, n_alt = 1
   Insn 467: point = 1009, n_alt = 5
   Insn 466: point = 1010, n_alt = 0
   Insn 2313: point = 1012, n_alt = 5
  BB 31
   Insn 2133: point = 1014, n_alt = -1
   Insn 445: point = 1014, n_alt = 3
   Insn 2309: point = 1016, n_alt = 5
   Insn 443: point = 1017, n_alt = -2
   Insn 2054: point = 1019, n_alt = -2
   Insn 442: point = 1020, n_alt = -1
   Insn 441: point = 1020, n_alt = -2
   Insn 440: point = 1020, n_alt = 3
   Insn 2308: point = 1022, n_alt = 5
  BB 32
   Insn 461: point = 1024, n_alt = 4
   Insn 2447: point = 1025, n_alt = -1
	   Creating copy r1151<-r1275@3
   Insn 459: point = 1027, n_alt = 0
   Insn 457: point = 1029, n_alt = 2
   Insn 458: point = 1030, n_alt = 3
   Insn 2446: point = 1032, n_alt = -1
	   Creating copy r1150->r1275@3
   Insn 2311: point = 1033, n_alt = 5
   Insn 455: point = 1034, n_alt = -2
   Insn 2055: point = 1036, n_alt = -2
   Insn 454: point = 1037, n_alt = -1
   Insn 453: point = 1037, n_alt = -2
   Insn 452: point = 1037, n_alt = 3
   Insn 2310: point = 1039, n_alt = 5
  BB 30
   Insn 437: point = 1041, n_alt = 0
   Insn 435: point = 1042, n_alt = 1
   Insn 433: point = 1044, n_alt = 0
   Insn 431: point = 1046, n_alt = 1
   Insn 424: point = 1047, n_alt = 1
   Insn 423: point = 1049, n_alt = 1
   Insn 2307: point = 1051, n_alt = 5
	   Creating copy r1146<-r1274@6
   Insn 430: point = 1053, n_alt = 1
   Insn 429: point = 1055, n_alt = 1
   Insn 427: point = 1057, n_alt = 0
   Insn 421: point = 1059, n_alt = 0
   Insn 2306: point = 1061, n_alt = 5
	   Creating copy r1145<-r1274@6
   Insn 2445: point = 1062, n_alt = -1
   Insn 419: point = 1063, n_alt = 5
   Insn 420: point = 1064, n_alt = 5
   Insn 425: point = 1065, n_alt = 0
   Insn 2305: point = 1067, n_alt = 5
  BB 28
   Insn 400: point = 1069, n_alt = -1
   Insn 399: point = 1069, n_alt = 0
   Insn 2051: point = 1070, n_alt = -2
   Insn 392: point = 1071, n_alt = -1
   Insn 391: point = 1071, n_alt = 1
  BB 27
   Insn 387: point = 1072, n_alt = 4
   Insn 2443: point = 1073, n_alt = -1
	   Creating copy r1140<-r1272@3
   Insn 385: point = 1075, n_alt = 0
   Insn 383: point = 1077, n_alt = 2
   Insn 384: point = 1078, n_alt = 3
   Insn 2442: point = 1080, n_alt = -1
	   Creating copy r1139->r1272@3
   Insn 2300: point = 1081, n_alt = 5
   Insn 2050: point = 1082, n_alt = -2
   Insn 380: point = 1083, n_alt = -1
   Insn 379: point = 1083, n_alt = 3
   Insn 2299: point = 1084, n_alt = 5
  BB 26
   Insn 374: point = 1086, n_alt = 0
   Insn 372: point = 1087, n_alt = 1
   Insn 370: point = 1089, n_alt = 0
   Insn 368: point = 1091, n_alt = 1
   Insn 367: point = 1092, n_alt = 1
   Insn 366: point = 1094, n_alt = 1
   Insn 2298: point = 1096, n_alt = 5
	   Creating copy r1137<-r1273@6
   Insn 364: point = 1098, n_alt = 0
   Insn 2297: point = 1100, n_alt = 5
	   Creating copy r1136<-r1273@6
   Insn 2444: point = 1101, n_alt = -1
   Insn 362: point = 1102, n_alt = 1
   Insn 361: point = 1104, n_alt = 1
   Insn 359: point = 1106, n_alt = 0
   Insn 357: point = 1107, n_alt = 1
   Insn 2296: point = 1109, n_alt = 5
   Insn 358: point = 1110, n_alt = 5
  BB 25
   Insn 351: point = 1112, n_alt = 4
   Insn 2440: point = 1113, n_alt = -1
	   Creating copy r1134<-r1270@3
   Insn 349: point = 1115, n_alt = 0
   Insn 347: point = 1117, n_alt = 2
   Insn 348: point = 1118, n_alt = 3
   Insn 2439: point = 1120, n_alt = -1
	   Creating copy r1133->r1270@3
   Insn 2294: point = 1121, n_alt = 5
   Insn 2049: point = 1122, n_alt = -2
   Insn 344: point = 1123, n_alt = -1
   Insn 343: point = 1123, n_alt = 3
   Insn 2293: point = 1124, n_alt = 5
  BB 24
   Insn 338: point = 1126, n_alt = 0
   Insn 336: point = 1127, n_alt = 1
   Insn 334: point = 1129, n_alt = 0
   Insn 332: point = 1131, n_alt = 1
   Insn 325: point = 1132, n_alt = 1
   Insn 324: point = 1134, n_alt = 1
   Insn 2292: point = 1136, n_alt = 5
	   Creating copy r1131<-r1271@6
   Insn 331: point = 1138, n_alt = 1
   Insn 330: point = 1140, n_alt = 1
   Insn 328: point = 1142, n_alt = 0
   Insn 322: point = 1144, n_alt = 0
   Insn 2291: point = 1146, n_alt = 5
	   Creating copy r1130<-r1271@6
   Insn 2441: point = 1147, n_alt = -1
   Insn 320: point = 1148, n_alt = 5
   Insn 326: point = 1149, n_alt = 1
   Insn 2290: point = 1151, n_alt = 5
   Insn 321: point = 1152, n_alt = 5
  BB 23
   Insn 313: point = 1154, n_alt = -1
   Insn 312: point = 1154, n_alt = 0
   Insn 2048: point = 1155, n_alt = -2
   Insn 305: point = 1156, n_alt = -1
   Insn 304: point = 1156, n_alt = 1
  BB 18
   Insn 2126: point = 1157, n_alt = -1
   Insn 7: point = 1157, n_alt = -2
   Insn 6: point = 1158, n_alt = 1
   Insn 251: point = 1159, n_alt = 6
   Insn 2289: point = 1160, n_alt = 5
  BB 22
   Insn 1981: point = 1162, n_alt = 9
   Insn 2215: point = 1163, n_alt = -2
   Insn 2214: point = 1163, n_alt = 1
  BB 20
   Insn 2129: point = 1165, n_alt = -1
   Insn 4: point = 1165, n_alt = 3
   Insn 282: point = 1166, n_alt = -2
   Insn 2046: point = 1168, n_alt = -2
   Insn 281: point = 1169, n_alt = -1
   Insn 280: point = 1169, n_alt = -2
  BB 21
   Insn 5: point = 1171, n_alt = 1
   Insn 291: point = 1172, n_alt = -2
   Insn 2047: point = 1174, n_alt = -2
   Insn 290: point = 1175, n_alt = -1
   Insn 289: point = 1175, n_alt = -2
  BB 19
   Insn 275: point = 1177, n_alt = -1
   Insn 2217: point = 1177, n_alt = -2
   Insn 2216: point = 1177, n_alt = 1
   Insn 2045: point = 1178, n_alt = -2
   Insn 271: point = 1179, n_alt = -1
   Insn 270: point = 1179, n_alt = -2
  BB 17
   Insn 243: point = 1180, n_alt = 0
   Insn 2044: point = 1181, n_alt = -2
   Insn 240: point = 1182, n_alt = -1
   Insn 238: point = 1182, n_alt = 6
   Insn 235: point = 1182, n_alt = -1
   Insn 234: point = 1182, n_alt = 1
  BB 16
   Insn 2123: point = 1183, n_alt = -1
   Insn 10: point = 1183, n_alt = 3
   Insn 9: point = 1184, n_alt = 1
   Insn 220: point = 1185, n_alt = 6
   Insn 2288: point = 1186, n_alt = 5
   Insn 219: point = 1187, n_alt = 5
  BB 15
   Insn 212: point = 1189, n_alt = -1
   Insn 2219: point = 1189, n_alt = -2
   Insn 2218: point = 1189, n_alt = 1
   Insn 210: point = 1189, n_alt = 5
  BB 13
   Insn 2120: point = 1191, n_alt = -1
   Insn 188: point = 1191, n_alt = 3
   Insn 2285: point = 1193, n_alt = 5
  BB 14
   Insn 206: point = 1195, n_alt = 4
   Insn 2287: point = 1196, n_alt = 5
	   Creating copy r1126<-r1269@3
   Insn 204: point = 1198, n_alt = 0
   Insn 2043: point = 1200, n_alt = -2
   Insn 203: point = 1201, n_alt = -1
   Insn 200: point = 1201, n_alt = -1
   Insn 198: point = 1201, n_alt = 6
   Insn 196: point = 1201, n_alt = -1
   Insn 195: point = 1201, n_alt = 5
   Insn 2286: point = 1202, n_alt = 5
	   Creating copy r1125<-r1269@3
   Insn 2438: point = 1203, n_alt = -1
  BB 12
   Insn 185: point = 1205, n_alt = -1
   Insn 184: point = 1205, n_alt = 0
   Insn 2042: point = 1206, n_alt = -2
   Insn 177: point = 1207, n_alt = -1
   Insn 176: point = 1207, n_alt = 1
  BB 10
   Insn 2118: point = 1208, n_alt = -1
   Insn 2281: point = 1208, n_alt = 7
   Insn 1943: point = 1210, n_alt = 5
  BB 11
   Insn 172: point = 1212, n_alt = 6
   Insn 2284: point = 1213, n_alt = 5
	   Creating copy r1123<-r1267@3
   Insn 2041: point = 1215, n_alt = -2
   Insn 170: point = 1216, n_alt = -1
   Insn 167: point = 1216, n_alt = -1
   Insn 165: point = 1216, n_alt = 6
   Insn 163: point = 1216, n_alt = -1
   Insn 162: point = 1216, n_alt = 5
   Insn 2283: point = 1217, n_alt = 5
	   Creating copy r1122<-r1267@3
   Insn 2436: point = 1218, n_alt = -1
	   Creating copy r1267<-r1268@3
   Insn 2437: point = 1220, n_alt = -1
   Insn 2282: point = 1221, n_alt = 7
	   Creating copy r1121->r1268@3
   Insn 160: point = 1223, n_alt = 5
  BB 9
   Insn 157: point = 1225, n_alt = -1
   Insn 156: point = 1225, n_alt = 0
   Insn 2040: point = 1226, n_alt = -2
   Insn 149: point = 1227, n_alt = -1
   Insn 148: point = 1227, n_alt = 1
  BB 8
   Insn 2115: point = 1228, n_alt = -1
   Insn 142: point = 1228, n_alt = 4
   Insn 2280: point = 1229, n_alt = 5
	   Creating copy r1119<-r1266@3
   Insn 140: point = 1231, n_alt = 0
   Insn 2039: point = 1233, n_alt = -2
   Insn 139: point = 1234, n_alt = -1
   Insn 136: point = 1234, n_alt = -1
   Insn 134: point = 1234, n_alt = 6
   Insn 132: point = 1234, n_alt = -1
   Insn 131: point = 1234, n_alt = 5
   Insn 2279: point = 1235, n_alt = 5
	   Creating copy r1118<-r1266@3
   Insn 2435: point = 1236, n_alt = -1
  BB 7
   Insn 2113: point = 1238, n_alt = -1
   Insn 124: point = 1238, n_alt = 3
   Insn 2278: point = 1240, n_alt = 5
  BB 6
   Insn 121: point = 1242, n_alt = -1
   Insn 120: point = 1242, n_alt = 0
   Insn 2038: point = 1243, n_alt = -2
   Insn 113: point = 1244, n_alt = -1
   Insn 112: point = 1244, n_alt = 1
  BB 4
   Insn 2111: point = 1245, n_alt = -1
   Insn 2274: point = 1245, n_alt = 7
   Insn 1942: point = 1247, n_alt = 5
  BB 5
   Insn 108: point = 1249, n_alt = 6
   Insn 2277: point = 1250, n_alt = 5
	   Creating copy r1116<-r1264@3
   Insn 2037: point = 1252, n_alt = -2
   Insn 106: point = 1253, n_alt = -1
   Insn 103: point = 1253, n_alt = -1
   Insn 101: point = 1253, n_alt = 6
   Insn 99: point = 1253, n_alt = -1
   Insn 98: point = 1253, n_alt = 5
   Insn 2276: point = 1254, n_alt = 5
	   Creating copy r1115<-r1264@3
   Insn 2433: point = 1255, n_alt = -1
	   Creating copy r1264<-r1265@3
   Insn 2434: point = 1257, n_alt = -1
   Insn 2275: point = 1258, n_alt = 7
	   Creating copy r1114->r1265@3
   Insn 96: point = 1260, n_alt = 5
  BB 3
   Insn 93: point = 1262, n_alt = -1
   Insn 92: point = 1262, n_alt = 0
   Insn 2036: point = 1263, n_alt = -2
   Insn 85: point = 1264, n_alt = -1
   Insn 84: point = 1264, n_alt = 1
  BB 2
   Insn 81: point = 1265, n_alt = -1
   Insn 80: point = 1265, n_alt = 0
   Insn 2035: point = 1266, n_alt = -2
   Insn 73: point = 1267, n_alt = -1
   Insn 2273: point = 1267, n_alt = 13
   Insn 69: point = 1269, n_alt = 0
   Insn 2272: point = 1271, n_alt = 13
   Insn 64: point = 1273, n_alt = 0
   Insn 72: point = 1275, n_alt = 1
   Insn 68: point = 1275, n_alt = 3
   Insn 2271: point = 1277, n_alt = 5
   Insn 63: point = 1278, n_alt = 3
   Insn 2270: point = 1280, n_alt = 5
   Insn 60: point = 1281, n_alt = -1
   Insn 40: point = 1281, n_alt = -1
   Insn 39: point = 1281, n_alt = 5
  BB 52
   Insn 811: point = 1281, n_alt = -1
   Insn 810: point = 1281, n_alt = 0
   Insn 798: point = 1282, n_alt = 0
   Insn 795: point = 1283, n_alt = 0
  BB 63
   Insn 1000: point = 1285, n_alt = -1
   Insn 999: point = 1285, n_alt = 0
   Insn 987: point = 1286, n_alt = 0
   Insn 984: point = 1287, n_alt = 0
 r125: [1238..1238] [1228..1231] [1195..1198] [1189..1191] [1175..1182] [1169..1170]
 r146: [1112..1115]
 r154: [1072..1075]
 r160: [1024..1037] [986..1020] [954..955]
 r169: [921..922]
 r171: [910..914]
 r173: [609..609] [579..600] [443..570]
 r181: [862..866] [856..856] [770..849] [732..738] [647..729] [609..615] [496..606] [487..489]
 r183: [1281..1284] [683..845] [654..679]
 r193: [1281..1288] [803..819] [598..799]
 r195: [1281..1288] [803..816] [596..793]
 r199: [733..736]
 r200: [711..714]
 r201: [717..718]
 r216: [311..450]
 r220: [610..613]
 r221: [590..595]
 r222: [594..597]
 r227: [523..558]
 r279: [337..449] [311..312]
 r283: [292..296]
 r296: [230..232]
 r309: [162..206]
 r314: [168..205]
 r339: [1281..1288] [0..898]
 r340: [579..581] [564..572]
 r341: [768..772] [724..727]
 r342: [1183..1184] [1171..1171] [1162..1165] [1066..1158]
 r343: [1183..1183] [1162..1162] [1011..1157]
 r345: [732..732] [645..723] [609..611] [581..604] [571..578]
 r346: [1281..1288] [864..870] [856..859] [274..852]
 r347: [579..579] [451..569]
 r348: [548..551] [311..539]
 r349: [490..500] [448..472]
 r350: [418..418] [381..389] [326..347]
 r351: [418..419] [381..381] [330..339]
 r352: [418..421] [381..385] [327..343]
 r353: [294..300] [286..289] [280..283]
 r354: [1281..1288] [618..773]
 r355: [1281..1288] [0..1271]
 r356: [1281..1288] [0..1267]
 r357: [919..938]
 r358: [927..940]
 r359: [804..843] [779..802]
 r360: [1281..1284] [803..805] [741..796]
 r361: [1281..1284] [803..803] [741..792]
 r362: [1285..1288] [581..702] [573..578]
 r363: [1285..1288] [680..695] [618..656]
 r364: [451..565]
 r365: [311..550]
 r366: [515..519] [488..489]
 r368: [441..453] [247..308] [114..126]
 r369: [272..278]
 r370: [11..275]
 r371: [266..270]
 r372: [11..267]
 r373: [11..263]
 r374: [11..258]
 r375: [11..253]
 r380: [146..207]
 r389: [537..537] [439..526] [245..306] [112..124]
 r393: [537..541] [311..531]
 r394: [437..444]
 r395: [619..633]
 r396: [623..629]
 r397: [1285..1288] [680..686] [579..664] [517..574] [488..489]
 r398: [1285..1288] [680..680] [579..651] [515..576]
 r400: [742..756]
 r401: [746..752]
 r402: [1281..1288] [803..810] [581..776] [575..578]
 r403: [1281..1288] [803..822] [581..782] [577..578]
 r404: [1281..1288] [803..837] [680..791] [618..658]
 r408: [1171..1172] [1163..1166]
 r409: [1024..1034] [973..1017] [939..965]
 r410: [1024..1027] [973..1014] [939..959]
 r411: [967..969]
 r412: [973..983] [956..962] [941..951]
 r413: [973..976] [956..956] [941..948]
 r416: [910..928] [892..901]
 r418: [1281..1288] [891..899] [564..885]
 r420: [643..649] [601..602]
 r423: [537..543] [311..532]
 r429: [435..445]
 r452: [44..75]
 r457: [38..76]
 r463: [1281..1288] [5..893] [0..0]
 r475: [97..99]
 r481: [1274..1278]
 r483: [1270..1275]
 r519: [1189..1189] [1180..1182] [1159..1161]
 r521: [1185..1187]
 r533: [1130..1132]
 r534: [1133..1144]
 r535: [1143..1152]
 r537: [1133..1134]
 r538: [1141..1149]
 r539: [1128..1138]
 r540: [1139..1142]
 r543: [1139..1140]
 r545: [1130..1131]
 r546: [1128..1129]
 r548: [1126..1127]
 r552: [1116..1117]
 r553: [1116..1118]
 r556: [1105..1107]
 r557: [1090..1102]
 r558: [1103..1106]
 r559: [1099..1110]
 r561: [1103..1104]
 r562: [1088..1092]
 r563: [1093..1098]
 r566: [1093..1094]
 r568: [1090..1091]
 r569: [1088..1089]
 r571: [1086..1087]
 r575: [1076..1077]
 r576: [1076..1078]
 r585: [1045..1047]
 r586: [1048..1059]
 r587: [1058..1064]
 r589: [1048..1049]
 r590: [1056..1065]
 r591: [1043..1053]
 r592: [1054..1057]
 r595: [1054..1055]
 r597: [1045..1046]
 r598: [1043..1044]
 r600: [1041..1042]
 r605: [1028..1029]
 r606: [1028..1030]
 r609: [1007..1010]
 r610: [992..1004]
 r611: [1005..1006]
 r612: [1001..1009]
 r614: [1005..1008]
 r615: [990..994]
 r616: [995..1000]
 r619: [995..996]
 r621: [992..993]
 r622: [990..991]
 r624: [988..989]
 r627: [977..978]
 r628: [977..979]
 r630: [910..944]
 r632: [939..942]
 r634: [925..926]
 r636: [917..918]
 r637: [921..933]
 r639: [921..932]
 r640: [910..920]
 r642: [912..913]
 r651: [873..878]
 r664: [843..844]
 r672: [829..833]
 r674: [825..828]
 r681: [813..815]
 r682: [806..807]
 r688: [787..788]
 r692: [785..786]
 r695: [779..781]
 r696: [759..760]
 r697: [753..754]
 r701: [742..747]
 r703: [773..774]
 r704: [713..716]
 r716: [691..692]
 r720: [689..690]
 r721: [683..685]
 r727: [671..675]
 r729: [667..670]
 r734: [654..657]
 r735: [661..662]
 r736: [636..637]
 r737: [630..631]
 r741: [619..624]
 r743: [592..593]
 r747: [553..554]
 r748: [538..557]
 r749: [551..552]
 r750: [551..563]
 r751: [550..562]
 r752: [540..561]
 r754: [533..534]
 r755: [533..535]
 r756: [529..530]
 r757: [545..547]
 r759: [542..544]
 r760: [542..546]
 r763: [517..518]
 r764: [486..488]
 r765: [481..483]
 r767: [475..480]
 r768: [479..482]
 r769: [477..478]
 r772: [467..468]
 r773: [514..515]
 r774: [509..511]
 r776: [503..508]
 r777: [507..510]
 r778: [505..506]
 r783: [491..492]
 r784: [460..462]
 r785: [463..464]
 r786: [458..459]
 r787: [460..461]
 r794: [301..302]
 r796: [429..430]
 r798: [427..428]
 r801: [421..426] [415..417] [373..380]
 r803: [369..370]
 r804: [356..368]
 r805: [350..355]
 r807: [364..376]
 r808: [360..365]
 r809: [354..359]
 r810: [346..353]
 r813: [358..361]
 r814: [352..357]
 r815: [342..351]
 r817: [404..412]
 r818: [398..403]
 r819: [392..397]
 r821: [421..422] [408..417]
 r822: [402..409]
 r823: [396..401]
 r824: [388..395]
 r827: [400..405]
 r828: [394..399]
 r829: [384..393]
 r830: [334..336]
 r833: [320..328]
 r834: [322..323] [316..317]
 r857: [7..8]
 r858: [235..236]
 r859: [233..234]
 r860: [129..250]
 r861: [229..231]
 r862: [225..228]
 r863: [221..222]
 r864: [213..220]
 r866: [227..230]
 r867: [219..226]
 r868: [215..216]
 r869: [213..214]
 r870: [211..212]
 r873: [156..210]
 r875: [194..195]
 r876: [192..193]
 r877: [183..191]
 r880: [201..202]
 r881: [199..200]
 r882: [180..198]
 r885: [187..188]
 r886: [185..186]
 r887: [177..184]
 r889: [170..172]
 r894: [164..165]
 r895: [150..163]
 r896: [144..149]
 r899: [158..159]
 r900: [148..157]
 r901: [141..147]
 r904: [152..153]
 r905: [146..151]
 r906: [138..145]
 r908: [130..133]
 r913: [102..103]
 r914: [100..101]
 r915: [11..115]
 r916: [96..98]
 r917: [92..95]
 r918: [88..89]
 r919: [80..87]
 r921: [94..97]
 r922: [86..93]
 r923: [82..83]
 r924: [80..81]
 r925: [78..79]
 r928: [32..77]
 r930: [66..67]
 r931: [59..65]
 r934: [71..72]
 r935: [56..70]
 r938: [61..62]
 r939: [53..60]
 r941: [46..48]
 r946: [40..41]
 r947: [26..39]
 r950: [34..35]
 r951: [23..33]
 r954: [28..29]
 r955: [20..27]
 r957: [12..15]
 r967: [1281..1288] [1249..1257] [1228..1245] [1212..1220] [0..1208]
 r968: [243..248] [120..122] [110..117]
 r969: [241..249] [120..120] [108..118]
 r970: [1281..1288] [910..934] [0..905]
 r973: [1090..1148] [992..1063]
 r986: [1285..1288] [618..648]
 r988: [1281..1284] [741..771]
 r996: [1265..1266]
 r997: [1262..1263]
 r998: [1249..1252]
 r999: [1242..1243]
 r1000: [1232..1233]
 r1001: [1225..1226]
 r1002: [1212..1215]
 r1003: [1205..1206]
 r1004: [1199..1200]
 r1005: [1180..1181]
 r1006: [1177..1178]
 r1007: [1167..1168]
 r1008: [1173..1174]
 r1009: [1154..1155]
 r1010: [1116..1122]
 r1011: [1076..1082]
 r1012: [1069..1070]
 r1013: [966..968]
 r1014: [963..964]
 r1015: [1018..1019]
 r1016: [1035..1036]
 r1017: [952..953]
 r1018: [984..985]
 r1019: [945..946]
 r1020: [879..880]
 r1021: [874..875]
 r1022: [871..872]
 r1023: [853..854]
 r1024: [850..851]
 r1025: [867..868]
 r1026: [864..865]
 r1027: [860..861]
 r1028: [857..858]
 r1029: [846..847]
 r1030: [841..842]
 r1031: [823..824]
 r1032: [707..708]
 r1033: [705..706]
 r1034: [703..704]
 r1035: [700..701]
 r1036: [697..698]
 r1037: [665..666]
 r1038: [586..587]
 r1039: [584..585]
 r1040: [582..583]
 r1041: [566..567]
 r1042: [470..471]
 r1043: [498..499]
 r1044: [494..495]
 r1045: [454..455]
 r1046: [329..331]
 r1047: [324..325]
 r1048: [315..319]
 r1049: [284..285]
 r1050: [297..298]
 r1051: [294..295]
 r1052: [290..291]
 r1053: [279..281]
 r1054: [276..277]
 r1055: [271..273]
 r1056: [268..269]
 r1057: [264..265]
 r1058: [259..260]
 r1059: [254..255]
 r1060: [208..209]
 r1061: [173..174]
 r1062: [169..171]
 r1063: [134..135]
 r1064: [129..131]
 r1065: [49..50]
 r1066: [45..47]
 r1067: [16..17]
 r1068: [11..13]
 r1069: [888..889]
 r1070: [886..887]
 r1072: [715..720]
 r1073: [719..721]
 r1074: [761..763]
 r1075: [755..762]
 r1076: [638..640]
 r1077: [632..639]
 r1078: [891..891] [766..882] [732..734] [691..725] [663..679]
 r1079: [11..113]
 r1080: [11..111]
 r1081: [11..109]
 r1082: [11..107]
 r1083: [127..246]
 r1084: [125..244]
 r1085: [123..242]
 r1086: [121..240]
 r1087: [311..442]
 r1088: [309..440]
 r1089: [307..438]
 r1090: [311..436]
 r1091: [311..434]
 r1092: [1285..1288] [616..646] [607..608]
 r1093: [1285..1288] [612..644] [605..608]
 r1094: [1285..1288] [618..642] [603..608]
 r1095: [614..618]
 r1096: [1281..1284] [739..769] [730..731]
 r1097: [1281..1284] [741..767] [728..731]
 r1098: [1281..1284] [735..765] [726..731]
 r1099: [737..741]
 r1101: [1144..1144]
 r1102: [1142..1142]
 r1103: [1106..1106]
 r1104: [1098..1098]
 r1105: [1059..1059]
 r1106: [1057..1057]
 r1107: [1006..1006]
 r1108: [1000..1000]
 r1109: [1279..1280]
 r1110: [1276..1277]
 r1111: [1272..1273]
 r1112: [1268..1269]
 r1113: [1246..1247]
 r1114: [1259..1260]
 r1115: [1253..1254]
 r1116: [1249..1250]
 r1117: [1239..1240]
 r1118: [1234..1235]
 r1119: [1228..1229]
 r1120: [1209..1210]
 r1121: [1222..1223]
 r1122: [1216..1217]
 r1123: [1212..1213]
 r1124: [1192..1193]
 r1125: [1201..1202]
 r1126: [1195..1196]
 r1127: [1185..1186]
 r1128: [1159..1160]
 r1129: [1150..1151]
 r1130: [1145..1146]
 r1131: [1135..1136]
 r1132: [1123..1124]
 r1133: [1119..1121]
 r1134: [1112..1113]
 r1135: [1108..1109]
 r1136: [1099..1100]
 r1137: [1095..1096]
 r1138: [1083..1084]
 r1139: [1079..1081]
 r1140: [1072..1073]
 r1141: [970..971]
 r1142: [960..961]
 r1143: [957..958]
 r1144: [1066..1067]
 r1145: [1060..1061]
 r1146: [1050..1051]
 r1147: [1021..1022]
 r1148: [1015..1016]
 r1149: [1038..1039]
 r1150: [1031..1033]
 r1151: [1024..1025]
 r1152: [1011..1012]
 r1153: [1001..1002]
 r1154: [997..998]
 r1155: [949..950]
 r1156: [980..982]
 r1157: [973..974]
 r1158: [907..908]
 r1159: [902..903]
 r1160: [936..937]
 r1161: [929..930]
 r1162: [923..924]
 r1163: [915..916]
 r1164: [896..897]
 r1165: [894..895]
 r1166: [876..877]
 r1167: [838..839]
 r1168: [834..835]
 r1169: [829..830]
 r1170: [825..826]
 r1171: [820..821]
 r1172: [817..818]
 r1173: [811..814]
 r1174: [808..809]
 r1175: [800..801]
 r1176: [797..798]
 r1177: [794..795]
 r1178: [789..790]
 r1179: [783..784]
 r1180: [777..780]
 r1181: [757..758]
 r1182: [748..750]
 r1183: [748..749]
 r1184: [744..745]
 r1185: [709..712]
 r1186: [693..694]
 r1187: [687..688]
 r1188: [681..684]
 r1189: [676..677]
 r1190: [671..672]
 r1191: [667..668]
 r1192: [659..660]
 r1193: [652..655]
 r1194: [634..635]
 r1195: [625..627]
 r1196: [625..626]
 r1197: [621..622]
 r1198: [588..591]
 r1199: [559..560]
 r1200: [555..556]
 r1201: [527..528]
 r1202: [524..524] [520..522]
 r1203: [484..485]
 r1204: [473..474]
 r1205: [512..513]
 r1206: [501..502]
 r1207: [456..457]
 r1208: [303..304]
 r1209: [446..447]
 r1210: [431..432]
 r1211: [423..424]
 r1212: [377..379]
 r1213: [373..374]
 r1214: [371..372]
 r1215: [366..367]
 r1216: [362..363]
 r1217: [348..349]
 r1218: [344..345]
 r1219: [340..341]
 r1220: [415..416]
 r1221: [413..414]
 r1222: [410..411]
 r1223: [406..407]
 r1224: [390..391]
 r1225: [386..387]
 r1226: [382..383]
 r1227: [332..333]
 r1228: [313..314]
 r1229: [261..262]
 r1230: [256..257]
 r1231: [1..2]
 r1232: [3..4]
 r1233: [237..238]
 r1234: [223..224]
 r1235: [217..218]
 r1236: [203..204]
 r1237: [196..197]
 r1238: [189..190]
 r1239: [181..182]
 r1240: [178..179]
 r1241: [175..176]
 r1242: [166..167]
 r1243: [160..161]
 r1244: [154..155]
 r1245: [142..143]
 r1246: [139..140]
 r1247: [136..137]
 r1248: [104..105]
 r1249: [90..91]
 r1250: [84..85]
 r1251: [73..74]
 r1252: [68..69]
 r1253: [63..64]
 r1254: [57..58]
 r1255: [54..55]
 r1256: [51..52]
 r1257: [42..43]
 r1258: [36..37]
 r1259: [30..31]
 r1260: [24..25]
 r1261: [21..22]
 r1262: [18..19]
 r1263: [883..884]
 r1264: [1251..1255]
 r1265: [1256..1258]
 r1266: [1230..1236]
 r1267: [1214..1218]
 r1268: [1219..1221]
 r1269: [1197..1203]
 r1270: [1114..1120]
 r1271: [1137..1147]
 r1272: [1074..1080]
 r1273: [1097..1101]
 r1274: [1052..1062]
 r1275: [1026..1032]
 r1276: [999..1003]
 r1277: [975..981]
 r1278: [904..906]
 r1279: [931..935]
 r1280: [827..831]
 r1281: [832..836]
 r1282: [669..673]
 r1283: [674..678]
 r1284: [375..378]
 r1285: [318..321]
Compressing live ranges: from 1289 to 968 - 75%
Ranges after the compression:
 r125: [931..931] [923..926] [899..902] [895..896] [887..890] [881..882]
 r146: [840..843]
 r154: [809..812]
 r160: [773..782] [747..770] [724..725]
 r169: [700..701]
 r171: [692..693]
 r173: [480..480] [454..471] [357..445]
 r181: [661..662] [656..656] [599..651] [570..576] [509..567] [480..486] [396..477] [389..391]
 r183: [964..965] [532..649] [511..530]
 r193: [964..967] [619..629] [470..616]
 r195: [964..967] [619..627] [468..612]
 r199: [571..574]
 r200: [552..555]
 r201: [558..559]
 r216: [240..362]
 r220: [481..484]
 r221: [462..467]
 r222: [466..469]
 r227: [414..439]
 r279: [262..362] [240..241]
 r283: [230..231]
 r296: [186..187]
 r309: [129..164]
 r314: [135..164]
 r339: [964..967] [0..685]
 r340: [454..455] [442..447]
 r341: [597..600] [562..565]
 r342: [891..892] [883..883] [876..878] [805..873]
 r343: [891..891] [876..876] [765..873]
 r345: [570..570] [507..561] [480..482] [455..475] [446..453]
 r346: [964..967] [661..664] [656..658] [218..653]
 r347: [454..454] [363..445]
 r348: [432..434] [240..425]
 r349: [392..397] [361..378]
 r350: [337..337] [302..310] [254..271]
 r351: [337..338] [302..302] [256..263]
 r352: [337..339] [302..306] [254..267]
 r353: [230..233] [226..227] [222..223]
 r354: [964..967] [488..601]
 r355: [964..967] [0..955]
 r356: [964..967] [0..951]
 r357: [698..713]
 r358: [706..715]
 r359: [620..648] [603..618]
 r360: [964..965] [619..621] [578..614]
 r361: [964..965] [619..619] [578..612]
 r362: [966..967] [455..545] [448..453]
 r363: [966..967] [531..541] [488..512]
 r364: [363..443]
 r365: [240..433]
 r366: [409..411] [390..391]
 r368: [355..364] [200..239] [92..100]
 r369: [216..221]
 r370: [7..219]
 r371: [212..215]
 r372: [7..213]
 r373: [7..209]
 r374: [7..205]
 r375: [7..201]
 r380: [113..164]
 r389: [423..423] [353..416] [198..237] [90..98]
 r393: [423..427] [240..420]
 r394: [351..358]
 r395: [489..498]
 r396: [491..494]
 r397: [966..967] [531..533] [454..518] [410..449] [390..391]
 r398: [966..967] [531..531] [454..510] [409..451]
 r400: [579..588]
 r401: [581..584]
 r402: [964..967] [619..625] [455..602] [450..453]
 r403: [964..967] [619..631] [455..604] [452..453]
 r404: [964..967] [619..643] [531..612] [488..512]
 r408: [883..884] [877..878]
 r409: [773..780] [737..768] [714..732]
 r410: [773..776] [737..766] [714..728]
 r411: [733..734]
 r412: [737..744] [726..730] [716..721]
 r413: [737..740] [726..726] [716..719]
 r416: [692..707] [680..685]
 r418: [964..967] [679..685] [442..674]
 r420: [505..510] [472..473]
 r423: [423..429] [240..420]
 r429: [349..358]
 r452: [35..58]
 r457: [29..58]
 r463: [964..967] [5..681] [0..0]
 r475: [78..79]
 r481: [958..961]
 r483: [954..959]
 r519: [895..895] [889..890] [874..875]
 r521: [893..894]
 r533: [854..855]
 r534: [856..867]
 r535: [866..871]
 r537: [856..857]
 r538: [864..869]
 r539: [852..861]
 r540: [862..865]
 r543: [862..863]
 r545: [854..855]
 r546: [852..853]
 r548: [850..851]
 r552: [844..845]
 r553: [844..845]
 r556: [835..837]
 r557: [823..832]
 r558: [833..836]
 r559: [831..839]
 r561: [833..834]
 r562: [821..824]
 r563: [825..830]
 r566: [825..826]
 r568: [823..824]
 r569: [821..822]
 r571: [819..820]
 r575: [813..814]
 r576: [813..814]
 r585: [789..790]
 r586: [791..802]
 r587: [801..804]
 r589: [791..792]
 r590: [799..804]
 r591: [787..796]
 r592: [797..800]
 r595: [797..798]
 r597: [789..790]
 r598: [787..788]
 r600: [785..786]
 r605: [777..778]
 r606: [777..778]
 r609: [763..764]
 r610: [751..760]
 r611: [761..762]
 r612: [759..764]
 r614: [761..764]
 r615: [749..752]
 r616: [753..758]
 r619: [753..754]
 r621: [751..752]
 r622: [749..750]
 r624: [747..748]
 r627: [741..742]
 r628: [741..742]
 r630: [692..717]
 r632: [714..717]
 r634: [704..705]
 r636: [696..697]
 r637: [700..711]
 r639: [700..711]
 r640: [692..699]
 r642: [692..693]
 r651: [667..670]
 r664: [648..649]
 r672: [638..641]
 r674: [634..637]
 r681: [626..627]
 r682: [622..623]
 r688: [609..610]
 r692: [607..608]
 r695: [603..604]
 r696: [591..592]
 r697: [585..586]
 r701: [579..582]
 r703: [601..602]
 r704: [554..557]
 r716: [538..539]
 r720: [536..537]
 r721: [532..533]
 r727: [525..528]
 r729: [521..524]
 r734: [511..512]
 r735: [515..516]
 r736: [501..502]
 r737: [495..496]
 r741: [489..492]
 r743: [464..465]
 r747: [436..437]
 r748: [424..439]
 r749: [434..435]
 r750: [434..441]
 r751: [433..441]
 r752: [426..441]
 r754: [421..422]
 r755: [421..422]
 r756: [419..420]
 r757: [430..431]
 r759: [428..429]
 r760: [428..431]
 r763: [410..411]
 r764: [389..390]
 r765: [385..386]
 r767: [381..384]
 r768: [383..386]
 r769: [381..382]
 r772: [375..376]
 r773: [408..409]
 r774: [404..405]
 r776: [400..403]
 r777: [402..405]
 r778: [400..401]
 r783: [392..393]
 r784: [371..372]
 r785: [373..374]
 r786: [369..370]
 r787: [371..372]
 r794: [234..235]
 r796: [345..346]
 r798: [343..344]
 r801: [339..342] [335..336] [296..301]
 r803: [292..293]
 r804: [280..291]
 r805: [274..279]
 r807: [288..299]
 r808: [284..289]
 r809: [278..283]
 r810: [270..277]
 r813: [282..285]
 r814: [276..281]
 r815: [266..275]
 r817: [325..332]
 r818: [319..324]
 r819: [313..318]
 r821: [339..340] [329..336]
 r822: [323..330]
 r823: [317..322]
 r824: [309..316]
 r827: [321..326]
 r828: [315..320]
 r829: [305..314]
 r830: [260..261]
 r833: [248..255]
 r834: [250..251] [244..245]
 r857: [5..6]
 r858: [190..191]
 r859: [188..189]
 r860: [101..201]
 r861: [185..187]
 r862: [181..184]
 r863: [177..178]
 r864: [169..176]
 r866: [183..186]
 r867: [175..182]
 r868: [171..172]
 r869: [169..170]
 r870: [167..168]
 r873: [123..166]
 r875: [155..156]
 r876: [153..154]
 r877: [145..152]
 r880: [161..162]
 r881: [159..160]
 r882: [143..158]
 r885: [149..150]
 r886: [147..148]
 r887: [141..146]
 r889: [135..136]
 r894: [131..132]
 r895: [117..130]
 r896: [111..116]
 r899: [125..126]
 r900: [115..124]
 r901: [109..114]
 r904: [119..120]
 r905: [113..118]
 r906: [107..112]
 r908: [101..102]
 r913: [82..83]
 r914: [80..81]
 r915: [7..93]
 r916: [77..79]
 r917: [73..76]
 r918: [69..70]
 r919: [61..68]
 r921: [75..78]
 r922: [67..74]
 r923: [63..64]
 r924: [61..62]
 r925: [59..60]
 r928: [23..58]
 r930: [51..52]
 r931: [45..50]
 r934: [55..56]
 r935: [43..54]
 r938: [47..48]
 r939: [41..46]
 r941: [35..36]
 r946: [31..32]
 r947: [17..30]
 r950: [25..26]
 r951: [15..24]
 r954: [19..20]
 r955: [13..18]
 r957: [7..8]
 r967: [964..967] [938..945] [923..935] [911..918] [0..908]
 r968: [196..201] [88..96]
 r969: [194..201] [86..94]
 r970: [964..967] [692..711] [0..689]
 r973: [823..869] [751..804]
 r986: [966..967] [488..510]
 r988: [964..965] [578..600]
 r996: [950..951]
 r997: [948..949]
 r998: [938..941]
 r999: [934..935]
 r1000: [927..928]
 r1001: [921..922]
 r1002: [911..914]
 r1003: [907..908]
 r1004: [903..904]
 r1005: [889..890]
 r1006: [887..888]
 r1007: [879..880]
 r1008: [885..886]
 r1009: [872..873]
 r1010: [844..847]
 r1011: [813..816]
 r1012: [807..808]
 r1013: [733..734]
 r1014: [731..732]
 r1015: [769..770]
 r1016: [781..782]
 r1017: [722..723]
 r1018: [745..746]
 r1019: [718..719]
 r1020: [671..672]
 r1021: [667..668]
 r1022: [665..666]
 r1023: [654..655]
 r1024: [652..653]
 r1025: [663..664]
 r1026: [661..662]
 r1027: [659..660]
 r1028: [657..658]
 r1029: [650..651]
 r1030: [646..647]
 r1031: [632..633]
 r1032: [550..551]
 r1033: [548..549]
 r1034: [546..547]
 r1035: [544..545]
 r1036: [542..543]
 r1037: [519..520]
 r1038: [460..461]
 r1039: [458..459]
 r1040: [456..457]
 r1041: [444..445]
 r1042: [377..378]
 r1043: [396..397]
 r1044: [394..395]
 r1045: [365..366]
 r1046: [256..257]
 r1047: [252..253]
 r1048: [244..247]
 r1049: [224..225]
 r1050: [232..233]
 r1051: [230..231]
 r1052: [228..229]
 r1053: [222..223]
 r1054: [220..221]
 r1055: [216..217]
 r1056: [214..215]
 r1057: [210..211]
 r1058: [206..207]
 r1059: [202..203]
 r1060: [165..166]
 r1061: [137..138]
 r1062: [135..136]
 r1063: [103..104]
 r1064: [101..102]
 r1065: [37..38]
 r1066: [35..36]
 r1067: [9..10]
 r1068: [7..8]
 r1069: [677..678]
 r1070: [675..676]
 r1072: [556..561]
 r1073: [560..561]
 r1074: [593..594]
 r1075: [587..594]
 r1076: [503..504]
 r1077: [497..504]
 r1078: [679..679] [595..672] [570..572] [538..563] [517..530]
 r1079: [7..91]
 r1080: [7..89]
 r1081: [7..87]
 r1082: [7..85]
 r1083: [101..199]
 r1084: [99..197]
 r1085: [97..195]
 r1086: [95..193]
 r1087: [240..356]
 r1088: [240..354]
 r1089: [238..352]
 r1090: [240..350]
 r1091: [240..348]
 r1092: [966..967] [487..508] [478..479]
 r1093: [966..967] [483..506] [476..479]
 r1094: [966..967] [488..504] [474..479]
 r1095: [485..488]
 r1096: [964..965] [577..598] [568..569]
 r1097: [964..965] [578..596] [566..569]
 r1098: [964..965] [573..594] [564..569]
 r1099: [575..578]
 r1101: [867..867]
 r1102: [865..865]
 r1103: [836..836]
 r1104: [830..830]
 r1105: [802..802]
 r1106: [800..800]
 r1107: [762..762]
 r1108: [758..758]
 r1109: [962..963]
 r1110: [960..961]
 r1111: [956..957]
 r1112: [952..953]
 r1113: [936..937]
 r1114: [946..947]
 r1115: [942..943]
 r1116: [938..939]
 r1117: [932..933]
 r1118: [929..930]
 r1119: [923..924]
 r1120: [909..910]
 r1121: [919..920]
 r1122: [915..916]
 r1123: [911..912]
 r1124: [897..898]
 r1125: [905..906]
 r1126: [899..900]
 r1127: [893..894]
 r1128: [874..875]
 r1129: [870..871]
 r1130: [868..869]
 r1131: [858..859]
 r1132: [848..849]
 r1133: [846..847]
 r1134: [840..841]
 r1135: [838..839]
 r1136: [831..832]
 r1137: [827..828]
 r1138: [817..818]
 r1139: [815..816]
 r1140: [809..810]
 r1141: [735..736]
 r1142: [729..730]
 r1143: [727..728]
 r1144: [805..806]
 r1145: [803..804]
 r1146: [793..794]
 r1147: [771..772]
 r1148: [767..768]
 r1149: [783..784]
 r1150: [779..780]
 r1151: [773..774]
 r1152: [765..766]
 r1153: [759..760]
 r1154: [755..756]
 r1155: [720..721]
 r1156: [743..744]
 r1157: [737..738]
 r1158: [690..691]
 r1159: [686..687]
 r1160: [712..713]
 r1161: [708..709]
 r1162: [702..703]
 r1163: [694..695]
 r1164: [684..685]
 r1165: [682..683]
 r1166: [669..670]
 r1167: [644..645]
 r1168: [642..643]
 r1169: [638..639]
 r1170: [634..635]
 r1171: [630..631]
 r1172: [628..629]
 r1173: [626..627]
 r1174: [624..625]
 r1175: [617..618]
 r1176: [615..616]
 r1177: [613..614]
 r1178: [611..612]
 r1179: [605..606]
 r1180: [603..604]
 r1181: [589..590]
 r1182: [583..584]
 r1183: [583..584]
 r1184: [579..580]
 r1185: [552..553]
 r1186: [540..541]
 r1187: [534..535]
 r1188: [532..533]
 r1189: [529..530]
 r1190: [525..526]
 r1191: [521..522]
 r1192: [513..514]
 r1193: [511..512]
 r1194: [499..500]
 r1195: [493..494]
 r1196: [493..494]
 r1197: [489..490]
 r1198: [462..463]
 r1199: [440..441]
 r1200: [438..439]
 r1201: [417..418]
 r1202: [415..415] [412..413]
 r1203: [387..388]
 r1204: [379..380]
 r1205: [406..407]
 r1206: [398..399]
 r1207: [367..368]
 r1208: [236..237]
 r1209: [359..360]
 r1210: [347..348]
 r1211: [341..342]
 r1212: [300..301]
 r1213: [296..297]
 r1214: [294..295]
 r1215: [290..291]
 r1216: [286..287]
 r1217: [272..273]
 r1218: [268..269]
 r1219: [264..265]
 r1220: [335..336]
 r1221: [333..334]
 r1222: [331..332]
 r1223: [327..328]
 r1224: [311..312]
 r1225: [307..308]
 r1226: [303..304]
 r1227: [258..259]
 r1228: [242..243]
 r1229: [208..209]
 r1230: [204..205]
 r1231: [1..2]
 r1232: [3..4]
 r1233: [192..193]
 r1234: [179..180]
 r1235: [173..174]
 r1236: [163..164]
 r1237: [157..158]
 r1238: [151..152]
 r1239: [143..144]
 r1240: [141..142]
 r1241: [139..140]
 r1242: [133..134]
 r1243: [127..128]
 r1244: [121..122]
 r1245: [109..110]
 r1246: [107..108]
 r1247: [105..106]
 r1248: [84..85]
 r1249: [71..72]
 r1250: [65..66]
 r1251: [57..58]
 r1252: [53..54]
 r1253: [49..50]
 r1254: [43..44]
 r1255: [41..42]
 r1256: [39..40]
 r1257: [33..34]
 r1258: [27..28]
 r1259: [21..22]
 r1260: [15..16]
 r1261: [13..14]
 r1262: [11..12]
 r1263: [673..674]
 r1264: [940..943]
 r1265: [944..945]
 r1266: [925..930]
 r1267: [913..916]
 r1268: [917..918]
 r1269: [901..906]
 r1270: [842..847]
 r1271: [860..869]
 r1272: [811..816]
 r1273: [829..832]
 r1274: [795..804]
 r1275: [775..780]
 r1276: [757..760]
 r1277: [739..744]
 r1278: [688..689]
 r1279: [710..711]
 r1280: [636..639]
 r1281: [640..643]
 r1282: [523..526]
 r1283: [527..530]
 r1284: [298..301]
 r1285: [246..249]

********** Assignment #1: **********

	 Assigning to 1211 (cl=LO_REGS, orig=1211, freq=1780, tfirst=1211, tfreq=1780)...
	   Assign 2 to reload r1211 (freq=1780)
	 Assigning to 1284 (cl=LO_REGS, orig=1212, freq=592, tfirst=1212, tfreq=888)...
	   Assign 1 to inheritance r1284 (freq=592)
	Hard reg 1 is preferable by r1212 with profit 296
	Hard reg 1 is preferable by r1213 with profit 296
	 Assigning to 1212 (cl=LO_REGS, orig=1212, freq=888, tfirst=1212, tfreq=888)...
	   Assign 1 to reload r1212 (freq=888)
	 Assigning to 1213 (cl=LO_REGS, orig=1213, freq=592, tfirst=1212, tfreq=888)...
	   Assign 1 to reload r1213 (freq=592)
	 Assigning to 1220 (cl=LO_REGS, orig=1220, freq=592, tfirst=1220, tfreq=592)...
	   Assign 1 to reload r1220 (freq=592)
	 Assigning to 1182 (cl=LO_REGS, orig=1182, freq=524, tfirst=1182, tfreq=524)...
	   Assign 1 to reload r1182 (freq=524)
	 Assigning to 1184 (cl=LO_REGS, orig=401, freq=524, tfirst=1184, tfreq=524)...
	   Assign 4 to reload r1184 (freq=524)
	 Assigning to 1195 (cl=LO_REGS, orig=1195, freq=524, tfirst=1195, tfreq=524)...
	   Assign 1 to reload r1195 (freq=524)
	 Assigning to 1197 (cl=LO_REGS, orig=396, freq=524, tfirst=1197, tfreq=524)...
	   Assign 5 to reload r1197 (freq=524)
	 Assigning to 1166 (cl=LO_REGS, orig=967, freq=220, tfirst=1166, tfreq=220)...
	   Assign 3 to reload r1166 (freq=220)
	 Assigning to 1280 (cl=LO_REGS, orig=356, freq=165, tfirst=1168, tfreq=220)...
	   Assign 3 to inheritance r1280 (freq=165)
	Hard reg 3 is preferable by r1281 with profit 55
	Hard reg 3 is preferable by r1168 with profit 27
	Hard reg 3 is preferable by r1169 with profit 55
	Hard reg 3 is preferable by r1170 with profit 55
	 Assigning to 1281 (cl=LO_REGS, orig=356, freq=165, tfirst=1168, tfreq=220)...
	   Assign 3 to inheritance r1281 (freq=165)
	Hard reg 3 is preferable by r1168 with profit 82
	 Assigning to 1168 (cl=LO_REGS, orig=356, freq=110, tfirst=1168, tfreq=220)...
	   Assign 3 to reload r1168 (freq=110)
	 Assigning to 1169 (cl=LO_REGS, orig=356, freq=110, tfirst=1168, tfreq=220)...
	   Assign 3 to reload r1169 (freq=110)
	 Assigning to 1170 (cl=LO_REGS, orig=356, freq=110, tfirst=1168, tfreq=220)...
	   Assign 3 to reload r1170 (freq=110)
	 Assigning to 1199 (cl=LO_REGS, orig=970, freq=220, tfirst=1199, tfreq=220)...
	   Assign 3 to reload r1199 (freq=220)
	 Assigning to 1208 (cl=LO_REGS, orig=967, freq=220, tfirst=1208, tfreq=220)...
	   Assign 3 to reload r1208 (freq=220)
	 Assigning to 1229 (cl=LO_REGS, orig=1229, freq=220, tfirst=1229, tfreq=220)...
	   Assign 3 to reload r1229 (freq=220)
	 Assigning to 1230 (cl=LO_REGS, orig=1230, freq=220, tfirst=1230, tfreq=220)...
	   Assign 3 to reload r1230 (freq=220)
	 Assigning to 1231 (cl=LO_REGS, orig=463, freq=220, tfirst=1231, tfreq=220)...
	   Assign 3 to reload r1231 (freq=220)
	 Assigning to 1232 (cl=LO_REGS, orig=463, freq=220, tfirst=1232, tfreq=220)...
	   Assign 3 to reload r1232 (freq=220)
	 Assigning to 1263 (cl=LO_REGS, orig=970, freq=194, tfirst=1263, tfreq=194)...
	   Assign 3 to reload r1263 (freq=194)
	 Assigning to 1186 (cl=LO_REGS, orig=355, freq=164, tfirst=1186, tfreq=164)...
	   Assign 3 to reload r1186 (freq=164)
	 Assigning to 1171 (cl=LO_REGS, orig=1171, freq=110, tfirst=1171, tfreq=110)...
	   Assign 3 to reload r1171 (freq=110)
	 Assigning to 1172 (cl=LO_REGS, orig=1172, freq=110, tfirst=1172, tfreq=110)...
	   Assign 3 to reload r1172 (freq=110)
	 Assigning to 1175 (cl=LO_REGS, orig=1175, freq=110, tfirst=1175, tfreq=110)...
	   Assign 3 to reload r1175 (freq=110)
	 Assigning to 1177 (cl=LO_REGS, orig=1177, freq=110, tfirst=1177, tfreq=110)...
	   Assign 3 to reload r1177 (freq=110)
	 Assigning to 1178 (cl=LO_REGS, orig=356, freq=110, tfirst=1178, tfreq=110)...
	   Assign 3 to reload r1178 (freq=110)
	 Assigning to 1282 (cl=LO_REGS, orig=355, freq=81, tfirst=1189, tfreq=108)...
	   Assign 3 to inheritance r1282 (freq=81)
	Hard reg 3 is preferable by r1283 with profit 27
	Hard reg 3 is preferable by r1189 with profit 13
	Hard reg 3 is preferable by r1190 with profit 27
	Hard reg 3 is preferable by r1191 with profit 27
	 Assigning to 1283 (cl=LO_REGS, orig=355, freq=81, tfirst=1189, tfreq=108)...
	   Assign 3 to inheritance r1283 (freq=81)
	Hard reg 3 is preferable by r1189 with profit 40
	 Assigning to 1189 (cl=LO_REGS, orig=355, freq=54, tfirst=1189, tfreq=108)...
	   Assign 3 to reload r1189 (freq=54)
	 Assigning to 1190 (cl=LO_REGS, orig=355, freq=54, tfirst=1189, tfreq=108)...
	   Assign 3 to reload r1190 (freq=54)
	 Assigning to 1191 (cl=LO_REGS, orig=355, freq=54, tfirst=1189, tfreq=108)...
	   Assign 3 to reload r1191 (freq=54)
	 Assigning to 1109 (cl=LO_REGS, orig=1109, freq=26, tfirst=1109, tfreq=26)...
	   Assign 3 to reload r1109 (freq=26)
	 Assigning to 1110 (cl=LO_REGS, orig=1110, freq=26, tfirst=1110, tfreq=26)...
	   Assign 3 to reload r1110 (freq=26)
	 Assigning to 1165 (cl=LO_REGS, orig=463, freq=26, tfirst=1165, tfreq=26)...
	   Assign 3 to reload r1165 (freq=26)
	Hard reg 3 is preferable by r1164 with profit 13
	 Assigning to 1271 (cl=LO_REGS, orig=356, freq=18, tfirst=1130, tfreq=18)...
	   Assign 0 to inheritance r1271 (freq=18)
	Hard reg 0 is preferable by r1130 with profit 6
	Hard reg 0 is preferable by r1131 with profit 6
	 Assigning to 1130 (cl=LO_REGS, orig=356, freq=12, tfirst=1130, tfreq=18)...
	   Assign 0 to reload r1130 (freq=12)
	 Assigning to 1131 (cl=LO_REGS, orig=356, freq=12, tfirst=1130, tfreq=18)...
	   Assign 0 to reload r1131 (freq=12)
	 Assigning to 1273 (cl=LO_REGS, orig=355, freq=18, tfirst=1136, tfreq=18)...
	   Assign 1 to inheritance r1273 (freq=18)
	Hard reg 1 is preferable by r1136 with profit 6
	Hard reg 1 is preferable by r1137 with profit 6
	 Assigning to 1136 (cl=LO_REGS, orig=355, freq=12, tfirst=1136, tfreq=18)...
	   Assign 1 to reload r1136 (freq=12)
	 Assigning to 1137 (cl=LO_REGS, orig=355, freq=12, tfirst=1136, tfreq=18)...
	   Assign 1 to reload r1137 (freq=12)
	 Assigning to 1274 (cl=LO_REGS, orig=356, freq=18, tfirst=1145, tfreq=18)...
	   Assign 2 to inheritance r1274 (freq=18)
	Hard reg 2 is preferable by r1145 with profit 6
	Hard reg 2 is preferable by r1146 with profit 6
	 Assigning to 1145 (cl=LO_REGS, orig=356, freq=12, tfirst=1145, tfreq=18)...
	   Assign 2 to reload r1145 (freq=12)
	 Assigning to 1146 (cl=LO_REGS, orig=356, freq=12, tfirst=1145, tfreq=18)...
	   Assign 2 to reload r1146 (freq=12)
	 Assigning to 1276 (cl=LO_REGS, orig=355, freq=18, tfirst=1153, tfreq=18)...
	   Assign 2 to inheritance r1276 (freq=18)
	Hard reg 2 is preferable by r1153 with profit 6
	Hard reg 2 is preferable by r1154 with profit 6
	 Assigning to 1153 (cl=LO_REGS, orig=355, freq=12, tfirst=1153, tfreq=18)...
	   Assign 2 to reload r1153 (freq=12)
	 Assigning to 1154 (cl=LO_REGS, orig=355, freq=12, tfirst=1153, tfreq=18)...
	   Assign 2 to reload r1154 (freq=12)
	 Assigning to 1158 (cl=LO_REGS, orig=970, freq=12, tfirst=1158, tfreq=18)...
	   Assign 3 to reload r1158 (freq=12)
	Hard reg 3 is preferable by r1278 with profit 6
	Hard reg 3 is preferable by r1159 with profit 3
	 Assigning to 1159 (cl=LO_REGS, orig=970, freq=12, tfirst=1158, tfreq=18)...
	   Assign 3 to reload r1159 (freq=12)
	Hard reg 3 is preferable by r1278 with profit 12
	 Assigning to 1278 (cl=LO_REGS, orig=970, freq=18, tfirst=1158, tfreq=18)...
	   Assign 3 to inheritance r1278 (freq=18)
	 Assigning to 1160 (cl=LO_REGS, orig=970, freq=12, tfirst=1160, tfreq=18)...
	   Assign 3 to reload r1160 (freq=12)
	Hard reg 3 is preferable by r1279 with profit 6
	Hard reg 3 is preferable by r1161 with profit 3
	 Assigning to 1161 (cl=LO_REGS, orig=970, freq=12, tfirst=1160, tfreq=18)...
	   Assign 3 to reload r1161 (freq=12)
	Hard reg 3 is preferable by r1279 with profit 12
	 Assigning to 1279 (cl=LO_REGS, orig=970, freq=18, tfirst=1160, tfreq=18)...
	   Assign 3 to inheritance r1279 (freq=18)
	 Assigning to 1264 (cl=LO_REGS, orig=967, freq=9, tfirst=1114, tfreq=12)...
	   Assign 4 to inheritance r1264 (freq=9)
	Hard reg 4 is preferable by r1265 with profit 3
	Hard reg 4 is preferable by r1114 with profit 1
	Hard reg 4 is preferable by r1115 with profit 3
	Hard reg 4 is preferable by r1116 with profit 3
	 Assigning to 1114 (cl=LO_REGS, orig=967, freq=6, tfirst=1114, tfreq=12)...
	   Assign 4 to reload r1114 (freq=6)
	Hard reg 4 is preferable by r1265 with profit 6
	 Assigning to 1115 (cl=LO_REGS, orig=967, freq=6, tfirst=1114, tfreq=12)...
	   Assign 4 to reload r1115 (freq=6)
	 Assigning to 1116 (cl=LO_REGS, orig=967, freq=6, tfirst=1114, tfreq=12)...
	   Assign 4 to reload r1116 (freq=6)
	 Assigning to 1265 (cl=LO_REGS, orig=967, freq=9, tfirst=1114, tfreq=12)...
	   Assign 4 to inheritance r1265 (freq=9)
	 Assigning to 1267 (cl=LO_REGS, orig=967, freq=9, tfirst=1121, tfreq=12)...
	   Assign 4 to inheritance r1267 (freq=9)
	Hard reg 4 is preferable by r1268 with profit 3
	Hard reg 4 is preferable by r1121 with profit 1
	Hard reg 4 is preferable by r1122 with profit 3
	Hard reg 4 is preferable by r1123 with profit 3
	 Assigning to 1121 (cl=LO_REGS, orig=967, freq=6, tfirst=1121, tfreq=12)...
	   Assign 4 to reload r1121 (freq=6)
	Hard reg 4 is preferable by r1268 with profit 6
	 Assigning to 1122 (cl=LO_REGS, orig=967, freq=6, tfirst=1121, tfreq=12)...
	   Assign 4 to reload r1122 (freq=6)
	 Assigning to 1123 (cl=LO_REGS, orig=967, freq=6, tfirst=1121, tfreq=12)...
	   Assign 4 to reload r1123 (freq=6)
	 Assigning to 1268 (cl=LO_REGS, orig=967, freq=9, tfirst=1121, tfreq=12)...
	   Assign 4 to inheritance r1268 (freq=9)
	 Assigning to 1129 (cl=LO_REGS, orig=355, freq=12, tfirst=1129, tfreq=12)...
	   Assign 3 to reload r1129 (freq=12)
	 Assigning to 1135 (cl=LO_REGS, orig=356, freq=12, tfirst=1135, tfreq=12)...
	   Assign 3 to reload r1135 (freq=12)
	 Assigning to 1141 (cl=LO_REGS, orig=967, freq=12, tfirst=1141, tfreq=12)...
	   Assign 3 to reload r1141 (freq=12)
	 Assigning to 1142 (cl=LO_REGS, orig=1142, freq=12, tfirst=1142, tfreq=12)...
	   Assign 3 to reload r1142 (freq=12)
	 Assigning to 1143 (cl=LO_REGS, orig=1143, freq=12, tfirst=1143, tfreq=12)...
	   Assign 3 to reload r1143 (freq=12)
	 Assigning to 1144 (cl=LO_REGS, orig=355, freq=12, tfirst=1144, tfreq=12)...
	   Assign 3 to reload r1144 (freq=12)
	 Assigning to 1152 (cl=LO_REGS, orig=356, freq=12, tfirst=1152, tfreq=12)...
	   Assign 3 to reload r1152 (freq=12)
	 Assigning to 1127 (cl=LO_REGS, orig=967, freq=10, tfirst=1127, tfreq=10)...
	   Assign 2 to reload r1127 (freq=10)
	 Assigning to 1266 (cl=LO_REGS, orig=967, freq=9, tfirst=1118, tfreq=9)...
	   Assign 4 to inheritance r1266 (freq=9)
	Hard reg 4 is preferable by r1118 with profit 3
	Hard reg 4 is preferable by r1119 with profit 3
	 Assigning to 1118 (cl=LO_REGS, orig=967, freq=6, tfirst=1118, tfreq=9)...
	   Assign 4 to reload r1118 (freq=6)
	 Assigning to 1119 (cl=LO_REGS, orig=967, freq=6, tfirst=1118, tfreq=9)...
	   Assign 4 to reload r1119 (freq=6)
	 Assigning to 1269 (cl=LO_REGS, orig=967, freq=9, tfirst=1125, tfreq=9)...
	   Assign 4 to inheritance r1269 (freq=9)
	Hard reg 4 is preferable by r1125 with profit 3
	Hard reg 4 is preferable by r1126 with profit 3
	 Assigning to 1125 (cl=LO_REGS, orig=967, freq=6, tfirst=1125, tfreq=9)...
	   Assign 4 to reload r1125 (freq=6)
	 Assigning to 1126 (cl=LO_REGS, orig=967, freq=6, tfirst=1125, tfreq=9)...
	   Assign 4 to reload r1126 (freq=6)
	 Assigning to 1270 (cl=LO_REGS, orig=1133, freq=6, tfirst=1133, tfreq=9)...
	   Assign 3 to inheritance r1270 (freq=6)
	Hard reg 3 is preferable by r1133 with profit 3
	Hard reg 3 is preferable by r1134 with profit 3
	 Assigning to 1133 (cl=LO_REGS, orig=1133, freq=9, tfirst=1133, tfreq=9)...
	   Assign 3 to reload r1133 (freq=9)
	 Assigning to 1134 (cl=LO_REGS, orig=1134, freq=6, tfirst=1133, tfreq=9)...
	   Assign 3 to reload r1134 (freq=6)
	 Assigning to 1272 (cl=LO_REGS, orig=1139, freq=6, tfirst=1139, tfreq=9)...
	   Assign 3 to inheritance r1272 (freq=6)
	Hard reg 3 is preferable by r1139 with profit 3
	Hard reg 3 is preferable by r1140 with profit 3
	 Assigning to 1139 (cl=LO_REGS, orig=1139, freq=9, tfirst=1139, tfreq=9)...
	   Assign 3 to reload r1139 (freq=9)
	 Assigning to 1140 (cl=LO_REGS, orig=1140, freq=6, tfirst=1139, tfreq=9)...
	   Assign 3 to reload r1140 (freq=6)
	 Assigning to 1275 (cl=LO_REGS, orig=1150, freq=6, tfirst=1150, tfreq=9)...
	   Assign 3 to inheritance r1275 (freq=6)
	Hard reg 3 is preferable by r1150 with profit 3
	Hard reg 3 is preferable by r1151 with profit 3
	 Assigning to 1150 (cl=LO_REGS, orig=1150, freq=9, tfirst=1150, tfreq=9)...
	   Assign 3 to reload r1150 (freq=9)
	 Assigning to 1151 (cl=LO_REGS, orig=1151, freq=6, tfirst=1150, tfreq=9)...
	   Assign 3 to reload r1151 (freq=6)
	 Assigning to 1277 (cl=LO_REGS, orig=1156, freq=6, tfirst=1156, tfreq=9)...
	   Assign 3 to inheritance r1277 (freq=6)
	Hard reg 3 is preferable by r1156 with profit 3
	Hard reg 3 is preferable by r1157 with profit 3
	 Assigning to 1156 (cl=LO_REGS, orig=1156, freq=9, tfirst=1156, tfreq=9)...
	   Assign 3 to reload r1156 (freq=9)
	 Assigning to 1157 (cl=LO_REGS, orig=1157, freq=6, tfirst=1156, tfreq=9)...
	   Assign 3 to reload r1157 (freq=6)
	 Assigning to 1128 (cl=LO_REGS, orig=967, freq=8, tfirst=1128, tfreq=8)...
	   Assign 3 to reload r1128 (freq=8)
	 Assigning to 1113 (cl=LO_REGS, orig=967, freq=6, tfirst=1113, tfreq=6)...
	   Assign 3 to reload r1113 (freq=6)
	 Assigning to 1117 (cl=LO_REGS, orig=967, freq=6, tfirst=1117, tfreq=6)...
	   Assign 3 to reload r1117 (freq=6)
	 Assigning to 1120 (cl=LO_REGS, orig=967, freq=6, tfirst=1120, tfreq=6)...
	   Assign 3 to reload r1120 (freq=6)
	 Assigning to 1124 (cl=LO_REGS, orig=967, freq=6, tfirst=1124, tfreq=6)...
	   Assign 3 to reload r1124 (freq=6)
	 Assigning to 1132 (cl=LO_REGS, orig=967, freq=6, tfirst=1132, tfreq=6)...
	   Assign 3 to reload r1132 (freq=6)
	 Assigning to 1138 (cl=LO_REGS, orig=967, freq=6, tfirst=1138, tfreq=6)...
	   Assign 3 to reload r1138 (freq=6)
	 Assigning to 1147 (cl=LO_REGS, orig=967, freq=6, tfirst=1147, tfreq=6)...
	   Assign 3 to reload r1147 (freq=6)
	 Assigning to 1148 (cl=LO_REGS, orig=1148, freq=6, tfirst=1148, tfreq=6)...
	   Assign 3 to reload r1148 (freq=6)
	 Assigning to 1149 (cl=LO_REGS, orig=967, freq=6, tfirst=1149, tfreq=6)...
	   Assign 3 to reload r1149 (freq=6)
	 Assigning to 1155 (cl=LO_REGS, orig=1155, freq=6, tfirst=1155, tfreq=6)...
	   Assign 3 to reload r1155 (freq=6)
	 Assigning to 1236 (cl=GENERAL_REGS, orig=880, freq=1780, tfirst=1236, tfreq=1780)...
	   Assign 3 to reload r1236 (freq=1780)
	 Assigning to 1237 (cl=GENERAL_REGS, orig=875, freq=1780, tfirst=1237, tfreq=1780)...
	   Assign 3 to reload r1237 (freq=1780)
	 Assigning to 1238 (cl=GENERAL_REGS, orig=885, freq=1780, tfirst=1238, tfreq=1780)...
	   Assign 3 to reload r1238 (freq=1780)
	 Assigning to 1242 (cl=GENERAL_REGS, orig=894, freq=1780, tfirst=1242, tfreq=1780)...
	   Assign 3 to reload r1242 (freq=1780)
	 Assigning to 1243 (cl=GENERAL_REGS, orig=899, freq=1780, tfirst=1243, tfreq=1780)...
	   Assign 3 to reload r1243 (freq=1780)
	 Assigning to 1244 (cl=GENERAL_REGS, orig=904, freq=1780, tfirst=1244, tfreq=1780)...
	   Assign 3 to reload r1244 (freq=1780)
	 Assigning to 1251 (cl=GENERAL_REGS, orig=934, freq=1780, tfirst=1251, tfreq=1780)...
	   Assign 3 to reload r1251 (freq=1780)
	 Assigning to 1252 (cl=GENERAL_REGS, orig=930, freq=1780, tfirst=1252, tfreq=1780)...
	   Assign 3 to reload r1252 (freq=1780)
	 Assigning to 1253 (cl=GENERAL_REGS, orig=938, freq=1780, tfirst=1253, tfreq=1780)...
	   Assign 3 to reload r1253 (freq=1780)
	 Assigning to 1257 (cl=GENERAL_REGS, orig=946, freq=1780, tfirst=1257, tfreq=1780)...
	   Assign 3 to reload r1257 (freq=1780)
	 Assigning to 1258 (cl=GENERAL_REGS, orig=950, freq=1780, tfirst=1258, tfreq=1780)...
	   Assign 3 to reload r1258 (freq=1780)
	 Assigning to 1259 (cl=GENERAL_REGS, orig=954, freq=1780, tfirst=1259, tfreq=1780)...
	   Assign 3 to reload r1259 (freq=1780)
	 Assigning to 1214 (cl=GENERAL_REGS, orig=803, freq=592, tfirst=1214, tfreq=592)...
	   Assign 3 to reload r1214 (freq=592)
	 Assigning to 1215 (cl=GENERAL_REGS, orig=808, freq=592, tfirst=1215, tfreq=592)...
	   Assign 3 to reload r1215 (freq=592)
	 Assigning to 1216 (cl=GENERAL_REGS, orig=813, freq=592, tfirst=1216, tfreq=592)...
	   Assign 3 to reload r1216 (freq=592)
	 Assigning to 1221 (cl=GENERAL_REGS, orig=817, freq=592, tfirst=1221, tfreq=592)...
	   Assign 3 to reload r1221 (freq=592)
	 Assigning to 1222 (cl=GENERAL_REGS, orig=822, freq=592, tfirst=1222, tfreq=592)...
	   Assign 3 to reload r1222 (freq=592)
	 Assigning to 1223 (cl=GENERAL_REGS, orig=827, freq=592, tfirst=1223, tfreq=592)...
	   Assign 3 to reload r1223 (freq=592)
	 Assigning to 1183 (cl=GENERAL_REGS, orig=401, freq=524, tfirst=1183, tfreq=524)...
	   Assign 4 to reload r1183 (freq=524)
	 Assigning to 1196 (cl=GENERAL_REGS, orig=396, freq=524, tfirst=1196, tfreq=524)...
	   Assign 5 to reload r1196 (freq=524)
	 Assigning to 1200 (cl=GENERAL_REGS, orig=747, freq=220, tfirst=1200, tfreq=220)...
	   Assign 2 to reload r1200 (freq=220)
	 Assigning to 1174 (cl=GENERAL_REGS, orig=682, freq=110, tfirst=1174, tfreq=110)...
	   Assign 3 to reload r1174 (freq=110)
	 Assigning to 1164 (cl=GENERAL_REGS, orig=463, freq=26, tfirst=1164, tfreq=26)...
	   Assign 3 to reload r1164 (freq=26)
	 Assigning to 1162 (cl=GENERAL_REGS, orig=634, freq=12, tfirst=1162, tfreq=12)...
	   Assign 3 to reload r1162 (freq=12)
	 Assigning to 1163 (cl=GENERAL_REGS, orig=636, freq=12, tfirst=1163, tfreq=12)...
	   Assign 3 to reload r1163 (freq=12)
	 Assigning to 1101 (cl=GENERAL_REGS, orig=1101, freq=6, tfirst=1101, tfreq=6)...
	   Assign 7 to reload r1101 (freq=6)
	 Assigning to 1102 (cl=GENERAL_REGS, orig=1102, freq=6, tfirst=1102, tfreq=6)...
	   Assign 7 to reload r1102 (freq=6)
	 Assigning to 1103 (cl=GENERAL_REGS, orig=1103, freq=6, tfirst=1103, tfreq=6)...
	   Assign 0 to reload r1103 (freq=6)
	 Assigning to 1104 (cl=GENERAL_REGS, orig=1104, freq=6, tfirst=1104, tfreq=6)...
	   Assign 0 to reload r1104 (freq=6)
	 Assigning to 1105 (cl=GENERAL_REGS, orig=1105, freq=6, tfirst=1105, tfreq=6)...
	   Assign 0 to reload r1105 (freq=6)
	 Assigning to 1106 (cl=GENERAL_REGS, orig=1106, freq=6, tfirst=1106, tfreq=6)...
	   Assign 0 to reload r1106 (freq=6)
	 Assigning to 1107 (cl=GENERAL_REGS, orig=1107, freq=6, tfirst=1107, tfreq=6)...
	   Assign 1 to reload r1107 (freq=6)
	 Assigning to 1108 (cl=GENERAL_REGS, orig=1108, freq=6, tfirst=1108, tfreq=6)...
	   Assign 1 to reload r1108 (freq=6)
	 Assigning to 1181 (cl=VFP_LO_REGS, orig=400, freq=1780, tfirst=1181, tfreq=1780)...
	   Assign 31 to reload r1181 (freq=1780)
	 Assigning to 1194 (cl=VFP_LO_REGS, orig=395, freq=1780, tfirst=1194, tfreq=1780)...
	   Assign 31 to reload r1194 (freq=1780)
	 Assigning to 1210 (cl=VFP_LO_REGS, orig=796, freq=1780, tfirst=1210, tfreq=1780)...
	   Assign 30 to reload r1210 (freq=1780)
	 Assigning to 1227 (cl=VFP_LO_REGS, orig=1227, freq=1780, tfirst=1227, tfreq=1780)...
	   Assign 31 to reload r1227 (freq=1780)
	 Assigning to 1228 (cl=VFP_LO_REGS, orig=394, freq=1780, tfirst=1228, tfreq=1780)...
	   Assign 31 to reload r1228 (freq=1780)
	 Assigning to 1233 (cl=VFP_LO_REGS, orig=389, freq=1780, tfirst=1233, tfreq=1780)...
	   Assign 31 to reload r1233 (freq=1780)
	 Assigning to 1234 (cl=VFP_LO_REGS, orig=863, freq=1780, tfirst=1234, tfreq=1780)...
	   Assign 30 to reload r1234 (freq=1780)
	 Assigning to 1235 (cl=VFP_LO_REGS, orig=868, freq=1780, tfirst=1235, tfreq=1780)...
	   Assign 31 to reload r1235 (freq=1780)
	 Assigning to 1239 (cl=VFP_LO_REGS, orig=1239, freq=1780, tfirst=1239, tfreq=1780)...
	   Assign 29 to reload r1239 (freq=1780)
	 Assigning to 1240 (cl=VFP_LO_REGS, orig=1240, freq=1780, tfirst=1240, tfreq=1780)...
	   Assign 30 to reload r1240 (freq=1780)
	 Assigning to 1241 (cl=VFP_LO_REGS, orig=1241, freq=1780, tfirst=1241, tfreq=1780)...
	   Assign 31 to reload r1241 (freq=1780)
	 Assigning to 1245 (cl=VFP_LO_REGS, orig=1245, freq=1780, tfirst=1245, tfreq=1780)...
	   Assign 30 to reload r1245 (freq=1780)
	 Assigning to 1246 (cl=VFP_LO_REGS, orig=1246, freq=1780, tfirst=1246, tfreq=1780)...
	   Assign 31 to reload r1246 (freq=1780)
	 Assigning to 1247 (cl=VFP_LO_REGS, orig=1247, freq=1780, tfirst=1247, tfreq=1780)...
	   Assign 31 to reload r1247 (freq=1780)
	 Assigning to 1248 (cl=VFP_LO_REGS, orig=389, freq=1780, tfirst=1248, tfreq=1780)...
	   Assign 31 to reload r1248 (freq=1780)
	 Assigning to 1249 (cl=VFP_LO_REGS, orig=918, freq=1780, tfirst=1249, tfreq=1780)...
	   Assign 30 to reload r1249 (freq=1780)
	 Assigning to 1250 (cl=VFP_LO_REGS, orig=923, freq=1780, tfirst=1250, tfreq=1780)...
	   Assign 31 to reload r1250 (freq=1780)
	 Assigning to 1254 (cl=VFP_LO_REGS, orig=1254, freq=1780, tfirst=1254, tfreq=1780)...
	   Assign 29 to reload r1254 (freq=1780)
	 Assigning to 1255 (cl=VFP_LO_REGS, orig=1255, freq=1780, tfirst=1255, tfreq=1780)...
	   Assign 30 to reload r1255 (freq=1780)
	 Assigning to 1256 (cl=VFP_LO_REGS, orig=1256, freq=1780, tfirst=1256, tfreq=1780)...
	   Assign 31 to reload r1256 (freq=1780)
	 Assigning to 1260 (cl=VFP_LO_REGS, orig=1260, freq=1780, tfirst=1260, tfreq=1780)...
	   Assign 29 to reload r1260 (freq=1780)
	 Assigning to 1261 (cl=VFP_LO_REGS, orig=1261, freq=1780, tfirst=1261, tfreq=1780)...
	   Assign 30 to reload r1261 (freq=1780)
	 Assigning to 1262 (cl=VFP_LO_REGS, orig=1262, freq=1780, tfirst=1262, tfreq=1780)...
	   Assign 31 to reload r1262 (freq=1780)
	 Assigning to 1217 (cl=VFP_LO_REGS, orig=350, freq=592, tfirst=1217, tfreq=592)...
	   Assign 28 to reload r1217 (freq=592)
	 Assigning to 1218 (cl=VFP_LO_REGS, orig=352, freq=592, tfirst=1218, tfreq=592)...
	   Assign 29 to reload r1218 (freq=592)
	 Assigning to 1219 (cl=VFP_LO_REGS, orig=351, freq=592, tfirst=1219, tfreq=592)...
	   Assign 30 to reload r1219 (freq=592)
	 Assigning to 1224 (cl=VFP_LO_REGS, orig=350, freq=592, tfirst=1224, tfreq=592)...
	   Assign 28 to reload r1224 (freq=592)
	 Assigning to 1225 (cl=VFP_LO_REGS, orig=352, freq=592, tfirst=1225, tfreq=592)...
	   Assign 29 to reload r1225 (freq=592)
	 Assigning to 1226 (cl=VFP_LO_REGS, orig=351, freq=592, tfirst=1226, tfreq=592)...
	   Assign 30 to reload r1226 (freq=592)
	 Assigning to 1202 (cl=VFP_LO_REGS, orig=366, freq=550, tfirst=1202, tfreq=550)...
	   Assign 30 to reload r1202 (freq=550)
	 Assigning to 1185 (cl=VFP_LO_REGS, orig=704, freq=330, tfirst=1185, tfreq=330)...
	   Assign 31 to reload r1185 (freq=330)
	 Assigning to 1198 (cl=VFP_LO_REGS, orig=743, freq=330, tfirst=1198, tfreq=330)...
	   Assign 43 to reload r1198 (freq=330)
	 Assigning to 1188 (cl=VFP_LO_REGS, orig=398, freq=246, tfirst=1188, tfreq=246)...
	   Assign 37 to reload r1188 (freq=246)
	 Assigning to 1207 (cl=VFP_LO_REGS, orig=1207, freq=220, tfirst=1207, tfreq=220)...
	   Assign 31 to reload r1207 (freq=220)
	 Assigning to 1209 (cl=VFP_LO_REGS, orig=429, freq=194, tfirst=1209, tfreq=194)...
	   Assign 30 to reload r1209 (freq=194)
	 Assigning to 1173 (cl=VFP_LO_REGS, orig=402, freq=165, tfirst=1173, tfreq=165)...
	   Assign 39 to reload r1173 (freq=165)
	 Assigning to 1180 (cl=VFP_LO_REGS, orig=402, freq=165, tfirst=1180, tfreq=165)...
	   Assign 39 to reload r1180 (freq=165)
	 Assigning to 1187 (cl=VFP_LO_REGS, orig=720, freq=164, tfirst=1187, tfreq=164)...
	   Assign 31 to reload r1187 (freq=164)
	 Assigning to 1167 (cl=VFP_LO_REGS, orig=416, freq=110, tfirst=1167, tfreq=110)...
	   Assign 31 to reload r1167 (freq=110)
	 Assigning to 1176 (cl=VFP_LO_REGS, orig=416, freq=110, tfirst=1176, tfreq=110)...
	   Assign 31 to reload r1176 (freq=110)
	 Assigning to 1179 (cl=VFP_LO_REGS, orig=692, freq=110, tfirst=1179, tfreq=110)...
	   Assign 31 to reload r1179 (freq=110)
	 Assigning to 1201 (cl=VFP_LO_REGS, orig=389, freq=110, tfirst=1201, tfreq=110)...
	   Assign 31 to reload r1201 (freq=110)
	 Assigning to 1203 (cl=VFP_LO_REGS, orig=765, freq=110, tfirst=1203, tfreq=110)...
	   Assign 31 to reload r1203 (freq=110)
	 Assigning to 1204 (cl=VFP_LO_REGS, orig=767, freq=110, tfirst=1204, tfreq=110)...
	   Assign 31 to reload r1204 (freq=110)
	 Assigning to 1205 (cl=VFP_LO_REGS, orig=774, freq=110, tfirst=1205, tfreq=110)...
	   Assign 31 to reload r1205 (freq=110)
	 Assigning to 1206 (cl=VFP_LO_REGS, orig=776, freq=110, tfirst=1206, tfreq=110)...
	   Assign 31 to reload r1206 (freq=110)
	 Assigning to 1193 (cl=VFP_LO_REGS, orig=398, freq=81, tfirst=1193, tfreq=81)...
	   Assign 37 to reload r1193 (freq=81)
	 Assigning to 1192 (cl=VFP_LO_REGS, orig=735, freq=54, tfirst=1192, tfreq=54)...
	   Assign 31 to reload r1192 (freq=54)
	 Assigning to 1111 (cl=VFP_LO_REGS, orig=355, freq=26, tfirst=1111, tfreq=26)...
	   Assign 30 to reload r1111 (freq=26)
	 Assigning to 1112 (cl=VFP_LO_REGS, orig=356, freq=26, tfirst=1112, tfreq=26)...
	   Assign 31 to reload r1112 (freq=26)
  Reassigning non-reload pseudos
	   Assign 3 to r429 (freq=194)

********** Undoing inheritance #1: **********

Inherit 21 out of 21 (100.00%)
	     Keep split r1285 (orig=r834)
Split 1 out of 1 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=12,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Costly set: reject++
          alt=10,overall=1,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2378:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2459:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2460:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2456:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2454:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2452:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2451:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2448:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2445:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2444:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2441:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2438:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2437:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2435:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2434:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 105 n_edges 150 count 118 (  1.1)
df_worklist_dataflow_doublequeue: n_basic_blocks 105 n_edges 150 count 105 (    1)

Cands:
0 (nop=0, remat_regno=967, reload_regno=1113):
(insn 1942 1957 2274 4 (set (reg/f:SI 1113 [967])
                    (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
                 (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
                    (nil)))
1 (nop=0, remat_regno=967, reload_regno=-1):
(insn 2434 2275 2433 5 (set (reg/f:SI 967)
                    (reg/f:SI 1265 [967])) "../System/ray_funkcije.c":85:10 728 {*thumb2_movsi_vfp}
                 (nil))
2 (nop=0, remat_regno=967, reload_regno=-1):
(insn 2437 2282 2436 11 (set (reg/f:SI 967)
                    (reg/f:SI 1268 [967])) "../System/ray_funkcije.c":90:10 728 {*thumb2_movsi_vfp}
                 (nil))
3 (nop=0, remat_regno=970, reload_regno=-1):
(insn 2451 2319 2320 37 (set (reg/f:SI 970)
                    (reg/f:SI 1278 [970])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
                 (nil))
4 (nop=0, remat_regno=970, reload_regno=-1):
(insn 2452 2321 538 38 (set (reg/f:SI 970)
                    (reg/f:SI 1279 [970])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
                 (nil))

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356
  changed regs: 0 [r0] 355 356 481 483 996 1109 1110 1111 1112
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 481 483 996 1109 1110 1111 1112
  livein cands in BB 2:

        0

BB 3:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356
  changed regs: 0 [r0] 997
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 997
  livein cands in BB 3:

        0

BB 4:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 967 1113
  dead regs: 1113
  cands generated in BB 4:

        0
  livein cands in BB 4:

        0
  pavout cands in BB 4:

        0
  avout cands in BB 4:

        0

BB 5:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 0 [r0] 2 [r2] 967 998 1114 1115 1116 1264 1265
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 998 1114 1115 1116 1264 1265
  livein cands in BB 5:

        0

BB 6:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 0 [r0] 999
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 999
  livein cands in BB 6:

        0
  pavin cands in BB 6:

        0
  pavout cands in BB 6:

        0

BB 7:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 967
  changed regs: 125 1117
  dead regs: 1117
  livein cands in BB 7:

        0
  pavin cands in BB 7:

        0
  pavout cands in BB 7:

        0

BB 8:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 967
  changed regs: 0 [r0] 2 [r2] 125 1000 1118 1119 1266
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1000 1118 1119 1266
  livein cands in BB 8:

        0
  pavin cands in BB 8:

        0
  pavout cands in BB 8:

        0

BB 9:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356
  changed regs: 0 [r0] 1001
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1001
  livein cands in BB 9:

        0

BB 10:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 967 1120
  dead regs: 1120
  livein cands in BB 10:

        0

BB 11:
  register live in: 355 356
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 0 [r0] 2 [r2] 967 1002 1121 1122 1123 1267 1268
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1002 1121 1122 1123 1267 1268
  livein cands in BB 11:

        0

BB 12:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 967
  changed regs: 0 [r0] 1003
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1003
  livein cands in BB 12:

        0

BB 13:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 967
  changed regs: 125 1124
  dead regs: 1124
  livein cands in BB 13:

        0

BB 14:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 967
  changed regs: 0 [r0] 2 [r2] 125 1004 1125 1126 1269
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1004 1125 1126 1269
  livein cands in BB 14:

        0

BB 15:
  register live in: 125 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 519 967
  changed regs: 519
  dead regs: 100 [cc]
  livein cands in BB 15:

        0
  pavin cands in BB 15:

        0
  pavout cands in BB 15:

        0

BB 16:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 342 343 521 1127
  dead regs: 521 1127
  livein cands in BB 16:

        0
  pavin cands in BB 16:

        0
  pavout cands in BB 16:

        0

BB 17:
  register live in: 125 355 356 519 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 519 967
  changed regs: 0 [r0] 2 [r2] 1005
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1005
  livein cands in BB 17:

        0
  pavin cands in BB 17:

        0
  pavout cands in BB 17:

        0

BB 18:
  register live in: 355 356 519 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 342 343 1128
  dead regs: 519 1128
  livein cands in BB 18:

        0
  pavin cands in BB 18:

        0
  pavout cands in BB 18:

        0

BB 19:
  register live in: 125 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 355 356 967
  changed regs: 16 [s0] 1006
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1006
  livein cands in BB 19:

        0
  pavin cands in BB 19:

        0
  pavout cands in BB 19:

        0

BB 20:
  register live in: 125 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 355 356 408 967
  changed regs: 16 [s0] 342 408 1007
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 125 1007
  livein cands in BB 20:

        0
  pavin cands in BB 20:

        0
  pavout cands in BB 20:

        0

BB 21:
  register live in: 125 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 355 356 408 967
  changed regs: 16 [s0] 342 408 1008
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 125 1008
  livein cands in BB 21:

        0
  pavin cands in BB 21:

        0
  pavout cands in BB 21:

        0

BB 22:
  register live in: 342 355 356 408 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 343
  dead regs: 100 [cc] 408
  livein cands in BB 22:

        0
  pavin cands in BB 22:

        0
  pavout cands in BB 22:

        0

BB 23:
  register live in: 342 343 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 0 [r0] 1009
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1009
  livein cands in BB 23:

        0
  pavin cands in BB 23:

        0
  pavout cands in BB 23:

        0

BB 24:
  register live in: 342 343 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967 973
  changed regs: 533 534 535 537 538 539 540 543 545 546 548 973 1101 1102 1129 1130 1131 1271
  dead regs: 533 534 535 537 538 539 540 543 545 546 548 1129 1130 1131 1271
  livein cands in BB 24:

        0
  pavin cands in BB 24:

        0
  pavout cands in BB 24:

        0

BB 25:
  register live in: 342 343 355 356 967 973
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967 973
  changed regs: 16 [s0] 146 552 553 1010 1132 1133 1134 1270
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 146 552 553 1010 1132 1133 1134 1270
  livein cands in BB 25:

        0
  pavin cands in BB 25:

        0
  pavout cands in BB 25:

        0

BB 26:
  register live in: 342 343 355 356 967 973
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 556 557 558 559 561 562 563 566 568 569 571 1103 1104 1135 1136 1137 1273
  dead regs: 556 557 558 559 561 562 563 566 568 569 571 973 1135 1136 1137 1273
  livein cands in BB 26:

        0
  pavin cands in BB 26:

        0
  pavout cands in BB 26:

        0

BB 27:
  register live in: 342 343 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 16 [s0] 154 575 576 1011 1138 1139 1140 1272
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 154 575 576 1011 1138 1139 1140 1272
  livein cands in BB 27:

        0
  pavin cands in BB 27:

        0
  pavout cands in BB 27:

        0

BB 28:
  register live in: 342 343 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 342 343 355 356 967
  changed regs: 0 [r0] 1012
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1012
  livein cands in BB 28:

        0
  pavin cands in BB 28:

        0
  pavout cands in BB 28:

        0

BB 29:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 409 410 412 413 967
  changed regs: 16 [s0] 409 410 411 412 413 1013 1014 1141 1142 1143
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 411 1013 1014 1141 1142 1143
  livein cands in BB 29:

        0
  pavin cands in BB 29:

        0
  pavout cands in BB 29:

        0

BB 30:
  register live in: 342 343 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 343 355 356 967 973
  changed regs: 585 586 587 589 590 591 592 595 597 598 600 973 1105 1106 1144 1145 1146 1274
  dead regs: 342 585 586 587 589 590 591 592 595 597 598 600 1144 1145 1146 1274
  livein cands in BB 30:

        0
  pavin cands in BB 30:

        0
  pavout cands in BB 30:

        0

BB 31:
  register live in: 343 355 356 967 973
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 160 343 355 356 409 410 967 973
  changed regs: 16 [s0] 160 409 410 1015 1147 1148
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1015 1147 1148
  livein cands in BB 31:

        0
  pavin cands in BB 31:

        0
  pavout cands in BB 31:

        0

BB 32:
  register live in: 343 355 356 967 973
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 160 343 355 356 409 410 967 973
  changed regs: 16 [s0] 160 409 410 605 606 1016 1149 1150 1151 1275
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 605 606 1016 1149 1150 1151 1275
  livein cands in BB 32:

        0
  pavin cands in BB 32:

        0
  pavout cands in BB 32:

        0

BB 33:
  register live in: 160 343 355 356 409 410 967 973
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 160 355 356 409 410 967
  changed regs: 609 610 611 612 614 615 616 619 621 622 624 1107 1108 1152 1153 1154 1276
  dead regs: 343 609 610 611 612 614 615 616 619 621 622 624 973 1152 1153 1154 1276
  livein cands in BB 33:

        0
  pavin cands in BB 33:

        0
  pavout cands in BB 33:

        0

BB 34:
  register live in: 160 355 356 409 410 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 409 410 412 413 967
  changed regs: 16 [s0] 412 413 1017 1155
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 160 1017 1155
  livein cands in BB 34:

        0
  pavin cands in BB 34:

        0
  pavout cands in BB 34:

        0

BB 35:
  register live in: 160 355 356 409 410 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 409 410 412 413 967
  changed regs: 16 [s0] 412 413 627 628 1018 1156 1157 1277
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 160 627 628 1018 1156 1157 1277
  livein cands in BB 35:

        0
  pavin cands in BB 35:

        0
  pavout cands in BB 35:

        0

BB 36:
  register live in: 355 356 409 410 412 413 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 409 410 412 413 630 967
  changed regs: 0 [r0] 630 1019
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1019
  livein cands in BB 36:

        0
  pavin cands in BB 36:

        0
  pavout cands in BB 36:

        0

BB 37:
  register live in: 355 356 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 416 967 970
  changed regs: 416 970 1158 1159 1278
  dead regs: 1158 1159 1278
  livein cands in BB 37:

        0
  pavin cands in BB 37:

        0
  pavout cands in BB 37:

        0

BB 38:
  register live in: 355 356 409 410 412 413 630 967
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 171 355 356 416 630 640 967 970
  changed regs: 169 171 357 358 416 632 634 636 637 639 640 642 970 1160 1161 1162 1163 1279
  dead regs: 100 [cc] 169 357 358 409 410 412 413 632 634 636 637 639 642 1160 1161 1162 1163 1279
  livein cands in BB 38:

        0
  pavin cands in BB 38:

        0
  pavout cands in BB 38:

        0

BB 39:
  register live in: 171 355 356 416 630 640 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 355 356 416 967 970
  changed regs:
  dead regs: 171 630 640
  livein cands in BB 39:

        0
  pavin cands in BB 39:

        0
  pavout cands in BB 39:

        0

BB 40:
  register live in: 355 356 416 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 418 463 967 970 1078
  changed regs: 339 418 463 1078 1164 1165
  dead regs: 416 1164 1165
  livein cands in BB 40:

        0
  pavin cands in BB 40:

        0
  pavout cands in BB 40:

        0

BB 41:
  register live in: 339 355 356 418 463 967 970 1078
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 355 356 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 346 651 1020 1021 1022 1166
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 651 1020 1021 1022 1166
  livein cands in BB 41:

        0
  pavin cands in BB 41:

        0
  pavout cands in BB 41:

        0

BB 42:
  register live in: 339 355 356 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 339 346 355 356 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 181 346 1023 1024
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1023 1024
  livein cands in BB 42:

        0
  pavin cands in BB 42:

        0
  pavout cands in BB 42:

        0

BB 43:
  register live in: 339 346 355 356 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 339 346 355 356 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 181 1025 1026
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1025 1026
  livein cands in BB 43:

        0
  pavin cands in BB 43:

        0
  pavout cands in BB 43:

        0

BB 44:
  register live in: 181 339 355 356 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 339 346 355 356 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 181 346 1027 1028
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 181 1027 1028
  livein cands in BB 44:

        0
  pavin cands in BB 44:

        0
  pavout cands in BB 44:

        0

BB 45:
  register live in: 181 339 346 355 356 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 339 346 355 356 359 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 16 [s0] 183 359 664 1029 1030
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 664 1029 1030
  livein cands in BB 45:

        0
  pavin cands in BB 45:

        0
  pavout cands in BB 45:

        0

BB 46:
  register live in: 181 183 339 346 355 356 359 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 346 355 356 360 361 402 403 404 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 193 195 360 361 402 403 404 672 674 681 682 1031 1167 1168 1169 1170 1171 1172 1173 1174 1280 1281
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 359 672 674 681 682 1031 1167 1168 1169 1170 1171 1172 1173 1174 1280 1281
  livein cands in BB 46:

        0
  pavin cands in BB 46:

        0
  pavout cands in BB 46:

        0

BB 47:
  register live in: 181 183 339 346 355 356 359 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 346 355 356 360 361 402 403 404 418 463 967 970 1078
  changed regs: 193 195 360 361 402 403 404 688 692 695 1175 1176 1177 1178 1179 1180
  dead regs: 359 688 692 695 1175 1176 1177 1178 1179 1180
  livein cands in BB 47:

        0
  pavin cands in BB 47:

        0
  pavout cands in BB 47:

        0

BB 48:
  register live in: 183 193 195 339 346 354 355 356 360 361 402 403 404 418 463 967 970 988 1096 1097 1098
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 183 193 195 339 346 354 355 356 360 361 400 401 402 403 404 418 463 967 970 988 1096 1097 1098
  changed regs: 400 401 696 697 1074 1075 1181
  dead regs: 100 [cc] 696 697 1074 1075 1181
  livein cands in BB 48:

        0
  pavin cands in BB 48:

        0
  pavout cands in BB 48:

        0

BB 49:
  register live in: 183 193 195 339 346 354 355 356 360 361 400 401 402 403 404 418 463 967 970 988 1096 1097 1098
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 183 193 195 339 346 354 355 356 360 361 400 402 403 404 418 463 701 967 970 988 1096 1097 1098
  changed regs: 701 1182 1183 1184
  dead regs: 100 [cc] 401 1182 1183 1184
  livein cands in BB 49:

        0
  pavin cands in BB 49:

        0
  pavout cands in BB 49:

        0

BB 50:
  register live in: 183 193 195 339 346 354 355 356 360 361 400 402 403 404 418 463 701 967 970 988 1096 1097 1098
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 183 193 195 339 346 354 355 356 360 361 402 403 404 418 463 967 970 988 1096 1097 1098 1099
  changed regs: 1099
  dead regs: 400 701
  livein cands in BB 50:

        0
  pavin cands in BB 50:

        0
  pavout cands in BB 50:

        0

BB 51:
  register live in: 183 193 195 339 346 354 355 356 402 403 404 418 463 967 970 1096 1098 1099
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 345 346 354 355 356 402 403 404 418 463 967 970 1078
  changed regs: 181 199 345 1078
  dead regs: 199 1096 1098 1099
  livein cands in BB 51:

        0
  pavin cands in BB 51:

        0
  pavout cands in BB 51:

        0

BB 52:
  register live in: 183 193 195 339 346 354 355 356 360 361 402 403 404 418 463 967 970 988 1096 1097 1098
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 183 193 195 339 346 354 355 356 360 361 402 403 404 418 463 967 970 988 1096 1097 1098
  changed regs: 402 403 1097
  dead regs: 100 [cc]
  livein cands in BB 52:

        0
  pavin cands in BB 52:

        0
  pavout cands in BB 52:

        0

BB 53:
  register live in: 183 193 195 339 346 354 355 356 402 403 404 418 463 967 970 1096 1097 1098
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 345 346 354 355 356 402 403 404 418 463 967 970 1078
  changed regs: 181 341 345 1078
  dead regs: 341 1096 1097 1098
  livein cands in BB 53:

        0
  pavin cands in BB 53:

        0
  pavout cands in BB 53:

        0

BB 54:
  register live in: 181 183 193 195 339 346 355 356 360 361 402 403 404 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 183 193 195 339 346 354 355 356 360 361 402 403 404 418 463 967 970 988 1096 1097 1098
  changed regs: 341 354 703 988 1096 1097 1098
  dead regs: 181 341 703 1078
  livein cands in BB 54:

        0
  pavin cands in BB 54:

        0
  pavout cands in BB 54:

        0

BB 55:
  register live in: 181 183 193 195 339 345 346 354 355 356 402 403 404 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 345 346 354 355 356 362 402 403 404 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 16 [s0] 200 201 362 704 1032 1033 1034 1035 1072 1073 1185
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 200 201 704 1032 1033 1034 1035 1072 1073 1185
  livein cands in BB 55:

        0
  pavin cands in BB 55:

        0
  pavout cands in BB 55:

        0

BB 56:
  register live in: 181 183 193 195 339 345 346 354 355 356 362 402 403 404 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 183 193 195 339 345 346 354 355 356 362 402 403 404 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 1036
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1036
  livein cands in BB 56:

        0
  pavin cands in BB 56:

        0
  pavout cands in BB 56:

        0

BB 57:
  register live in: 181 183 193 195 339 345 346 354 355 356 362 402 403 404 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 193 195 339 345 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970
  changed regs: 363 397 398 716 720 721 1186 1187 1188
  dead regs: 183 716 720 721 1078 1186 1187 1188
  livein cands in BB 57:

        0
  pavin cands in BB 57:

        0
  pavout cands in BB 57:

        0

BB 58:
  register live in: 181 183 193 195 339 345 346 354 355 356 362 402 403 418 463 967 970 1078
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 193 195 339 345 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970
  changed regs: 0 [r0] 2 [r2] 363 397 398 404 727 729 734 735 1037 1189 1190 1191 1192 1193 1282 1283
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 183 727 729 734 735 1037 1078 1189 1190 1191 1192 1193 1282 1283
  livein cands in BB 58:

        0
  pavin cands in BB 58:

        0
  pavout cands in BB 58:

        0

BB 59:
  register live in: 193 195 339 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 195 339 346 354 355 356 362 363 395 396 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  changed regs: 395 396 736 737 1076 1077 1194
  dead regs: 100 [cc] 736 737 1076 1077 1194
  livein cands in BB 59:

        0
  pavin cands in BB 59:

        0
  pavout cands in BB 59:

        0

BB 60:
  register live in: 193 195 339 346 354 355 356 362 363 395 396 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 195 339 346 354 355 356 362 363 395 397 398 402 403 404 418 463 741 967 970 986 1092 1093 1094
  changed regs: 741 1195 1196 1197
  dead regs: 100 [cc] 396 1195 1196 1197
  livein cands in BB 60:

        0
  pavin cands in BB 60:

        0
  pavout cands in BB 60:

        0

BB 61:
  register live in: 193 195 339 346 354 355 356 362 363 395 397 398 402 403 404 418 463 741 967 970 986 1092 1093 1094
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 195 339 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970 986 1092 1093 1094 1095
  changed regs: 1095
  dead regs: 395 741
  livein cands in BB 61:

        0
  pavin cands in BB 61:

        0
  pavout cands in BB 61:

        0

BB 62:
  register live in: 193 195 339 346 355 356 362 397 398 402 403 418 463 967 970 1092 1093 1095
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 193 195 339 345 346 355 356 362 397 398 402 403 418 463 967 970
  changed regs: 173 181 220 345
  dead regs: 220 1092 1093 1095
  livein cands in BB 62:

        0
  pavin cands in BB 62:

        0
  pavout cands in BB 62:

        0

BB 63:
  register live in: 193 195 339 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 195 339 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  changed regs: 397 398 1094
  dead regs: 100 [cc]
  livein cands in BB 63:

        0
  pavin cands in BB 63:

        0
  pavout cands in BB 63:

        0

BB 64:
  register live in: 193 195 339 346 355 356 362 397 398 402 403 418 463 967 970 1092 1093 1094
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 193 195 339 345 346 355 356 362 397 398 402 403 418 463 967 970
  changed regs: 173 181 345 420
  dead regs: 420 1092 1093 1094
  livein cands in BB 64:

        0
  pavin cands in BB 64:

        0
  pavout cands in BB 64:

        0

BB 65:
  register live in: 181 193 195 339 345 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 195 339 346 354 355 356 362 363 397 398 402 403 404 418 463 967 970 986 1092 1093 1094
  changed regs: 420 986 1092 1093 1094
  dead regs: 181 345 420
  livein cands in BB 65:

        0
  pavin cands in BB 65:

        0
  pavout cands in BB 65:

        0

BB 66:
  register live in: 173 181 193 195 339 345 346 355 356 362 397 398 402 403 418 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 339 340 345 346 355 356 362 397 398 402 403 418 463 967 970
  changed regs: 0 [r0] 16 [s0] 221 222 340 743 1038 1039 1040 1198
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 193 195 221 222 743 1038 1039 1040 1198
  livein cands in BB 66:

        0
  pavin cands in BB 66:

        0
  pavout cands in BB 66:

        0

BB 67:
  register live in: 181 339 345 346 355 356 362 402 403 418 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 339 340 346 347 355 356 397 398 418 463 967 970
  changed regs: 173 340 347 397 398
  dead regs: 345 362 402 403
  livein cands in BB 67:

        0
  pavin cands in BB 67:

        0
  pavout cands in BB 67:

        0

BB 68:
  register live in: 173 181 339 340 346 355 356 397 398 418 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 339 340 346 347 355 356 397 398 418 463 967 970
  changed regs: 347
  dead regs:
  livein cands in BB 68:

        0
  pavin cands in BB 68:

        0
  pavout cands in BB 68:

        0

BB 69:
  register live in: 173 181 339 340 346 347 355 356 397 398 418 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 227 339 346 347 348 355 356 364 365 397 398 463 748 752 967 970
  changed regs: 16 [s0] 227 348 364 365 747 748 749 750 751 752 1041 1199 1200
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 340 418 747 749 750 751 1041 1199 1200
  livein cands in BB 69:

        0
  pavin cands in BB 69:

        0
  pavout cands in BB 69:

        0

BB 70:
  register live in: 173 181 227 339 346 347 348 355 356 364 365 397 398 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 227 339 346 347 348 355 356 364 365 389 393 397 398 423 463 967 970
  changed regs: 389 393 423 754 755 756 1201
  dead regs: 754 755 756 1201
  livein cands in BB 70:

        0
  pavin cands in BB 70:

        0
  pavout cands in BB 70:

        0

BB 71:
  register live in: 173 181 227 339 346 347 348 355 356 364 365 397 398 463 748 752 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 227 339 346 347 348 355 356 364 365 389 393 397 398 423 463 967 970
  changed regs: 348 389 393 423 757 759 760
  dead regs: 348 748 752 757 759 760
  livein cands in BB 71:

        0
  pavin cands in BB 71:

        0
  pavout cands in BB 71:

        0

BB 72:
  register live in: 173 181 227 339 346 347 348 355 356 364 365 389 393 397 398 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 339 346 347 348 355 356 364 365 366 389 393 397 398 423 463 967 970
  changed regs: 366 763 1202
  dead regs: 100 [cc] 227 763 1202
  livein cands in BB 72:

        0
  pavin cands in BB 72:

        0
  pavout cands in BB 72:

        0

BB 73:
  register live in: 173 181 339 346 347 348 355 356 364 365 366 389 393 397 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  changed regs: 0 [r0] 2 [r2] 349 764 765 767 768 769 1042 1203 1204
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 181 366 397 764 765 767 768 769 1042 1203 1204
  livein cands in BB 73:

        0
  pavin cands in BB 73:

        0
  pavout cands in BB 73:

        0

BB 74:
  register live in: 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  changed regs: 349 772
  dead regs: 772
  livein cands in BB 74:

        0
  pavin cands in BB 74:

        0
  pavout cands in BB 74:

        0

BB 75:
  register live in: 173 181 339 346 347 348 355 356 364 365 366 389 393 398 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 181 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  changed regs: 0 [r0] 2 [r2] 349 773 774 776 777 778 1043 1205 1206
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 366 398 773 774 776 777 778 1043 1205 1206
  livein cands in BB 75:

        0
  pavin cands in BB 75:

        0
  pavout cands in BB 75:

        0

BB 76:
  register live in: 173 181 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  changed regs: 0 [r0] 2 [r2] 1044
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 181 1044
  livein cands in BB 76:

        0
  pavin cands in BB 76:

        0
  pavout cands in BB 76:

        0

BB 77:
  register live in: 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  changed regs: 349 783
  dead regs: 783
  livein cands in BB 77:

        0
  pavin cands in BB 77:

        0
  pavout cands in BB 77:

        0

BB 78:
  register live in: 173 339 346 347 348 349 355 356 364 365 389 393 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 173 339 346 347 348 349 355 356 364 365 368 389 393 423 463 967 970
  changed regs: 0 [r0] 2 [r2] 368 784 785 786 787 1045 1207
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 784 785 786 787 1045 1207
  livein cands in BB 78:

        0
  pavin cands in BB 78:

        0
  pavout cands in BB 78:

        0

BB 79:
  register live in: 339 346 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 353 355 356 368 389 463 967 970
  changed regs: 353 794 1208
  dead regs: 100 [cc] 794 1208
  livein cands in BB 79:

        0
  pavin cands in BB 79:

        0
  pavout cands in BB 79:

        0

BB 80:
  register live in: 339 346 353 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 353 355 356 368 389 463 967 970
  changed regs:
  dead regs:
  livein cands in BB 80:

        0
  pavin cands in BB 80:

        0
  pavout cands in BB 80:

        0

BB 81:
  register live in: 173 339 346 347 348 349 355 356 364 365 368 389 393 423 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  changed regs: 216 279 394 429 1087 1088 1089 1090 1091 1209
  dead regs: 173 347 349 364 368 389 394 429 1209
  livein cands in BB 81:

        0
  pavin cands in BB 81:

        0
  pavout cands in BB 81:

        0

BB 82:
  register live in: 216 279 339 346 348 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 355 356 365 393 423 463 801 967 970 1087 1088 1089 1090 1091
  changed regs: 796 798 801 1210
  dead regs: 100 [cc] 796 798 1210
  livein cands in BB 82:

        0
  pavin cands in BB 82:

        0
  pavout cands in BB 82:

        0

BB 83:
  register live in: 216 279 339 346 348 355 356 365 393 423 463 801 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 352 355 356 365 393 423 463 801 821 967 970 1087 1088 1089 1090 1091
  changed regs: 352 821 1211
  dead regs: 100 [cc] 1211
  livein cands in BB 83:

        0
  pavin cands in BB 83:

        0
  pavout cands in BB 83:

        0

BB 84:
  register live in: 216 279 339 346 348 352 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 350 351 352 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  changed regs: 350 351
  dead regs:
  livein cands in BB 84:

        0
  pavin cands in BB 84:

        0
  pavout cands in BB 84:

        0

BB 85:
  register live in: 216 279 339 346 348 355 356 365 393 423 463 801 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 350 351 352 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  changed regs: 350 351 352 803 804 805 807 808 809 810 813 814 815 1212 1213 1214 1215 1216 1217 1218 1219 1284
  dead regs: 801 803 804 805 807 808 809 810 813 814 815 1212 1213 1214 1215 1216 1217 1218 1219 1284
  livein cands in BB 85:

        0
  pavin cands in BB 85:

        0
  pavout cands in BB 85:

        0

BB 86:
  register live in: 216 279 339 346 348 355 356 365 393 423 463 801 821 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 350 351 352 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  changed regs: 350 351 352 817 818 819 822 823 824 827 828 829 1220 1221 1222 1223 1224 1225 1226
  dead regs: 801 817 818 819 821 822 823 824 827 828 829 1220 1221 1222 1223 1224 1225 1226
  livein cands in BB 86:

        0
  pavin cands in BB 86:

        0
  pavout cands in BB 86:

        0

BB 87:
  register live in: 216 279 339 346 348 350 351 352 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 279 339 346 348 355 356 365 393 423 463 967 970 1087 1088 1089 1090 1091
  changed regs: 0 [r0] 1 [r1] 2 [r2] 279 393 830 833 834 1046 1047 1048 1090 1227 1228 1285
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 279 350 351 352 830 833 834 1046 1047 1048 1227 1228 1285
  livein cands in BB 87:

        0
  pavin cands in BB 87:

        0
  pavout cands in BB 87:

        0

BB 88:
  register live in: 339 346 355 356 463 967 970 1088 1089
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 355 356 368 389 463 967 970
  changed regs: 368 389
  dead regs: 1088 1089
  livein cands in BB 88:

        0
  pavin cands in BB 88:

        0
  pavout cands in BB 88:

        0

BB 89:
  register live in: 339 346 353 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 353 355 356 368 389 463 967 970
  changed regs: 0 [r0] 2 [r2] 353 1049
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 353 1049
  livein cands in BB 89:

        0
  pavin cands in BB 89:

        0
  pavout cands in BB 89:

        0

BB 90:
  register live in: 339 346 353 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 283 339 346 353 355 356 368 389 463 967 970
  changed regs: 0 [r0] 2 [r2] 283 1050 1051
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1050 1051
  livein cands in BB 90:

        0
  pavin cands in BB 90:

        0
  pavout cands in BB 90:

        0

BB 91:
  register live in: 283 339 346 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 346 353 355 356 368 389 463 967 970
  changed regs: 0 [r0] 2 [r2] 353 1052
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 283 1052
  livein cands in BB 91:

        0
  pavin cands in BB 91:

        0
  pavout cands in BB 91:

        0

BB 92:
  register live in: 339 346 353 355 356 368 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 368 370 372 373 374 375 389 463 967 970
  changed regs: 0 [r0] 2 [r2] 16 [s0] 369 370 371 372 373 374 375 1053 1054 1055 1056 1057 1058 1059 1229 1230
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 346 353 369 371 1053 1054 1055 1056 1057 1058 1059 1229 1230
  livein cands in BB 92:

        0
  pavin cands in BB 92:

        0
  pavout cands in BB 92:

        0

BB 93:
  register live in: 339 355 356 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 463 967 970
  changed regs: 339 463 857 1231 1232
  dead regs: 100 [cc] 463 857 1231 1232
  livein cands in BB 93:

        0
  pavin cands in BB 93:

        0
  pavout cands in BB 93:

        0

BB 94:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs:
  dead regs:
  livein cands in BB 94:

        0
  pavin cands in BB 94:

        0
  pavout cands in BB 94:

        0

BB 95:
  register live in: 339 355 356 368 370 372 373 374 375 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 368 370 372 373 374 375 389 463 967 970
  changed regs:
  dead regs: 100 [cc]
  livein cands in BB 95:

        0
  pavin cands in BB 95:

        0
  pavout cands in BB 95:

        0

BB 96:
  register live in: 339 355 356 368 370 372 373 374 375 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 370 372 373 374 375 463 860 967 970 1083 1084 1085 1086
  changed regs: 860 968 969 1083 1084 1085 1086
  dead regs: 368 389 968 969
  livein cands in BB 96:

        0
  pavin cands in BB 96:

        0
  pavout cands in BB 96:

        0

BB 97:
  register live in: 339 355 356 368 370 372 373 374 375 389 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 368 370 372 373 374 375 389 463 967 968 969 970
  changed regs: 968 969
  dead regs:
  livein cands in BB 97:

        0
  pavin cands in BB 97:

        0
  pavout cands in BB 97:

        0

BB 98:
  register live in: 339 355 356 370 372 373 374 375 463 860 967 970 1083 1084 1085 1086
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 370 372 373 374 375 463 860 967 970 1083 1084 1085 1086
  changed regs: 0 [r0] 1 [r1] 2 [r2] 16 [s0] 296 309 314 380 858 859 861 862 863 864 866 867 868 869 870 873 875 876 877 880 881 882 885 886 887 889 894 895 896 899 900 901 904 905 906 908 1060 1061 1062 1063 1064 1084 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 296 309 314 380 858 859 861 862 863 864 866 867 868 869 870 873 875 876 877 880 881 882 885 886 887 889 894 895 896 899 900 901 904 905 906 908 1060 1061 1062 1063 1064 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247
  livein cands in BB 98:

        0
  pavin cands in BB 98:

        0
  pavout cands in BB 98:

        0

BB 104:
  register live in: 339 355 356 370 372 373 374 375 463 967 970 1083 1084 1085 1086
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 368 370 372 373 374 375 389 463 967 968 969 970
  changed regs: 368 389 968 969
  dead regs: 1083 1084 1085 1086
  livein cands in BB 104:

        0
  pavin cands in BB 104:

        0
  pavout cands in BB 104:

        0

BB 99:
  register live in: 339 355 356 368 370 372 373 374 375 389 463 967 968 969 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 370 372 373 374 375 463 915 967 970 1079 1080 1081 1082
  changed regs: 915 1079 1080 1081 1082
  dead regs: 368 389 968 969
  livein cands in BB 99:

        0
  pavin cands in BB 99:

        0
  pavout cands in BB 99:

        0

BB 100:
  register live in: 339 355 356 370 372 373 374 375 463 915 967 970 1079 1080 1081 1082
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 370 372 373 374 375 463 915 967 970 1079 1080 1081 1082
  changed regs: 0 [r0] 1 [r1] 2 [r2] 452 457 475 913 914 916 917 918 919 921 922 923 924 925 928 930 931 934 935 938 939 941 946 947 950 951 954 955 957 1065 1066 1067 1068 1080 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 452 457 475 913 914 916 917 918 919 921 922 923 924 925 928 930 931 934 935 938 939 941 946 947 950 951 954 955 957 1065 1066 1067 1068 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262
  livein cands in BB 100:

        0
  pavin cands in BB 100:

        0
  pavout cands in BB 100:

        0

BB 101:
  register live in: 339 355 356 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 463 967 970
  changed regs:
  dead regs:
  livein cands in BB 101:

        0
  pavin cands in BB 101:

        0
  pavout cands in BB 101:

        0

BB 102:
  register live in: 339 355 356 463 967 970
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 339 355 356 418 463 967 970 1078
  changed regs: 0 [r0] 2 [r2] 16 [s0] 418 1069 1070 1078 1263
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 1069 1070 1263
  livein cands in BB 102:

        0
  pavin cands in BB 102:

        0
  pavout cands in BB 102:

        0

BB 103:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
  livein cands in BB 103:

        0
  pavin cands in BB 103:

        0
  pavout cands in BB 103:

        0
subreg regs:
  Slot 0 regnos (width = 0):	 1285
  Slot 1 regnos (width = 0):	 967
  Slot 2 regnos (width = 0):	 463
  Slot 3 regnos (width = 0):	 970
  Slot 4 regnos (width = 0):	 1089
  Slot 5 regnos (width = 0):	 356
  Slot 6 regnos (width = 0):	 355
Changing spilled pseudos to memory in insn #2272
Changing spilled pseudos to memory in insn #65
Changing spilled pseudos to memory in insn #2273
Changing spilled pseudos to memory in insn #70
Changing spilled pseudos to memory in insn #2274
Changing spilled pseudos to memory in insn #2434
Changing spilled pseudos to memory in insn #2278
Changing spilled pseudos to memory in insn #2435
Changing spilled pseudos to memory in insn #2281
Changing spilled pseudos to memory in insn #2437
Changing spilled pseudos to memory in insn #2285
Changing spilled pseudos to memory in insn #2438
Changing spilled pseudos to memory in insn #2288
Changing spilled pseudos to memory in insn #2289
Changing spilled pseudos to memory in insn #2290
Changing spilled pseudos to memory in insn #2441
Changing spilled pseudos to memory in insn #2293
Changing spilled pseudos to memory in insn #2296
Changing spilled pseudos to memory in insn #2444
Changing spilled pseudos to memory in insn #2299
Changing spilled pseudos to memory in insn #2302
Changing spilled pseudos to memory in insn #2305
Changing spilled pseudos to memory in insn #2445
Changing spilled pseudos to memory in insn #2308
Changing spilled pseudos to memory in insn #2310
Changing spilled pseudos to memory in insn #2313
Changing spilled pseudos to memory in insn #2448
Changing spilled pseudos to memory in insn #2451
Changing spilled pseudos to memory in insn #2452
Changing spilled pseudos to memory in insn #2325
Changing spilled pseudos to memory in insn #2327
Changing spilled pseudos to memory in insn #2454
Changing spilled pseudos to memory in insn #2340
Changing spilled pseudos to memory in insn #2350
Changing spilled pseudos to memory in insn #2456
Changing spilled pseudos to memory in insn #2366
Changing spilled pseudos to memory in insn #2377
Changing spilled pseudos to memory in insn #2251
Changing spilled pseudos to memory in insn #2459
Changing spilled pseudos to memory in insn #2460
Changing spilled pseudos to memory in insn #2255
Changing spilled pseudos to memory in insn #2401
Changing spilled pseudos to memory in insn #2400
Changing spilled pseudos to memory in insn #2432
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=128, prev_offset=96)
Can't eliminate 103 to 102 (offset=96, prev_offset=0)
Can't eliminate 103 to 11 (offset=92, prev_offset=0)
Can eliminate 103 to 7 (offset=128, prev_offset=0)
Can eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2432:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2400:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2401:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2255:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2460:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2459:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2251:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2377:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2366:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2456:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2350:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2340:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2454:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2327:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2325:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2452:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2451:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2448:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2313:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2310:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2308:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2445:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2305:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2302:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2299:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2444:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2296:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2293:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2441:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2290:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2289:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2288:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2438:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2285:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2437:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2281:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2435:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2278:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2434:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2274:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 2273:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 2272:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=128, prev_offset=128)
Can't eliminate 103 to 102 (offset=96, prev_offset=0)
Can't eliminate 103 to 11 (offset=92, prev_offset=0)
Can eliminate 103 to 7 (offset=128, prev_offset=0)
Can eliminate 102 to 13 (offset=32, prev_offset=32)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=0)
changing reg in insn 204
changing reg in insn 140
changing reg in insn 188
changing reg in insn 124
changing reg in insn 2218
changing reg in insn 206
changing reg in insn 142
changing reg in insn 289
changing reg in insn 280
changing reg in insn 270
changing reg in insn 234
changing reg in insn 349
changing reg in insn 351
changing reg in insn 385
changing reg in insn 387
changing reg in insn 452
changing reg in insn 440
changing reg in insn 495
changing reg in insn 485
changing reg in insn 453
changing reg in insn 441
changing reg in insn 533
changing reg in insn 541
changing reg in insn 537
changing reg in insn 555
changing reg in insn 543
changing reg in insn 19
changing reg in insn 21
changing reg in insn 971
changing reg in insn 2249
changing reg in insn 1048
changing reg in insn 1017
changing reg in insn 2243
changing reg in insn 2240
changing reg in insn 2234
changing reg in insn 2231
changing reg in insn 654
changing reg in insn 630
changing reg in insn 622
changing reg in insn 2246
changing reg in insn 2237
changing reg in insn 1171
changing reg in insn 1160
changing reg in insn 1131
changing reg in insn 868
changing reg in insn 860
changing reg in insn 670
changing reg in insn 644
changing reg in insn 661
changing reg in insn 2222
changing reg in insn 2221
changing reg in insn 928
changing reg in insn 921
changing reg in insn 894
changing reg in insn 889
changing reg in insn 856
changing reg in insn 663
changing reg in insn 663
changing reg in insn 729
changing reg in insn 699
changing reg in insn 839
changing reg in insn 1025
changing reg in insn 732
changing reg in insn 702
changing reg in insn 731
changing reg in insn 701
changing reg in insn 838
changing reg in insn 1024
changing reg in insn 920
changing reg in insn 888
changing reg in insn 2232
changing reg in insn 782
changing reg in insn 2224
changing reg in insn 842
changing reg in insn 842
changing reg in insn 2225
changing reg in insn 840
changing reg in insn 840
changing reg in insn 1246
changing reg in insn 1323
changing reg in insn 1315
changing reg in insn 1307
changing reg in insn 1295
changing reg in insn 1287
changing reg in insn 1279
changing reg in insn 2241
changing reg in insn 971
changing reg in insn 1024
changing reg in insn 1028
changing reg in insn 1028
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1026
changing reg in insn 1059
changing reg in insn 1061
changing reg in insn 1061
changing reg in insn 1368
changing reg in insn 31
changing reg in insn 2196
changing reg in insn 1335
changing reg in insn 1333
changing reg in insn 1399
changing reg in insn 1413
changing reg in insn 1538
changing reg in insn 1548
changing reg in insn 1543
changing reg in insn 1541
changing reg in insn 1539
changing reg in insn 1569
changing reg in insn 1631
changing reg in insn 1585
changing reg in insn 1833
changing reg in insn 1830
changing reg in insn 1631
changing reg in insn 1585
changing reg in insn 1572
changing reg in insn 1626
changing reg in insn 1580
changing reg in insn 1834
changing reg in insn 1831
changing reg in insn 1626
changing reg in insn 1580
changing reg in insn 1507
changing reg in insn 14
changing reg in insn 1806
changing reg in insn 1508
changing reg in insn 1507
changing reg in insn 1192
changing reg in insn 1190
changing reg in insn 1188
changing reg in insn 578
changing reg in insn 567
changing reg in insn 1192
changing reg in insn 1036
changing reg in insn 24
changing reg in insn 2206
changing reg in insn 1063
changing reg in insn 1053
changing reg in insn 1051
changing reg in insn 1038
changing reg in insn 2235
changing reg in insn 15
changing reg in insn 2238
changing reg in insn 17
changing reg in insn 5
changing reg in insn 4
changing reg in insn 6
changing reg in insn 9
changing reg in insn 7
changing reg in insn 425
changing reg in insn 326
changing reg in insn 294
changing reg in insn 7
changing reg in insn 1981
changing reg in insn 10
changing reg in insn 466
changing reg in insn 357
changing reg in insn 302
changing reg in insn 2244
changing reg in insn 2242
changing reg in insn 17
changing reg in insn 782
changing reg in insn 2247
changing reg in insn 21
changing reg in insn 831
changing reg in insn 649
changing reg in insn 617
changing reg in insn 595
changing reg in insn 2208
changing reg in insn 1437
changing reg in insn 1427
changing reg in insn 1235
changing reg in insn 659
changing reg in insn 657
changing reg in insn 651
changing reg in insn 619
changing reg in insn 597
changing reg in insn 654
changing reg in insn 630
changing reg in insn 622
changing reg in insn 20
changing reg in insn 25
changing reg in insn 2202
changing reg in insn 1246
changing reg in insn 1047
changing reg in insn 28
changing reg in insn 1064
changing reg in insn 2204
changing reg in insn 2200
changing reg in insn 2196
changing reg in insn 1080
changing reg in insn 1093
changing reg in insn 1081
changing reg in insn 1068
changing reg in insn 1093
changing reg in insn 1068
changing reg in insn 1182
changing reg in insn 1155
changing reg in insn 1142
changing reg in insn 1126
changing reg in insn 1247
changing reg in insn 1186
changing reg in insn 1183
changing reg in insn 1182
changing reg in insn 1156
changing reg in insn 1143
changing reg in insn 1142
changing reg in insn 1127
changing reg in insn 34
changing reg in insn 1349
changing reg in insn 1331
changing reg in insn 1309
changing reg in insn 1281
changing reg in insn 33
changing reg in insn 1347
changing reg in insn 1330
changing reg in insn 1325
changing reg in insn 1297
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 1348
changing reg in insn 1329
changing reg in insn 1317
changing reg in insn 1289
changing reg in insn 1418
changing reg in insn 1389
changing reg in insn 1235
changing reg in insn 2198
changing reg in insn 1432
changing reg in insn 1423
changing reg in insn 1420
changing reg in insn 1397
changing reg in insn 1391
changing reg in insn 1379
changing reg in insn 1236
changing reg in insn 1399
changing reg in insn 826
changing reg in insn 952
changing reg in insn 940
changing reg in insn 763
changing reg in insn 751
changing reg in insn 2021
changing reg in insn 2020
changing reg in insn 535
changing reg in insn 536
changing reg in insn 529
changing reg in insn 532
changing reg in insn 663
changing reg in insn 2220
changing reg in insn 1893
changing reg in insn 739
changing reg in insn 733
changing reg in insn 710
changing reg in insn 703
changing reg in insn 664
changing reg in insn 736
changing reg in insn 707
changing reg in insn 1892
changing reg in insn 1893
changing reg in insn 798
changing reg in insn 16
changing reg in insn 739
changing reg in insn 710
changing reg in insn 739
changing reg in insn 710
changing reg in insn 795
changing reg in insn 850
changing reg in insn 2206
changing reg in insn 24
changing reg in insn 852
changing reg in insn 928
changing reg in insn 894
changing reg in insn 987
changing reg in insn 1055
changing reg in insn 1246
changing reg in insn 1056
changing reg in insn 1068
changing reg in insn 1361
changing reg in insn 1094
changing reg in insn 1069
changing reg in insn 1149
changing reg in insn 1120
changing reg in insn 1111
changing reg in insn 2260
changing reg in insn 2254
changing reg in insn 1206
changing reg in insn 2256
changing reg in insn 2264
changing reg in insn 2250
changing reg in insn 1231
changing reg in insn 1229
changing reg in insn 1225
changing reg in insn 1223
changing reg in insn 1210
changing reg in insn 1208
changing reg in insn 1429
changing reg in insn 1442
changing reg in insn 1430
changing reg in insn 1434
changing reg in insn 1680
changing reg in insn 1538
changing reg in insn 1435
changing reg in insn 1439
changing reg in insn 1455
changing reg in insn 1440
changing reg in insn 1451
changing reg in insn 1690
changing reg in insn 1681
changing reg in insn 1548
changing reg in insn 1539
changing reg in insn 1453
changing reg in insn 1464
changing reg in insn 1685
changing reg in insn 1683
changing reg in insn 1543
changing reg in insn 1541
changing reg in insn 1466
changing reg in insn 1478
changing reg in insn 1691
changing reg in insn 1681
changing reg in insn 1549
changing reg in insn 1539
changing reg in insn 1480
changing reg in insn 1492
changing reg in insn 1686
changing reg in insn 1683
changing reg in insn 1544
changing reg in insn 1541
changing reg in insn 1494
changing reg in insn 1564
changing reg in insn 1638
changing reg in insn 1633
changing reg in insn 1628
changing reg in insn 1619
changing reg in insn 1617
changing reg in insn 1615
changing reg in insn 1592
changing reg in insn 1587
changing reg in insn 1582
changing reg in insn 1573
changing reg in insn 1570
changing reg in insn 1567
changing reg in insn 1565
changing reg in insn 2261
changing reg in insn 2255
changing reg in insn 26
changing reg in insn 2257
changing reg in insn 2265
changing reg in insn 2251
changing reg in insn 1526
changing reg in insn 1502
changing reg in insn 1361
changing reg in insn 1096
changing reg in insn 29
changing reg in insn 1366
changing reg in insn 1362
changing reg in insn 1361
changing reg in insn 1252
changing reg in insn 1250
changing reg in insn 30
changing reg in insn 2252
changing reg in insn 964
changing reg in insn 1894
changing reg in insn 949
changing reg in insn 942
changing reg in insn 953
changing reg in insn 916
changing reg in insn 23
changing reg in insn 984
changing reg in insn 885
changing reg in insn 940
changing reg in insn 1120
changing reg in insn 1050
changing reg in insn 1024
changing reg in insn 1019
changing reg in insn 1008
changing reg in insn 992
changing reg in insn 985
changing reg in insn 984
changing reg in insn 974
changing reg in insn 935
changing reg in insn 920
changing reg in insn 918
changing reg in insn 888
changing reg in insn 886
changing reg in insn 22
changing reg in insn 987
changing reg in insn 952
changing reg in insn 944
changing reg in insn 1149
changing reg in insn 1049
changing reg in insn 1025
changing reg in insn 1018
changing reg in insn 1007
changing reg in insn 991
changing reg in insn 988
changing reg in insn 987
changing reg in insn 973
changing reg in insn 934
changing reg in insn 922
changing reg in insn 890
changing reg in insn 775
changing reg in insn 1895
changing reg in insn 760
changing reg in insn 753
changing reg in insn 764
changing reg in insn 795
changing reg in insn 751
changing reg in insn 838
changing reg in insn 23
changing reg in insn 834
changing reg in insn 820
changing reg in insn 804
changing reg in insn 796
changing reg in insn 795
changing reg in insn 786
changing reg in insn 747
changing reg in insn 734
changing reg in insn 704
changing reg in insn 694
changing reg in insn 798
changing reg in insn 725
changing reg in insn 763
changing reg in insn 839
changing reg in insn 755
changing reg in insn 22
changing reg in insn 833
changing reg in insn 819
changing reg in insn 803
changing reg in insn 799
changing reg in insn 798
changing reg in insn 785
changing reg in insn 746
changing reg in insn 732
changing reg in insn 726
changing reg in insn 702
changing reg in insn 696
changing reg in insn 712
changing reg in insn 925
changing reg in insn 16
changing reg in insn 984
changing reg in insn 928
changing reg in insn 894
changing reg in insn 826
changing reg in insn 826
changing reg in insn 291
changing reg in insn 282
changing reg in insn 2214
changing reg in insn 455
changing reg in insn 443
changing reg in insn 406
changing reg in insn 535
changing reg in insn 509
changing reg in insn 459
changing reg in insn 535
changing reg in insn 459
changing reg in insn 445
changing reg in insn 411
changing reg in insn 459
changing reg in insn 461
changing reg in insn 535
changing reg in insn 510
changing reg in insn 535
changing reg in insn 403
changing reg in insn 407
changing reg in insn 404
changing reg in insn 497
changing reg in insn 487
changing reg in insn 409
changing reg in insn 529
changing reg in insn 512
changing reg in insn 501
changing reg in insn 529
changing reg in insn 501
changing reg in insn 489
changing reg in insn 413
changing reg in insn 501
changing reg in insn 503
changing reg in insn 529
changing reg in insn 513
changing reg in insn 529
changing reg in insn 531
changing reg in insn 523
changing reg in insn 2230
changing reg in insn 537
changing reg in insn 533
changing reg in insn 1818
changing reg in insn 13
changing reg in insn 1063
changing reg in insn 2245
changing reg in insn 18
changing reg in insn 2248
changing reg in insn 19
changing reg in insn 1080
changing reg in insn 27
changing reg in insn 1335
changing reg in insn 1333
changing reg in insn 1081
changing reg in insn 2253
changing reg in insn 1708
changing reg in insn 1759
changing reg in insn 1716
changing reg in insn 1840
changing reg in insn 1837
changing reg in insn 1759
changing reg in insn 1716
changing reg in insn 1705
changing reg in insn 1763
changing reg in insn 1720
changing reg in insn 1839
changing reg in insn 1836
changing reg in insn 1763
changing reg in insn 1720
changing reg in insn 1680
changing reg in insn 1690
changing reg in insn 1685
changing reg in insn 1683
changing reg in insn 1681
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 69
changing reg in insn 210
changing reg in insn 251
changing reg in insn 219
changing reg in insn 220
changing reg in insn 325
changing reg in insn 334
changing reg in insn 322
changing reg in insn 325
changing reg in insn 321
changing reg in insn 328
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 326
changing reg in insn 328
changing reg in insn 330
changing reg in insn 328
changing reg in insn 331
changing reg in insn 336
changing reg in insn 328
changing reg in insn 331
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 334
changing reg in insn 334
changing reg in insn 336
changing reg in insn 336
changing reg in insn 338
changing reg in insn 347
changing reg in insn 349
changing reg in insn 348
changing reg in insn 349
changing reg in insn 357
changing reg in insn 359
changing reg in insn 361
changing reg in insn 359
changing reg in insn 362
changing reg in insn 370
changing reg in insn 359
changing reg in insn 362
changing reg in insn 358
changing reg in insn 364
changing reg in insn 359
changing reg in insn 361
changing reg in insn 362
changing reg in insn 367
changing reg in insn 372
changing reg in insn 364
changing reg in insn 367
changing reg in insn 366
changing reg in insn 367
changing reg in insn 368
changing reg in insn 370
changing reg in insn 370
changing reg in insn 372
changing reg in insn 372
changing reg in insn 374
changing reg in insn 383
changing reg in insn 385
changing reg in insn 384
changing reg in insn 385
changing reg in insn 424
changing reg in insn 433
changing reg in insn 421
changing reg in insn 424
changing reg in insn 420
changing reg in insn 427
changing reg in insn 421
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 427
changing reg in insn 429
changing reg in insn 427
changing reg in insn 430
changing reg in insn 435
changing reg in insn 427
changing reg in insn 430
changing reg in insn 429
changing reg in insn 430
changing reg in insn 431
changing reg in insn 433
changing reg in insn 433
changing reg in insn 435
changing reg in insn 435
changing reg in insn 437
changing reg in insn 457
changing reg in insn 459
changing reg in insn 458
changing reg in insn 459
changing reg in insn 459
changing reg in insn 466
changing reg in insn 468
changing reg in insn 470
changing reg in insn 468
changing reg in insn 471
changing reg in insn 479
changing reg in insn 468
changing reg in insn 471
changing reg in insn 467
changing reg in insn 473
changing reg in insn 468
changing reg in insn 470
changing reg in insn 471
changing reg in insn 476
changing reg in insn 481
changing reg in insn 473
changing reg in insn 476
changing reg in insn 475
changing reg in insn 476
changing reg in insn 477
changing reg in insn 479
changing reg in insn 479
changing reg in insn 481
changing reg in insn 481
changing reg in insn 483
changing reg in insn 499
changing reg in insn 501
changing reg in insn 500
changing reg in insn 501
changing reg in insn 501
changing reg in insn 519
changing reg in insn 520
changing reg in insn 528
changing reg in insn 535
changing reg in insn 529
changing reg in insn 532
changing reg in insn 536
changing reg in insn 538
changing reg in insn 541
changing reg in insn 539
changing reg in insn 541
changing reg in insn 541
changing reg in insn 555
changing reg in insn 543
changing reg in insn 543
changing reg in insn 544
changing reg in insn 584
changing reg in insn 590
changing reg in insn 662
changing reg in insn 663
changing reg in insn 681
changing reg in insn 683
changing reg in insn 683
changing reg in insn 685
changing reg in insn 702
changing reg in insn 703
changing reg in insn 1891
changing reg in insn 707
changing reg in insn 720
changing reg in insn 724
changing reg in insn 724
changing reg in insn 732
changing reg in insn 733
changing reg in insn 2226
changing reg in insn 752
changing reg in insn 2227
changing reg in insn 764
changing reg in insn 773
changing reg in insn 775
changing reg in insn 1895
changing reg in insn 825
changing reg in insn 826
changing reg in insn 840
changing reg in insn 880
changing reg in insn 884
changing reg in insn 884
changing reg in insn 888
changing reg in insn 889
changing reg in insn 903
changing reg in insn 905
changing reg in insn 905
changing reg in insn 907
changing reg in insn 920
changing reg in insn 921
changing reg in insn 924
changing reg in insn 2223
changing reg in insn 2228
changing reg in insn 941
changing reg in insn 2229
changing reg in insn 953
changing reg in insn 962
changing reg in insn 964
changing reg in insn 1894
changing reg in insn 1026
changing reg in insn 1062
changing reg in insn 1060
changing reg in insn 26
changing reg in insn 1061
changing reg in insn 1062
changing reg in insn 1884
changing reg in insn 1064
changing reg in insn 1063
changing reg in insn 1884
changing reg in insn 1064
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1073
changing reg in insn 2204
changing reg in insn 28
changing reg in insn 1093
changing reg in insn 1078
changing reg in insn 1080
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1081
changing reg in insn 1082
changing reg in insn 1093
changing reg in insn 1094
changing reg in insn 1094
changing reg in insn 1096
changing reg in insn 1096
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1115
changing reg in insn 2202
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1123
changing reg in insn 1122
changing reg in insn 1122
changing reg in insn 1125
changing reg in insn 1123
changing reg in insn 1125
changing reg in insn 1122
changing reg in insn 1124
changing reg in insn 1124
changing reg in insn 1125
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1152
changing reg in insn 1151
changing reg in insn 1151
changing reg in insn 1154
changing reg in insn 1152
changing reg in insn 1154
changing reg in insn 1151
changing reg in insn 1153
changing reg in insn 1153
changing reg in insn 1154
changing reg in insn 1181
changing reg in insn 1182
changing reg in insn 1192
changing reg in insn 1194
changing reg in insn 1194
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1254
changing reg in insn 1254
changing reg in insn 1257
changing reg in insn 1257
changing reg in insn 1257
changing reg in insn 1312
changing reg in insn 1305
changing reg in insn 1284
changing reg in insn 1277
changing reg in insn 1259
changing reg in insn 1312
changing reg in insn 1305
changing reg in insn 1284
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1279
changing reg in insn 1280
changing reg in insn 1284
changing reg in insn 1293
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1294
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1306
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1312
changing reg in insn 1321
changing reg in insn 1313
changing reg in insn 1314
changing reg in insn 1314
changing reg in insn 1315
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1322
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1323
changing reg in insn 1324
changing reg in insn 1335
changing reg in insn 1337
changing reg in insn 1343
changing reg in insn 1353
changing reg in insn 1345
changing reg in insn 1352
changing reg in insn 1356
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1535
changing reg in insn 1537
changing reg in insn 1537
changing reg in insn 1537
changing reg in insn 1538
changing reg in insn 1536
changing reg in insn 1537
changing reg in insn 1543
changing reg in insn 1544
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1546
changing reg in insn 1546
changing reg in insn 1552
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1549
changing reg in insn 1550
changing reg in insn 1551
changing reg in insn 1551
changing reg in insn 1552
changing reg in insn 1552
changing reg in insn 1555
changing reg in insn 1555
changing reg in insn 1555
changing reg in insn 1636
changing reg in insn 1590
changing reg in insn 1832
changing reg in insn 1829
changing reg in insn 1572
changing reg in insn 1569
changing reg in insn 1557
changing reg in insn 1636
changing reg in insn 1590
changing reg in insn 1581
changing reg in insn 1581
changing reg in insn 1582
changing reg in insn 1582
changing reg in insn 1594
changing reg in insn 1586
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1587
changing reg in insn 1595
changing reg in insn 1591
changing reg in insn 1591
changing reg in insn 1592
changing reg in insn 1592
changing reg in insn 1596
changing reg in insn 1599
changing reg in insn 1610
changing reg in insn 1627
changing reg in insn 1627
changing reg in insn 1628
changing reg in insn 1628
changing reg in insn 1640
changing reg in insn 1632
changing reg in insn 1632
changing reg in insn 1633
changing reg in insn 1633
changing reg in insn 1641
changing reg in insn 1637
changing reg in insn 1637
changing reg in insn 1638
changing reg in insn 1638
changing reg in insn 1642
changing reg in insn 1645
changing reg in insn 1657
changing reg in insn 1677
changing reg in insn 1679
changing reg in insn 1679
changing reg in insn 1679
changing reg in insn 1680
changing reg in insn 1678
changing reg in insn 1679
changing reg in insn 1685
changing reg in insn 1686
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1688
changing reg in insn 1688
changing reg in insn 1694
changing reg in insn 1690
changing reg in insn 1691
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1693
changing reg in insn 1693
changing reg in insn 1694
changing reg in insn 1694
changing reg in insn 1697
changing reg in insn 1697
changing reg in insn 1697
changing reg in insn 1767
changing reg in insn 1724
changing reg in insn 1838
changing reg in insn 1835
changing reg in insn 1708
changing reg in insn 1705
changing reg in insn 1699
changing reg in insn 1767
changing reg in insn 1724
changing reg in insn 1717
changing reg in insn 1717
changing reg in insn 1727
changing reg in insn 1721
changing reg in insn 1721
changing reg in insn 1728
changing reg in insn 1725
changing reg in insn 1725
changing reg in insn 1729
changing reg in insn 1732
changing reg in insn 1743
changing reg in insn 1760
changing reg in insn 1760
changing reg in insn 1770
changing reg in insn 1764
changing reg in insn 1764
changing reg in insn 1771
changing reg in insn 1768
changing reg in insn 1768
changing reg in insn 1772
changing reg in insn 1775
changing reg in insn 1787
changing reg in insn 2262
changing reg in insn 1947
changing reg in insn 1945
changing reg in insn 2258
changing reg in insn 2266
changing reg in insn 2263
changing reg in insn 1946
changing reg in insn 1944
changing reg in insn 2259
changing reg in insn 2267
changing reg in insn 320
changing reg in insn 419
changing reg in insn 479
changing reg in insn 433
changing reg in insn 370
changing reg in insn 334
changing reg in insn 960
changing reg in insn 962
changing reg in insn 771
changing reg in insn 773
changing reg in insn 2035
changing reg in insn 80
changing reg in insn 2036
changing reg in insn 92
changing reg in insn 2037
changing reg in insn 108
changing reg in insn 2038
changing reg in insn 120
changing reg in insn 2039
changing reg in insn 140
changing reg in insn 2040
changing reg in insn 156
changing reg in insn 2041
changing reg in insn 172
changing reg in insn 2042
changing reg in insn 184
changing reg in insn 2043
changing reg in insn 204
changing reg in insn 2044
changing reg in insn 243
changing reg in insn 2045
changing reg in insn 2216
changing reg in insn 2046
changing reg in insn 282
changing reg in insn 2047
changing reg in insn 291
changing reg in insn 2048
changing reg in insn 312
changing reg in insn 2049
changing reg in insn 349
changing reg in insn 2050
changing reg in insn 385
changing reg in insn 2051
changing reg in insn 399
changing reg in insn 2052
changing reg in insn 406
changing reg in insn 2053
changing reg in insn 409
changing reg in insn 2054
changing reg in insn 443
changing reg in insn 2055
changing reg in insn 455
changing reg in insn 2056
changing reg in insn 487
changing reg in insn 2057
changing reg in insn 497
changing reg in insn 2058
changing reg in insn 519
changing reg in insn 2059
changing reg in insn 584
changing reg in insn 2060
changing reg in insn 589
changing reg in insn 2061
changing reg in insn 595
changing reg in insn 2062
changing reg in insn 617
changing reg in insn 2063
changing reg in insn 622
changing reg in insn 2064
changing reg in insn 630
changing reg in insn 2065
changing reg in insn 637
changing reg in insn 2066
changing reg in insn 649
changing reg in insn 2067
changing reg in insn 654
changing reg in insn 2068
changing reg in insn 661
changing reg in insn 2069
changing reg in insn 674
changing reg in insn 2070
changing reg in insn 694
changing reg in insn 2071
changing reg in insn 845
changing reg in insn 2072
changing reg in insn 848
changing reg in insn 2073
changing reg in insn 850
changing reg in insn 2074
changing reg in insn 864
changing reg in insn 2075
changing reg in insn 872
changing reg in insn 2076
changing reg in insn 916
changing reg in insn 2077
changing reg in insn 1031
changing reg in insn 2078
changing reg in insn 1034
changing reg in insn 2079
changing reg in insn 1036
changing reg in insn 2080
changing reg in insn 1055
changing reg in insn 2081
changing reg in insn 1135
changing reg in insn 2082
changing reg in insn 1164
changing reg in insn 2083
changing reg in insn 1175
changing reg in insn 2084
changing reg in insn 1206
changing reg in insn 2085
changing reg in insn 1343
changing reg in insn 2086
changing reg in insn 2087
changing reg in insn 1357
changing reg in insn 2088
changing reg in insn 1389
changing reg in insn 2089
changing reg in insn 1399
changing reg in insn 2090
changing reg in insn 1406
changing reg in insn 2091
changing reg in insn 1418
changing reg in insn 2092
changing reg in insn 1429
changing reg in insn 2093
changing reg in insn 1434
changing reg in insn 2094
changing reg in insn 1439
changing reg in insn 2095
changing reg in insn 1451
changing reg in insn 2096
changing reg in insn 1464
changing reg in insn 2097
changing reg in insn 1478
changing reg in insn 2098
changing reg in insn 1492
changing reg in insn 2099
changing reg in insn 1564
changing reg in insn 2100
changing reg in insn 2101
changing reg in insn 1611
changing reg in insn 2102
changing reg in insn 2103
changing reg in insn 1658
changing reg in insn 2104
changing reg in insn 2105
changing reg in insn 1744
changing reg in insn 2106
changing reg in insn 2107
changing reg in insn 1788
changing reg in insn 2108
changing reg in insn 1816
changing reg in insn 2109
changing reg in insn 1818
changing reg in insn 838
changing reg in insn 2224
changing reg in insn 839
changing reg in insn 2225
changing reg in insn 751
changing reg in insn 2226
changing reg in insn 763
changing reg in insn 2227
changing reg in insn 940
changing reg in insn 2228
changing reg in insn 952
changing reg in insn 2229
changing reg in insn 2236
changing reg in insn 2233
changing reg in insn 2230
changing reg in insn 1805
changing reg in insn 2239
changing reg in insn 1889
changing reg in insn 706
changing reg in insn 683
changing reg in insn 681
changing reg in insn 1890
changing reg in insn 724
changing reg in insn 724
changing reg in insn 720
changing reg in insn 884
changing reg in insn 884
changing reg in insn 880
changing reg in insn 924
changing reg in insn 905
changing reg in insn 903
changing reg in insn 2264
changing reg in insn 1789
changing reg in insn 1745
changing reg in insn 2265
changing reg in insn 1792
changing reg in insn 1796
changing reg in insn 1793
changing reg in insn 1792
changing reg in insn 1777
changing reg in insn 1756
changing reg in insn 1754
changing reg in insn 1733
changing reg in insn 1713
changing reg in insn 1711
changing reg in insn 1675
changing reg in insn 1671
changing reg in insn 2266
changing reg in insn 1724
changing reg in insn 1716
changing reg in insn 1720
changing reg in insn 2267
changing reg in insn 1767
changing reg in insn 1763
changing reg in insn 1759
changing reg in insn 2256
changing reg in insn 2260
changing reg in insn 1659
changing reg in insn 1612
changing reg in insn 2257
changing reg in insn 1662
changing reg in insn 2261
changing reg in insn 1666
changing reg in insn 1663
changing reg in insn 1662
changing reg in insn 1647
changing reg in insn 1623
changing reg in insn 1621
changing reg in insn 1600
changing reg in insn 1577
changing reg in insn 1575
changing reg in insn 1533
changing reg in insn 1529
changing reg in insn 2258
changing reg in insn 2262
changing reg in insn 1590
changing reg in insn 1580
changing reg in insn 1585
changing reg in insn 2259
changing reg in insn 2263
changing reg in insn 1636
changing reg in insn 1631
changing reg in insn 1626
changing reg in insn 2249
changing reg in insn 1265
changing reg in insn 1268
changing reg in insn 2250
changing reg in insn 2254
changing reg in insn 1358
changing reg in insn 2252
changing reg in insn 1364
changing reg in insn 1249
changing reg in insn 1365
changing reg in insn 1364
changing reg in insn 2253
changing reg in insn 1254
changing reg in insn 2246
changing reg in insn 2243
changing reg in insn 2240
changing reg in insn 2247
changing reg in insn 2244
changing reg in insn 2242
changing reg in insn 2248
changing reg in insn 999
changing reg in insn 2245
changing reg in insn 999
changing reg in insn 999
changing reg in insn 964
changing reg in insn 2241
changing reg in insn 966
changing reg in insn 2237
changing reg in insn 2234
changing reg in insn 2231
changing reg in insn 2238
changing reg in insn 810
changing reg in insn 2235
changing reg in insn 810
changing reg in insn 810
changing reg in insn 2239
changing reg in insn 2236
changing reg in insn 2233
changing reg in insn 775
changing reg in insn 2232
changing reg in insn 777
changing reg in insn 322
changing reg in insn 328
changing reg in insn 359
changing reg in insn 364
changing reg in insn 421
changing reg in insn 427
changing reg in insn 468
changing reg in insn 473
deleting insn with uid = 2035.
deleting insn with uid = 2036.
deleting insn with uid = 2275.
deleting insn with uid = 2433.
deleting insn with uid = 2276.
deleting insn with uid = 2037.
deleting insn with uid = 2277.
deleting insn with uid = 2038.
deleting insn with uid = 2279.
deleting insn with uid = 2039.
deleting insn with uid = 2280.
deleting insn with uid = 2040.
deleting insn with uid = 2282.
deleting insn with uid = 2436.
deleting insn with uid = 2283.
deleting insn with uid = 2041.
deleting insn with uid = 2284.
deleting insn with uid = 2042.
deleting insn with uid = 2286.
deleting insn with uid = 2043.
deleting insn with uid = 2287.
deleting insn with uid = 2044.
deleting insn with uid = 2045.
deleting insn with uid = 2046.
deleting insn with uid = 282.
deleting insn with uid = 2047.
deleting insn with uid = 291.
deleting insn with uid = 2048.
deleting insn with uid = 2291.
deleting insn with uid = 2292.
deleting insn with uid = 2049.
deleting insn with uid = 2439.
deleting insn with uid = 2440.
deleting insn with uid = 2297.
deleting insn with uid = 2298.
deleting insn with uid = 2050.
deleting insn with uid = 2442.
deleting insn with uid = 2443.
deleting insn with uid = 2051.
deleting insn with uid = 406.
deleting insn with uid = 2053.
deleting insn with uid = 2306.
deleting insn with uid = 2307.
deleting insn with uid = 2054.
deleting insn with uid = 2055.
deleting insn with uid = 2446.
deleting insn with uid = 2447.
deleting insn with uid = 2314.
deleting insn with uid = 2315.
deleting insn with uid = 2056.
deleting insn with uid = 2057.
deleting insn with uid = 2449.
deleting insn with uid = 2450.
deleting insn with uid = 2058.
deleting insn with uid = 519.
deleting insn with uid = 2319.
deleting insn with uid = 2320.
deleting insn with uid = 2321.
deleting insn with uid = 2322.
deleting insn with uid = 2326.
deleting insn with uid = 2230.
deleting insn with uid = 2059.
deleting insn with uid = 589.
deleting insn with uid = 2061.
deleting insn with uid = 2062.
deleting insn with uid = 2063.
deleting insn with uid = 630.
deleting insn with uid = 2065.
deleting insn with uid = 2066.
deleting insn with uid = 2067.
deleting insn with uid = 2068.
deleting insn with uid = 2069.
deleting insn with uid = 2329.
deleting insn with uid = 2453.
deleting insn with uid = 2330.
deleting insn with uid = 2331.
deleting insn with uid = 2070.
deleting insn with uid = 2335.
deleting insn with uid = 2343.
deleting insn with uid = 2226.
deleting insn with uid = 2231.
deleting insn with uid = 2232.
deleting insn with uid = 2233.
deleting insn with uid = 782.
deleting insn with uid = 2234.
deleting insn with uid = 2235.
deleting insn with uid = 2236.
deleting insn with uid = 2237.
deleting insn with uid = 2238.
deleting insn with uid = 2239.
deleting insn with uid = 2225.
deleting insn with uid = 2224.
deleting insn with uid = 2348.
deleting insn with uid = 2071.
deleting insn with uid = 848.
deleting insn with uid = 2073.
deleting insn with uid = 2074.
deleting insn with uid = 2075.
deleting insn with uid = 2353.
deleting insn with uid = 2354.
deleting insn with uid = 2455.
deleting insn with uid = 2355.
deleting insn with uid = 2356.
deleting insn with uid = 2076.
deleting insn with uid = 2359.
deleting insn with uid = 2228.
deleting insn with uid = 2240.
deleting insn with uid = 2241.
deleting insn with uid = 2242.
deleting insn with uid = 2243.
deleting insn with uid = 2244.
deleting insn with uid = 2245.
deleting insn with uid = 2246.
deleting insn with uid = 2247.
deleting insn with uid = 2248.
deleting insn with uid = 2364.
deleting insn with uid = 2077.
deleting insn with uid = 1034.
deleting insn with uid = 2079.
deleting insn with uid = 2080.
deleting insn with uid = 26.
deleting insn with uid = 2369.
deleting insn with uid = 2371.
deleting insn with uid = 2081.
deleting insn with uid = 2082.
deleting insn with uid = 2083.
deleting insn with uid = 2084.
deleting insn with uid = 2249.
deleting insn with uid = 2250.
deleting insn with uid = 2252.
deleting insn with uid = 2457.
deleting insn with uid = 2458.
deleting insn with uid = 2085.
deleting insn with uid = 2086.
deleting insn with uid = 1356.
deleting insn with uid = 1357.
deleting insn with uid = 2254.
deleting insn with uid = 2088.
deleting insn with uid = 1399.
deleting insn with uid = 2090.
deleting insn with uid = 2091.
deleting insn with uid = 2093.
deleting insn with uid = 2094.
deleting insn with uid = 2095.
deleting insn with uid = 2096.
deleting insn with uid = 2097.
deleting insn with uid = 2098.
deleting insn with uid = 2256.
deleting insn with uid = 2257.
deleting insn with uid = 2258.
deleting insn with uid = 2259.
deleting insn with uid = 2099.
deleting insn with uid = 2100.
deleting insn with uid = 1611.
deleting insn with uid = 2102.
deleting insn with uid = 1658.
deleting insn with uid = 2260.
deleting insn with uid = 2261.
deleting insn with uid = 2262.
deleting insn with uid = 2263.
deleting insn with uid = 2264.
deleting insn with uid = 2265.
deleting insn with uid = 2266.
deleting insn with uid = 2267.
deleting insn with uid = 2104.
deleting insn with uid = 1744.
deleting insn with uid = 2106.
deleting insn with uid = 1788.
deleting insn with uid = 2108.
deleting insn with uid = 2109.


try_optimize_cfg iteration 1

Simplifying condjump 777 around jump 2147
deleting insn with uid = 2147.
deleting insn with uid = 789.
deleting insn with uid = 788.
deleting insn with uid = 787.
deleting insn with uid = 786.
deleting insn with uid = 785.
deleting insn with uid = 784.
deleting insn with uid = 783.
deleting insn with uid = 781.
deleting insn with uid = 780.
deleting insn with uid = 779.
deleting block 51
Forwarding edge 79->80 to 89 failed.
Forwarding edge 93->94 to 104 failed.
Forwarding edge 98->99 to 100 failed.
Deleting fallthru block 99.
deleting block 99
Forwarding edge 101->102 to 93 failed.


try_optimize_cfg iteration 2

Forwarding edge 79->80 to 89 failed.
Forwarding edge 93->94 to 104 failed.
Forwarding edge 101->102 to 93 failed.


try_optimize_cfg iteration 1

Forwarding edge 79->80 to 89 failed.
Forwarding edge 93->94 to 104 failed.
Forwarding edge 101->102 to 93 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 170.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 305.
verify found no changes in insn with uid = 344.
verify found no changes in insn with uid = 380.
verify found no changes in insn with uid = 392.
verify found no changes in insn with uid = 405.
verify found no changes in insn with uid = 408.
verify found no changes in insn with uid = 442.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 486.
verify found no changes in insn with uid = 496.
verify found no changes in insn with uid = 516.
verify found no changes in insn with uid = 579.
verify found no changes in insn with uid = 583.
verify found no changes in insn with uid = 587.
verify found no changes in insn with uid = 591.
verify found no changes in insn with uid = 594.
verify found no changes in insn with uid = 608.
verify found no changes in insn with uid = 612.
verify found no changes in insn with uid = 616.
verify found no changes in insn with uid = 621.
verify found no changes in insn with uid = 629.
verify found no changes in insn with uid = 634.
verify found no changes in insn with uid = 645.
verify found no changes in insn with uid = 648.
verify found no changes in insn with uid = 653.
verify found no changes in insn with uid = 660.
verify found no changes in insn with uid = 671.
verify found no changes in insn with uid = 686.
verify found no changes in insn with uid = 690.
verify found no changes in insn with uid = 693.
verify found no changes in insn with uid = 843.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 849.
verify found no changes in insn with uid = 861.
verify found no changes in insn with uid = 869.
verify found no changes in insn with uid = 908.
verify found no changes in insn with uid = 912.
verify found no changes in insn with uid = 915.
verify found no changes in insn with uid = 1029.
verify found no changes in insn with uid = 1032.
verify found no changes in insn with uid = 1035.
verify found no changes in insn with uid = 1054.
verify found no changes in insn with uid = 1132.
verify found no changes in insn with uid = 1161.
verify found no changes in insn with uid = 1172.
verify found no changes in insn with uid = 1197.
verify found no changes in insn with uid = 1201.
verify found no changes in insn with uid = 1205.
verify found no changes in insn with uid = 1338.
verify found no changes in insn with uid = 1342.
verify found no changes in insn with uid = 1350.
verify found no changes in insn with uid = 1354.
verify found no changes in insn with uid = 1359.
verify found no changes in insn with uid = 1380.
verify found no changes in insn with uid = 1384.
verify found no changes in insn with uid = 1388.
verify found no changes in insn with uid = 1398.
verify found no changes in insn with uid = 1403.
verify found no changes in insn with uid = 1414.
verify found no changes in insn with uid = 1417.
verify found no changes in insn with uid = 1428.
verify found no changes in insn with uid = 1433.
verify found no changes in insn with uid = 1438.
verify found no changes in insn with uid = 1443.
verify found no changes in insn with uid = 1447.
verify found no changes in insn with uid = 1450.
verify found no changes in insn with uid = 1456.
verify found no changes in insn with uid = 1460.
verify found no changes in insn with uid = 1463.
verify found no changes in insn with uid = 1470.
verify found no changes in insn with uid = 1474.
verify found no changes in insn with uid = 1477.
verify found no changes in insn with uid = 1484.
verify found no changes in insn with uid = 1488.
verify found no changes in insn with uid = 1491.
verify found no changes in insn with uid = 1563.
verify found no changes in insn with uid = 1597.
verify found no changes in insn with uid = 1601.
verify found no changes in insn with uid = 1605.
verify found no changes in insn with uid = 1608.
verify found no changes in insn with uid = 1613.
verify found no changes in insn with uid = 1643.
verify found no changes in insn with uid = 1648.
verify found no changes in insn with uid = 1652.
verify found no changes in insn with uid = 1655.
verify found no changes in insn with uid = 1660.
verify found no changes in insn with uid = 1730.
verify found no changes in insn with uid = 1734.
verify found no changes in insn with uid = 1738.
verify found no changes in insn with uid = 1741.
verify found no changes in insn with uid = 1746.
verify found no changes in insn with uid = 1773.
verify found no changes in insn with uid = 1778.
verify found no changes in insn with uid = 1782.
verify found no changes in insn with uid = 1785.
verify found no changes in insn with uid = 1790.
verify found no changes in insn with uid = 1807.
verify found no changes in insn with uid = 1811.
verify found no changes in insn with uid = 1814.
verify found no changes in insn with uid = 1817.
verify found no changes in insn with uid = 1827.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 148 count 119 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 148 count 116 (  1.1)


drawMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={193d,168u} r1={217d,95u} r2={200d,83u} r3={260d,167u,7e} r4={33d,60u,5e} r5={17d,42u,1e} r6={11d,22u} r7={12d,20u} r8={6d,32u} r9={3d,3u} r10={4d,12u,4e} r11={5d,12u,4e} r12={250d} r13={1d,271u} r14={126d} r15={125d} r16={148d,41u} r17={130d,4u} r18={126d} r19={126d} r20={126d} r21={126d} r22={126d} r23={126d} r24={126d} r25={126d} r26={126d} r27={126d} r28={136d,9u} r29={156d,40u,2e} r30={167d,46u} r31={206d,86u,1e} r32={17d,39u,4e} r33={23d,49u,3e} r34={6d,9u,2e} r35={12d,31u,2e} r36={7d,28u} r37={7d,21u} r38={2d,8u,1e} r39={8d,21u,2e} r40={4d,12u,1e} r41={2d,6u} r42={4d,6u,1e} r43={5d,10u} r44={3d,8u} r48={125d} r49={125d} r50={125d} r51={125d} r52={125d} r53={125d} r54={125d} r55={125d} r56={125d} r57={125d} r58={125d} r59={125d} r60={125d} r61={125d} r62={125d} r63={125d} r64={125d} r65={125d} r66={125d} r67={125d} r68={125d} r69={125d} r70={125d} r71={125d} r72={125d} r73={125d} r74={125d} r75={125d} r76={125d} r77={125d} r78={125d} r79={125d} r80={125d} r81={125d} r82={125d} r83={125d} r84={125d} r85={125d} r86={125d} r87={125d} r88={125d} r89={125d} r90={125d} r91={125d} r92={125d} r93={125d} r94={125d} r95={125d} r96={125d} r97={125d} r98={125d} r99={125d} r100={174d,33u} r101={135d,10u} r104={125d} r105={125d} r106={125d} r355={2e} r356={2e} r967={1e} r971={4e} r972={4e} 
;;    total ref usage 12507{10950d,1504u,53e} in 1399{1274 regular + 125 call} insns.
(note 1 0 35 NOTE_INSN_DELETED)
(note 35 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 35 74 2 NOTE_INSN_FUNCTION_BEG)
(note 74 3 37 2 NOTE_INSN_DELETED)
(debug_insn 37 74 62 2 (debug_marker) "../System/ray_funkcije.c":72:2 -1
     (nil))
(note 62 37 67 2 NOTE_INSN_DELETED)
(note 67 62 39 2 NOTE_INSN_DELETED)
(insn 39 67 40 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/ray_funkcije.c":72:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 40 39 41 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 0000000005e0e800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":72:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 0000000005e0e800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 41 40 42 2 (debug_marker) "../System/ray_funkcije.c":73:2 -1
     (nil))
(debug_insn 42 41 43 2 (var_location:SF dx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:8 -1
     (nil))
(debug_insn 43 42 44 2 (var_location:SF dy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:16 -1
     (nil))
(debug_insn 44 43 45 2 (var_location:SF d1 (const_double:SF 1.0e+4 [0x0.9c4p+14])) "../System/ray_funkcije.c":73:24 -1
     (nil))
(debug_insn 45 44 46 2 (var_location:SF d2 (const_double:SF 1.0e+4 [0x0.9c4p+14])) "../System/ray_funkcije.c":73:36 -1
     (nil))
(debug_insn 46 45 47 2 (var_location:SF rvx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:48 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:SF rvy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:57 -1
     (nil))
(debug_insn 48 47 49 2 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:66 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:SF newAngle (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:4 -1
     (nil))
(debug_insn 50 49 51 2 (var_location:SF rhx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:18 -1
     (nil))
(debug_insn 51 50 52 2 (var_location:SF rhy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:27 -1
     (nil))
(debug_insn 52 51 53 2 (var_location:SF d (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:36 -1
     (nil))
(debug_insn 53 52 54 2 (var_location:SF rx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:43 -1
     (nil))
(debug_insn 54 53 55 2 (var_location:SF ry (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:51 -1
     (nil))
(debug_insn 55 54 56 2 (debug_marker) "../System/ray_funkcije.c":75:2 -1
     (nil))
(debug_insn 56 55 57 2 (var_location:SI wx (const_int 0 [0])) "../System/ray_funkcije.c":75:6 -1
     (nil))
(debug_insn 57 56 58 2 (var_location:SI wy (const_int 0 [0])) "../System/ray_funkcije.c":75:14 -1
     (nil))
(debug_insn 58 57 59 2 (debug_marker) "../System/ray_funkcije.c":76:2 -1
     (nil))
(debug_insn 59 58 60 2 (debug_marker) "../System/ray_funkcije.c":77:2 -1
     (nil))
(call_insn 60 59 61 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000006cc2300 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":77:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000006cc2300 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 61 60 2270 2 (debug_marker) "../System/ray_funkcije.c":79:2 -1
     (nil))
(insn 2270 61 63 2 (set (reg:SI 3 r3 [1109])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":79:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 63 2270 2271 2 (set (reg:SF 30 s14 [orig:481 px ] [481])
        (mem/c:SF (reg:SI 3 r3 [1109]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":79:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 2271 63 68 2 (set (reg:SI 3 r3 [1110])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":80:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 68 2271 72 2 (set (reg:SF 31 s15 [orig:483 py ] [483])
        (mem/c:SF (reg:SI 3 r3 [1110]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":80:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 72 68 64 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":83:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 64 72 2272 2 (set (reg/v:SI 30 s14 [orig:355 ipx ] [355])
        (fix:SI (fix:SF (reg:SF 30 s14 [orig:481 px ] [481])))) "../System/ray_funkcije.c":79:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2272 64 65 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])
        (reg/v:SI 30 s14 [orig:355 ipx ] [355])) "../System/ray_funkcije.c":79:6 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 65 2272 66 2 (var_location:SI ipx (mem/c:SI (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":79:6 -1
     (nil))
(debug_insn 66 65 69 2 (debug_marker) "../System/ray_funkcije.c":80:2 -1
     (nil))
(insn 69 66 2273 2 (set (reg/v:SI 31 s15 [orig:356 ipy ] [356])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:483 py ] [483])))) "../System/ray_funkcije.c":80:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2273 69 70 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])
        (reg/v:SI 31 s15 [orig:356 ipy ] [356])) "../System/ray_funkcije.c":80:6 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 70 2273 71 2 (var_location:SI ipy (mem/c:SI (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":80:6 -1
     (nil))
(debug_insn 71 70 73 2 (debug_marker) "../System/ray_funkcije.c":83:2 -1
     (nil))
(call_insn 73 71 80 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":83:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 80 73 81 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [996])
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":83:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 81 80 82 2 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "../System/ray_funkcije.c":83:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 145)
(note 82 81 86 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 86 82 83 3 NOTE_INSN_DELETED)
(debug_insn 83 86 84 3 (debug_marker) "../System/ray_funkcije.c":84:3 -1
     (nil))
(insn 84 83 85 3 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":84:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 85 84 92 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":84:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 92 85 93 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [997])
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":84:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 93 92 1957 3 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2110)
            (pc))) "../System/ray_funkcije.c":84:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 2110)
(note 1957 93 1942 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 1942 1957 2274 4 (set (reg/f:SI 3 r3 [967])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 2274 1942 2111 4 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])
        (reg/f:SI 3 r3 [967])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 2111 2274 2112 4 (set (pc)
        (label_ref 109)) 284 {*arm_jump}
     (nil)
 -> 109)
(barrier 2112 2111 2110)
(code_label 2110 2112 94 5 115 (nil) [1 uses])
(note 94 2110 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 107 94 95 5 NOTE_INSN_DELETED)
(debug_insn 95 107 96 5 (debug_marker) "../System/ray_funkcije.c":85:4 -1
     (nil))
(insn 96 95 2434 5 (set (reg/f:SI 4 r4 [967])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) "../System/ray_funkcije.c":85:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 2434 96 98 5 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])
        (reg/f:SI 4 r4 [967])) "../System/ray_funkcije.c":85:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 98 2434 99 5 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":85:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 99 98 101 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 101 99 103 5 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":85:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 103 101 106 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 106 103 108 5 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 108 106 109 5 (set (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])
        (reg:SF 0 r0 [998])) "../System/ray_funkcije.c":85:10 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 109 108 110 6 22 (nil) [1 uses])
(note 110 109 114 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 114 110 111 6 NOTE_INSN_DELETED)
(debug_insn 111 114 112 6 (debug_marker) "../System/ray_funkcije.c":86:3 -1
     (nil))
(insn 112 111 113 6 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":86:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 113 112 120 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":86:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 120 113 121 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [999])
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":86:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 6 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "../System/ray_funkcije.c":86:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 127)
(note 122 121 2278 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 2278 122 124 7 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":94:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 124 2278 2113 7 (set (reg:SF 32 s16 [orig:125 _13 ] [125])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":94:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(jump_insn 2113 124 2114 7 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2114 2113 127)
(code_label 127 2114 128 8 23 (nil) [1 uses])
(note 128 127 129 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 129 128 2435 8 (debug_marker) "../System/ray_funkcije.c":87:4 -1
     (nil))
(insn 2435 129 131 8 (set (reg/f:SI 4 r4 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":87:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 131 2435 132 8 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 132 131 134 8 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 134 132 136 8 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":87:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 136 134 139 8 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 139 136 140 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 140 139 142 8 (set (reg:SF 32 s16 [orig:125 _13 ] [125])
        (reg:SF 0 r0 [1000])) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (nil))
(insn 142 140 2115 8 (set (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 2115 142 2116 8 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2116 2115 145)
(code_label 145 2116 146 9 21 (nil) [1 uses])
(note 146 145 150 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 150 146 147 9 NOTE_INSN_DELETED)
(debug_insn 147 150 148 9 (debug_marker) "../System/ray_funkcije.c":89:3 -1
     (nil))
(insn 148 147 149 9 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":89:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 149 148 156 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":89:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 156 149 157 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [1001])
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":89:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 157 156 1959 9 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2117)
            (pc))) "../System/ray_funkcije.c":89:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 2117)
(note 1959 157 1943 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 1943 1959 2281 10 (set (reg/f:SI 3 r3 [967])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 2281 1943 2118 10 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])
        (reg/f:SI 3 r3 [967])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 2118 2281 2119 10 (set (pc)
        (label_ref 173)) 284 {*arm_jump}
     (nil)
 -> 173)
(barrier 2119 2118 2117)
(code_label 2117 2119 158 11 116 (nil) [1 uses])
(note 158 2117 171 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 171 158 159 11 NOTE_INSN_DELETED)
(debug_insn 159 171 160 11 (debug_marker) "../System/ray_funkcije.c":90:4 -1
     (nil))
(insn 160 159 2437 11 (set (reg/f:SI 4 r4 [967])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) "../System/ray_funkcije.c":90:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 2437 160 162 11 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])
        (reg/f:SI 4 r4 [967])) "../System/ray_funkcije.c":90:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 162 2437 163 11 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":90:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 163 162 165 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 165 163 167 11 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":90:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 167 165 170 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 170 167 172 11 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 172 170 173 11 (set (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])
        (reg:SF 0 r0 [1002])) "../System/ray_funkcije.c":90:10 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 173 172 174 12 25 (nil) [1 uses])
(note 174 173 178 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 178 174 175 12 NOTE_INSN_DELETED)
(debug_insn 175 178 176 12 (debug_marker) "../System/ray_funkcije.c":91:3 -1
     (nil))
(insn 176 175 177 12 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":91:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 177 176 184 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":91:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 184 177 185 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [1003])
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":91:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 185 184 186 12 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) "../System/ray_funkcije.c":91:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 191)
(note 186 185 2285 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 2285 186 188 13 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":94:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 188 2285 2120 13 (set (reg:SF 32 s16 [orig:125 _13 ] [125])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":94:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(jump_insn 2120 188 2121 13 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2121 2120 191)
(code_label 191 2121 192 14 26 (nil) [1 uses])
(note 192 191 193 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 193 192 2438 14 (debug_marker) "../System/ray_funkcije.c":92:4 -1
     (nil))
(insn 2438 193 195 14 (set (reg/f:SI 4 r4 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":92:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 195 2438 196 14 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 196 195 198 14 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 198 196 200 14 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":92:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 200 198 203 14 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 203 200 204 14 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 204 203 206 14 (set (reg:SF 32 s16 [orig:125 _13 ] [125])
        (reg:SF 0 r0 [1004])) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (nil))
(insn 206 204 207 14 (set (mem/c:SF (reg/f:SI 4 r4 [967]) [1 angle+0 S4 A32])
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 207 206 208 15 24 (nil) [3 uses])
(note 208 207 209 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 209 208 210 15 (debug_marker) "../System/ray_funkcije.c":94:2 -1
     (nil))
(insn 210 209 2218 15 (set (reg:SF 4 r4 [519])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":94:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2218 210 2219 15 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:125 _13 ] [125])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":94:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2219 2218 212 15 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":94:5 817 {*movcc_vfp}
     (nil))
(jump_insn 212 2219 216 15 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2122)
            (pc))) "../System/ray_funkcije.c":94:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 2122)
(note 216 212 217 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 217 216 219 16 (debug_marker) "../System/ray_funkcije.c":95:3 -1
     (nil))
(insn 219 217 2288 16 (set (reg:SF 3 r3 [521])
        (const_double:SF 6.28318023681640625e+0 [0x0.c90fdp+3])) "../System/ray_funkcije.c":95:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.28318023681640625e+0 [0x0.c90fdp+3])
        (nil)))
(insn 2288 219 220 16 (set (reg/f:SI 2 r2 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":95:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 220 2288 221 16 (set (mem/c:SF (reg/f:SI 2 r2 [967]) [1 angle+0 S4 A32])
        (reg:SF 3 r3 [521])) "../System/ray_funkcije.c":95:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 221 220 222 16 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 222 221 223 16 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 223 222 224 16 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 224 223 225 16 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 225 224 226 16 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 226 225 227 16 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(debug_insn 227 226 228 16 (var_location:SI fCheckX (const_int 5 [0x5])) -1
     (nil))
(debug_insn 228 227 9 16 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 9 228 10 16 (set (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(insn 10 9 2123 16 (set (reg/v:SI 5 r5 [orig:343 fCheckY ] [343])
        (const_int -5 [0xfffffffffffffffb])) "../System/ray_funkcije.c":107:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -5 [0xfffffffffffffffb])
        (nil)))
(jump_insn 2123 10 2124 16 (set (pc)
        (label_ref 300)) 284 {*arm_jump}
     (nil)
 -> 300)
(barrier 2124 2123 2122)
(code_label 2122 2124 232 17 117 (nil) [1 uses])
(note 232 2122 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 241 232 242 17 NOTE_INSN_DELETED)
(note 242 241 233 17 NOTE_INSN_DELETED)
(debug_insn 233 242 234 17 (debug_marker) "../System/ray_funkcije.c":96:7 -1
     (nil))
(insn 234 233 235 17 (set (reg:SF 0 r0)
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":96:17 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 235 234 238 17 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":96:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 238 235 240 17 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":96:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 240 238 243 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":96:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 243 240 247 17 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1005])
                        (const_int 0 [0]))
                    (label_ref:SI 2125)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":96:10 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 2125)
(note 247 243 248 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 248 247 2289 18 (debug_marker) "../System/ray_funkcije.c":97:3 -1
     (nil))
(insn 2289 248 251 18 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":97:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 251 2289 252 18 (set (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])
        (reg:SF 4 r4 [519])) "../System/ray_funkcije.c":97:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 252 251 253 18 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 253 252 254 18 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 254 253 255 18 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 255 254 256 18 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 256 255 257 18 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 257 256 258 18 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(debug_insn 258 257 259 18 (var_location:SI fCheckX (const_int 5 [0x5])) -1
     (nil))
(debug_insn 259 258 6 18 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 6 259 7 18 (set (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(insn 7 6 2126 18 (set (reg/v:SI 5 r5 [orig:343 fCheckY ] [343])
        (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(jump_insn 2126 7 2127 18 (set (pc)
        (label_ref 300)) 284 {*arm_jump}
     (nil)
 -> 300)
(barrier 2127 2126 2125)
(code_label 2125 2127 263 19 118 (nil) [1 uses])
(note 263 2125 272 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 272 263 264 19 NOTE_INSN_DELETED)
(debug_insn 264 272 265 19 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 265 264 266 19 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 266 265 267 19 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 267 266 268 19 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 268 267 269 19 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 269 268 270 19 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(insn 270 269 271 19 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":102:6 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 271 270 2216 19 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":102:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2216 271 2217 19 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 16 s0 [1006])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":102:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2217 2216 275 19 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":102:5 817 {*movcc_vfp}
     (nil))
(jump_insn 275 2217 279 19 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2128)
            (pc))) "../System/ray_funkcije.c":102:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 4 (nil))
 -> 2128)
(note 279 275 280 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 20 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 281 280 4 20 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":106:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 4 281 2129 20 (set (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])
        (const_int -5 [0xfffffffffffffffb])) "../System/ray_funkcije.c":103:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -5 [0xfffffffffffffffb])
        (nil)))
(jump_insn 2129 4 2130 20 (set (pc)
        (label_ref 292)) 284 {*arm_jump}
     (nil)
 -> 292)
(barrier 2130 2129 2128)
(code_label 2128 2130 286 21 119 (nil) [1 uses])
(note 286 2128 287 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 287 286 288 21 (debug_marker) "../System/ray_funkcije.c":105:3 -1
     (nil))
(debug_insn 288 287 289 21 (var_location:SI fCheckX (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 -1
     (nil))
(insn 289 288 290 21 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:125 _13 ] [125])) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 290 289 5 21 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":106:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 5 290 292 21 (set (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 292 5 293 22 34 (nil) [1 uses])
(note 293 292 294 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 294 293 295 22 (var_location:SI fCheckX (reg/v:SI 4 r4 [orig:342 fCheckX ] [342])) -1
     (nil))
(debug_insn 295 294 2214 22 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 2214 295 2215 22 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 16 s0 [orig:408 _739 ] [408])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":109:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2215 2214 1981 22 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":109:11 817 {*movcc_vfp}
     (nil))
(insn 1981 2215 300 22 (set (reg/v:SI 5 r5 [orig:343 fCheckY ] [343])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":109:11 986 {*thumb2_movsicc_insn}
     (nil))
(code_label 300 1981 301 23 29 (nil) [2 uses])
(note 301 300 306 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(note 306 301 302 23 NOTE_INSN_DELETED)
(debug_insn 302 306 303 23 (var_location:SI fCheckY (reg/v:SI 5 r5 [orig:343 fCheckY ] [343])) -1
     (nil))
(debug_insn 303 302 304 23 (debug_marker) "../System/ray_funkcije.c":111:2 -1
     (nil))
(insn 304 303 305 23 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":111:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 305 304 312 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":111:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 312 305 313 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [1009])
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":111:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 313 312 318 23 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 388)
            (pc))) "../System/ray_funkcije.c":111:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 388)
(note 318 313 323 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 323 318 329 24 NOTE_INSN_DELETED)
(note 329 323 333 24 NOTE_INSN_DELETED)
(note 333 329 337 24 NOTE_INSN_DELETED)
(note 337 333 319 24 NOTE_INSN_DELETED)
(debug_insn 319 337 321 24 (debug_marker) "../System/ray_funkcije.c":112:3 -1
     (nil))
(insn 321 319 2290 24 (set (reg:SI 2 r2 [535])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":112:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 2290 321 326 24 (set (reg/v:SI 3 r3 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":112:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 326 2290 320 24 (set (reg:SI 3 r3 [538])
        (plus:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (reg/v:SI 4 r4 [orig:342 fCheckX ] [342]))) "../System/ray_funkcije.c":112:26 7 {*arm_addsi3}
     (nil))
(insn 320 326 2441 24 (set (reg/f:SI 6 r6 [973])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":112:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 2441 320 322 24 (set (reg/v:SI 0 r0 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":112:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 322 2441 328 24 (parallel [
            (set (reg:SI 1 r1 [534])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 0 r0 [orig:356 ipy ] [356]))
                            (sign_extend:DI (reg:SI 2 r2 [535])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 7 r7 [1101]))
        ]) "../System/ray_funkcije.c":112:15 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 328 322 330 24 (parallel [
            (set (reg:SI 2 r2 [540])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [538]))
                            (sign_extend:DI (reg:SI 2 r2 [535])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 7 r7 [1102]))
        ]) "../System/ray_funkcije.c":112:37 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [538]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 330 328 331 24 (set (reg:SI 3 r3 [543])
        (ashiftrt:SI (reg:SI 3 r3 [538])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":112:37 147 {*arm_shiftsi3}
     (nil))
(insn 331 330 324 24 (set (reg:SI 3 r3 [539])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [540])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [543]))) "../System/ray_funkcije.c":112:37 319 {*rsb_shiftsi}
     (nil))
(insn 324 331 325 24 (set (reg:SI 2 r2 [537])
        (ashiftrt:SI (reg/v:SI 0 r0 [orig:356 ipy ] [356])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":112:15 147 {*arm_shiftsi3}
     (nil))
(insn 325 324 332 24 (set (reg:SI 2 r2 [533])
        (minus:SI (ashiftrt:SI (reg:SI 1 r1 [534])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [537]))) "../System/ray_funkcije.c":112:15 319 {*rsb_shiftsi}
     (nil))
(insn 332 325 334 24 (set (reg:SI 1 r1 [545])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":112:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 334 332 336 24 (set (reg:SI 2 r2 [546])
        (plus:SI (mult:SI (reg:SI 1 r1 [545])
                (reg:SI 2 r2 [533]))
            (reg/f:SI 6 r6 [973]))) "../System/ray_funkcije.c":112:20 57 {*mla}
     (nil))
(insn 336 334 338 24 (set (reg:SI 3 r3 [orig:548 map[_32][_34] ] [548])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [546])
                    (reg:SI 3 r3 [539])) [0 map[_32][_34]+0 S1 A8]))) "../System/ray_funkcije.c":112:6 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 338 336 339 24 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:548 map[_32][_34] ] [548])
                        (const_int 0 [0]))
                    (label_ref 352)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":112:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 352)
(note 339 338 342 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 342 339 345 25 NOTE_INSN_DELETED)
(note 345 342 340 25 NOTE_INSN_DELETED)
(debug_insn 340 345 2293 25 (debug_marker) "../System/ray_funkcije.c":113:4 -1
     (nil))
(insn 2293 340 343 25 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":113:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 343 2293 344 25 (set (reg:SF 16 s0)
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":113:25 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 344 343 2294 25 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":113:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2294 344 348 25 (set (reg:SI 3 r3 [1133])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":113:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 348 2294 347 25 (set (reg:SF 31 s15 [orig:553 px ] [553])
        (mem/c:SF (reg:SI 3 r3 [1133]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 347 348 349 25 (set (reg:SF 30 s14 [552])
        (const_double:SF 2.0e+0 [0x0.8p+2])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 349 347 2295 25 (set (reg:SF 31 s15 [orig:146 _40 ] [146])
        (fma:SF (reg:SF 16 s0 [1010])
            (reg:SF 30 s14 [552])
            (reg:SF 31 s15 [orig:553 px ] [553]))) "../System/ray_funkcije.c":113:7 788 {fmasf4}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (nil)))
(note 2295 349 351 25 NOTE_INSN_DELETED)
(insn 351 2295 352 25 (set (mem/c:SF (reg:SI 3 r3 [1134]) [1 px+0 S4 A32])
        (reg:SF 31 s15 [orig:146 _40 ] [146])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 352 351 353 26 37 (nil) [1 uses])
(note 353 352 360 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 360 353 365 26 NOTE_INSN_DELETED)
(note 365 360 369 26 NOTE_INSN_DELETED)
(note 369 365 373 26 NOTE_INSN_DELETED)
(note 373 369 354 26 NOTE_INSN_DELETED)
(debug_insn 354 373 358 26 (debug_marker) "../System/ray_funkcije.c":114:3 -1
     (nil))
(insn 358 354 2296 26 (set (reg:SI 2 r2 [559])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":114:27 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 2296 358 357 26 (set (reg/v:SI 3 r3 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":114:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 357 2296 359 26 (set (reg:SI 3 r3 [556])
        (plus:SI (reg/v:SI 5 r5 [orig:343 fCheckY ] [343])
            (reg/v:SI 3 r3 [orig:356 ipy ] [356]))) "../System/ray_funkcije.c":114:16 7 {*arm_addsi3}
     (nil))
(insn 359 357 361 26 (parallel [
            (set (reg:SI 1 r1 [558])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [556]))
                            (sign_extend:DI (reg:SI 2 r2 [559])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [1103]))
        ]) "../System/ray_funkcije.c":114:27 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [556]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 361 359 362 26 (set (reg:SI 3 r3 [561])
        (ashiftrt:SI (reg:SI 3 r3 [556])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":114:27 147 {*arm_shiftsi3}
     (nil))
(insn 362 361 2444 26 (set (reg:SI 3 r3 [557])
        (minus:SI (ashiftrt:SI (reg:SI 1 r1 [558])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [561]))) "../System/ray_funkcije.c":114:27 319 {*rsb_shiftsi}
     (nil))
(insn 2444 362 364 26 (set (reg/v:SI 1 r1 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":114:37 728 {*thumb2_movsi_vfp}
     (nil))
(insn 364 2444 366 26 (parallel [
            (set (reg:SI 2 r2 [563])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 1 r1 [orig:355 ipx ] [355]))
                            (sign_extend:DI (reg:SI 2 r2 [559])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [1104]))
        ]) "../System/ray_funkcije.c":114:37 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 366 364 367 26 (set (reg:SI 1 r1 [566])
        (ashiftrt:SI (reg/v:SI 1 r1 [orig:355 ipx ] [355])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":114:37 147 {*arm_shiftsi3}
     (nil))
(insn 367 366 368 26 (set (reg:SI 2 r2 [562])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [563])
                (const_int 2 [0x2]))
            (reg:SI 1 r1 [566]))) "../System/ray_funkcije.c":114:37 319 {*rsb_shiftsi}
     (nil))
(insn 368 367 370 26 (set (reg:SI 1 r1 [568])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":114:32 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 370 368 372 26 (set (reg:SI 6 r6 [569])
        (plus:SI (mult:SI (reg:SI 1 r1 [568])
                (reg:SI 3 r3 [557]))
            (reg/f:SI 6 r6 [973]))) "../System/ray_funkcije.c":114:32 57 {*mla}
     (nil))
(insn 372 370 374 26 (set (reg:SI 3 r3 [orig:571 map[_42][_43] ] [571])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 6 r6 [569])
                    (reg:SI 2 r2 [562])) [0 map[_42][_43]+0 S1 A8]))) "../System/ray_funkcije.c":114:6 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 374 372 375 26 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:571 map[_42][_43] ] [571])
                        (const_int 0 [0]))
                    (label_ref:SI 388)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":114:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 388)
(note 375 374 378 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 378 375 381 27 NOTE_INSN_DELETED)
(note 381 378 376 27 NOTE_INSN_DELETED)
(debug_insn 376 381 2299 27 (debug_marker) "../System/ray_funkcije.c":115:4 -1
     (nil))
(insn 2299 376 379 27 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":115:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 379 2299 380 27 (set (reg:SF 16 s0)
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":115:25 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 380 379 2300 27 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":115:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2300 380 384 27 (set (reg:SI 3 r3 [1139])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":115:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 384 2300 383 27 (set (reg:SF 31 s15 [orig:576 py ] [576])
        (mem/c:SF (reg:SI 3 r3 [1139]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 383 384 385 27 (set (reg:SF 30 s14 [575])
        (const_double:SF 2.0e+0 [0x0.8p+2])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 385 383 2301 27 (set (reg:SF 31 s15 [orig:154 _49 ] [154])
        (fma:SF (reg:SF 16 s0 [1011])
            (reg:SF 30 s14 [575])
            (reg:SF 31 s15 [orig:576 py ] [576]))) "../System/ray_funkcije.c":115:7 788 {fmasf4}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (nil)))
(note 2301 385 387 27 NOTE_INSN_DELETED)
(insn 387 2301 388 27 (set (mem/c:SF (reg:SI 3 r3 [1140]) [1 py+0 S4 A32])
        (reg:SF 31 s15 [orig:154 _49 ] [154])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 388 387 389 28 36 (nil) [2 uses])
(note 389 388 393 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(note 393 389 390 28 NOTE_INSN_DELETED)
(debug_insn 390 393 391 28 (debug_marker) "../System/ray_funkcije.c":117:2 -1
     (nil))
(insn 391 390 392 28 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":117:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 392 391 399 28 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":117:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 399 392 400 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [1012])
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":117:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 400 399 401 28 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 416)
            (pc))) "../System/ray_funkcije.c":117:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 416)
(note 401 400 2302 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 2302 401 403 29 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":119:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 403 2302 404 29 (set (reg:SF 32 s16 [orig:411 pretmp_748 ] [411])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 404 403 405 29 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:411 pretmp_748 ] [411])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 405 404 2052 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2052 405 407 29 (set (reg:SF 34 s18 [1013])
        (reg:SF 16 s0)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 407 2052 408 29 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:411 pretmp_748 ] [411])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 408 407 409 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 409 408 2303 29 (set (reg:SF 35 s19 [orig:412 _752 ] [412])
        (reg:SF 16 s0 [1014])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2303 409 411 29 (set (reg:SI 3 r3 [1142])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":127:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 411 2303 2304 29 (set (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410])
        (mem/c:SF (reg:SI 3 r3 [1142]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":127:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 2304 411 413 29 (set (reg:SI 3 r3 [1143])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":128:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 413 2304 2131 29 (set (reg:SF 33 s17 [orig:413 pretmp_757 ] [413])
        (mem/c:SF (reg:SI 3 r3 [1143]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":128:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(jump_insn 2131 413 2132 29 (set (pc)
        (label_ref 504)) 284 {*arm_jump}
     (nil)
 -> 504)
(barrier 2132 2131 416)
(code_label 416 2132 417 30 39 (nil) [1 uses])
(note 417 416 422 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 422 417 428 30 NOTE_INSN_DELETED)
(note 428 422 432 30 NOTE_INSN_DELETED)
(note 432 428 436 30 NOTE_INSN_DELETED)
(note 436 432 418 30 NOTE_INSN_DELETED)
(debug_insn 418 436 2305 30 (debug_marker) "../System/ray_funkcije.c":118:3 -1
     (nil))
(insn 2305 418 425 30 (set (reg/v:SI 3 r3 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":118:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 425 2305 420 30 (set (reg:SI 4 r4 [590])
        (minus:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (reg/v:SI 4 r4 [orig:342 fCheckX ] [342]))) "../System/ray_funkcije.c":118:26 45 {*arm_subsi3_insn}
     (nil))
(insn 420 425 419 30 (set (reg:SI 3 r3 [587])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":118:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 419 420 2445 30 (set (reg/f:SI 6 r6 [973])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":118:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 2445 419 421 30 (set (reg/v:SI 2 r2 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":118:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 421 2445 427 30 (parallel [
            (set (reg:SI 1 r1 [586])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 2 r2 [orig:356 ipy ] [356]))
                            (sign_extend:DI (reg:SI 3 r3 [587])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [1105]))
        ]) "../System/ray_funkcije.c":118:15 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 427 421 429 30 (parallel [
            (set (reg:SI 3 r3 [592])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [590]))
                            (sign_extend:DI (reg:SI 3 r3 [587])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [1106]))
        ]) "../System/ray_funkcije.c":118:37 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [590]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 429 427 430 30 (set (reg:SI 4 r4 [595])
        (ashiftrt:SI (reg:SI 4 r4 [590])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":118:37 147 {*arm_shiftsi3}
     (nil))
(insn 430 429 423 30 (set (reg:SI 3 r3 [591])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [592])
                (const_int 2 [0x2]))
            (reg:SI 4 r4 [595]))) "../System/ray_funkcije.c":118:37 319 {*rsb_shiftsi}
     (nil))
(insn 423 430 424 30 (set (reg:SI 2 r2 [589])
        (ashiftrt:SI (reg/v:SI 2 r2 [orig:356 ipy ] [356])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":118:15 147 {*arm_shiftsi3}
     (nil))
(insn 424 423 431 30 (set (reg:SI 2 r2 [585])
        (minus:SI (ashiftrt:SI (reg:SI 1 r1 [586])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [589]))) "../System/ray_funkcije.c":118:15 319 {*rsb_shiftsi}
     (nil))
(insn 431 424 433 30 (set (reg:SI 1 r1 [597])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":118:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 433 431 435 30 (set (reg:SI 2 r2 [598])
        (plus:SI (mult:SI (reg:SI 1 r1 [597])
                (reg:SI 2 r2 [585]))
            (reg/f:SI 6 r6 [973]))) "../System/ray_funkcije.c":118:20 57 {*mla}
     (nil))
(insn 435 433 437 30 (set (reg:SI 3 r3 [orig:600 map[_51][_53] ] [600])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [598])
                    (reg:SI 3 r3 [591])) [0 map[_51][_53]+0 S1 A8]))) "../System/ray_funkcije.c":118:6 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 437 435 438 30 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [orig:600 map[_51][_53] ] [600])
                        (const_int 0 [0]))
                    (label_ref 448)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":118:6 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 448)
(note 438 437 2308 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 2308 438 440 31 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":119:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 440 2308 441 31 (set (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 441 440 442 31 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 442 441 443 31 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 443 442 2309 31 (set (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
        (reg:SF 16 s0 [1015])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2309 443 445 31 (set (reg:SI 3 r3 [1148])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":127:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 445 2309 2133 31 (set (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410])
        (mem/c:SF (reg:SI 3 r3 [1148]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":127:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(jump_insn 2133 445 2134 31 (set (pc)
        (label_ref 462)) 284 {*arm_jump}
     (nil)
 -> 462)
(barrier 2134 2133 448)
(code_label 448 2134 449 32 41 (nil) [1 uses])
(note 449 448 450 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(debug_insn 450 449 2310 32 (debug_marker) "../System/ray_funkcije.c":119:4 -1
     (nil))
(insn 2310 450 452 32 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":119:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 452 2310 453 32 (set (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 453 452 454 32 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 454 453 455 32 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 455 454 2311 32 (set (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
        (reg:SF 16 s0 [1016])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2311 455 458 32 (set (reg:SI 3 r3 [1150])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":119:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 458 2311 457 32 (set (reg:SF 32 s16 [orig:606 px ] [606])
        (mem/c:SF (reg:SI 3 r3 [1150]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 457 458 459 32 (set (reg:SF 31 s15 [605])
        (const_double:SF -2.0e+0 [-0x0.8p+2])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF -2.0e+0 [-0x0.8p+2])
        (nil)))
(insn 459 457 2312 32 (set (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410])
        (fma:SF (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
            (reg:SF 31 s15 [605])
            (reg:SF 32 s16 [orig:606 px ] [606]))) "../System/ray_funkcije.c":119:7 788 {fmasf4}
     (expr_list:REG_EQUAL (fma:SF (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
            (const_double:SF -2.0e+0 [-0x0.8p+2])
            (reg:SF 32 s16 [orig:606 px ] [606]))
        (nil)))
(note 2312 459 461 32 NOTE_INSN_DELETED)
(insn 461 2312 462 32 (set (mem/c:SF (reg:SI 3 r3 [1151]) [1 px+0 S4 A32])
        (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 462 461 463 33 42 (nil) [1 uses])
(note 463 462 469 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(note 469 463 474 33 NOTE_INSN_DELETED)
(note 474 469 478 33 NOTE_INSN_DELETED)
(note 478 474 482 33 NOTE_INSN_DELETED)
(note 482 478 464 33 NOTE_INSN_DELETED)
(debug_insn 464 482 2313 33 (debug_marker) "../System/ray_funkcije.c":120:3 -1
     (nil))
(insn 2313 464 466 33 (set (reg/v:SI 3 r3 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":120:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 466 2313 467 33 (set (reg:SI 5 r5 [609])
        (minus:SI (reg/v:SI 3 r3 [orig:356 ipy ] [356])
            (reg/v:SI 5 r5 [orig:343 fCheckY ] [343]))) "../System/ray_funkcije.c":120:16 45 {*arm_subsi3_insn}
     (nil))
(insn 467 466 470 33 (set (reg:SI 3 r3 [612])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":120:27 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 470 467 468 33 (set (reg:SI 2 r2 [614])
        (ashiftrt:SI (reg:SI 5 r5 [609])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":120:27 147 {*arm_shiftsi3}
     (nil))
(insn 468 470 471 33 (parallel [
            (set (reg:SI 5 r5 [611])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 5 r5 [609]))
                            (sign_extend:DI (reg:SI 3 r3 [612])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [1107]))
        ]) "../System/ray_funkcije.c":120:27 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 5 r5 [609]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 471 468 2448 33 (set (reg:SI 5 r5 [610])
        (minus:SI (ashiftrt:SI (reg:SI 5 r5 [611])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [614]))) "../System/ray_funkcije.c":120:27 319 {*rsb_shiftsi}
     (nil))
(insn 2448 471 473 33 (set (reg/v:SI 2 r2 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":120:37 728 {*thumb2_movsi_vfp}
     (nil))
(insn 473 2448 475 33 (parallel [
            (set (reg:SI 3 r3 [616])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 2 r2 [orig:355 ipx ] [355]))
                            (sign_extend:DI (reg:SI 3 r3 [612])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [1108]))
        ]) "../System/ray_funkcije.c":120:37 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 475 473 476 33 (set (reg:SI 2 r2 [619])
        (ashiftrt:SI (reg/v:SI 2 r2 [orig:355 ipx ] [355])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":120:37 147 {*arm_shiftsi3}
     (nil))
(insn 476 475 477 33 (set (reg:SI 3 r3 [615])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [616])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [619]))) "../System/ray_funkcije.c":120:37 319 {*rsb_shiftsi}
     (nil))
(insn 477 476 479 33 (set (reg:SI 2 r2 [621])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":120:32 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 479 477 481 33 (set (reg:SI 6 r6 [622])
        (plus:SI (mult:SI (reg:SI 2 r2 [621])
                (reg:SI 5 r5 [610]))
            (reg/f:SI 6 r6 [973]))) "../System/ray_funkcije.c":120:32 57 {*mla}
     (nil))
(insn 481 479 483 33 (set (reg:SI 3 r3 [orig:624 map[_61][_62] ] [624])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 6 r6 [622])
                    (reg:SI 3 r3 [615])) [0 map[_61][_62]+0 S1 A8]))) "../System/ray_funkcije.c":120:6 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 483 481 484 33 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [orig:624 map[_61][_62] ] [624])
                        (const_int 0 [0]))
                    (label_ref 492)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":120:6 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 492)
(note 484 483 485 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 34 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 486 485 487 34 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 487 486 2316 34 (set (reg:SF 35 s19 [orig:412 _752 ] [412])
        (reg:SF 16 s0 [1017])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2316 487 489 34 (set (reg:SI 3 r3 [1155])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":128:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 489 2316 2135 34 (set (reg:SF 33 s17 [orig:413 pretmp_757 ] [413])
        (mem/c:SF (reg:SI 3 r3 [1155]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":128:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(jump_insn 2135 489 2136 34 (set (pc)
        (label_ref 504)) 284 {*arm_jump}
     (nil)
 -> 504)
(barrier 2136 2135 492)
(code_label 492 2136 493 35 43 (nil) [1 uses])
(note 493 492 494 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 494 493 495 35 (debug_marker) "../System/ray_funkcije.c":121:4 -1
     (nil))
(insn 495 494 496 35 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:160 angle.18_55 ] [160])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 496 495 497 35 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 497 496 2317 35 (set (reg:SF 35 s19 [orig:412 _752 ] [412])
        (reg:SF 16 s0 [1018])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2317 497 500 35 (set (reg:SI 3 r3 [1156])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":121:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 500 2317 499 35 (set (reg:SF 33 s17 [orig:628 py ] [628])
        (mem/c:SF (reg:SI 3 r3 [1156]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 499 500 501 35 (set (reg:SF 31 s15 [627])
        (const_double:SF -2.0e+0 [-0x0.8p+2])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF -2.0e+0 [-0x0.8p+2])
        (nil)))
(insn 501 499 2318 35 (set (reg:SF 33 s17 [orig:413 pretmp_757 ] [413])
        (fma:SF (reg:SF 35 s19 [orig:412 _752 ] [412])
            (reg:SF 31 s15 [627])
            (reg:SF 33 s17 [orig:628 py ] [628]))) "../System/ray_funkcije.c":121:7 788 {fmasf4}
     (expr_list:REG_EQUAL (fma:SF (reg:SF 35 s19 [orig:412 _752 ] [412])
            (const_double:SF -2.0e+0 [-0x0.8p+2])
            (reg:SF 33 s17 [orig:628 py ] [628]))
        (nil)))
(note 2318 501 503 35 NOTE_INSN_DELETED)
(insn 503 2318 504 35 (set (mem/c:SF (reg:SI 3 r3 [1157]) [1 py+0 S4 A32])
        (reg:SF 33 s17 [orig:413 pretmp_757 ] [413])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 504 503 505 36 40 (nil) [2 uses])
(note 505 504 517 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 517 505 506 36 NOTE_INSN_DELETED)
(debug_insn 506 517 507 36 (debug_marker) "../System/ray_funkcije.c":126:2 -1
     (nil))
(debug_insn 507 506 508 36 (var_location:SF roka (const_double:SF 6.0e+0 [0x0.cp+3])) "../System/ray_funkcije.c":126:8 -1
     (nil))
(debug_insn 508 507 509 36 (debug_marker) "../System/ray_funkcije.c":127:2 -1
     (nil))
(debug_insn 509 508 510 36 (var_location:SF D#13 (mult:SF (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
        (const_double:SF 6.0e+0 [0x0.cp+3]))) "../System/ray_funkcije.c":127:29 -1
     (nil))
(debug_insn 510 509 511 36 (var_location:SF rokaPosX (plus:SF (debug_expr:SF D#13)
        (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410]))) "../System/ray_funkcije.c":127:8 -1
     (nil))
(debug_insn 511 510 512 36 (debug_marker) "../System/ray_funkcije.c":128:2 -1
     (nil))
(debug_insn 512 511 513 36 (var_location:SF D#12 (mult:SF (reg:SF 35 s19 [orig:412 _752 ] [412])
        (const_double:SF 6.0e+0 [0x0.cp+3]))) "../System/ray_funkcije.c":128:29 -1
     (nil))
(debug_insn 513 512 514 36 (var_location:SF rokaPosY (plus:SF (debug_expr:SF D#12)
        (reg:SF 33 s17 [orig:413 pretmp_757 ] [413]))) "../System/ray_funkcije.c":128:8 -1
     (nil))
(debug_insn 514 513 515 36 (debug_marker) "../System/ray_funkcije.c":129:2 -1
     (nil))
(insn 515 514 516 36 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":129:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 516 515 520 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000006cc2500 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":129:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000006cc2500 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 520 516 521 36 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [630])
                        (const_int 0 [0]))
                    (label_ref 526)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":129:5 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 526)
(note 521 520 522 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 2451 37 (set (reg/f:SI 3 r3 [970])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 2451 522 523 37 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [8 %sfp+-16 S4 A32])
        (reg/f:SI 3 r3 [970])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 523 2451 2137 37 (set (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
        (mem/c:SI (reg/f:SI 3 r3 [970]) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(jump_insn 2137 523 2138 37 (set (pc)
        (label_ref 556)) 284 {*arm_jump}
     (nil)
 -> 556)
(barrier 2138 2137 526)
(code_label 526 2138 527 38 44 (nil) [1 uses])
(note 527 526 540 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(note 540 527 528 38 NOTE_INSN_DELETED)
(insn 528 540 529 38 (set (reg:SF 31 s15 [632])
        (const_double:SF 6.0e+0 [0x0.cp+3])) "../System/ray_funkcije.c":128:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 529 528 535 38 (set (reg/v:SF 33 s17 [orig:358 rokaPosY ] [358])
        (fma:SF (reg:SF 35 s19 [orig:412 _752 ] [412])
            (reg:SF 31 s15 [632])
            (reg:SF 33 s17 [orig:413 pretmp_757 ] [413]))) "../System/ray_funkcije.c":128:8 788 {fmasf4}
     (expr_list:REG_EQUAL (fma:SF (reg:SF 35 s19 [orig:412 _752 ] [412])
            (const_double:SF 6.0e+0 [0x0.cp+3])
            (reg:SF 33 s17 [orig:413 pretmp_757 ] [413]))
        (nil)))
(insn 535 529 530 38 (set (reg/v:SF 32 s16 [orig:357 rokaPosX ] [357])
        (fma:SF (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
            (reg:SF 31 s15 [632])
            (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410]))) "../System/ray_funkcije.c":127:8 788 {fmasf4}
     (expr_list:REG_EQUAL (fma:SF (reg:SF 34 s18 [orig:409 prephitmp_745 ] [409])
            (const_double:SF 6.0e+0 [0x0.cp+3])
            (reg:SF 32 s16 [orig:410 prephitmp_747 ] [410]))
        (nil)))
(insn 530 535 2452 38 (set (reg/f:SI 3 r3 [970])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 2452 530 538 38 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [8 %sfp+-16 S4 A32])
        (reg/f:SI 3 r3 [970])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 538 2452 539 38 (set (reg/f:SI 2 r2 [637])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":130:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 539 538 531 38 (set (reg:SI 1 r1 [639])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":130:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 531 539 532 38 (set (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
        (mem/c:SI (reg/f:SI 3 r3 [970]) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(insn 532 531 2323 38 (set (reg:SI 33 s17 [634])
        (fix:SI (fix:SF (reg/v:SF 33 s17 [orig:358 rokaPosY ] [358])))) "../System/ray_funkcije.c":130:11 805 {*truncsisf2_vfp}
     (nil))
(insn 2323 532 533 38 (set (reg:SI 3 r3 [634])
        (reg:SI 33 s17 [634])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 533 2323 541 38 (set (reg:SI 3 r3 [orig:169 _80 ] [169])
        (div:SI (reg:SI 3 r3 [634])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":130:26 162 {divsi3}
     (nil))
(insn 541 533 536 38 (set (reg:SI 2 r2 [640])
        (plus:SI (mult:SI (reg:SI 1 r1 [639])
                (reg:SI 3 r3 [orig:169 _80 ] [169]))
            (reg/f:SI 2 r2 [637]))) "../System/ray_funkcije.c":130:38 57 {*mla}
     (nil))
(insn 536 541 2324 38 (set (reg:SI 32 s16 [636])
        (fix:SI (fix:SF (reg/v:SF 32 s16 [orig:357 rokaPosX ] [357])))) "../System/ray_funkcije.c":130:39 805 {*truncsisf2_vfp}
     (nil))
(insn 2324 536 537 38 (set (reg:SI 3 r3 [636])
        (reg:SI 32 s16 [636])) "../System/ray_funkcije.c":130:54 728 {*thumb2_movsi_vfp}
     (nil))
(insn 537 2324 543 38 (set (reg:SI 3 r3 [orig:171 _83 ] [171])
        (div:SI (reg:SI 3 r3 [636])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":130:54 162 {divsi3}
     (nil))
(insn 543 537 544 38 (set (reg:SI 1 r1 [orig:642 map[_80][_83] ] [642])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [640])
                    (reg:SI 3 r3 [orig:171 _83 ] [171])) [0 map[_80][_83]+0 S1 A8]))) "../System/ray_funkcije.c":130:4 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 544 543 545 38 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:642 map[_80][_83] ] [642])
            (const_int 3 [0x3]))) "../System/ray_funkcije.c":130:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 545 544 546 38 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 556)
            (pc))) "../System/ray_funkcije.c":130:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 556)
(note 546 545 547 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(debug_insn 547 546 555 39 (debug_marker) "../System/ray_funkcije.c":131:3 -1
     (nil))
(insn 555 547 556 39 (set (mem:QI (plus:SI (reg:SI 2 r2 [640])
                (reg:SI 3 r3 [orig:171 _83 ] [171])) [0 map[_80][_83]+0 S1 A8])
        (reg:QI 0 r0 [630])) "../System/ray_funkcije.c":131:63 263 {*arm_movqi_insn}
     (nil))
(code_label 556 555 557 40 45 (nil) [2 uses])
(note 557 556 558 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(debug_insn 558 557 559 40 (var_location:SF z (const_double:SF -3.0e+1 [-0x0.fp+5])) -1
     (nil))
(debug_insn 559 558 560 40 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 560 559 561 40 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 561 560 562 40 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 562 561 563 40 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 563 562 564 40 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 564 563 565 40 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 565 564 13 40 (debug_marker) "../System/ray_funkcije.c":133:22 -1
     (nil))
(insn 13 565 14 40 (set (reg:SF 34 s18 [orig:418 _769 ] [418])
        (const_double:SF 8.66025447845458984375e-1 [0x0.ddb3d8p+0])) "../System/ray_funkcije.c":109:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 8.66025447845458984375e-1 [0x0.ddb3d8p+0])
        (nil)))
(insn 14 13 770 40 (set (reg/v:SF 38 s22 [orig:339 z ] [339])
        (const_double:SF -3.0e+1 [-0x0.fp+5])) "../System/ray_funkcije.c":109:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF -3.0e+1 [-0x0.fp+5])
        (nil)))
(note 770 14 12 40 NOTE_INSN_DELETED)
(insn 12 770 2325 40 (set (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])
        (const_int 60 [0x3c])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60 [0x3c])
        (nil)))
(insn 2325 12 581 40 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-20 S4 A32])
        (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (nil))
(note 581 2325 632 40 NOTE_INSN_DELETED)
(note 632 581 1445 40 NOTE_INSN_DELETED)
(note 1445 632 1472 40 NOTE_INSN_DELETED)
(note 1472 1445 1819 40 NOTE_INSN_DELETED)
(code_label 1819 1472 566 41 88 (nil) [1 uses])
(note 566 1819 588 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(note 588 566 567 41 NOTE_INSN_DELETED)
(debug_insn 567 588 568 41 (var_location:SF z (reg/v:SF 38 s22 [orig:339 z ] [339])) -1
     (nil))
(debug_insn 568 567 569 41 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 569 568 570 41 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 570 569 571 41 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 571 570 572 41 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 572 571 573 41 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 573 572 574 41 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 574 573 575 41 (debug_marker) "../System/ray_funkcije.c":134:3 -1
     (nil))
(debug_insn 575 574 576 41 (var_location:SI vmt (const_int 0 [0])) "../System/ray_funkcije.c":134:7 -1
     (nil))
(debug_insn 576 575 577 41 (var_location:SI hmt (const_int 0 [0])) "../System/ray_funkcije.c":134:16 -1
     (nil))
(debug_insn 577 576 578 41 (debug_marker) "../System/ray_funkcije.c":135:3 -1
     (nil))
(insn 578 577 579 41 (set (reg:SF 0 r0)
        (reg/v:SF 38 s22 [orig:339 z ] [339])) "../System/ray_funkcije.c":135:22 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 579 578 2004 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2004 579 583 41 (set (reg:DF 2 r2)
        (const_double:DF 1.74532899999999997764366099772814777679741382599e-2 [0x0.8efa33b83e4a68p-5])) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 583 2004 584 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 584 583 2327 41 (set (reg:DF 4 r4 [651])
        (reg:DF 0 r0 [1020])) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (nil))
(insn 2327 584 586 41 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":135:31 728 {*thumb2_movsi_vfp}
     (nil))
(insn 586 2327 587 41 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":135:31 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 587 586 2060 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:31 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2060 587 590 41 (set (reg:DF 2 r2 [1021])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":135:31 739 {*thumb2_movdf_vfp}
     (nil))
(insn 590 2060 591 41 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [651])) "../System/ray_funkcije.c":135:31 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 591 590 594 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:31 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 594 591 595 41 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 595 594 597 41 (set (reg/v:SF 32 s16 [orig:346 newAngle ] [346])
        (reg:SF 0 r0 [1022])) "../System/ray_funkcije.c":135:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 597 595 598 41 (var_location:SF newAngle (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":135:9 -1
     (nil))
(debug_insn 598 597 2208 41 (debug_marker) "../System/ray_funkcije.c":136:3 -1
     (nil))
(insn 2208 598 2209 41 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 32 s16 [orig:346 newAngle ] [346])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":136:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2209 2208 601 41 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":136:6 817 {*movcc_vfp}
     (nil))
(jump_insn 601 2209 605 41 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2139)
            (pc))) "../System/ray_funkcije.c":136:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 2139)
(note 605 601 606 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 606 605 608 42 (debug_marker) "../System/ray_funkcije.c":137:4 -1
     (nil))
(call_insn/u 608 606 2007 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2007 608 612 42 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":137:13 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 612 2007 616 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 616 612 617 42 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 617 616 619 42 (set (reg/v:SF 32 s16 [orig:346 newAngle ] [346])
        (reg:SF 0 r0 [1023])) "../System/ray_funkcije.c":137:13 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 619 617 621 42 (var_location:SF newAngle (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":137:13 -1
     (nil))
(call_insn/u 621 619 622 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 622 621 2140 42 (set (reg:DF 6 r6 [orig:181 _95 ] [181])
        (reg:DF 0 r0 [1024])) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 32 s16 [orig:346 newAngle ] [346]))
        (nil)))
(jump_insn 2140 622 2141 42 (set (pc)
        (label_ref 655)) 284 {*arm_jump}
     (nil)
 -> 655)
(barrier 2141 2140 2139)
(code_label 2139 2141 626 43 120 (nil) [1 uses])
(note 626 2139 635 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(note 635 626 636 43 NOTE_INSN_DELETED)
(note 636 635 627 43 NOTE_INSN_DELETED)
(debug_insn 627 636 629 43 (debug_marker) "../System/ray_funkcije.c":138:8 -1
     (nil))
(call_insn/u 629 627 2064 43 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":138:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2064 629 2005 43 (set (reg:DF 6 r6 [1025])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":138:21 739 {*thumb2_movdf_vfp}
     (nil))
(insn 2005 2064 634 43 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":138:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 634 2005 637 43 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":138:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 637 634 641 43 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1026])
                        (const_int 0 [0]))
                    (label_ref:SI 655)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":138:11 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 655)
(note 641 637 642 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 642 641 644 44 (debug_marker) "../System/ray_funkcije.c":139:4 -1
     (nil))
(insn 644 642 2006 44 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":139:13 739 {*thumb2_movdf_vfp}
     (nil))
(insn 2006 644 645 44 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":139:13 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 645 2006 648 44 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":139:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 648 645 649 44 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":139:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 649 648 651 44 (set (reg/v:SF 32 s16 [orig:346 newAngle ] [346])
        (reg:SF 0 r0 [1027])) "../System/ray_funkcije.c":139:13 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 651 649 653 44 (var_location:SF newAngle (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":139:13 -1
     (nil))
(call_insn/u 653 651 654 44 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 654 653 655 44 (set (reg:DF 6 r6 [orig:181 _95 ] [181])
        (reg:DF 0 r0 [1028])) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 32 s16 [orig:346 newAngle ] [346]))
        (nil)))
(code_label 655 654 656 45 48 (nil) [2 uses])
(note 656 655 672 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(note 672 656 673 45 NOTE_INSN_DELETED)
(note 673 672 657 45 NOTE_INSN_DELETED)
(debug_insn 657 673 658 45 (var_location:SF newAngle (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) -1
     (nil))
(debug_insn 658 657 659 45 (debug_marker) "../System/ray_funkcije.c":142:3 -1
     (nil))
(insn 659 658 660 45 (set (reg:SF 16 s0)
        (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":142:20 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 660 659 661 45 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("tanf") [flags 0x41]  <function_decl 0000000005b14c00 tanf>) [0 __builtin_tanf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":142:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("tanf") [flags 0x41]  <function_decl 0000000005b14c00 tanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 661 660 662 45 (set (reg:SF 40 s24 [orig:183 _97 ] [183])
        (reg:SF 16 s0 [1029])) "../System/ray_funkcije.c":142:20 737 {*thumb2_movsf_vfp}
     (nil))
(insn 662 661 663 45 (set (reg:SF 31 s15 [664])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":142:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 663 662 664 45 (set (reg/v:SF 33 s17 [orig:359 aTan ] [359])
        (div:SF (reg:SF 31 s15 [664])
            (reg:SF 40 s24 [orig:183 _97 ] [183]))) "../System/ray_funkcije.c":142:9 764 {*divsf3_vfp}
     (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg:SF 40 s24 [orig:183 _97 ] [183]))
        (nil)))
(debug_insn 664 663 665 45 (var_location:SF aTan (reg/v:SF 33 s17 [orig:359 aTan ] [359])) "../System/ray_funkcije.c":142:9 -1
     (nil))
(debug_insn 665 664 666 45 (debug_marker) "../System/ray_funkcije.c":143:3 -1
     (nil))
(debug_insn 666 665 667 45 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":143:7 -1
     (nil))
(debug_insn 667 666 669 45 (debug_marker) "../System/ray_funkcije.c":144:3 -1
     (nil))
(insn 669 667 670 45 (set (reg:DF 2 r2)
        (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])) "../System/ray_funkcije.c":144:6 739 {*thumb2_movdf_vfp}
     (nil))
(insn 670 669 671 45 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":144:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 671 670 674 45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 674 671 678 45 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1030])
                        (const_int 0 [0]))
                    (label_ref:SI 2142)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":144:6 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 2142)
(note 678 674 682 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(note 682 678 684 46 NOTE_INSN_DELETED)
(note 684 682 679 46 NOTE_INSN_DELETED)
(debug_insn 679 684 2328 46 (debug_marker) "../System/ray_funkcije.c":145:4 -1
     (nil))
(insn 2328 679 712 46 (set (reg:SI 31 s15 [orig:416 pretmp_766 ] [416])
        (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])) "../System/ray_funkcije.c":152:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 712 2328 2454 46 (set (reg/v:SF 42 s26 [orig:404 dx ] [404])
        (float:SF (reg:SI 31 s15 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":152:7 809 {*floatsisf2_vfp}
     (nil))
(insn 2454 712 681 46 (set (reg/v:SI 3 r3 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":145:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 681 2454 683 46 (set (reg:SI 0 r0 [672])
        (div:SI (reg/v:SI 3 r3 [orig:356 ipy ] [356])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":145:21 162 {divsi3}
     (nil))
(insn 683 681 685 46 (set (reg:SI 0 r0 [674])
        (minus:SI (reg/v:SI 3 r3 [orig:356 ipy ] [356])
            (mult:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
                (reg:SI 0 r0 [672])))) "../System/ray_funkcije.c":145:21 58 {*mls}
     (nil))
(insn 685 683 686 46 (set (reg:SI 0 r0)
        (minus:SI (reg/v:SI 3 r3 [orig:356 ipy ] [356])
            (reg:SI 0 r0 [674]))) "../System/ray_funkcije.c":145:34 45 {*arm_subsi3_insn}
     (nil))
(call_insn/u 686 685 688 46 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 688 686 690 46 (set (reg:DF 2 r2)
        (const_double:DF 1.00000000000000004792173602385929598312941379845e-4 [0x0.d1b71758e21968p-13])) "../System/ray_funkcije.c":145:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 690 688 693 46 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 693 690 694 46 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 694 693 696 46 (set (reg/v:SF 36 s20 [orig:403 rvy ] [403])
        (reg:SF 0 r0 [1031])) "../System/ray_funkcije.c":145:8 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 696 694 697 46 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) "../System/ray_funkcije.c":145:8 -1
     (nil))
(debug_insn 697 696 2332 46 (debug_marker) "../System/ray_funkcije.c":146:4 -1
     (nil))
(insn 2332 697 699 46 (set (reg:SI 3 r3 [1171])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":146:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 699 2332 2333 46 (set (reg:SF 43 s27 [orig:193 py.37_114 ] [193])
        (mem/c:SF (reg:SI 3 r3 [1171]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":146:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 2333 699 701 46 (set (reg:SI 3 r3 [1172])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":146:29 728 {*thumb2_movsi_vfp}
     (nil))
(insn 701 2333 702 46 (set (reg:SF 44 s28 [orig:195 px.38_117 ] [195])
        (mem/c:SF (reg:SI 3 r3 [1172]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":146:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 702 701 2334 46 (set (reg:SF 31 s15 [681])
        (minus:SF (reg/v:SF 36 s20 [orig:403 rvy ] [403])
            (reg:SF 43 s27 [orig:193 py.37_114 ] [193]))) "../System/ray_funkcije.c":146:21 761 {*subsf3_vfp}
     (nil))
(insn 2334 702 703 46 (set (reg/v:SF 39 s23 [orig:402 rvx ] [402])
        (reg:SF 44 s28 [orig:195 px.38_117 ] [195])) "../System/ray_funkcije.c":146:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 703 2334 704 46 (set (reg/v:SF 39 s23 [orig:402 rvx ] [402])
        (fma:SF (reg:SF 31 s15 [681])
            (reg/v:SF 33 s17 [orig:359 aTan ] [359])
            (reg/v:SF 39 s23 [orig:402 rvx ] [402]))) "../System/ray_funkcije.c":146:8 788 {fmasf4}
     (nil))
(debug_insn 704 703 705 46 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) "../System/ray_funkcije.c":146:8 -1
     (nil))
(debug_insn 705 704 706 46 (debug_marker) "../System/ray_funkcije.c":147:4 -1
     (nil))
(insn 706 705 2336 46 (set (reg:SI 3 r3 [682])
        (neg:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":147:9 164 {*arm_negsi2}
     (nil))
(insn 2336 706 1891 46 (set (reg:SI 29 s13 [682])
        (reg:SI 3 r3 [682])) "../System/ray_funkcije.c":147:9 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1891 2336 707 46 (var_location:SF D#31 (float:SF (reg:SI 29 s13 [682]))) -1
     (nil))
(insn 707 1891 708 46 (set (reg/v:SF 29 s13 [orig:360 dy ] [360])
        (float:SF (reg:SI 29 s13 [682]))) "../System/ray_funkcije.c":147:7 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 708 707 709 46 (var_location:SF dy (debug_expr:SF D#31)) "../System/ray_funkcije.c":147:7 -1
     (nil))
(debug_insn 709 708 1893 46 (debug_marker) "../System/ray_funkcije.c":148:4 -1
     (nil))
(debug_insn 1893 709 710 46 (var_location:SF D#32 (mult:SF (reg/v:SF 33 s17 [orig:359 aTan ] [359])
        (reg/v:SF 29 s13 [orig:360 dy ] [360]))) -1
     (nil))
(insn 710 1893 711 46 (set (reg/v:SF 28 s12 [orig:361 dx ] [361])
        (mult:SF (reg/v:SF 33 s17 [orig:359 aTan ] [359])
            (reg/v:SF 29 s13 [orig:360 dy ] [360]))) "../System/ray_funkcije.c":148:7 767 {*mulsf3_vfp}
     (nil))
(debug_insn 711 710 1889 46 (var_location:SF dx (debug_expr:SF D#32)) "../System/ray_funkcije.c":148:7 -1
     (nil))
(debug_insn 1889 711 2143 46 (var_location:SF D#30 (float:SF (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) -1
     (nil))
(jump_insn 2143 1889 2144 46 (set (pc)
        (label_ref 815)) 284 {*arm_jump}
     (nil)
 -> 815)
(barrier 2144 2143 2142)
(code_label 2142 2144 716 47 121 (nil) [1 uses])
(note 716 2142 721 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(note 721 716 722 47 NOTE_INSN_DELETED)
(note 722 721 723 47 NOTE_INSN_DELETED)
(note 723 722 717 47 NOTE_INSN_DELETED)
(debug_insn 717 723 718 47 (debug_marker) "../System/ray_funkcije.c":149:10 -1
     (nil))
(debug_insn 718 717 2337 47 (debug_marker) "../System/ray_funkcije.c":150:4 -1
     (nil))
(insn 2337 718 729 47 (set (reg:SI 3 r3 [1175])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":151:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 729 2337 2338 47 (set (reg:SF 43 s27 [orig:193 py.37_114 ] [193])
        (mem/c:SF (reg:SI 3 r3 [1175]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":151:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 2338 729 736 47 (set (reg:SI 31 s15 [orig:416 pretmp_766 ] [416])
        (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])) "../System/ray_funkcije.c":152:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 736 2338 2339 47 (set (reg/v:SF 29 s13 [orig:360 dy ] [360])
        (float:SF (reg:SI 31 s15 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":152:7 809 {*floatsisf2_vfp}
     (nil))
(insn 2339 736 731 47 (set (reg:SI 3 r3 [1177])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":151:29 728 {*thumb2_movsi_vfp}
     (nil))
(insn 731 2339 739 47 (set (reg:SF 44 s28 [orig:195 px.38_117 ] [195])
        (mem/c:SF (reg:SI 3 r3 [1177]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":151:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 739 731 16 47 (set (reg/v:SF 28 s12 [orig:361 dx ] [361])
        (mult:SF (reg/v:SF 33 s17 [orig:359 aTan ] [359])
            (reg/v:SF 29 s13 [orig:360 dy ] [360]))) "../System/ray_funkcije.c":153:7 767 {*mulsf3_vfp}
     (nil))
(insn 16 739 2340 47 (set (reg/v:SF 42 s26 [orig:404 dx ] [404])
        (reg/v:SF 29 s13 [orig:360 dy ] [360])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2340 16 720 47 (set (reg/v:SI 3 r3 [orig:356 ipy ] [356])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [8 %sfp+-8 S4 A32])) "../System/ray_funkcije.c":150:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 720 2340 724 47 (set (reg:SI 3 r3 [688])
        (div:SI (reg/v:SI 3 r3 [orig:356 ipy ] [356])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":150:21 162 {divsi3}
     (nil))
(insn 724 720 2341 47 (set (reg:SI 3 r3 [692])
        (plus:SI (mult:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
                (reg:SI 3 r3 [688]))
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":150:34 57 {*mla}
     (nil))
(insn 2341 724 725 47 (set (reg:SI 31 s15 [692])
        (reg:SI 3 r3 [692])) "../System/ray_funkcije.c":150:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 725 2341 726 47 (set (reg/v:SF 36 s20 [orig:403 rvy ] [403])
        (float:SF (reg:SI 31 s15 [692]))) "../System/ray_funkcije.c":150:8 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 726 725 727 47 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) "../System/ray_funkcije.c":150:8 -1
     (nil))
(debug_insn 727 726 732 47 (debug_marker) "../System/ray_funkcije.c":151:4 -1
     (nil))
(insn 732 727 2220 47 (set (reg:SF 31 s15 [695])
        (minus:SF (reg/v:SF 36 s20 [orig:403 rvy ] [403])
            (reg:SF 43 s27 [orig:193 py.37_114 ] [193]))) "../System/ray_funkcije.c":151:21 761 {*subsf3_vfp}
     (nil))
(debug_insn 2220 732 2342 47 (var_location:SF D#37 (reg/v:SF 33 s17 [orig:359 aTan ] [359])) -1
     (nil))
(insn 2342 2220 733 47 (set (reg/v:SF 39 s23 [orig:402 rvx ] [402])
        (reg:SF 44 s28 [orig:195 px.38_117 ] [195])) "../System/ray_funkcije.c":151:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 733 2342 734 47 (set (reg/v:SF 39 s23 [orig:402 rvx ] [402])
        (fma:SF (reg:SF 31 s15 [695])
            (reg/v:SF 33 s17 [orig:359 aTan ] [359])
            (reg/v:SF 39 s23 [orig:402 rvx ] [402]))) "../System/ray_funkcije.c":151:8 788 {fmasf4}
     (nil))
(debug_insn 734 733 735 47 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) "../System/ray_funkcije.c":151:8 -1
     (nil))
(debug_insn 735 734 1890 47 (debug_marker) "../System/ray_funkcije.c":152:4 -1
     (nil))
(debug_insn 1890 735 737 47 (var_location:SF D#31 (float:SF (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) -1
     (nil))
(debug_insn 737 1890 738 47 (var_location:SF dy (debug_expr:SF D#31)) "../System/ray_funkcije.c":152:7 -1
     (nil))
(debug_insn 738 737 1892 47 (debug_marker) "../System/ray_funkcije.c":153:4 -1
     (nil))
(debug_insn 1892 738 740 47 (var_location:SF D#32 (mult:SF (debug_expr:SF D#37)
        (reg/v:SF 29 s13 [orig:360 dy ] [360]))) -1
     (nil))
(debug_insn 740 1892 1888 47 (var_location:SF dx (debug_expr:SF D#32)) "../System/ray_funkcije.c":153:7 -1
     (nil))
(debug_insn 1888 740 2145 47 (var_location:SF D#30 (debug_expr:SF D#31)) -1
     (nil))
(jump_insn 2145 1888 2146 47 (set (pc)
        (label_ref 815)) 284 {*arm_jump}
     (nil)
 -> 815)
(barrier 2146 2145 809)
(code_label 809 2146 743 48 55 (nil) [2 uses])
(note 743 809 744 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(debug_insn 744 743 745 48 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 745 744 746 48 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 746 745 747 48 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) -1
     (nil))
(debug_insn 747 746 748 48 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) -1
     (nil))
(debug_insn 748 747 749 48 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 749 748 750 48 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 750 749 2021 48 (debug_marker) "../System/ray_funkcije.c":163:4 -1
     (nil))
(debug_insn 2021 750 794 48 (var_location:SF D#36 (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])) -1
     (nil))
(debug_insn 794 2021 751 48 (debug_marker) "../System/ray_funkcije.c":169:5 -1
     (nil))
(insn 751 794 763 48 (set (reg:SF 31 s15 [696])
        (mult:SF (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])
            (reg/v:SF 39 s23 [orig:402 rvx ] [402]))) "../System/ray_funkcije.c":163:13 767 {*mulsf3_vfp}
     (nil))
(insn 763 751 752 48 (set (reg:SF 30 s14 [697])
        (mult:SF (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])
            (reg/v:SF 36 s20 [orig:403 rvy ] [403]))) "../System/ray_funkcije.c":164:13 767 {*mulsf3_vfp}
     (nil))
(insn 752 763 2344 48 (set (reg/v:SI 31 s15 [orig:400 wx ] [400])
        (fix:SI (fix:SF (reg:SF 31 s15 [696])))) "../System/ray_funkcije.c":163:7 805 {*truncsisf2_vfp}
     (nil))
(insn 2344 752 753 48 (set (reg/v:SI 3 r3 [orig:400 wx ] [400])
        (reg/v:SI 31 s15 [orig:400 wx ] [400])) "../System/ray_funkcije.c":163:7 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 753 2344 754 48 (var_location:SI wx (reg/v:SI 3 r3 [orig:400 wx ] [400])) "../System/ray_funkcije.c":163:7 -1
     (nil))
(debug_insn 754 753 755 48 (debug_marker) "../System/ray_funkcije.c":164:4 -1
     (nil))
(debug_insn 755 754 756 48 (var_location:SF D#11 (mult:SF (debug_expr:SF D#36)
        (reg/v:SF 36 s20 [orig:403 rvy ] [403]))) "../System/ray_funkcije.c":164:13 -1
     (nil))
(debug_insn 756 755 757 48 (var_location:SI wy (fix:SI (debug_expr:SF D#11))) "../System/ray_funkcije.c":164:7 -1
     (nil))
(debug_insn 757 756 2227 48 (debug_marker) "../System/ray_funkcije.c":165:4 -1
     (nil))
(insn 2227 757 764 48 (set (reg:SF 31 s15 [697])
        (reg:SF 30 s14 [697])) "../System/ray_funkcije.c":164:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 764 2227 760 48 (set (reg/v:SI 31 s15 [orig:401 wy ] [401])
        (fix:SI (fix:SF (reg:SF 31 s15 [697])))) "../System/ray_funkcije.c":164:7 805 {*truncsisf2_vfp}
     (nil))
(insn 760 764 761 48 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:400 wx ] [400])
            (const_int 49 [0x31]))) "../System/ray_funkcije.c":165:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 761 760 762 48 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) "../System/ray_funkcije.c":165:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 792)
(note 762 761 2345 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 2345 762 2346 49 (set (reg:SI 1 r1 [1182])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":165:80 728 {*thumb2_movsi_vfp}
     (nil))
(insn 2346 2345 773 49 (set (reg/v:SI 4 r4 [orig:401 wy ] [401])
        (reg/v:SI 31 s15 [orig:401 wy ] [401])) "../System/ray_funkcije.c":165:80 728 {*thumb2_movsi_vfp}
     (nil))
(insn 773 2346 1895 49 (set (reg:SI 1 r1 [701])
        (plus:SI (mult:SI (reg:SI 0 r0 [988])
                (reg/v:SI 4 r4 [orig:401 wy ] [401]))
            (reg:SI 1 r1 [1182]))) "../System/ray_funkcije.c":165:80 57 {*mla}
     (nil))
(debug_insn 1895 773 2347 49 (var_location:SI D#34 (zero_extend:SI (mem:QI (plus:SI (reg:SI 1 r1 [701])
                (reg/v:SI 3 r3 [orig:400 wx ] [400])) [0 map[wy_446][wx_445]+0 S1 A8]))) -1
     (nil))
(insn 2347 1895 767 49 (set (reg/v:SI 4 r4 [orig:401 wy ] [401])
        (reg/v:SI 31 s15 [orig:401 wy ] [401])) "../System/ray_funkcije.c":165:45 728 {*thumb2_movsi_vfp}
     (nil))
(insn 767 2347 768 49 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:401 wy ] [401])
            (const_int 24 [0x18]))) "../System/ray_funkcije.c":165:45 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 768 767 769 49 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) "../System/ray_funkcije.c":165:45 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 792)
(note 769 768 772 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(note 772 769 776 50 NOTE_INSN_DELETED)
(note 776 772 775 50 NOTE_INSN_DELETED)
(insn 775 776 777 50 (set (reg:SI 4 r4 [orig:199 _125 ] [199])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 1 r1 [701])
                    (reg/v:SI 3 r3 [orig:400 wx ] [400])) [0 map[wy_446][wx_445]+0 S1 A8]))) "../System/ray_funkcije.c":165:80 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 777 775 792 50 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 4 r4 [orig:199 _125 ] [199])
                        (const_int 0 [0]))
                    (label_ref:SI 829)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":165:64 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 829)
(code_label 792 777 793 52 53 (nil) [2 uses])
(note 793 792 808 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(note 808 793 795 52 NOTE_INSN_DELETED)
(insn 795 808 796 52 (set (reg/v:SF 39 s23 [orig:402 rvx ] [402])
        (plus:SF (reg/v:SF 39 s23 [orig:402 rvx ] [402])
            (reg/v:SF 28 s12 [orig:361 dx ] [361]))) "../System/ray_funkcije.c":169:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 796 795 797 52 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) "../System/ray_funkcije.c":169:9 -1
     (nil))
(debug_insn 797 796 798 52 (debug_marker) "../System/ray_funkcije.c":170:5 -1
     (nil))
(insn 798 797 799 52 (set (reg/v:SF 36 s20 [orig:403 rvy ] [403])
        (plus:SF (reg/v:SF 36 s20 [orig:403 rvy ] [403])
            (reg/v:SF 29 s13 [orig:360 dy ] [360]))) "../System/ray_funkcije.c":170:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 799 798 800 52 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) "../System/ray_funkcije.c":170:9 -1
     (nil))
(debug_insn 800 799 801 52 (debug_marker) "../System/ray_funkcije.c":171:5 -1
     (nil))
(debug_insn 801 800 802 52 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 802 801 803 52 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 803 802 804 52 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) -1
     (nil))
(debug_insn 804 803 805 52 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) -1
     (nil))
(debug_insn 805 804 806 52 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 806 805 807 52 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 807 806 810 52 (debug_marker) "../System/ray_funkcije.c":162:9 -1
     (nil))
(insn 810 807 811 52 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 2 r2 [orig:341 ivtmp_296 ] [341])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [orig:341 ivtmp_296 ] [341])
                (plus:SI (reg:SI 2 r2 [orig:341 ivtmp_296 ] [341])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":162:9 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 811 810 814 52 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 809)
            (pc))) "../System/ray_funkcije.c":162:9 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1015959148 (nil))
 -> 809)
(note 814 811 17 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 17 814 2149 53 (set (reg/v:SI 4 r4 [orig:345 vmt ] [345])
        (reg:SI 2 r2 [orig:341 ivtmp_296 ] [341])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 2149 17 2150 53 (set (pc)
        (label_ref 829)) 284 {*arm_jump}
     (nil)
 -> 829)
(barrier 2150 2149 815)
(code_label 815 2150 816 54 52 (nil) [2 uses])
(note 816 815 817 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(debug_insn 817 816 818 54 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 818 817 819 54 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 819 818 820 54 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) -1
     (nil))
(debug_insn 820 819 821 54 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) -1
     (nil))
(debug_insn 821 820 822 54 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 822 821 823 54 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 823 822 824 54 (debug_marker) "../System/ray_funkcije.c":162:9 -1
     (nil))
(debug_insn 824 823 825 54 (var_location:SI D#9 (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":163:13 -1
     (nil))
(insn 825 824 826 54 (set (reg:SF 31 s15 [703])
        (const_double:SF 1.0e+0 [0x0.8p+1])) 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 826 825 15 54 (set (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])
        (div:SF (reg:SF 31 s15 [703])
            (reg/v:SF 42 s26 [orig:404 dx ] [404]))) 764 {*divsf3_vfp}
     (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
            (reg/v:SF 42 s26 [orig:404 dx ] [404]))
        (nil)))
(insn 15 826 771 54 (set (reg:SI 2 r2 [orig:341 ivtmp_296 ] [341])
        (const_int 15 [0xf])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 771 15 2151 54 (set (reg:SI 0 r0 [988])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":165:80 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(jump_insn 2151 771 2152 54 (set (pc)
        (label_ref 809)) 284 {*arm_jump}
     (nil)
 -> 809)
(barrier 2152 2151 829)
(code_label 829 2152 830 55 54 (nil) [2 uses])
(note 830 829 841 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(note 841 830 844 55 NOTE_INSN_DELETED)
(note 844 841 847 55 NOTE_INSN_DELETED)
(note 847 844 862 55 NOTE_INSN_DELETED)
(note 862 847 863 55 NOTE_INSN_DELETED)
(note 863 862 831 55 NOTE_INSN_DELETED)
(debug_insn 831 863 832 55 (var_location:SI vmt (reg/v:SI 4 r4 [orig:345 vmt ] [345])) -1
     (nil))
(debug_insn 832 831 833 55 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 833 832 834 55 (var_location:SF rvy (reg/v:SF 36 s20 [orig:403 rvy ] [403])) -1
     (nil))
(debug_insn 834 833 835 55 (var_location:SF rvx (reg/v:SF 39 s23 [orig:402 rvx ] [402])) -1
     (nil))
(debug_insn 835 834 836 55 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 836 835 837 55 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 837 836 839 55 (debug_marker) "../System/ray_funkcije.c":175:3 -1
     (nil))
(insn 839 837 838 55 (set (reg:SF 31 s15 [orig:201 _130 ] [201])
        (minus:SF (reg:SF 43 s27 [orig:193 py.37_114 ] [193])
            (reg/v:SF 36 s20 [orig:403 rvy ] [403]))) "../System/ray_funkcije.c":175:43 761 {*subsf3_vfp}
     (nil))
(insn 838 839 840 55 (set (reg:SF 30 s14 [orig:200 _127 ] [200])
        (minus:SF (reg:SF 44 s28 [orig:195 px.38_117 ] [195])
            (reg/v:SF 39 s23 [orig:402 rvx ] [402]))) "../System/ray_funkcije.c":175:17 761 {*subsf3_vfp}
     (nil))
(insn 840 838 842 55 (set (reg:SF 31 s15 [704])
        (mult:SF (reg:SF 31 s15 [orig:201 _130 ] [201])
            (reg:SF 31 s15 [orig:201 _130 ] [201]))) "../System/ray_funkcije.c":175:50 767 {*mulsf3_vfp}
     (nil))
(insn 842 840 2349 55 (set (reg:SF 31 s15 [704])
        (fma:SF (reg:SF 30 s14 [orig:200 _127 ] [200])
            (reg:SF 30 s14 [orig:200 _127 ] [200])
            (reg:SF 31 s15 [704]))) "../System/ray_funkcije.c":175:8 788 {fmasf4}
     (nil))
(insn 2349 842 843 55 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [704])) "../System/ray_funkcije.c":175:8 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 843 2349 845 55 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 845 843 846 55 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [1032])) "../System/ray_funkcije.c":175:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 846 845 2072 55 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>) [0 __builtin_sqrt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 2072 846 849 55 (set (reg:DF 0 r0 [1033])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":175:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 849 2072 850 55 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 850 849 852 55 (set (reg/v:SF 41 s25 [orig:362 d1 ] [362])
        (reg:SF 0 r0 [1034])) "../System/ray_funkcije.c":175:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 852 850 853 55 (var_location:SF d1 (reg/v:SF 41 s25 [orig:362 d1 ] [362])) "../System/ray_funkcije.c":175:6 -1
     (nil))
(debug_insn 853 852 854 55 (debug_marker) "../System/ray_funkcije.c":179:3 -1
     (nil))
(debug_insn 854 853 855 55 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":179:7 -1
     (nil))
(debug_insn 855 854 856 55 (debug_marker) "../System/ray_funkcije.c":180:3 -1
     (nil))
(debug_insn 856 855 857 55 (var_location:SF nTan (reg:SF 40 s24 [orig:183 _97 ] [183])) "../System/ray_funkcije.c":180:16 -1
     (nil))
(debug_insn 857 856 859 55 (debug_marker) "../System/ray_funkcije.c":181:3 -1
     (nil))
(insn 859 857 860 55 (set (reg:DF 2 r2)
        (const_double:DF 4.71238499999999937983830022858455777168273925781e+0 [0x0.96cbdba0a5269p+3])) "../System/ray_funkcije.c":181:6 739 {*thumb2_movdf_vfp}
     (nil))
(insn 860 859 861 55 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":181:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 861 860 864 55 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":181:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 864 861 865 55 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [1035])
                        (const_int 0 [0]))
                    (label_ref 876)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":181:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 876)
(note 865 864 870 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(note 870 865 871 56 NOTE_INSN_DELETED)
(note 871 870 867 56 NOTE_INSN_DELETED)
(insn 867 871 868 56 (set (reg:DF 2 r2)
        (const_double:DF 1.57079499999999994130917002621572464704513549805e+0 [0x0.c90fcf80dc337p+1])) "../System/ray_funkcije.c":181:34 739 {*thumb2_movdf_vfp}
     (nil))
(insn 868 867 869 56 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":181:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 869 868 872 56 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":181:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 872 869 876 56 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1036])
                        (const_int 0 [0]))
                    (label_ref:SI 2153)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":181:34 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 2153)
(code_label 876 872 877 57 56 (nil) [1 uses])
(note 877 876 881 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(note 881 877 882 57 NOTE_INSN_DELETED)
(note 882 881 883 57 NOTE_INSN_DELETED)
(note 883 882 878 57 NOTE_INSN_DELETED)
(debug_insn 878 883 894 57 (debug_marker) "../System/ray_funkcije.c":182:4 -1
     (nil))
(insn 894 878 2350 57 (set (reg/v:SF 29 s13 [orig:363 dy ] [363])
        (mult:SF (reg:SF 40 s24 [orig:183 _97 ] [183])
            (reg/v:SF 42 s26 [orig:404 dx ] [404]))) "../System/ray_funkcije.c":185:7 767 {*mulsf3_vfp}
     (nil))
(insn 2350 894 880 57 (set (reg/v:SI 3 r3 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":182:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 880 2350 884 57 (set (reg:SI 3 r3 [716])
        (div:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":182:21 162 {divsi3}
     (nil))
(insn 884 880 2351 57 (set (reg:SI 8 r8 [720])
        (plus:SI (mult:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
                (reg:SI 3 r3 [716]))
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":182:34 57 {*mla}
     (nil))
(insn 2351 884 885 57 (set (reg:SI 31 s15 [720])
        (reg:SI 8 r8 [720])) "../System/ray_funkcije.c":182:8 728 {*thumb2_movsi_vfp}
     (nil))
(insn 885 2351 886 57 (set (reg/v:SF 35 s19 [orig:397 rx ] [397])
        (float:SF (reg:SI 31 s15 [720]))) "../System/ray_funkcije.c":182:8 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 886 885 887 57 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) "../System/ray_funkcije.c":182:8 -1
     (nil))
(debug_insn 887 886 888 57 (debug_marker) "../System/ray_funkcije.c":183:4 -1
     (nil))
(insn 888 887 2221 57 (set (reg:SF 31 s15 [721])
        (minus:SF (reg/v:SF 35 s19 [orig:397 rx ] [397])
            (reg:SF 44 s28 [orig:195 px.38_117 ] [195]))) "../System/ray_funkcije.c":183:21 761 {*subsf3_vfp}
     (nil))
(debug_insn 2221 888 2352 57 (var_location:SF D#38 (reg:SF 40 s24 [orig:183 _97 ] [183])) -1
     (nil))
(insn 2352 2221 889 57 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (reg:SF 43 s27 [orig:193 py.37_114 ] [193])) "../System/ray_funkcije.c":183:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 889 2352 890 57 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (fma:SF (reg:SF 40 s24 [orig:183 _97 ] [183])
            (reg:SF 31 s15 [721])
            (reg/v:SF 37 s21 [orig:398 ry ] [398]))) "../System/ray_funkcije.c":183:8 788 {fmasf4}
     (nil))
(debug_insn 890 889 891 57 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) "../System/ray_funkcije.c":183:8 -1
     (nil))
(debug_insn 891 890 892 57 (debug_marker) "../System/ray_funkcije.c":184:4 -1
     (nil))
(debug_insn 892 891 893 57 (var_location:SF dx (float:SF (debug_expr:SI D#9))) "../System/ray_funkcije.c":184:7 -1
     (nil))
(debug_insn 893 892 1886 57 (debug_marker) "../System/ray_funkcije.c":185:4 -1
     (nil))
(debug_insn 1886 893 895 57 (var_location:SF D#29 (mult:SF (debug_expr:SF D#38)
        (debug_expr:SF D#30))) -1
     (nil))
(debug_insn 895 1886 2154 57 (var_location:SF dy (debug_expr:SF D#29)) "../System/ray_funkcije.c":185:7 -1
     (nil))
(jump_insn 2154 895 2155 57 (set (pc)
        (label_ref 1004)) "../System/ray_funkcije.c":185:7 284 {*arm_jump}
     (nil)
 -> 1004)
(barrier 2155 2154 2153)
(code_label 2153 2155 899 58 122 (nil) [1 uses])
(note 899 2153 904 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(note 904 899 906 58 NOTE_INSN_DELETED)
(note 906 904 900 58 NOTE_INSN_DELETED)
(debug_insn 900 906 901 58 (debug_marker) "../System/ray_funkcije.c":186:10 -1
     (nil))
(debug_insn 901 900 2456 58 (debug_marker) "../System/ray_funkcije.c":187:4 -1
     (nil))
(insn 2456 901 903 58 (set (reg/v:SI 3 r3 [orig:355 ipx ] [355])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [8 %sfp+-4 S4 A32])) "../System/ray_funkcije.c":187:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 903 2456 905 58 (set (reg:SI 0 r0 [727])
        (div:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":187:21 162 {divsi3}
     (nil))
(insn 905 903 907 58 (set (reg:SI 0 r0 [729])
        (minus:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (mult:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
                (reg:SI 0 r0 [727])))) "../System/ray_funkcije.c":187:21 58 {*mls}
     (nil))
(insn 907 905 908 58 (set (reg:SI 0 r0)
        (minus:SI (reg/v:SI 3 r3 [orig:355 ipx ] [355])
            (reg:SI 0 r0 [729]))) "../System/ray_funkcije.c":187:34 45 {*arm_subsi3_insn}
     (nil))
(call_insn/u 908 907 910 58 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 910 908 912 58 (set (reg:DF 2 r2)
        (const_double:DF 1.00000000000000004792173602385929598312941379845e-4 [0x0.d1b71758e21968p-13])) "../System/ray_funkcije.c":187:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 912 910 915 58 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 915 912 916 58 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 916 915 918 58 (set (reg/v:SF 35 s19 [orig:397 rx ] [397])
        (reg:SF 0 r0 [1037])) "../System/ray_funkcije.c":187:8 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 918 916 919 58 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) "../System/ray_funkcije.c":187:8 -1
     (nil))
(debug_insn 919 918 924 58 (debug_marker) "../System/ray_funkcije.c":188:4 -1
     (nil))
(insn 924 919 2223 58 (set (reg:SI 8 r8 [735])
        (neg:SI (reg:SI 8 r8 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":189:9 164 {*arm_negsi2}
     (nil))
(debug_insn 2223 924 2357 58 (var_location:SI D#40 (reg:SI 8 r8 [735])) -1
     (nil))
(insn 2357 2223 925 58 (set (reg:SI 31 s15 [735])
        (reg:SI 8 r8 [735])) "../System/ray_funkcije.c":189:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 925 2357 920 58 (set (reg/v:SF 42 s26 [orig:404 dx ] [404])
        (float:SF (reg:SI 31 s15 [735]))) "../System/ray_funkcije.c":189:7 809 {*floatsisf2_vfp}
     (nil))
(insn 920 925 928 58 (set (reg:SF 31 s15 [734])
        (minus:SF (reg/v:SF 35 s19 [orig:397 rx ] [397])
            (reg:SF 44 s28 [orig:195 px.38_117 ] [195]))) "../System/ray_funkcije.c":188:21 761 {*subsf3_vfp}
     (nil))
(insn 928 920 2222 58 (set (reg/v:SF 29 s13 [orig:363 dy ] [363])
        (mult:SF (reg:SF 40 s24 [orig:183 _97 ] [183])
            (reg/v:SF 42 s26 [orig:404 dx ] [404]))) "../System/ray_funkcije.c":190:7 767 {*mulsf3_vfp}
     (nil))
(debug_insn 2222 928 2358 58 (var_location:SF D#39 (reg:SF 40 s24 [orig:183 _97 ] [183])) -1
     (nil))
(insn 2358 2222 921 58 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (reg:SF 43 s27 [orig:193 py.37_114 ] [193])) "../System/ray_funkcije.c":188:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 921 2358 922 58 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (fma:SF (reg:SF 40 s24 [orig:183 _97 ] [183])
            (reg:SF 31 s15 [734])
            (reg/v:SF 37 s21 [orig:398 ry ] [398]))) "../System/ray_funkcije.c":188:8 788 {fmasf4}
     (nil))
(debug_insn 922 921 923 58 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) "../System/ray_funkcije.c":188:8 -1
     (nil))
(debug_insn 923 922 1887 58 (debug_marker) "../System/ray_funkcije.c":189:4 -1
     (nil))
(debug_insn 1887 923 926 58 (var_location:SF D#30 (float:SF (debug_expr:SI D#40))) -1
     (nil))
(debug_insn 926 1887 927 58 (var_location:SF dx (debug_expr:SF D#30)) "../System/ray_funkcije.c":189:7 -1
     (nil))
(debug_insn 927 926 1885 58 (debug_marker) "../System/ray_funkcije.c":190:4 -1
     (nil))
(debug_insn 1885 927 929 58 (var_location:SF D#29 (mult:SF (debug_expr:SF D#39)
        (debug_expr:SF D#30))) -1
     (nil))
(debug_insn 929 1885 2156 58 (var_location:SF dy (debug_expr:SF D#29)) "../System/ray_funkcije.c":190:7 -1
     (nil))
(jump_insn 2156 929 2157 58 (set (pc)
        (label_ref 1004)) "../System/ray_funkcije.c":190:7 284 {*arm_jump}
     (nil)
 -> 1004)
(barrier 2157 2156 998)
(code_label 998 2157 932 59 62 (nil) [2 uses])
(note 932 998 933 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(debug_insn 933 932 934 59 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 934 933 935 59 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 935 934 936 59 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 936 935 937 59 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 937 936 938 59 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 938 937 939 59 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 939 938 2020 59 (debug_marker) "../System/ray_funkcije.c":197:4 -1
     (nil))
(debug_insn 2020 939 983 59 (var_location:SF D#35 (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])) -1
     (nil))
(debug_insn 983 2020 940 59 (debug_marker) "../System/ray_funkcije.c":204:5 -1
     (nil))
(insn 940 983 952 59 (set (reg:SF 31 s15 [736])
        (mult:SF (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])
            (reg/v:SF 35 s19 [orig:397 rx ] [397]))) "../System/ray_funkcije.c":197:13 767 {*mulsf3_vfp}
     (nil))
(insn 952 940 941 59 (set (reg:SF 30 s14 [737])
        (mult:SF (reg:SF 33 s17 [orig:354 reciptmp_327 ] [354])
            (reg/v:SF 37 s21 [orig:398 ry ] [398]))) "../System/ray_funkcije.c":198:13 767 {*mulsf3_vfp}
     (nil))
(insn 941 952 2360 59 (set (reg/v:SI 31 s15 [orig:395 wx ] [395])
        (fix:SI (fix:SF (reg:SF 31 s15 [736])))) "../System/ray_funkcije.c":197:7 805 {*truncsisf2_vfp}
     (nil))
(insn 2360 941 942 59 (set (reg/v:SI 3 r3 [orig:395 wx ] [395])
        (reg/v:SI 31 s15 [orig:395 wx ] [395])) "../System/ray_funkcije.c":197:7 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 942 2360 943 59 (var_location:SI wx (reg/v:SI 3 r3 [orig:395 wx ] [395])) "../System/ray_funkcije.c":197:7 -1
     (nil))
(debug_insn 943 942 944 59 (debug_marker) "../System/ray_funkcije.c":198:4 -1
     (nil))
(debug_insn 944 943 945 59 (var_location:SF D#10 (mult:SF (debug_expr:SF D#35)
        (reg/v:SF 37 s21 [orig:398 ry ] [398]))) "../System/ray_funkcije.c":198:13 -1
     (nil))
(debug_insn 945 944 946 59 (var_location:SI wy (fix:SI (debug_expr:SF D#10))) "../System/ray_funkcije.c":198:7 -1
     (nil))
(debug_insn 946 945 2229 59 (debug_marker) "../System/ray_funkcije.c":199:4 -1
     (nil))
(insn 2229 946 953 59 (set (reg:SF 31 s15 [737])
        (reg:SF 30 s14 [737])) "../System/ray_funkcije.c":198:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 953 2229 949 59 (set (reg/v:SI 31 s15 [orig:396 wy ] [396])
        (fix:SI (fix:SF (reg:SF 31 s15 [737])))) "../System/ray_funkcije.c":198:7 805 {*truncsisf2_vfp}
     (nil))
(insn 949 953 950 59 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:395 wx ] [395])
            (const_int 49 [0x31]))) "../System/ray_funkcije.c":199:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 950 949 951 59 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 981)
            (pc))) "../System/ray_funkcije.c":199:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 981)
(note 951 950 2361 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 2361 951 2362 60 (set (reg:SI 1 r1 [1195])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":200:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 2362 2361 962 60 (set (reg/v:SI 5 r5 [orig:396 wy ] [396])
        (reg/v:SI 31 s15 [orig:396 wy ] [396])) "../System/ray_funkcije.c":200:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 962 2362 1894 60 (set (reg:SI 1 r1 [741])
        (plus:SI (mult:SI (reg:SI 0 r0 [986])
                (reg/v:SI 5 r5 [orig:396 wy ] [396]))
            (reg:SI 1 r1 [1195]))) "../System/ray_funkcije.c":200:16 57 {*mla}
     (nil))
(debug_insn 1894 962 2363 60 (var_location:SI D#33 (zero_extend:SI (mem:QI (plus:SI (reg:SI 1 r1 [741])
                (reg/v:SI 3 r3 [orig:395 wx ] [395])) [0 map[wy_440][wx_439]+0 S1 A8]))) -1
     (nil))
(insn 2363 1894 956 60 (set (reg/v:SI 5 r5 [orig:396 wy ] [396])
        (reg/v:SI 31 s15 [orig:396 wy ] [396])) "../System/ray_funkcije.c":199:45 728 {*thumb2_movsi_vfp}
     (nil))
(insn 956 2363 957 60 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:396 wy ] [396])
            (const_int 24 [0x18]))) "../System/ray_funkcije.c":199:45 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 957 956 958 60 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 981)
            (pc))) "../System/ray_funkcije.c":199:45 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 981)
(note 958 957 961 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 961 958 965 61 NOTE_INSN_DELETED)
(note 965 961 964 61 NOTE_INSN_DELETED)
(insn 964 965 966 61 (set (reg:SI 3 r3 [orig:220 _156 ] [220])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 1 r1 [741])
                    (reg/v:SI 3 r3 [orig:395 wx ] [395])) [0 map[wy_440][wx_439]+0 S1 A8]))) "../System/ray_funkcije.c":200:16 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 966 964 967 61 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [orig:220 _156 ] [220])
                        (const_int 0 [0]))
                    (label_ref:SI 981)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":200:6 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 981)
(note 967 966 968 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(debug_insn 968 967 969 62 (debug_marker) "../System/ray_funkcije.c":201:5 -1
     (nil))
(debug_insn 969 968 970 62 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":201:9 -1
     (nil))
(debug_insn 970 969 971 62 (debug_marker) "../System/ray_funkcije.c":202:5 -1
     (nil))
(insn 971 970 972 62 (set (reg/v:SI 11 fp [orig:173 hmt ] [173])
        (reg:SI 3 r3 [orig:220 _156 ] [220])) "../System/ray_funkcije.c":202:9 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 972 971 973 62 (var_location:SI hmt (debug_expr:SI D#33)) -1
     (nil))
(debug_insn 973 972 974 62 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 974 973 975 62 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 975 974 976 62 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) -1
     (nil))
(debug_insn 976 975 977 62 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 977 976 978 62 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 978 977 2158 62 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(jump_insn 2158 978 2159 62 (set (pc)
        (label_ref 1015)) 284 {*arm_jump}
     (nil)
 -> 1015)
(barrier 2159 2158 981)
(code_label 981 2159 982 63 60 (nil) [3 uses])
(note 982 981 997 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(note 997 982 984 63 NOTE_INSN_DELETED)
(insn 984 997 985 63 (set (reg/v:SF 35 s19 [orig:397 rx ] [397])
        (plus:SF (reg/v:SF 35 s19 [orig:397 rx ] [397])
            (reg/v:SF 42 s26 [orig:404 dx ] [404]))) "../System/ray_funkcije.c":204:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 985 984 986 63 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) "../System/ray_funkcije.c":204:9 -1
     (nil))
(debug_insn 986 985 987 63 (debug_marker) "../System/ray_funkcije.c":205:5 -1
     (nil))
(insn 987 986 988 63 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (plus:SF (reg/v:SF 37 s21 [orig:398 ry ] [398])
            (reg/v:SF 29 s13 [orig:363 dy ] [363]))) "../System/ray_funkcije.c":205:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 988 987 989 63 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) "../System/ray_funkcije.c":205:9 -1
     (nil))
(debug_insn 989 988 990 63 (debug_marker) "../System/ray_funkcije.c":206:5 -1
     (nil))
(debug_insn 990 989 991 63 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 991 990 992 63 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 992 991 993 63 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 993 992 994 63 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 994 993 995 63 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 995 994 996 63 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 996 995 999 63 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(insn 999 996 1000 63 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 2 r2 [orig:420 ivtmp_821 ] [420])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [orig:420 ivtmp_821 ] [420])
                (plus:SI (reg:SI 2 r2 [orig:420 ivtmp_821 ] [420])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":196:9 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 1000 999 1003 63 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 998)
            (pc))) "../System/ray_funkcije.c":196:9 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1015959156 (nil))
 -> 998)
(note 1003 1000 19 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 19 1003 2160 64 (set (reg/v:SI 11 fp [orig:173 hmt ] [173])
        (reg:SI 2 r2 [orig:420 ivtmp_821 ] [420])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 2160 19 2161 64 (set (pc)
        (label_ref 1015)) 284 {*arm_jump}
     (nil)
 -> 1015)
(barrier 2161 2160 1004)
(code_label 1004 2161 1005 65 59 (nil) [2 uses])
(note 1005 1004 1006 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1006 1005 1007 65 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 1007 1006 1008 65 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 1008 1007 1009 65 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 1009 1008 1010 65 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1010 1009 1011 65 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 1011 1010 1012 65 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 1012 1011 18 65 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(insn 18 1012 960 65 (set (reg:SI 2 r2 [orig:420 ivtmp_821 ] [420])
        (const_int 15 [0xf])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 960 18 2162 65 (set (reg:SI 0 r0 [986])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":200:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(jump_insn 2162 960 2163 65 (set (pc)
        (label_ref 998)) 284 {*arm_jump}
     (nil)
 -> 998)
(barrier 2163 2162 1015)
(code_label 1015 2163 1016 66 61 (nil) [2 uses])
(note 1016 1015 1027 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(note 1027 1016 1030 66 NOTE_INSN_DELETED)
(note 1030 1027 1033 66 NOTE_INSN_DELETED)
(note 1033 1030 1017 66 NOTE_INSN_DELETED)
(debug_insn 1017 1033 1018 66 (var_location:SI hmt (reg/v:SI 11 fp [orig:173 hmt ] [173])) -1
     (nil))
(debug_insn 1018 1017 1019 66 (var_location:SF rhy (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 1019 1018 1020 66 (var_location:SF rhx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 1020 1019 1021 66 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1021 1020 1022 66 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 1022 1021 1023 66 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 1023 1022 1025 66 (debug_marker) "../System/ray_funkcije.c":209:3 -1
     (nil))
(insn 1025 1023 1024 66 (set (reg:SF 43 s27 [orig:222 _159 ] [222])
        (minus:SF (reg:SF 43 s27 [orig:193 py.37_114 ] [193])
            (reg/v:SF 37 s21 [orig:398 ry ] [398]))) "../System/ray_funkcije.c":209:43 761 {*subsf3_vfp}
     (nil))
(insn 1024 1025 1026 66 (set (reg:SF 44 s28 [orig:221 _157 ] [221])
        (minus:SF (reg:SF 44 s28 [orig:195 px.38_117 ] [195])
            (reg/v:SF 35 s19 [orig:397 rx ] [397]))) "../System/ray_funkcije.c":209:17 761 {*subsf3_vfp}
     (nil))
(insn 1026 1024 1028 66 (set (reg:SF 43 s27 [743])
        (mult:SF (reg:SF 43 s27 [orig:222 _159 ] [222])
            (reg:SF 43 s27 [orig:222 _159 ] [222]))) "../System/ray_funkcije.c":209:50 767 {*mulsf3_vfp}
     (nil))
(insn 1028 1026 2365 66 (set (reg:SF 43 s27 [743])
        (fma:SF (reg:SF 44 s28 [orig:221 _157 ] [221])
            (reg:SF 44 s28 [orig:221 _157 ] [221])
            (reg:SF 43 s27 [743]))) "../System/ray_funkcije.c":209:8 788 {fmasf4}
     (nil))
(insn 2365 1028 1029 66 (set (reg:SF 0 r0)
        (reg:SF 43 s27 [743])) "../System/ray_funkcije.c":209:8 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1029 2365 1031 66 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1031 1029 1032 66 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [1038])) "../System/ray_funkcije.c":209:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1032 1031 2078 66 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>) [0 __builtin_sqrt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 2078 1032 1035 66 (set (reg:DF 0 r0 [1039])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":209:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1035 2078 1036 66 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1036 1035 1038 66 (set (reg/v:SF 33 s17 [orig:340 d2 ] [340])
        (reg:SF 0 r0 [1040])) "../System/ray_funkcije.c":209:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1038 1036 1039 66 (var_location:SF d2 (reg/v:SF 33 s17 [orig:340 d2 ] [340])) "../System/ray_funkcije.c":209:6 -1
     (nil))
(debug_insn 1039 1038 1040 66 (debug_marker) "../System/ray_funkcije.c":213:3 -1
     (nil))
(debug_insn 1040 1039 1041 66 (var_location:SF shade (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":213:9 -1
     (nil))
(debug_insn 1041 1040 2206 66 (debug_marker) "../System/ray_funkcije.c":215:3 -1
     (nil))
(insn 2206 1041 2207 66 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 41 s25 [orig:362 d1 ] [362])
            (reg/v:SF 33 s17 [orig:340 d2 ] [340]))) "../System/ray_funkcije.c":215:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2207 2206 1043 66 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":215:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1043 2207 1044 66 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1850)
            (pc))) "../System/ray_funkcije.c":215:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1850)
(note 1044 1043 22 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 22 1044 23 67 (set (reg/v:SF 37 s21 [orig:398 ry ] [398])
        (reg/v:SF 36 s20 [orig:403 rvy ] [403])) "../System/ray_funkcije.c":215:6 737 {*thumb2_movsf_vfp}
     (nil))
(insn 23 22 24 67 (set (reg/v:SF 35 s19 [orig:397 rx ] [397])
        (reg/v:SF 39 s23 [orig:402 rvx ] [402])) "../System/ray_funkcije.c":215:6 737 {*thumb2_movsf_vfp}
     (nil))
(insn 24 23 21 67 (set (reg/v:SF 33 s17 [orig:340 d2 ] [340])
        (reg/v:SF 41 s25 [orig:362 d1 ] [362])) "../System/ray_funkcije.c":225:6 737 {*thumb2_movsf_vfp}
     (nil))
(insn 21 24 25 67 (set (reg/v:SI 11 fp [orig:173 hmt ] [173])
        (reg/v:SI 4 r4 [orig:345 vmt ] [345])) "../System/ray_funkcije.c":215:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 25 21 2164 67 (set (reg/v:SF 36 s20 [orig:347 shade ] [347])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":213:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(jump_insn 2164 25 2165 67 (set (pc)
        (label_ref 1045)) 284 {*arm_jump}
     (nil)
 -> 1045)
(barrier 2165 2164 1850)
(code_label 1850 2165 1849 68 90 (nil) [1 uses])
(note 1849 1850 20 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 20 1849 1045 68 (set (reg/v:SF 36 s20 [orig:347 shade ] [347])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":219:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(code_label 1045 20 1046 69 63 (nil) [1 uses])
(note 1046 1045 1047 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1047 1046 1048 69 (var_location:SF shade (reg/v:SF 36 s20 [orig:347 shade ] [347])) -1
     (nil))
(debug_insn 1048 1047 1049 69 (var_location:SI hmt (reg/v:SI 11 fp [orig:173 hmt ] [173])) -1
     (nil))
(debug_insn 1049 1048 1050 69 (var_location:SF ry (reg/v:SF 37 s21 [orig:398 ry ] [398])) -1
     (nil))
(debug_insn 1050 1049 1051 69 (var_location:SF rx (reg/v:SF 35 s19 [orig:397 rx ] [397])) -1
     (nil))
(debug_insn 1051 1050 1052 69 (var_location:SF d (reg/v:SF 33 s17 [orig:340 d2 ] [340])) -1
     (nil))
(debug_insn 1052 1051 1053 69 (debug_marker) "../System/ray_funkcije.c":230:3 -1
     (nil))
(insn 1053 1052 1054 69 (set (reg:SF 16 s0)
        (reg/v:SF 33 s17 [orig:340 d2 ] [340])) "../System/ray_funkcije.c":230:9 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 1054 1053 1055 69 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":230:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1055 1054 1056 69 (set (reg/v:SF 42 s26 [orig:364 vis ] [364])
        (reg:SF 16 s0 [1041])) "../System/ray_funkcije.c":230:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1056 1055 1057 69 (var_location:SF vis (reg/v:SF 42 s26 [orig:364 vis ] [364])) "../System/ray_funkcije.c":230:9 -1
     (nil))
(debug_insn 1057 1056 1063 69 (debug_marker) "../System/ray_funkcije.c":232:3 -1
     (nil))
(insn 1063 1057 1067 69 (set (reg:SF 33 s17 [750])
        (mult:SF (reg/v:SF 33 s17 [orig:340 d2 ] [340])
            (reg:SF 34 s18 [orig:418 _769 ] [418]))) "../System/ray_funkcije.c":232:40 767 {*mulsf3_vfp}
     (nil))
(insn 1067 1063 1073 69 (set (reg:SF 29 s13 [751])
        (const_double:SF 3.2e+1 [0x0.8p+6])) "../System/ray_funkcije.c":233:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.2e+1 [0x0.8p+6])
        (nil)))
(insn 1073 1067 2366 69 (set (reg:SF 30 s14 [752])
        (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/ray_funkcije.c":235:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 2366 1073 1059 69 (set (reg/f:SI 3 r3 [970])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [8 %sfp+-16 S4 A32])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1059 2366 1060 69 (set (reg:SI 3 r3 [orig:227 Blocksize.63_164 ] [227])
        (mem/c:SI (reg/f:SI 3 r3 [970]) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(insn 1060 1059 1061 69 (set (reg:SI 5 r5 [748])
        (const_int 100 [0x64])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 100 [0x64])
        (nil)))
(insn 1061 1060 2367 69 (set (reg:SI 2 r2 [747])
        (mult:SI (reg:SI 5 r5 [748])
            (reg:SI 3 r3 [orig:227 Blocksize.63_164 ] [227]))) "../System/ray_funkcije.c":232:28 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 3 r3 [orig:227 Blocksize.63_164 ] [227])
            (const_int 100 [0x64]))
        (nil)))
(insn 2367 1061 1062 69 (set (reg:SI 31 s15 [747])
        (reg:SI 2 r2 [747])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1062 2367 1884 69 (set (reg:SF 31 s15 [749])
        (float:SF (reg:SI 31 s15 [747]))) "../System/ray_funkcije.c":232:35 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 1884 1062 1064 69 (var_location:SF D#28 (div:SF (reg:SF 31 s15 [749])
        (reg:SF 33 s17 [750]))) -1
     (nil))
(insn 1064 1884 1065 69 (set (reg/v:SF 39 s23 [orig:348 lineH ] [348])
        (div:SF (reg:SF 31 s15 [749])
            (reg:SF 33 s17 [750]))) "../System/ray_funkcije.c":232:9 764 {*divsf3_vfp}
     (nil))
(debug_insn 1065 1064 1066 69 (var_location:SF lineH (debug_expr:SF D#28)) "../System/ray_funkcije.c":232:9 -1
     (nil))
(debug_insn 1066 1065 1068 69 (debug_marker) "../System/ray_funkcije.c":233:3 -1
     (nil))
(insn 1068 1066 1069 69 (set (reg/v:SF 41 s25 [orig:365 ty_step ] [365])
        (div:SF (reg:SF 29 s13 [751])
            (reg/v:SF 39 s23 [orig:348 lineH ] [348]))) "../System/ray_funkcije.c":233:9 764 {*divsf3_vfp}
     (expr_list:REG_EQUAL (div:SF (const_double:SF 3.2e+1 [0x0.8p+6])
            (reg/v:SF 39 s23 [orig:348 lineH ] [348]))
        (nil)))
(debug_insn 1069 1068 1070 69 (var_location:SF ty_step (reg/v:SF 41 s25 [orig:365 ty_step ] [365])) "../System/ray_funkcije.c":233:9 -1
     (nil))
(debug_insn 1070 1069 1071 69 (debug_marker) "../System/ray_funkcije.c":234:3 -1
     (nil))
(debug_insn 1071 1070 1072 69 (var_location:SF ty_offset (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":234:9 -1
     (nil))
(debug_insn 1072 1071 2204 69 (debug_marker) "../System/ray_funkcije.c":235:3 -1
     (nil))
(insn 2204 1072 2205 69 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 39 s23 [orig:348 lineH ] [348])
            (reg:SF 30 s14 [752]))) "../System/ray_funkcije.c":235:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2205 2204 1075 69 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":235:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1075 2205 1076 69 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1085)
            (pc))) "../System/ray_funkcije.c":235:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1085)
(note 1076 1075 1077 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(note 1077 1076 1079 70 NOTE_INSN_DELETED)
(insn 1079 1077 1078 70 (set (reg:SF 40 s24 [755])
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":239:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1078 1079 1080 70 (set (reg:SF 31 s15 [754])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":239:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1080 1078 29 70 (set (reg:SF 40 s24 [orig:423 _835 ] [423])
        (fma:SF (neg:SF (reg/v:SF 39 s23 [orig:348 lineH ] [348]))
            (reg:SF 31 s15 [754])
            (reg:SF 40 s24 [755]))) "../System/ray_funkcije.c":239:9 791 {*fmsubsf4}
     (nil))
(insn 29 1080 1081 70 (set (reg/v:SF 33 s17 [orig:393 ty ] [393])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":327:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1081 29 1082 70 (set (reg:SF 31 s15 [756])
        (plus:SF (reg/v:SF 39 s23 [orig:348 lineH ] [348])
            (reg:SF 40 s24 [orig:423 _835 ] [423]))) "../System/ray_funkcije.c":327:24 758 {*addsf3_vfp}
     (nil))
(insn 1082 1081 2368 70 (set (reg/v:SI 31 s15 [orig:389 y ] [389])
        (fix:SI (fix:SF (reg:SF 31 s15 [756])))) "../System/ray_funkcije.c":327:12 805 {*truncsisf2_vfp}
     (nil))
(insn 2368 1082 2166 70 (set (reg/v:SI 5 r5 [orig:389 y ] [389])
        (reg/v:SI 31 s15 [orig:389 y ] [389])) "../System/ray_funkcije.c":327:12 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 2166 2368 2167 70 (set (pc)
        (label_ref 1097)) 284 {*arm_jump}
     (nil)
 -> 1097)
(barrier 2167 2166 1085)
(code_label 1085 2167 1086 71 64 (nil) [1 uses])
(note 1086 1085 1087 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1087 1086 1088 71 (debug_marker) "../System/ray_funkcije.c":236:4 -1
     (nil))
(debug_insn 1088 1087 1089 71 (var_location:SF D#14 (minus:SF (debug_expr:SF D#28)
        (const_double:SF 1.0e+2 [0x0.c8p+7]))) "../System/ray_funkcije.c":236:23 -1
     (nil))
(debug_insn 1089 1088 1090 71 (var_location:SF ty_offset (mult:SF (debug_expr:SF D#14)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":236:14 -1
     (nil))
(debug_insn 1090 1089 1091 71 (debug_marker) "../System/ray_funkcije.c":237:4 -1
     (nil))
(debug_insn 1091 1090 1093 71 (var_location:SF lineH (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/ray_funkcije.c":237:10 -1
     (nil))
(insn 1093 1091 1095 71 (set (reg:SF 33 s17 [757])
        (minus:SF (reg/v:SF 39 s23 [orig:348 lineH ] [348])
            (reg:SF 30 s14 [752]))) "../System/ray_funkcije.c":236:23 761 {*subsf3_vfp}
     (expr_list:REG_EQUAL (minus:SF (reg/v:SF 39 s23 [orig:348 lineH ] [348])
            (const_double:SF 1.0e+2 [0x0.c8p+7]))
        (nil)))
(insn 1095 1093 1094 71 (set (reg:SF 31 s15 [760])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":240:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1094 1095 27 71 (set (reg:SF 33 s17 [759])
        (mult:SF (reg:SF 33 s17 [757])
            (reg/v:SF 41 s25 [orig:365 ty_step ] [365]))) "../System/ray_funkcije.c":240:9 767 {*mulsf3_vfp}
     (nil))
(insn 27 1094 1883 71 (set (reg:SF 40 s24 [orig:423 _835 ] [423])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":240:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1883 27 1096 71 (var_location:SF D#28 (const_double:SF 1.0e+2 [0x0.c8p+7])) -1
     (nil))
(insn 1096 1883 28 71 (set (reg/v:SF 33 s17 [orig:393 ty ] [393])
        (mult:SF (reg:SF 33 s17 [759])
            (reg:SF 31 s15 [760]))) "../System/ray_funkcije.c":240:9 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 33 s17 [759])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 28 1096 1097 71 (set (reg/v:SF 39 s23 [orig:348 lineH ] [348])
        (reg:SF 30 s14 [752])) "../System/ray_funkcije.c":237:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(code_label 1097 28 1098 72 65 (nil) [1 uses])
(note 1098 1097 1108 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(note 1108 1098 1109 72 NOTE_INSN_DELETED)
(note 1109 1108 1099 72 NOTE_INSN_DELETED)
(debug_insn 1099 1109 1100 72 (var_location:SF ty_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1100 1099 1101 72 (var_location:SF lineH (debug_expr:SF D#28)) -1
     (nil))
(debug_insn 1101 1100 1102 72 (debug_marker) "../System/ray_funkcije.c":239:3 -1
     (nil))
(debug_insn 1102 1101 1103 72 (var_location:SF D#8 (mult:SF (debug_expr:SF D#28)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":239:30 -1
     (nil))
(debug_insn 1103 1102 1104 72 (var_location:SF D#7 (minus:SF (const_double:SF 5.0e+1 [0x0.c8p+6])
        (debug_expr:SF D#8))) "../System/ray_funkcije.c":239:9 -1
     (nil))
(debug_insn 1104 1103 1105 72 (var_location:SF lineOff (debug_expr:SF D#7)) "../System/ray_funkcije.c":239:9 -1
     (nil))
(debug_insn 1105 1104 1106 72 (debug_marker) "../System/ray_funkcije.c":240:3 -1
     (nil))
(debug_insn 1106 1105 1107 72 (var_location:SF ty (debug_expr:SF D#6)) "../System/ray_funkcije.c":240:9 -1
     (nil))
(debug_insn 1107 1106 2370 72 (debug_marker) "../System/ray_funkcije.c":241:3 -1
     (nil))
(insn 2370 1107 1110 72 (set (reg:SI 30 s14 [orig:366 scale ] [366])
        (reg:SI 3 r3 [orig:227 Blocksize.63_164 ] [227])) "../System/ray_funkcije.c":241:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1110 2370 1111 72 (set (reg/v:SF 30 s14 [orig:366 scale ] [366])
        (mult:SF (float:SF (reg:SI 30 s14 [orig:366 scale ] [366]))
            (const_double:SF 3.125e-2 [0x0.8p-4]))) "../System/ray_funkcije.c":241:9 832 {*combine_vcvt_f32_s32}
     (nil))
(debug_insn 1111 1110 1112 72 (var_location:SF scale (reg/v:SF 30 s14 [orig:366 scale ] [366])) "../System/ray_funkcije.c":241:9 -1
     (nil))
(debug_insn 1112 1111 1113 72 (debug_marker) "../System/ray_funkcije.c":242:3 -1
     (nil))
(debug_insn 1113 1112 1114 72 (var_location:SF tx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":242:9 -1
     (nil))
(debug_insn 1114 1113 1115 72 (debug_marker) "../System/ray_funkcije.c":243:3 -1
     (nil))
(insn 1115 1114 2202 72 (set (reg:SF 31 s15 [763])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":243:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2202 1115 2203 72 (set (reg:CCFP 101 vfpcc)
        (compare:CCFP (reg/v:SF 36 s20 [orig:347 shade ] [347])
            (reg:SF 31 s15 [763]))) "../System/ray_funkcije.c":243:6 827 {*cmpsf_vfp}
     (nil))
(insn 2203 2202 1117 72 (set (reg:CCFP 100 cc)
        (reg:CCFP 101 vfpcc)) "../System/ray_funkcije.c":243:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1117 2203 1118 72 (set (pc)
        (if_then_else (ne (reg:CCFP 100 cc)
                (const_int 0 [0]))
            (label_ref 1146)
            (pc))) "../System/ray_funkcije.c":243:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1146)
(note 1118 1117 1133 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(note 1133 1118 1134 73 NOTE_INSN_DELETED)
(note 1134 1133 1119 73 NOTE_INSN_DELETED)
(debug_insn 1119 1134 1120 73 (debug_marker) "../System/ray_funkcije.c":244:4 -1
     (nil))
(insn 1120 1119 1131 73 (set (reg:SF 31 s15 [764])
        (div:SF (reg/v:SF 35 s19 [orig:397 rx ] [397])
            (reg/v:SF 30 s14 [orig:366 scale ] [366]))) "../System/ray_funkcije.c":244:19 764 {*divsf3_vfp}
     (nil))
(insn 1131 1120 1121 73 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":245:7 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1121 1131 2372 73 (set (reg:SI 31 s15 [765])
        (fix:SI (fix:SF (reg:SF 31 s15 [764])))) "../System/ray_funkcije.c":244:9 805 {*truncsisf2_vfp}
     (nil))
(insn 2372 1121 1122 73 (set (reg:SI 3 r3 [765])
        (reg:SI 31 s15 [765])) "../System/ray_funkcije.c":244:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1122 2372 1123 73 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [765]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [768])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [765])))
        ]) "../System/ray_funkcije.c":244:28 46 {subsi3_compare0}
     (nil))
(insn 1123 1122 1124 73 (set (reg:SI 3 r3 [767])
        (and:SI (reg:SI 3 r3 [765])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":244:28 90 {*arm_andsi3_insn}
     (nil))
(insn 1124 1123 1125 73 (set (reg:SI 2 r2 [769])
        (and:SI (reg:SI 2 r2 [768])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":244:28 90 {*arm_andsi3_insn}
     (nil))
(insn 1125 1124 2373 73 (set (reg:SI 3 r3 [767])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [769]))
            (reg:SI 3 r3 [767]))) "../System/ray_funkcije.c":244:28 371 {*if_neg_move}
     (nil))
(insn 2373 1125 1126 73 (set (reg:SI 31 s15 [767])
        (reg:SI 3 r3 [767])) "../System/ray_funkcije.c":244:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1126 2373 1127 73 (set (reg/v:SF 35 s19 [orig:349 tx ] [349])
        (float:SF (reg:SI 31 s15 [767]))) "../System/ray_funkcije.c":244:7 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 1127 1126 1128 73 (var_location:SF tx (reg/v:SF 35 s19 [orig:349 tx ] [349])) "../System/ray_funkcije.c":244:7 -1
     (nil))
(debug_insn 1128 1127 2011 73 (debug_marker) "../System/ray_funkcije.c":245:4 -1
     (nil))
(insn 2011 1128 1132 73 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":245:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1132 2011 1135 73 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":245:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 1135 1132 1139 73 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1042])
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":245:7 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1184)
(note 1139 1135 1140 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1140 1139 1141 74 (debug_marker) "../System/ray_funkcije.c":246:5 -1
     (nil))
(insn 1141 1140 1142 74 (set (reg:SF 31 s15 [772])
        (const_double:SF 3.1e+1 [0x0.f8p+5])) "../System/ray_funkcije.c":246:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.1e+1 [0x0.f8p+5])
        (nil)))
(insn 1142 1141 1143 74 (set (reg/v:SF 35 s19 [orig:349 tx ] [349])
        (minus:SF (reg:SF 31 s15 [772])
            (reg/v:SF 35 s19 [orig:349 tx ] [349]))) "../System/ray_funkcije.c":246:8 761 {*subsf3_vfp}
     (nil))
(debug_insn 1143 1142 2168 74 (var_location:SF tx (reg/v:SF 35 s19 [orig:349 tx ] [349])) "../System/ray_funkcije.c":246:8 -1
     (nil))
(jump_insn 2168 1143 2169 74 (set (pc)
        (label_ref 1184)) 284 {*arm_jump}
     (nil)
 -> 1184)
(barrier 2169 2168 1146)
(code_label 1146 2169 1147 75 66 (nil) [1 uses])
(note 1147 1146 1162 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(note 1162 1147 1163 75 NOTE_INSN_DELETED)
(note 1163 1162 1148 75 NOTE_INSN_DELETED)
(debug_insn 1148 1163 1149 75 (debug_marker) "../System/ray_funkcije.c":248:4 -1
     (nil))
(insn 1149 1148 1150 75 (set (reg:SF 31 s15 [773])
        (div:SF (reg/v:SF 37 s21 [orig:398 ry ] [398])
            (reg/v:SF 30 s14 [orig:366 scale ] [366]))) "../System/ray_funkcije.c":248:19 764 {*divsf3_vfp}
     (nil))
(insn 1150 1149 2374 75 (set (reg:SI 31 s15 [774])
        (fix:SI (fix:SF (reg:SF 31 s15 [773])))) "../System/ray_funkcije.c":248:9 805 {*truncsisf2_vfp}
     (nil))
(insn 2374 1150 1151 75 (set (reg:SI 3 r3 [774])
        (reg:SI 31 s15 [774])) "../System/ray_funkcije.c":248:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1151 2374 1152 75 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 3 r3 [774]))
                    (const_int 0 [0])))
            (set (reg:SI 2 r2 [777])
                (minus:SI (const_int 0 [0])
                    (reg:SI 3 r3 [774])))
        ]) "../System/ray_funkcije.c":248:28 46 {subsi3_compare0}
     (nil))
(insn 1152 1151 1153 75 (set (reg:SI 3 r3 [776])
        (and:SI (reg:SI 3 r3 [774])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":248:28 90 {*arm_andsi3_insn}
     (nil))
(insn 1153 1152 1154 75 (set (reg:SI 2 r2 [778])
        (and:SI (reg:SI 2 r2 [777])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":248:28 90 {*arm_andsi3_insn}
     (nil))
(insn 1154 1153 2375 75 (set (reg:SI 3 r3 [776])
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 2 r2 [778]))
            (reg:SI 3 r3 [776]))) "../System/ray_funkcije.c":248:28 371 {*if_neg_move}
     (nil))
(insn 2375 1154 1155 75 (set (reg:SI 31 s15 [776])
        (reg:SI 3 r3 [776])) "../System/ray_funkcije.c":248:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1155 2375 1156 75 (set (reg/v:SF 35 s19 [orig:349 tx ] [349])
        (float:SF (reg:SI 31 s15 [776]))) "../System/ray_funkcije.c":248:7 809 {*floatsisf2_vfp}
     (nil))
(debug_insn 1156 1155 1157 75 (var_location:SF tx (reg/v:SF 35 s19 [orig:349 tx ] [349])) "../System/ray_funkcije.c":248:7 -1
     (nil))
(debug_insn 1157 1156 1159 75 (debug_marker) "../System/ray_funkcije.c":249:4 -1
     (nil))
(insn 1159 1157 1160 75 (set (reg:DF 2 r2)
        (const_double:DF 1.57079499999999994130917002621572464704513549805e+0 [0x0.c90fcf80dc337p+1])) "../System/ray_funkcije.c":249:7 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1160 1159 1161 75 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":249:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1161 1160 1164 75 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":249:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 1164 1161 1168 75 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1043])
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":249:7 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1184)
(note 1168 1164 1173 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(note 1173 1168 1174 76 NOTE_INSN_DELETED)
(note 1174 1173 1171 76 NOTE_INSN_DELETED)
(insn 1171 1174 1170 76 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":249:26 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1170 1171 1172 76 (set (reg:DF 2 r2)
        (const_double:DF 4.71238499999999937983830022858455777168273925781e+0 [0x0.96cbdba0a5269p+3])) "../System/ray_funkcije.c":249:26 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1172 1170 1175 76 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":249:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 1175 1172 1179 76 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1044])
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":249:26 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1184)
(note 1179 1175 1180 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1180 1179 1181 77 (debug_marker) "../System/ray_funkcije.c":250:5 -1
     (nil))
(insn 1181 1180 1182 77 (set (reg:SF 31 s15 [783])
        (const_double:SF 3.1e+1 [0x0.f8p+5])) "../System/ray_funkcije.c":250:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.1e+1 [0x0.f8p+5])
        (nil)))
(insn 1182 1181 1183 77 (set (reg/v:SF 35 s19 [orig:349 tx ] [349])
        (minus:SF (reg:SF 31 s15 [783])
            (reg/v:SF 35 s19 [orig:349 tx ] [349]))) "../System/ray_funkcije.c":250:8 761 {*subsf3_vfp}
     (nil))
(debug_insn 1183 1182 1184 77 (var_location:SF tx (reg/v:SF 35 s19 [orig:349 tx ] [349])) "../System/ray_funkcije.c":250:8 -1
     (nil))
(code_label 1184 1183 1185 78 67 (nil) [4 uses])
(note 1185 1184 1195 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(note 1195 1185 1186 78 NOTE_INSN_DELETED)
(debug_insn 1186 1195 1187 78 (var_location:SF tx (reg/v:SF 35 s19 [orig:349 tx ] [349])) -1
     (nil))
(debug_insn 1187 1186 1188 78 (debug_marker) "../System/ray_funkcije.c":255:3 -1
     (nil))
(debug_insn 1188 1187 1189 78 (var_location:SI wallx (fix:SI (mult:SF (plus:SF (reg/v:SF 38 s22 [orig:339 z ] [339])
                (const_double:SF 3.0e+1 [0x0.fp+5]))
            (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])))) "../System/ray_funkcije.c":255:7 -1
     (nil))
(debug_insn 1189 1188 1190 78 (debug_marker) "../System/ray_funkcije.c":256:3 -1
     (nil))
(debug_insn 1190 1189 1191 78 (var_location:SI D#15 (fix:SI (mult:SF (plus:SF (reg/v:SF 38 s22 [orig:339 z ] [339])
                (const_double:SF 3.0e+1 [0x0.fp+5]))
            (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])))) "../System/ray_funkcije.c":255:7 -1
     (nil))
(insn 1191 1190 1192 78 (set (reg:SF 31 s15 [785])
        (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":255:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 1192 1191 1193 78 (set (reg:SF 31 s15 [784])
        (plus:SF (reg/v:SF 38 s22 [orig:339 z ] [339])
            (reg:SF 31 s15 [785]))) "../System/ray_funkcije.c":255:22 758 {*addsf3_vfp}
     (expr_list:REG_EQUAL (plus:SF (reg/v:SF 38 s22 [orig:339 z ] [339])
            (const_double:SF 3.0e+1 [0x0.fp+5]))
        (nil)))
(insn 1193 1192 1194 78 (set (reg:SF 30 s14 [787])
        (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])) "../System/ray_funkcije.c":255:47 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])
        (nil)))
(insn 1194 1193 1196 78 (set (reg:SF 31 s15 [786])
        (mult:SF (reg:SF 31 s15 [784])
            (reg:SF 30 s14 [787]))) "../System/ray_funkcije.c":255:47 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 31 s15 [784])
            (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1]))
        (nil)))
(insn 1196 1194 2376 78 (set (reg:SI 31 s15 [1207])
        (fix:SI (fix:SF (reg:SF 31 s15 [786])))) "../System/ray_funkcije.c":256:9 805 {*truncsisf2_vfp}
     (nil))
(insn 2376 1196 1197 78 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1207])) "../System/ray_funkcije.c":256:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1197 2376 1199 78 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1199 1197 1201 78 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":256:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1201 1199 1205 78 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1205 1201 1206 78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1206 1205 1208 78 (set (reg/v:SI 8 r8 [orig:368 wallx ] [368])
        (reg:SI 0 r0 [1045])) "../System/ray_funkcije.c":256:9 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1208 1206 1209 78 (var_location:SI wallx (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":256:9 -1
     (nil))
(debug_insn 1209 1208 1210 78 (debug_marker) "../System/ray_funkcije.c":257:3 -1
     (nil))
(debug_insn 1210 1209 1211 78 (var_location:SI wallx (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":257:9 -1
     (nil))
(debug_insn 1211 1210 1212 78 (debug_marker) "../System/ray_funkcije.c":259:3 -1
     (nil))
(debug_insn 1212 1211 1213 78 (debug_marker) "../System/ray_funkcije.c":259:8 -1
     (nil))
(debug_insn 1213 1212 1214 78 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 1214 1213 1215 78 (var_location:SF ty (debug_expr:SF D#6)) -1
     (nil))
(debug_insn 1215 1214 2200 78 (debug_marker) "../System/ray_funkcije.c":259:19 -1
     (nil))
(insn 2200 1215 2201 78 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 39 s23 [orig:348 lineH ] [348])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":259:3 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2201 2200 1218 78 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":259:3 817 {*movcc_vfp}
     (nil))
(jump_insn 1218 2201 1372 78 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1244)
            (pc))) "../System/ray_funkcije.c":259:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1244)
(code_label 1372 1218 1219 79 78 (nil) [1 uses])
(note 1219 1372 1220 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1220 1219 1221 79 (debug_marker) "../System/ray_funkcije.c":297:3 -1
     (nil))
(debug_insn 1221 1220 1222 79 (var_location:SI stropx (debug_expr:SI D#15)) "../System/ray_funkcije.c":297:7 -1
     (nil))
(debug_insn 1222 1221 1223 79 (debug_marker) "../System/ray_funkcije.c":298:3 -1
     (nil))
(debug_insn 1223 1222 1224 79 (var_location:SI stropx (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":298:10 -1
     (nil))
(debug_insn 1224 1223 1225 79 (debug_marker) "../System/ray_funkcije.c":299:3 -1
     (nil))
(debug_insn 1225 1224 1226 79 (var_location:SI stropx (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":299:10 -1
     (nil))
(debug_insn 1226 1225 1227 79 (debug_marker) "../System/ray_funkcije.c":300:3 -1
     (nil))
(debug_insn 1227 1226 1228 79 (var_location:SI tlax (debug_expr:SI D#15)) "../System/ray_funkcije.c":300:7 -1
     (nil))
(debug_insn 1228 1227 1229 79 (debug_marker) "../System/ray_funkcije.c":301:3 -1
     (nil))
(debug_insn 1229 1228 1230 79 (var_location:SI tlax (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":301:8 -1
     (nil))
(debug_insn 1230 1229 1231 79 (debug_marker) "../System/ray_funkcije.c":302:3 -1
     (nil))
(debug_insn 1231 1230 1232 79 (var_location:SI tlax (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":302:8 -1
     (nil))
(debug_insn 1232 1231 2377 79 (debug_marker) "../System/ray_funkcije.c":303:3 -1
     (nil))
(insn 2377 1232 1234 79 (set (reg/f:SI 3 r3 [967])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-24 S4 A32])) "../System/ray_funkcije.c":303:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1234 2377 1235 79 (set (reg:SF 33 s17 [orig:794 angle ] [794])
        (mem/c:SF (reg/f:SI 3 r3 [967]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":303:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
            (nil))))
(insn 1235 1234 1236 79 (set (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])
        (minus:SF (reg:SF 33 s17 [orig:794 angle ] [794])
            (reg/v:SF 32 s16 [orig:346 newAngle ] [346]))) "../System/ray_funkcije.c":303:9 761 {*subsf3_vfp}
     (nil))
(debug_insn 1236 1235 1237 79 (var_location:SF floorAngle (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":303:9 -1
     (nil))
(debug_insn 1237 1236 2198 79 (debug_marker) "../System/ray_funkcije.c":304:3 -1
     (nil))
(insn 2198 1237 2199 79 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":304:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2199 2198 1240 79 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":304:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1240 2199 2171 79 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2170)
            (pc))) "../System/ray_funkcije.c":304:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 2170)
(note 2171 1240 2172 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2172 2171 2173 80 (set (pc)
        (label_ref 1376)) 284 {*arm_jump}
     (nil)
 -> 1376)
(barrier 2173 2172 1244)
(code_label 1244 2173 1245 81 71 (nil) [1 uses])
(note 1245 1244 1246 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1246 1245 31 81 (set (reg:SF 36 s20 [orig:216 _151 ] [216])
        (mult:SF (reg/v:SF 36 s20 [orig:347 shade ] [347])
            (reg/v:SF 42 s26 [orig:364 vis ] [364]))) 767 {*mulsf3_vfp}
     (nil))
(insn 31 1246 1247 81 (set (reg:SF 31 s15 [orig:279 _226 ] [279])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":259:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1247 31 2378 81 (set (reg:SI 30 s14 [orig:429 _849 ] [429])
        (fix:SI (fix:SF (reg/v:SF 35 s19 [orig:349 tx ] [349])))) "../System/ray_funkcije.c":261:33 805 {*truncsisf2_vfp}
     (nil))
(insn 2378 1247 1276 81 (set (reg:SI 3 r3 [orig:429 _849 ] [429])
        (reg:SI 30 s14 [orig:429 _849 ] [429])) "../System/ray_funkcije.c":261:33 728 {*thumb2_movsi_vfp}
     (nil))
(note 1276 2378 1304 81 NOTE_INSN_DELETED)
(note 1304 1276 30 81 NOTE_INSN_DELETED)
(insn 30 1304 1340 81 (set (reg/v:SI 10 r10 [orig:394 j ] [394])
        (const_int 0 [0])) "../System/ray_funkcije.c":259:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(note 1340 30 2251 81 NOTE_INSN_DELETED)
(insn 2251 1340 2253 81 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [8 %sfp+-12 S4 A32])
        (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 2253 2251 1369 81 (set (reg:SI 9 r9 [orig:429 _849 ] [429])
        (reg:SI 3 r3 [orig:429 _849 ] [429])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 1369 2253 1248 82 77 (nil) [1 uses])
(note 1248 1369 1253 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(note 1253 1248 1256 82 NOTE_INSN_DELETED)
(note 1256 1253 1249 82 NOTE_INSN_DELETED)
(debug_insn 1249 1256 1250 82 (var_location:SI j (reg/v:SI 10 r10 [orig:394 j ] [394])) -1
     (nil))
(debug_insn 1250 1249 1251 82 (var_location:SF ty (reg/v:SF 33 s17 [orig:393 ty ] [393])) -1
     (nil))
(debug_insn 1251 1250 1252 82 (debug_marker) "../System/ray_funkcije.c":261:4 -1
     (nil))
(insn 1252 1251 2379 82 (set (reg:SI 30 s14 [796])
        (fix:SI (fix:SF (reg/v:SF 33 s17 [orig:393 ty ] [393])))) "../System/ray_funkcije.c":261:17 805 {*truncsisf2_vfp}
     (nil))
(insn 2379 1252 1254 82 (set (reg:SI 3 r3 [796])
        (reg:SI 30 s14 [796])) "../System/ray_funkcije.c":261:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1254 2379 1257 82 (set (reg:SI 3 r3 [798])
        (plus:SI (ashift:SI (reg:SI 3 r3 [796])
                (const_int 5 [0x5]))
            (reg:SI 9 r9 [orig:429 _849 ] [429]))) "../System/ray_funkcije.c":261:31 318 {*add_shiftsi}
     (nil))
(insn 1257 1254 1259 82 (set (reg:SI 3 r3 [801])
        (plus:SI (ashift:SI (reg:SI 3 r3 [798])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [798]))) "../System/ray_funkcije.c":261:8 318 {*add_shiftsi}
     (nil))
(debug_insn 1259 1257 1260 82 (var_location:SI pixel (reg:SI 3 r3 [801])) "../System/ray_funkcije.c":261:8 -1
     (nil))
(debug_insn 1260 1259 1261 82 (debug_marker) "../System/ray_funkcije.c":263:4 -1
     (nil))
(debug_insn 1261 1260 1262 82 (var_location:SI red (const_int 0 [0])) "../System/ray_funkcije.c":263:8 -1
     (nil))
(debug_insn 1262 1261 1263 82 (var_location:SI blue (const_int 0 [0])) "../System/ray_funkcije.c":263:17 -1
     (nil))
(debug_insn 1263 1262 1264 82 (var_location:SI green (const_int 0 [0])) "../System/ray_funkcije.c":263:27 -1
     (nil))
(debug_insn 1264 1263 1265 82 (debug_marker) "../System/ray_funkcije.c":264:4 -1
     (nil))
(insn 1265 1264 1266 82 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 11 fp [orig:173 hmt ] [173])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":264:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1266 1265 1267 82 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) "../System/ray_funkcije.c":264:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 357913950 (nil))
 -> 1273)
(note 1267 1266 1303 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1303 1267 2380 83 (debug_marker) "../System/ray_funkcije.c":271:5 -1
     (nil))
(insn 2380 1303 1312 83 (set (reg:SI 2 r2 [1211])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) "../System/ray_funkcije.c":272:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1312 2380 1268 83 (set (reg/f:SI 2 r2 [821])
        (plus:SI (reg:SI 2 r2 [1211])
            (reg:SI 3 r3 [801]))) "../System/ray_funkcije.c":272:19 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [801])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))
        (nil)))
(insn 1268 1312 32 83 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 11 fp [orig:173 hmt ] [173])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":264:4 268 {*arm_cmpsi_insn}
     (nil))
(insn 32 1268 1269 83 (set (reg/v:SI 4 r4 [orig:352 green ] [352])
        (const_int 0 [0])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 1269 32 1272 83 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1301)
            (pc))) "../System/ray_funkcije.c":264:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870918 (nil))
 -> 1301)
(note 1272 1269 33 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 33 1272 34 84 (set (reg/v:SI 7 r7 [orig:351 blue ] [351])
        (reg/v:SI 4 r4 [orig:352 green ] [352])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 34 33 2174 84 (set (reg/v:SI 5 r5 [orig:350 red ] [350])
        (reg/v:SI 4 r4 [orig:352 green ] [352])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 2174 34 2175 84 (set (pc)
        (label_ref 1327)) 284 {*arm_jump}
     (nil)
 -> 1327)
(barrier 2175 2174 1273)
(code_label 1273 2175 1274 85 74 (nil) [1 uses])
(note 1274 1273 1275 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1275 1274 2381 85 (debug_marker) "../System/ray_funkcije.c":266:5 -1
     (nil))
(insn 2381 1275 1284 85 (set (reg:SI 1 r1 [1212])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) "../System/ray_funkcije.c":267:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1284 2381 2382 85 (set (reg/f:SI 2 r2 [807])
        (plus:SI (reg:SI 1 r1 [1212])
            (reg:SI 3 r3 [801]))) "../System/ray_funkcije.c":267:24 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [801])
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
        (nil)))
(note 2382 1284 1277 85 NOTE_INSN_DELETED)
(insn 1277 2382 2383 85 (set (reg:SI 3 r3 [orig:803 t_brickWall[pixel_426] ] [803])
        (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 1 r1 [1213])
                    (reg:SI 3 r3 [801])) [0 t_brickWall[pixel_426]+0 S1 A8]))) "../System/ray_funkcije.c":266:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [801])
                    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 t_brickWall[pixel_426]+0 S1 A8]))
        (nil)))
(insn 2383 1277 1278 85 (set (reg:SI 28 s12 [orig:803 t_brickWall[pixel_426] ] [803])
        (reg:SI 3 r3 [orig:803 t_brickWall[pixel_426] ] [803])) "../System/ray_funkcije.c":266:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1278 2383 1285 85 (set (reg:SF 28 s12 [804])
        (float:SF (reg:SI 28 s12 [orig:803 t_brickWall[pixel_426] ] [803]))) "../System/ray_funkcije.c":266:34 809 {*floatsisf2_vfp}
     (nil))
(insn 1285 1278 2384 85 (set (reg:SI 3 r3 [orig:808 t_brickWall[_192] ] [808])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [807])
                    (const_int 1 [0x1])) [0 t_brickWall[_192]+0 S1 A8]))) "../System/ray_funkcije.c":267:24 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 2384 1285 1293 85 (set (reg:SI 29 s13 [orig:808 t_brickWall[_192] ] [808])
        (reg:SI 3 r3 [orig:808 t_brickWall[_192] ] [808])) "../System/ray_funkcije.c":267:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1293 2384 2385 85 (set (reg:SI 3 r3 [orig:813 t_brickWall[_198] ] [813])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [807])
                    (const_int 2 [0x2])) [0 t_brickWall[_198]+0 S1 A8]))) "../System/ray_funkcije.c":268:23 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 2385 1293 1286 85 (set (reg:SI 30 s14 [orig:813 t_brickWall[_198] ] [813])
        (reg:SI 3 r3 [orig:813 t_brickWall[_198] ] [813])) "../System/ray_funkcije.c":268:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1286 2385 1294 85 (set (reg:SF 29 s13 [809])
        (float:SF (reg:SI 29 s13 [orig:808 t_brickWall[_192] ] [808]))) "../System/ray_funkcije.c":267:36 809 {*floatsisf2_vfp}
     (nil))
(insn 1294 1286 1279 85 (set (reg:SF 30 s14 [814])
        (float:SF (reg:SI 30 s14 [orig:813 t_brickWall[_198] ] [813]))) "../System/ray_funkcije.c":268:35 809 {*floatsisf2_vfp}
     (nil))
(insn 1279 1294 1287 85 (set (reg:SF 28 s12 [805])
        (mult:SF (reg:SF 28 s12 [804])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":266:42 767 {*mulsf3_vfp}
     (nil))
(insn 1287 1279 1295 85 (set (reg:SF 29 s13 [810])
        (mult:SF (reg:SF 29 s13 [809])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":267:44 767 {*mulsf3_vfp}
     (nil))
(insn 1295 1287 1280 85 (set (reg:SF 30 s14 [815])
        (mult:SF (reg:SF 30 s14 [814])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":268:43 767 {*mulsf3_vfp}
     (nil))
(insn 1280 1295 2386 85 (set (reg/v:SI 28 s12 [orig:350 red ] [350])
        (fix:SI (fix:SF (reg:SF 28 s12 [805])))) "../System/ray_funkcije.c":266:9 805 {*truncsisf2_vfp}
     (nil))
(insn 2386 1280 1281 85 (set (reg/v:SI 5 r5 [orig:350 red ] [350])
        (reg/v:SI 28 s12 [orig:350 red ] [350])) "../System/ray_funkcije.c":266:9 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1281 2386 1282 85 (var_location:SI red (reg/v:SI 5 r5 [orig:350 red ] [350])) "../System/ray_funkcije.c":266:9 -1
     (nil))
(debug_insn 1282 1281 1288 85 (debug_marker) "../System/ray_funkcije.c":267:5 -1
     (nil))
(insn 1288 1282 2387 85 (set (reg/v:SI 29 s13 [orig:352 green ] [352])
        (fix:SI (fix:SF (reg:SF 29 s13 [810])))) "../System/ray_funkcije.c":267:11 805 {*truncsisf2_vfp}
     (nil))
(insn 2387 1288 1289 85 (set (reg/v:SI 4 r4 [orig:352 green ] [352])
        (reg/v:SI 29 s13 [orig:352 green ] [352])) "../System/ray_funkcije.c":267:11 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1289 2387 1290 85 (var_location:SI green (reg/v:SI 4 r4 [orig:352 green ] [352])) "../System/ray_funkcije.c":267:11 -1
     (nil))
(debug_insn 1290 1289 1296 85 (debug_marker) "../System/ray_funkcije.c":268:5 -1
     (nil))
(insn 1296 1290 2388 85 (set (reg/v:SI 30 s14 [orig:351 blue ] [351])
        (fix:SI (fix:SF (reg:SF 30 s14 [815])))) "../System/ray_funkcije.c":268:10 805 {*truncsisf2_vfp}
     (nil))
(insn 2388 1296 1297 85 (set (reg/v:SI 7 r7 [orig:351 blue ] [351])
        (reg/v:SI 30 s14 [orig:351 blue ] [351])) "../System/ray_funkcije.c":268:10 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1297 2388 1298 85 (var_location:SI blue (reg/v:SI 7 r7 [orig:351 blue ] [351])) "../System/ray_funkcije.c":268:10 -1
     (nil))
(debug_insn 1298 1297 2176 85 (debug_marker) "../System/ray_funkcije.c":269:5 -1
     (nil))
(jump_insn 2176 1298 2177 85 (set (pc)
        (label_ref 1327)) "../System/ray_funkcije.c":269:5 284 {*arm_jump}
     (nil)
 -> 1327)
(barrier 2177 2176 1301)
(code_label 1301 2177 1302 86 75 (nil) [1 uses])
(note 1302 1301 2389 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 2389 1302 1305 86 (set (reg:SI 1 r1 [1220])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) "../System/ray_funkcije.c":271:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1305 2389 2390 86 (set (reg:SI 3 r3 [orig:817 t_wall[pixel_426] ] [817])
        (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 1 r1 [1220])
                    (reg:SI 3 r3 [801])) [0 t_wall[pixel_426]+0 S1 A8]))) "../System/ray_funkcije.c":271:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [801])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_426]+0 S1 A8]))
        (nil)))
(insn 2390 1305 1313 86 (set (reg:SI 28 s12 [orig:817 t_wall[pixel_426] ] [817])
        (reg:SI 3 r3 [orig:817 t_wall[pixel_426] ] [817])) "../System/ray_funkcije.c":271:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1313 2390 2391 86 (set (reg:SI 3 r3 [orig:822 t_wall[_209] ] [822])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [821])
                    (const_int 1 [0x1])) [0 t_wall[_209]+0 S1 A8]))) "../System/ray_funkcije.c":272:19 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 2391 1313 1321 86 (set (reg:SI 29 s13 [orig:822 t_wall[_209] ] [822])
        (reg:SI 3 r3 [orig:822 t_wall[_209] ] [822])) "../System/ray_funkcije.c":272:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1321 2391 2392 86 (set (reg:SI 3 r3 [orig:827 t_wall[_215] ] [827])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [821])
                    (const_int 2 [0x2])) [0 t_wall[_215]+0 S1 A8]))) "../System/ray_funkcije.c":273:18 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 2392 1321 1306 86 (set (reg:SI 30 s14 [orig:827 t_wall[_215] ] [827])
        (reg:SI 3 r3 [orig:827 t_wall[_215] ] [827])) "../System/ray_funkcije.c":273:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1306 2392 1314 86 (set (reg:SF 28 s12 [818])
        (float:SF (reg:SI 28 s12 [orig:817 t_wall[pixel_426] ] [817]))) "../System/ray_funkcije.c":271:29 809 {*floatsisf2_vfp}
     (nil))
(insn 1314 1306 1322 86 (set (reg:SF 29 s13 [823])
        (float:SF (reg:SI 29 s13 [orig:822 t_wall[_209] ] [822]))) "../System/ray_funkcije.c":272:31 809 {*floatsisf2_vfp}
     (nil))
(insn 1322 1314 1307 86 (set (reg:SF 30 s14 [828])
        (float:SF (reg:SI 30 s14 [orig:827 t_wall[_215] ] [827]))) "../System/ray_funkcije.c":273:30 809 {*floatsisf2_vfp}
     (nil))
(insn 1307 1322 1315 86 (set (reg:SF 28 s12 [819])
        (mult:SF (reg:SF 28 s12 [818])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":271:37 767 {*mulsf3_vfp}
     (nil))
(insn 1315 1307 1323 86 (set (reg:SF 29 s13 [824])
        (mult:SF (reg:SF 29 s13 [823])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":272:39 767 {*mulsf3_vfp}
     (nil))
(insn 1323 1315 1308 86 (set (reg:SF 30 s14 [829])
        (mult:SF (reg:SF 30 s14 [828])
            (reg:SF 36 s20 [orig:216 _151 ] [216]))) "../System/ray_funkcije.c":273:38 767 {*mulsf3_vfp}
     (nil))
(insn 1308 1323 2393 86 (set (reg/v:SI 28 s12 [orig:350 red ] [350])
        (fix:SI (fix:SF (reg:SF 28 s12 [819])))) "../System/ray_funkcije.c":271:9 805 {*truncsisf2_vfp}
     (nil))
(insn 2393 1308 1309 86 (set (reg/v:SI 5 r5 [orig:350 red ] [350])
        (reg/v:SI 28 s12 [orig:350 red ] [350])) "../System/ray_funkcije.c":271:9 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1309 2393 1310 86 (var_location:SI red (reg/v:SI 5 r5 [orig:350 red ] [350])) "../System/ray_funkcije.c":271:9 -1
     (nil))
(debug_insn 1310 1309 1316 86 (debug_marker) "../System/ray_funkcije.c":272:5 -1
     (nil))
(insn 1316 1310 2394 86 (set (reg/v:SI 29 s13 [orig:352 green ] [352])
        (fix:SI (fix:SF (reg:SF 29 s13 [824])))) "../System/ray_funkcije.c":272:11 805 {*truncsisf2_vfp}
     (nil))
(insn 2394 1316 1317 86 (set (reg/v:SI 4 r4 [orig:352 green ] [352])
        (reg/v:SI 29 s13 [orig:352 green ] [352])) "../System/ray_funkcije.c":272:11 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1317 2394 1318 86 (var_location:SI green (reg/v:SI 4 r4 [orig:352 green ] [352])) "../System/ray_funkcije.c":272:11 -1
     (nil))
(debug_insn 1318 1317 1324 86 (debug_marker) "../System/ray_funkcije.c":273:5 -1
     (nil))
(insn 1324 1318 2395 86 (set (reg/v:SI 30 s14 [orig:351 blue ] [351])
        (fix:SI (fix:SF (reg:SF 30 s14 [829])))) "../System/ray_funkcije.c":273:10 805 {*truncsisf2_vfp}
     (nil))
(insn 2395 1324 1325 86 (set (reg/v:SI 7 r7 [orig:351 blue ] [351])
        (reg/v:SI 30 s14 [orig:351 blue ] [351])) "../System/ray_funkcije.c":273:10 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1325 2395 1326 86 (var_location:SI blue (reg/v:SI 7 r7 [orig:351 blue ] [351])) "../System/ray_funkcije.c":273:10 -1
     (nil))
(debug_insn 1326 1325 1327 86 (debug_marker) "../System/ray_funkcije.c":274:5 -1
     (nil))
(code_label 1327 1326 1328 87 76 (nil) [2 uses])
(note 1328 1327 1336 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(note 1336 1328 1351 87 NOTE_INSN_DELETED)
(note 1351 1336 1355 87 NOTE_INSN_DELETED)
(note 1355 1351 1329 87 NOTE_INSN_DELETED)
(debug_insn 1329 1355 1330 87 (var_location:SI green (reg/v:SI 4 r4 [orig:352 green ] [352])) -1
     (nil))
(debug_insn 1330 1329 1331 87 (var_location:SI blue (reg/v:SI 7 r7 [orig:351 blue ] [351])) -1
     (nil))
(debug_insn 1331 1330 1332 87 (var_location:SI red (reg/v:SI 5 r5 [orig:350 red ] [350])) -1
     (nil))
(debug_insn 1332 1331 1333 87 (debug_marker) "../System/ray_funkcije.c":284:4 -1
     (nil))
(debug_insn 1333 1332 1334 87 (var_location:SI wally (fix:SI (plus:SF (reg:SF 31 s15 [orig:279 _226 ] [279])
            (reg:SF 40 s24 [orig:423 _835 ] [423])))) "../System/ray_funkcije.c":284:8 -1
     (nil))
(debug_insn 1334 1333 1335 87 (debug_marker) "../System/ray_funkcije.c":285:4 -1
     (nil))
(insn 1335 1334 1364 87 (set (reg:SF 31 s15 [830])
        (plus:SF (reg:SF 31 s15 [orig:279 _226 ] [279])
            (reg:SF 40 s24 [orig:423 _835 ] [423]))) "../System/ray_funkcije.c":284:24 758 {*addsf3_vfp}
     (nil))
(insn 1364 1335 1337 87 (set (reg/v:SI 10 r10 [orig:394 j ] [394])
        (plus:SI (reg/v:SI 10 r10 [orig:394 j ] [394])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":259:31 7 {*arm_addsi3}
     (nil))
(insn 1337 1364 2396 87 (set (reg:SI 31 s15 [1227])
        (fix:SI (fix:SF (reg:SF 31 s15 [830])))) "../System/ray_funkcije.c":285:10 805 {*truncsisf2_vfp}
     (nil))
(insn 2396 1337 1338 87 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1227])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1338 2396 1999 87 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1999 1338 1342 87 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1342 1999 1347 87 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1347 1342 1343 87 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:351 blue ] [351])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1343 1347 1345 87 (set (reg:DF 6 r6 [833])
        (reg:DF 0 r0 [1046])) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (nil))
(debug_insn 1345 1343 1346 87 (var_location:SI wally (fix:SI (reg:DF 6 r6 [833]))) "../System/ray_funkcije.c":285:10 -1
     (nil))
(debug_insn 1346 1345 1348 87 (debug_marker) "../System/ray_funkcije.c":287:4 -1
     (nil))
(insn 1348 1346 1349 87 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:352 green ] [352])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1349 1348 1350 87 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:350 red ] [350])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1350 1349 1352 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":288:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1352 1350 2459 87 (set (reg:SI 2 r2 [orig:834 _224 ] [834])
        (zero_extend:SI (reg:HI 0 r0 [1047]))) "../System/ray_funkcije.c":287:4 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 2459 1352 1353 87 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [8 %sfp+-28 S4 A32])
        (reg:SI 2 r2 [orig:834 _224 ] [834])) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1353 2459 1354 87 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [833])) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1354 1353 2087 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2087 1354 2460 87 (set (reg:SI 1 r1 [1048])
        (reg:SI 0 r0)) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 2460 2087 1358 87 (set (reg:SI 2 r2 [orig:834 _224 ] [834])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [8 %sfp+-28 S4 A32])) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1358 2460 1359 87 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1359 1358 1360 87 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":287:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1360 1359 2397 87 (debug_marker) "../System/ray_funkcije.c":289:4 -1
     (nil))
(insn 2397 1360 1368 87 (set (reg/v:SI 31 s15 [orig:394 j ] [394])
        (reg/v:SI 10 r10 [orig:394 j ] [394])) "../System/ray_funkcije.c":259:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1368 2397 1361 87 (set (reg:SF 31 s15 [orig:279 _226 ] [279])
        (float:SF (reg/v:SI 31 s15 [orig:394 j ] [394]))) "../System/ray_funkcije.c":259:21 809 {*floatsisf2_vfp}
     (nil))
(insn 1361 1368 1362 87 (set (reg/v:SF 33 s17 [orig:393 ty ] [393])
        (plus:SF (reg/v:SF 33 s17 [orig:393 ty ] [393])
            (reg/v:SF 41 s25 [orig:365 ty_step ] [365]))) "../System/ray_funkcije.c":289:7 758 {*addsf3_vfp}
     (nil))
(debug_insn 1362 1361 1363 87 (var_location:SF ty (reg/v:SF 33 s17 [orig:393 ty ] [393])) "../System/ray_funkcije.c":289:7 -1
     (nil))
(debug_insn 1363 1362 1365 87 (debug_marker) "../System/ray_funkcije.c":259:30 -1
     (nil))
(debug_insn 1365 1363 1366 87 (var_location:SI j (reg/v:SI 10 r10 [orig:394 j ] [394])) -1
     (nil))
(debug_insn 1366 1365 1367 87 (var_location:SF ty (reg/v:SF 33 s17 [orig:393 ty ] [393])) -1
     (nil))
(debug_insn 1367 1366 2196 87 (debug_marker) "../System/ray_funkcije.c":259:19 -1
     (nil))
(insn 2196 1367 2197 87 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:279 _226 ] [279])
            (reg/v:SF 39 s23 [orig:348 lineH ] [348]))) "../System/ray_funkcije.c":259:3 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2197 2196 1371 87 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":259:3 817 {*movcc_vfp}
     (nil))
(jump_insn 1371 2197 2178 87 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1369)
            (pc))) "../System/ray_funkcije.c":259:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1369)
(note 2178 1371 2255 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 2255 2178 2179 88 (set (reg/v:SI 5 r5 [orig:389 y ] [389])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [8 %sfp+-12 S4 A32])) 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 2179 2255 2180 88 (set (pc)
        (label_ref 1372)) 284 {*arm_jump}
     (nil)
 -> 1372)
(barrier 2180 2179 1376)
(code_label 1376 2180 1377 89 72 (nil) [1 uses])
(note 1377 1376 1378 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1378 1377 1379 89 (debug_marker) "../System/ray_funkcije.c":305:4 -1
     (nil))
(insn 1379 1378 1380 89 (set (reg:SF 0 r0)
        (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":305:15 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1380 1379 2014 89 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2014 1380 1384 89 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":305:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1384 2014 1388 89 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1388 1384 1389 89 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1389 1388 1391 89 (set (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])
        (reg:SF 0 r0 [1049])) "../System/ray_funkcije.c":305:15 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1391 1389 2181 89 (var_location:SF floorAngle (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":305:15 -1
     (nil))
(jump_insn 2181 1391 2182 89 (set (pc)
        (label_ref 1421)) 284 {*arm_jump}
     (nil)
 -> 1421)
(barrier 2182 2181 2170)
(code_label 2170 2182 1395 90 123 (nil) [1 uses])
(note 1395 2170 1404 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(note 1404 1395 1405 90 NOTE_INSN_DELETED)
(note 1405 1404 1396 90 NOTE_INSN_DELETED)
(debug_insn 1396 1405 1397 90 (debug_marker) "../System/ray_funkcije.c":306:8 -1
     (nil))
(insn 1397 1396 1398 90 (set (reg:SF 0 r0)
        (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":306:23 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1398 1397 2089 90 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":306:23 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2089 1398 2012 90 (set (reg:DF 6 r6 [1050])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":306:23 739 {*thumb2_movdf_vfp}
     (nil))
(insn 2012 2089 1403 90 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":306:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1403 2012 1406 90 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":306:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 1406 1403 1410 90 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [1051])
                        (const_int 0 [0]))
                    (label_ref:SI 1421)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":306:11 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1421)
(note 1410 1406 1411 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1411 1410 1413 91 (debug_marker) "../System/ray_funkcije.c":307:4 -1
     (nil))
(insn 1413 1411 2013 91 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:283 _230 ] [283])) "../System/ray_funkcije.c":307:15 739 {*thumb2_movdf_vfp}
     (nil))
(insn 2013 1413 1414 91 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":307:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1414 2013 1417 91 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":307:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1417 1414 1418 91 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":307:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1418 1417 1420 91 (set (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])
        (reg:SF 0 r0 [1052])) "../System/ray_funkcije.c":307:15 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1420 1418 1421 91 (var_location:SF floorAngle (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":307:15 -1
     (nil))
(code_label 1421 1420 1422 92 79 (nil) [2 uses])
(note 1422 1421 1423 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1423 1422 1424 92 (var_location:SF floorAngle (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) -1
     (nil))
(debug_insn 1424 1423 1425 92 (debug_marker) "../System/ray_funkcije.c":309:3 -1
     (nil))
(debug_insn 1425 1424 1426 92 (debug_marker) "../System/ray_funkcije.c":310:3 -1
     (nil))
(debug_insn 1426 1425 1427 92 (debug_marker) "../System/ray_funkcije.c":318:3 -1
     (nil))
(insn 1427 1426 1428 92 (set (reg:SF 16 s0)
        (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1428 1427 2092 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":318:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2092 1428 1432 92 (set (reg:SF 31 s15 [1053])
        (reg:SF 16 s0)) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1432 2092 1429 92 (set (reg:SF 16 s0)
        (reg/v:SF 33 s17 [orig:353 floorAngle ] [353])) "../System/ray_funkcije.c":319:14 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1429 1432 1430 92 (set (reg/v:SF 4 r4 [orig:369 cosNew ] [369])
        (reg:SF 31 s15 [1053])) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1430 1429 1431 92 (var_location:SF cosNew (reg/v:SF 4 r4 [orig:369 cosNew ] [369])) "../System/ray_funkcije.c":318:12 -1
     (nil))
(debug_insn 1431 1430 1433 92 (debug_marker) "../System/ray_funkcije.c":319:3 -1
     (nil))
(call_insn/u 1433 1431 1434 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":319:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1434 1433 1435 92 (set (reg/v:SF 33 s17 [orig:370 cosFloor ] [370])
        (reg:SF 16 s0 [1054])) "../System/ray_funkcije.c":319:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1435 1434 1436 92 (var_location:SF cosFloor (reg/v:SF 33 s17 [orig:370 cosFloor ] [370])) "../System/ray_funkcije.c":319:14 -1
     (nil))
(debug_insn 1436 1435 1437 92 (debug_marker) "../System/ray_funkcije.c":320:3 -1
     (nil))
(insn 1437 1436 1438 92 (set (reg:SF 16 s0)
        (reg/v:SF 32 s16 [orig:346 newAngle ] [346])) "../System/ray_funkcije.c":320:12 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1438 1437 1442 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":320:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1442 1438 1439 92 (set (reg:SF 0 r0)
        (reg/v:SF 4 r4 [orig:369 cosNew ] [369])) "../System/ray_funkcije.c":322:18 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1439 1442 1440 92 (set (reg/v:SF 4 r4 [orig:371 sinNew ] [371])
        (reg:SF 16 s0 [1055])) "../System/ray_funkcije.c":320:12 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1440 1439 1441 92 (var_location:SF sinNew (reg/v:SF 4 r4 [orig:371 sinNew ] [371])) "../System/ray_funkcije.c":320:12 -1
     (nil))
(debug_insn 1441 1440 1443 92 (debug_marker) "../System/ray_funkcije.c":322:3 -1
     (nil))
(call_insn/u 1443 1441 2015 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2015 1443 1447 92 (set (reg:DF 2 r2)
        (const_double:DF 1.84751999999999998181010596454143524169921875e+3 [0x0.e6f0a3d70a3d7p+11])) "../System/ray_funkcije.c":322:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1447 2015 1450 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1450 1447 1451 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1451 1450 1453 92 (set (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])
        (reg:SF 0 r0 [1056])) "../System/ray_funkcije.c":322:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1453 1451 1454 92 (var_location:SF tmptx2 (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])) "../System/ray_funkcije.c":322:9 -1
     (nil))
(debug_insn 1454 1453 1455 92 (debug_marker) "../System/ray_funkcije.c":323:3 -1
     (nil))
(insn 1455 1454 1456 92 (set (reg:SF 0 r0)
        (reg/v:SF 4 r4 [orig:371 sinNew ] [371])) "../System/ray_funkcije.c":323:18 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1456 1455 2016 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2016 1456 1460 92 (set (reg:DF 2 r2)
        (const_double:DF 1.84751999999999998181010596454143524169921875e+3 [0x0.e6f0a3d70a3d7p+11])) "../System/ray_funkcije.c":323:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1460 2016 1463 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1463 1460 1464 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1464 1463 1466 92 (set (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])
        (reg:SF 0 r0 [1057])) "../System/ray_funkcije.c":323:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1466 1464 1467 92 (var_location:SF tmpty2 (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])) "../System/ray_funkcije.c":323:9 -1
     (nil))
(debug_insn 1467 1466 2398 92 (debug_marker) "../System/ray_funkcije.c":324:3 -1
     (nil))
(insn 2398 1467 1469 92 (set (reg:SI 3 r3 [1229])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":324:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1469 2398 1470 92 (set (reg:SF 0 r0)
        (mem/c:SF (reg:SI 3 r3 [1229]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":324:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(call_insn/u 1470 1469 2017 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2017 1470 1474 92 (set (reg:DF 2 r2)
        (const_double:DF 3.33333333333333348136306995002087205648422241211e+0 [0x0.d5555555555558p+2])) "../System/ray_funkcije.c":324:21 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1474 2017 1477 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1477 1474 1478 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1478 1477 1480 92 (set (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374])
        (reg:SF 0 r0 [1058])) "../System/ray_funkcije.c":324:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1480 1478 1481 92 (var_location:SF tmptx1 (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374])) "../System/ray_funkcije.c":324:9 -1
     (nil))
(debug_insn 1481 1480 2399 92 (debug_marker) "../System/ray_funkcije.c":325:3 -1
     (nil))
(insn 2399 1481 1483 92 (set (reg:SI 3 r3 [1230])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":325:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1483 2399 1484 92 (set (reg:SF 0 r0)
        (mem/c:SF (reg:SI 3 r3 [1230]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":325:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(call_insn/u 1484 1483 2018 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2018 1484 1488 92 (set (reg:DF 2 r2)
        (const_double:DF 3.33333333333333348136306995002087205648422241211e+0 [0x0.d5555555555558p+2])) "../System/ray_funkcije.c":325:21 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1488 2018 1491 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1491 1488 1492 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1492 1491 1494 92 (set (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375])
        (reg:SF 0 r0 [1059])) "../System/ray_funkcije.c":325:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1494 1492 1495 92 (var_location:SF tmpty1 (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375])) "../System/ray_funkcije.c":325:9 -1
     (nil))
(debug_insn 1495 1494 1496 92 (debug_marker) "../System/ray_funkcije.c":327:3 -1
     (nil))
(debug_insn 1496 1495 1497 92 (debug_marker) "../System/ray_funkcije.c":327:8 -1
     (nil))
(debug_insn 1497 1496 1498 92 (var_location:SF D#5 (plus:SF (debug_expr:SF D#28)
        (debug_expr:SF D#7))) "../System/ray_funkcije.c":327:24 -1
     (nil))
(debug_insn 1498 1497 1499 92 (var_location:SI y (fix:SI (debug_expr:SF D#5))) -1
     (nil))
(debug_insn 1499 1498 1502 92 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1502 1499 1503 92 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 99 [0x63]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1503 1502 1798 92 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1522)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1522)
(code_label 1798 1503 1504 93 87 (nil) [1 uses])
(note 1504 1798 1516 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(note 1516 1504 1505 93 NOTE_INSN_DELETED)
(debug_insn 1505 1516 1506 93 (debug_marker) "../System/ray_funkcije.c":133:30 -1
     (nil))
(insn 1506 1505 1507 93 (set (reg:SF 31 s15 [857])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":133:32 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1507 1506 1508 93 (set (reg/v:SF 38 s22 [orig:339 z ] [339])
        (plus:SF (reg/v:SF 38 s22 [orig:339 z ] [339])
            (reg:SF 31 s15 [857]))) "../System/ray_funkcije.c":133:32 758 {*addsf3_vfp}
     (nil))
(debug_insn 1508 1507 1509 93 (var_location:SF z (reg/v:SF 38 s22 [orig:339 z ] [339])) -1
     (nil))
(debug_insn 1509 1508 1510 93 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1510 1509 1511 93 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1511 1510 1512 93 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1512 1511 1513 93 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1513 1512 1514 93 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1514 1513 1515 93 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1515 1514 2401 93 (debug_marker) "../System/ray_funkcije.c":133:22 -1
     (nil))
(insn 2401 1515 1517 93 (set (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-20 S4 A32])) "../System/ray_funkcije.c":133:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1517 2401 2400 93 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])
                (plus:SI (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":133:2 1019 {thumb2_addsi3_compare0}
     (nil))
(insn 2400 1517 1518 93 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-20 S4 A32])
        (reg:SI 3 r3 [orig:463 ivtmp_891 ] [463])) "../System/ray_funkcije.c":133:2 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 1518 2400 2183 93 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref 1802)
            (pc))) "../System/ray_funkcije.c":133:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1802)
(note 2183 1518 2185 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2185 2183 2186 94 (set (pc)
        (label_ref 2184)) 284 {*arm_jump}
     (nil)
 -> 2184)
(barrier 2186 2185 1522)
(code_label 1522 2186 1523 95 81 (nil) [1 uses])
(note 1523 1522 1526 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1526 1523 1527 95 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 62 [0x3e]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1527 1526 1963 95 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1962)
            (pc))) 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1073741831 (nil))
 -> 1962)
(note 1963 1527 1536 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1536 1963 1946 96 (set (reg:SF 39 s23 [860])
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":329:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1946 1536 1947 96 (set (reg/f:SI 7 r7 [969])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)
        (nil)))
(insn 1947 1946 1603 96 (set (reg/f:SI 6 r6 [968])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)
        (nil)))
(note 1603 1947 2187 96 NOTE_INSN_DELETED)
(jump_insn 2187 1603 2188 96 (set (pc)
        (label_ref 1665)) 284 {*arm_jump}
     (nil)
 -> 1665)
(barrier 2188 2187 1962)
(code_label 1962 2188 1961 97 105 (nil) [1 uses])
(note 1961 1962 1944 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1944 1961 1945 97 (set (reg/f:SI 7 r7 [969])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)
        (nil)))
(insn 1945 1944 2189 97 (set (reg/f:SI 6 r6 [968])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)
        (nil)))
(jump_insn 2189 1945 2190 97 (set (pc)
        (label_ref 1668)) 284 {*arm_jump}
     (nil)
 -> 1668)
(barrier 2190 2189 1665)
(code_label 1665 2190 1528 98 85 (nil) [2 uses])
(note 1528 1665 1547 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(note 1547 1528 1554 98 NOTE_INSN_DELETED)
(note 1554 1547 1583 98 NOTE_INSN_DELETED)
(note 1583 1554 1588 98 NOTE_INSN_DELETED)
(note 1588 1583 1593 98 NOTE_INSN_DELETED)
(note 1593 1588 1598 98 NOTE_INSN_DELETED)
(note 1598 1593 1609 98 NOTE_INSN_DELETED)
(note 1609 1598 1629 98 NOTE_INSN_DELETED)
(note 1629 1609 1634 98 NOTE_INSN_DELETED)
(note 1634 1629 1639 98 NOTE_INSN_DELETED)
(note 1639 1634 1644 98 NOTE_INSN_DELETED)
(note 1644 1639 1646 98 NOTE_INSN_DELETED)
(note 1646 1644 1656 98 NOTE_INSN_DELETED)
(note 1656 1646 1529 98 NOTE_INSN_DELETED)
(debug_insn 1529 1656 1530 98 (var_location:SI y (reg/v:SI 5 r5 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1530 1529 1531 98 (debug_marker) "../System/ray_funkcije.c":328:4 -1
     (nil))
(debug_insn 1531 1530 1532 98 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":328:8 -1
     (nil))
(debug_insn 1532 1531 1533 98 (debug_marker) "../System/ray_funkcije.c":329:4 -1
     (nil))
(debug_insn 1533 1532 1534 98 (var_location:SF dy (minus:SF (float:SF (reg/v:SI 5 r5 [orig:389 y ] [389]))
        (const_double:SF 5.0e+1 [0x0.c8p+6]))) "../System/ray_funkcije.c":329:10 -1
     (nil))
(debug_insn 1534 1533 2402 98 (debug_marker) "../System/ray_funkcije.c":343:4 -1
     (nil))
(insn 2402 1534 1535 98 (set (reg/v:SI 31 s15 [orig:389 y ] [389])
        (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":329:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1535 2402 1994 98 (set (reg:SF 29 s13 [858])
        (float:SF (reg/v:SI 31 s15 [orig:389 y ] [389]))) "../System/ray_funkcije.c":329:17 809 {*floatsisf2_vfp}
     (nil))
(insn 1994 1535 1537 98 (set (reg:SF 16 s0)
        (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":349:11 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1537 1994 1538 98 (set (reg:SF 29 s13 [orig:859 dy ] [859])
        (minus:SF (reg:SF 29 s13 [858])
            (reg:SF 39 s23 [860]))) "../System/ray_funkcije.c":329:10 761 {*subsf3_vfp}
     (expr_list:REG_EQUAL (minus:SF (reg:SF 29 s13 [858])
            (const_double:SF 5.0e+1 [0x0.c8p+6]))
        (nil)))
(insn 1538 1537 1539 98 (set (reg:SF 29 s13 [orig:296 _244 ] [296])
        (mult:SF (reg:SF 29 s13 [orig:859 dy ] [859])
            (reg/v:SF 33 s17 [orig:370 cosFloor ] [370]))) "../System/ray_funkcije.c":343:30 767 {*mulsf3_vfp}
     (nil))
(debug_insn 1539 1538 1540 98 (var_location:SF tx (plus:SF (div:SF (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])
            (reg:SF 29 s13 [orig:296 _244 ] [296]))
        (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374]))) "../System/ray_funkcije.c":343:7 -1
     (nil))
(debug_insn 1540 1539 1541 98 (debug_marker) "../System/ray_funkcije.c":344:4 -1
     (nil))
(debug_insn 1541 1540 1542 98 (var_location:SF ty (plus:SF (div:SF (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])
            (reg:SF 29 s13 [orig:296 _244 ] [296]))
        (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375]))) "../System/ray_funkcije.c":344:7 -1
     (nil))
(debug_insn 1542 1541 1543 98 (debug_marker) "../System/ray_funkcije.c":345:4 -1
     (nil))
(insn 1543 1542 1548 98 (set (reg:SF 30 s14 [861])
        (div:SF (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])
            (reg:SF 29 s13 [orig:296 _244 ] [296]))) "../System/ray_funkcije.c":344:30 764 {*divsf3_vfp}
     (nil))
(insn 1548 1543 1544 98 (set (reg:SF 31 s15 [866])
        (div:SF (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])
            (reg:SF 29 s13 [orig:296 _244 ] [296]))) "../System/ray_funkcije.c":343:30 764 {*divsf3_vfp}
     (nil))
(insn 1544 1548 1549 98 (set (reg:SF 30 s14 [orig:862 ty ] [862])
        (plus:SF (reg:SF 30 s14 [861])
            (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375]))) "../System/ray_funkcije.c":344:7 758 {*addsf3_vfp}
     (nil))
(insn 1549 1544 1545 98 (set (reg:SF 31 s15 [orig:867 tx ] [867])
        (plus:SF (reg:SF 31 s15 [866])
            (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374]))) "../System/ray_funkcije.c":343:7 758 {*addsf3_vfp}
     (nil))
(insn 1545 1549 2403 98 (set (reg:SI 30 s14 [863])
        (fix:SI (fix:SF (reg:SF 30 s14 [orig:862 ty ] [862])))) "../System/ray_funkcije.c":345:18 805 {*truncsisf2_vfp}
     (nil))
(insn 2403 1545 1546 98 (set (reg:SI 4 r4 [863])
        (reg:SI 30 s14 [863])) "../System/ray_funkcije.c":345:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1546 2403 1550 98 (set (reg:SI 3 r3 [864])
        (and:SI (reg:SI 4 r4 [863])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:29 90 {*arm_andsi3_insn}
     (nil))
(insn 1550 1546 2404 98 (set (reg:SI 31 s15 [868])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:867 tx ] [867])))) "../System/ray_funkcije.c":345:43 805 {*truncsisf2_vfp}
     (nil))
(insn 2404 1550 1551 98 (set (reg:SI 4 r4 [868])
        (reg:SI 31 s15 [868])) "../System/ray_funkcije.c":345:43 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1551 2404 1552 98 (set (reg:SI 4 r4 [869])
        (and:SI (reg:SI 4 r4 [868])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:54 90 {*arm_andsi3_insn}
     (nil))
(insn 1552 1551 1555 98 (set (reg:SI 4 r4 [870])
        (plus:SI (ashift:SI (reg:SI 3 r3 [864])
                (const_int 5 [0x5]))
            (reg:SI 4 r4 [869]))) "../System/ray_funkcije.c":345:40 318 {*add_shiftsi}
     (nil))
(insn 1555 1552 1557 98 (set (reg:SI 4 r4 [873])
        (plus:SI (ashift:SI (reg:SI 4 r4 [870])
                (const_int 1 [0x1]))
            (reg:SI 4 r4 [870]))) "../System/ray_funkcije.c":345:8 318 {*add_shiftsi}
     (nil))
(debug_insn 1557 1555 1558 98 (var_location:SI pixel (reg:SI 4 r4 [873])) "../System/ray_funkcije.c":345:8 -1
     (nil))
(debug_insn 1558 1557 1559 98 (debug_marker) "../System/ray_funkcije.c":347:4 -1
     (nil))
(debug_insn 1559 1558 1560 98 (debug_marker) "../System/ray_funkcije.c":348:5 -1
     (nil))
(debug_insn 1560 1559 1561 98 (var_location:SF dist (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":348:11 -1
     (nil))
(debug_insn 1561 1560 1563 98 (debug_marker) "../System/ray_funkcije.c":349:5 -1
     (nil))
(call_insn 1563 1561 1564 98 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":349:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1564 1563 1565 98 (set (reg/v:SF 32 s16 [orig:380 vis ] [380])
        (reg:SF 16 s0 [1060])) "../System/ray_funkcije.c":349:11 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1565 1564 1566 98 (var_location:SF vis (reg/v:SF 32 s16 [orig:380 vis ] [380])) -1
     (nil))
(debug_insn 1566 1565 1829 98 (debug_marker) "../System/ray_funkcije.c":352:4 -1
     (nil))
(debug_insn 1829 1566 1567 98 (var_location:QI D#16 (mem/u:QI (plus:SI (reg:SI 4 r4 [873])
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_409]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1567 1829 1568 98 (var_location:SI red (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#16)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":352:8 -1
     (nil))
(debug_insn 1568 1567 1569 98 (debug_marker) "../System/ray_funkcije.c":353:4 -1
     (nil))
(insn 1569 1568 1830 98 (set (reg:SI 10 r10 [orig:309 _257 ] [309])
        (plus:SI (reg:SI 4 r4 [873])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":353:30 7 {*arm_addsi3}
     (nil))
(debug_insn 1830 1569 1570 98 (var_location:QI D#17 (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:309 _257 ] [309])
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_257]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1570 1830 1571 98 (var_location:SI green (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#17)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":353:8 -1
     (nil))
(debug_insn 1571 1570 1572 98 (debug_marker) "../System/ray_funkcije.c":354:4 -1
     (nil))
(insn 1572 1571 1831 98 (set (reg:SI 11 fp [orig:314 _262 ] [314])
        (plus:SI (reg:SI 4 r4 [873])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":354:29 7 {*arm_addsi3}
     (nil))
(debug_insn 1831 1572 1573 98 (var_location:QI D#18 (mem/u:QI (plus:SI (reg:SI 11 fp [orig:314 _262 ] [314])
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_262]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1573 1831 1574 98 (var_location:SI blue (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#18)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":354:8 -1
     (nil))
(debug_insn 1574 1573 1575 98 (debug_marker) "../System/ray_funkcije.c":356:4 -1
     (nil))
(debug_insn 1575 1574 1576 98 (var_location:SI tlay (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":356:8 -1
     (nil))
(debug_insn 1576 1575 1577 98 (debug_marker) "../System/ray_funkcije.c":357:4 -1
     (nil))
(debug_insn 1577 1576 1578 98 (var_location:SI tlay (fix:SI (mult:DF (float:DF (reg/v:SI 5 r5 [orig:389 y ] [389]))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":357:9 -1
     (nil))
(debug_insn 1578 1577 1585 98 (debug_marker) "../System/ray_funkcije.c":359:4 -1
     (nil))
(insn 1585 1578 2405 98 (set (reg:SI 3 r3 [orig:880 t_floor[_257] ] [880])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 10 r10 [orig:309 _257 ] [309])) [0 t_floor[_257]+0 S1 A8]))) "../System/ray_funkcije.c":353:23 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:309 _257 ] [309])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_257]+0 S1 A8]))
        (nil)))
(insn 2405 1585 1586 98 (set (reg:SI 30 s14 [orig:880 t_floor[_257] ] [880])
        (reg:SI 3 r3 [orig:880 t_floor[_257] ] [880])) "../System/ray_funkcije.c":353:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1586 2405 1587 98 (set (reg:SF 30 s14 [881])
        (float:SF (reg:SI 30 s14 [orig:880 t_floor[_257] ] [880]))) "../System/ray_funkcije.c":353:35 809 {*floatsisf2_vfp}
     (nil))
(insn 1587 1586 1580 98 (set (reg:SF 30 s14 [882])
        (mult:SF (reg:SF 30 s14 [881])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":353:35 767 {*mulsf3_vfp}
     (nil))
(insn 1580 1587 2406 98 (set (reg:SI 3 r3 [orig:875 t_floor[_262] ] [875])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 11 fp [orig:314 _262 ] [314])) [0 t_floor[_262]+0 S1 A8]))) "../System/ray_funkcije.c":354:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 11 fp [orig:314 _262 ] [314])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_262]+0 S1 A8]))
        (nil)))
(insn 2406 1580 1581 98 (set (reg:SI 29 s13 [orig:875 t_floor[_262] ] [875])
        (reg:SI 3 r3 [orig:875 t_floor[_262] ] [875])) "../System/ray_funkcije.c":354:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1581 2406 1582 98 (set (reg:SF 29 s13 [876])
        (float:SF (reg:SI 29 s13 [orig:875 t_floor[_262] ] [875]))) "../System/ray_funkcije.c":354:34 809 {*floatsisf2_vfp}
     (nil))
(insn 1582 1581 1590 98 (set (reg:SF 29 s13 [877])
        (mult:SF (reg:SF 29 s13 [876])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":354:34 767 {*mulsf3_vfp}
     (nil))
(insn 1590 1582 2407 98 (set (reg:SI 3 r3 [orig:885 t_floor[pixel_409] ] [885])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 4 r4 [873])) [0 t_floor[pixel_409]+0 S1 A8]))) "../System/ray_funkcije.c":352:21 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 4 r4 [873])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_409]+0 S1 A8]))
        (nil)))
(insn 2407 1590 1591 98 (set (reg:SI 31 s15 [orig:885 t_floor[pixel_409] ] [885])
        (reg:SI 3 r3 [orig:885 t_floor[pixel_409] ] [885])) "../System/ray_funkcije.c":352:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1591 2407 1592 98 (set (reg:SF 31 s15 [886])
        (float:SF (reg:SI 31 s15 [orig:885 t_floor[pixel_409] ] [885]))) "../System/ray_funkcije.c":352:33 809 {*floatsisf2_vfp}
     (nil))
(insn 1592 1591 1594 98 (set (reg:SF 31 s15 [887])
        (mult:SF (reg:SF 31 s15 [886])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":352:33 767 {*mulsf3_vfp}
     (nil))
(insn 1594 1592 2408 98 (set (reg:SI 29 s13 [1239])
        (fix:SI (fix:SF (reg:SF 29 s13 [877])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2408 1594 1595 98 (set (reg:SI 2 r2)
        (reg:SI 29 s13 [1239])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1595 2408 2409 98 (set (reg:SI 30 s14 [1240])
        (fix:SI (fix:SF (reg:SF 30 s14 [882])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2409 1595 1596 98 (set (reg:SI 1 r1)
        (reg:SI 30 s14 [1240])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1596 2409 2410 98 (set (reg:SI 31 s15 [1241])
        (fix:SI (fix:SF (reg:SF 31 s15 [887])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2410 1596 1597 98 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1241])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1597 2410 1599 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":360:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1599 1597 1600 98 (set (reg:SI 9 r9 [orig:889 _269 ] [889])
        (zero_extend:SI (reg:HI 0 r0 [1061]))) "../System/ray_funkcije.c":359:4 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1600 1599 1601 98 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1601 1600 1995 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1995 1601 1605 98 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1605 1995 1608 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1608 1605 2101 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2101 1608 1610 98 (set (reg:SI 1 r1 [1062])
        (reg:SI 0 r0)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1610 2101 1612 98 (set (reg:SI 2 r2)
        (reg:SI 9 r9 [orig:889 _269 ] [889])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1612 1610 1613 98 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1613 1612 1614 98 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":359:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1614 1613 1832 98 (debug_marker) "../System/ray_funkcije.c":363:4 -1
     (nil))
(debug_insn 1832 1614 1615 98 (var_location:QI D#19 (mem/u:QI (plus:SI (reg:SI 4 r4 [873])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_409]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1615 1832 1616 98 (var_location:SI red (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#19)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":363:8 -1
     (nil))
(debug_insn 1616 1615 1833 98 (debug_marker) "../System/ray_funkcije.c":364:4 -1
     (nil))
(debug_insn 1833 1616 1617 98 (var_location:QI D#20 (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:309 _257 ] [309])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_257]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1617 1833 1618 98 (var_location:SI green (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#20)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":364:10 -1
     (nil))
(debug_insn 1618 1617 1834 98 (debug_marker) "../System/ray_funkcije.c":365:4 -1
     (nil))
(debug_insn 1834 1618 1619 98 (var_location:QI D#21 (mem/u:QI (plus:SI (reg:SI 11 fp [orig:314 _262 ] [314])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_262]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1619 1834 1620 98 (var_location:SI blue (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#21)))
            (reg/v:SF 32 s16 [orig:380 vis ] [380])))) "../System/ray_funkcije.c":365:9 -1
     (nil))
(debug_insn 1620 1619 1621 98 (debug_marker) "../System/ray_funkcije.c":367:4 -1
     (nil))
(debug_insn 1621 1620 1622 98 (var_location:SI stropy (minus:SI (const_int 100 [0x64])
        (reg/v:SI 5 r5 [orig:389 y ] [389]))) "../System/ray_funkcije.c":367:8 -1
     (nil))
(debug_insn 1622 1621 1623 98 (debug_marker) "../System/ray_funkcije.c":368:4 -1
     (nil))
(debug_insn 1623 1622 1624 98 (var_location:SI stropy (fix:SI (mult:DF (float:DF (minus:SI (const_int 100 [0x64])
                    (reg/v:SI 5 r5 [orig:389 y ] [389])))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":368:11 -1
     (nil))
(debug_insn 1624 1623 1626 98 (debug_marker) "../System/ray_funkcije.c":370:4 -1
     (nil))
(insn 1626 1624 2411 98 (set (reg:SI 3 r3 [orig:894 t_wall[_262] ] [894])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 11 fp [orig:314 _262 ] [314])) [0 t_wall[_262]+0 S1 A8]))) "../System/ray_funkcije.c":365:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 11 fp [orig:314 _262 ] [314])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_262]+0 S1 A8]))
        (nil)))
(insn 2411 1626 1627 98 (set (reg:SI 30 s14 [orig:894 t_wall[_262] ] [894])
        (reg:SI 3 r3 [orig:894 t_wall[_262] ] [894])) "../System/ray_funkcije.c":365:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1627 2411 1631 98 (set (reg:SF 30 s14 [895])
        (float:SF (reg:SI 30 s14 [orig:894 t_wall[_262] ] [894]))) "../System/ray_funkcije.c":365:29 809 {*floatsisf2_vfp}
     (nil))
(insn 1631 1627 2412 98 (set (reg:SI 3 r3 [orig:899 t_wall[_257] ] [899])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 10 r10 [orig:309 _257 ] [309])) [0 t_wall[_257]+0 S1 A8]))) "../System/ray_funkcije.c":364:18 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:309 _257 ] [309])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_257]+0 S1 A8]))
        (nil)))
(insn 2412 1631 1632 98 (set (reg:SI 31 s15 [orig:899 t_wall[_257] ] [899])
        (reg:SI 3 r3 [orig:899 t_wall[_257] ] [899])) "../System/ray_funkcije.c":364:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1632 2412 1636 98 (set (reg:SF 31 s15 [900])
        (float:SF (reg:SI 31 s15 [orig:899 t_wall[_257] ] [899]))) "../System/ray_funkcije.c":364:30 809 {*floatsisf2_vfp}
     (nil))
(insn 1636 1632 2413 98 (set (reg:SI 3 r3 [orig:904 t_wall[pixel_409] ] [904])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 4 r4 [873])) [0 t_wall[pixel_409]+0 S1 A8]))) "../System/ray_funkcije.c":363:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 4 r4 [873])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_409]+0 S1 A8]))
        (nil)))
(insn 2413 1636 1637 98 (set (reg:SI 16 s0 [orig:904 t_wall[pixel_409] ] [904])
        (reg:SI 3 r3 [orig:904 t_wall[pixel_409] ] [904])) "../System/ray_funkcije.c":363:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1637 2413 1628 98 (set (reg:SF 16 s0 [905])
        (float:SF (reg:SI 16 s0 [orig:904 t_wall[pixel_409] ] [904]))) "../System/ray_funkcije.c":363:28 809 {*floatsisf2_vfp}
     (nil))
(insn 1628 1637 1633 98 (set (reg:SF 30 s14 [896])
        (mult:SF (reg:SF 30 s14 [895])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":365:29 767 {*mulsf3_vfp}
     (nil))
(insn 1633 1628 1638 98 (set (reg:SF 31 s15 [901])
        (mult:SF (reg:SF 31 s15 [900])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":364:30 767 {*mulsf3_vfp}
     (nil))
(insn 1638 1633 1640 98 (set (reg:SF 32 s16 [906])
        (mult:SF (reg:SF 16 s0 [905])
            (reg/v:SF 32 s16 [orig:380 vis ] [380]))) "../System/ray_funkcije.c":363:28 767 {*mulsf3_vfp}
     (nil))
(insn 1640 1638 2414 98 (set (reg:SI 30 s14 [1245])
        (fix:SI (fix:SF (reg:SF 30 s14 [896])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2414 1640 1641 98 (set (reg:SI 2 r2)
        (reg:SI 30 s14 [1245])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1641 2414 2415 98 (set (reg:SI 31 s15 [1246])
        (fix:SI (fix:SF (reg:SF 31 s15 [901])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2415 1641 1642 98 (set (reg:SI 1 r1)
        (reg:SI 31 s15 [1246])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1642 2415 2416 98 (set (reg:SI 31 s15 [1247])
        (fix:SI (fix:SF (reg:SF 32 s16 [906])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2416 1642 1643 98 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1247])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1643 2416 1645 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":371:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1645 1643 1647 98 (set (reg:SI 4 r4 [orig:908 _285 ] [908])
        (zero_extend:SI (reg:HI 0 r0 [1063]))) "../System/ray_funkcije.c":370:4 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1647 1645 1662 98 (set (reg:SI 0 r0)
        (minus:SI (const_int 100 [0x64])
            (reg/v:SI 5 r5 [orig:389 y ] [389]))) "../System/ray_funkcije.c":368:11 45 {*arm_subsi3_insn}
     (nil))
(insn 1662 1647 1648 98 (set (reg/v:SI 5 r5 [orig:389 y ] [389])
        (plus:SI (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":327:46 7 {*arm_addsi3}
     (nil))
(call_insn/u 1648 1662 1996 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1996 1648 1652 98 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":368:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1652 1996 1655 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1655 1652 2103 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2103 1655 1657 98 (set (reg:SI 1 r1 [1064])
        (reg:SI 0 r0)) "../System/ray_funkcije.c":368:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1657 2103 1659 98 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:908 _285 ] [908])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1659 1657 1660 98 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1660 1659 1661 98 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":370:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1661 1660 1663 98 (debug_marker) "../System/ray_funkcije.c":327:45 -1
     (nil))
(debug_insn 1663 1661 1664 98 (var_location:SI y (reg/v:SI 5 r5 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1664 1663 1666 98 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1666 1664 1667 98 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 63 [0x3f]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1667 1666 1668 98 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1665)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1665)
(code_label 1668 1667 1669 100 84 (nil) [1 uses])
(note 1669 1668 1678 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1678 1669 1736 100 (set (reg:SF 32 s16 [915])
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":329:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(note 1736 1678 1795 100 NOTE_INSN_DELETED)
(code_label 1795 1736 1670 101 86 (nil) [1 uses])
(note 1670 1795 1689 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(note 1689 1670 1696 101 NOTE_INSN_DELETED)
(note 1696 1689 1718 101 NOTE_INSN_DELETED)
(note 1718 1696 1722 101 NOTE_INSN_DELETED)
(note 1722 1718 1726 101 NOTE_INSN_DELETED)
(note 1726 1722 1731 101 NOTE_INSN_DELETED)
(note 1731 1726 1742 101 NOTE_INSN_DELETED)
(note 1742 1731 1761 101 NOTE_INSN_DELETED)
(note 1761 1742 1765 101 NOTE_INSN_DELETED)
(note 1765 1761 1769 101 NOTE_INSN_DELETED)
(note 1769 1765 1774 101 NOTE_INSN_DELETED)
(note 1774 1769 1776 101 NOTE_INSN_DELETED)
(note 1776 1774 1786 101 NOTE_INSN_DELETED)
(note 1786 1776 1671 101 NOTE_INSN_DELETED)
(debug_insn 1671 1786 1672 101 (var_location:SI y (reg/v:SI 5 r5 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1672 1671 1673 101 (debug_marker) "../System/ray_funkcije.c":328:4 -1
     (nil))
(debug_insn 1673 1672 1674 101 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":328:8 -1
     (nil))
(debug_insn 1674 1673 1675 101 (debug_marker) "../System/ray_funkcije.c":329:4 -1
     (nil))
(debug_insn 1675 1674 1676 101 (var_location:SF dy (minus:SF (float:SF (reg/v:SI 5 r5 [orig:389 y ] [389]))
        (const_double:SF 5.0e+1 [0x0.c8p+6]))) "../System/ray_funkcije.c":329:10 -1
     (nil))
(debug_insn 1676 1675 2417 101 (debug_marker) "../System/ray_funkcije.c":343:4 -1
     (nil))
(insn 2417 1676 1677 101 (set (reg/v:SI 31 s15 [orig:389 y ] [389])
        (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":329:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1677 2417 1679 101 (set (reg:SF 29 s13 [913])
        (float:SF (reg/v:SI 31 s15 [orig:389 y ] [389]))) "../System/ray_funkcije.c":329:17 809 {*floatsisf2_vfp}
     (nil))
(insn 1679 1677 1680 101 (set (reg:SF 29 s13 [orig:914 dy ] [914])
        (minus:SF (reg:SF 29 s13 [913])
            (reg:SF 32 s16 [915]))) "../System/ray_funkcije.c":329:10 761 {*subsf3_vfp}
     (expr_list:REG_EQUAL (minus:SF (reg:SF 29 s13 [913])
            (const_double:SF 5.0e+1 [0x0.c8p+6]))
        (nil)))
(insn 1680 1679 1681 101 (set (reg:SF 29 s13 [orig:475 _906 ] [475])
        (mult:SF (reg:SF 29 s13 [orig:914 dy ] [914])
            (reg/v:SF 33 s17 [orig:370 cosFloor ] [370]))) "../System/ray_funkcije.c":343:30 767 {*mulsf3_vfp}
     (nil))
(debug_insn 1681 1680 1682 101 (var_location:SF tx (plus:SF (div:SF (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])
            (reg:SF 29 s13 [orig:475 _906 ] [475]))
        (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374]))) "../System/ray_funkcije.c":343:7 -1
     (nil))
(debug_insn 1682 1681 1683 101 (debug_marker) "../System/ray_funkcije.c":344:4 -1
     (nil))
(debug_insn 1683 1682 1684 101 (var_location:SF ty (plus:SF (div:SF (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])
            (reg:SF 29 s13 [orig:475 _906 ] [475]))
        (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375]))) "../System/ray_funkcije.c":344:7 -1
     (nil))
(debug_insn 1684 1683 1685 101 (debug_marker) "../System/ray_funkcije.c":345:4 -1
     (nil))
(insn 1685 1684 1690 101 (set (reg:SF 30 s14 [916])
        (div:SF (reg/v:SF 35 s19 [orig:373 tmpty2 ] [373])
            (reg:SF 29 s13 [orig:475 _906 ] [475]))) "../System/ray_funkcije.c":344:30 764 {*divsf3_vfp}
     (nil))
(insn 1690 1685 1686 101 (set (reg:SF 31 s15 [921])
        (div:SF (reg/v:SF 34 s18 [orig:372 tmptx2 ] [372])
            (reg:SF 29 s13 [orig:475 _906 ] [475]))) "../System/ray_funkcije.c":343:30 764 {*divsf3_vfp}
     (nil))
(insn 1686 1690 1691 101 (set (reg:SF 30 s14 [orig:917 ty ] [917])
        (plus:SF (reg:SF 30 s14 [916])
            (reg/v:SF 37 s21 [orig:375 tmpty1 ] [375]))) "../System/ray_funkcije.c":344:7 758 {*addsf3_vfp}
     (nil))
(insn 1691 1686 1687 101 (set (reg:SF 31 s15 [orig:922 tx ] [922])
        (plus:SF (reg:SF 31 s15 [921])
            (reg/v:SF 36 s20 [orig:374 tmptx1 ] [374]))) "../System/ray_funkcije.c":343:7 758 {*addsf3_vfp}
     (nil))
(insn 1687 1691 2418 101 (set (reg:SI 30 s14 [918])
        (fix:SI (fix:SF (reg:SF 30 s14 [orig:917 ty ] [917])))) "../System/ray_funkcije.c":345:18 805 {*truncsisf2_vfp}
     (nil))
(insn 2418 1687 1688 101 (set (reg:SI 4 r4 [918])
        (reg:SI 30 s14 [918])) "../System/ray_funkcije.c":345:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1688 2418 1692 101 (set (reg:SI 3 r3 [919])
        (and:SI (reg:SI 4 r4 [918])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:29 90 {*arm_andsi3_insn}
     (nil))
(insn 1692 1688 2419 101 (set (reg:SI 31 s15 [923])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:922 tx ] [922])))) "../System/ray_funkcije.c":345:43 805 {*truncsisf2_vfp}
     (nil))
(insn 2419 1692 1693 101 (set (reg:SI 4 r4 [923])
        (reg:SI 31 s15 [923])) "../System/ray_funkcije.c":345:43 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1693 2419 1694 101 (set (reg:SI 4 r4 [924])
        (and:SI (reg:SI 4 r4 [923])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:54 90 {*arm_andsi3_insn}
     (nil))
(insn 1694 1693 1697 101 (set (reg:SI 4 r4 [925])
        (plus:SI (ashift:SI (reg:SI 3 r3 [919])
                (const_int 5 [0x5]))
            (reg:SI 4 r4 [924]))) "../System/ray_funkcije.c":345:40 318 {*add_shiftsi}
     (nil))
(insn 1697 1694 1699 101 (set (reg:SI 4 r4 [928])
        (plus:SI (ashift:SI (reg:SI 4 r4 [925])
                (const_int 1 [0x1]))
            (reg:SI 4 r4 [925]))) "../System/ray_funkcije.c":345:8 318 {*add_shiftsi}
     (nil))
(debug_insn 1699 1697 1700 101 (var_location:SI pixel (reg:SI 4 r4 [928])) "../System/ray_funkcije.c":345:8 -1
     (nil))
(debug_insn 1700 1699 1701 101 (debug_marker) "../System/ray_funkcije.c":347:4 -1
     (nil))
(debug_insn 1701 1700 1702 101 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) -1
     (nil))
(debug_insn 1702 1701 1835 101 (debug_marker) "../System/ray_funkcije.c":352:4 -1
     (nil))
(debug_insn 1835 1702 1703 101 (var_location:SI D#22 (plus:SI (reg:SI 4 r4 [928])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1703 1835 1704 101 (var_location:SI red (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#22) [0 t_floor[pixel_895]+0 S1 A8]))))) "../System/ray_funkcije.c":352:8 -1
     (nil))
(debug_insn 1704 1703 1705 101 (debug_marker) "../System/ray_funkcije.c":353:4 -1
     (nil))
(insn 1705 1704 1836 101 (set (reg:SI 10 r10 [orig:457 _885 ] [457])
        (plus:SI (reg:SI 4 r4 [928])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":353:30 7 {*arm_addsi3}
     (nil))
(debug_insn 1836 1705 1706 101 (var_location:SI D#23 (plus:SI (reg:SI 10 r10 [orig:457 _885 ] [457])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1706 1836 1707 101 (var_location:SI green (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#23) [0 t_floor[_885]+0 S1 A8]))))) "../System/ray_funkcije.c":353:8 -1
     (nil))
(debug_insn 1707 1706 1708 101 (debug_marker) "../System/ray_funkcije.c":354:4 -1
     (nil))
(insn 1708 1707 1837 101 (set (reg:SI 11 fp [orig:452 _879 ] [452])
        (plus:SI (reg:SI 4 r4 [928])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":354:29 7 {*arm_addsi3}
     (nil))
(debug_insn 1837 1708 1709 101 (var_location:SI D#24 (plus:SI (reg:SI 11 fp [orig:452 _879 ] [452])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1709 1837 1710 101 (var_location:SI blue (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#24) [0 t_floor[_879]+0 S1 A8]))))) "../System/ray_funkcije.c":354:8 -1
     (nil))
(debug_insn 1710 1709 1711 101 (debug_marker) "../System/ray_funkcije.c":356:4 -1
     (nil))
(debug_insn 1711 1710 1712 101 (var_location:SI tlay (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":356:8 -1
     (nil))
(debug_insn 1712 1711 1713 101 (debug_marker) "../System/ray_funkcije.c":357:4 -1
     (nil))
(debug_insn 1713 1712 1714 101 (var_location:SI tlay (fix:SI (mult:DF (float:DF (reg/v:SI 5 r5 [orig:389 y ] [389]))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":357:9 -1
     (nil))
(debug_insn 1714 1713 1720 101 (debug_marker) "../System/ray_funkcije.c":359:4 -1
     (nil))
(insn 1720 1714 2420 101 (set (reg:SI 3 r3 [orig:934 t_floor[_885] ] [934])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 10 r10 [orig:457 _885 ] [457])) [0 t_floor[_885]+0 S1 A8]))) "../System/ray_funkcije.c":353:23 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:457 _885 ] [457])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_885]+0 S1 A8]))
        (nil)))
(insn 2420 1720 1721 101 (set (reg:SI 30 s14 [orig:934 t_floor[_885] ] [934])
        (reg:SI 3 r3 [orig:934 t_floor[_885] ] [934])) "../System/ray_funkcije.c":353:23 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1721 2420 1716 101 (set (reg:SF 30 s14 [935])
        (float:SF (reg:SI 30 s14 [orig:934 t_floor[_885] ] [934]))) "../System/ray_funkcije.c":353:35 809 {*floatsisf2_vfp}
     (nil))
(insn 1716 1721 2421 101 (set (reg:SI 3 r3 [orig:930 t_floor[_879] ] [930])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 11 fp [orig:452 _879 ] [452])) [0 t_floor[_879]+0 S1 A8]))) "../System/ray_funkcije.c":354:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 11 fp [orig:452 _879 ] [452])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_879]+0 S1 A8]))
        (nil)))
(insn 2421 1716 1717 101 (set (reg:SI 29 s13 [orig:930 t_floor[_879] ] [930])
        (reg:SI 3 r3 [orig:930 t_floor[_879] ] [930])) "../System/ray_funkcije.c":354:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1717 2421 1724 101 (set (reg:SF 29 s13 [931])
        (float:SF (reg:SI 29 s13 [orig:930 t_floor[_879] ] [930]))) "../System/ray_funkcije.c":354:34 809 {*floatsisf2_vfp}
     (nil))
(insn 1724 1717 2422 101 (set (reg:SI 3 r3 [orig:938 t_floor[pixel_895] ] [938])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 6 r6 [968])
                    (reg:SI 4 r4 [928])) [0 t_floor[pixel_895]+0 S1 A8]))) "../System/ray_funkcije.c":352:21 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 4 r4 [928])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_895]+0 S1 A8]))
        (nil)))
(insn 2422 1724 1725 101 (set (reg:SI 31 s15 [orig:938 t_floor[pixel_895] ] [938])
        (reg:SI 3 r3 [orig:938 t_floor[pixel_895] ] [938])) "../System/ray_funkcije.c":352:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1725 2422 1727 101 (set (reg:SF 31 s15 [939])
        (float:SF (reg:SI 31 s15 [orig:938 t_floor[pixel_895] ] [938]))) "../System/ray_funkcije.c":352:33 809 {*floatsisf2_vfp}
     (nil))
(insn 1727 1725 2423 101 (set (reg:SI 29 s13 [1254])
        (fix:SI (fix:SF (reg:SF 29 s13 [931])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2423 1727 1728 101 (set (reg:SI 2 r2)
        (reg:SI 29 s13 [1254])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1728 2423 2424 101 (set (reg:SI 30 s14 [1255])
        (fix:SI (fix:SF (reg:SF 30 s14 [935])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2424 1728 1729 101 (set (reg:SI 1 r1)
        (reg:SI 30 s14 [1255])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1729 2424 2425 101 (set (reg:SI 31 s15 [1256])
        (fix:SI (fix:SF (reg:SF 31 s15 [939])))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2425 1729 1730 101 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1256])) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1730 2425 1732 101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":360:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1732 1730 1733 101 (set (reg:SI 9 r9 [orig:941 _869 ] [941])
        (zero_extend:SI (reg:HI 0 r0 [1065]))) "../System/ray_funkcije.c":359:4 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1733 1732 1734 101 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:389 y ] [389])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1734 1733 1992 101 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1992 1734 1738 101 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1738 1992 1741 101 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1741 1738 2105 101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2105 1741 1743 101 (set (reg:SI 1 r1 [1066])
        (reg:SI 0 r0)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1743 2105 1745 101 (set (reg:SI 2 r2)
        (reg:SI 9 r9 [orig:941 _869 ] [941])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1745 1743 1746 101 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1746 1745 1747 101 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":359:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1747 1746 1838 101 (debug_marker) "../System/ray_funkcije.c":363:4 -1
     (nil))
(debug_insn 1838 1747 1748 101 (var_location:SI D#25 (plus:SI (reg:SI 4 r4 [928])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1748 1838 1749 101 (var_location:SI red (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#25) [0 t_wall[pixel_895]+0 S1 A8]))))) "../System/ray_funkcije.c":363:8 -1
     (nil))
(debug_insn 1749 1748 1839 101 (debug_marker) "../System/ray_funkcije.c":364:4 -1
     (nil))
(debug_insn 1839 1749 1750 101 (var_location:SI D#26 (plus:SI (reg:SI 10 r10 [orig:457 _885 ] [457])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1750 1839 1751 101 (var_location:SI green (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#26) [0 t_wall[_885]+0 S1 A8]))))) "../System/ray_funkcije.c":364:10 -1
     (nil))
(debug_insn 1751 1750 1840 101 (debug_marker) "../System/ray_funkcije.c":365:4 -1
     (nil))
(debug_insn 1840 1751 1752 101 (var_location:SI D#27 (plus:SI (reg:SI 11 fp [orig:452 _879 ] [452])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1752 1840 1753 101 (var_location:SI blue (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#27) [0 t_wall[_879]+0 S1 A8]))))) "../System/ray_funkcije.c":365:9 -1
     (nil))
(debug_insn 1753 1752 1754 101 (debug_marker) "../System/ray_funkcije.c":367:4 -1
     (nil))
(debug_insn 1754 1753 1755 101 (var_location:SI stropy (minus:SI (const_int 100 [0x64])
        (reg/v:SI 5 r5 [orig:389 y ] [389]))) "../System/ray_funkcije.c":367:8 -1
     (nil))
(debug_insn 1755 1754 1756 101 (debug_marker) "../System/ray_funkcije.c":368:4 -1
     (nil))
(debug_insn 1756 1755 1757 101 (var_location:SI stropy (fix:SI (mult:DF (float:DF (minus:SI (const_int 100 [0x64])
                    (reg/v:SI 5 r5 [orig:389 y ] [389])))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":368:11 -1
     (nil))
(debug_insn 1757 1756 1759 101 (debug_marker) "../System/ray_funkcije.c":370:4 -1
     (nil))
(insn 1759 1757 2426 101 (set (reg:SI 3 r3 [orig:946 t_wall[_879] ] [946])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 11 fp [orig:452 _879 ] [452])) [0 t_wall[_879]+0 S1 A8]))) "../System/ray_funkcije.c":365:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 11 fp [orig:452 _879 ] [452])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_879]+0 S1 A8]))
        (nil)))
(insn 2426 1759 1760 101 (set (reg:SI 29 s13 [orig:946 t_wall[_879] ] [946])
        (reg:SI 3 r3 [orig:946 t_wall[_879] ] [946])) "../System/ray_funkcije.c":365:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1760 2426 1763 101 (set (reg:SF 29 s13 [947])
        (float:SF (reg:SI 29 s13 [orig:946 t_wall[_879] ] [946]))) "../System/ray_funkcije.c":365:29 809 {*floatsisf2_vfp}
     (nil))
(insn 1763 1760 2427 101 (set (reg:SI 3 r3 [orig:950 t_wall[_885] ] [950])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 10 r10 [orig:457 _885 ] [457])) [0 t_wall[_885]+0 S1 A8]))) "../System/ray_funkcije.c":364:18 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 10 r10 [orig:457 _885 ] [457])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_885]+0 S1 A8]))
        (nil)))
(insn 2427 1763 1764 101 (set (reg:SI 30 s14 [orig:950 t_wall[_885] ] [950])
        (reg:SI 3 r3 [orig:950 t_wall[_885] ] [950])) "../System/ray_funkcije.c":364:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1764 2427 1767 101 (set (reg:SF 30 s14 [951])
        (float:SF (reg:SI 30 s14 [orig:950 t_wall[_885] ] [950]))) "../System/ray_funkcije.c":364:30 809 {*floatsisf2_vfp}
     (nil))
(insn 1767 1764 2428 101 (set (reg:SI 3 r3 [orig:954 t_wall[pixel_895] ] [954])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [969])
                    (reg:SI 4 r4 [928])) [0 t_wall[pixel_895]+0 S1 A8]))) "../System/ray_funkcije.c":363:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 4 r4 [928])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_895]+0 S1 A8]))
        (nil)))
(insn 2428 1767 1768 101 (set (reg:SI 31 s15 [orig:954 t_wall[pixel_895] ] [954])
        (reg:SI 3 r3 [orig:954 t_wall[pixel_895] ] [954])) "../System/ray_funkcije.c":363:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1768 2428 1770 101 (set (reg:SF 31 s15 [955])
        (float:SF (reg:SI 31 s15 [orig:954 t_wall[pixel_895] ] [954]))) "../System/ray_funkcije.c":363:28 809 {*floatsisf2_vfp}
     (nil))
(insn 1770 1768 2429 101 (set (reg:SI 29 s13 [1260])
        (fix:SI (fix:SF (reg:SF 29 s13 [947])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2429 1770 1771 101 (set (reg:SI 2 r2)
        (reg:SI 29 s13 [1260])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1771 2429 2430 101 (set (reg:SI 30 s14 [1261])
        (fix:SI (fix:SF (reg:SF 30 s14 [951])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2430 1771 1772 101 (set (reg:SI 1 r1)
        (reg:SI 30 s14 [1261])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1772 2430 2431 101 (set (reg:SI 31 s15 [1262])
        (fix:SI (fix:SF (reg:SF 31 s15 [955])))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (nil))
(insn 2431 1772 1773 101 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [1262])) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1773 2431 1775 101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":371:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1775 1773 1777 101 (set (reg:SI 4 r4 [orig:957 _832 ] [957])
        (zero_extend:SI (reg:HI 0 r0 [1067]))) "../System/ray_funkcije.c":370:4 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1777 1775 1792 101 (set (reg:SI 0 r0)
        (minus:SI (const_int 100 [0x64])
            (reg/v:SI 5 r5 [orig:389 y ] [389]))) "../System/ray_funkcije.c":368:11 45 {*arm_subsi3_insn}
     (nil))
(insn 1792 1777 1778 101 (set (reg/v:SI 5 r5 [orig:389 y ] [389])
        (plus:SI (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":327:46 7 {*arm_addsi3}
     (nil))
(call_insn/u 1778 1792 1993 101 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1993 1778 1782 101 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":368:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1782 1993 1785 101 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1785 1782 2107 101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2107 1785 1787 101 (set (reg:SI 1 r1 [1068])
        (reg:SI 0 r0)) "../System/ray_funkcije.c":368:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1787 2107 1789 101 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:957 _832 ] [957])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1789 1787 1790 101 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1790 1789 1791 101 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":370:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1791 1790 1793 101 (debug_marker) "../System/ray_funkcije.c":327:45 -1
     (nil))
(debug_insn 1793 1791 1794 101 (var_location:SI y (reg/v:SI 5 r5 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1794 1793 1796 101 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1796 1794 1797 101 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:389 y ] [389])
            (const_int 100 [0x64]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1797 1796 2191 101 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1795)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1795)
(note 2191 1797 2192 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2192 2191 2193 102 (set (pc)
        (label_ref 1798)) 284 {*arm_jump}
     (nil)
 -> 1798)
(barrier 2193 2192 1802)
(code_label 1802 2193 1803 103 82 (nil) [1 uses])
(note 1803 1802 1815 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(note 1815 1803 1806 103 NOTE_INSN_DELETED)
(insn 1806 1815 1807 103 (set (reg:SF 0 r0)
        (reg/v:SF 38 s22 [orig:339 z ] [339])) "../System/ray_funkcije.c":135:22 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1807 1806 2019 103 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2019 1807 1811 103 (set (reg:DF 2 r2)
        (const_double:DF 1.74532899999999997764366099772814777679741382599e-2 [0x0.8efa33b83e4a68p-5])) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1811 2019 1814 103 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1814 1811 1816 103 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":232:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1816 1814 1817 103 (set (reg:SF 16 s0)
        (reg:SF 0 r0 [1069])) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1817 1816 1818 103 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":232:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1818 1817 2432 103 (set (reg:SF 34 s18 [orig:418 _769 ] [418])
        (reg:SF 16 s0 [1070])) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (nil))
(insn 2432 1818 1805 103 (set (reg/f:SI 3 r3 [970])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [8 %sfp+-16 S4 A32])) "../System/ray_funkcije.c":145:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1805 2432 2194 103 (set (reg:SI 8 r8 [orig:416 pretmp_766 ] [416])
        (mem/c:SI (reg/f:SI 3 r3 [970]) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":145:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(jump_insn 2194 1805 2195 103 (set (pc)
        (label_ref 1819)) 284 {*arm_jump}
     (nil)
 -> 1819)
(barrier 2195 2194 2184)
(code_label 2184 2195 1823 104 124 (nil) [1 uses])
(note 1823 2184 1824 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1824 1823 1826 104 (debug_marker) "../System/ray_funkcije.c":375:2 -1
     (nil))
(insn 1826 1824 1827 104 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/ray_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1827 1826 1828 104 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 0000000005e0e900 TIMUT_stopwatch_update>) [0 TIMUT_stopwatch_update S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":375:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 0000000005e0e900 TIMUT_stopwatch_update>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 1828 1827 2269)
(note 2269 1828 0 NOTE_INSN_DELETED)

;; Function drawSprites (drawSprites, funcdef_no=358, decl_uid=5814, cgraph_uid=362, symbol_order=370)

      Creating newreg=857
Removing SCRATCH in insn #886 (nop 0)
rescanning insn with uid = 886.
      Creating newreg=858
Removing SCRATCH in insn #1229 (nop 3)
rescanning insn with uid = 1229.
      Creating newreg=859
Removing SCRATCH in insn #1236 (nop 3)
rescanning insn with uid = 1236.
      Creating newreg=860
Removing SCRATCH in insn #1279 (nop 3)
rescanning insn with uid = 1279.
      Creating newreg=861
Removing SCRATCH in insn #1285 (nop 3)
rescanning insn with uid = 1285.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=560, prev_offset=0)
Can't eliminate 103 to 102 (offset=104, prev_offset=0)
Can't eliminate 103 to 11 (offset=100, prev_offset=0)
Can eliminate 103 to 7 (offset=552, prev_offset=0)
Can eliminate 102 to 13 (offset=456, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=448, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 38 (freq=83)
   38: r746:SI=`py'
      REG_EQUIV `py'
deleting insn with uid = 38.
      Removing equiv init insn 36 (freq=83)
   36: r745:SI=`px'
      REG_EQUIV `px'
deleting insn with uid = 36.
Changing address in insn 39 r746:SI -- no change
Changing pseudo 746 in address of insn 39 on equiv `py'
      Creating newreg=862, assigning class CORE_REGS to address r862
	   Change to class GENERAL_REGS for r862
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
   39: r300:SF=[r862:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 1899: r862:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1899:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r862
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
Changing address in insn 37 r745:SI -- no change
Changing pseudo 745 in address of insn 37 on equiv `px'
      Creating newreg=863, assigning class CORE_REGS to address r863
	   Change to class GENERAL_REGS for r863
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
   37: r301:SF=[r863:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 1900: r863:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1900:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r863
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 50:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=864 from oldreg=347, assigning class VFP_LO_REGS to r864
   50: r864:SF={r318:SF*r318:SF+r864:SF}
      REG_DEAD r347:SF
      REG_DEAD r318:SF
    Inserting insn reload before:
 1901: r864:SF=r347:SF
    Inserting insn reload after:
 1902: r0:SF=r864:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1902:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1641:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 70:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 74:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=865 from oldreg=354, assigning class VFP_LO_REGS to r865
   74: r865:SF={r323:SF*r323:SF+r865:SF}
      REG_DEAD r354:SF
      REG_DEAD r323:SF
    Inserting insn reload before:
 1903: r865:SF=r354:SF
    Inserting insn reload after:
 1904: r0:SF=r865:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1904:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 60:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1644:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 98:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=866 from oldreg=361, assigning class VFP_LO_REGS to r866
   98: r866:SF={r325:SF*r325:SF+r866:SF}
      REG_DEAD r361:SF
      REG_DEAD r325:SF
    Inserting insn reload before:
 1905: r866:SF=r361:SF
    Inserting insn reload after:
 1906: r0:SF=r866:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1906:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 84:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1647:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 123:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 8 in insn 117:  (0) r  (1) rk  (2) Pj {*arm_addsi3}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 128:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=867 from oldreg=374, assigning class VFP_LO_REGS to r867
  128: r867:SF={r114:SF*r114:SF+r867:SF}
      REG_DEAD r374:SF
      REG_DEAD r114:SF
    Inserting insn reload before:
 1907: r867:SF=r374:SF
    Inserting insn reload after:
 1908: r0:SF=r867:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1908:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 108:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1650:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 140:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 141:  (0) Uv  (1) t {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1837:  (0) t  (1) t {*cmpsf_trap_vfp}
      Removing equiv init insn 159 (freq=27)
  159: r382:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 159.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 382 in operand 1 of insn 166 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 166:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=868, assigning class CORE_REGS to r868
  166: r0:SI=r868:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1909: r868:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1909:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r868
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 176:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 382 in operand 1 of insn 189 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=869, assigning class CORE_REGS to r869
  189: r1:SI=r869:SI
      REG_DEAD r382:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1910: r869:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1910:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r869
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 190:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 200:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1835:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 209:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1833:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 225:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 226:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1831:  (0) t  (1) t {*cmpsf_trap_vfp}
      Removing equiv init insn 237 (freq=15)
  237: r412:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 237.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 243:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 412 in operand 1 of insn 244 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 244:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=870, assigning class CORE_REGS to r870
  244: r0:SI=r870:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1911: r870:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1911:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r870
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 253:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 254:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 255:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 412 in operand 1 of insn 267 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 267:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=871, assigning class CORE_REGS to r871
  267: r1:SI=r871:SI
      REG_DEAD r412:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1912: r871:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1912:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r871
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 268:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 279 (freq=20)
  279: r434:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 279.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 285:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 434 in operand 1 of insn 286 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 286:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=872, assigning class CORE_REGS to r872
  286: r0:SI=r872:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1913: r872:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1913:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r872
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 295:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 296:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 297:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 434 in operand 1 of insn 309 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 309:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=873, assigning class CORE_REGS to r873
  309: r1:SI=r873:SI
      REG_DEAD r434:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1914: r873:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1914:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r873
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 310:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 321 (freq=27)
  321: r456:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 321.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 327:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 456 in operand 1 of insn 328 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 328:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=874, assigning class CORE_REGS to r874
  328: r0:SI=r874:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1915: r874:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1915:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r874
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 338:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 339:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 456 in operand 1 of insn 351 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 351:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=875, assigning class CORE_REGS to r875
  351: r1:SI=r875:SI
      REG_DEAD r456:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1916: r875:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1916:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r875
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 352:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 363:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 364:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1829:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 380:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 381:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1827:  (0) t  (1) t {*cmpsf_trap_vfp}
      Removing equiv init insn 392 (freq=20)
  392: r486:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 392.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 398:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 486 in operand 1 of insn 399 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 399:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=876, assigning class CORE_REGS to r876
  399: r0:SI=r876:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1917: r876:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1917:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r876
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 408:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 409:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 410:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 421:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 486 in operand 1 of insn 422 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 422:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=877, assigning class CORE_REGS to r877
  422: r1:SI=r877:SI
      REG_DEAD r486:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1918: r877:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1918:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r877
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 423:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 434 (freq=27)
  434: r508:SI=sfp:SI+0xc
      REG_EQUIV sfp:SI-0x1bc
deleting insn with uid = 434.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 439:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 440:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing pseudo 508 in operand 1 of insn 441 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 441:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=878, assigning class CORE_REGS to r878
  441: r0:SI=r878:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1919: r878:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1919:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r878
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 450:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 451:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 452:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 508 in operand 1 of insn 464 on equiv sfp:SI+0xc
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 464:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=879, assigning class CORE_REGS to r879
  464: r1:SI=r879:SI
      REG_DEAD r508:SI
      REG_EQUAL sfp:SI-0x1bc
    Inserting insn reload before:
 1920: r879:SI=sfp:SI+0xc

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 1920:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r879
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 465:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1550:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 937:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 1556 (freq=83)
 1556: r740:SI=`angle'
      REG_EQUIV `angle'
deleting insn with uid = 1556.
      Removing equiv init insn 1557 (freq=83)
 1557: r739:SI=`*.LANCHOR2'
      REG_EQUIV `*.LANCHOR2'
deleting insn with uid = 1557.
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
      Removing equiv init insn 526 (freq=83)
  526: r774:DF=3.14158999999999988261834005243144929409027099609e+0
      REG_EQUIV 3.14158999999999988261834005243144929409027099609e+0
deleting insn with uid = 526.
      Removing equiv init insn 559 (freq=83)
  559: r775:DF=5.75958166666666659949669337947852909564971923828e+0
      REG_EQUIV 5.75958166666666659949669337947852909564971923828e+0
deleting insn with uid = 559.
      Removing equiv init insn 657 (freq=83)
  657: r776:DF=2.00000000000000011102230246251565404236316680908e-1
      REG_EQUIV 2.00000000000000011102230246251565404236316680908e-1
deleting insn with uid = 657.
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 499:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            0 Early clobber: reject++
            0 Conflict early clobber reload: reject--
          alt=0,overall=6,losers=1,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 503:  (0) t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =t  (1) t {*abssf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =t  (1) t {*abssf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1825:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 523:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 774 in operand 1 of insn 1625 on equiv 3.14158999999999988261834005243144929409027099609e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1625:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing address in insn 542 r740:SI -- no change
Changing pseudo 740 in address of insn 542 on equiv `angle'
      Creating newreg=880, assigning class CORE_REGS to address r880
	   Change to class GENERAL_REGS for r880
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 542:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  542: r541:SF=[r880:SI]
      REG_EQUIV [r740:SI]
      REG_EQUAL [`angle']
    Inserting insn reload before:
 1921: r880:SI=`angle'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1921:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r880
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 552:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 546:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing address in insn 550 r739:SI -- no change
Changing pseudo 739 in address of insn 550 on equiv `*.LANCHOR2'
      Creating newreg=881, assigning class CORE_REGS to address r881
	   Change to class GENERAL_REGS for r881
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 550:  (0) m  (1) r {*thumb2_movsf_vfp}
  550: [r881:SI]=r248:SF
    Inserting insn reload before:
 1922: r881:SI=`*.LANCHOR2'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1922:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r881
Changing pseudo 775 in operand 1 of insn 1626 on equiv 5.75958166666666659949669337947852909564971923828e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1626:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) l {*thumb2_cbnz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 567:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 582:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 578:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 579:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 580:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=882 from oldreg=139, assigning class VFP_LO_REGS to r882
  580: r548:SF=float(r882:SI)
    Inserting insn reload before:
 1923: r882:SI=r139:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1923:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 581:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1823:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1821:  (0) t  (1) G {*cmpsf_trap_vfp}
Changing address in insn 602 r746:SI -- no change
Changing pseudo 746 in address of insn 602 on equiv `py'
      Creating newreg=883, assigning class CORE_REGS to address r883
	   Change to class GENERAL_REGS for r883
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 602:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  602: r143:SF=[r883:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 1924: r883:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1924:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r883
Changing address in insn 607 r745:SI -- no change
Changing pseudo 745 in address of insn 607 on equiv `px'
      Creating newreg=884, assigning class CORE_REGS to address r884
	   Change to class GENERAL_REGS for r884
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 607:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
  607: r148:SF=[r884:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 1925: r884:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1925:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r884
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1558:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 618:  (0) r  (1) I {*thumb2_movsi_vfp}
            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 611:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=885 from oldreg=144, assigning class VFP_LO_REGS to r885
  611: r885:SF={r142:SF*r154:SF+r885:SF}
    Inserting insn reload before:
 1926: r885:SF=r143:SF
    Inserting insn reload after:
 1927: r144:SF=r885:SF

            3 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 614:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=886 from oldreg=149, assigning class VFP_LO_REGS to r886
  614: r886:SF={r147:SF*r154:SF+r886:SF}
      REG_DEAD r154:SF
    Inserting insn reload before:
 1928: r886:SF=r148:SF
    Inserting insn reload after:
 1929: r149:SF=r886:SF

            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 627:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 612:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=887 from oldreg=554, assigning class VFP_LO_REGS to r887
  612: r887:SI=fix(fix(r144:SF))
      REG_DEAD r144:SF
    Inserting insn reload after:
 1930: r554:SI=r887:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1930:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) r  (2) r {divsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =r  (1) r  (2) %r  (3) r {*mla}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 631:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=888 from oldreg=852, assigning class VFP_LO_REGS to r888
  631: r154:SF=float(r888:SI)
    Inserting insn reload before:
 1931: r888:SI=r852:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1931:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 616:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=889 from oldreg=556, assigning class VFP_LO_REGS to r889
  616: r889:SI=fix(fix(r149:SF))
      REG_DEAD r149:SF
    Inserting insn reload after:
 1932: r556:SI=r889:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1932:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =r  (1) r  (2) r {divsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 622:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) l {*thumb2_cbnz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1819:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 639:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1584:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=24,losers=3 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1585:  (0) r  (1) 0  (2) rI {*thumb2_movsicc_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 776 in operand 1 of insn 1627 on equiv 2.00000000000000011102230246251565404236316680908e-1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1627:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) l {*thumb2_cbnz}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 666:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 667:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 670:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1817:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1815:  (0) t  (1) G {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 679:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 686:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 694:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 705:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 723:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 724:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 725:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 726:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1666:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 729:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
      Creating newreg=890 from oldreg=580, assigning class GENERAL_REGS to r890
  729: r890:SI=zero_extend([r825:SI+0x14])
    Inserting insn reload after:
 1933: r580:SI=r890:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1933:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 735:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 739:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 741:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
      Creating newreg=891 from oldreg=0, assigning class VFP_LO_REGS to r891
  741: r891:SF=r168:SF*r585:SF
      REG_DEAD r585:SF
    Inserting insn reload after:
 1934: r0:SF=r891:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1934:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 766:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 754:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 755:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 762:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 764:  (0) m  (1) r {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1813:  (0) t  (1) t {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1811:  (0) t  (1) t {*cmpsf_trap_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 781:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 786:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 787:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 792:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 17:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 801:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 802:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 805:  (0) r  (1) I {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1559:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 812:  (0) =t  (1) 0  (2) Dt {*combine_vcvt_f32_s32}
      Creating newreg=892 from oldreg=600, assigning class VFP_LO_REGS to r892
  812: r892:SF=float(r892:SF#0)*5.0e-1
      REG_DEAD r158:SI
    Inserting insn reload before:
 1935: clobber r892:SF
 1936: r892:SF#0=r158:SI
    Inserting insn reload after:
 1937: r600:SF=r892:SF

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1936:  (0) *t  (1) r {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 813:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =t  (1) t  (2) t  (3) 0 {*fmsubsf4}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 817:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 819:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 835:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 836:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=893 from oldreg=304, assigning class VFP_LO_REGS to r893
  836: r741:SF=float(r893:SI)
    Inserting insn reload before:
 1938: r893:SI=r304:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1938:  (0) *t  (1) r {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1809:  (0) t  (1) G {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 906:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 912:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 844:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
      Creating newreg=894 from oldreg=310, assigning class GENERAL_REGS to r894
  844: r894:SI=zero_extend([r825:SI+0x14])
    Inserting insn reload after:
 1939: r310:SI=r894:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1939:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1560:  (0) =t  (1) t {*floatsisf2_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 845:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1897:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=895 from oldreg=837, assigning class VFP_LO_REGS to r895
 1897: r606:SF=float(r895:SI)
    Inserting insn reload before:
 1940: r895:SI=r837:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1940:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =t  (1) t {*truncsisf2_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 851:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=896 from oldreg=303, assigning class VFP_LO_REGS to r896
  851: r896:SI=fix(fix(r297:SF))
    Inserting insn reload after:
 1941: r303:SI=r896:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly set: reject++
            Using memory insn operand 1: reject+=3
          alt=6,overall=10,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1941:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1561:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 858:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=897 from oldreg=608, assigning class VFP_LO_REGS to r897
  858: r897:SI=fix(fix(r281:SF))
    Inserting insn reload after:
 1942: r608:SI=r897:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1942:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) =r  (1) r  (2) %r  (3) r {*mla}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 862:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 871:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 867:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 872:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 877:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Scratch win: reject+=2
            alt=0: Bad operand -- refuse
            0 Scratch win: reject+=2
            1 Matching alt: reject+=2
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Scratch win: reject+=2
          alt=2,overall=2,losers=0,rld_nregs=0
            0 Scratch win: reject+=2
            alt=0: Bad operand -- refuse
            0 Scratch win: reject+=2
            1 Matching alt: reject+=2
            alt=1,overall=16,losers=2 -- refuse
            0 Scratch win: reject+=2
          alt=2,overall=2,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 886:  (0) r  (1) r  (2) r {*iorsi3_compare0_scratch}
      Change to class GENERAL_REGS for r857
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 896:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 899:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=898 from oldreg=273, assigning class VFP_LO_REGS to r898
  899: r317:SF=float(r898:SI)
      REG_DEAD r273:SI
    Inserting insn reload before:
 1943: r898:SI=r273:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1943:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 905:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=899 from oldreg=273, assigning class VFP_LO_REGS to r899
  905: r181:SF=float(r899:SI)
      REG_DEAD r273:SI
    Inserting insn reload before:
 1944: r899:SI=r273:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1944:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) t  (1) t {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 913:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 914:  (0) =t  (1) t {fixuns_truncsfsi2}
      Creating newreg=900 from oldreg=625, assigning class VFP_LO_REGS to r900
  914: r900:SI=uns_fix(fix(r622:SF))
      REG_DEAD r622:SF
    Inserting insn reload after:
 1945: r625:SI=r900:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1945:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 916:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
      Creating newreg=901 from oldreg=626, assigning class GENERAL_REGS to r901
  916: r901:SI=zero_extend(r625:SI#0)
      REG_DEAD r625:SI
    Inserting insn reload after:
 1946: r626:SI=r901:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1946:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 917:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 935:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=902 from oldreg=841, assigning class VFP_LO_REGS to r902
  935: r627:SF=float(r902:SI)
    Inserting insn reload before:
 1947: r902:SI=r841:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1947:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 936:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1805:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1803:  (0) t  (1) G {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1801:  (0) t  (1) G {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1799:  (0) t  (1) t {*cmpsf_trap_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 966:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=903 from oldreg=274, assigning class VFP_LO_REGS to r903
  966: r632:SF=float(r903:SI)
      REG_DEAD r274:SI
    Inserting insn reload before:
 1948: r903:SI=r274:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=19,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=20,losers=2 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=16,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1948:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 968:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=904 from oldreg=275, assigning class VFP_LO_REGS to r904
  968: r633:SF=float(r904:SI)
      REG_DEAD r275:SI
    Inserting insn reload before:
 1949: r904:SI=r275:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1949:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 973:  (0) =t  (1) t {fixuns_truncsfsi2}
      Creating newreg=905 from oldreg=638, assigning class VFP_LO_REGS to r905
  973: r905:SI=uns_fix(fix(r186:SF))
      REG_DEAD r186:SF
    Inserting insn reload after:
 1950: r638:SI=r905:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1950:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 970:  (0) =t  (1) t {fixuns_truncsfsi2}
      Creating newreg=906 from oldreg=635, assigning class VFP_LO_REGS to r906
  970: r906:SI=uns_fix(fix(r189:SF))
      REG_DEAD r189:SF
    Inserting insn reload after:
 1951: r635:SI=r906:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1951:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 976:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 977:  (0) =t  (1) t {fixuns_truncsfsi2}
      Creating newreg=907 from oldreg=642, assigning class VFP_LO_REGS to r907
  977: r907:SI=uns_fix(fix(r640:SF))
      REG_DEAD r640:SF
    Inserting insn reload after:
 1952: r642:SI=r907:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=5,overall=16,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=13,overall=3,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1952:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 980:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 981:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 982:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 990:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=908 from oldreg=0, assigning class VFP_LO_REGS to r908
  990: r908:SI=fix(fix(r191:SF))
      REG_DEAD r191:SF
    Inserting insn reload after:
 1953: r0:SI=r908:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1953:  (0) r  (1) *t {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=12,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=16,losers=2 -- refuse
            1 Costly set: reject++
          alt=10,overall=1,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 989:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 992:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
      Creating newreg=909 from oldreg=848, assigning class GENERAL_REGS to r909
  992: r909:SI=zero_extend([r846:SI+0x14])
    Inserting insn reload after:
 1954: r848:SI=r909:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1954:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1562:  (0) =t  (1) t {*floatsisf2_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 993:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 995:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 999:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1797:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1795:  (0) t  (1) G {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1026:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1793:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1791:  (0) t  (1) G {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1056:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1053:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1789:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1069:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1075:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1563:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1081:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1087:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1079:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
      Creating newreg=910 from oldreg=650, assigning class GENERAL_REGS to r910
 1079: r910:SI=zero_extend([r825:SI+0x14])
    Inserting insn reload after:
 1955: r650:SI=r910:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1955:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1080:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1082:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1088:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1083:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1139:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=21,losers=3,rld_nregs=3
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non input pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1140:  (0) r  (1) r  (2) r {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1098:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1099:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1103:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1113:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1121:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 1108:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
      Creating newreg=911 from oldreg=657, assigning class GENERAL_REGS to r911
 1108: r911:SI=zero_extend([r831:SI+0x16])
    Inserting insn reload after:
 1956: r657:SI=r911:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=16,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1956:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1109:  (0) =t  (1) t {*floatsisf2_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1111:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1787:  (0) t  (1) t {*cmpsf_trap_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1123:  (0) m  (1) r {*arm_movqi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=24,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1147:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1136:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1141:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1142
	 Choosing alt 0 in insn 1142:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 1143:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1145:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1146:  (5) rk {*ldm4_}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 1154:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 1157:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1159:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1564:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1165:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) l  (1) Py {*arm_cmpsi_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1174:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1785:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1187:  (0) ?r  (1) t {*thumb2_movsf_vfp}
Changing pseudo 774 in operand 1 of insn 1632 on equiv 3.14158999999999988261834005243144929409027099609e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1632:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1196:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1780:  (0) t  (1) G {*cmpsf_trap_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=20,losers=2 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=20,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=5,overall=11,losers=1,rld_nregs=1
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=7,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1592:  (0) r  (1) K  (2) rI {*thumb2_movsicc_insn}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1219:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1223:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1782:  (0) t  (1) G {*cmpsf_trap_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1220:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=912 from oldreg=219, assigning class VFP_LO_REGS to r912
 1220: r912:SI=fix(fix(r218:SF))
    Inserting insn reload after:
 1957: r219:SI=r912:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
          alt=5,overall=16,losers=2,rld_nregs=1
            0 Costly set: reject++
            Using memory insn operand 1: reject+=3
          alt=6,overall=10,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1957:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1228:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1224:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=913 from oldreg=222, assigning class VFP_LO_REGS to r913
 1224: r913:SI=fix(fix(r221:SF))
    Inserting insn reload after:
 1958: r222:SI=r913:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1958:  (0) r  (1) *t {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1234:  (0) l  (1) l  (2) l {*arm_addsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r858
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1236:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r859
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1238:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1239:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1240:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1231:  (0) r  (1) r  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1232:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1233:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1227:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1241:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1243:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1245:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=27,losers=3 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=20,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=5,overall=11,losers=1,rld_nregs=1
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=7,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1599:  (0) r  (1) K  (2) rI {*thumb2_movsicc_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) l {*thumb2_cbnz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1250:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1253:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1257:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1266:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1267:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1268:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=914 from oldreg=222, assigning class VFP_LO_REGS to r914
 1268: r914:SI=fix(fix(r230:SF))
      REG_DEAD r230:SF
    Inserting insn reload after:
 1959: r222:SI=r914:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 1959:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1278:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1281:  (0) r  (1) r  (2) M {*arm_shiftsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1279:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r860
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1282:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1285:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r861
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1287:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1288:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1289:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1290:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1292:  (0) =r  (1) r  (2) %r  (3) r {*mla}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1294:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1296:  (0) l {*thumb2_cbnz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1299:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1302:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1306:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1316:  (0) m  (1) r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1321:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1777:  (0) t  (1) t {*cmpsf_trap_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1328:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1330:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1333:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1338:  (0) US {*sibcall_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1343:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1346:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1350:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1351:  (0) m  (1) l {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1355:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1359:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1360:  (0) r  (1) I {*arm_cmpsi_insn}
Changing address in insn 1364 r746:SI -- no change
Changing pseudo 746 in address of insn 1364 on equiv `py'
      Creating newreg=915, assigning class CORE_REGS to address r915
	   Change to class GENERAL_REGS for r915
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1364:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
 1364: r300:SF=[r915:SI]
      REG_EQUAL [`py']
    Inserting insn reload before:
 1960: r915:SI=`py'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1960:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r915
Changing address in insn 1366 r745:SI -- no change
Changing pseudo 745 in address of insn 1366 on equiv `px'
      Creating newreg=916, assigning class CORE_REGS to address r916
	   Change to class GENERAL_REGS for r916
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1366:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
 1366: r301:SF=[r916:SI]
      REG_EQUAL [`px']
    Inserting insn reload before:
 1961: r916:SI=`px'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1961:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r916
          alt=0,overall=6,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            alt=1,overall=12,losers=1 -- refuse
	 Choosing alt 0 in insn 1374:  (0) l {*thumb2_cbz}
      Creating newreg=917 from oldreg=245, assigning class LO_REGS to r917
 1374: {pc={(r917:SI==0)?L1383:pc};clobber cc:CC;}
      REG_DEAD r245:SI
      REG_UNUSED cc:CC
      REG_BR_PROB 536870916
    Inserting insn reload before:
 1962: r917:SI=r245:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1962:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1377:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1380:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1381:  (0) US {*sibcall_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1386:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1389:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1390:  (0) US {*sibcall_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1399:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1400:  (0) m  (1) l {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1565:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1408:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1409:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1420:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 1424:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=918 from oldreg=838, assigning class VFP_LO_REGS to r918
 1424: r741:SF=float(r918:SI)
    Inserting insn reload before:
 1963: r918:SI=r838:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1963:  (0) *t  (1) r {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1417:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1775:  (0) t  (1) t {*cmpsf_trap_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1435:  (0) l  (1) Py {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19 20
EBB 21
EBB 22 23
EBB 24 25
EBB 26
EBB 27
EBB 28
EBB 29 30 31 32
EBB 33
EBB 34
EBB 35
EBB 36 37
EBB 38 39 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 47
EBB 48
EBB 49 50
EBB 51
EBB 52
EBB 53 54
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 625 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 55
EBB 56
EBB 57 58 59 60
EBB 61
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 642 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 635 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Rejecting inheritance for 638 because of disjoint classes VFP_LO_REGS and NO_REGS
    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 62
EBB 63
EBB 64 102
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71 72
EBB 73
EBB 74 75 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81 82 83
EBB 84 85
EBB 86 87
EBB 88
EBB 89 90
EBB 91 92
EBB 93 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100 101

********** Pseudo live ranges #1: **********

  BB 94
   Insn 1381: point = 0, n_alt = 1
   Insn 1380: point = 0, n_alt = 1
   Insn 1378: point = 0, n_alt = -1
   Insn 1377: point = 0, n_alt = 1
  BB 88
   Insn 1338: point = 0, n_alt = 1
   Insn 1336: point = 0, n_alt = -1
   Insn 1334: point = 0, n_alt = -1
   Insn 1333: point = 0, n_alt = 1
  BB 95
   Insn 1390: point = 0, n_alt = 1
   Insn 1389: point = 0, n_alt = 1
   Insn 1387: point = 0, n_alt = -1
   Insn 1386: point = 0, n_alt = 1
  BB 93
   Insn 1374: point = 0, n_alt = 0
   Insn 1962: point = 1, n_alt = 5
  BB 91
   Insn 1361: point = 4, n_alt = -1
   Insn 1360: point = 4, n_alt = 3
   Insn 1359: point = 4, n_alt = 4
   Insn 1355: point = 5, n_alt = 4
  BB 90
   Insn 1351: point = 7, n_alt = 7
   Insn 1350: point = 8, n_alt = 4
  BB 89
   Insn 1347: point = 11, n_alt = -1
   Insn 1346: point = 11, n_alt = 0
   Insn 1343: point = 11, n_alt = 5
  BB 87
   Insn 1330: point = 13, n_alt = 0
   Insn 1328: point = 14, n_alt = 1
  BB 86
   Insn 1323: point = 16, n_alt = -1
   Insn 1778: point = 16, n_alt = -2
   Insn 1777: point = 16, n_alt = 0
   Insn 1321: point = 17, n_alt = 2
  BB 85
   Insn 1316: point = 19, n_alt = 6
   Insn 1680: point = 20, n_alt = -2
   Insn 1314: point = 21, n_alt = -1
   Insn 1311: point = 21, n_alt = -1
   Insn 1310: point = 21, n_alt = -2
   Insn 1309: point = 22, n_alt = -2
   Insn 1679: point = 23, n_alt = -2
   Insn 1307: point = 24, n_alt = -1
   Insn 1306: point = 24, n_alt = 1
   Insn 1305: point = 25, n_alt = -2
   Insn 1678: point = 27, n_alt = -2
   Insn 1304: point = 28, n_alt = -1
   Insn 1302: point = 28, n_alt = 6
   Insn 1300: point = 28, n_alt = -1
   Insn 1299: point = 28, n_alt = 1
  BB 84
   Insn 1296: point = 30, n_alt = 0
   Insn 1294: point = 31, n_alt = 1
   Insn 1292: point = 33, n_alt = 0
   Insn 1290: point = 35, n_alt = 1
   Insn 1289: point = 36, n_alt = 0
   Insn 1283: point = 38, n_alt = 0
   Insn 1288: point = 40, n_alt = 1
   Insn 1287: point = 42, n_alt = 1
   Insn 1285: point = 44, n_alt = 0
   Insn 1282: point = 46, n_alt = 1
   Insn 1279: point = 48, n_alt = 0
   Insn 1281: point = 50, n_alt = 2
   Insn 1278: point = 51, n_alt = 5
   Insn 1277: point = 52, n_alt = 0
  BB 83
   Insn 1959: point = 55, n_alt = 10
	Hard reg 3 is preferable by r914 with profit 25
   Insn 1268: point = 57, n_alt = 0
   Insn 1267: point = 59, n_alt = 4
   Insn 1266: point = 59, n_alt = 0
   Insn 1677: point = 61, n_alt = -2
   Insn 1265: point = 62, n_alt = -1
   Insn 1262: point = 62, n_alt = -1
   Insn 1261: point = 62, n_alt = -2
   Insn 1260: point = 63, n_alt = -2
   Insn 1676: point = 64, n_alt = -2
   Insn 1258: point = 65, n_alt = -1
   Insn 1257: point = 65, n_alt = 1
   Insn 1256: point = 66, n_alt = -2
   Insn 1675: point = 68, n_alt = -2
   Insn 1255: point = 69, n_alt = -1
   Insn 1253: point = 69, n_alt = 6
   Insn 1251: point = 69, n_alt = -1
   Insn 1250: point = 69, n_alt = 1
  BB 82
   Insn 1247: point = 71, n_alt = 0
   Insn 1599: point = 72, n_alt = 9
   Insn 1245: point = 73, n_alt = 1
   Insn 1243: point = 75, n_alt = 0
   Insn 1241: point = 77, n_alt = 1
   Insn 1227: point = 78, n_alt = 6
   Insn 1233: point = 79, n_alt = 0
   Insn 1232: point = 81, n_alt = 1
   Insn 1231: point = 83, n_alt = 2
   Insn 1240: point = 84, n_alt = 0
   Insn 1239: point = 86, n_alt = 1
   Insn 1238: point = 88, n_alt = 1
   Insn 1236: point = 90, n_alt = 0
   Insn 1229: point = 92, n_alt = 0
   Insn 1234: point = 93, n_alt = 1
   Insn 1958: point = 95, n_alt = 10
	Hard reg 3 is preferable by r913 with profit 51
   Insn 1224: point = 97, n_alt = 0
   Insn 1228: point = 98, n_alt = 5
   Insn 1957: point = 99, n_alt = 10
	Hard reg 9 is preferable by r912 with profit 51
   Insn 1220: point = 101, n_alt = 0
   Insn 1783: point = 102, n_alt = -2
   Insn 1782: point = 102, n_alt = 1
   Insn 1223: point = 102, n_alt = 3
   Insn 1219: point = 103, n_alt = 3
   Insn 1210: point = 104, n_alt = -2
   Insn 1674: point = 106, n_alt = -2
   Insn 1209: point = 107, n_alt = -1
   Insn 1592: point = 107, n_alt = 9
   Insn 1781: point = 108, n_alt = -2
   Insn 1780: point = 108, n_alt = 1
   Insn 1199: point = 108, n_alt = -2
   Insn 1208: point = 110, n_alt = -2
   Insn 1673: point = 111, n_alt = -2
   Insn 1198: point = 112, n_alt = -1
   Insn 1197: point = 112, n_alt = -2
   Insn 1196: point = 112, n_alt = 0
   Insn 1672: point = 114, n_alt = -2
   Insn 1195: point = 115, n_alt = -1
   Insn 1192: point = 115, n_alt = -1
   Insn 1632: point = 115, n_alt = 6
   Insn 1188: point = 115, n_alt = -1
   Insn 1187: point = 115, n_alt = 1
  BB 81
   Insn 1176: point = 117, n_alt = -1
   Insn 1786: point = 117, n_alt = -2
   Insn 1785: point = 117, n_alt = 0
   Insn 1174: point = 118, n_alt = 2
  BB 80
   Insn 1167: point = 120, n_alt = -1
   Insn 1166: point = 120, n_alt = 0
   Insn 1165: point = 121, n_alt = 1
  BB 97
   Insn 1767: point = 123, n_alt = -1
   Insn 1409: point = 123, n_alt = 7
   Insn 1408: point = 124, n_alt = 1
   Insn 1565: point = 125, n_alt = 3
  BB 44
   Insn 1736: point = 127, n_alt = -1
   Insn 1559: point = 127, n_alt = 3
  BB 79
   Insn 1564: point = 129, n_alt = 3
   Insn 1892: point = 130, n_alt = -2
   Insn 1891: point = 132, n_alt = -2
  BB 78
   Insn 1160: point = 135, n_alt = -1
   Insn 1159: point = 135, n_alt = 0
   Insn 1157: point = 135, n_alt = 2
   Insn 1154: point = 136, n_alt = 2
  BB 77
   Insn 1150: point = 138, n_alt = -1
   Insn 1146: point = 138, n_alt = 0
   Insn 1145: point = 139, n_alt = 7
   Insn 1144: point = 140, n_alt = 5
   Insn 1143: point = 141, n_alt = 2
   Insn 1142: point = 143, n_alt = 0
   Insn 1141: point = 145, n_alt = 1
   Insn 1136: point = 147, n_alt = 1
   Insn 1149: point = 148, n_alt = -2
   Insn 1148: point = 148, n_alt = -2
   Insn 1147: point = 148, n_alt = 3
   Insn 1130: point = 148, n_alt = -1
  BB 76
   Insn 1123: point = 149, n_alt = 8
  BB 75
   Insn 1115: point = 151, n_alt = -1
   Insn 1788: point = 151, n_alt = -2
   Insn 1787: point = 151, n_alt = 0
   Insn 1112: point = 152, n_alt = 0
   Insn 1111: point = 154, n_alt = 0
   Insn 1109: point = 156, n_alt = 0
   Insn 1956: point = 158, n_alt = 9
	Hard reg 31 is preferable by r911 with profit 18
   Insn 1108: point = 160, n_alt = 1
   Insn 1121: point = 161, n_alt = 1
   Insn 1113: point = 162, n_alt = 3
  BB 74
   Insn 1100: point = 164, n_alt = -1
   Insn 1129: point = 164, n_alt = -2
   Insn 1103: point = 165, n_alt = 4
   Insn 1099: point = 166, n_alt = 0
   Insn 1098: point = 167, n_alt = 1
  BB 73
   Insn 1890: point = 169, n_alt = -2
   Insn 1889: point = 171, n_alt = -2
   Insn 1888: point = 173, n_alt = -2
   Insn 1887: point = 175, n_alt = -2
   Insn 1886: point = 177, n_alt = -2
   Insn 1885: point = 179, n_alt = -2
   Insn 1884: point = 181, n_alt = -2
   Insn 25: point = 183, n_alt = 1
   Insn 24: point = 184, n_alt = -2
   Insn 1140: point = 185, n_alt = 1
   Insn 1139: point = 187, n_alt = 1
   Insn 1083: point = 188, n_alt = 0
   Insn 1088: point = 190, n_alt = 0
   Insn 1082: point = 192, n_alt = 0
   Insn 1080: point = 194, n_alt = 0
   Insn 1955: point = 196, n_alt = 9
	Hard reg 30 is preferable by r910 with profit 1
   Insn 1079: point = 198, n_alt = 1
   Insn 1087: point = 199, n_alt = 0
   Insn 1081: point = 200, n_alt = 2
  BB 72
   Insn 1761: point = 202, n_alt = -1
   Insn 1563: point = 202, n_alt = 3
  BB 71
   Insn 1076: point = 204, n_alt = -1
   Insn 1075: point = 204, n_alt = 0
  BB 99
   Insn 1770: point = 206, n_alt = -1
   Insn 1895: point = 206, n_alt = -2
   Insn 1894: point = 208, n_alt = -2
   Insn 1893: point = 210, n_alt = -2
  BB 69
   Insn 1758: point = 213, n_alt = -1
   Insn 1883: point = 213, n_alt = -2
   Insn 1882: point = 215, n_alt = -2
   Insn 1881: point = 217, n_alt = -2
  BB 66
   Insn 1755: point = 220, n_alt = -1
   Insn 1880: point = 220, n_alt = -2
   Insn 1879: point = 222, n_alt = -2
   Insn 1878: point = 224, n_alt = -2
  BB 65
   Insn 1033: point = 227, n_alt = -1
   Insn 1794: point = 227, n_alt = -2
   Insn 1793: point = 227, n_alt = 0
   Insn 1026: point = 227, n_alt = 0
  BB 102
   Insn 1877: point = 229, n_alt = -2
   Insn 1876: point = 231, n_alt = -2
   Insn 1875: point = 233, n_alt = -2
  BB 64
   Insn 1016: point = 236, n_alt = -1
   Insn 1796: point = 236, n_alt = -2
   Insn 1795: point = 236, n_alt = 1
  BB 68
   Insn 1063: point = 237, n_alt = -1
   Insn 1790: point = 237, n_alt = -2
   Insn 1789: point = 237, n_alt = 0
   Insn 1053: point = 237, n_alt = 4
   Insn 1056: point = 238, n_alt = 0
  BB 67
   Insn 1050: point = 240, n_alt = -1
   Insn 1792: point = 240, n_alt = -2
   Insn 1791: point = 240, n_alt = 1
  BB 46
   Insn 1739: point = 241, n_alt = -1
   Insn 1862: point = 241, n_alt = -2
   Insn 1861: point = 243, n_alt = -2
   Insn 1860: point = 245, n_alt = -2
   Insn 1859: point = 247, n_alt = -2
   Insn 1858: point = 249, n_alt = -2
   Insn 23: point = 251, n_alt = 1
   Insn 845: point = 252, n_alt = 5
   Insn 1560: point = 253, n_alt = 0
   Insn 1939: point = 255, n_alt = 9
	Hard reg 30 is preferable by r894 with profit 4
   Insn 844: point = 257, n_alt = 1
   Insn 912: point = 258, n_alt = 3
   Insn 20: point = 259, n_alt = 3
   Insn 906: point = 260, n_alt = 3
   Insn 22: point = 261, n_alt = 3
  BB 98
   Insn 1426: point = 263, n_alt = -1
   Insn 1776: point = 263, n_alt = -2
   Insn 1775: point = 263, n_alt = 0
   Insn 1417: point = 263, n_alt = 4
   Insn 1424: point = 264, n_alt = 0
   Insn 1963: point = 266, n_alt = 9
	Hard reg 1 is preferable by r918 with profit 37
   Insn 1420: point = 267, n_alt = 0
  BB 63
   Insn 1752: point = 269, n_alt = -1
   Insn 1874: point = 269, n_alt = -2
   Insn 1873: point = 271, n_alt = -2
   Insn 1872: point = 273, n_alt = -2
   Insn 1871: point = 275, n_alt = -2
   Insn 1870: point = 277, n_alt = -2
  BB 62
   Insn 1009: point = 280, n_alt = -1
   Insn 1798: point = 280, n_alt = -2
   Insn 1797: point = 280, n_alt = 0
   Insn 999: point = 280, n_alt = 2
   Insn 1002: point = 281, n_alt = 0
  BB 50
   Insn 1742: point = 283, n_alt = -1
  BB 61
   Insn 995: point = 284, n_alt = 5
   Insn 993: point = 285, n_alt = 1
   Insn 1562: point = 286, n_alt = 0
   Insn 1954: point = 288, n_alt = 9
	Hard reg 30 is preferable by r909 with profit 18
   Insn 992: point = 290, n_alt = 1
   Insn 991: point = 291, n_alt = -1
   Insn 989: point = 291, n_alt = 10
   Insn 1953: point = 291, n_alt = 10
	Hard reg 0 is preferable by r908 with profit 18
   Insn 990: point = 292, n_alt = 0
   Insn 988: point = 294, n_alt = 0
   Insn 1671: point = 295, n_alt = -2
   Insn 983: point = 296, n_alt = -1
   Insn 982: point = 296, n_alt = 1
   Insn 981: point = 297, n_alt = 1
   Insn 980: point = 298, n_alt = 1
   Insn 1952: point = 299, n_alt = 13
   Insn 977: point = 301, n_alt = 0
   Insn 976: point = 303, n_alt = 0
   Insn 1951: point = 305, n_alt = 13
   Insn 970: point = 307, n_alt = 0
   Insn 969: point = 309, n_alt = 0
   Insn 1950: point = 311, n_alt = 13
   Insn 973: point = 313, n_alt = 0
   Insn 967: point = 315, n_alt = 0
   Insn 968: point = 317, n_alt = 0
   Insn 1949: point = 319, n_alt = 9
	Hard reg 2 is preferable by r904 with profit 18
   Insn 966: point = 321, n_alt = 0
   Insn 1948: point = 323, n_alt = 9
	Hard reg 12 is preferable by r903 with profit 18
  BB 60
   Insn 960: point = 326, n_alt = -1
   Insn 1800: point = 326, n_alt = -2
   Insn 1799: point = 326, n_alt = 0
  BB 59
   Insn 953: point = 327, n_alt = -1
   Insn 1802: point = 327, n_alt = -2
   Insn 1801: point = 327, n_alt = 1
  BB 58
   Insn 946: point = 328, n_alt = -1
   Insn 1804: point = 328, n_alt = -2
   Insn 1803: point = 328, n_alt = 1
  BB 57
   Insn 939: point = 329, n_alt = -1
   Insn 1806: point = 329, n_alt = -2
   Insn 1805: point = 329, n_alt = 0
   Insn 936: point = 329, n_alt = 0
   Insn 935: point = 331, n_alt = 0
   Insn 1947: point = 333, n_alt = 9
	Hard reg 6 is preferable by r902 with profit 312
  BB 55
   Insn 1748: point = 335, n_alt = -1
   Insn 1623: point = 335, n_alt = -2
  BB 52
   Insn 1744: point = 337, n_alt = -1
   Insn 899: point = 337, n_alt = 0
   Insn 1943: point = 339, n_alt = 9
	Hard reg 3 is preferable by r898 with profit 128
  BB 101
   Insn 1773: point = 342, n_alt = -1
  BB 54
   Insn 1746: point = 343, n_alt = -1
   Insn 917: point = 343, n_alt = 0
   Insn 1946: point = 345, n_alt = 9
	Hard reg 31 is preferable by r901 with profit 92
   Insn 916: point = 347, n_alt = 1
   Insn 1945: point = 349, n_alt = 13
   Insn 914: point = 351, n_alt = 0
   Insn 913: point = 353, n_alt = 0
  BB 53
   Insn 908: point = 356, n_alt = -1
   Insn 1808: point = 356, n_alt = -2
   Insn 1807: point = 356, n_alt = 0
   Insn 905: point = 356, n_alt = 0
   Insn 1944: point = 358, n_alt = 9
	Hard reg 3 is preferable by r899 with profit 150
  BB 51
   Insn 897: point = 361, n_alt = -1
   Insn 896: point = 361, n_alt = 0
  BB 56
   Insn 1624: point = 362, n_alt = -2
  BB 100
   Insn 1436: point = 364, n_alt = -1
   Insn 1435: point = 364, n_alt = 0
  BB 49
   Insn 887: point = 365, n_alt = -1
   Insn 886: point = 365, n_alt = 2
  BB 48
   Insn 881: point = 367, n_alt = -1
   Insn 880: point = 367, n_alt = 0
   Insn 877: point = 367, n_alt = 1
   Insn 872: point = 369, n_alt = 1
   Insn 867: point = 370, n_alt = 1
   Insn 871: point = 372, n_alt = 1
   Insn 862: point = 373, n_alt = 1
   Insn 859: point = 375, n_alt = 0
   Insn 1942: point = 377, n_alt = 10
	Hard reg 3 is preferable by r897 with profit 341
   Insn 858: point = 379, n_alt = 0
  BB 47
   Insn 1869: point = 381, n_alt = -2
   Insn 1868: point = 383, n_alt = -2
   Insn 1867: point = 385, n_alt = -2
   Insn 1866: point = 387, n_alt = -2
   Insn 1865: point = 389, n_alt = -2
   Insn 1864: point = 391, n_alt = -2
   Insn 1863: point = 393, n_alt = -2
   Insn 19: point = 395, n_alt = 1
   Insn 1561: point = 396, n_alt = 5
   Insn 1941: point = 397, n_alt = 10
	Hard reg 8 is preferable by r896 with profit 37
   Insn 851: point = 399, n_alt = 0
   Insn 986: point = 400, n_alt = 0
   Insn 850: point = 401, n_alt = 0
   Insn 1897: point = 403, n_alt = 0
   Insn 1940: point = 405, n_alt = 9
	Hard reg 9 is preferable by r895 with profit 37
   Insn 18: point = 406, n_alt = 3
  BB 70
   Insn 1069: point = 408, n_alt = 5
  BB 45
   Insn 839: point = 410, n_alt = -1
   Insn 1810: point = 410, n_alt = -2
   Insn 1809: point = 410, n_alt = 1
   Insn 836: point = 410, n_alt = 0
   Insn 1938: point = 412, n_alt = 9
	Hard reg 1 is preferable by r893 with profit 5
   Insn 835: point = 413, n_alt = 1
   Insn 823: point = 414, n_alt = -2
   Insn 1670: point = 416, n_alt = -2
   Insn 822: point = 417, n_alt = -1
   Insn 819: point = 417, n_alt = 8
   Insn 817: point = 418, n_alt = 1
   Insn 814: point = 419, n_alt = 0
   Insn 821: point = 421, n_alt = -2
   Insn 813: point = 422, n_alt = 3
   Insn 1937: point = 423, n_alt = -2
	Hard reg 31 is preferable by r892 with profit 5
   Insn 812: point = 425, n_alt = 0
   Insn 1936: point = 426, n_alt = 9
   Insn 1935: point = 428, n_alt = -1
  BB 96
   Insn 1765: point = 430, n_alt = -1
   Insn 1400: point = 430, n_alt = 7
   Insn 1399: point = 431, n_alt = 1
  BB 43
   Insn 806: point = 433, n_alt = -1
   Insn 805: point = 433, n_alt = 3
   Insn 802: point = 434, n_alt = 7
   Insn 801: point = 435, n_alt = 1
  BB 42
   Insn 1734: point = 437, n_alt = -1
   Insn 17: point = 437, n_alt = 8
   Insn 792: point = 439, n_alt = 8
  BB 41
   Insn 788: point = 440, n_alt = -1
   Insn 787: point = 440, n_alt = 0
   Insn 786: point = 441, n_alt = 5
  BB 40
   Insn 782: point = 443, n_alt = -1
   Insn 781: point = 443, n_alt = 3
  BB 39
   Insn 776: point = 444, n_alt = -1
   Insn 1812: point = 444, n_alt = -2
   Insn 1811: point = 444, n_alt = 0
   Insn 773: point = 445, n_alt = 0
  BB 38
   Insn 768: point = 448, n_alt = -1
   Insn 1814: point = 448, n_alt = -2
   Insn 1813: point = 448, n_alt = 0
   Insn 764: point = 448, n_alt = 8
   Insn 762: point = 449, n_alt = 5
   Insn 755: point = 450, n_alt = 4
   Insn 754: point = 451, n_alt = 5
   Insn 766: point = 452, n_alt = 3
   Insn 750: point = 453, n_alt = 0
   Insn 1669: point = 455, n_alt = -2
   Insn 749: point = 456, n_alt = -1
   Insn 746: point = 456, n_alt = -1
   Insn 745: point = 456, n_alt = -2
   Insn 744: point = 457, n_alt = -2
   Insn 1668: point = 458, n_alt = -2
   Insn 742: point = 459, n_alt = -1
   Insn 1934: point = 459, n_alt = 1
	Hard reg 0 is preferable by r891 with profit 60
   Insn 741: point = 460, n_alt = 0
   Insn 738: point = 462, n_alt = -2
   Insn 739: point = 464, n_alt = 2
   Insn 1667: point = 465, n_alt = -2
   Insn 737: point = 466, n_alt = -1
   Insn 735: point = 466, n_alt = 6
   Insn 733: point = 466, n_alt = -1
   Insn 731: point = 466, n_alt = 0
   Insn 730: point = 468, n_alt = 0
   Insn 1933: point = 470, n_alt = 9
	Hard reg 35 is preferable by r890 with profit 60
   Insn 729: point = 472, n_alt = 1
   Insn 732: point = 473, n_alt = -2
   Insn 1666: point = 474, n_alt = 1
   Insn 727: point = 475, n_alt = -1
   Insn 726: point = 475, n_alt = 3
   Insn 725: point = 475, n_alt = 3
   Insn 724: point = 475, n_alt = 3
   Insn 723: point = 475, n_alt = 3
   Insn 722: point = 475, n_alt = 0
  BB 37
   Insn 711: point = 477, n_alt = -2
   Insn 1665: point = 479, n_alt = -2
   Insn 710: point = 480, n_alt = -1
   Insn 707: point = 480, n_alt = -1
   Insn 705: point = 480, n_alt = 6
   Insn 706: point = 480, n_alt = -2
  BB 36
   Insn 699: point = 482, n_alt = 0
   Insn 1664: point = 483, n_alt = -2
   Insn 696: point = 484, n_alt = -1
   Insn 695: point = 484, n_alt = -2
   Insn 694: point = 484, n_alt = 6
   Insn 686: point = 484, n_alt = 1
  BB 34
   Insn 1732: point = 486, n_alt = -1
   Insn 12: point = 486, n_alt = -2
   Insn 11: point = 488, n_alt = 3
  BB 33
   Insn 1730: point = 490, n_alt = -1
   Insn 14: point = 490, n_alt = 2
   Insn 13: point = 491, n_alt = 3
  BB 32
   Insn 1728: point = 493, n_alt = -1
   Insn 680: point = 493, n_alt = 0
   Insn 679: point = 495, n_alt = 3
  BB 35
   Insn 15: point = 497, n_alt = 2
   Insn 16: point = 498, n_alt = 3
  BB 31
   Insn 677: point = 500, n_alt = -1
   Insn 1816: point = 500, n_alt = -2
   Insn 1815: point = 500, n_alt = 1
  BB 30
   Insn 672: point = 501, n_alt = -1
   Insn 1818: point = 501, n_alt = -2
   Insn 1817: point = 501, n_alt = 0
   Insn 670: point = 501, n_alt = 2
   Insn 667: point = 502, n_alt = 0
   Insn 666: point = 503, n_alt = 2
  BB 29
   Insn 662: point = 505, n_alt = 0
   Insn 1663: point = 506, n_alt = -2
   Insn 659: point = 507, n_alt = -1
   Insn 1627: point = 507, n_alt = 6
   Insn 654: point = 507, n_alt = -1
   Insn 653: point = 507, n_alt = 1
   Insn 650: point = 507, n_alt = 0
   Insn 1662: point = 509, n_alt = -2
   Insn 648: point = 510, n_alt = -1
   Insn 1585: point = 510, n_alt = 2
   Insn 1584: point = 511, n_alt = 0
   Insn 639: point = 512, n_alt = 1
   Insn 647: point = 513, n_alt = 0
  BB 27
   Insn 1726: point = 514, n_alt = -1
   Insn 8: point = 514, n_alt = 1
  BB 26
   Insn 1724: point = 516, n_alt = -1
   Insn 9: point = 516, n_alt = 1
   Insn 1853: point = 517, n_alt = -2
   Insn 1852: point = 519, n_alt = -2
   Insn 1851: point = 521, n_alt = -2
   Insn 1850: point = 523, n_alt = -2
  BB 28
   Insn 7: point = 526, n_alt = 1
   Insn 1857: point = 527, n_alt = -2
   Insn 1856: point = 529, n_alt = -2
   Insn 1855: point = 531, n_alt = -2
   Insn 1854: point = 533, n_alt = -2
  BB 24
   Insn 624: point = 536, n_alt = 0
   Insn 622: point = 537, n_alt = 1
   Insn 617: point = 539, n_alt = 0
   Insn 1932: point = 541, n_alt = 10
	Hard reg 2 is preferable by r889 with profit 537
   Insn 616: point = 543, n_alt = 0
   Insn 631: point = 545, n_alt = 0
   Insn 1931: point = 547, n_alt = 9
	Hard reg 1 is preferable by r888 with profit 537
   Insn 620: point = 548, n_alt = 0
   Insn 613: point = 550, n_alt = 0
   Insn 1930: point = 552, n_alt = 10
	Hard reg 3 is preferable by r887 with profit 537
   Insn 612: point = 554, n_alt = 0
   Insn 628: point = 556, n_alt = 0
   Insn 627: point = 558, n_alt = 2
   Insn 1929: point = 560, n_alt = -2
	Hard reg 30 is preferable by r886 with profit 537
   Insn 614: point = 562, n_alt = 0
   Insn 1928: point = 564, n_alt = -2
	Hard reg 30 is preferable by r886 with profit 537
	Hard reg 28 is preferable by r886 with profit 537
   Insn 1927: point = 565, n_alt = -2
	Hard reg 31 is preferable by r885 with profit 537
   Insn 611: point = 567, n_alt = 0
   Insn 1926: point = 568, n_alt = -2
	Hard reg 31 is preferable by r885 with profit 537
	Hard reg 27 is preferable by r885 with profit 537
  BB 25
   Insn 634: point = 570, n_alt = -1
   Insn 1820: point = 570, n_alt = -2
   Insn 1819: point = 570, n_alt = 0
  BB 23
   Insn 1849: point = 571, n_alt = -2
   Insn 1848: point = 573, n_alt = -2
   Insn 1847: point = 575, n_alt = -2
   Insn 1846: point = 577, n_alt = -2
   Insn 1845: point = 579, n_alt = -2
   Insn 1844: point = 581, n_alt = -2
   Insn 1843: point = 583, n_alt = -2
   Insn 618: point = 585, n_alt = 1
   Insn 5: point = 586, n_alt = 1
   Insn 1558: point = 587, n_alt = 6
   Insn 6: point = 588, n_alt = 3
   Insn 607: point = 589, n_alt = 3
   Insn 1925: point = 591, n_alt = 5
   Insn 602: point = 592, n_alt = 3
   Insn 1924: point = 594, n_alt = 5
   Insn 605: point = 595, n_alt = -2
   Insn 1661: point = 597, n_alt = -2
   Insn 604: point = 598, n_alt = -1
   Insn 603: point = 598, n_alt = -2
   Insn 600: point = 598, n_alt = -2
   Insn 1660: point = 600, n_alt = -2
   Insn 599: point = 601, n_alt = -1
   Insn 598: point = 601, n_alt = -2
  BB 22
   Insn 593: point = 602, n_alt = -1
   Insn 1822: point = 602, n_alt = -2
   Insn 1821: point = 602, n_alt = 1
  BB 21
   Insn 584: point = 603, n_alt = -1
   Insn 1824: point = 603, n_alt = -2
   Insn 1823: point = 603, n_alt = 0
   Insn 581: point = 604, n_alt = 0
   Insn 580: point = 605, n_alt = 0
   Insn 1923: point = 607, n_alt = 9
	Hard reg 10 is preferable by r882 with profit 225
   Insn 579: point = 608, n_alt = 6
   Insn 578: point = 610, n_alt = 5
   Insn 582: point = 611, n_alt = 2
  BB 20
   Insn 572: point = 613, n_alt = 0
   Insn 1659: point = 614, n_alt = -2
   Insn 569: point = 615, n_alt = -1
   Insn 568: point = 615, n_alt = -2
   Insn 567: point = 615, n_alt = 6
  BB 19
   Insn 564: point = 616, n_alt = 0
   Insn 1658: point = 617, n_alt = -2
   Insn 561: point = 618, n_alt = -1
   Insn 1626: point = 618, n_alt = 6
   Insn 557: point = 618, n_alt = -2
   Insn 1657: point = 620, n_alt = -2
   Insn 556: point = 621, n_alt = -1
   Insn 555: point = 621, n_alt = -2
   Insn 550: point = 621, n_alt = 6
   Insn 1922: point = 622, n_alt = 5
   Insn 546: point = 623, n_alt = 1
   Insn 1566: point = 625, n_alt = -2
   Insn 552: point = 626, n_alt = 3
   Insn 1656: point = 627, n_alt = -2
   Insn 545: point = 628, n_alt = -1
   Insn 544: point = 628, n_alt = 0
   Insn 542: point = 629, n_alt = 3
   Insn 1921: point = 631, n_alt = 5
  BB 18
   Insn 535: point = 633, n_alt = -2
   Insn 1655: point = 635, n_alt = -2
   Insn 534: point = 636, n_alt = -1
   Insn 533: point = 636, n_alt = 0
   Insn 1654: point = 637, n_alt = -2
   Insn 531: point = 638, n_alt = -1
   Insn 528: point = 638, n_alt = -1
   Insn 1625: point = 638, n_alt = 6
   Insn 524: point = 638, n_alt = -1
   Insn 523: point = 638, n_alt = 1
  BB 17
   Insn 517: point = 640, n_alt = -1
   Insn 1826: point = 640, n_alt = -2
   Insn 1825: point = 640, n_alt = 0
   Insn 513: point = 641, n_alt = 0
   Insn 515: point = 643, n_alt = 0
   Insn 512: point = 645, n_alt = 0
   Insn 514: point = 647, n_alt = 0
   Insn 511: point = 649, n_alt = 0
   Insn 1653: point = 651, n_alt = -2
   Insn 509: point = 652, n_alt = -1
   Insn 505: point = 652, n_alt = -2
   Insn 1652: point = 654, n_alt = -2
   Insn 504: point = 655, n_alt = -1
   Insn 503: point = 655, n_alt = 1
   Insn 500: point = 656, n_alt = 0
   Insn 501: point = 658, n_alt = 0
   Insn 499: point = 659, n_alt = 3
   Insn 483: point = 660, n_alt = 3
  BB 92
   Insn 1763: point = 662, n_alt = -1
   Insn 1366: point = 662, n_alt = 3
   Insn 1961: point = 664, n_alt = 5
   Insn 1364: point = 665, n_alt = 3
   Insn 1960: point = 667, n_alt = 5
  BB 16
   Insn 1842: point = 669, n_alt = -2
   Insn 1841: point = 671, n_alt = -2
   Insn 4: point = 673, n_alt = 8
   Insn 937: point = 674, n_alt = 3
   Insn 1550: point = 675, n_alt = 5
   Insn 3: point = 676, n_alt = 1
  r776 is added to live at bb16 start
  r739 is added to live at bb16 start
  r740 is added to live at bb16 start
  r774 is added to live at bb16 start
  r775 is added to live at bb16 start
  BB 15
   Insn 466: point = 678, n_alt = -1
   Insn 465: point = 678, n_alt = 5
   Insn 464: point = 678, n_alt = 0
	Hard reg 1 is preferable by r879 with profit 27
   Insn 1920: point = 679, n_alt = 4
   Insn 463: point = 680, n_alt = 1
   Insn 453: point = 680, n_alt = -1
   Insn 452: point = 680, n_alt = 10
   Insn 451: point = 680, n_alt = 5
   Insn 450: point = 680, n_alt = 1
   Insn 442: point = 680, n_alt = -1
   Insn 441: point = 680, n_alt = 0
	Hard reg 0 is preferable by r878 with profit 27
   Insn 1919: point = 681, n_alt = 4
   Insn 440: point = 682, n_alt = 5
   Insn 439: point = 682, n_alt = 1
  BB 13
   Insn 1719: point = 683, n_alt = -1
  BB 12
   Insn 383: point = 684, n_alt = -1
   Insn 1828: point = 684, n_alt = -2
   Insn 1827: point = 684, n_alt = 0
   Insn 381: point = 685, n_alt = 3
   Insn 380: point = 686, n_alt = 3
  BB 14
   Insn 1721: point = 688, n_alt = -1
   Insn 424: point = 688, n_alt = -1
   Insn 423: point = 688, n_alt = 5
   Insn 422: point = 688, n_alt = 0
	Hard reg 1 is preferable by r877 with profit 20
   Insn 1918: point = 689, n_alt = 4
   Insn 421: point = 690, n_alt = 1
   Insn 411: point = 690, n_alt = -1
   Insn 410: point = 690, n_alt = 10
   Insn 409: point = 690, n_alt = 5
   Insn 408: point = 690, n_alt = 1
   Insn 400: point = 690, n_alt = -1
   Insn 399: point = 690, n_alt = 0
	Hard reg 0 is preferable by r876 with profit 20
   Insn 1917: point = 691, n_alt = 4
   Insn 398: point = 692, n_alt = 5
   Insn 397: point = 692, n_alt = 1
  BB 11
   Insn 366: point = 693, n_alt = -1
   Insn 1830: point = 693, n_alt = -2
   Insn 1829: point = 693, n_alt = 0
   Insn 364: point = 694, n_alt = 3
   Insn 363: point = 695, n_alt = 3
  BB 10
   Insn 353: point = 697, n_alt = -1
   Insn 352: point = 697, n_alt = 5
   Insn 351: point = 697, n_alt = 0
	Hard reg 1 is preferable by r875 with profit 27
   Insn 1916: point = 698, n_alt = 4
   Insn 350: point = 699, n_alt = 1
   Insn 340: point = 699, n_alt = -1
   Insn 339: point = 699, n_alt = 10
   Insn 338: point = 699, n_alt = 5
   Insn 337: point = 699, n_alt = 1
   Insn 329: point = 699, n_alt = -1
   Insn 328: point = 699, n_alt = 0
	Hard reg 0 is preferable by r874 with profit 27
   Insn 1915: point = 700, n_alt = 4
   Insn 327: point = 701, n_alt = 5
   Insn 326: point = 701, n_alt = 1
  BB 7
   Insn 1712: point = 702, n_alt = -1
  BB 6
   Insn 228: point = 703, n_alt = -1
   Insn 1832: point = 703, n_alt = -2
   Insn 1831: point = 703, n_alt = 0
   Insn 226: point = 704, n_alt = 3
   Insn 225: point = 705, n_alt = 3
  BB 8
   Insn 1714: point = 707, n_alt = -1
   Insn 269: point = 707, n_alt = -1
   Insn 268: point = 707, n_alt = 5
   Insn 267: point = 707, n_alt = 0
	Hard reg 1 is preferable by r871 with profit 15
   Insn 1912: point = 708, n_alt = 4
   Insn 266: point = 709, n_alt = 1
   Insn 256: point = 709, n_alt = -1
   Insn 255: point = 709, n_alt = 10
   Insn 254: point = 709, n_alt = 5
   Insn 253: point = 709, n_alt = 1
   Insn 245: point = 709, n_alt = -1
   Insn 244: point = 709, n_alt = 0
	Hard reg 0 is preferable by r870 with profit 15
   Insn 1911: point = 710, n_alt = 4
   Insn 243: point = 711, n_alt = 5
   Insn 242: point = 711, n_alt = 1
  BB 5
   Insn 211: point = 712, n_alt = -1
   Insn 1834: point = 712, n_alt = -2
   Insn 1833: point = 712, n_alt = 0
   Insn 209: point = 713, n_alt = 3
  BB 9
   Insn 1716: point = 715, n_alt = -1
   Insn 311: point = 715, n_alt = -1
   Insn 310: point = 715, n_alt = 5
   Insn 309: point = 715, n_alt = 0
	Hard reg 1 is preferable by r873 with profit 20
   Insn 1914: point = 716, n_alt = 4
   Insn 308: point = 717, n_alt = 1
   Insn 298: point = 717, n_alt = -1
   Insn 297: point = 717, n_alt = 10
   Insn 296: point = 717, n_alt = 5
   Insn 295: point = 717, n_alt = 1
   Insn 287: point = 717, n_alt = -1
   Insn 286: point = 717, n_alt = 0
	Hard reg 0 is preferable by r872 with profit 20
   Insn 1913: point = 718, n_alt = 4
   Insn 285: point = 719, n_alt = 5
   Insn 284: point = 719, n_alt = 1
  BB 4
   Insn 202: point = 720, n_alt = -1
   Insn 1836: point = 720, n_alt = -2
   Insn 1835: point = 720, n_alt = 0
   Insn 200: point = 721, n_alt = 3
  BB 3
   Insn 191: point = 723, n_alt = -1
   Insn 190: point = 723, n_alt = 4
   Insn 189: point = 723, n_alt = 0
	Hard reg 1 is preferable by r869 with profit 27
   Insn 1910: point = 724, n_alt = 4
   Insn 188: point = 725, n_alt = 1
   Insn 178: point = 725, n_alt = -1
   Insn 177: point = 725, n_alt = -2
   Insn 176: point = 725, n_alt = 4
   Insn 175: point = 725, n_alt = 1
   Insn 167: point = 725, n_alt = -1
   Insn 166: point = 725, n_alt = 0
	Hard reg 0 is preferable by r868 with profit 27
   Insn 1909: point = 726, n_alt = 4
   Insn 165: point = 727, n_alt = -2
   Insn 164: point = 727, n_alt = 1
  BB 2
   Insn 151: point = 728, n_alt = -1
   Insn 1838: point = 728, n_alt = -2
   Insn 1837: point = 728, n_alt = 0
   Insn 141: point = 729, n_alt = 4
   Insn 136: point = 730, n_alt = 0
   Insn 140: point = 732, n_alt = 4
   Insn 1651: point = 733, n_alt = -2
   Insn 135: point = 734, n_alt = -1
   Insn 134: point = 734, n_alt = -2
   Insn 1650: point = 735, n_alt = 1
   Insn 132: point = 736, n_alt = -1
   Insn 131: point = 736, n_alt = 0
   Insn 1649: point = 737, n_alt = -2
   Insn 129: point = 738, n_alt = -1
   Insn 108: point = 738, n_alt = 4
   Insn 1908: point = 738, n_alt = 1
	Hard reg 0 is preferable by r867 with profit 83
   Insn 128: point = 739, n_alt = 0
   Insn 1907: point = 741, n_alt = -2
	Hard reg 0 is preferable by r867 with profit 83
	Hard reg 31 is preferable by r867 with profit 83
   Insn 106: point = 743, n_alt = 0
   Insn 126: point = 745, n_alt = 0
   Insn 119: point = 747, n_alt = 0
   Insn 125: point = 749, n_alt = 0
   Insn 118: point = 751, n_alt = 3
   Insn 117: point = 753, n_alt = 8
   Insn 124: point = 754, n_alt = 3
   Insn 123: point = 756, n_alt = 4
   Insn 1648: point = 757, n_alt = -2
   Insn 105: point = 758, n_alt = -1
   Insn 104: point = 758, n_alt = -2
   Insn 1647: point = 759, n_alt = 1
   Insn 102: point = 760, n_alt = -1
   Insn 101: point = 760, n_alt = 0
   Insn 1646: point = 761, n_alt = -2
   Insn 99: point = 762, n_alt = -1
   Insn 84: point = 762, n_alt = 4
   Insn 1906: point = 762, n_alt = 1
	Hard reg 0 is preferable by r866 with profit 83
   Insn 98: point = 763, n_alt = 0
   Insn 1905: point = 765, n_alt = -2
	Hard reg 0 is preferable by r866 with profit 83
	Hard reg 31 is preferable by r866 with profit 83
   Insn 82: point = 767, n_alt = 0
   Insn 96: point = 769, n_alt = 0
   Insn 92: point = 771, n_alt = 0
   Insn 95: point = 773, n_alt = 0
   Insn 91: point = 775, n_alt = 3
   Insn 94: point = 776, n_alt = 3
   Insn 1645: point = 777, n_alt = -2
   Insn 81: point = 778, n_alt = -1
   Insn 80: point = 778, n_alt = -2
   Insn 1644: point = 779, n_alt = 1
   Insn 78: point = 780, n_alt = -1
   Insn 77: point = 780, n_alt = 0
   Insn 1643: point = 781, n_alt = -2
   Insn 75: point = 782, n_alt = -1
   Insn 60: point = 782, n_alt = 4
   Insn 1904: point = 782, n_alt = 1
	Hard reg 0 is preferable by r865 with profit 83
   Insn 74: point = 783, n_alt = 0
   Insn 1903: point = 785, n_alt = -2
	Hard reg 0 is preferable by r865 with profit 83
	Hard reg 31 is preferable by r865 with profit 83
   Insn 58: point = 787, n_alt = 0
   Insn 72: point = 789, n_alt = 0
   Insn 68: point = 791, n_alt = 0
   Insn 71: point = 793, n_alt = 0
   Insn 67: point = 795, n_alt = 3
   Insn 70: point = 796, n_alt = 3
   Insn 1642: point = 797, n_alt = -2
   Insn 57: point = 798, n_alt = -1
   Insn 56: point = 798, n_alt = -2
   Insn 1641: point = 799, n_alt = 1
   Insn 54: point = 800, n_alt = -1
   Insn 53: point = 800, n_alt = 0
   Insn 1640: point = 801, n_alt = -2
   Insn 51: point = 802, n_alt = -1
   Insn 1902: point = 802, n_alt = 1
	Hard reg 0 is preferable by r864 with profit 83
   Insn 50: point = 803, n_alt = 0
   Insn 1901: point = 805, n_alt = -2
	Hard reg 0 is preferable by r864 with profit 83
	Hard reg 31 is preferable by r864 with profit 83
   Insn 44: point = 807, n_alt = 0
   Insn 48: point = 809, n_alt = 0
   Insn 43: point = 811, n_alt = 3
   Insn 47: point = 812, n_alt = 0
   Insn 37: point = 814, n_alt = 3
   Insn 1900: point = 816, n_alt = 5
   Insn 46: point = 817, n_alt = 3
   Insn 39: point = 818, n_alt = 3
   Insn 1899: point = 820, n_alt = 5
   Insn 42: point = 821, n_alt = 5
  r745 is added to live at bb2 start
  r746 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 153 count 174 (  1.7)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  101  114  116  121  294  300  301  307  313  318
      323  325  329  334  337  344  346  347  351  353  354
      358  360  361  367  368  372  373  374  379  747  780
      781  782  783  784  785  786  787  788  789  790  791
      862  863  864  865  866  867
    liveout: 2:

        7   13  102  103  121  294  300  301  747

BB 3:
    gen: 3:

      747
    killed: 3:

      868  869
    livein: 3:

      121  294  300  301  747
    liveout: 3:

        7   13  102  103  121  294  300  301  747

BB 4:
    gen: 4:

      294  747
    killed: 4:

      100  101  403
    livein: 4:

      121  294  300  301  747
    liveout: 4:

        7   13  102  103  121  300  301  747

BB 5:
    gen: 5:

      121  747
    killed: 5:

      100  101  405
    livein: 5:

      121  300  301  747
    liveout: 5:

        7   13  102  103  300  301  747

BB 6:
    gen: 6:

      747
    killed: 6:

      100  101  408  409
    livein: 6:

      300  301  747
    liveout: 6:

        7   13  102  103  300  301  747

BB 7:
    livein: 7:

      300  301  747
    liveout: 7:

        7   13  102  103  300  301  747

BB 8:
    killed: 8:

      870  871
    livein: 8:

      300  301  747
    liveout: 8:

        7   13  102  103  300  301  747

BB 9:
    killed: 9:

      872  873
    livein: 9:

      121  300  301  747
    liveout: 9:

        7   13  102  103  121  300  301  747

BB 10:
    killed: 10:

      874  875
    livein: 10:

      300  301  747
    liveout: 10:

        7   13  102  103  300  301  747

BB 11:
    gen: 11:

      747
    killed: 11:

      100  101  478  479
    livein: 11:

      300  301  747
    liveout: 11:

        7   13  102  103  300  301  747

BB 12:
    gen: 12:

      747
    killed: 12:

      100  101  482  483
    livein: 12:

      300  301  747
    liveout: 12:

        7   13  102  103  300  301  747

BB 13:
    livein: 13:

      300  301  747
    liveout: 13:

        7   13  102  103  300  301  747

BB 14:
    killed: 14:

      876  877
    livein: 14:

      300  301  747
    liveout: 14:

        7   13  102  103  300  301  747

BB 15:
    killed: 15:

      878  879
    livein: 15:

      300  301  747
    liveout: 15:

        7   13  102  103  300  301  747

BB 16:
    killed: 16:

      245  282  306  777  824  825
    livein: 16:

      300  301  747
    liveout: 16:

        7   13  102  103  245  300  301  747  777  824  825

BB 17:
    gen: 17:

      300  301  825
    killed: 17:

      100  101  247  261  528  529  530  532  533  534  535
      536  792  793
    livein: 17:

      245  300  301  747  777  824  825
    liveout: 17:

        7   13  102  103  245  247  747  777  824  825

BB 18:
    gen: 18:

      247
    killed: 18:

      247  794  795
    livein: 18:

      245  247  747  777  824  825
    liveout: 18:

        7   13  102  103  245  247  747  777  824  825

BB 19:
    gen: 19:

      247  825
    killed: 19:

      100  138  248  263  541  738  796  797  798  880  881
    livein: 19:

      245  247  747  777  824  825
    liveout: 19:

        7   13  102  103  138  245  247  248  263  738  747
      777  824  825

BB 20:
    gen: 20:

      138
    killed: 20:

      100  799
    livein: 20:

      138  245  247  248  263  738  747  777  824  825
    liveout: 20:

        7   13  102  103  138  245  247  248  263  738  747
      777  824  825

BB 21:
    gen: 21:

      738
    killed: 21:

      100  101  139  547  548  549  550  882
    livein: 21:

      138  245  247  248  263  738  747  777  824  825
    liveout: 21:

        7   13  102  103  138  139  245  247  248  263  738
      747  777  824  825

BB 22:
    gen: 22:

      738
    killed: 22:

      100  101
    livein: 22:

      138  139  245  247  248  263  738  747  777  824  825
    liveout: 22:

        7   13  102  103  138  139  245  247  248  263  738
      747  777  824  825

BB 23:
    gen: 23:

      138  139  247  248  824  825
    killed: 23:

      142  143  147  148  154  264  560  744  800  801  849
      850  851  852  853  854  855  883  884
    livein: 23:

      138  139  245  247  248  263  738  747  777  824  825
    liveout: 23:

        7   13  102  103  142  143  147  148  154  245  247
      263  560  738  747  777  849  850  851  852  853  854
      855

BB 24:
    gen: 24:

      142  143  147  148  154  560  850  852  855
    killed: 24:

      100  144  146  149  154  554  556  558  561  563  564
      852  885  886  887  888  889
    livein: 24:

      142  143  147  148  154  245  247  263  560  738  747
      777  849  850  851  852  853  854  855
    liveout: 24:

        7   13  102  103  142  143  147  148  154  245  247
      263  560  738  747  777  849  850  851  852  853  854
      855

BB 25:
    gen: 25:

      154  738
    killed: 25:

      100  101
    livein: 25:

      142  143  147  148  154  245  247  263  560  738  747
      777  849  850  851  852  853  854  855
    liveout: 25:

        7   13  102  103  142  143  147  148  154  245  247
      263  560  738  747  777  849  850  851  852  853  854
      855

BB 26:
    gen: 26:

      849  851  853  854
    killed: 26:

      138  246  248  824  825
    livein: 26:

      245  247  263  738  747  777  849  851  853  854
    liveout: 26:

        7   13  102  103  138  245  246  247  248  263  738
      747  777  824  825

BB 27:
    killed: 27:

      246
    livein: 27:

      138  245  247  248  263  738  747  777  824  825
    liveout: 27:

        7   13  102  103  138  245  246  247  248  263  738
      747  777  824  825

BB 28:
    gen: 28:

      849  851  853  854
    killed: 28:

      138  246  248  824  825
    livein: 28:

      245  247  263  738  747  777  849  851  853  854
    liveout: 28:

        7   13  102  103  138  245  246  247  248  263  738
      747  777  824  825

BB 29:
    gen: 29:

      246  248  738  825
    killed: 29:

      100  155  246  265  802  803
    livein: 29:

      138  245  246  247  248  263  738  747  777  824  825
    liveout: 29:

        7   13  102  103  138  245  246  247  248  263  265
      738  747  777  824  825

BB 30:
    gen: 30:

      265
    killed: 30:

      100  101  249  568  569
    livein: 30:

      138  245  246  247  248  263  265  738  747  777  824
      825
    liveout: 30:

        7   13  102  103  138  245  246  247  248  249  263
      265  569  738  747  777  824  825

BB 31:
    gen: 31:

      265
    killed: 31:

      100  101
    livein: 31:

      138  245  246  247  248  249  263  265  738  747  777
      824  825
    liveout: 31:

        7   13  102  103  138  245  246  247  248  249  263
      265  738  747  777  824  825

BB 32:
    gen: 32:

      265
    killed: 32:

      302  571
    livein: 32:

      138  245  246  247  248  249  263  265  738  747  777
      824  825
    liveout: 32:

        7   13  102  103  138  245  246  247  248  249  263
      302  738  747  777  824  825

BB 33:
    killed: 33:

      249  302
    livein: 33:

      138  245  246  247  248  263  738  747  777  824  825
    liveout: 33:

        7   13  102  103  138  245  246  247  248  249  263
      302  738  747  777  824  825

BB 34:
    gen: 34:

      569
    killed: 34:

      249  302
    livein: 34:

      138  245  246  247  248  263  569  738  747  777  824
      825
    liveout: 34:

        7   13  102  103  138  245  246  247  248  249  263
      302  738  747  777  824  825

BB 35:
    killed: 35:

      249  302
    livein: 35:

      138  245  246  247  248  263  738  747  777  824  825
    liveout: 35:

        7   13  102  103  138  245  246  247  248  249  263
      302  738  747  777  824  825

BB 36:
    gen: 36:

      138  825
    killed: 36:

      100  158  804
    livein: 36:

      138  245  246  247  248  249  263  302  738  747  777
      824  825
    liveout: 36:

        7   13  102  103  138  158  245  246  247  248  249
      263  302  738  747  777  824  825

BB 37:
    gen: 37:

      138
    killed: 37:

      248  805
    livein: 37:

      138  158  245  246  247  249  263  302  738  747  777
      824  825
    liveout: 37:

        7   13  102  103  158  245  246  247  248  249  263
      302  738  747  777  824  825

BB 38:
    gen: 38:

      246  248  249  825
    killed: 38:

      100  101  168  267  580  581  583  585  589  590  592
      806  807  808  809  890  891
    livein: 38:

      158  245  246  247  248  249  263  302  738  747  777
      824  825
    liveout: 38:

        7   13  102  103  158  168  245  246  247  249  263
      267  302  592  738  747  777  824  825

BB 39:
    gen: 39:

      168  267  592
    killed: 39:

      100  101  593
    livein: 39:

      158  168  245  246  247  249  263  267  302  592  738
      747  777  824  825
    liveout: 39:

        7   13  102  103  158  245  246  247  249  263  267
      302  738  747  777  824  825

BB 40:
    gen: 40:

      246
    killed: 40:

      100
    livein: 40:

      158  245  246  247  249  263  267  302  738  747  777
      824  825
    liveout: 40:

        7   13  102  103  158  245  246  247  249  263  267
      302  738  747  777  824  825

BB 41:
    gen: 41:

      825
    killed: 41:

      100  595
    livein: 41:

      158  245  246  247  249  263  267  302  738  747  777
      824  825
    liveout: 41:

        7   13  102  103  158  245  246  247  249  263  267
      302  738  747  777  824  825

BB 42:
    gen: 42:

      246  825
    killed: 42:

      245
    livein: 42:

      158  246  247  249  263  267  302  738  747  777  824
      825
    liveout: 42:

        7   13  102  103  158  245  247  249  263  267  302
      738  747  777  824  825

BB 43:
    gen: 43:

      246  825
    killed: 43:

      100  597
    livein: 43:

      158  245  246  247  249  263  267  302  738  747  777
      824  825
    liveout: 43:

        7   13  102  103  158  245  247  249  263  267  302
      738  747  777  824  825

BB 44:
    gen: 44:

      825
    killed: 44:

      738
    livein: 44:

      245  247  263  747  777  824  825
    liveout: 44:

        7   13  102  103  245  247  263  738  747  777  824
      825

BB 45:
    gen: 45:

      158  249  738  825
    killed: 45:

      100  101  266  268  304  600  602  603  741  810  892
      893
    livein: 45:

      158  245  247  249  263  267  302  738  747  777  824
      825
    liveout: 45:

        7   13  102  103  245  247  249  263  266  267  268
      302  304  741  747  777  824  825

BB 46:
    gen: 46:

      304  824  825
    killed: 46:

      293  297  310  319  742  769  770  771  836  837  838
      839  840  894
    livein: 46:

      245  247  249  263  266  267  268  302  304  741  747
      777  824  825
    liveout: 46:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  741  742  747  769  770  771  777  836  837
      838  839  840

BB 47:
    gen: 47:

      266  297  836  837  838  839  840
    killed: 47:

      193  280  281  303  606  743  764  841  842  843  844
      845  846  847  895  896
    livein: 47:

      245  247  249  263  266  267  268  297  302  742  747
      769  770  771  777  836  837  838  839  840
    liveout: 47:

        7   13  102  103  193  245  247  249  263  266  267
      268  281  297  302  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847

BB 48:
    gen: 48:

      281  743  844  845
    killed: 48:

      100  273  274  275  608  609  612  615  897
    livein: 48:

      193  245  247  249  263  266  267  268  281  297  302
      742  743  747  764  769  770  771  777  841  842  843
      844  845  846  847
    liveout: 48:

        7   13  102  103  193  245  247  249  263  266  267
      268  273  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 49:
    gen: 49:

      274  275
    killed: 49:

      100  857
    livein: 49:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 49:

        7   13  102  103  193  245  247  249  263  266  267
      268  273  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 50:
    livein: 50:

      193  245  247  249  263  266  267  268  281  297  302
      742  743  747  764  769  770  771  777  841  842  843
      844  845  846  847
    liveout: 50:

        7   13  102  103  193  245  247  249  263  266  267
      268  281  297  302  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847

BB 51:
    gen: 51:

      847
    killed: 51:

      100
    livein: 51:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 51:

        7   13  102  103  193  245  247  249  263  266  267
      268  273  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 52:
    gen: 52:

      273
    killed: 52:

      317  898
    livein: 52:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 52:

        7   13  102  103  193  245  247  249  263  266  267
      268  274  275  281  297  302  317  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 53:
    gen: 53:

      273  769
    killed: 53:

      100  101  181  899
    livein: 53:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 53:

        7   13  102  103  181  193  245  247  249  263  266
      267  268  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 54:
    gen: 54:

      181  771
    killed: 54:

      317  622  625  626  900  901
    livein: 54:

      181  193  245  247  249  263  266  267  268  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 54:

        7   13  102  103  193  245  247  249  263  266  267
      268  274  275  281  297  302  317  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 55:
    gen: 55:

      770
    killed: 55:

      317
    livein: 55:

      193  245  247  249  263  266  267  268  274  275  281
      297  302  742  743  747  764  769  770  771  777  841
      842  843  844  845  846  847
    liveout: 55:

        7   13  102  103  193  245  247  249  263  266  267
      268  274  275  281  297  302  317  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 56:
    gen: 56:

      770
    killed: 56:

      317
    livein: 56:

      193  245  247  249  263  266  267  268  274  275  281
      297  302  742  743  747  764  769  770  771  777  841
      842  843  844  845  846  847
    liveout: 56:

        7   13  102  103  193  245  247  249  263  266  267
      268  274  275  281  297  302  317  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 57:
    gen: 57:

      267  777  841
    killed: 57:

      100  101  191  627  902
    livein: 57:

      193  245  247  249  263  266  267  268  274  275  281
      297  302  317  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 57:

        7   13  102  103  191  193  245  247  249  263  266
      267  268  274  275  281  297  302  317  742  743  747
      764  769  770  771  777  841  842  843  844  845  846
      847

BB 58:
    gen: 58:

      191
    killed: 58:

      100  101
    livein: 58:

      191  193  245  247  249  263  266  267  268  274  275
      281  297  302  317  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847
    liveout: 58:

        7   13  102  103  191  193  245  247  249  263  266
      267  268  274  275  281  297  302  317  742  743  747
      764  769  770  771  777  841  842  843  844  845  846
      847

BB 59:
    gen: 59:

      193
    killed: 59:

      100  101
    livein: 59:

      191  193  245  247  249  263  266  267  268  274  275
      281  297  302  317  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847
    liveout: 59:

        7   13  102  103  191  193  245  247  249  263  266
      267  268  274  275  281  297  302  317  742  743  747
      764  769  770  771  777  841  842  843  844  845  846
      847

BB 60:
    gen: 60:

      193  777
    killed: 60:

      100  101
    livein: 60:

      191  193  245  247  249  263  266  267  268  274  275
      281  297  302  317  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847
    liveout: 60:

        7   13  102  103  191  193  245  247  249  263  266
      267  268  274  275  281  297  302  317  742  743  747
      764  769  770  771  777  841  842  843  844  845  846
      847

BB 61:
    gen: 61:

      191  268  274  275  317  764  846
    killed: 61:

      186  189  632  633  635  638  640  642  742  811  845
      847  848  903  904  905  906  907  908  909
    livein: 61:

      191  193  245  247  249  263  266  267  268  274  275
      281  297  302  317  743  747  764  769  770  771  777
      841  842  843  844  846
    liveout: 61:

        7   13  102  103  193  245  247  249  263  266  267
      268  281  297  302  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847

BB 62:
    gen: 62:

      281  302  742  841
    killed: 62:

      100  101  281  841
    livein: 62:

      193  245  247  249  263  266  267  268  281  297  302
      742  743  747  764  769  770  771  777  841  842  843
      844  845  846  847
    liveout: 62:

        7   13  102  103  193  245  247  249  263  266  267
      268  281  297  302  742  743  747  764  769  770  771
      777  841  842  843  844  845  846  847

BB 63:
    gen: 63:

      842  843  845  846  847
    killed: 63:

      836  837  838  839  840
    livein: 63:

      245  247  249  263  266  267  268  297  302  742  747
      769  770  771  777  842  843  845  846  847
    liveout: 63:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  742  747  769  770  771  777  836  837  838
      839  840

BB 64:
    gen: 64:

      742
    killed: 64:

      100  101
    livein: 64:

      245  247  249  263  266  267  268  297  302  741  742
      747  769  770  771  777  836  837  838  839  840
    liveout: 64:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  741  742  747  769  770  771  777  836  837
      838  839  840

BB 102:
    gen: 102:

      836  839  840
    killed: 102:

      833  834  835
    livein: 102:

      245  247  249  263  266  267  297  302  741  747  777
      836  839  840
    liveout: 102:

        7   13  102  103  245  247  249  263  266  267  297
      302  741  747  777  833  834  835

BB 65:
    gen: 65:

      297  302  741
    killed: 65:

      100  101  297
    livein: 65:

      245  247  249  263  266  267  297  302  741  747  777
      833  834  835
    liveout: 65:

        7   13  102  103  245  247  249  263  266  267  297
      302  741  747  777  833  834  835

BB 66:
    gen: 66:

      833  834  835
    killed: 66:

      319  824  825
    livein: 66:

      245  247  249  263  266  267  741  747  777  833  834
      835
    liveout: 66:

        7   13  102  103  245  247  249  263  266  267  319
      741  747  777  824  825

BB 67:
    gen: 67:

      742
    killed: 67:

      100  101
    livein: 67:

      245  247  249  263  266  267  268  297  302  741  742
      747  769  770  771  777  836  837  838  839  840
    liveout: 67:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  741  742  747  769  770  771  777  836  837
      838  839  840

BB 68:
    gen: 68:

      297  302  741  837
    killed: 68:

      100  101  297  837
    livein: 68:

      245  247  249  263  266  267  268  297  302  741  742
      747  769  770  771  777  836  837  838  839  840
    liveout: 68:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  741  742  747  769  770  771  777  836  837
      838  839  840

BB 69:
    gen: 69:

      836  839  840
    killed: 69:

      319  824  825
    livein: 69:

      245  247  249  263  266  267  741  747  777  836  839
      840
    liveout: 69:

        7   13  102  103  245  247  249  263  266  267  319
      741  747  777  824  825

BB 70:
    gen: 70:

      825
    killed: 70:

      319
    livein: 70:

      245  247  249  263  266  267  741  747  777  824  825
    liveout: 70:

        7   13  102  103  245  247  249  263  266  267  319
      741  747  777  824  825

BB 71:
    gen: 71:

      319
    killed: 71:

      100
    livein: 71:

      245  247  249  263  266  267  319  741  747  777  824
      825
    liveout: 71:

        7   13  102  103  245  247  249  263  266  267  741
      747  777  824  825

BB 72:
    gen: 72:

      825
    killed: 72:

      738
    livein: 72:

      245  247  263  747  777  824  825
    liveout: 72:

        7   13  102  103  245  247  263  738  747  777  824
      825

BB 73:
    gen: 73:

      249  266  267  741  824  825
    killed: 73:

      269  270  271  286  650  651  652  653  654  761  762
      826  827  828  829  830  831  832  910
    livein: 73:

      245  247  249  263  266  267  741  747  777  824  825
    liveout: 73:

        7   13  102  103  245  247  249  263  653  747  777
      826  827  828  829  830  831  832

BB 74:
    gen: 74:

      830
    killed: 74:

      100  327  656
    livein: 74:

      245  247  249  263  653  747  777  826  827  828  829
      830  831  832
    liveout: 74:

        0    7   13  102  103  245  247  249  263  653  747
      777  826  827  828  829  830  831  832

BB 75:
    gen: 75:

      249  653  830  831
    killed: 75:

      100  101  657  658  659  661  662  663  911
    livein: 75:

      245  247  249  263  653  747  777  826  827  828  829
      830  831  832
    liveout: 75:

        0    7   13  102  103  245  247  249  263  653  663
      747  777  826  827  828  829  830  831  832

BB 76:
    gen: 76:

      663  830
    livein: 76:

      245  247  249  263  653  663  747  777  826  827  828
      829  830  831  832
    liveout: 76:

        0    7   13  102  103  245  247  249  263  653  747
      777  826  827  828  829  830  831  832

BB 77:
    gen: 77:

      747  826  827  828  831  832
    killed: 77:

      669  673  674  675  676
    livein: 77:

      245  247  249  263  653  747  777  826  827  828  829
      830  831  832
    liveout: 77:

        7   13  102  103  245  247  249  263  653  747  777
      826  827  828  829  830  831  832

BB 78:
    gen: 78:

      828  830
    killed: 78:

      100  828  830
    livein: 78:

      245  247  249  263  653  747  777  826  827  828  829
      830  831  832
    liveout: 78:

        7   13  102  103  245  247  249  263  653  747  777
      826  827  828  829  830  831  832

BB 79:
    gen: 79:

      829  831
    killed: 79:

      738  824  825
    livein: 79:

      245  247  263  747  777  829  831
    liveout: 79:

        7   13  102  103  245  247  263  738  747  777  824
      825

BB 80:
    gen: 80:

      825
    killed: 80:

      100  677
    livein: 80:

      245  247  263  738  747  777  824  825
    liveout: 80:

        7   13  102  103  245  247  263  738  747  777  824
      825

BB 81:
    gen: 81:

      263
    killed: 81:

      100  101  678
    livein: 81:

      245  247  263  738  747  777  824  825
    liveout: 81:

        7   13  102  103  245  247  738  747  777  824  825

BB 82:
    gen: 82:

      247  825
    killed: 82:

      100  101  215  216  217  218  219  221  222  253  254
      684  685  686  688  689  690  691  692  695  696  698
      699  701  744  812  813  814  858  859  912  913
    livein: 82:

      245  247  738  747  777  824  825
    liveout: 82:

        7   13  102  103  216  217  218  219  221  222  245
      254  738  744  747  777  824  825

BB 83:
    gen: 83:

      216  221  825
    killed: 83:

      222  230  703  815  816  817  914
    livein: 83:

      216  217  218  219  221  245  254  738  744  747  777
      824  825
    liveout: 83:

        7   13  102  103  217  218  219  222  245  254  738
      744  747  777  824  825

BB 84:
    gen: 84:

      219  222  254  744
    killed: 84:

      100  707  708  709  710  712  713  714  715  718  719
      721  722  724  860  861
    livein: 84:

      217  218  219  222  245  254  738  744  747  777  824
      825
    liveout: 84:

        7   13  102  103  217  218  245  738  747  777  824
      825

BB 85:
    gen: 85:

      217  218  825
    killed: 85:

      726  818  819  820
    livein: 85:

      217  218  245  738  747  777  824  825
    liveout: 85:

        7   13  102  103  245  738  747  777  824  825

BB 86:
    gen: 86:

      738
    killed: 86:

      100  101  731
    livein: 86:

      245  738  747  777  824  825
    liveout: 86:

        7   13  102  103  245  747  777  824  825

BB 87:
    gen: 87:

      825
    killed: 87:

      100  732
    livein: 87:

      245  747  777  824  825
    liveout: 87:

        7   13  102  103  245  747  777  824  825

BB 88:
    liveout: 88:

        7   13  102  103

BB 89:
    gen: 89:

      825
    killed: 89:

      100  242
    livein: 89:

      245  747  777  824  825
    liveout: 89:

        7   13  102  103  242  245  747  777  824  825

BB 90:
    gen: 90:

      242  825
    killed: 90:

      733
    livein: 90:

      242  245  747  777  824  825
    liveout: 90:

        7   13  102  103  245  747  777  824  825

BB 91:
    gen: 91:

      824  825
    killed: 91:

      100  824  825
    livein: 91:

      245  747  777  824  825
    liveout: 91:

        7   13  102  103  245  747  777  824  825

BB 92:
    killed: 92:

      300  301  915  916
    livein: 92:

      245  747  777  824  825
    liveout: 92:

        7   13  102  103  245  300  301  747  777  824  825

BB 93:
    gen: 93:

      245
    killed: 93:

      100  917
    livein: 93:

      245
    liveout: 93:

        7   13  102  103

BB 94:
    liveout: 94:

        7   13  102  103

BB 95:
    liveout: 95:

        7   13  102  103

BB 96:
    gen: 96:

      825
    killed: 96:

      736
    livein: 96:

      158  245  247  249  263  267  302  738  747  777  824
      825
    liveout: 96:

        7   13  102  103  158  245  247  249  263  267  302
      738  747  777  824  825

BB 97:
    gen: 97:

      825
    killed: 97:

      737  738
    livein: 97:

      245  247  263  747  777  824  825
    liveout: 97:

        7   13  102  103  245  247  263  738  747  777  824
      825

BB 98:
    gen: 98:

      297  302  837  838
    killed: 98:

      100  101  297  741  837  918
    livein: 98:

      245  247  249  263  266  267  268  297  302  742  747
      769  770  771  777  836  837  838  839  840
    liveout: 98:

        7   13  102  103  245  247  249  263  266  267  268
      297  302  741  742  747  769  770  771  777  836  837
      838  839  840

BB 99:
    gen: 99:

      836  839  840
    killed: 99:

      319  824  825
    livein: 99:

      245  247  249  263  266  267  741  747  777  836  839
      840
    liveout: 99:

        7   13  102  103  245  247  249  263  266  267  319
      741  747  777  824  825

BB 100:
    gen: 100:

      847
    killed: 100:

      100
    livein: 100:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 100:

        7   13  102  103  193  245  247  249  263  266  267
      268  273  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847

BB 101:
    livein: 101:

      193  245  247  249  263  266  267  268  273  274  275
      281  297  302  742  743  747  764  769  770  771  777
      841  842  843  844  845  846  847
    liveout: 101:

        7   13  102  103  193  245  247  249  263  266  267
      268  273  274  275  281  297  302  742  743  747  764
      769  770  771  777  841  842  843  844  845  846  847
 r114: [740..747]
 r116: [746..749]
 r121: [712..730]
 r138: [584..618] [526..533] [480..523]
 r139: [582..608]
 r142: [536..598]
 r143: [536..592]
 r144: [555..565]
 r146: [549..550]
 r147: [536..595]
 r148: [536..589]
 r149: [544..560]
 r154: [563..588] [536..545]
 r155: [511..512]
 r158: [427..484]
 r168: [446..466]
 r181: [354..356]
 r186: [314..315]
 r189: [308..309]
 r191: [293..329]
 r193: [280..401]
 r215: [110..112]
 r216: [69..108]
 r217: [28..104]
 r218: [24..103]
 r219: [53..99]
 r221: [65..102]
 r222: [71..95] [43..55]
 r230: [58..59]
 r242: [9..11]
 r245: [440..673] [2..437]
 r246: [526..526] [516..516] [438..514] [433..436]
 r247: [638..652] [115..633]
 r248: [580..623] [526..531] [482..521] [475..477]
 r249: [500..502] [493..498] [490..490] [204..486] [135..201]
 r253: [94..107]
 r254: [53..72]
 r261: [646..660]
 r263: [117..625]
 r264: [578..586]
 r265: [500..507] [494..496]
 r266: [204..419] [191..201]
 r267: [204..453] [189..201]
 r268: [410..414] [236..407]
 r269: [182..188]
 r270: [180..190]
 r271: [178..183]
 r273: [364..370] [359..361] [340..342]
 r274: [324..369]
 r275: [320..367]
 r280: [394..395]
 r281: [280..406]
 r282: [672..676]
 r286: [174..184]
 r293: [248..251]
 r294: [720..743]
 r297: [263..407] [227..261]
 r300: [669..818] [657..665]
 r301: [669..814] [648..662]
 r302: [497..497] [493..493] [490..491] [410..488] [227..407]
 r303: [388..397]
 r304: [410..413] [246..262]
 r306: [670..675]
 r307: [728..787]
 r310: [254..255]
 r313: [810..812]
 r317: [362..362] [343..343] [337..337] [304..335]
 r318: [804..807]
 r319: [408..408] [242..252] [220..220] [213..213] [204..206]
 r323: [784..791]
 r325: [764..771]
 r327: [164..165]
 r329: [790..793]
 r334: [728..767]
 r337: [770..773]
 r344: [808..811]
 r346: [813..817]
 r347: [806..809]
 r351: [792..795]
 r353: [794..796]
 r354: [786..789]
 r358: [772..775]
 r360: [774..776]
 r361: [766..769]
 r367: [752..753]
 r368: [748..751]
 r372: [755..756]
 r373: [750..754]
 r374: [742..745]
 r379: [729..732]
 r403: [720..721]
 r405: [712..713]
 r408: [703..705]
 r409: [703..704]
 r478: [693..695]
 r479: [693..694]
 r482: [684..686]
 r483: [684..685]
 r528: [655..656]
 r529: [657..659]
 r530: [655..658]
 r532: [646..649]
 r533: [642..645]
 r534: [640..641]
 r535: [644..647]
 r536: [640..643]
 r541: [628..629]
 r547: [609..610]
 r548: [604..605]
 r549: [603..604]
 r550: [603..611]
 r554: [551..552]
 r556: [540..541]
 r558: [538..539]
 r560: [536..585]
 r561: [538..548]
 r563: [536..537]
 r564: [557..558]
 r568: [502..503]
 r569: [501..501] [487..489]
 r571: [494..495]
 r580: [469..470]
 r581: [467..468]
 r583: [456..462]
 r585: [461..464]
 r589: [450..451]
 r590: [448..449]
 r592: [444..452]
 r593: [444..445]
 r595: [440..441]
 r597: [434..435]
 r600: [420..423]
 r602: [420..422]
 r603: [417..418]
 r606: [402..403]
 r608: [376..377]
 r609: [374..375]
 r612: [371..373]
 r615: [368..372]
 r622: [352..353]
 r625: [348..349]
 r626: [344..345]
 r627: [330..331]
 r632: [316..321]
 r633: [310..317]
 r635: [298..305]
 r638: [297..311]
 r640: [302..303]
 r642: [296..299]
 r650: [195..196]
 r651: [193..194]
 r652: [189..192]
 r653: [135..200]
 r654: [191..199]
 r656: [166..167]
 r657: [157..158]
 r658: [155..156]
 r659: [153..154]
 r661: [151..152]
 r662: [151..162]
 r663: [149..161]
 r669: [146..147]
 r673: [144..145]
 r674: [142..143]
 r675: [138..141]
 r676: [139..140]
 r677: [120..121]
 r678: [117..118]
 r684: [80..81]
 r685: [82..92]
 r686: [91..98]
 r688: [82..83]
 r689: [76..79]
 r690: [89..93]
 r691: [85..86]
 r692: [87..90]
 r695: [87..88]
 r696: [74..84]
 r698: [76..77]
 r699: [74..75]
 r701: [71..73]
 r703: [62..66]
 r707: [49..52]
 r708: [39..46]
 r709: [47..48]
 r710: [45..51]
 r712: [47..50]
 r713: [34..38]
 r714: [37..40]
 r715: [41..44]
 r718: [41..42]
 r719: [32..36]
 r721: [34..35]
 r722: [32..33]
 r724: [30..31]
 r726: [21..25]
 r731: [16..17]
 r732: [13..14]
 r733: [7..8]
 r736: [430..431]
 r737: [123..124]
 r738: [421..626] [202..202] [129..129] [127..127] [16..125]
 r739: [4..677]
 r740: [4..677]
 r741: [408..410] [204..264] [191..201]
 r742: [326..407] [263..286] [236..253]
 r743: [280..396]
 r744: [572..587] [34..78]
 r745: [4..822]
 r746: [4..822]
 r747: [4..821]
 r761: [186..187]
 r762: [170..185]
 r764: [280..400]
 r769: [263..407] [236..260]
 r770: [263..407] [236..259]
 r771: [263..407] [236..258]
 r774: [4..677]
 r775: [4..677]
 r776: [4..677]
 r777: [4..674]
 r780: [800..801]
 r781: [798..799]
 r782: [788..797]
 r783: [780..781]
 r784: [778..779]
 r785: [768..777]
 r786: [760..761]
 r787: [758..759]
 r788: [744..757]
 r789: [736..737]
 r790: [734..735]
 r791: [731..733]
 r792: [653..654]
 r793: [650..651]
 r794: [636..637]
 r795: [634..635]
 r796: [624..627]
 r797: [619..620]
 r798: [616..617]
 r799: [613..614]
 r800: [599..600]
 r801: [596..597]
 r802: [508..509]
 r803: [505..506]
 r804: [482..483]
 r805: [478..479]
 r806: [473..474]
 r807: [463..465]
 r808: [457..458]
 r809: [454..455]
 r810: [415..416]
 r811: [294..295]
 r812: [113..114]
 r813: [109..111]
 r814: [105..106]
 r815: [67..68]
 r816: [63..64]
 r817: [60..61]
 r818: [26..27]
 r819: [22..23]
 r820: [19..20]
 r824: [576..671] [526..529] [408..519] [250..262] [220..224] [213..217] [176..210] [4..132]
 r825: [574..669] [526..527] [408..517] [244..262] [220..222] [213..215] [172..208] [4..130]
 r826: [135..181]
 r827: [135..179]
 r828: [135..177]
 r829: [133..175]
 r830: [135..173]
 r831: [131..171]
 r832: [135..169]
 r833: [225..233]
 r834: [223..231]
 r835: [221..229]
 r836: [392..407] [263..277] [234..249] [218..219] [211..212]
 r837: [390..407] [263..275] [236..247]
 r838: [386..407] [263..273] [236..245]
 r839: [384..407] [263..271] [232..243] [216..219] [209..212]
 r840: [382..407] [263..269] [230..241] [214..219] [207..212]
 r841: [280..393]
 r842: [278..391]
 r843: [276..389]
 r844: [280..387]
 r845: [326..385] [274..285]
 r846: [272..383]
 r847: [326..381] [270..284]
 r848: [287..288]
 r849: [534..583] [524..525]
 r850: [536..581]
 r851: [532..579] [522..525]
 r852: [559..577] [536..556]
 r853: [530..575] [520..525]
 r854: [528..573] [518..525]
 r855: [536..571]
 r857: [365..365]
 r858: [92..92]
 r859: [90..90]
 r860: [48..48]
 r861: [44..44]
 r862: [819..820]
 r863: [815..816]
 r864: [802..805]
 r865: [782..785]
 r866: [762..765]
 r867: [738..741]
 r868: [725..726]
 r869: [723..724]
 r870: [709..710]
 r871: [707..708]
 r872: [717..718]
 r873: [715..716]
 r874: [699..700]
 r875: [697..698]
 r876: [690..691]
 r877: [688..689]
 r878: [680..681]
 r879: [678..679]
 r880: [630..631]
 r881: [621..622]
 r882: [606..607]
 r883: [593..594]
 r884: [590..591]
 r885: [566..568]
 r886: [561..564]
 r887: [553..554]
 r888: [546..547]
 r889: [542..543]
 r890: [471..472]
 r891: [459..460]
 r892: [428..428] [424..426]
 r893: [411..412]
 r894: [256..257]
 r895: [404..405]
 r896: [398..399]
 r897: [378..379]
 r898: [338..339]
 r899: [357..358]
 r900: [350..351]
 r901: [346..347]
 r902: [332..333]
 r903: [322..323]
 r904: [318..319]
 r905: [312..313]
 r906: [306..307]
 r907: [300..301]
 r908: [291..292]
 r909: [289..290]
 r910: [197..198]
 r911: [159..160]
 r912: [100..101]
 r913: [96..97]
 r914: [56..57]
 r915: [666..667]
 r916: [663..664]
 r917: [0..1]
 r918: [265..266]
Compressing live ranges: from 823 to 592 - 71%
Ranges after the compression:
 r114: [526..533]
 r116: [532..535]
 r121: [506..519]
 r138: [422..442] [374..381] [343..371]
 r139: [420..436]
 r142: [382..429]
 r143: [382..425]
 r144: [400..407]
 r146: [394..395]
 r147: [382..427]
 r148: [382..423]
 r149: [390..405]
 r154: [406..423] [382..391]
 r155: [362..363]
 r158: [307..344]
 r168: [317..330]
 r181: [255..256]
 r186: [223..224]
 r189: [217..218]
 r191: [205..234]
 r193: [197..290]
 r215: [79..80]
 r216: [52..78]
 r217: [18..76]
 r218: [14..76]
 r219: [38..74]
 r221: [48..76]
 r222: [52..72] [30..39]
 r230: [42..43]
 r242: [4..5]
 r245: [2..483]
 r246: [374..374] [311..364]
 r247: [457..468] [83..452]
 r248: [418..446] [374..379] [343..369] [339..340]
 r249: [349..356] [347..347] [143..344] [94..141]
 r253: [71..78]
 r254: [38..53]
 r261: [463..474]
 r263: [83..448]
 r264: [416..423]
 r265: [354..359] [350..351]
 r266: [143..302] [134..141]
 r267: [143..320] [132..141]
 r268: [296..298] [169..294]
 r269: [128..131]
 r270: [126..133]
 r271: [124..129]
 r273: [262..266] [259..260] [242..243]
 r274: [233..266]
 r275: [229..264]
 r280: [287..288]
 r281: [197..294]
 r282: [482..483]
 r286: [120..129]
 r293: [177..180]
 r294: [512..529]
 r297: [163..294]
 r300: [479..589] [473..476]
 r301: [479..587] [465..474]
 r302: [352..352] [296..349] [163..294]
 r303: [281..288]
 r304: [296..298] [175..184]
 r306: [480..483]
 r307: [518..565]
 r310: [181..182]
 r313: [584..585]
 r317: [261..261] [244..244] [213..239]
 r318: [578..581]
 r319: [295..295] [171..180] [158..158] [151..151] [143..144]
 r323: [562..569]
 r325: [546..553]
 r327: [112..113]
 r329: [568..571]
 r334: [518..549]
 r337: [552..555]
 r344: [582..585]
 r346: [586..589]
 r347: [580..583]
 r351: [570..573]
 r353: [572..573]
 r354: [564..567]
 r358: [554..557]
 r360: [556..557]
 r361: [548..551]
 r367: [538..539]
 r368: [534..537]
 r372: [540..541]
 r373: [536..539]
 r374: [528..531]
 r379: [518..521]
 r403: [512..513]
 r405: [506..507]
 r408: [500..501]
 r409: [500..501]
 r478: [494..495]
 r479: [494..495]
 r482: [488..489]
 r483: [488..489]
 r528: [471..472]
 r529: [473..474]
 r530: [471..474]
 r532: [463..466]
 r533: [459..462]
 r534: [457..458]
 r535: [461..464]
 r536: [457..460]
 r541: [449..450]
 r547: [437..438]
 r548: [433..434]
 r549: [432..433]
 r550: [432..438]
 r554: [396..397]
 r556: [386..387]
 r558: [384..385]
 r560: [382..423]
 r561: [384..393]
 r563: [382..383]
 r564: [402..403]
 r568: [356..357]
 r569: [355..355] [345..346]
 r571: [350..351]
 r580: [333..334]
 r581: [331..332]
 r583: [323..328]
 r585: [327..330]
 r589: [319..320]
 r590: [317..318]
 r592: [315..320]
 r593: [315..316]
 r595: [313..314]
 r597: [311..312]
 r600: [303..304]
 r602: [303..304]
 r603: [301..302]
 r606: [291..292]
 r608: [271..272]
 r609: [269..270]
 r612: [267..268]
 r615: [265..268]
 r622: [253..254]
 r625: [249..250]
 r626: [245..246]
 r627: [235..236]
 r632: [225..230]
 r633: [219..226]
 r635: [207..214]
 r638: [207..220]
 r640: [211..212]
 r642: [207..208]
 r650: [138..139]
 r651: [136..137]
 r652: [132..135]
 r653: [94..141]
 r654: [134..141]
 r656: [114..115]
 r657: [108..109]
 r658: [106..107]
 r659: [104..105]
 r661: [102..103]
 r662: [102..111]
 r663: [102..111]
 r669: [100..101]
 r673: [98..99]
 r674: [96..97]
 r675: [94..95]
 r676: [94..95]
 r677: [85..86]
 r678: [83..84]
 r684: [58..59]
 r685: [60..69]
 r686: [68..74]
 r688: [60..61]
 r689: [56..57]
 r690: [66..70]
 r691: [62..63]
 r692: [64..67]
 r695: [64..65]
 r696: [54..61]
 r698: [56..57]
 r699: [54..55]
 r701: [52..53]
 r703: [46..49]
 r707: [36..37]
 r708: [26..33]
 r709: [34..35]
 r710: [32..37]
 r712: [34..37]
 r713: [22..25]
 r714: [24..27]
 r715: [28..31]
 r718: [28..29]
 r719: [20..23]
 r721: [22..23]
 r722: [20..21]
 r724: [18..19]
 r726: [12..15]
 r731: [8..9]
 r732: [6..7]
 r733: [2..3]
 r736: [309..310]
 r737: [87..88]
 r738: [303..448] [142..142] [8..90]
 r739: [2..483]
 r740: [2..483]
 r741: [295..296] [143..186] [134..141]
 r742: [233..294] [185..198] [169..180]
 r743: [197..288]
 r744: [410..423] [22..57]
 r745: [2..591]
 r746: [2..591]
 r747: [2..591]
 r761: [130..131]
 r762: [116..129]
 r764: [197..290]
 r769: [169..294]
 r770: [169..294]
 r771: [169..294]
 r774: [2..483]
 r775: [2..483]
 r776: [2..483]
 r777: [2..483]
 r780: [576..577]
 r781: [574..575]
 r782: [566..573]
 r783: [560..561]
 r784: [558..559]
 r785: [550..557]
 r786: [544..545]
 r787: [542..543]
 r788: [530..541]
 r789: [524..525]
 r790: [522..523]
 r791: [520..521]
 r792: [469..470]
 r793: [467..468]
 r794: [455..456]
 r795: [453..454]
 r796: [447..448]
 r797: [443..444]
 r798: [441..442]
 r799: [439..440]
 r800: [430..431]
 r801: [428..429]
 r802: [360..361]
 r803: [358..359]
 r804: [343..344]
 r805: [341..342]
 r806: [337..338]
 r807: [329..330]
 r808: [323..324]
 r809: [321..322]
 r810: [299..300]
 r811: [205..206]
 r812: [81..82]
 r813: [79..80]
 r814: [77..78]
 r815: [50..51]
 r816: [46..47]
 r817: [44..45]
 r818: [16..17]
 r819: [12..13]
 r820: [10..11]
 r824: [414..481] [374..377] [295..367] [179..184] [158..162] [151..155] [122..148] [2..93]
 r825: [412..479] [374..375] [295..365] [173..184] [158..160] [151..153] [118..146] [2..91]
 r826: [94..127]
 r827: [94..125]
 r828: [94..123]
 r829: [94..121]
 r830: [94..119]
 r831: [92..117]
 r832: [94..115]
 r833: [163..168]
 r834: [161..166]
 r835: [159..164]
 r836: [285..294] [185..196] [169..178] [156..157] [149..150]
 r837: [283..294] [185..194] [169..176]
 r838: [279..294] [185..192] [169..174]
 r839: [277..294] [185..190] [167..172] [154..157] [147..150]
 r840: [275..294] [185..188] [165..170] [152..157] [145..150]
 r841: [197..286]
 r842: [197..284]
 r843: [195..282]
 r844: [197..280]
 r845: [233..278] [193..198]
 r846: [191..276]
 r847: [233..274] [189..198]
 r848: [199..200]
 r849: [382..421] [372..373]
 r850: [382..419]
 r851: [380..417] [370..373]
 r852: [404..415] [382..401]
 r853: [378..413] [368..373]
 r854: [376..411] [366..373]
 r855: [382..409]
 r857: [263..263]
 r858: [69..69]
 r859: [67..67]
 r860: [35..35]
 r861: [31..31]
 r862: [590..591]
 r863: [588..589]
 r864: [578..579]
 r865: [562..563]
 r866: [546..547]
 r867: [526..527]
 r868: [516..517]
 r869: [514..515]
 r870: [504..505]
 r871: [502..503]
 r872: [510..511]
 r873: [508..509]
 r874: [498..499]
 r875: [496..497]
 r876: [492..493]
 r877: [490..491]
 r878: [486..487]
 r879: [484..485]
 r880: [451..452]
 r881: [445..446]
 r882: [435..436]
 r883: [426..427]
 r884: [424..425]
 r885: [408..409]
 r886: [406..407]
 r887: [398..399]
 r888: [392..393]
 r889: [388..389]
 r890: [335..336]
 r891: [325..326]
 r892: [308..308] [305..306]
 r893: [297..298]
 r894: [183..184]
 r895: [293..294]
 r896: [289..290]
 r897: [273..274]
 r898: [240..241]
 r899: [257..258]
 r900: [251..252]
 r901: [247..248]
 r902: [237..238]
 r903: [231..232]
 r904: [227..228]
 r905: [221..222]
 r906: [215..216]
 r907: [209..210]
 r908: [203..204]
 r909: [201..202]
 r910: [140..141]
 r911: [110..111]
 r912: [75..76]
 r913: [73..74]
 r914: [40..41]
 r915: [477..478]
 r916: [475..476]
 r917: [0..1]
 r918: [187..188]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 94
   Insn 1381: point = 0, n_alt = 1
   Insn 1380: point = 0, n_alt = 1
   Insn 1378: point = 0, n_alt = -1
   Insn 1377: point = 0, n_alt = 1
  BB 88
   Insn 1338: point = 0, n_alt = 1
   Insn 1336: point = 0, n_alt = -1
   Insn 1334: point = 0, n_alt = -1
   Insn 1333: point = 0, n_alt = 1
  BB 95
   Insn 1390: point = 0, n_alt = 1
   Insn 1389: point = 0, n_alt = 1
   Insn 1387: point = 0, n_alt = -1
   Insn 1386: point = 0, n_alt = 1
  BB 93
   Insn 1374: point = 0, n_alt = 0
   Insn 1962: point = 1, n_alt = 5
  BB 91
   Insn 1361: point = 4, n_alt = -1
   Insn 1360: point = 4, n_alt = 3
   Insn 1359: point = 4, n_alt = 4
   Insn 1355: point = 5, n_alt = 4
  BB 90
   Insn 1351: point = 7, n_alt = 7
   Insn 1350: point = 8, n_alt = 4
  BB 89
   Insn 1347: point = 11, n_alt = -1
   Insn 1346: point = 11, n_alt = 0
   Insn 1343: point = 11, n_alt = 5
  BB 87
   Insn 1330: point = 13, n_alt = 0
   Insn 1328: point = 14, n_alt = 1
  BB 86
   Insn 1323: point = 16, n_alt = -1
   Insn 1778: point = 16, n_alt = -2
   Insn 1777: point = 16, n_alt = 0
   Insn 1321: point = 17, n_alt = 2
  BB 85
   Insn 1316: point = 19, n_alt = 6
   Insn 1680: point = 20, n_alt = -2
   Insn 1314: point = 21, n_alt = -1
   Insn 1311: point = 21, n_alt = -1
   Insn 1310: point = 21, n_alt = -2
   Insn 1309: point = 22, n_alt = -2
   Insn 1679: point = 23, n_alt = -2
   Insn 1307: point = 24, n_alt = -1
   Insn 1306: point = 24, n_alt = 1
   Insn 1305: point = 25, n_alt = -2
   Insn 1678: point = 27, n_alt = -2
   Insn 1304: point = 28, n_alt = -1
   Insn 1302: point = 28, n_alt = 6
   Insn 1300: point = 28, n_alt = -1
   Insn 1299: point = 28, n_alt = 1
  BB 84
   Insn 1296: point = 30, n_alt = 0
   Insn 1294: point = 31, n_alt = 1
   Insn 1292: point = 33, n_alt = 0
   Insn 1290: point = 35, n_alt = 1
   Insn 1289: point = 36, n_alt = 0
   Insn 1283: point = 38, n_alt = 0
   Insn 1288: point = 40, n_alt = 1
   Insn 1287: point = 42, n_alt = 1
   Insn 1285: point = 44, n_alt = 0
   Insn 1282: point = 46, n_alt = 1
   Insn 1279: point = 48, n_alt = 0
   Insn 1281: point = 50, n_alt = 2
   Insn 1278: point = 51, n_alt = 5
   Insn 1277: point = 52, n_alt = 0
  BB 83
   Insn 1959: point = 55, n_alt = 10
	Hard reg 3 is preferable by r914 with profit 25
   Insn 1268: point = 57, n_alt = 0
   Insn 1267: point = 59, n_alt = 4
   Insn 1266: point = 59, n_alt = 0
   Insn 1677: point = 61, n_alt = -2
   Insn 1265: point = 62, n_alt = -1
   Insn 1262: point = 62, n_alt = -1
   Insn 1261: point = 62, n_alt = -2
   Insn 1260: point = 63, n_alt = -2
   Insn 1676: point = 64, n_alt = -2
   Insn 1258: point = 65, n_alt = -1
   Insn 1257: point = 65, n_alt = 1
   Insn 1256: point = 66, n_alt = -2
   Insn 1675: point = 68, n_alt = -2
   Insn 1255: point = 69, n_alt = -1
   Insn 1253: point = 69, n_alt = 6
   Insn 1251: point = 69, n_alt = -1
   Insn 1250: point = 69, n_alt = 1
  BB 82
   Insn 1247: point = 71, n_alt = 0
   Insn 1599: point = 72, n_alt = 9
   Insn 1245: point = 73, n_alt = 1
   Insn 1243: point = 75, n_alt = 0
   Insn 1241: point = 77, n_alt = 1
   Insn 1227: point = 78, n_alt = 6
   Insn 1233: point = 79, n_alt = 0
   Insn 1232: point = 81, n_alt = 1
   Insn 1231: point = 83, n_alt = 2
   Insn 1240: point = 84, n_alt = 0
   Insn 1239: point = 86, n_alt = 1
   Insn 1238: point = 88, n_alt = 1
   Insn 1236: point = 90, n_alt = 0
   Insn 1229: point = 92, n_alt = 0
   Insn 1234: point = 93, n_alt = 1
   Insn 1958: point = 95, n_alt = 10
	Hard reg 3 is preferable by r913 with profit 51
   Insn 1224: point = 97, n_alt = 0
   Insn 1228: point = 98, n_alt = 5
   Insn 1957: point = 99, n_alt = 10
	Hard reg 9 is preferable by r912 with profit 51
   Insn 1220: point = 101, n_alt = 0
   Insn 1783: point = 102, n_alt = -2
   Insn 1782: point = 102, n_alt = 1
   Insn 1223: point = 102, n_alt = 3
   Insn 1219: point = 103, n_alt = 3
   Insn 1210: point = 104, n_alt = -2
   Insn 1674: point = 106, n_alt = -2
   Insn 1209: point = 107, n_alt = -1
   Insn 1592: point = 107, n_alt = 9
   Insn 1781: point = 108, n_alt = -2
   Insn 1780: point = 108, n_alt = 1
   Insn 1199: point = 108, n_alt = -2
   Insn 1208: point = 110, n_alt = -2
   Insn 1673: point = 111, n_alt = -2
   Insn 1198: point = 112, n_alt = -1
   Insn 1197: point = 112, n_alt = -2
   Insn 1196: point = 112, n_alt = 0
   Insn 1672: point = 114, n_alt = -2
   Insn 1195: point = 115, n_alt = -1
   Insn 1192: point = 115, n_alt = -1
   Insn 1632: point = 115, n_alt = 6
   Insn 1188: point = 115, n_alt = -1
   Insn 1187: point = 115, n_alt = 1
  BB 81
   Insn 1176: point = 117, n_alt = -1
   Insn 1786: point = 117, n_alt = -2
   Insn 1785: point = 117, n_alt = 0
   Insn 1174: point = 118, n_alt = 2
  BB 80
   Insn 1167: point = 120, n_alt = -1
   Insn 1166: point = 120, n_alt = 0
   Insn 1165: point = 121, n_alt = 1
  BB 97
   Insn 1767: point = 123, n_alt = -1
   Insn 1409: point = 123, n_alt = 7
   Insn 1408: point = 124, n_alt = 1
   Insn 1565: point = 125, n_alt = 3
  BB 44
   Insn 1736: point = 127, n_alt = -1
   Insn 1559: point = 127, n_alt = 3
  BB 79
   Insn 1564: point = 129, n_alt = 3
   Insn 1892: point = 130, n_alt = -2
   Insn 1891: point = 132, n_alt = -2
  BB 78
   Insn 1160: point = 135, n_alt = -1
   Insn 1159: point = 135, n_alt = 0
   Insn 1157: point = 135, n_alt = 2
   Insn 1154: point = 136, n_alt = 2
  BB 77
   Insn 1150: point = 138, n_alt = -1
   Insn 1146: point = 138, n_alt = 0
   Insn 1145: point = 139, n_alt = 7
   Insn 1144: point = 140, n_alt = 5
   Insn 1143: point = 141, n_alt = 2
   Insn 1142: point = 143, n_alt = 0
   Insn 1141: point = 145, n_alt = 1
   Insn 1136: point = 147, n_alt = 1
   Insn 1149: point = 148, n_alt = -2
   Insn 1148: point = 148, n_alt = -2
   Insn 1147: point = 148, n_alt = 3
   Insn 1130: point = 148, n_alt = -1
  BB 76
   Insn 1123: point = 149, n_alt = 8
  BB 75
   Insn 1115: point = 151, n_alt = -1
   Insn 1788: point = 151, n_alt = -2
   Insn 1787: point = 151, n_alt = 0
   Insn 1112: point = 152, n_alt = 0
   Insn 1111: point = 154, n_alt = 0
   Insn 1109: point = 156, n_alt = 0
   Insn 1956: point = 158, n_alt = 9
	Hard reg 31 is preferable by r911 with profit 18
   Insn 1108: point = 160, n_alt = 1
   Insn 1121: point = 161, n_alt = 1
   Insn 1113: point = 162, n_alt = 3
  BB 74
   Insn 1100: point = 164, n_alt = -1
   Insn 1129: point = 164, n_alt = -2
   Insn 1103: point = 165, n_alt = 4
   Insn 1099: point = 166, n_alt = 0
   Insn 1098: point = 167, n_alt = 1
  BB 73
   Insn 1890: point = 169, n_alt = -2
   Insn 1889: point = 171, n_alt = -2
   Insn 1888: point = 173, n_alt = -2
   Insn 1887: point = 175, n_alt = -2
   Insn 1886: point = 177, n_alt = -2
   Insn 1885: point = 179, n_alt = -2
   Insn 1884: point = 181, n_alt = -2
   Insn 25: point = 183, n_alt = 1
   Insn 24: point = 184, n_alt = -2
   Insn 1140: point = 185, n_alt = 1
   Insn 1139: point = 187, n_alt = 1
   Insn 1083: point = 188, n_alt = 0
   Insn 1088: point = 190, n_alt = 0
   Insn 1082: point = 192, n_alt = 0
   Insn 1080: point = 194, n_alt = 0
   Insn 1955: point = 196, n_alt = 9
	Hard reg 30 is preferable by r910 with profit 1
   Insn 1079: point = 198, n_alt = 1
   Insn 1087: point = 199, n_alt = 0
   Insn 1081: point = 200, n_alt = 2
  BB 72
   Insn 1761: point = 202, n_alt = -1
   Insn 1563: point = 202, n_alt = 3
  BB 71
   Insn 1076: point = 204, n_alt = -1
   Insn 1075: point = 204, n_alt = 0
  BB 99
   Insn 1770: point = 206, n_alt = -1
   Insn 1895: point = 206, n_alt = -2
   Insn 1894: point = 208, n_alt = -2
   Insn 1893: point = 210, n_alt = -2
  BB 69
   Insn 1758: point = 213, n_alt = -1
   Insn 1883: point = 213, n_alt = -2
   Insn 1882: point = 215, n_alt = -2
   Insn 1881: point = 217, n_alt = -2
  BB 66
   Insn 1755: point = 220, n_alt = -1
   Insn 1880: point = 220, n_alt = -2
   Insn 1879: point = 222, n_alt = -2
   Insn 1878: point = 224, n_alt = -2
  BB 65
   Insn 1033: point = 227, n_alt = -1
   Insn 1794: point = 227, n_alt = -2
   Insn 1793: point = 227, n_alt = 0
   Insn 1026: point = 227, n_alt = 0
  BB 102
   Insn 1877: point = 229, n_alt = -2
   Insn 1876: point = 231, n_alt = -2
   Insn 1875: point = 233, n_alt = -2
  BB 64
   Insn 1016: point = 236, n_alt = -1
   Insn 1796: point = 236, n_alt = -2
   Insn 1795: point = 236, n_alt = 1
  BB 68
   Insn 1063: point = 237, n_alt = -1
   Insn 1790: point = 237, n_alt = -2
   Insn 1789: point = 237, n_alt = 0
   Insn 1053: point = 237, n_alt = 4
   Insn 1056: point = 238, n_alt = 0
  BB 67
   Insn 1050: point = 240, n_alt = -1
   Insn 1792: point = 240, n_alt = -2
   Insn 1791: point = 240, n_alt = 1
  BB 46
   Insn 1739: point = 241, n_alt = -1
   Insn 1862: point = 241, n_alt = -2
   Insn 1861: point = 243, n_alt = -2
   Insn 1860: point = 245, n_alt = -2
   Insn 1859: point = 247, n_alt = -2
   Insn 1858: point = 249, n_alt = -2
   Insn 23: point = 251, n_alt = 1
   Insn 845: point = 252, n_alt = 5
   Insn 1560: point = 253, n_alt = 0
   Insn 1939: point = 255, n_alt = 9
	Hard reg 30 is preferable by r894 with profit 4
   Insn 844: point = 257, n_alt = 1
   Insn 912: point = 258, n_alt = 3
   Insn 20: point = 259, n_alt = 3
   Insn 906: point = 260, n_alt = 3
   Insn 22: point = 261, n_alt = 3
  BB 98
   Insn 1426: point = 263, n_alt = -1
   Insn 1776: point = 263, n_alt = -2
   Insn 1775: point = 263, n_alt = 0
   Insn 1417: point = 263, n_alt = 4
   Insn 1424: point = 264, n_alt = 0
   Insn 1963: point = 266, n_alt = 9
	Hard reg 1 is preferable by r918 with profit 37
   Insn 1420: point = 267, n_alt = 0
  BB 63
   Insn 1752: point = 269, n_alt = -1
   Insn 1874: point = 269, n_alt = -2
   Insn 1873: point = 271, n_alt = -2
   Insn 1872: point = 273, n_alt = -2
   Insn 1871: point = 275, n_alt = -2
   Insn 1870: point = 277, n_alt = -2
  BB 62
   Insn 1009: point = 280, n_alt = -1
   Insn 1798: point = 280, n_alt = -2
   Insn 1797: point = 280, n_alt = 0
   Insn 999: point = 280, n_alt = 2
   Insn 1002: point = 281, n_alt = 0
  BB 50
   Insn 1742: point = 283, n_alt = -1
  BB 61
   Insn 995: point = 284, n_alt = 5
   Insn 993: point = 285, n_alt = 1
   Insn 1562: point = 286, n_alt = 0
   Insn 1954: point = 288, n_alt = 9
	Hard reg 30 is preferable by r909 with profit 18
   Insn 992: point = 290, n_alt = 1
   Insn 991: point = 291, n_alt = -1
   Insn 989: point = 291, n_alt = 10
   Insn 1953: point = 291, n_alt = 10
	Hard reg 0 is preferable by r908 with profit 18
   Insn 990: point = 292, n_alt = 0
   Insn 988: point = 294, n_alt = 0
   Insn 1671: point = 295, n_alt = -2
   Insn 983: point = 296, n_alt = -1
   Insn 982: point = 296, n_alt = 1
   Insn 981: point = 297, n_alt = 1
   Insn 980: point = 298, n_alt = 1
   Insn 1952: point = 299, n_alt = 13
   Insn 977: point = 301, n_alt = 0
   Insn 976: point = 303, n_alt = 0
   Insn 1951: point = 305, n_alt = 13
   Insn 970: point = 307, n_alt = 0
   Insn 969: point = 309, n_alt = 0
   Insn 1950: point = 311, n_alt = 13
   Insn 973: point = 313, n_alt = 0
   Insn 967: point = 315, n_alt = 0
   Insn 968: point = 317, n_alt = 0
   Insn 1949: point = 319, n_alt = 9
	Hard reg 2 is preferable by r904 with profit 18
   Insn 966: point = 321, n_alt = 0
   Insn 1948: point = 323, n_alt = 9
	Hard reg 12 is preferable by r903 with profit 18
  BB 60
   Insn 960: point = 326, n_alt = -1
   Insn 1800: point = 326, n_alt = -2
   Insn 1799: point = 326, n_alt = 0
  BB 59
   Insn 953: point = 327, n_alt = -1
   Insn 1802: point = 327, n_alt = -2
   Insn 1801: point = 327, n_alt = 1
  BB 58
   Insn 946: point = 328, n_alt = -1
   Insn 1804: point = 328, n_alt = -2
   Insn 1803: point = 328, n_alt = 1
  BB 57
   Insn 939: point = 329, n_alt = -1
   Insn 1806: point = 329, n_alt = -2
   Insn 1805: point = 329, n_alt = 0
   Insn 936: point = 329, n_alt = 0
   Insn 935: point = 331, n_alt = 0
   Insn 1947: point = 333, n_alt = 9
	Hard reg 6 is preferable by r902 with profit 312
  BB 55
   Insn 1748: point = 335, n_alt = -1
   Insn 1623: point = 335, n_alt = -2
  BB 52
   Insn 1744: point = 337, n_alt = -1
   Insn 899: point = 337, n_alt = 0
   Insn 1943: point = 339, n_alt = 9
	Hard reg 3 is preferable by r898 with profit 128
  BB 101
   Insn 1773: point = 342, n_alt = -1
  BB 54
   Insn 1746: point = 343, n_alt = -1
   Insn 917: point = 343, n_alt = 0
   Insn 1946: point = 345, n_alt = 9
	Hard reg 31 is preferable by r901 with profit 92
   Insn 916: point = 347, n_alt = 1
   Insn 1945: point = 349, n_alt = 13
   Insn 914: point = 351, n_alt = 0
   Insn 913: point = 353, n_alt = 0
  BB 53
   Insn 908: point = 356, n_alt = -1
   Insn 1808: point = 356, n_alt = -2
   Insn 1807: point = 356, n_alt = 0
   Insn 905: point = 356, n_alt = 0
   Insn 1944: point = 358, n_alt = 9
	Hard reg 3 is preferable by r899 with profit 150
  BB 51
   Insn 897: point = 361, n_alt = -1
   Insn 896: point = 361, n_alt = 0
  BB 56
   Insn 1624: point = 362, n_alt = -2
  BB 100
   Insn 1436: point = 364, n_alt = -1
   Insn 1435: point = 364, n_alt = 0
  BB 49
   Insn 887: point = 365, n_alt = -1
   Insn 886: point = 365, n_alt = 2
  BB 48
   Insn 881: point = 367, n_alt = -1
   Insn 880: point = 367, n_alt = 0
   Insn 877: point = 367, n_alt = 1
   Insn 872: point = 369, n_alt = 1
   Insn 867: point = 370, n_alt = 1
   Insn 871: point = 372, n_alt = 1
   Insn 862: point = 373, n_alt = 1
   Insn 859: point = 375, n_alt = 0
   Insn 1942: point = 377, n_alt = 10
	Hard reg 3 is preferable by r897 with profit 341
   Insn 858: point = 379, n_alt = 0
  BB 47
   Insn 1869: point = 381, n_alt = -2
   Insn 1868: point = 383, n_alt = -2
   Insn 1867: point = 385, n_alt = -2
   Insn 1866: point = 387, n_alt = -2
   Insn 1865: point = 389, n_alt = -2
   Insn 1864: point = 391, n_alt = -2
   Insn 1863: point = 393, n_alt = -2
   Insn 19: point = 395, n_alt = 1
   Insn 1561: point = 396, n_alt = 5
   Insn 1941: point = 397, n_alt = 10
	Hard reg 8 is preferable by r896 with profit 37
   Insn 851: point = 399, n_alt = 0
   Insn 986: point = 400, n_alt = 0
   Insn 850: point = 401, n_alt = 0
   Insn 1897: point = 403, n_alt = 0
   Insn 1940: point = 405, n_alt = 9
	Hard reg 9 is preferable by r895 with profit 37
   Insn 18: point = 406, n_alt = 3
  BB 70
   Insn 1069: point = 408, n_alt = 5
  BB 45
   Insn 839: point = 410, n_alt = -1
   Insn 1810: point = 410, n_alt = -2
   Insn 1809: point = 410, n_alt = 1
   Insn 836: point = 410, n_alt = 0
   Insn 1938: point = 412, n_alt = 9
	Hard reg 1 is preferable by r893 with profit 5
   Insn 835: point = 413, n_alt = 1
   Insn 823: point = 414, n_alt = -2
   Insn 1670: point = 416, n_alt = -2
   Insn 822: point = 417, n_alt = -1
   Insn 819: point = 417, n_alt = 8
   Insn 817: point = 418, n_alt = 1
   Insn 814: point = 419, n_alt = 0
   Insn 821: point = 421, n_alt = -2
   Insn 813: point = 422, n_alt = 3
   Insn 1937: point = 423, n_alt = -2
	Hard reg 31 is preferable by r892 with profit 5
   Insn 812: point = 425, n_alt = 0
   Insn 1936: point = 426, n_alt = 9
   Insn 1935: point = 428, n_alt = -1
  BB 96
   Insn 1765: point = 430, n_alt = -1
   Insn 1400: point = 430, n_alt = 7
   Insn 1399: point = 431, n_alt = 1
  BB 43
   Insn 806: point = 433, n_alt = -1
   Insn 805: point = 433, n_alt = 3
   Insn 802: point = 434, n_alt = 7
   Insn 801: point = 435, n_alt = 1
  BB 42
   Insn 1734: point = 437, n_alt = -1
   Insn 17: point = 437, n_alt = 8
   Insn 792: point = 439, n_alt = 8
  BB 41
   Insn 788: point = 440, n_alt = -1
   Insn 787: point = 440, n_alt = 0
   Insn 786: point = 441, n_alt = 5
  BB 40
   Insn 782: point = 443, n_alt = -1
   Insn 781: point = 443, n_alt = 3
  BB 39
   Insn 776: point = 444, n_alt = -1
   Insn 1812: point = 444, n_alt = -2
   Insn 1811: point = 444, n_alt = 0
   Insn 773: point = 445, n_alt = 0
  BB 38
   Insn 768: point = 448, n_alt = -1
   Insn 1814: point = 448, n_alt = -2
   Insn 1813: point = 448, n_alt = 0
   Insn 764: point = 448, n_alt = 8
   Insn 762: point = 449, n_alt = 5
   Insn 755: point = 450, n_alt = 4
   Insn 754: point = 451, n_alt = 5
   Insn 766: point = 452, n_alt = 3
   Insn 750: point = 453, n_alt = 0
   Insn 1669: point = 455, n_alt = -2
   Insn 749: point = 456, n_alt = -1
   Insn 746: point = 456, n_alt = -1
   Insn 745: point = 456, n_alt = -2
   Insn 744: point = 457, n_alt = -2
   Insn 1668: point = 458, n_alt = -2
   Insn 742: point = 459, n_alt = -1
   Insn 1934: point = 459, n_alt = 1
	Hard reg 0 is preferable by r891 with profit 60
   Insn 741: point = 460, n_alt = 0
   Insn 738: point = 462, n_alt = -2
   Insn 739: point = 464, n_alt = 2
   Insn 1667: point = 465, n_alt = -2
   Insn 737: point = 466, n_alt = -1
   Insn 735: point = 466, n_alt = 6
   Insn 733: point = 466, n_alt = -1
   Insn 731: point = 466, n_alt = 0
   Insn 730: point = 468, n_alt = 0
   Insn 1933: point = 470, n_alt = 9
	Hard reg 35 is preferable by r890 with profit 60
   Insn 729: point = 472, n_alt = 1
   Insn 732: point = 473, n_alt = -2
   Insn 1666: point = 474, n_alt = 1
   Insn 727: point = 475, n_alt = -1
   Insn 726: point = 475, n_alt = 3
   Insn 725: point = 475, n_alt = 3
   Insn 724: point = 475, n_alt = 3
   Insn 723: point = 475, n_alt = 3
   Insn 722: point = 475, n_alt = 0
  BB 37
   Insn 711: point = 477, n_alt = -2
   Insn 1665: point = 479, n_alt = -2
   Insn 710: point = 480, n_alt = -1
   Insn 707: point = 480, n_alt = -1
   Insn 705: point = 480, n_alt = 6
   Insn 706: point = 480, n_alt = -2
  BB 36
   Insn 699: point = 482, n_alt = 0
   Insn 1664: point = 483, n_alt = -2
   Insn 696: point = 484, n_alt = -1
   Insn 695: point = 484, n_alt = -2
   Insn 694: point = 484, n_alt = 6
   Insn 686: point = 484, n_alt = 1
  BB 34
   Insn 1732: point = 486, n_alt = -1
   Insn 12: point = 486, n_alt = -2
   Insn 11: point = 488, n_alt = 3
  BB 33
   Insn 1730: point = 490, n_alt = -1
   Insn 14: point = 490, n_alt = 2
   Insn 13: point = 491, n_alt = 3
  BB 32
   Insn 1728: point = 493, n_alt = -1
   Insn 680: point = 493, n_alt = 0
   Insn 679: point = 495, n_alt = 3
  BB 35
   Insn 15: point = 497, n_alt = 2
   Insn 16: point = 498, n_alt = 3
  BB 31
   Insn 677: point = 500, n_alt = -1
   Insn 1816: point = 500, n_alt = -2
   Insn 1815: point = 500, n_alt = 1
  BB 30
   Insn 672: point = 501, n_alt = -1
   Insn 1818: point = 501, n_alt = -2
   Insn 1817: point = 501, n_alt = 0
   Insn 670: point = 501, n_alt = 2
   Insn 667: point = 502, n_alt = 0
   Insn 666: point = 503, n_alt = 2
  BB 29
   Insn 662: point = 505, n_alt = 0
   Insn 1663: point = 506, n_alt = -2
   Insn 659: point = 507, n_alt = -1
   Insn 1627: point = 507, n_alt = 6
   Insn 654: point = 507, n_alt = -1
   Insn 653: point = 507, n_alt = 1
   Insn 650: point = 507, n_alt = 0
   Insn 1662: point = 509, n_alt = -2
   Insn 648: point = 510, n_alt = -1
   Insn 1585: point = 510, n_alt = 2
   Insn 1584: point = 511, n_alt = 0
   Insn 639: point = 512, n_alt = 1
   Insn 647: point = 513, n_alt = 0
  BB 27
   Insn 1726: point = 514, n_alt = -1
   Insn 8: point = 514, n_alt = 1
  BB 26
   Insn 1724: point = 516, n_alt = -1
   Insn 9: point = 516, n_alt = 1
   Insn 1853: point = 517, n_alt = -2
   Insn 1852: point = 519, n_alt = -2
   Insn 1851: point = 521, n_alt = -2
   Insn 1850: point = 523, n_alt = -2
  BB 28
   Insn 7: point = 526, n_alt = 1
   Insn 1857: point = 527, n_alt = -2
   Insn 1856: point = 529, n_alt = -2
   Insn 1855: point = 531, n_alt = -2
   Insn 1854: point = 533, n_alt = -2
  BB 24
   Insn 624: point = 536, n_alt = 0
   Insn 622: point = 537, n_alt = 1
   Insn 617: point = 539, n_alt = 0
   Insn 1932: point = 541, n_alt = 10
	Hard reg 2 is preferable by r889 with profit 537
   Insn 616: point = 543, n_alt = 0
   Insn 631: point = 545, n_alt = 0
   Insn 1931: point = 547, n_alt = 9
	Hard reg 1 is preferable by r888 with profit 537
   Insn 620: point = 548, n_alt = 0
   Insn 613: point = 550, n_alt = 0
   Insn 1930: point = 552, n_alt = 10
	Hard reg 3 is preferable by r887 with profit 537
   Insn 612: point = 554, n_alt = 0
   Insn 628: point = 556, n_alt = 0
   Insn 627: point = 558, n_alt = 2
   Insn 1929: point = 560, n_alt = -2
	Hard reg 30 is preferable by r886 with profit 537
   Insn 614: point = 562, n_alt = 0
   Insn 1928: point = 564, n_alt = -2
	Hard reg 30 is preferable by r886 with profit 537
	Hard reg 28 is preferable by r886 with profit 537
   Insn 1927: point = 565, n_alt = -2
	Hard reg 31 is preferable by r885 with profit 537
   Insn 611: point = 567, n_alt = 0
   Insn 1926: point = 568, n_alt = -2
	Hard reg 31 is preferable by r885 with profit 537
	Hard reg 27 is preferable by r885 with profit 537
  BB 25
   Insn 634: point = 570, n_alt = -1
   Insn 1820: point = 570, n_alt = -2
   Insn 1819: point = 570, n_alt = 0
  BB 23
   Insn 1849: point = 571, n_alt = -2
   Insn 1848: point = 573, n_alt = -2
   Insn 1847: point = 575, n_alt = -2
   Insn 1846: point = 577, n_alt = -2
   Insn 1845: point = 579, n_alt = -2
   Insn 1844: point = 581, n_alt = -2
   Insn 1843: point = 583, n_alt = -2
   Insn 618: point = 585, n_alt = 1
   Insn 5: point = 586, n_alt = 1
   Insn 1558: point = 587, n_alt = 6
   Insn 6: point = 588, n_alt = 3
   Insn 607: point = 589, n_alt = 3
   Insn 1925: point = 591, n_alt = 5
   Insn 602: point = 592, n_alt = 3
   Insn 1924: point = 594, n_alt = 5
   Insn 605: point = 595, n_alt = -2
   Insn 1661: point = 597, n_alt = -2
   Insn 604: point = 598, n_alt = -1
   Insn 603: point = 598, n_alt = -2
   Insn 600: point = 598, n_alt = -2
   Insn 1660: point = 600, n_alt = -2
   Insn 599: point = 601, n_alt = -1
   Insn 598: point = 601, n_alt = -2
  BB 22
   Insn 593: point = 602, n_alt = -1
   Insn 1822: point = 602, n_alt = -2
   Insn 1821: point = 602, n_alt = 1
  BB 21
   Insn 584: point = 603, n_alt = -1
   Insn 1824: point = 603, n_alt = -2
   Insn 1823: point = 603, n_alt = 0
   Insn 581: point = 604, n_alt = 0
   Insn 580: point = 605, n_alt = 0
   Insn 1923: point = 607, n_alt = 9
	Hard reg 10 is preferable by r882 with profit 225
   Insn 579: point = 608, n_alt = 6
   Insn 578: point = 610, n_alt = 5
   Insn 582: point = 611, n_alt = 2
  BB 20
   Insn 572: point = 613, n_alt = 0
   Insn 1659: point = 614, n_alt = -2
   Insn 569: point = 615, n_alt = -1
   Insn 568: point = 615, n_alt = -2
   Insn 567: point = 615, n_alt = 6
  BB 19
   Insn 564: point = 616, n_alt = 0
   Insn 1658: point = 617, n_alt = -2
   Insn 561: point = 618, n_alt = -1
   Insn 1626: point = 618, n_alt = 6
   Insn 557: point = 618, n_alt = -2
   Insn 1657: point = 620, n_alt = -2
   Insn 556: point = 621, n_alt = -1
   Insn 555: point = 621, n_alt = -2
   Insn 550: point = 621, n_alt = 6
   Insn 1922: point = 622, n_alt = 5
   Insn 546: point = 623, n_alt = 1
   Insn 1566: point = 625, n_alt = -2
   Insn 552: point = 626, n_alt = 3
   Insn 1656: point = 627, n_alt = -2
   Insn 545: point = 628, n_alt = -1
   Insn 544: point = 628, n_alt = 0
   Insn 542: point = 629, n_alt = 3
   Insn 1921: point = 631, n_alt = 5
  BB 18
   Insn 535: point = 633, n_alt = -2
   Insn 1655: point = 635, n_alt = -2
   Insn 534: point = 636, n_alt = -1
   Insn 533: point = 636, n_alt = 0
   Insn 1654: point = 637, n_alt = -2
   Insn 531: point = 638, n_alt = -1
   Insn 528: point = 638, n_alt = -1
   Insn 1625: point = 638, n_alt = 6
   Insn 524: point = 638, n_alt = -1
   Insn 523: point = 638, n_alt = 1
  BB 17
   Insn 517: point = 640, n_alt = -1
   Insn 1826: point = 640, n_alt = -2
   Insn 1825: point = 640, n_alt = 0
   Insn 513: point = 641, n_alt = 0
   Insn 515: point = 643, n_alt = 0
   Insn 512: point = 645, n_alt = 0
   Insn 514: point = 647, n_alt = 0
   Insn 511: point = 649, n_alt = 0
   Insn 1653: point = 651, n_alt = -2
   Insn 509: point = 652, n_alt = -1
   Insn 505: point = 652, n_alt = -2
   Insn 1652: point = 654, n_alt = -2
   Insn 504: point = 655, n_alt = -1
   Insn 503: point = 655, n_alt = 1
   Insn 500: point = 656, n_alt = 0
   Insn 501: point = 658, n_alt = 0
   Insn 499: point = 659, n_alt = 3
   Insn 483: point = 660, n_alt = 3
  BB 92
   Insn 1763: point = 662, n_alt = -1
   Insn 1366: point = 662, n_alt = 3
   Insn 1961: point = 664, n_alt = 5
   Insn 1364: point = 665, n_alt = 3
   Insn 1960: point = 667, n_alt = 5
  BB 16
   Insn 1842: point = 669, n_alt = -2
   Insn 1841: point = 671, n_alt = -2
   Insn 4: point = 673, n_alt = 8
   Insn 937: point = 674, n_alt = 3
   Insn 1550: point = 675, n_alt = 5
   Insn 3: point = 676, n_alt = 1
  BB 15
   Insn 466: point = 678, n_alt = -1
   Insn 465: point = 678, n_alt = 5
   Insn 464: point = 678, n_alt = 0
	Hard reg 1 is preferable by r879 with profit 27
   Insn 1920: point = 679, n_alt = 4
   Insn 463: point = 680, n_alt = 1
   Insn 453: point = 680, n_alt = -1
   Insn 452: point = 680, n_alt = 10
   Insn 451: point = 680, n_alt = 5
   Insn 450: point = 680, n_alt = 1
   Insn 442: point = 680, n_alt = -1
   Insn 441: point = 680, n_alt = 0
	Hard reg 0 is preferable by r878 with profit 27
   Insn 1919: point = 681, n_alt = 4
   Insn 440: point = 682, n_alt = 5
   Insn 439: point = 682, n_alt = 1
  BB 13
   Insn 1719: point = 683, n_alt = -1
  BB 12
   Insn 383: point = 684, n_alt = -1
   Insn 1828: point = 684, n_alt = -2
   Insn 1827: point = 684, n_alt = 0
   Insn 381: point = 685, n_alt = 3
   Insn 380: point = 686, n_alt = 3
  BB 14
   Insn 1721: point = 688, n_alt = -1
   Insn 424: point = 688, n_alt = -1
   Insn 423: point = 688, n_alt = 5
   Insn 422: point = 688, n_alt = 0
	Hard reg 1 is preferable by r877 with profit 20
   Insn 1918: point = 689, n_alt = 4
   Insn 421: point = 690, n_alt = 1
   Insn 411: point = 690, n_alt = -1
   Insn 410: point = 690, n_alt = 10
   Insn 409: point = 690, n_alt = 5
   Insn 408: point = 690, n_alt = 1
   Insn 400: point = 690, n_alt = -1
   Insn 399: point = 690, n_alt = 0
	Hard reg 0 is preferable by r876 with profit 20
   Insn 1917: point = 691, n_alt = 4
   Insn 398: point = 692, n_alt = 5
   Insn 397: point = 692, n_alt = 1
  BB 11
   Insn 366: point = 693, n_alt = -1
   Insn 1830: point = 693, n_alt = -2
   Insn 1829: point = 693, n_alt = 0
   Insn 364: point = 694, n_alt = 3
   Insn 363: point = 695, n_alt = 3
  BB 10
   Insn 353: point = 697, n_alt = -1
   Insn 352: point = 697, n_alt = 5
   Insn 351: point = 697, n_alt = 0
	Hard reg 1 is preferable by r875 with profit 27
   Insn 1916: point = 698, n_alt = 4
   Insn 350: point = 699, n_alt = 1
   Insn 340: point = 699, n_alt = -1
   Insn 339: point = 699, n_alt = 10
   Insn 338: point = 699, n_alt = 5
   Insn 337: point = 699, n_alt = 1
   Insn 329: point = 699, n_alt = -1
   Insn 328: point = 699, n_alt = 0
	Hard reg 0 is preferable by r874 with profit 27
   Insn 1915: point = 700, n_alt = 4
   Insn 327: point = 701, n_alt = 5
   Insn 326: point = 701, n_alt = 1
  BB 7
   Insn 1712: point = 702, n_alt = -1
  BB 6
   Insn 228: point = 703, n_alt = -1
   Insn 1832: point = 703, n_alt = -2
   Insn 1831: point = 703, n_alt = 0
   Insn 226: point = 704, n_alt = 3
   Insn 225: point = 705, n_alt = 3
  BB 8
   Insn 1714: point = 707, n_alt = -1
   Insn 269: point = 707, n_alt = -1
   Insn 268: point = 707, n_alt = 5
   Insn 267: point = 707, n_alt = 0
	Hard reg 1 is preferable by r871 with profit 15
   Insn 1912: point = 708, n_alt = 4
   Insn 266: point = 709, n_alt = 1
   Insn 256: point = 709, n_alt = -1
   Insn 255: point = 709, n_alt = 10
   Insn 254: point = 709, n_alt = 5
   Insn 253: point = 709, n_alt = 1
   Insn 245: point = 709, n_alt = -1
   Insn 244: point = 709, n_alt = 0
	Hard reg 0 is preferable by r870 with profit 15
   Insn 1911: point = 710, n_alt = 4
   Insn 243: point = 711, n_alt = 5
   Insn 242: point = 711, n_alt = 1
  BB 5
   Insn 211: point = 712, n_alt = -1
   Insn 1834: point = 712, n_alt = -2
   Insn 1833: point = 712, n_alt = 0
   Insn 209: point = 713, n_alt = 3
  BB 9
   Insn 1716: point = 715, n_alt = -1
   Insn 311: point = 715, n_alt = -1
   Insn 310: point = 715, n_alt = 5
   Insn 309: point = 715, n_alt = 0
	Hard reg 1 is preferable by r873 with profit 20
   Insn 1914: point = 716, n_alt = 4
   Insn 308: point = 717, n_alt = 1
   Insn 298: point = 717, n_alt = -1
   Insn 297: point = 717, n_alt = 10
   Insn 296: point = 717, n_alt = 5
   Insn 295: point = 717, n_alt = 1
   Insn 287: point = 717, n_alt = -1
   Insn 286: point = 717, n_alt = 0
	Hard reg 0 is preferable by r872 with profit 20
   Insn 1913: point = 718, n_alt = 4
   Insn 285: point = 719, n_alt = 5
   Insn 284: point = 719, n_alt = 1
  BB 4
   Insn 202: point = 720, n_alt = -1
   Insn 1836: point = 720, n_alt = -2
   Insn 1835: point = 720, n_alt = 0
   Insn 200: point = 721, n_alt = 3
  BB 3
   Insn 191: point = 723, n_alt = -1
   Insn 190: point = 723, n_alt = 4
   Insn 189: point = 723, n_alt = 0
	Hard reg 1 is preferable by r869 with profit 27
   Insn 1910: point = 724, n_alt = 4
   Insn 188: point = 725, n_alt = 1
   Insn 178: point = 725, n_alt = -1
   Insn 177: point = 725, n_alt = -2
   Insn 176: point = 725, n_alt = 4
   Insn 175: point = 725, n_alt = 1
   Insn 167: point = 725, n_alt = -1
   Insn 166: point = 725, n_alt = 0
	Hard reg 0 is preferable by r868 with profit 27
   Insn 1909: point = 726, n_alt = 4
   Insn 165: point = 727, n_alt = -2
   Insn 164: point = 727, n_alt = 1
  BB 2
   Insn 151: point = 728, n_alt = -1
   Insn 1838: point = 728, n_alt = -2
   Insn 1837: point = 728, n_alt = 0
   Insn 141: point = 729, n_alt = 4
   Insn 136: point = 730, n_alt = 0
   Insn 140: point = 732, n_alt = 4
   Insn 1651: point = 733, n_alt = -2
   Insn 135: point = 734, n_alt = -1
   Insn 134: point = 734, n_alt = -2
   Insn 1650: point = 735, n_alt = 1
   Insn 132: point = 736, n_alt = -1
   Insn 131: point = 736, n_alt = 0
   Insn 1649: point = 737, n_alt = -2
   Insn 129: point = 738, n_alt = -1
   Insn 108: point = 738, n_alt = 4
   Insn 1908: point = 738, n_alt = 1
	Hard reg 0 is preferable by r867 with profit 83
   Insn 128: point = 739, n_alt = 0
   Insn 1907: point = 741, n_alt = -2
	Hard reg 0 is preferable by r867 with profit 83
	Hard reg 31 is preferable by r867 with profit 83
   Insn 106: point = 743, n_alt = 0
   Insn 126: point = 745, n_alt = 0
   Insn 119: point = 747, n_alt = 0
   Insn 125: point = 749, n_alt = 0
   Insn 118: point = 751, n_alt = 3
   Insn 117: point = 753, n_alt = 8
   Insn 124: point = 754, n_alt = 3
   Insn 123: point = 756, n_alt = 4
   Insn 1648: point = 757, n_alt = -2
   Insn 105: point = 758, n_alt = -1
   Insn 104: point = 758, n_alt = -2
   Insn 1647: point = 759, n_alt = 1
   Insn 102: point = 760, n_alt = -1
   Insn 101: point = 760, n_alt = 0
   Insn 1646: point = 761, n_alt = -2
   Insn 99: point = 762, n_alt = -1
   Insn 84: point = 762, n_alt = 4
   Insn 1906: point = 762, n_alt = 1
	Hard reg 0 is preferable by r866 with profit 83
   Insn 98: point = 763, n_alt = 0
   Insn 1905: point = 765, n_alt = -2
	Hard reg 0 is preferable by r866 with profit 83
	Hard reg 31 is preferable by r866 with profit 83
   Insn 82: point = 767, n_alt = 0
   Insn 96: point = 769, n_alt = 0
   Insn 92: point = 771, n_alt = 0
   Insn 95: point = 773, n_alt = 0
   Insn 91: point = 775, n_alt = 3
   Insn 94: point = 776, n_alt = 3
   Insn 1645: point = 777, n_alt = -2
   Insn 81: point = 778, n_alt = -1
   Insn 80: point = 778, n_alt = -2
   Insn 1644: point = 779, n_alt = 1
   Insn 78: point = 780, n_alt = -1
   Insn 77: point = 780, n_alt = 0
   Insn 1643: point = 781, n_alt = -2
   Insn 75: point = 782, n_alt = -1
   Insn 60: point = 782, n_alt = 4
   Insn 1904: point = 782, n_alt = 1
	Hard reg 0 is preferable by r865 with profit 83
   Insn 74: point = 783, n_alt = 0
   Insn 1903: point = 785, n_alt = -2
	Hard reg 0 is preferable by r865 with profit 83
	Hard reg 31 is preferable by r865 with profit 83
   Insn 58: point = 787, n_alt = 0
   Insn 72: point = 789, n_alt = 0
   Insn 68: point = 791, n_alt = 0
   Insn 71: point = 793, n_alt = 0
   Insn 67: point = 795, n_alt = 3
   Insn 70: point = 796, n_alt = 3
   Insn 1642: point = 797, n_alt = -2
   Insn 57: point = 798, n_alt = -1
   Insn 56: point = 798, n_alt = -2
   Insn 1641: point = 799, n_alt = 1
   Insn 54: point = 800, n_alt = -1
   Insn 53: point = 800, n_alt = 0
   Insn 1640: point = 801, n_alt = -2
   Insn 51: point = 802, n_alt = -1
   Insn 1902: point = 802, n_alt = 1
	Hard reg 0 is preferable by r864 with profit 83
   Insn 50: point = 803, n_alt = 0
   Insn 1901: point = 805, n_alt = -2
	Hard reg 0 is preferable by r864 with profit 83
	Hard reg 31 is preferable by r864 with profit 83
   Insn 44: point = 807, n_alt = 0
   Insn 48: point = 809, n_alt = 0
   Insn 43: point = 811, n_alt = 3
   Insn 47: point = 812, n_alt = 0
   Insn 37: point = 814, n_alt = 3
   Insn 1900: point = 816, n_alt = 5
   Insn 46: point = 817, n_alt = 3
   Insn 39: point = 818, n_alt = 3
   Insn 1899: point = 820, n_alt = 5
   Insn 42: point = 821, n_alt = 5
 r114: [740..747]
 r116: [746..749]
 r121: [712..730]
 r138: [584..618] [526..533] [480..523]
 r139: [582..608]
 r142: [536..598]
 r143: [536..592]
 r144: [555..565]
 r146: [549..550]
 r147: [536..595]
 r148: [536..589]
 r149: [544..560]
 r154: [563..588] [536..545]
 r155: [511..512]
 r158: [427..484]
 r168: [446..466]
 r181: [354..356]
 r186: [314..315]
 r189: [308..309]
 r191: [293..329]
 r193: [280..401]
 r215: [110..112]
 r216: [69..108]
 r217: [28..104]
 r218: [24..103]
 r219: [53..99]
 r221: [65..102]
 r222: [71..95] [43..55]
 r230: [58..59]
 r242: [9..11]
 r245: [440..673] [2..437]
 r246: [526..526] [516..516] [438..514] [433..436]
 r247: [638..652] [115..633]
 r248: [580..623] [526..531] [482..521] [475..477]
 r249: [500..502] [493..498] [490..490] [204..486] [135..201]
 r253: [94..107]
 r254: [53..72]
 r261: [646..660]
 r263: [117..625]
 r264: [578..586]
 r265: [500..507] [494..496]
 r266: [204..419] [191..201]
 r267: [204..453] [189..201]
 r268: [410..414] [236..407]
 r269: [182..188]
 r270: [180..190]
 r271: [178..183]
 r273: [364..370] [359..361] [340..342]
 r274: [324..369]
 r275: [320..367]
 r280: [394..395]
 r281: [280..406]
 r282: [672..676]
 r286: [174..184]
 r293: [248..251]
 r294: [720..743]
 r297: [263..407] [227..261]
 r300: [669..818] [657..665]
 r301: [669..814] [648..662]
 r302: [497..497] [493..493] [490..491] [410..488] [227..407]
 r303: [388..397]
 r304: [410..413] [246..262]
 r306: [670..675]
 r307: [728..787]
 r310: [254..255]
 r313: [810..812]
 r317: [362..362] [343..343] [337..337] [304..335]
 r318: [804..807]
 r319: [408..408] [242..252] [220..220] [213..213] [204..206]
 r323: [784..791]
 r325: [764..771]
 r327: [164..165]
 r329: [790..793]
 r334: [728..767]
 r337: [770..773]
 r344: [808..811]
 r346: [813..817]
 r347: [806..809]
 r351: [792..795]
 r353: [794..796]
 r354: [786..789]
 r358: [772..775]
 r360: [774..776]
 r361: [766..769]
 r367: [752..753]
 r368: [748..751]
 r372: [755..756]
 r373: [750..754]
 r374: [742..745]
 r379: [729..732]
 r403: [720..721]
 r405: [712..713]
 r408: [703..705]
 r409: [703..704]
 r478: [693..695]
 r479: [693..694]
 r482: [684..686]
 r483: [684..685]
 r528: [655..656]
 r529: [657..659]
 r530: [655..658]
 r532: [646..649]
 r533: [642..645]
 r534: [640..641]
 r535: [644..647]
 r536: [640..643]
 r541: [628..629]
 r547: [609..610]
 r548: [604..605]
 r549: [603..604]
 r550: [603..611]
 r554: [551..552]
 r556: [540..541]
 r558: [538..539]
 r560: [536..585]
 r561: [538..548]
 r563: [536..537]
 r564: [557..558]
 r568: [502..503]
 r569: [501..501] [487..489]
 r571: [494..495]
 r580: [469..470]
 r581: [467..468]
 r583: [456..462]
 r585: [461..464]
 r589: [450..451]
 r590: [448..449]
 r592: [444..452]
 r593: [444..445]
 r595: [440..441]
 r597: [434..435]
 r600: [420..423]
 r602: [420..422]
 r603: [417..418]
 r606: [402..403]
 r608: [376..377]
 r609: [374..375]
 r612: [371..373]
 r615: [368..372]
 r622: [352..353]
 r625: [348..349]
 r626: [344..345]
 r627: [330..331]
 r632: [316..321]
 r633: [310..317]
 r635: [298..305]
 r638: [297..311]
 r640: [302..303]
 r642: [296..299]
 r650: [195..196]
 r651: [193..194]
 r652: [189..192]
 r653: [135..200]
 r654: [191..199]
 r656: [166..167]
 r657: [157..158]
 r658: [155..156]
 r659: [153..154]
 r661: [151..152]
 r662: [151..162]
 r663: [149..161]
 r669: [146..147]
 r673: [144..145]
 r674: [142..143]
 r675: [138..141]
 r676: [139..140]
 r677: [120..121]
 r678: [117..118]
 r684: [80..81]
 r685: [82..92]
 r686: [91..98]
 r688: [82..83]
 r689: [76..79]
 r690: [89..93]
 r691: [85..86]
 r692: [87..90]
 r695: [87..88]
 r696: [74..84]
 r698: [76..77]
 r699: [74..75]
 r701: [71..73]
 r703: [62..66]
 r707: [49..52]
 r708: [39..46]
 r709: [47..48]
 r710: [45..51]
 r712: [47..50]
 r713: [34..38]
 r714: [37..40]
 r715: [41..44]
 r718: [41..42]
 r719: [32..36]
 r721: [34..35]
 r722: [32..33]
 r724: [30..31]
 r726: [21..25]
 r731: [16..17]
 r732: [13..14]
 r733: [7..8]
 r736: [430..431]
 r737: [123..124]
 r738: [421..626] [202..202] [129..129] [127..127] [16..125]
 r741: [408..410] [204..264] [191..201]
 r742: [326..407] [263..286] [236..253]
 r743: [280..396]
 r744: [572..587] [34..78]
 r747: [4..821]
 r761: [186..187]
 r762: [170..185]
 r764: [280..400]
 r769: [263..407] [236..260]
 r770: [263..407] [236..259]
 r771: [263..407] [236..258]
 r777: [4..674]
 r780: [800..801]
 r781: [798..799]
 r782: [788..797]
 r783: [780..781]
 r784: [778..779]
 r785: [768..777]
 r786: [760..761]
 r787: [758..759]
 r788: [744..757]
 r789: [736..737]
 r790: [734..735]
 r791: [731..733]
 r792: [653..654]
 r793: [650..651]
 r794: [636..637]
 r795: [634..635]
 r796: [624..627]
 r797: [619..620]
 r798: [616..617]
 r799: [613..614]
 r800: [599..600]
 r801: [596..597]
 r802: [508..509]
 r803: [505..506]
 r804: [482..483]
 r805: [478..479]
 r806: [473..474]
 r807: [463..465]
 r808: [457..458]
 r809: [454..455]
 r810: [415..416]
 r811: [294..295]
 r812: [113..114]
 r813: [109..111]
 r814: [105..106]
 r815: [67..68]
 r816: [63..64]
 r817: [60..61]
 r818: [26..27]
 r819: [22..23]
 r820: [19..20]
 r824: [576..671] [526..529] [408..519] [250..262] [220..224] [213..217] [176..210] [4..132]
 r825: [574..669] [526..527] [408..517] [244..262] [220..222] [213..215] [172..208] [4..130]
 r826: [135..181]
 r827: [135..179]
 r828: [135..177]
 r829: [133..175]
 r830: [135..173]
 r831: [131..171]
 r832: [135..169]
 r833: [225..233]
 r834: [223..231]
 r835: [221..229]
 r836: [392..407] [263..277] [234..249] [218..219] [211..212]
 r837: [390..407] [263..275] [236..247]
 r838: [386..407] [263..273] [236..245]
 r839: [384..407] [263..271] [232..243] [216..219] [209..212]
 r840: [382..407] [263..269] [230..241] [214..219] [207..212]
 r841: [280..393]
 r842: [278..391]
 r843: [276..389]
 r844: [280..387]
 r845: [326..385] [274..285]
 r846: [272..383]
 r847: [326..381] [270..284]
 r848: [287..288]
 r849: [534..583] [524..525]
 r850: [536..581]
 r851: [532..579] [522..525]
 r852: [559..577] [536..556]
 r853: [530..575] [520..525]
 r854: [528..573] [518..525]
 r855: [536..571]
 r857: [365..365]
 r858: [92..92]
 r859: [90..90]
 r860: [48..48]
 r861: [44..44]
 r862: [819..820]
 r863: [815..816]
 r864: [802..805]
 r865: [782..785]
 r866: [762..765]
 r867: [738..741]
 r868: [725..726]
 r869: [723..724]
 r870: [709..710]
 r871: [707..708]
 r872: [717..718]
 r873: [715..716]
 r874: [699..700]
 r875: [697..698]
 r876: [690..691]
 r877: [688..689]
 r878: [680..681]
 r879: [678..679]
 r880: [630..631]
 r881: [621..622]
 r882: [606..607]
 r883: [593..594]
 r884: [590..591]
 r885: [566..568]
 r886: [561..564]
 r887: [553..554]
 r888: [546..547]
 r889: [542..543]
 r890: [471..472]
 r891: [459..460]
 r892: [428..428] [424..426]
 r893: [411..412]
 r894: [256..257]
 r895: [404..405]
 r896: [398..399]
 r897: [378..379]
 r898: [338..339]
 r899: [357..358]
 r900: [350..351]
 r901: [346..347]
 r902: [332..333]
 r903: [322..323]
 r904: [318..319]
 r905: [312..313]
 r906: [306..307]
 r907: [300..301]
 r908: [291..292]
 r909: [289..290]
 r910: [197..198]
 r911: [159..160]
 r912: [100..101]
 r913: [96..97]
 r914: [56..57]
 r915: [666..667]
 r916: [663..664]
 r917: [0..1]
 r918: [265..266]
Compressing live ranges: from 822 to 592 - 72%
Ranges after the compression:
 r114: [526..533]
 r116: [532..535]
 r121: [506..519]
 r138: [422..442] [374..381] [343..371]
 r139: [420..436]
 r142: [382..429]
 r143: [382..425]
 r144: [400..407]
 r146: [394..395]
 r147: [382..427]
 r148: [382..423]
 r149: [390..405]
 r154: [406..423] [382..391]
 r155: [362..363]
 r158: [307..344]
 r168: [317..330]
 r181: [255..256]
 r186: [223..224]
 r189: [217..218]
 r191: [205..234]
 r193: [197..290]
 r215: [79..80]
 r216: [52..78]
 r217: [18..76]
 r218: [14..76]
 r219: [38..74]
 r221: [48..76]
 r222: [52..72] [30..39]
 r230: [42..43]
 r242: [4..5]
 r245: [2..483]
 r246: [374..374] [311..364]
 r247: [457..468] [83..452]
 r248: [418..446] [374..379] [343..369] [339..340]
 r249: [349..356] [347..347] [143..344] [94..141]
 r253: [71..78]
 r254: [38..53]
 r261: [463..474]
 r263: [83..448]
 r264: [416..423]
 r265: [354..359] [350..351]
 r266: [143..302] [134..141]
 r267: [143..320] [132..141]
 r268: [296..298] [169..294]
 r269: [128..131]
 r270: [126..133]
 r271: [124..129]
 r273: [262..266] [259..260] [242..243]
 r274: [233..266]
 r275: [229..264]
 r280: [287..288]
 r281: [197..294]
 r282: [482..483]
 r286: [120..129]
 r293: [177..180]
 r294: [512..529]
 r297: [163..294]
 r300: [479..589] [473..476]
 r301: [479..587] [465..474]
 r302: [352..352] [296..349] [163..294]
 r303: [281..288]
 r304: [296..298] [175..184]
 r306: [480..483]
 r307: [518..565]
 r310: [181..182]
 r313: [584..585]
 r317: [261..261] [244..244] [213..239]
 r318: [578..581]
 r319: [295..295] [171..180] [158..158] [151..151] [143..144]
 r323: [562..569]
 r325: [546..553]
 r327: [112..113]
 r329: [568..571]
 r334: [518..549]
 r337: [552..555]
 r344: [582..585]
 r346: [586..589]
 r347: [580..583]
 r351: [570..573]
 r353: [572..573]
 r354: [564..567]
 r358: [554..557]
 r360: [556..557]
 r361: [548..551]
 r367: [538..539]
 r368: [534..537]
 r372: [540..541]
 r373: [536..539]
 r374: [528..531]
 r379: [518..521]
 r403: [512..513]
 r405: [506..507]
 r408: [500..501]
 r409: [500..501]
 r478: [494..495]
 r479: [494..495]
 r482: [488..489]
 r483: [488..489]
 r528: [471..472]
 r529: [473..474]
 r530: [471..474]
 r532: [463..466]
 r533: [459..462]
 r534: [457..458]
 r535: [461..464]
 r536: [457..460]
 r541: [449..450]
 r547: [437..438]
 r548: [433..434]
 r549: [432..433]
 r550: [432..438]
 r554: [396..397]
 r556: [386..387]
 r558: [384..385]
 r560: [382..423]
 r561: [384..393]
 r563: [382..383]
 r564: [402..403]
 r568: [356..357]
 r569: [355..355] [345..346]
 r571: [350..351]
 r580: [333..334]
 r581: [331..332]
 r583: [323..328]
 r585: [327..330]
 r589: [319..320]
 r590: [317..318]
 r592: [315..320]
 r593: [315..316]
 r595: [313..314]
 r597: [311..312]
 r600: [303..304]
 r602: [303..304]
 r603: [301..302]
 r606: [291..292]
 r608: [271..272]
 r609: [269..270]
 r612: [267..268]
 r615: [265..268]
 r622: [253..254]
 r625: [249..250]
 r626: [245..246]
 r627: [235..236]
 r632: [225..230]
 r633: [219..226]
 r635: [207..214]
 r638: [207..220]
 r640: [211..212]
 r642: [207..208]
 r650: [138..139]
 r651: [136..137]
 r652: [132..135]
 r653: [94..141]
 r654: [134..141]
 r656: [114..115]
 r657: [108..109]
 r658: [106..107]
 r659: [104..105]
 r661: [102..103]
 r662: [102..111]
 r663: [102..111]
 r669: [100..101]
 r673: [98..99]
 r674: [96..97]
 r675: [94..95]
 r676: [94..95]
 r677: [85..86]
 r678: [83..84]
 r684: [58..59]
 r685: [60..69]
 r686: [68..74]
 r688: [60..61]
 r689: [56..57]
 r690: [66..70]
 r691: [62..63]
 r692: [64..67]
 r695: [64..65]
 r696: [54..61]
 r698: [56..57]
 r699: [54..55]
 r701: [52..53]
 r703: [46..49]
 r707: [36..37]
 r708: [26..33]
 r709: [34..35]
 r710: [32..37]
 r712: [34..37]
 r713: [22..25]
 r714: [24..27]
 r715: [28..31]
 r718: [28..29]
 r719: [20..23]
 r721: [22..23]
 r722: [20..21]
 r724: [18..19]
 r726: [12..15]
 r731: [8..9]
 r732: [6..7]
 r733: [2..3]
 r736: [309..310]
 r737: [87..88]
 r738: [303..448] [142..142] [8..90]
 r741: [295..296] [143..186] [134..141]
 r742: [233..294] [185..198] [169..180]
 r743: [197..288]
 r744: [410..423] [22..57]
 r747: [2..591]
 r761: [130..131]
 r762: [116..129]
 r764: [197..290]
 r769: [169..294]
 r770: [169..294]
 r771: [169..294]
 r777: [2..483]
 r780: [576..577]
 r781: [574..575]
 r782: [566..573]
 r783: [560..561]
 r784: [558..559]
 r785: [550..557]
 r786: [544..545]
 r787: [542..543]
 r788: [530..541]
 r789: [524..525]
 r790: [522..523]
 r791: [520..521]
 r792: [469..470]
 r793: [467..468]
 r794: [455..456]
 r795: [453..454]
 r796: [447..448]
 r797: [443..444]
 r798: [441..442]
 r799: [439..440]
 r800: [430..431]
 r801: [428..429]
 r802: [360..361]
 r803: [358..359]
 r804: [343..344]
 r805: [341..342]
 r806: [337..338]
 r807: [329..330]
 r808: [323..324]
 r809: [321..322]
 r810: [299..300]
 r811: [205..206]
 r812: [81..82]
 r813: [79..80]
 r814: [77..78]
 r815: [50..51]
 r816: [46..47]
 r817: [44..45]
 r818: [16..17]
 r819: [12..13]
 r820: [10..11]
 r824: [414..481] [374..377] [295..367] [179..184] [158..162] [151..155] [122..148] [2..93]
 r825: [412..479] [374..375] [295..365] [173..184] [158..160] [151..153] [118..146] [2..91]
 r826: [94..127]
 r827: [94..125]
 r828: [94..123]
 r829: [94..121]
 r830: [94..119]
 r831: [92..117]
 r832: [94..115]
 r833: [163..168]
 r834: [161..166]
 r835: [159..164]
 r836: [285..294] [185..196] [169..178] [156..157] [149..150]
 r837: [283..294] [185..194] [169..176]
 r838: [279..294] [185..192] [169..174]
 r839: [277..294] [185..190] [167..172] [154..157] [147..150]
 r840: [275..294] [185..188] [165..170] [152..157] [145..150]
 r841: [197..286]
 r842: [197..284]
 r843: [195..282]
 r844: [197..280]
 r845: [233..278] [193..198]
 r846: [191..276]
 r847: [233..274] [189..198]
 r848: [199..200]
 r849: [382..421] [372..373]
 r850: [382..419]
 r851: [380..417] [370..373]
 r852: [404..415] [382..401]
 r853: [378..413] [368..373]
 r854: [376..411] [366..373]
 r855: [382..409]
 r857: [263..263]
 r858: [69..69]
 r859: [67..67]
 r860: [35..35]
 r861: [31..31]
 r862: [590..591]
 r863: [588..589]
 r864: [578..579]
 r865: [562..563]
 r866: [546..547]
 r867: [526..527]
 r868: [516..517]
 r869: [514..515]
 r870: [504..505]
 r871: [502..503]
 r872: [510..511]
 r873: [508..509]
 r874: [498..499]
 r875: [496..497]
 r876: [492..493]
 r877: [490..491]
 r878: [486..487]
 r879: [484..485]
 r880: [451..452]
 r881: [445..446]
 r882: [435..436]
 r883: [426..427]
 r884: [424..425]
 r885: [408..409]
 r886: [406..407]
 r887: [398..399]
 r888: [392..393]
 r889: [388..389]
 r890: [335..336]
 r891: [325..326]
 r892: [308..308] [305..306]
 r893: [297..298]
 r894: [183..184]
 r895: [293..294]
 r896: [289..290]
 r897: [273..274]
 r898: [240..241]
 r899: [257..258]
 r900: [251..252]
 r901: [247..248]
 r902: [237..238]
 r903: [231..232]
 r904: [227..228]
 r905: [221..222]
 r906: [215..216]
 r907: [209..210]
 r908: [203..204]
 r909: [201..202]
 r910: [140..141]
 r911: [110..111]
 r912: [75..76]
 r913: [73..74]
 r914: [40..41]
 r915: [477..478]
 r916: [475..476]
 r917: [0..1]
 r918: [187..188]

********** Assignment #1: **********

	 Assigning to 880 (cl=LO_REGS, orig=880, freq=600, tfirst=880, tfreq=600)...
	   Assign 3 to reload r880 (freq=600)
	 Assigning to 881 (cl=LO_REGS, orig=881, freq=600, tfirst=881, tfreq=600)...
	   Assign 3 to reload r881 (freq=600)
	 Assigning to 915 (cl=LO_REGS, orig=915, freq=434, tfirst=915, tfreq=434)...
	   Assign 3 to reload r915 (freq=434)
	 Assigning to 916 (cl=LO_REGS, orig=916, freq=434, tfirst=916, tfreq=434)...
	   Assign 3 to reload r916 (freq=434)
	 Assigning to 862 (cl=LO_REGS, orig=862, freq=166, tfirst=862, tfreq=166)...
	   Assign 3 to reload r862 (freq=166)
	 Assigning to 863 (cl=LO_REGS, orig=863, freq=166, tfirst=863, tfreq=166)...
	   Assign 3 to reload r863 (freq=166)
	 Assigning to 917 (cl=LO_REGS, orig=245, freq=150, tfirst=917, tfreq=150)...
	   Assign 3 to reload r917 (freq=150)
	 Assigning to 883 (cl=LO_REGS, orig=883, freq=114, tfirst=883, tfreq=114)...
	   Assign 3 to reload r883 (freq=114)
	 Assigning to 884 (cl=LO_REGS, orig=884, freq=114, tfirst=884, tfreq=114)...
	   Assign 3 to reload r884 (freq=114)
	 Assigning to 901 (cl=GENERAL_REGS, orig=626, freq=184, tfirst=901, tfreq=184)...
	   Assign 3 to reload r901 (freq=184)
	 Assigning to 890 (cl=GENERAL_REGS, orig=580, freq=120, tfirst=890, tfreq=120)...
	   Assign 3 to reload r890 (freq=120)
	 Assigning to 857 (cl=GENERAL_REGS, orig=857, freq=116, tfirst=857, tfreq=116)...
	   Assign 14 to reload r857 (freq=116)
	 Assigning to 868 (cl=GENERAL_REGS, orig=868, freq=54, tfirst=868, tfreq=54)...
	   Assign 0 to reload r868 (freq=54)
	 Assigning to 869 (cl=GENERAL_REGS, orig=869, freq=54, tfirst=869, tfreq=54)...
	   Assign 1 to reload r869 (freq=54)
	 Assigning to 874 (cl=GENERAL_REGS, orig=874, freq=54, tfirst=874, tfreq=54)...
	   Assign 0 to reload r874 (freq=54)
	 Assigning to 875 (cl=GENERAL_REGS, orig=875, freq=54, tfirst=875, tfreq=54)...
	   Assign 1 to reload r875 (freq=54)
	 Assigning to 878 (cl=GENERAL_REGS, orig=878, freq=54, tfirst=878, tfreq=54)...
	   Assign 0 to reload r878 (freq=54)
	 Assigning to 879 (cl=GENERAL_REGS, orig=879, freq=54, tfirst=879, tfreq=54)...
	   Assign 1 to reload r879 (freq=54)
	 Assigning to 858 (cl=GENERAL_REGS, orig=858, freq=51, tfirst=858, tfreq=51)...
	   Assign 1 to reload r858 (freq=51)
	 Assigning to 859 (cl=GENERAL_REGS, orig=859, freq=51, tfirst=859, tfreq=51)...
	   Assign 1 to reload r859 (freq=51)
	 Assigning to 860 (cl=GENERAL_REGS, orig=860, freq=51, tfirst=860, tfreq=51)...
	   Assign 0 to reload r860 (freq=51)
	 Assigning to 861 (cl=GENERAL_REGS, orig=861, freq=51, tfirst=861, tfreq=51)...
	   Assign 2 to reload r861 (freq=51)
	 Assigning to 872 (cl=GENERAL_REGS, orig=872, freq=40, tfirst=872, tfreq=40)...
	   Assign 0 to reload r872 (freq=40)
	 Assigning to 873 (cl=GENERAL_REGS, orig=873, freq=40, tfirst=873, tfreq=40)...
	   Assign 1 to reload r873 (freq=40)
	 Assigning to 876 (cl=GENERAL_REGS, orig=876, freq=40, tfirst=876, tfreq=40)...
	   Assign 0 to reload r876 (freq=40)
	 Assigning to 877 (cl=GENERAL_REGS, orig=877, freq=40, tfirst=877, tfreq=40)...
	   Assign 1 to reload r877 (freq=40)
	 Assigning to 909 (cl=GENERAL_REGS, orig=310, freq=36, tfirst=909, tfreq=36)...
	   Assign 3 to reload r909 (freq=36)
	 Assigning to 911 (cl=GENERAL_REGS, orig=657, freq=36, tfirst=911, tfreq=36)...
	   Assign 2 to reload r911 (freq=36)
	 Assigning to 870 (cl=GENERAL_REGS, orig=870, freq=30, tfirst=870, tfreq=30)...
	   Assign 0 to reload r870 (freq=30)
	 Assigning to 871 (cl=GENERAL_REGS, orig=871, freq=30, tfirst=871, tfreq=30)...
	   Assign 1 to reload r871 (freq=30)
	 Assigning to 894 (cl=GENERAL_REGS, orig=310, freq=8, tfirst=894, tfreq=8)...
	   Assign 3 to reload r894 (freq=8)
	 Assigning to 910 (cl=GENERAL_REGS, orig=650, freq=2, tfirst=910, tfreq=2)...
	   Assign 3 to reload r910 (freq=2)
	 Assigning to 885 (cl=VFP_LO_REGS, orig=144, freq=1611, tfirst=885, tfreq=1611)...
	   Assign 31 to reload r885 (freq=1611)
	 Assigning to 886 (cl=VFP_LO_REGS, orig=149, freq=1611, tfirst=886, tfreq=1611)...
	   Assign 30 to reload r886 (freq=1611)
	 Assigning to 887 (cl=VFP_LO_REGS, orig=554, freq=1074, tfirst=887, tfreq=1074)...
	   Assign 31 to reload r887 (freq=1074)
	 Assigning to 888 (cl=VFP_LO_REGS, orig=264, freq=1074, tfirst=888, tfreq=1074)...
	   Assign 31 to reload r888 (freq=1074)
	 Assigning to 889 (cl=VFP_LO_REGS, orig=556, freq=1074, tfirst=889, tfreq=1074)...
	   Assign 31 to reload r889 (freq=1074)
	 Assigning to 897 (cl=VFP_LO_REGS, orig=608, freq=682, tfirst=897, tfreq=682)...
	   Assign 31 to reload r897 (freq=682)
	 Assigning to 902 (cl=VFP_LO_REGS, orig=280, freq=624, tfirst=902, tfreq=624)...
	   Assign 29 to reload r902 (freq=624)
	 Assigning to 882 (cl=VFP_LO_REGS, orig=139, freq=450, tfirst=882, tfreq=450)...
	   Assign 30 to reload r882 (freq=450)
	 Assigning to 899 (cl=VFP_LO_REGS, orig=273, freq=300, tfirst=899, tfreq=300)...
	   Assign 31 to reload r899 (freq=300)
	 Assigning to 898 (cl=VFP_LO_REGS, orig=273, freq=256, tfirst=898, tfreq=256)...
	   Assign 31 to reload r898 (freq=256)
	 Assigning to 864 (cl=VFP_LO_REGS, orig=347, freq=249, tfirst=864, tfreq=249)...
	   Assign 31 to reload r864 (freq=249)
	 Assigning to 865 (cl=VFP_LO_REGS, orig=354, freq=249, tfirst=865, tfreq=249)...
	   Assign 31 to reload r865 (freq=249)
	 Assigning to 866 (cl=VFP_LO_REGS, orig=361, freq=249, tfirst=866, tfreq=249)...
	   Assign 31 to reload r866 (freq=249)
	 Assigning to 867 (cl=VFP_LO_REGS, orig=374, freq=249, tfirst=867, tfreq=249)...
	   Assign 31 to reload r867 (freq=249)
	 Assigning to 900 (cl=VFP_LO_REGS, orig=625, freq=184, tfirst=900, tfreq=184)...
	   Assign 31 to reload r900 (freq=184)
	 Assigning to 891 (cl=VFP_LO_REGS, orig=891, freq=120, tfirst=891, tfreq=120)...
	   Assign 31 to reload r891 (freq=120)
	 Assigning to 912 (cl=VFP_LO_REGS, orig=219, freq=102, tfirst=912, tfreq=102)...
	   Assign 31 to reload r912 (freq=102)
	 Assigning to 913 (cl=VFP_LO_REGS, orig=222, freq=102, tfirst=913, tfreq=102)...
	   Assign 31 to reload r913 (freq=102)
	 Assigning to 895 (cl=VFP_LO_REGS, orig=293, freq=74, tfirst=895, tfreq=74)...
	   Assign 31 to reload r895 (freq=74)
	 Assigning to 896 (cl=VFP_LO_REGS, orig=303, freq=74, tfirst=896, tfreq=74)...
	   Assign 31 to reload r896 (freq=74)
	 Assigning to 918 (cl=VFP_LO_REGS, orig=304, freq=74, tfirst=918, tfreq=74)...
	   Assign 31 to reload r918 (freq=74)
	 Assigning to 914 (cl=VFP_LO_REGS, orig=222, freq=50, tfirst=914, tfreq=50)...
	   Assign 31 to reload r914 (freq=50)
	 Assigning to 903 (cl=VFP_LO_REGS, orig=274, freq=36, tfirst=903, tfreq=36)...
	   Assign 30 to reload r903 (freq=36)
	 Assigning to 904 (cl=VFP_LO_REGS, orig=275, freq=36, tfirst=904, tfreq=36)...
	   Assign 30 to reload r904 (freq=36)
	 Assigning to 905 (cl=VFP_LO_REGS, orig=638, freq=36, tfirst=905, tfreq=36)...
	   Assign 29 to reload r905 (freq=36)
	 Assigning to 906 (cl=VFP_LO_REGS, orig=635, freq=36, tfirst=906, tfreq=36)...
	   Assign 30 to reload r906 (freq=36)
	 Assigning to 907 (cl=VFP_LO_REGS, orig=642, freq=36, tfirst=907, tfreq=36)...
	   Assign 31 to reload r907 (freq=36)
	 Assigning to 908 (cl=VFP_LO_REGS, orig=908, freq=36, tfirst=908, tfreq=36)...
	   Assign 31 to reload r908 (freq=36)
	 Assigning to 892 (cl=VFP_LO_REGS, orig=600, freq=25, tfirst=892, tfreq=25)...
	   Assign 31 to reload r892 (freq=25)
	 Assigning to 893 (cl=VFP_LO_REGS, orig=304, freq=10, tfirst=893, tfreq=10)...
	   Assign 31 to reload r893 (freq=10)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 153 count 103 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 153 count 103 (    1)

Cands:
0 (nop=0, remat_regno=245, reload_regno=-1):
(insn 4 1557 526 16 (set (reg/v:SI 245 [ indicate_led ])
                    (reg/v:SI 282 [ sprite ])) "../System/ray_funkcije.c":398:10 728 {*thumb2_movsi_vfp}
                 (expr_list:REG_EQUAL (const_int 0 [0])
                    (nil)))

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 294 300 301 747
  changed regs: 0 [r0] 16 [s0] 114 116 121 294 300 301 307 313 318 323 325 329 334 337 344 346 347 351 353 354 358 360 361 367 368 372 373 374 379 747 780 781 782 783 784 785 786 787 788 789 790 791 862 863 864 865 866 867
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 114 116 307 313 318 323 325 329 334 337 344 346 347 351 353 354 358 360 361 367 368 372 373 374 379 780 781 782 783 784 785 786 787 788 789 790 791 862 863 864 865 866 867

BB 3:
  register live in: 121 294 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 294 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 868 869
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 868 869

BB 4:
  register live in: 121 294 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 300 301 747
  changed regs: 403
  dead regs: 100 [cc] 294 403

BB 5:
  register live in: 121 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 405
  dead regs: 100 [cc] 121 405

BB 6:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 408 409
  dead regs: 100 [cc] 408 409

BB 7:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs:
  dead regs:

BB 8:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 870 871
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 870 871

BB 9:
  register live in: 121 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 872 873
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 872 873

BB 10:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 874 875
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 874 875

BB 11:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 478 479
  dead regs: 100 [cc] 478 479

BB 12:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 482 483
  dead regs: 100 [cc] 482 483

BB 13:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs:
  dead regs:

BB 14:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 876 877
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 876 877

BB 15:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 300 301 747
  changed regs: 0 [r0] 1 [r1] 2 [r2] 878 879
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 878 879

BB 16:
  register live in: 300 301 747
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 300 301 747 777 824 825
  changed regs: 245 282 306 777 824 825
  dead regs: 282 306

BB 17:
  register live in: 245 300 301 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 747 777 824 825
  changed regs: 16 [s0] 247 261 528 529 530 532 533 534 535 536 792 793
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 261 300 301 528 529 530 532 533 534 535 536 792 793

BB 18:
  register live in: 245 247 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 16 [s0] 247 794 795
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 247 794 795

BB 19:
  register live in: 245 247 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 247 248 263 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 16 [s0] 138 248 263 541 738 796 797 798 880 881
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 541 796 797 798 880 881

BB 20:
  register live in: 138 245 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 247 248 263 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 799
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 799

BB 21:
  register live in: 138 245 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 139 245 247 248 263 738 747 777 824 825
  changed regs: 139 547 548 549 550 882
  dead regs: 100 [cc] 547 548 549 550 882

BB 22:
  register live in: 138 139 245 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 139 245 247 248 263 738 747 777 824 825
  changed regs:
  dead regs: 100 [cc]

BB 23:
  register live in: 138 139 245 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 143 147 148 154 245 247 263 560 738 747 777 849 850 851 852 853 854 855
  changed regs: 16 [s0] 142 143 147 148 154 264 560 744 800 801 849 850 851 852 853 854 855 883 884
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 138 139 248 264 744 800 801 824 825 883 884

BB 24:
  register live in: 142 143 147 148 154 245 247 263 560 738 747 777 849 850 851 852 853 854 855
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 143 147 148 154 245 247 263 560 738 747 777 849 850 851 852 853 854 855
  changed regs: 144 146 149 154 554 556 558 561 563 564 852 885 886 887 888 889
  dead regs: 144 146 149 154 554 556 558 561 563 564 852 885 886 887 888 889

BB 25:
  register live in: 142 143 147 148 154 245 247 263 560 738 747 777 849 850 851 852 853 854 855
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 143 147 148 154 245 247 263 560 738 747 777 849 850 851 852 853 854 855
  changed regs:
  dead regs: 100 [cc]

BB 26:
  register live in: 245 247 263 738 747 777 849 851 853 854
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 263 738 747 777 824 825
  changed regs: 138 246 248 824 825
  dead regs: 849 851 853 854

BB 27:
  register live in: 138 245 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 263 738 747 777 824 825
  changed regs: 246
  dead regs:

BB 28:
  register live in: 245 247 263 738 747 777 849 851 853 854
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 263 738 747 777 824 825
  changed regs: 138 246 248 824 825
  dead regs: 849 851 853 854

BB 29:
  register live in: 138 245 246 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 263 265 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 16 [s0] 155 246 265 802 803
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 155 802 803

BB 30:
  register live in: 138 245 246 247 248 263 265 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 265 569 738 747 777 824 825
  changed regs: 249 568 569
  dead regs: 100 [cc] 568

BB 31:
  register live in: 138 245 246 247 248 249 263 265 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 265 738 747 777 824 825
  changed regs:
  dead regs: 100 [cc]

BB 32:
  register live in: 138 245 246 247 248 249 263 265 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 302 571
  dead regs: 265 571

BB 33:
  register live in: 138 245 246 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 249 302
  dead regs:

BB 34:
  register live in: 138 245 246 247 248 263 569 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 249 302
  dead regs: 569

BB 35:
  register live in: 138 245 246 247 248 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 249 302
  dead regs:

BB 36:
  register live in: 138 245 246 247 248 249 263 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 138 158 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 158 804
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 804

BB 37:
  register live in: 138 158 245 246 247 249 263 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 246 247 248 249 263 302 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 248 805
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 138 805

BB 38:
  register live in: 158 245 246 247 248 249 263 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 168 245 246 247 249 263 267 302 592 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 168 267 580 581 583 585 589 590 592 806 807 808 809 890 891
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 248 580 581 583 585 589 590 806 807 808 809 890 891

BB 39:
  register live in: 158 168 245 246 247 249 263 267 302 592 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 246 247 249 263 267 302 738 747 777 824 825
  changed regs: 593
  dead regs: 100 [cc] 168 592 593

BB 40:
  register live in: 158 245 246 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 246 247 249 263 267 302 738 747 777 824 825
  changed regs:
  dead regs: 100 [cc]

BB 41:
  register live in: 158 245 246 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 246 247 249 263 267 302 738 747 777 824 825
  changed regs: 595
  dead regs: 100 [cc] 595

BB 42:
  register live in: 158 246 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 247 249 263 267 302 738 747 777 824 825
  changed regs: 245
  dead regs: 246

BB 43:
  register live in: 158 245 246 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 247 249 263 267 302 738 747 777 824 825
  changed regs: 597
  dead regs: 100 [cc] 246 597

BB 44:
  register live in: 245 247 263 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 263 738 747 777 824 825
  changed regs: 738
  dead regs:

BB 45:
  register live in: 158 245 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 302 304 741 747 777 824 825
  changed regs: 16 [s0] 266 268 304 600 602 603 741 810 892 893
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 158 600 602 603 738 810 892 893

BB 46:
  register live in: 245 247 249 263 266 267 268 302 304 741 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  changed regs: 293 297 310 319 742 769 770 771 836 837 838 839 840 894
  dead regs: 293 304 310 319 824 825 894

BB 47:
  register live in: 245 247 249 263 266 267 268 297 302 742 747 769 770 771 777 836 837 838 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 193 280 281 303 606 743 764 841 842 843 844 845 846 847 895 896
  dead regs: 280 303 606 836 837 838 839 840 895 896

BB 48:
  register live in: 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 273 274 275 608 609 612 615 897
  dead regs: 100 [cc] 608 609 612 615 897

BB 49:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 857
  dead regs: 100 [cc]

BB 50:
  register live in: 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs:

BB 51:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs: 100 [cc]

BB 52:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 317 898
  dead regs: 273 898

BB 53:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 181 193 245 247 249 263 266 267 268 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 181 899
  dead regs: 100 [cc] 273 899

BB 54:
  register live in: 181 193 245 247 249 263 266 267 268 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 317 622 625 626 900 901
  dead regs: 181 622 625 626 900 901

BB 55:
  register live in: 193 245 247 249 263 266 267 268 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 317
  dead regs:

BB 56:
  register live in: 193 245 247 249 263 266 267 268 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 317
  dead regs:

BB 57:
  register live in: 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 191 627 902
  dead regs: 100 [cc] 627 902

BB 58:
  register live in: 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs: 100 [cc]

BB 59:
  register live in: 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs: 100 [cc]

BB 60:
  register live in: 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs: 100 [cc]

BB 61:
  register live in: 191 193 245 247 249 263 266 267 268 274 275 281 297 302 317 743 747 764 769 770 771 777 841 842 843 844 846
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 0 [r0] 1 [r1] 2 [r2] 186 189 632 633 635 638 640 642 742 811 845 847 848 903 904 905 906 907 908 909
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 186 189 191 274 275 317 632 633 635 638 640 642 811 848 903 904 905 906 907 908 909

BB 62:
  register live in: 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs: 281 841
  dead regs: 100 [cc]

BB 63:
  register live in: 245 247 249 263 266 267 268 297 302 742 747 769 770 771 777 842 843 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 742 747 769 770 771 777 836 837 838 839 840
  changed regs: 836 837 838 839 840
  dead regs: 842 843 845 846 847

BB 64:
  register live in: 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  changed regs:
  dead regs: 100 [cc]

BB 102:
  register live in: 245 247 249 263 266 267 297 302 741 747 777 836 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 297 302 741 747 777 833 834 835
  changed regs: 833 834 835
  dead regs: 836 839 840

BB 65:
  register live in: 245 247 249 263 266 267 297 302 741 747 777 833 834 835
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 297 302 741 747 777 833 834 835
  changed regs: 297
  dead regs: 100 [cc]

BB 66:
  register live in: 245 247 249 263 266 267 741 747 777 833 834 835
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 319 741 747 777 824 825
  changed regs: 319 824 825
  dead regs: 833 834 835

BB 67:
  register live in: 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  changed regs:
  dead regs: 100 [cc]

BB 68:
  register live in: 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  changed regs: 297 837
  dead regs: 100 [cc]

BB 69:
  register live in: 245 247 249 263 266 267 741 747 777 836 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 319 741 747 777 824 825
  changed regs: 319 824 825
  dead regs: 836 839 840

BB 70:
  register live in: 245 247 249 263 266 267 741 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 319 741 747 777 824 825
  changed regs: 319
  dead regs:

BB 71:
  register live in: 245 247 249 263 266 267 319 741 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 741 747 777 824 825
  changed regs:
  dead regs: 100 [cc] 319

BB 72:
  register live in: 245 247 263 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 263 738 747 777 824 825
  changed regs: 738
  dead regs:

BB 73:
  register live in: 245 247 249 263 266 267 741 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  changed regs: 269 270 271 286 650 651 652 653 654 761 762 826 827 828 829 830 831 832 910
  dead regs: 266 267 269 270 271 286 650 651 652 654 741 761 762 824 825 910

BB 74:
  register live in: 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  changed regs: 0 [r0] 327 656
  dead regs: 100 [cc] 327 656

BB 75:
  register live in: 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 663 747 777 826 827 828 829 830 831 832
  changed regs: 657 658 659 661 662 663 911
  dead regs: 100 [cc] 657 658 659 661 662 911

BB 76:
  register live in: 245 247 249 263 653 663 747 777 826 827 828 829 830 831 832
  register live out: 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  changed regs:
  dead regs: 663

BB 77:
  register live in: 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  changed regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 16 [s0] 17 [s1] 18 [s2] 669 673 674 675 676
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 669 673 674 675 676

BB 78:
  register live in: 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 653 747 777 826 827 828 829 830 831 832
  changed regs: 828 830
  dead regs: 100 [cc]

BB 79:
  register live in: 245 247 263 747 777 829 831
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 263 738 747 777 824 825
  changed regs: 738 824 825
  dead regs: 829 831

BB 80:
  register live in: 245 247 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 263 738 747 777 824 825
  changed regs: 677
  dead regs: 100 [cc] 677

BB 81:
  register live in: 245 247 263 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 738 747 777 824 825
  changed regs: 678
  dead regs: 100 [cc] 263 678

BB 82:
  register live in: 245 247 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 216 217 218 219 221 222 245 254 738 744 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 16 [s0] 215 216 217 218 219 221 222 253 254 684 685 686 688 689 690 691 692 695 696 698 699 701 744 812 813 814 858 859 912 913
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 215 247 253 684 685 686 688 689 690 691 692 695 696 698 699 701 812 813 814 912 913

BB 83:
  register live in: 216 217 218 219 221 245 254 738 744 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 217 218 219 222 245 254 738 744 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 222 230 703 815 816 817 914
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 216 221 230 703 815 816 817 914

BB 84:
  register live in: 217 218 219 222 245 254 738 744 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 217 218 245 738 747 777 824 825
  changed regs: 707 708 709 710 712 713 714 715 718 719 721 722 724 860 861
  dead regs: 219 222 254 707 708 709 710 712 713 714 715 718 719 721 722 724 744

BB 85:
  register live in: 217 218 245 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 738 747 777 824 825
  changed regs: 0 [r0] 2 [r2] 726 818 819 820
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 217 218 726 818 819 820

BB 86:
  register live in: 245 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 747 777 824 825
  changed regs: 731
  dead regs: 100 [cc] 731 738

BB 87:
  register live in: 245 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 747 777 824 825
  changed regs: 732
  dead regs: 732

BB 88:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]

BB 89:
  register live in: 245 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 242 245 747 777 824 825
  changed regs: 242
  dead regs: 100 [cc]

BB 90:
  register live in: 242 245 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 747 777 824 825
  changed regs: 733
  dead regs: 242 733

BB 91:
  register live in: 245 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 747 777 824 825
  changed regs: 824 825
  dead regs: 100 [cc]

BB 92:
  register live in: 245 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 300 301 747 777 824 825
  changed regs: 300 301 915 916
  dead regs: 915 916

BB 93:
  register live in: 245
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 917
  dead regs: 245 917

BB 94:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]

BB 95:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]

BB 96:
  register live in: 158 245 247 249 263 267 302 738 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 158 245 247 249 263 267 302 738 747 777 824 825
  changed regs: 736
  dead regs: 736

BB 97:
  register live in: 245 247 263 747 777 824 825
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 263 738 747 777 824 825
  changed regs: 737 738
  dead regs: 737

BB 98:
  register live in: 245 247 249 263 266 267 268 297 302 742 747 769 770 771 777 836 837 838 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 268 297 302 741 742 747 769 770 771 777 836 837 838 839 840
  changed regs: 297 741 837 918
  dead regs: 100 [cc] 918

BB 99:
  register live in: 245 247 249 263 266 267 741 747 777 836 839 840
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 245 247 249 263 266 267 319 741 747 777 824 825
  changed regs: 319 824 825
  dead regs: 836 839 840

BB 100:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs: 100 [cc]

BB 101:
  register live in: 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 193 245 247 249 263 266 267 268 273 274 275 281 297 302 742 743 747 764 769 770 771 777 841 842 843 844 845 846 847
  changed regs:
  dead regs:
subreg regs:
  Slot 0 regnos (width = 0):	 625	 635
  Slot 1 regnos (width = 0):	 245
  Slot 2 regnos (width = 0):	 638
  Slot 3 regnos (width = 0):	 642
Changing spilled pseudos to memory in insn #4
Changing spilled pseudos to memory in insn #17
Changing spilled pseudos to memory in insn #1945
Memory subreg was simplified in insn #916
Changing spilled pseudos to memory in insn #916
Changing spilled pseudos to memory in insn #1950
Changing spilled pseudos to memory in insn #1951
Changing spilled pseudos to memory in insn #1952
Memory subreg was simplified in insn #980
Changing spilled pseudos to memory in insn #980
Memory subreg was simplified in insn #981
Changing spilled pseudos to memory in insn #981
Memory subreg was simplified in insn #982
Changing spilled pseudos to memory in insn #982
Changing spilled pseudos to memory in insn #1962
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=576, prev_offset=560)
Can't eliminate 103 to 102 (offset=104, prev_offset=0)
Can't eliminate 103 to 11 (offset=100, prev_offset=0)
Can eliminate 103 to 7 (offset=568, prev_offset=0)
Can eliminate 102 to 13 (offset=472, prev_offset=456)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=464, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1920:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1919:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1918:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1917:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1916:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1915:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1914:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1913:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1912:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1911:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1910:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 1909:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1962:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 982:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 981:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 980:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1952:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1951:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1950:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 916:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=5,overall=21,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly loser: reject++
            alt=8,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            1 Costly set: reject++
          alt=13,overall=1,losers=0,rld_nregs=0
	 Choosing alt 13 in insn 1945:  (0) *Uv  (1) *t {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 17:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=576, prev_offset=576)
Can't eliminate 103 to 102 (offset=104, prev_offset=0)
Can't eliminate 103 to 11 (offset=100, prev_offset=0)
Can eliminate 103 to 7 (offset=568, prev_offset=0)
Can eliminate 102 to 13 (offset=472, prev_offset=472)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=464, prev_offset=0)
changing reg in insn 119
changing reg in insn 128
changing reg in insn 128
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 136
changing reg in insn 1833
changing reg in insn 141
changing reg in insn 1854
changing reg in insn 1850
changing reg in insn 557
changing reg in insn 1843
changing reg in insn 706
changing reg in insn 695
changing reg in insn 568
changing reg in insn 579
changing reg in insn 1844
changing reg in insn 600
changing reg in insn 611
changing reg in insn 602
changing reg in insn 612
changing reg in insn 613
changing reg in insn 620
changing reg in insn 605
changing reg in insn 614
changing reg in insn 607
changing reg in insn 616
changing reg in insn 631
changing reg in insn 6
changing reg in insn 1819
changing reg in insn 614
changing reg in insn 611
changing reg in insn 639
changing reg in insn 1584
changing reg in insn 686
changing reg in insn 731
changing reg in insn 741
changing reg in insn 773
changing reg in insn 905
changing reg in insn 1807
changing reg in insn 913
changing reg in insn 911
changing reg in insn 913
changing reg in insn 967
changing reg in insn 973
changing reg in insn 969
changing reg in insn 970
changing reg in insn 936
changing reg in insn 1805
changing reg in insn 1803
changing reg in insn 990
changing reg in insn 850
changing reg in insn 1801
changing reg in insn 1799
changing reg in insn 986
changing reg in insn 1196
changing reg in insn 1208
changing reg in insn 1197
changing reg in insn 1199
changing reg in insn 1780
changing reg in insn 1250
changing reg in insn 1210
changing reg in insn 1782
changing reg in insn 1299
changing reg in insn 1219
changing reg in insn 1306
changing reg in insn 1220
changing reg in insn 1229
changing reg in insn 1277
changing reg in insn 1272
changing reg in insn 1231
changing reg in insn 1221
changing reg in insn 1229
changing reg in insn 1223
changing reg in insn 1257
changing reg in insn 1224
changing reg in insn 1285
changing reg in insn 1225
changing reg in insn 1287
changing reg in insn 1274
changing reg in insn 1234
changing reg in insn 1285
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1268
changing reg in insn 1343
changing reg in insn 1350
changing reg in insn 1346
changing reg in insn 1585
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 792
changing reg in insn 17
changing reg in insn 1585
changing reg in insn 805
changing reg in insn 781
changing reg in insn 535
changing reg in insn 505
changing reg in insn 544
changing reg in insn 1187
changing reg in insn 603
changing reg in insn 598
changing reg in insn 539
changing reg in insn 536
changing reg in insn 523
changing reg in insn 506
changing reg in insn 1855
changing reg in insn 1851
changing reg in insn 711
changing reg in insn 546
changing reg in insn 1845
changing reg in insn 550
changing reg in insn 722
changing reg in insn 716
changing reg in insn 713
changing reg in insn 647
changing reg in insn 555
changing reg in insn 547
changing reg in insn 557
changing reg in insn 12
changing reg in insn 16
changing reg in insn 14
changing reg in insn 667
changing reg in insn 1817
changing reg in insn 814
changing reg in insn 1087
changing reg in insn 1112
changing reg in insn 1105
changing reg in insn 1083
changing reg in insn 757
changing reg in insn 731
changing reg in insn 690
changing reg in insn 684
changing reg in insn 668
changing reg in insn 1087
changing reg in insn 1592
changing reg in insn 1839
changing reg in insn 1234
changing reg in insn 1206
changing reg in insn 1599
changing reg in insn 1277
changing reg in insn 1272
changing reg in insn 1217
changing reg in insn 483
changing reg in insn 514
changing reg in insn 512
changing reg in insn 501
changing reg in insn 484
changing reg in insn 1566
changing reg in insn 1785
changing reg in insn 5
changing reg in insn 1846
changing reg in insn 650
changing reg in insn 1815
changing reg in insn 680
changing reg in insn 667
changing reg in insn 664
changing reg in insn 653
changing reg in insn 651
changing reg in insn 680
changing reg in insn 667
changing reg in insn 814
changing reg in insn 1088
changing reg in insn 850
changing reg in insn 750
changing reg in insn 1813
changing reg in insn 1083
changing reg in insn 936
changing reg in insn 773
changing reg in insn 755
changing reg in insn 752
changing reg in insn 823
changing reg in insn 976
changing reg in insn 969
changing reg in insn 967
changing reg in insn 824
changing reg in insn 1083
changing reg in insn 1884
changing reg in insn 1084
changing reg in insn 1088
changing reg in insn 1885
changing reg in insn 1089
changing reg in insn 25
changing reg in insn 1886
changing reg in insn 867
changing reg in insn 880
changing reg in insn 872
changing reg in insn 886
changing reg in insn 877
changing reg in insn 886
changing reg in insn 19
changing reg in insn 1863
changing reg in insn 18
changing reg in insn 1002
changing reg in insn 1797
changing reg in insn 1003
changing reg in insn 1002
changing reg in insn 858
changing reg in insn 853
changing reg in insn 3
changing reg in insn 1841
changing reg in insn 4
changing reg in insn 24
changing reg in insn 1888
changing reg in insn 23
changing reg in insn 1859
changing reg in insn 106
changing reg in insn 1835
changing reg in insn 108
changing reg in insn 22
changing reg in insn 1420
changing reg in insn 1056
changing reg in insn 1026
changing reg in insn 1793
changing reg in insn 1789
changing reg in insn 1775
changing reg in insn 1421
changing reg in insn 1420
changing reg in insn 1057
changing reg in insn 1056
changing reg in insn 1041
changing reg in insn 1027
changing reg in insn 1026
changing reg in insn 1018
changing reg in insn 851
changing reg in insn 1364
changing reg in insn 39
changing reg in insn 500
changing reg in insn 125
changing reg in insn 95
changing reg in insn 71
changing reg in insn 47
changing reg in insn 1366
changing reg in insn 37
changing reg in insn 511
changing reg in insn 514
changing reg in insn 501
changing reg in insn 119
changing reg in insn 92
changing reg in insn 68
changing reg in insn 44
changing reg in insn 15
changing reg in insn 11
changing reg in insn 13
changing reg in insn 680
changing reg in insn 1420
changing reg in insn 1056
changing reg in insn 1026
changing reg in insn 1002
changing reg in insn 1866
changing reg in insn 835
changing reg in insn 1860
changing reg in insn 1550
changing reg in insn 1842
changing reg in insn 58
changing reg in insn 1837
changing reg in insn 60
changing reg in insn 1560
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 1624
changing reg in insn 1623
changing reg in insn 917
changing reg in insn 899
changing reg in insn 976
changing reg in insn 44
changing reg in insn 50
changing reg in insn 50
changing reg in insn 1895
changing reg in insn 1883
changing reg in insn 1880
changing reg in insn 845
changing reg in insn 1069
changing reg in insn 1862
changing reg in insn 1075
changing reg in insn 68
changing reg in insn 74
changing reg in insn 74
changing reg in insn 92
changing reg in insn 98
changing reg in insn 98
changing reg in insn 1103
changing reg in insn 1129
changing reg in insn 1104
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 82
changing reg in insn 1837
changing reg in insn 84
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 140
changing reg in insn 141
changing reg in insn 200
changing reg in insn 1835
changing reg in insn 209
changing reg in insn 1833
changing reg in insn 225
changing reg in insn 1831
changing reg in insn 226
changing reg in insn 1831
changing reg in insn 363
changing reg in insn 1829
changing reg in insn 364
changing reg in insn 1829
changing reg in insn 380
changing reg in insn 1827
changing reg in insn 381
changing reg in insn 1827
changing reg in insn 500
changing reg in insn 503
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
changing reg in insn 503
changing reg in insn 511
changing reg in insn 512
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 1825
changing reg in insn 514
changing reg in insn 515
changing reg in insn 515
changing reg in insn 1825
changing reg in insn 542
changing reg in insn 544
changing reg in insn 578
changing reg in insn 579
changing reg in insn 580
changing reg in insn 581
changing reg in insn 581
changing reg in insn 1823
changing reg in insn 582
changing reg in insn 1823
changing reg in insn 613
changing reg in insn 617
changing reg in insn 617
changing reg in insn 622
changing reg in insn 618
changing reg in insn 620
changing reg in insn 620
changing reg in insn 622
changing reg in insn 622
changing reg in insn 624
changing reg in insn 627
changing reg in insn 666
changing reg in insn 667
changing reg in insn 670
changing reg in insn 1817
changing reg in insn 12
changing reg in insn 679
changing reg in insn 680
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 738
changing reg in insn 745
changing reg in insn 739
changing reg in insn 741
changing reg in insn 754
changing reg in insn 755
changing reg in insn 762
changing reg in insn 764
changing reg in insn 766
changing reg in insn 1813
changing reg in insn 1811
changing reg in insn 773
changing reg in insn 1811
changing reg in insn 786
changing reg in insn 787
changing reg in insn 801
changing reg in insn 802
changing reg in insn 814
changing reg in insn 813
changing reg in insn 814
changing reg in insn 817
changing reg in insn 1897
changing reg in insn 850
changing reg in insn 859
changing reg in insn 859
changing reg in insn 862
changing reg in insn 862
changing reg in insn 862
changing reg in insn 871
changing reg in insn 867
changing reg in insn 864
changing reg in insn 871
changing reg in insn 867
changing reg in insn 871
changing reg in insn 877
changing reg in insn 872
changing reg in insn 913
changing reg in insn 914
changing reg in insn 917
changing reg in insn 935
changing reg in insn 936
changing reg in insn 966
changing reg in insn 967
changing reg in insn 968
changing reg in insn 969
changing reg in insn 976
changing reg in insn 977
changing reg in insn 1080
changing reg in insn 1080
changing reg in insn 1082
changing reg in insn 1082
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1081
changing reg in insn 1111
changing reg in insn 1087
changing reg in insn 1082
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1098
changing reg in insn 1099
changing reg in insn 1109
changing reg in insn 1109
changing reg in insn 1111
changing reg in insn 1111
changing reg in insn 1111
changing reg in insn 1112
changing reg in insn 1112
changing reg in insn 1787
changing reg in insn 1113
changing reg in insn 1787
changing reg in insn 1121
changing reg in insn 1136
changing reg in insn 1141
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1144
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1174
changing reg in insn 1785
changing reg in insn 1232
changing reg in insn 1229
changing reg in insn 1232
changing reg in insn 1228
changing reg in insn 1236
changing reg in insn 1229
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1243
changing reg in insn 1234
changing reg in insn 1236
changing reg in insn 1238
changing reg in insn 1236
changing reg in insn 1239
changing reg in insn 1236
changing reg in insn 1239
changing reg in insn 1238
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1245
changing reg in insn 1241
changing reg in insn 1243
changing reg in insn 1243
changing reg in insn 1245
changing reg in insn 1245
changing reg in insn 1247
changing reg in insn 1256
changing reg in insn 1261
changing reg in insn 1277
changing reg in insn 1279
changing reg in insn 1281
changing reg in insn 1279
changing reg in insn 1282
changing reg in insn 1279
changing reg in insn 1282
changing reg in insn 1278
changing reg in insn 1285
changing reg in insn 1279
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1283
changing reg in insn 1292
changing reg in insn 1288
changing reg in insn 1285
changing reg in insn 1288
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1294
changing reg in insn 1290
changing reg in insn 1292
changing reg in insn 1292
changing reg in insn 1294
changing reg in insn 1294
changing reg in insn 1296
changing reg in insn 1305
changing reg in insn 1310
changing reg in insn 1321
changing reg in insn 1777
changing reg in insn 1328
changing reg in insn 1330
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 552
changing reg in insn 1559
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1565
changing reg in insn 1821
changing reg in insn 1819
changing reg in insn 1777
changing reg in insn 650
changing reg in insn 821
changing reg in insn 581
changing reg in insn 553
changing reg in insn 1566
changing reg in insn 1424
changing reg in insn 836
changing reg in insn 1809
changing reg in insn 1793
changing reg in insn 1789
changing reg in insn 1775
changing reg in insn 1088
changing reg in insn 1562
changing reg in insn 1560
changing reg in insn 1797
changing reg in insn 1795
changing reg in insn 1791
changing reg in insn 1561
changing reg in insn 871
changing reg in insn 867
changing reg in insn 1558
changing reg in insn 1227
changing reg in insn 1849
changing reg in insn 1292
changing reg in insn 1243
changing reg in insn 42
changing reg in insn 190
changing reg in insn 177
changing reg in insn 176
changing reg in insn 165
changing reg in insn 140
changing reg in insn 123
changing reg in insn 117
changing reg in insn 381
changing reg in insn 380
changing reg in insn 364
changing reg in insn 363
changing reg in insn 226
changing reg in insn 225
changing reg in insn 209
changing reg in insn 200
changing reg in insn 108
changing reg in insn 94
changing reg in insn 91
changing reg in insn 84
changing reg in insn 70
changing reg in insn 67
changing reg in insn 60
changing reg in insn 46
changing reg in insn 43
changing reg in insn 381
changing reg in insn 380
changing reg in insn 364
changing reg in insn 363
changing reg in insn 226
changing reg in insn 225
changing reg in insn 209
changing reg in insn 200
changing reg in insn 91
changing reg in insn 94
changing reg in insn 67
changing reg in insn 70
changing reg in insn 43
changing reg in insn 46
changing reg in insn 1139
changing reg in insn 1140
changing reg in insn 1140
changing reg in insn 1890
changing reg in insn 986
changing reg in insn 989
changing reg in insn 906
changing reg in insn 1807
changing reg in insn 20
changing reg in insn 1624
changing reg in insn 1623
changing reg in insn 912
changing reg in insn 913
changing reg in insn 937
changing reg in insn 1805
changing reg in insn 1799
changing reg in insn 1640
changing reg in insn 53
changing reg in insn 1641
changing reg in insn 56
changing reg in insn 1642
changing reg in insn 58
changing reg in insn 1643
changing reg in insn 77
changing reg in insn 1644
changing reg in insn 80
changing reg in insn 1645
changing reg in insn 82
changing reg in insn 1646
changing reg in insn 101
changing reg in insn 1647
changing reg in insn 104
changing reg in insn 1648
changing reg in insn 106
changing reg in insn 1649
changing reg in insn 131
changing reg in insn 1650
changing reg in insn 134
changing reg in insn 1651
changing reg in insn 136
changing reg in insn 1652
changing reg in insn 505
changing reg in insn 1653
changing reg in insn 511
changing reg in insn 1654
changing reg in insn 533
changing reg in insn 1655
changing reg in insn 535
changing reg in insn 1656
changing reg in insn 546
changing reg in insn 1657
changing reg in insn 557
changing reg in insn 1658
changing reg in insn 564
changing reg in insn 1659
changing reg in insn 572
changing reg in insn 1660
changing reg in insn 600
changing reg in insn 1661
changing reg in insn 605
changing reg in insn 1662
changing reg in insn 650
changing reg in insn 1663
changing reg in insn 662
changing reg in insn 1664
changing reg in insn 699
changing reg in insn 1665
changing reg in insn 711
changing reg in insn 1666
changing reg in insn 732
changing reg in insn 1667
changing reg in insn 738
changing reg in insn 1668
changing reg in insn 744
changing reg in insn 1669
changing reg in insn 750
changing reg in insn 1670
changing reg in insn 823
changing reg in insn 1671
changing reg in insn 1672
changing reg in insn 1196
changing reg in insn 1673
changing reg in insn 1199
changing reg in insn 1674
changing reg in insn 1210
changing reg in insn 1675
changing reg in insn 1256
changing reg in insn 1676
changing reg in insn 1260
changing reg in insn 1677
changing reg in insn 1266
changing reg in insn 1678
changing reg in insn 1305
changing reg in insn 1679
changing reg in insn 1309
changing reg in insn 1680
changing reg in insn 1316
changing reg in insn 1893
changing reg in insn 1891
changing reg in insn 1881
changing reg in insn 1878
changing reg in insn 1856
changing reg in insn 1852
changing reg in insn 1841
changing reg in insn 1355
changing reg in insn 1858
changing reg in insn 1887
changing reg in insn 1847
changing reg in insn 477
changing reg in insn 1140
changing reg in insn 1360
changing reg in insn 1356
changing reg in insn 1355
changing reg in insn 1894
changing reg in insn 1892
changing reg in insn 1882
changing reg in insn 1879
changing reg in insn 1857
changing reg in insn 1853
changing reg in insn 1842
changing reg in insn 1359
changing reg in insn 1861
changing reg in insn 1889
changing reg in insn 1848
changing reg in insn 499
changing reg in insn 486
changing reg in insn 483
changing reg in insn 552
changing reg in insn 639
changing reg in insn 686
changing reg in insn 729
changing reg in insn 786
changing reg in insn 792
changing reg in insn 802
changing reg in insn 1559
changing reg in insn 835
changing reg in insn 819
changing reg in insn 845
changing reg in insn 844
changing reg in insn 1069
changing reg in insn 1563
changing reg in insn 24
changing reg in insn 1079
changing reg in insn 1564
changing reg in insn 1165
changing reg in insn 1223
changing reg in insn 1219
changing reg in insn 1267
changing reg in insn 1316
changing reg in insn 1328
changing reg in insn 1343
changing reg in insn 1351
changing reg in insn 1359
changing reg in insn 1400
changing reg in insn 1409
changing reg in insn 1565
changing reg in insn 499
changing reg in insn 786
changing reg in insn 1680
changing reg in insn 1350
changing reg in insn 1884
changing reg in insn 1149
changing reg in insn 1885
changing reg in insn 1148
changing reg in insn 1886
changing reg in insn 1154
changing reg in insn 1095
changing reg in insn 1136
changing reg in insn 1136
changing reg in insn 1159
changing reg in insn 1155
changing reg in insn 1154
changing reg in insn 1887
changing reg in insn 1891
changing reg in insn 1888
changing reg in insn 1157
changing reg in insn 1103
changing reg in insn 1098
changing reg in insn 1113
changing reg in insn 1123
changing reg in insn 1157
changing reg in insn 1113
changing reg in insn 1889
changing reg in insn 1892
changing reg in insn 1441
changing reg in insn 1108
changing reg in insn 1147
changing reg in insn 1890
changing reg in insn 1141
changing reg in insn 1875
changing reg in insn 1878
changing reg in insn 1876
changing reg in insn 1879
changing reg in insn 1877
changing reg in insn 1880
changing reg in insn 1858
changing reg in insn 1870
changing reg in insn 1875
changing reg in insn 1893
changing reg in insn 1881
changing reg in insn 1864
changing reg in insn 1859
changing reg in insn 1871
changing reg in insn 1053
changing reg in insn 1417
changing reg in insn 1865
changing reg in insn 1042
changing reg in insn 1058
changing reg in insn 1054
changing reg in insn 1053
changing reg in insn 1422
changing reg in insn 1418
changing reg in insn 1417
changing reg in insn 1860
changing reg in insn 1872
changing reg in insn 1867
changing reg in insn 1861
changing reg in insn 1873
changing reg in insn 1876
changing reg in insn 1894
changing reg in insn 1882
changing reg in insn 1868
changing reg in insn 1862
changing reg in insn 1874
changing reg in insn 1877
changing reg in insn 1895
changing reg in insn 1883
changing reg in insn 1869
changing reg in insn 1863
changing reg in insn 999
changing reg in insn 854
changing reg in insn 1004
changing reg in insn 1000
changing reg in insn 999
changing reg in insn 1864
changing reg in insn 1870
changing reg in insn 1865
changing reg in insn 1871
changing reg in insn 1866
changing reg in insn 859
changing reg in insn 1867
changing reg in insn 993
changing reg in insn 1872
changing reg in insn 859
changing reg in insn 1868
changing reg in insn 1873
changing reg in insn 995
changing reg in insn 993
changing reg in insn 992
changing reg in insn 1869
changing reg in insn 995
changing reg in insn 1874
changing reg in insn 896
changing reg in insn 1435
changing reg in insn 1562
changing reg in insn 1843
changing reg in insn 1854
changing reg in insn 1850
changing reg in insn 1844
changing reg in insn 617
changing reg in insn 613
changing reg in insn 1845
changing reg in insn 1855
changing reg in insn 1851
changing reg in insn 1846
changing reg in insn 628
changing reg in insn 627
changing reg in insn 1847
changing reg in insn 1856
changing reg in insn 1852
changing reg in insn 1848
changing reg in insn 1857
changing reg in insn 1853
changing reg in insn 1849
changing reg in insn 620
changing reg in insn 886
changing reg in insn 1229
changing reg in insn 1236
changing reg in insn 1279
changing reg in insn 1285
deleting insn with uid = 1901.
deleting insn with uid = 1640.
deleting insn with uid = 56.
deleting insn with uid = 1642.
deleting insn with uid = 1903.
deleting insn with uid = 1643.
deleting insn with uid = 80.
deleting insn with uid = 1645.
deleting insn with uid = 1905.
deleting insn with uid = 1646.
deleting insn with uid = 104.
deleting insn with uid = 1648.
deleting insn with uid = 1907.
deleting insn with uid = 1649.
deleting insn with uid = 134.
deleting insn with uid = 1651.
deleting insn with uid = 166.
deleting insn with uid = 189.
deleting insn with uid = 244.
deleting insn with uid = 267.
deleting insn with uid = 286.
deleting insn with uid = 309.
deleting insn with uid = 328.
deleting insn with uid = 351.
deleting insn with uid = 399.
deleting insn with uid = 422.
deleting insn with uid = 441.
deleting insn with uid = 464.
deleting insn with uid = 1841.
deleting insn with uid = 1842.
deleting insn with uid = 1652.
deleting insn with uid = 1653.
deleting insn with uid = 1654.
deleting insn with uid = 1655.
deleting insn with uid = 1656.
deleting insn with uid = 557.
deleting insn with uid = 1658.
deleting insn with uid = 1659.
deleting insn with uid = 1660.
deleting insn with uid = 1661.
deleting insn with uid = 605.
deleting insn with uid = 1843.
deleting insn with uid = 1844.
deleting insn with uid = 1845.
deleting insn with uid = 1846.
deleting insn with uid = 1847.
deleting insn with uid = 1848.
deleting insn with uid = 1849.
deleting insn with uid = 1927.
deleting insn with uid = 1929.
deleting insn with uid = 1850.
deleting insn with uid = 1851.
deleting insn with uid = 1852.
deleting insn with uid = 1853.
deleting insn with uid = 1854.
deleting insn with uid = 1855.
deleting insn with uid = 1856.
deleting insn with uid = 1857.
deleting insn with uid = 1662.
deleting insn with uid = 1663.
deleting insn with uid = 1664.
deleting insn with uid = 1665.
deleting insn with uid = 732.
deleting insn with uid = 1667.
deleting insn with uid = 744.
deleting insn with uid = 1669.
deleting insn with uid = 1935.
deleting insn with uid = 1937.
deleting insn with uid = 1670.
deleting insn with uid = 1858.
deleting insn with uid = 1859.
deleting insn with uid = 1860.
deleting insn with uid = 1861.
deleting insn with uid = 1862.
deleting insn with uid = 1863.
deleting insn with uid = 1864.
deleting insn with uid = 1865.
deleting insn with uid = 1866.
deleting insn with uid = 1867.
deleting insn with uid = 1868.
deleting insn with uid = 1869.
deleting insn with uid = 1671.
deleting insn with uid = 1870.
deleting insn with uid = 1871.
deleting insn with uid = 1872.
deleting insn with uid = 1873.
deleting insn with uid = 1874.
deleting insn with uid = 1875.
deleting insn with uid = 1876.
deleting insn with uid = 1877.
deleting insn with uid = 1878.
deleting insn with uid = 1879.
deleting insn with uid = 1880.
deleting insn with uid = 1881.
deleting insn with uid = 1882.
deleting insn with uid = 1883.
deleting insn with uid = 1884.
deleting insn with uid = 1885.
deleting insn with uid = 1886.
deleting insn with uid = 1887.
deleting insn with uid = 1888.
deleting insn with uid = 1889.
deleting insn with uid = 1890.
deleting insn with uid = 1129.
deleting insn with uid = 1891.
deleting insn with uid = 1892.
deleting insn with uid = 1672.
deleting insn with uid = 1199.
deleting insn with uid = 1674.
deleting insn with uid = 1675.
deleting insn with uid = 1260.
deleting insn with uid = 1677.
deleting insn with uid = 1678.
deleting insn with uid = 1309.
deleting insn with uid = 1680.
deleting insn with uid = 1893.
deleting insn with uid = 1894.
deleting insn with uid = 1895.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 10 failed.
Forwarding edge 12->13 to 15 failed.
Forwarding edge 49->50 to 62 failed.
Forwarding edge 62->63 to 99 failed.
Forwarding edge 64->65 to 66 failed.
Deleting fallthru block 65.
deleting block 65
Forwarding edge 66->67 to 72 failed.
Forwarding edge 69->70 to 72 failed.
Forwarding edge 99->100 to 72 failed.
Forwarding edge 101->102 to 52 failed.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 10 failed.
Forwarding edge 12->13 to 15 failed.
Forwarding edge 49->50 to 62 failed.
Forwarding edge 62->63 to 99 failed.
Forwarding edge 66->67 to 72 failed.
Forwarding edge 69->70 to 72 failed.
Forwarding edge 99->100 to 72 failed.
Forwarding edge 101->102 to 52 failed.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 10 failed.
Forwarding edge 12->13 to 15 failed.
Forwarding edge 49->50 to 62 failed.
Forwarding edge 62->63 to 99 failed.
Forwarding edge 66->67 to 72 failed.
Forwarding edge 69->70 to 72 failed.
Forwarding edge 99->100 to 72 failed.
Forwarding edge 101->102 to 52 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 269.
verify found no changes in insn with uid = 287.
verify found no changes in insn with uid = 298.
verify found no changes in insn with uid = 311.
verify found no changes in insn with uid = 329.
verify found no changes in insn with uid = 340.
verify found no changes in insn with uid = 353.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 411.
verify found no changes in insn with uid = 424.
verify found no changes in insn with uid = 442.
verify found no changes in insn with uid = 453.
verify found no changes in insn with uid = 466.
verify found no changes in insn with uid = 504.
verify found no changes in insn with uid = 509.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 528.
verify found no changes in insn with uid = 531.
verify found no changes in insn with uid = 534.
verify found no changes in insn with uid = 545.
verify found no changes in insn with uid = 556.
verify found no changes in insn with uid = 561.
verify found no changes in insn with uid = 569.
verify found no changes in insn with uid = 599.
verify found no changes in insn with uid = 604.
verify found no changes in insn with uid = 648.
verify found no changes in insn with uid = 654.
verify found no changes in insn with uid = 659.
verify found no changes in insn with uid = 696.
verify found no changes in insn with uid = 707.
verify found no changes in insn with uid = 710.
verify found no changes in insn with uid = 727.
verify found no changes in insn with uid = 733.
verify found no changes in insn with uid = 737.
verify found no changes in insn with uid = 742.
verify found no changes in insn with uid = 746.
verify found no changes in insn with uid = 749.
verify found no changes in insn with uid = 822.
verify found no changes in insn with uid = 983.
verify found no changes in insn with uid = 991.
verify found no changes in insn with uid = 1130.
verify found no changes in insn with uid = 1150.
verify found no changes in insn with uid = 1188.
verify found no changes in insn with uid = 1192.
verify found no changes in insn with uid = 1195.
verify found no changes in insn with uid = 1198.
verify found no changes in insn with uid = 1209.
verify found no changes in insn with uid = 1251.
verify found no changes in insn with uid = 1255.
verify found no changes in insn with uid = 1258.
verify found no changes in insn with uid = 1262.
verify found no changes in insn with uid = 1265.
verify found no changes in insn with uid = 1300.
verify found no changes in insn with uid = 1304.
verify found no changes in insn with uid = 1307.
verify found no changes in insn with uid = 1311.
verify found no changes in insn with uid = 1314.
verify found no changes in insn with uid = 1334.
verify found no changes in insn with uid = 1336.
verify found no changes in insn with uid = 1338.
verify found no changes in insn with uid = 1378.
verify found no changes in insn with uid = 1381.
verify found no changes in insn with uid = 1387.
verify found no changes in insn with uid = 1390.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 102 n_edges 152 count 171 (  1.7)
df_worklist_dataflow_doublequeue: n_basic_blocks 102 n_edges 152 count 137 (  1.3)


drawSprites

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={141d,99u} r1={149d,75u} r2={130d,52u,1e} r3={146d,78u,5e} r4={2d,38u,3e} r5={1d,25u,14e} r6={10d,20u,1e} r7={7d,14u} r8={10d,15u} r9={10d,25u,2e} r10={3d,8u} r11={2d,6u} r12={163d,4u} r13={1d,207u} r14={83d} r15={81d} r16={99d,33u} r17={92d,10u} r18={84d,2u} r19={83d,1u} r20={83d,1u} r21={82d} r22={82d} r23={82d} r24={82d} r25={82d} r26={82d} r27={83d,1u} r28={83d,1u} r29={90d,9u} r30={110d,33u,1e} r31={151d,78u,2e} r32={12d,24u} r33={7d,18u} r34={2d,4u} r35={10d,19u} r36={7d,14u,2e} r37={3d,5u} r38={2d,8u} r39={4d,11u,1e} r40={3d,5u} r41={1d,1u} r42={2d,4u} r43={4d,12u} r44={1d,1u} r45={1d,1u} r46={1d,2u} r47={1d,4u} r48={81d} r49={81d} r50={81d} r51={81d} r52={81d} r53={81d} r54={81d} r55={81d} r56={81d} r57={81d} r58={81d} r59={81d} r60={81d} r61={81d} r62={81d} r63={81d} r64={81d} r65={81d} r66={81d} r67={81d} r68={81d} r69={81d} r70={81d} r71={81d} r72={81d} r73={81d} r74={81d} r75={81d} r76={81d} r77={81d} r78={81d} r79={81d} r80={81d} r81={81d} r82={81d} r83={81d} r84={81d} r85={81d} r86={81d} r87={81d} r88={81d} r89={81d} r90={81d} r91={81d} r92={81d} r93={81d} r94={81d} r95={81d} r96={81d} r97={81d} r98={81d} r99={81d} r100={135d,45u} r101={112d,31u} r104={81d} r105={81d} r106={81d} r740={1e} 
;;    total ref usage 8229{7152d,1044u,33e} in 987{906 regular + 81 call} insns.
(note 1 0 30 NOTE_INSN_DELETED)
(note 30 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 30 49 2 NOTE_INSN_FUNCTION_BEG)
(note 49 2 52 2 NOTE_INSN_DELETED)
(note 52 49 55 2 NOTE_INSN_DELETED)
(note 55 52 73 2 NOTE_INSN_DELETED)
(note 73 55 76 2 NOTE_INSN_DELETED)
(note 76 73 79 2 NOTE_INSN_DELETED)
(note 79 76 97 2 NOTE_INSN_DELETED)
(note 97 79 100 2 NOTE_INSN_DELETED)
(note 100 97 103 2 NOTE_INSN_DELETED)
(note 103 100 127 2 NOTE_INSN_DELETED)
(note 127 103 130 2 NOTE_INSN_DELETED)
(note 130 127 133 2 NOTE_INSN_DELETED)
(note 133 130 32 2 NOTE_INSN_DELETED)
(debug_insn 32 133 33 2 (debug_marker) "../System/ray_funkcije.c":380:2 -1
     (nil))
(debug_insn 33 32 34 2 (debug_marker) "../System/ray_funkcije.c":380:7 -1
     (nil))
(debug_insn 34 33 35 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 35 34 42 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(insn 42 35 38 2 (set (reg/f:SI 5 r5 [747])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":382:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(note 38 42 36 2 NOTE_INSN_DELETED)
(note 36 38 1899 2 NOTE_INSN_DELETED)
(insn 1899 36 39 2 (set (reg:SI 3 r3 [862])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":383:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 39 1899 40 2 (set (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
        (mem/c:SF (reg:SI 3 r3 [862]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(debug_insn 40 39 41 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 41 40 46 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(insn 46 41 1900 2 (set (reg:SF 31 s15 [orig:346 sp[0].y ] [346])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])
            (nil))))
(insn 1900 46 37 2 (set (reg:SI 3 r3 [863])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":382:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 37 1900 47 2 (set (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
        (mem/c:SF (reg:SI 3 r3 [863]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 47 37 43 2 (set (reg:SF 31 s15 [orig:313 _473 ] [313])
        (minus:SF (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
            (reg:SF 31 s15 [orig:346 sp[0].y ] [346]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (nil))
(insn 43 47 48 2 (set (reg:SF 30 s14 [orig:344 sp[0].x ] [344])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (nil))))
(insn 48 43 44 2 (set (reg:SF 31 s15 [347])
        (mult:SF (reg:SF 31 s15 [orig:313 _473 ] [313])
            (reg:SF 31 s15 [orig:313 _473 ] [313]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (nil))
(insn 44 48 50 2 (set (reg:SF 30 s14 [orig:318 _482 ] [318])
        (minus:SF (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
            (reg:SF 30 s14 [orig:344 sp[0].x ] [344]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (nil))
(insn 50 44 1902 2 (set (reg:SF 31 s15 [347])
        (fma:SF (reg:SF 30 s14 [orig:318 _482 ] [318])
            (reg:SF 30 s14 [orig:318 _482 ] [318])
            (reg:SF 31 s15 [347]))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (nil))
(insn 1902 50 51 2 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [347])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 51 1902 53 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 53 51 54 2 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [780])) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 54 53 1641 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1641 54 57 2 (set (reg:DF 0 r0 [781])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 57 1641 70 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 70 57 67 2 (set (reg:SF 31 s15 [orig:353 sp[1].y ] [353])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])
            (nil))))
(insn 67 70 71 2 (set (reg:SF 30 s14 [orig:351 sp[1].x ] [351])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (nil))))
(insn 71 67 68 2 (set (reg:SF 31 s15 [orig:329 _523 ] [329])
        (minus:SF (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
            (reg:SF 31 s15 [orig:353 sp[1].y ] [353]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (nil))
(insn 68 71 72 2 (set (reg:SF 30 s14 [orig:323 _511 ] [323])
        (minus:SF (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
            (reg:SF 30 s14 [orig:351 sp[1].x ] [351]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (nil))
(insn 72 68 58 2 (set (reg:SF 31 s15 [354])
        (mult:SF (reg:SF 31 s15 [orig:329 _523 ] [329])
            (reg:SF 31 s15 [orig:329 _523 ] [329]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (nil))
(insn 58 72 74 2 (set (reg:SF 36 s20 [orig:307 _466 ] [307])
        (reg:SF 0 r0 [782])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 74 58 1904 2 (set (reg:SF 31 s15 [354])
        (fma:SF (reg:SF 30 s14 [orig:323 _511 ] [323])
            (reg:SF 30 s14 [orig:323 _511 ] [323])
            (reg:SF 31 s15 [354]))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (nil))
(insn 1904 74 60 2 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [354])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 60 1904 61 2 (set (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (reg:SF 36 s20 [orig:307 _466 ] [307])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 61 60 62 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 62 61 63 2 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 63 62 64 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 64 63 65 2 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 65 64 75 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 75 65 77 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 77 75 78 2 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [783])) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 78 77 1644 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1644 78 81 2 (set (reg:DF 0 r0 [784])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 81 1644 94 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 94 81 91 2 (set (reg:SF 31 s15 [orig:360 sp[2].y ] [360])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])
            (nil))))
(insn 91 94 95 2 (set (reg:SF 30 s14 [orig:358 sp[2].x ] [358])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (nil))))
(insn 95 91 92 2 (set (reg:SF 31 s15 [orig:337 _531 ] [337])
        (minus:SF (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
            (reg:SF 31 s15 [orig:360 sp[2].y ] [360]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (nil))
(insn 92 95 96 2 (set (reg:SF 30 s14 [orig:325 _515 ] [325])
        (minus:SF (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
            (reg:SF 30 s14 [orig:358 sp[2].x ] [358]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (nil))
(insn 96 92 82 2 (set (reg:SF 31 s15 [361])
        (mult:SF (reg:SF 31 s15 [orig:337 _531 ] [337])
            (reg:SF 31 s15 [orig:337 _531 ] [337]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (nil))
(insn 82 96 98 2 (set (reg:SF 35 s19 [orig:334 _528 ] [334])
        (reg:SF 0 r0 [785])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 98 82 1906 2 (set (reg:SF 31 s15 [361])
        (fma:SF (reg:SF 30 s14 [orig:325 _515 ] [325])
            (reg:SF 30 s14 [orig:325 _515 ] [325])
            (reg:SF 31 s15 [361]))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (nil))
(insn 1906 98 84 2 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [361])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 84 1906 85 2 (set (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (reg:SF 35 s19 [orig:334 _528 ] [334])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 85 84 86 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 86 85 87 2 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 87 86 88 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 88 87 89 2 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 89 88 99 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 99 89 101 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 101 99 102 2 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [786])) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 102 101 1647 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1647 102 105 2 (set (reg:DF 0 r0 [787])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 105 1647 123 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 123 105 124 2 (set (reg/f:SI 3 r3 [372])
        (plus:SI (reg/f:SI 5 r5 [747])
            (const_int 1344 [0x540]))) "../System/ray_funkcije.c":383:20 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1344 [0x540])))
        (nil)))
(insn 124 123 117 2 (set (reg:SF 31 s15 [orig:373 sp[3].y ] [373])
        (mem/c:SF (reg/f:SI 3 r3 [372]) [1 sp[3].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                    (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])
        (nil)))
(insn 117 124 118 2 (set (reg/f:SI 3 r3 [367])
        (plus:SI (reg/f:SI 5 r5 [747])
            (const_int 1340 [0x53c]))) "../System/ray_funkcije.c":382:16 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1340 [0x53c])))
        (nil)))
(insn 118 117 125 2 (set (reg:SF 30 s14 [orig:368 sp[3].x ] [368])
        (mem/c:SF (reg/f:SI 3 r3 [367]) [1 sp[3].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                    (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
        (nil)))
(insn 125 118 119 2 (set (reg:SF 31 s15 [orig:116 _7 ] [116])
        (minus:SF (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
            (reg:SF 31 s15 [orig:373 sp[3].y ] [373]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (nil))
(insn 119 125 126 2 (set (reg:SF 30 s14 [orig:114 _3 ] [114])
        (minus:SF (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
            (reg:SF 30 s14 [orig:368 sp[3].x ] [368]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (nil))
(insn 126 119 106 2 (set (reg:SF 31 s15 [374])
        (mult:SF (reg:SF 31 s15 [orig:116 _7 ] [116])
            (reg:SF 31 s15 [orig:116 _7 ] [116]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (nil))
(insn 106 126 128 2 (set (reg:SF 34 s18 [orig:294 _402 ] [294])
        (reg:SF 0 r0 [788])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 128 106 1908 2 (set (reg:SF 31 s15 [374])
        (fma:SF (reg:SF 30 s14 [orig:114 _3 ] [114])
            (reg:SF 30 s14 [orig:114 _3 ] [114])
            (reg:SF 31 s15 [374]))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (nil))
(insn 1908 128 108 2 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [374])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 108 1908 109 2 (set (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (reg:SF 34 s18 [orig:294 _402 ] [294])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 109 108 110 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 110 109 111 2 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 111 110 112 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 112 111 113 2 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 113 112 129 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 129 113 131 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 131 129 132 2 (set (reg:DF 16 s0)
        (reg:DF 0 r0 [789])) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 132 131 1650 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1650 132 135 2 (set (reg:DF 0 r0 [790])
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 135 1650 140 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 140 135 136 2 (set (reg/f:SI 3 r3 [379])
        (plus:SI (reg/f:SI 5 r5 [747])
            (const_int 1368 [0x558]))) "../System/ray_funkcije.c":381:14 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1368 [0x558])))
        (nil)))
(insn 136 140 141 2 (set (reg:SF 37 s21 [orig:121 _12 ] [121])
        (reg:SF 0 r0 [791])) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 141 136 142 2 (set (mem/c:SF (reg/f:SI 3 r3 [379]) [1 sp[3].dist+0 S4 A32])
        (reg:SF 37 s21 [orig:121 _12 ] [121])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 142 141 143 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 143 142 144 2 (var_location:SI i (const_int 4 [0x4])) -1
     (nil))
(debug_insn 144 143 145 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 145 144 146 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 146 145 147 2 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 147 146 148 2 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 148 147 149 2 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 149 148 1837 2 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 1837 149 1838 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 36 s20 [orig:307 _466 ] [307])
            (reg:SF 35 s19 [orig:334 _528 ] [334]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1838 1837 151 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 151 1838 155 2 (set (pc)
        (if_then_else (ungt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 193)
(note 155 151 156 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 156 155 159 3 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 159 156 164 3 NOTE_INSN_DELETED)
(insn 164 159 165 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 165 164 1909 3 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [747])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(insn 1909 165 167 3 (set (reg:SI 0 r0 [868])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 167 1909 169 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 382)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 169 167 175 3 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 175 169 176 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 176 175 177 3 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 5 r5 [747])
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(insn 177 176 178 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [747])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 178 177 180 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 5 r5 [747])
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 180 178 188 3 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 188 180 1910 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1910 188 190 3 (set (reg:SI 1 r1 [869])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 190 1910 191 3 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 5 r5 [747])
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 191 190 193 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 193 191 194 4 147 (nil) [1 uses])
(note 194 193 195 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 195 194 196 4 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 196 195 197 4 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 197 196 198 4 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 198 197 200 4 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 200 198 1835 4 (set (reg:SF 31 s15 [orig:403 sp[1].dist ] [403])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 1835 200 1836 4 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:403 sp[1].dist ] [403])
            (reg:SF 34 s18 [orig:294 _402 ] [294]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1836 1835 202 4 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 202 1836 313 4 (set (pc)
        (if_then_else (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 274)
(code_label 313 202 203 5 154 (nil) [1 uses])
(note 203 313 204 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 204 203 205 5 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 205 204 206 5 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 206 205 207 5 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 207 206 209 5 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 209 207 1833 5 (set (reg:SF 31 s15 [orig:405 sp[2].dist ] [405])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 924 [0x39c]))) [1 sp[2].dist+0 S4 A32])
            (nil))))
(insn 1833 209 1834 5 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 37 s21 [orig:121 _12 ] [121])
            (reg:SF 31 s15 [orig:405 sp[2].dist ] [405]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1834 1833 211 5 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 211 1834 271 5 (set (pc)
        (if_then_else (ge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 232)
(code_label 271 211 212 6 153 (nil) [1 uses])
(note 212 271 213 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 6 (var_location:SI j (const_int 3 [0x3])) -1
     (nil))
(debug_insn 214 213 215 6 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 215 214 216 6 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 216 215 217 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 217 216 218 6 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(debug_insn 218 217 219 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 219 218 220 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 220 219 221 6 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 221 220 222 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 222 221 225 6 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 225 222 226 6 (set (reg:SF 30 s14 [orig:408 sp[1].dist ] [408])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 226 225 1831 6 (set (reg:SF 31 s15 [orig:409 sp[0].dist ] [409])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 36 [0x24]))) [1 sp[0].dist+0 S4 A32])
            (nil))))
(insn 1831 226 1832 6 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:408 sp[1].dist ] [408])
            (reg:SF 31 s15 [orig:409 sp[0].dist ] [409]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1832 1831 228 6 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 228 1832 1711 6 (set (pc)
        (if_then_else (unlt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 355)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 355)
(note 1711 228 1712 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1712 1711 1713 7 (set (pc)
        (label_ref 316)) 284 {*arm_jump}
     (nil)
 -> 316)
(barrier 1713 1712 232)
(code_label 232 1713 233 8 150 (nil) [1 uses])
(note 233 232 234 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 234 233 237 8 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 237 234 242 8 NOTE_INSN_DELETED)
(insn 242 237 243 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 243 242 1911 8 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1911 243 245 8 (set (reg:SI 0 r0 [870])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 245 1911 247 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 412)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 247 245 253 8 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 253 247 254 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 254 253 255 8 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1332 [0x534])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 255 254 256 8 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))
        (nil)))
(call_insn 256 255 258 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 258 256 266 8 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 266 258 1912 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1912 266 268 8 (set (reg:SI 1 r1 [871])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 268 1912 269 8 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1332 [0x534])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 269 268 1714 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1714 269 1715 8 (set (pc)
        (label_ref 271)) 284 {*arm_jump}
     (nil)
 -> 271)
(barrier 1715 1714 274)
(code_label 274 1715 275 9 149 (nil) [1 uses])
(note 275 274 276 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 276 275 279 9 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 279 276 284 9 NOTE_INSN_DELETED)
(insn 284 279 285 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 285 284 1913 9 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1913 285 287 9 (set (reg:SI 0 r0 [872])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 287 1913 289 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 434)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 289 287 295 9 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 295 289 296 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 296 295 297 9 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 297 296 298 9 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 298 297 300 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 300 298 308 9 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 308 300 1914 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1914 308 310 9 (set (reg:SI 1 r1 [873])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 310 1914 311 9 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 311 310 1716 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1716 311 1717 9 (set (pc)
        (label_ref 313)) 284 {*arm_jump}
     (nil)
 -> 313)
(barrier 1717 1716 316)
(code_label 316 1717 317 10 151 (nil) [1 uses])
(note 317 316 318 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 318 317 321 10 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 321 318 326 10 NOTE_INSN_DELETED)
(insn 326 321 327 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 327 326 1915 10 (set (reg:SI 1 r1)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1915 327 329 10 (set (reg:SI 0 r0 [874])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 329 1915 331 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 456)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 331 329 337 10 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 337 331 338 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 338 337 339 10 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 339 338 340 10 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 340 339 342 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 342 340 350 10 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 350 342 1916 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1916 350 352 10 (set (reg:SI 1 r1 [875])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 352 1916 353 10 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 353 352 355 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 355 353 356 11 152 (nil) [1 uses])
(note 356 355 357 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 357 356 358 11 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 358 357 359 11 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 359 358 360 11 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 360 359 363 11 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 363 360 364 11 (set (reg:SF 30 s14 [orig:478 sp[2].dist ] [478])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 924 [0x39c]))) [1 sp[2].dist+0 S4 A32])
            (nil))))
(insn 364 363 1829 11 (set (reg:SF 31 s15 [orig:479 sp[1].dist ] [479])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 1829 364 1830 11 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:478 sp[2].dist ] [478])
            (reg:SF 31 s15 [orig:479 sp[1].dist ] [479]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1830 1829 366 11 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 366 1830 426 11 (set (pc)
        (if_then_else (ge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 387)
(code_label 426 366 367 12 158 (nil) [1 uses])
(note 367 426 368 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 368 367 369 12 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 369 368 370 12 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 370 369 371 12 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 371 370 372 12 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 372 371 373 12 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(debug_insn 373 372 374 12 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 374 373 375 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 375 374 376 12 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 376 375 377 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 377 376 380 12 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 380 377 381 12 (set (reg:SF 30 s14 [orig:482 sp[1].dist ] [482])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 381 380 1827 12 (set (reg:SF 31 s15 [orig:483 sp[0].dist ] [483])
        (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 5 r5 [747])
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 36 [0x24]))) [1 sp[0].dist+0 S4 A32])
            (nil))))
(insn 1827 381 1828 12 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:482 sp[1].dist ] [482])
            (reg:SF 31 s15 [orig:483 sp[0].dist ] [483]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1828 1827 383 12 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (nil))
(jump_insn 383 1828 1718 12 (set (pc)
        (if_then_else (unlt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 468)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 468)
(note 1718 383 1719 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1719 1718 1720 13 (set (pc)
        (label_ref 429)) 284 {*arm_jump}
     (nil)
 -> 429)
(barrier 1720 1719 387)
(code_label 387 1720 388 14 155 (nil) [1 uses])
(note 388 387 389 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 389 388 392 14 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 392 389 397 14 NOTE_INSN_DELETED)
(insn 397 392 398 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 398 397 1917 14 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1917 398 400 14 (set (reg:SI 0 r0 [876])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 400 1917 402 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 486)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 402 400 408 14 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 408 402 409 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 409 408 410 14 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 410 409 411 14 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 411 410 413 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 413 411 421 14 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 421 413 1918 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1918 421 423 14 (set (reg:SI 1 r1 [877])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 423 1918 424 14 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 424 423 1721 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1721 424 1722 14 (set (pc)
        (label_ref 426)) 284 {*arm_jump}
     (nil)
 -> 426)
(barrier 1722 1721 429)
(code_label 429 1722 430 15 156 (nil) [1 uses])
(note 430 429 431 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 431 430 434 15 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(note 434 431 439 15 NOTE_INSN_DELETED)
(insn 439 434 440 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 440 439 1919 15 (set (reg:SI 1 r1)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1919 440 442 15 (set (reg:SI 0 r0 [878])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (nil))
(call_insn 442 1919 444 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_RETURNED (reg/f:SI 508)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 444 442 450 15 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 450 444 451 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 451 450 452 15 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 452 451 453 15 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 453 452 455 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 455 453 463 15 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 463 455 1920 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1920 463 465 15 (set (reg:SI 1 r1 [879])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (nil))
(insn 465 1920 466 15 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 466 465 468 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 468 466 469 16 157 (nil) [1 uses])
(note 469 468 470 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 470 469 471 16 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 471 470 472 16 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 472 471 473 16 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 473 472 474 16 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 474 473 3 16 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(insn 3 474 1550 16 (set (reg/v:SI 11 fp [orig:282 sprite ] [282])
        (const_int 0 [0])) "../System/ray_funkcije.c":400:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1550 3 937 16 (set (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(insn 937 1550 1556 16 (set (reg:SF 34 s18 [777])
        (const_double:SF 2.4e+2 [0x0.fp+8])) "../System/ray_funkcije.c":494:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.4e+2 [0x0.fp+8])
        (nil)))
(note 1556 937 1557 16 NOTE_INSN_DELETED)
(note 1557 1556 4 16 NOTE_INSN_DELETED)
(insn 4 1557 526 16 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-460 S4 A32])
        (reg/v:SI 11 fp [orig:282 sprite ] [282])) "../System/ray_funkcije.c":398:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(note 526 4 559 16 NOTE_INSN_DELETED)
(note 559 526 657 16 NOTE_INSN_DELETED)
(note 657 559 1367 16 NOTE_INSN_DELETED)
(code_label 1367 657 476 17 212 (nil) [1 uses])
(note 476 1367 502 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 502 476 510 17 NOTE_INSN_DELETED)
(note 510 502 477 17 NOTE_INSN_DELETED)
(debug_insn 477 510 478 17 (var_location:SI sprite (reg/v:SI 11 fp [orig:282 sprite ] [282])) -1
     (nil))
(debug_insn 478 477 479 17 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 479 478 480 17 (debug_marker) "../System/ray_funkcije.c":402:3 -1
     (nil))
(debug_insn 480 479 481 17 (var_location:QI draw (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 -1
     (nil))
(debug_insn 481 480 483 17 (debug_marker) "../System/ray_funkcije.c":404:3 -1
     (nil))
(insn 483 481 484 17 (set (reg/v:SF 35 s19 [orig:261 sx ] [261])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])) "../System/ray_funkcije.c":404:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 484 483 485 17 (var_location:SF sx (reg/v:SF 35 s19 [orig:261 sx ] [261])) "../System/ray_funkcije.c":404:9 -1
     (nil))
(debug_insn 485 484 486 17 (debug_marker) "../System/ray_funkcije.c":405:3 -1
     (nil))
(debug_insn 486 485 487 17 (var_location:SF sy (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
            (const_int 12 [0xc])) [0 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":405:9 -1
     (nil))
(debug_insn 487 486 488 17 (debug_marker) "../System/ray_funkcije.c":407:3 -1
     (nil))
(debug_insn 488 487 489 17 (var_location:SF tx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:9 -1
     (nil))
(debug_insn 489 488 490 17 (var_location:SF ty (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:17 -1
     (nil))
(debug_insn 490 489 491 17 (var_location:SF tx_step (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:25 -1
     (nil))
(debug_insn 491 490 492 17 (var_location:SF ty_step (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:38 -1
     (nil))
(debug_insn 492 491 493 17 (debug_marker) "../System/ray_funkcije.c":408:3 -1
     (nil))
(debug_insn 493 492 494 17 (var_location:SI pixel (const_int 0 [0])) "../System/ray_funkcije.c":408:7 -1
     (nil))
(debug_insn 494 493 495 17 (debug_marker) "../System/ray_funkcije.c":409:3 -1
     (nil))
(debug_insn 495 494 496 17 (var_location:QI red (const_int 0 [0])) "../System/ray_funkcije.c":409:11 -1
     (nil))
(debug_insn 496 495 497 17 (var_location:QI green (const_int 0 [0])) "../System/ray_funkcije.c":409:20 -1
     (nil))
(debug_insn 497 496 498 17 (var_location:QI blue (const_int 0 [0])) "../System/ray_funkcije.c":409:31 -1
     (nil))
(debug_insn 498 497 499 17 (debug_marker) "../System/ray_funkcije.c":412:3 -1
     (nil))
(insn 499 498 501 17 (set (reg:SF 31 s15 [orig:529 MEM[base: _419, offset: 12B] ] [529])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":412:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])
        (nil)))
(insn 501 499 500 17 (set (reg:SF 16 s0 [530])
        (minus:SF (reg/v:SF 35 s19 [orig:261 sx ] [261])
            (reg:SF 32 s16 [orig:301 pretmp_425 ] [301]))) "../System/ray_funkcije.c":412:40 761 {*subsf3_vfp}
     (nil))
(insn 500 501 503 17 (set (reg:SF 33 s17 [528])
        (minus:SF (reg:SF 31 s15 [orig:529 MEM[base: _419, offset: 12B] ] [529])
            (reg:SF 33 s17 [orig:300 pretmp_423 ] [300]))) "../System/ray_funkcije.c":412:28 761 {*subsf3_vfp}
     (nil))
(insn 503 500 504 17 (set (reg:SF 16 s0)
        (div:SF (reg:SF 33 s17 [528])
            (reg:SF 16 s0 [530]))) "../System/ray_funkcije.c":412:18 764 {*divsf3_vfp}
     (nil))
(call_insn/u 504 503 505 17 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("atanf") [flags 0x41]  <function_decl 0000000005acb700 atanf>) [0 __builtin_atanf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":412:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("atanf") [flags 0x41]  <function_decl 0000000005acb700 atanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 505 504 506 17 (set (reg/v:SF 33 s17 [orig:247 sangle ] [247])
        (reg:SF 16 s0 [792])) "../System/ray_funkcije.c":412:18 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 506 505 507 17 (var_location:SF sangle (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":412:18 -1
     (nil))
(debug_insn 507 506 509 17 (debug_marker) "../System/ray_funkcije.c":414:3 -1
     (nil))
(call_insn/u 509 507 511 17 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":414:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 511 509 514 17 (set (reg:SF 31 s15 [532])
        (plus:SF (reg:SF 16 s0 [793])
            (reg:SF 32 s16 [orig:301 pretmp_425 ] [301]))) "../System/ray_funkcije.c":414:15 758 {*addsf3_vfp}
     (nil))
(insn 514 511 512 17 (set (reg:SF 32 s16 [535])
        (minus:SF (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
            (reg/v:SF 35 s19 [orig:261 sx ] [261]))) "../System/ray_funkcije.c":414:46 761 {*subsf3_vfp}
     (nil))
(insn 512 514 515 17 (set (reg:SF 31 s15 [533])
        (minus:SF (reg:SF 31 s15 [532])
            (reg/v:SF 35 s19 [orig:261 sx ] [261]))) "../System/ray_funkcije.c":414:30 761 {*subsf3_vfp}
     (nil))
(insn 515 512 513 17 (set (reg:SF 32 s16 [536])
        (abs:SF (reg:SF 32 s16 [535]))) "../System/ray_funkcije.c":414:38 744 {*abssf2_vfp}
     (nil))
(insn 513 515 1825 17 (set (reg:SF 31 s15 [534])
        (abs:SF (reg:SF 31 s15 [533]))) "../System/ray_funkcije.c":414:7 744 {*abssf2_vfp}
     (nil))
(insn 1825 513 1826 17 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [534])
            (reg:SF 32 s16 [536]))) "../System/ray_funkcije.c":414:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1826 1825 517 17 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":414:6 817 {*movcc_vfp}
     (nil))
(jump_insn 517 1826 521 17 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 537)
            (pc))) "../System/ray_funkcije.c":414:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 537)
(note 521 517 532 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 532 521 522 18 NOTE_INSN_DELETED)
(debug_insn 522 532 523 18 (debug_marker) "../System/ray_funkcije.c":415:4 -1
     (nil))
(insn 523 522 524 18 (set (reg:SF 0 r0)
        (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":415:32 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 524 523 1625 18 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:32 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1625 524 528 18 (set (reg:DF 2 r2)
        (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])) "../System/ray_funkcije.c":415:32 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 528 1625 531 18 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:32 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 531 528 533 18 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 533 531 534 18 (set (reg:SF 16 s0)
        (reg:SF 0 r0 [794])) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 534 533 535 18 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>) [0 popraviKot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 535 534 536 18 (set (reg/v:SF 33 s17 [orig:247 sangle ] [247])
        (reg:SF 16 s0 [795])) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 536 535 537 18 (var_location:SF sangle (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":415:13 -1
     (nil))
(code_label 537 536 538 19 159 (nil) [1 uses])
(note 538 537 543 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 543 538 562 19 NOTE_INSN_DELETED)
(note 562 543 563 19 NOTE_INSN_DELETED)
(note 563 562 539 19 NOTE_INSN_DELETED)
(debug_insn 539 563 540 19 (var_location:SF sangle (reg/v:SF 33 s17 [orig:247 sangle ] [247])) -1
     (nil))
(debug_insn 540 539 1921 19 (debug_marker) "../System/ray_funkcije.c":418:3 -1
     (nil))
(insn 1921 540 542 19 (set (reg:SI 3 r3 [880])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) "../System/ray_funkcije.c":418:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 542 1921 544 19 (set (reg:SF 16 s0 [orig:541 angle ] [541])
        (mem/c:SF (reg:SI 3 r3 [880]) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":418:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 740) [1 angle+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
            (nil))))
(insn 544 542 545 19 (set (reg:SF 16 s0)
        (minus:SF (reg:SF 16 s0 [orig:541 angle ] [541])
            (reg/v:SF 33 s17 [orig:247 sangle ] [247]))) "../System/ray_funkcije.c":418:21 761 {*subsf3_vfp}
     (nil))
(call_insn 545 544 552 19 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>) [0 popraviKot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":418:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 552 545 1566 19 (set (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) "../System/ray_funkcije.c":421:9 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1566 552 546 19 (set (reg/v:SF 37 s21 [orig:263 dist ] [263])
        (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])) "../System/ray_funkcije.c":421:9 737 {*thumb2_movsf_vfp}
     (nil))
(insn 546 1566 547 19 (set (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])
        (reg:SF 16 s0 [796])) "../System/ray_funkcije.c":418:21 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 547 546 548 19 (var_location:SF angleDiff (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":418:21 -1
     (nil))
(debug_insn 548 547 1922 19 (debug_marker) "../System/ray_funkcije.c":419:3 -1
     (nil))
(insn 1922 548 550 19 (set (reg:SI 3 r3 [881])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) "../System/ray_funkcije.c":419:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 550 1922 551 19 (set (mem/c:SF (reg:SI 3 r3 [881]) [1 sprite_angle_diff+0 S4 A32])
        (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":419:21 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 551 550 553 19 (debug_marker) "../System/ray_funkcije.c":421:3 -1
     (nil))
(debug_insn 553 551 554 19 (var_location:SF dist (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])) "../System/ray_funkcije.c":421:9 -1
     (nil))
(debug_insn 554 553 555 19 (debug_marker) "../System/ray_funkcije.c":422:3 -1
     (nil))
(insn 555 554 556 19 (set (reg:SF 0 r0)
        (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":422:18 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 556 555 1657 19 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1657 556 1626 19 (set (reg:DF 6 r6 [797])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":422:18 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1626 1657 561 19 (set (reg:DF 2 r2)
        (const_double:DF 5.75958166666666659949669337947852909564971923828e+0 [0x0.b84e7e361f2f28p+3])) "../System/ray_funkcije.c":422:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 561 1626 564 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 564 561 565 19 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [798])
                        (const_int 0 [0]))
                    (label_ref 576)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":422:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 576)
(note 565 564 570 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(note 570 565 571 20 NOTE_INSN_DELETED)
(note 571 570 567 20 NOTE_INSN_DELETED)
(insn 567 571 568 20 (set (reg:DF 2 r2)
        (const_double:DF 5.23598333333333276762289187900023534893989562988e-1 [0x0.860a8a55e82248p+0])) "../System/ray_funkcije.c":422:32 739 {*thumb2_movdf_vfp}
     (nil))
(insn 568 567 569 20 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:138 _37 ] [138])) "../System/ray_funkcije.c":422:32 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 569 568 572 20 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:32 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 572 569 576 20 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [799])
                        (const_int 0 [0]))
                    (label_ref:SI 1161)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":422:32 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1161)
(code_label 576 572 577 21 161 (nil) [1 uses])
(note 577 576 582 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 582 577 578 21 (set (reg:SF 31 s15 [550])
        (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":423:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 578 582 579 21 (set (reg/f:SI 3 r3 [547])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":423:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 579 578 1923 21 (set (reg:SI 10 r10 [orig:139 Blocksize.77_39 ] [139])
        (mem/c:SI (reg/f:SI 3 r3 [547]) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":423:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(insn 1923 579 580 21 (set (reg:SI 30 s14 [orig:139 Blocksize.77_39 ] [139])
        (reg:SI 10 r10 [orig:139 Blocksize.77_39 ] [139])) "../System/ray_funkcije.c":423:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 580 1923 581 21 (set (reg:SF 29 s13 [548])
        (float:SF (reg:SI 30 s14 [orig:139 Blocksize.77_39 ] [139]))) "../System/ray_funkcije.c":423:13 809 {*floatsisf2_vfp}
     (nil))
(insn 581 580 1823 21 (set (reg:SF 30 s14 [549])
        (div:SF (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
            (reg:SF 29 s13 [548]))) "../System/ray_funkcije.c":423:13 764 {*divsf3_vfp}
     (nil))
(insn 1823 581 1824 21 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [549])
            (reg:SF 31 s15 [550]))) "../System/ray_funkcije.c":423:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1824 1823 584 21 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":423:5 817 {*movcc_vfp}
     (nil))
(jump_insn 584 1824 588 21 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1161)
            (pc))) "../System/ray_funkcije.c":423:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 783831532 (nil))
 -> 1161)
(note 588 584 589 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 589 588 590 22 (var_location:QI d (const_int 0 [0])) -1
     (nil))
(debug_insn 590 589 1821 22 (debug_marker) "../System/ray_funkcije.c":426:24 -1
     (nil))
(insn 1821 590 1822 22 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":426:4 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1822 1821 593 22 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":426:4 817 {*movcc_vfp}
     (nil))
(jump_insn 593 1822 597 22 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1723)
            (pc))) "../System/ray_funkcije.c":426:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 1723)
(note 597 593 598 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 23 (set (reg:SF 16 s0)
        (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":427:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 599 598 600 23 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":427:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 600 599 603 23 (set (reg:SF 35 s19 [orig:142 _42 ] [142])
        (reg:SF 16 s0 [800])) "../System/ray_funkcije.c":427:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 603 600 604 23 (set (reg:SF 16 s0)
        (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":428:9 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 604 603 1924 23 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":428:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1924 604 602 23 (set (reg:SI 3 r3 [883])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":427:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 602 1924 1925 23 (set (reg:SF 27 s11 [orig:143 py.78_44 ] [143])
        (mem/c:SF (reg:SI 3 r3 [883]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":427:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 1925 602 607 23 (set (reg:SI 3 r3 [884])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":428:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 607 1925 6 23 (set (reg:SF 28 s12 [orig:148 px.80_50 ] [148])
        (mem/c:SF (reg:SI 3 r3 [884]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":428:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 6 607 1558 23 (set (reg:SF 29 s13 [orig:154 _56 ] [154])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":426:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1558 6 5 23 (set (reg/f:SI 8 r8 [744])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 5 1558 618 23 (set (reg/v:SI 1 r1 [orig:264 d ] [264])
        (const_int 0 [0])) "../System/ray_funkcije.c":426:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 618 5 632 23 (set (reg:SI 0 r0 [560])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(code_label 632 618 608 24 167 (nil) [1 uses])
(note 608 632 619 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 619 608 623 24 NOTE_INSN_DELETED)
(note 623 619 609 24 NOTE_INSN_DELETED)
(debug_insn 609 623 610 24 (var_location:QI d (reg:QI 1 r1 [orig:264 d ] [264])) -1
     (nil))
(debug_insn 610 609 626 24 (debug_marker) "../System/ray_funkcije.c":427:5 -1
     (nil))
(debug_insn 626 610 1926 24 (debug_marker) "../System/ray_funkcije.c":426:34 -1
     (nil))
(insn 1926 626 611 24 (set (reg:SF 31 s15 [orig:144 _45 ] [144])
        (reg:SF 27 s11 [orig:143 py.78_44 ] [143])) "../System/ray_funkcije.c":427:24 737 {*thumb2_movsf_vfp}
     (nil))
(insn 611 1926 1928 24 (set (reg:SF 31 s15 [orig:144 _45 ] [144])
        (fma:SF (reg:SF 35 s19 [orig:142 _42 ] [142])
            (reg:SF 29 s13 [orig:154 _56 ] [154])
            (reg:SF 31 s15 [orig:144 _45 ] [144]))) "../System/ray_funkcije.c":427:24 788 {fmasf4}
     (nil))
(insn 1928 611 614 24 (set (reg:SF 30 s14 [orig:149 _51 ] [149])
        (reg:SF 28 s12 [orig:148 px.80_50 ] [148])) "../System/ray_funkcije.c":428:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 614 1928 627 24 (set (reg:SF 30 s14 [orig:149 _51 ] [149])
        (fma:SF (reg:SF 16 s0 [orig:147 _48 ] [147])
            (reg:SF 29 s13 [orig:154 _56 ] [154])
            (reg:SF 30 s14 [orig:149 _51 ] [149]))) "../System/ray_funkcije.c":428:7 788 {fmasf4}
     (nil))
(insn 627 614 628 24 (set (reg:SI 1 r1 [564])
        (plus:SI (reg/v:SI 1 r1 [orig:264 d ] [264])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":426:36 7 {*arm_addsi3}
     (nil))
(insn 628 627 629 24 (set (reg/v:SI 1 r1 [orig:264 d ] [264])
        (zero_extend:SI (reg:QI 1 r1 [564]))) "../System/ray_funkcije.c":426:36 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 629 628 630 24 (var_location:QI d (reg:QI 1 r1 [orig:264 d ] [264])) -1
     (nil))
(debug_insn 630 629 612 24 (debug_marker) "../System/ray_funkcije.c":426:24 -1
     (nil))
(insn 612 630 1930 24 (set (reg:SI 31 s15 [554])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:144 _45 ] [144])))) "../System/ray_funkcije.c":427:14 805 {*truncsisf2_vfp}
     (nil))
(insn 1930 612 613 24 (set (reg:SI 3 r3 [554])
        (reg:SI 31 s15 [554])) "../System/ray_funkcije.c":427:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 613 1930 620 24 (set (reg:SI 3 r3 [orig:146 _47 ] [146])
        (div:SI (reg:SI 3 r3 [554])
            (reg:SI 10 r10 [orig:139 Blocksize.77_39 ] [139]))) "../System/ray_funkcije.c":427:44 162 {divsi3}
     (nil))
(insn 620 613 1931 24 (set (reg:SI 3 r3 [561])
        (plus:SI (mult:SI (reg:SI 0 r0 [560])
                (reg:SI 3 r3 [orig:146 _47 ] [146]))
            (reg/f:SI 8 r8 [744]))) "../System/ray_funkcije.c":427:57 57 {*mla}
     (nil))
(insn 1931 620 631 24 (set (reg/v:SI 31 s15 [orig:264 d ] [264])
        (reg/v:SI 1 r1 [orig:264 d ] [264])) "../System/ray_funkcije.c":426:26 728 {*thumb2_movsi_vfp}
     (nil))
(insn 631 1931 616 24 (set (reg:SF 29 s13 [orig:154 _56 ] [154])
        (float:SF (reg/v:SI 31 s15 [orig:264 d ] [264]))) "../System/ray_funkcije.c":426:26 809 {*floatsisf2_vfp}
     (nil))
(insn 616 631 1932 24 (set (reg:SI 31 s15 [556])
        (fix:SI (fix:SF (reg:SF 30 s14 [orig:149 _51 ] [149])))) "../System/ray_funkcije.c":427:59 805 {*truncsisf2_vfp}
     (nil))
(insn 1932 616 617 24 (set (reg:SI 2 r2 [556])
        (reg:SI 31 s15 [556])) "../System/ray_funkcije.c":427:59 728 {*thumb2_movsi_vfp}
     (nil))
(insn 617 1932 622 24 (set (reg:SI 2 r2 [558])
        (div:SI (reg:SI 2 r2 [556])
            (reg:SI 10 r10 [orig:139 Blocksize.77_39 ] [139]))) "../System/ray_funkcije.c":428:27 162 {divsi3}
     (nil))
(insn 622 617 624 24 (set (reg:SI 3 r3 [orig:563 map[_47][_53] ] [563])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 3 r3 [561])
                    (reg:SI 2 r2 [558])) [0 map[_47][_53]+0 S1 A8]))) "../System/ray_funkcije.c":427:8 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 624 622 625 24 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:563 map[_47][_53] ] [563])
                        (const_int 0 [0]))
                    (label_ref:SI 1452)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":427:8 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 1452)
(note 625 624 1819 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 1819 625 1820 25 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 29 s13 [orig:154 _56 ] [154])
            (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738]))) "../System/ray_funkcije.c":426:4 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1820 1819 634 25 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":426:4 817 {*movcc_vfp}
     (nil))
(jump_insn 634 1820 1444 25 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 632)
            (pc))) "../System/ray_funkcije.c":426:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1014686028 (nil))
 -> 632)
(note 1444 634 9 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 9 1444 1724 26 (set (reg/v:SI 8 r8 [orig:246 draw ] [246])
        (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1724 9 1725 26 (set (pc)
        (label_ref 635)) 284 {*arm_jump}
     (nil)
 -> 635)
(barrier 1725 1724 1723)
(code_label 1723 1725 1447 27 248 (nil) [1 uses])
(note 1447 1723 8 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 8 1447 1726 27 (set (reg/v:SI 8 r8 [orig:246 draw ] [246])
        (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1726 8 1727 27 (set (pc)
        (label_ref 635)) 284 {*arm_jump}
     (nil)
 -> 635)
(barrier 1727 1726 1452)
(code_label 1452 1727 1451 28 216 (nil) [1 uses])
(note 1451 1452 7 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 7 1451 635 28 (set (reg/v:SI 8 r8 [orig:246 draw ] [246])
        (const_int 0 [0])) "../System/ray_funkcije.c":429:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 635 7 636 29 165 (nil) [2 uses])
(note 636 635 649 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 649 636 660 29 NOTE_INSN_DELETED)
(note 660 649 661 29 NOTE_INSN_DELETED)
(note 661 660 637 29 NOTE_INSN_DELETED)
(debug_insn 637 661 638 29 (var_location:QI draw (reg:QI 8 r8 [orig:246 draw ] [246])) -1
     (nil))
(debug_insn 638 637 647 29 (debug_marker) "../System/ray_funkcije.c":435:4 -1
     (nil))
(insn 647 638 639 29 (set (reg:SF 16 s0)
        (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":439:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 639 647 1584 29 (set (reg:SI 3 r3 [orig:155 _57 ] [155])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 24 [0x18])) [0 MEM[base: _419, offset: 24B]+0 S1 A32]))) "../System/ray_funkcije.c":435:18 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1584 639 1585 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:155 _57 ] [155])
            (const_int 0 [0]))) "../System/ray_funkcije.c":436:10 268 {*arm_cmpsi_insn}
     (nil))
(insn 1585 1584 645 29 (set (reg/v:SI 8 r8 [orig:246 draw ] [246])
        (if_then_else:SI (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (reg/v:SI 8 r8 [orig:246 draw ] [246])
            (const_int 0 [0]))) "../System/ray_funkcije.c":436:10 986 {*thumb2_movsicc_insn}
     (nil))
(debug_insn 645 1585 646 29 (var_location:QI draw (reg:QI 8 r8 [orig:246 draw ] [246])) -1
     (nil))
(debug_insn 646 645 648 29 (debug_marker) "../System/ray_funkcije.c":439:4 -1
     (nil))
(call_insn/u 648 646 650 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":439:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 650 648 651 29 (set (reg/v:SF 36 s20 [orig:265 factor ] [265])
        (mult:SF (reg:SF 16 s0 [802])
            (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738]))) "../System/ray_funkcije.c":439:10 767 {*mulsf3_vfp}
     (nil))
(debug_insn 651 650 652 29 (var_location:SF factor (reg/v:SF 36 s20 [orig:265 factor ] [265])) "../System/ray_funkcije.c":439:10 -1
     (nil))
(debug_insn 652 651 653 29 (debug_marker) "../System/ray_funkcije.c":440:4 -1
     (nil))
(insn 653 652 654 29 (set (reg:SF 0 r0)
        (reg/v:SF 36 s20 [orig:265 factor ] [265])) "../System/ray_funkcije.c":440:14 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 654 653 1627 29 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":440:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1627 654 659 29 (set (reg:DF 2 r2)
        (const_double:DF 2.00000000000000011102230246251565404236316680908e-1 [0x0.ccccccccccccdp-2])) "../System/ray_funkcije.c":440:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 659 1627 662 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":440:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 662 659 663 29 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [803])
                        (const_int 0 [0]))
                    (label_ref:SI 1456)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":440:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1456)
(note 663 662 664 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 664 663 665 30 (var_location:SF factor (reg/v:SF 36 s20 [orig:265 factor ] [265])) -1
     (nil))
(debug_insn 665 664 666 30 (debug_marker) "../System/ray_funkcije.c":441:4 -1
     (nil))
(insn 666 665 667 30 (set (reg:SF 31 s15 [568])
        (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":441:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 667 666 668 30 (set (reg/v:SF 39 s23 [orig:249 scaling ] [249])
        (div:SF (reg:SF 31 s15 [568])
            (reg/v:SF 36 s20 [orig:265 factor ] [265]))) "../System/ray_funkcije.c":441:10 764 {*divsf3_vfp}
     (expr_list:REG_EQUAL (div:SF (const_double:SF 1.5e+1 [0x0.fp+4])
            (reg/v:SF 36 s20 [orig:265 factor ] [265]))
        (nil)))
(debug_insn 668 667 669 30 (var_location:SF scaling (reg/v:SF 39 s23 [orig:249 scaling ] [249])) "../System/ray_funkcije.c":441:10 -1
     (nil))
(debug_insn 669 668 670 30 (debug_marker) "../System/ray_funkcije.c":442:4 -1
     (nil))
(insn 670 669 1817 30 (set (reg:SF 31 s15 [569])
        (const_double:SF 7.0e+0 [0x0.ep+3])) "../System/ray_funkcije.c":442:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.0e+0 [0x0.ep+3])
        (nil)))
(insn 1817 670 1818 30 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 39 s23 [orig:249 scaling ] [249])
            (reg:SF 31 s15 [569]))) "../System/ray_funkcije.c":442:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1818 1817 672 30 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":442:7 817 {*movcc_vfp}
     (nil))
(jump_insn 672 1818 673 30 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1460)
            (pc))) "../System/ray_funkcije.c":442:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 4 (nil))
 -> 1460)
(note 673 672 674 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 674 673 1815 31 (debug_marker) "../System/ray_funkcije.c":443:9 -1
     (nil))
(insn 1815 674 1816 31 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 36 s20 [orig:265 factor ] [265])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":443:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1816 1815 677 31 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":443:11 817 {*movcc_vfp}
     (nil))
(jump_insn 677 1816 678 31 (set (pc)
        (if_then_else (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1464)
            (pc))) "../System/ray_funkcije.c":443:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 1464)
(note 678 677 679 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 32 (set (reg:SF 31 s15 [571])
        (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3])) "../System/ray_funkcije.c":451:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3])
        (nil)))
(insn 680 679 1728 32 (set (reg:SF 36 s20 [orig:302 _440 ] [302])
        (mult:SF (reg/v:SF 36 s20 [orig:265 factor ] [265])
            (reg:SF 31 s15 [571]))) "../System/ray_funkcije.c":451:12 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg/v:SF 36 s20 [orig:265 factor ] [265])
            (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3]))
        (nil)))
(jump_insn 1728 680 1729 32 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1729 1728 1456)
(code_label 1456 1729 1455 33 217 (nil) [1 uses])
(note 1455 1456 13 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 13 1455 14 33 (set (reg:SF 36 s20 [orig:302 _440 ] [302])
        (const_double:SF 1.4285714924335479736328125e-1 [0x0.924925p-2])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 14 13 1730 33 (set (reg/v:SF 39 s23 [orig:249 scaling ] [249])
        (const_double:SF 7.0e+0 [0x0.ep+3])) "../System/ray_funkcije.c":442:29 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1730 14 1731 33 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1731 1730 1460)
(code_label 1460 1731 1459 34 218 (nil) [1 uses])
(note 1459 1460 11 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 11 1459 12 34 (set (reg:SF 36 s20 [orig:302 _440 ] [302])
        (const_double:SF 1.4285714924335479736328125e-1 [0x0.924925p-2])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 12 11 1732 34 (set (reg/v:SF 39 s23 [orig:249 scaling ] [249])
        (reg:SF 31 s15 [569])) "../System/ray_funkcije.c":442:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 7.0e+0 [0x0.ep+3])
        (nil)))
(jump_insn 1732 12 1733 34 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1733 1732 1464)
(code_label 1464 1733 1463 35 219 (nil) [1 uses])
(note 1463 1464 16 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 16 1463 15 35 (set (reg/v:SF 39 s23 [orig:249 scaling ] [249])
        (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])) "../System/ray_funkcije.c":443:34 737 {*thumb2_movsf_vfp}
     (nil))
(insn 15 16 681 35 (set (reg:SF 36 s20 [orig:302 _440 ] [302])
        (const_double:SF 5.0e+0 [0x0.ap+3])) 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 681 15 682 36 169 (nil) [3 uses])
(note 682 681 697 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 697 682 698 36 NOTE_INSN_DELETED)
(note 698 697 683 36 NOTE_INSN_DELETED)
(debug_insn 683 698 684 36 (var_location:SF factor (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 684 683 685 36 (var_location:SF scaling (reg/v:SF 39 s23 [orig:249 scaling ] [249])) -1
     (nil))
(debug_insn 685 684 686 36 (debug_marker) "../System/ray_funkcije.c":445:4 -1
     (nil))
(insn 686 685 687 36 (set (reg:SI 10 r10 [orig:158 _60 ] [158])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":445:50 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 687 686 688 36 (var_location:SI D#52 (zero_extend:SI (reg:HI 10 r10 [orig:158 _60 ] [158]))) "../System/ray_funkcije.c":445:50 -1
     (nil))
(debug_insn 688 687 689 36 (var_location:SF D#51 (float:SF (debug_expr:SI D#52))) "../System/ray_funkcije.c":445:38 -1
     (nil))
(debug_insn 689 688 690 36 (var_location:SF D#50 (mult:SF (debug_expr:SF D#51)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) -1
     (nil))
(debug_insn 690 689 691 36 (var_location:SF D#49 (mult:SF (reg/v:SF 39 s23 [orig:249 scaling ] [249])
        (debug_expr:SF D#50))) "../System/ray_funkcije.c":445:57 -1
     (nil))
(debug_insn 691 690 692 36 (var_location:SF sy (minus:SF (const_double:SF 1.2e+2 [0x0.fp+7])
        (debug_expr:SF D#49))) "../System/ray_funkcije.c":445:10 -1
     (nil))
(debug_insn 692 691 694 36 (debug_marker) "../System/ray_funkcije.c":446:4 -1
     (nil))
(insn 694 692 695 36 (set (reg:DF 2 r2)
        (const_double:DF 5.23598333333333276762289187900023534893989562988e-1 [0x0.860a8a55e82248p+0])) "../System/ray_funkcije.c":446:7 739 {*thumb2_movdf_vfp}
     (nil))
(insn 695 694 696 36 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:138 _37 ] [138])) "../System/ray_funkcije.c":446:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 696 695 699 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":446:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 699 696 703 36 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [804])
                        (const_int 0 [0]))
                    (label_ref:SI 714)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":446:7 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 714)
(note 703 699 704 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 704 703 706 37 (debug_marker) "../System/ray_funkcije.c":447:5 -1
     (nil))
(insn 706 704 705 37 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:138 _37 ] [138])) "../System/ray_funkcije.c":447:15 739 {*thumb2_movdf_vfp}
     (nil))
(insn 705 706 707 37 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":447:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 707 705 710 37 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":447:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 710 707 711 37 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":447:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 711 710 713 37 (set (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])
        (reg:SF 0 r0 [805])) "../System/ray_funkcije.c":447:15 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 713 711 714 37 (var_location:SF angleDiff (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":447:15 -1
     (nil))
(code_label 714 713 715 38 170 (nil) [1 uses])
(note 715 714 728 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(note 728 715 740 38 NOTE_INSN_DELETED)
(note 740 728 743 38 NOTE_INSN_DELETED)
(note 743 740 716 38 NOTE_INSN_DELETED)
(debug_insn 716 743 717 38 (var_location:SF angleDiff (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) -1
     (nil))
(debug_insn 717 716 722 38 (debug_marker) "../System/ray_funkcije.c":448:4 -1
     (nil))
(insn 722 717 723 38 (set (reg:SF 20 s4)
        (reg/v:SF 9 r9 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 723 722 724 38 (set (reg:SF 19 s3)
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 724 723 725 38 (set (reg:SF 18 s2)
        (const_double:SF 1.0471966266632080078125e+0 [0x0.860a8ap+1])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 725 724 726 38 (set (reg:SF 17 s1)
        (const_double:SF 5.2359831333160400390625e-1 [0x0.860a8ap+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 726 725 727 38 (set (reg:SF 16 s0)
        (const_double:SF -5.2359831333160400390625e-1 [-0x0.860a8ap+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 727 726 1666 38 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("map_range") [flags 0x41]  <function_decl 0000000005e4c600 map_range>) [0 map_range S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("map_range") [flags 0x41]  <function_decl 0000000005e4c600 map_range>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (expr_list:SF (use (reg:SF 17 s1))
                (expr_list:SF (use (reg:SF 18 s2))
                    (expr_list:SF (use (reg:SF 19 s3))
                        (expr_list:SF (use (reg:SF 20 s4))
                            (nil))))))))
(insn 1666 727 729 38 (set (reg:SF 0 r0 [806])
        (reg:SF 16 s0)) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 729 1666 1933 38 (set (reg:SI 3 r3 [orig:580 MEM[base: _419, offset: 20B] ] [580])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":449:51 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1933 729 730 38 (set (reg:SI 35 s19 [orig:580 MEM[base: _419, offset: 20B] ] [580])
        (reg:SI 3 r3 [orig:580 MEM[base: _419, offset: 20B] ] [580])) "../System/ray_funkcije.c":449:51 728 {*thumb2_movsi_vfp}
     (nil))
(insn 730 1933 731 38 (set (reg:SF 35 s19 [581])
        (float:SF (reg:SI 35 s19 [orig:580 MEM[base: _419, offset: 20B] ] [580]))) "../System/ray_funkcije.c":449:39 809 {*floatsisf2_vfp}
     (nil))
(insn 731 730 733 38 (set (reg:SF 35 s19 [orig:168 _72 ] [168])
        (mult:SF (reg:SF 35 s19 [581])
            (reg/v:SF 39 s23 [orig:249 scaling ] [249]))) "../System/ray_funkcije.c":449:39 767 {*mulsf3_vfp}
     (nil))
(call_insn/u 733 731 735 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 735 733 737 38 (set (reg:DF 2 r2)
        (const_double:DF 2.29183311635191131472311099059879779815673828125e+2 [0x0.e52eed82e61f48p+8])) "../System/ray_funkcije.c":449:18 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 737 735 739 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 739 737 738 38 (set (reg:SF 31 s15 [585])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":449:58 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 738 739 741 38 (set (reg:DF 6 r6 [583])
        (reg:DF 0 r0 [807])) "../System/ray_funkcije.c":449:18 739 {*thumb2_movdf_vfp}
     (nil))
(insn 741 738 1934 38 (set (reg:SF 31 s15 [891])
        (mult:SF (reg:SF 35 s19 [orig:168 _72 ] [168])
            (reg:SF 31 s15 [585]))) "../System/ray_funkcije.c":449:58 767 {*mulsf3_vfp}
     (nil))
(insn 1934 741 742 38 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [891])) "../System/ray_funkcije.c":449:58 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 742 1934 1668 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:58 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1668 742 745 38 (set (reg:DF 2 r2 [808])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":449:58 739 {*thumb2_movdf_vfp}
     (nil))
(insn 745 1668 746 38 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [583])) "../System/ray_funkcije.c":449:29 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 746 745 749 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:29 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 749 746 750 38 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 750 749 752 38 (set (reg/v:SF 38 s22 [orig:267 sx ] [267])
        (reg:SF 0 r0 [809])) "../System/ray_funkcije.c":448:10 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 752 750 753 38 (var_location:SF sx (reg/v:SF 38 s22 [orig:267 sx ] [267])) "../System/ray_funkcije.c":448:10 -1
     (nil))
(debug_insn 753 752 766 38 (debug_marker) "../System/ray_funkcije.c":450:4 -1
     (nil))
(insn 766 753 754 38 (set (reg:SF 31 s15 [592])
        (const_double:SF 1.2e+2 [0x0.fp+7])) "../System/ray_funkcije.c":455:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.2e+2 [0x0.fp+7])
        (nil)))
(insn 754 766 755 38 (set (reg/f:SI 3 r3 [589])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) "../System/ray_funkcije.c":450:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))
(insn 755 754 756 38 (set (mem/c:SF (reg/f:SI 3 r3 [589]) [1 sprite_x+0 S4 A32])
        (reg/v:SF 38 s22 [orig:267 sx ] [267])) "../System/ray_funkcije.c":450:13 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 756 755 757 38 (debug_marker) "../System/ray_funkcije.c":451:4 -1
     (nil))
(debug_insn 757 756 758 38 (var_location:SF D#41 (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
        (reg/v:SF 39 s23 [orig:249 scaling ] [249]))) "../System/ray_funkcije.c":451:12 -1
     (nil))
(debug_insn 758 757 759 38 (var_location:SF tx_step (debug_expr:SF D#41)) "../System/ray_funkcije.c":451:12 -1
     (nil))
(debug_insn 759 758 760 38 (debug_marker) "../System/ray_funkcije.c":452:4 -1
     (nil))
(debug_insn 760 759 761 38 (var_location:SF ty_step (debug_expr:SF D#41)) "../System/ray_funkcije.c":452:12 -1
     (nil))
(debug_insn 761 760 762 38 (debug_marker) "../System/ray_funkcije.c":453:4 -1
     (nil))
(insn 762 761 764 38 (set (reg/f:SI 3 r3 [590])
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) "../System/ray_funkcije.c":453:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])
        (nil)))
(insn 764 762 765 38 (set (mem/c:QI (reg/f:SI 3 r3 [590]) [0 sprite_draw+0 S1 A8])
        (reg:QI 8 r8 [orig:246 draw ] [246])) "../System/ray_funkcije.c":453:16 263 {*arm_movqi_insn}
     (nil))
(debug_insn 765 764 1813 38 (debug_marker) "../System/ray_funkcije.c":455:4 -1
     (nil))
(insn 1813 765 1814 38 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 38 s22 [orig:267 sx ] [267])
            (reg:SF 31 s15 [592]))) "../System/ray_funkcije.c":455:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1814 1813 768 38 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":455:7 817 {*movcc_vfp}
     (nil))
(jump_insn 768 1814 772 38 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 798)
            (pc))) "../System/ray_funkcije.c":455:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 798)
(note 772 768 773 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 1811 39 (set (reg:SF 35 s19 [593])
        (plus:SF (reg:SF 35 s19 [orig:168 _72 ] [168])
            (reg/v:SF 38 s22 [orig:267 sx ] [267]))) "../System/ray_funkcije.c":456:11 758 {*addsf3_vfp}
     (nil))
(insn 1811 773 1812 39 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 35 s19 [593])
            (reg:SF 31 s15 [592]))) "../System/ray_funkcije.c":456:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1812 1811 776 39 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":456:5 817 {*movcc_vfp}
     (nil))
(jump_insn 776 1812 780 39 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 798)
            (pc))) "../System/ray_funkcije.c":456:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 798)
(note 780 776 781 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 40 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:246 draw ] [246])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":457:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 782 781 783 40 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1405)
            (pc))) "../System/ray_funkcije.c":457:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 1405)
(note 783 782 786 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 786 783 787 41 (set (reg:SI 3 r3 [orig:595 MEM[base: _419, offset: 28B] ] [595])
        (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":457:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
        (nil)))
(insn 787 786 788 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:595 MEM[base: _419, offset: 28B] ] [595])
            (const_int 0 [0]))) "../System/ray_funkcije.c":457:18 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 788 787 789 41 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1396)
            (pc))) "../System/ray_funkcije.c":457:18 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 1396)
(note 789 788 790 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 790 789 792 42 (debug_marker) "../System/ray_funkcije.c":459:6 -1
     (nil))
(insn 792 790 793 42 (set (mem:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg/v:SI 8 r8 [orig:246 draw ] [246])) "../System/ray_funkcije.c":459:21 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 793 792 794 42 (debug_marker) "../System/ray_funkcije.c":463:5 -1
     (nil))
(debug_insn 794 793 795 42 (var_location:QI indicate_led (const_int 1 [0x1])) -1
     (nil))
(debug_insn 795 794 17 42 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(insn 17 795 1734 42 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-460 S4 A32])
        (reg/v:SI 8 r8 [orig:246 draw ] [246])) "../System/ray_funkcije.c":463:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1734 17 1735 42 (set (pc)
        (label_ref 807)) 284 {*arm_jump}
     (nil)
 -> 807)
(barrier 1735 1734 798)
(code_label 798 1735 799 43 172 (nil) [2 uses])
(note 799 798 800 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(debug_insn 800 799 801 43 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 801 800 802 43 (set (reg:SI 3 r3 [597])
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 802 801 803 43 (set (mem:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 3 r3 [597])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 803 802 804 43 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 804 803 805 43 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(insn 805 804 806 43 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:246 draw ] [246])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":467:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 806 805 1573 43 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 807)
            (pc))) "../System/ray_funkcije.c":467:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1145324 (nil))
 -> 807)
(note 1573 806 1559 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 1559 1573 1736 44 (set (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1736 1559 1737 44 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1737 1736 807)
(code_label 807 1737 808 45 177 (nil) [3 uses])
(note 808 807 809 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(note 809 808 810 45 NOTE_INSN_DELETED)
(note 810 809 811 45 NOTE_INSN_DELETED)
(note 811 810 1936 45 NOTE_INSN_DELETED)
(insn 1936 811 812 45 (set (reg:SI 31 s15 [600])
        (reg:SI 10 r10 [orig:158 _60 ] [158])) "../System/ray_funkcije.c":445:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 812 1936 813 45 (set (reg:SF 31 s15 [600])
        (mult:SF (float:SF (reg:SI 31 s15 [600]))
            (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":445:10 832 {*combine_vcvt_f32_s32}
     (nil))
(insn 813 812 821 45 (set (reg:SF 40 s24 [602])
        (const_double:SF 1.2e+2 [0x0.fp+7])) "../System/ray_funkcije.c":445:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.2e+2 [0x0.fp+7])
        (nil)))
(insn 821 813 814 45 (set (reg:SF 16 s0)
        (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])) "../System/ray_funkcije.c":469:17 737 {*thumb2_movsf_vfp}
     (nil))
(insn 814 821 815 45 (set (reg/v:SF 40 s24 [orig:266 sy ] [266])
        (fma:SF (neg:SF (reg/v:SF 39 s23 [orig:249 scaling ] [249]))
            (reg:SF 31 s15 [600])
            (reg:SF 40 s24 [602]))) "../System/ray_funkcije.c":445:10 791 {*fmsubsf4}
     (nil))
(debug_insn 815 814 816 45 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 816 815 817 45 (debug_marker) "../System/ray_funkcije.c":468:5 -1
     (nil))
(insn 817 816 819 45 (set (reg:SI 3 r3 [603])
        (const_int 1 [0x1])) "../System/ray_funkcije.c":468:22 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 819 817 820 45 (set (mem:QI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 440 [0x1b8])) [0 MEM[base: _419, offset: 440B]+0 S1 A32])
        (reg:QI 3 r3 [603])) "../System/ray_funkcije.c":468:22 263 {*arm_movqi_insn}
     (nil))
(debug_insn 820 819 822 45 (debug_marker) "../System/ray_funkcije.c":469:5 -1
     (nil))
(call_insn 822 820 823 45 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":469:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 823 822 824 45 (set (reg/v:SF 47 s31 [orig:268 vis ] [268])
        (reg:SF 16 s0 [810])) "../System/ray_funkcije.c":469:17 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 824 823 825 45 (var_location:SF vis (reg/v:SF 47 s31 [orig:268 vis ] [268])) "../System/ray_funkcije.c":469:17 -1
     (nil))
(debug_insn 825 824 826 45 (debug_marker) "../System/ray_funkcije.c":470:5 -1
     (nil))
(debug_insn 826 825 827 45 (var_location:SF add_red (const_double:SF 7.5e+1 [0x0.96p+7])) "../System/ray_funkcije.c":470:11 -1
     (nil))
(debug_insn 827 826 828 45 (debug_marker) "../System/ray_funkcije.c":472:5 -1
     (nil))
(debug_insn 828 827 829 45 (var_location:SI countx (const_int 0 [0])) "../System/ray_funkcije.c":472:9 -1
     (nil))
(debug_insn 829 828 830 45 (var_location:SI county (const_int 0 [0])) "../System/ray_funkcije.c":472:21 -1
     (nil))
(debug_insn 830 829 831 45 (debug_marker) "../System/ray_funkcije.c":473:5 -1
     (nil))
(debug_insn 831 830 832 45 (debug_marker) "../System/ray_funkcije.c":473:10 -1
     (nil))
(debug_insn 832 831 833 45 (var_location:SF y (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 833 832 834 45 (var_location:SI county (const_int 0 [0])) -1
     (nil))
(debug_insn 834 833 835 45 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 835 834 1938 45 (set (reg:SI 1 r1 [orig:304 prephitmp_453 ] [304])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":473:37 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1938 835 836 45 (set (reg:SI 31 s15 [orig:304 prephitmp_453 ] [304])
        (reg:SI 1 r1 [orig:304 prephitmp_453 ] [304])) "../System/ray_funkcije.c":473:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 836 1938 1809 45 (set (reg:SF 31 s15 [orig:741 _193 ] [741])
        (float:SF (reg:SI 31 s15 [orig:304 prephitmp_453 ] [304]))) "../System/ray_funkcije.c":473:25 809 {*floatsisf2_vfp}
     (nil))
(insn 1809 836 1810 45 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:741 _193 ] [741])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1810 1809 839 45 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (nil))
(jump_insn 839 1810 843 45 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1738)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 1738)
(note 843 839 22 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 22 843 906 46 (set (reg/v:SF 43 s27 [orig:297 y ] [297])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":473:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 906 22 20 46 (set (reg:SF 44 s28 [769])
        (const_double:SF 1.8e+2 [0x0.b4p+8])) "../System/ray_funkcije.c":485:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 20 906 912 46 (set (reg:SF 46 s30 [orig:770 _480 ] [770])
        (const_double:SF 2.55e+2 [0x0.ffp+8])) 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.55e+2 [0x0.ffp+8])
        (nil)))
(insn 912 20 844 46 (set (reg:SF 45 s29 [771])
        (const_double:SF 7.5e+1 [0x0.96p+7])) "../System/ray_funkcije.c":485:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.5e+1 [0x0.96p+7])
        (nil)))
(insn 844 912 1939 46 (set (reg:SI 3 r3 [orig:310 prephitmp_470 ] [310])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":475:38 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1939 844 1560 46 (set (reg:SI 30 s14 [orig:310 prephitmp_470 ] [310])
        (reg:SI 3 r3 [orig:310 prephitmp_470 ] [310])) "../System/ray_funkcije.c":475:38 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1560 1939 845 46 (set (reg:SF 30 s14 [orig:742 _166 ] [742])
        (float:SF (reg:SI 30 s14 [orig:310 prephitmp_470 ] [310]))) 809 {*floatsisf2_vfp}
     (nil))
(insn 845 1560 23 46 (set (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
        (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 23 845 1739 46 (set (reg/v:SI 9 r9 [orig:293 county ] [293])
        (const_int 0 [0])) "../System/ray_funkcije.c":472:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 1739 23 1740 46 (set (pc)
        (label_ref 1039)) 284 {*arm_jump}
     (nil)
 -> 1039)
(barrier 1740 1739 1047)
(code_label 1047 1740 848 47 195 (nil) [2 uses])
(note 848 1047 18 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 18 848 1940 47 (set (reg/v:SF 35 s19 [orig:281 x ] [281])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":475:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1940 18 1897 47 (set (reg/v:SI 31 s15 [orig:293 county ] [293])
        (reg/v:SI 9 r9 [orig:293 county ] [293])) "../System/ray_funkcije.c":495:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1897 1940 850 47 (set (reg:SF 42 s26 [606])
        (float:SF (reg/v:SI 31 s15 [orig:293 county ] [293]))) "../System/ray_funkcije.c":495:25 809 {*floatsisf2_vfp}
     (nil))
(insn 850 1897 986 47 (set (reg:SF 42 s26 [orig:193 _102 ] [193])
        (plus:SF (reg:SF 42 s26 [606])
            (reg/v:SF 40 s24 [orig:266 sy ] [266]))) "../System/ray_funkcije.c":495:25 758 {*addsf3_vfp}
     (nil))
(insn 986 850 851 47 (set (reg:SI 41 s25 [764])
        (fix:SI (fix:SF (reg:SF 42 s26 [orig:193 _102 ] [193])))) "../System/ray_funkcije.c":496:9 805 {*truncsisf2_vfp}
     (nil))
(insn 851 986 1941 47 (set (reg:SI 31 s15 [orig:303 _451 ] [303])
        (fix:SI (fix:SF (reg/v:SF 43 s27 [orig:297 y ] [297])))) "../System/ray_funkcije.c":476:16 805 {*truncsisf2_vfp}
     (nil))
(insn 1941 851 1561 47 (set (reg:SI 8 r8 [orig:303 _451 ] [303])
        (reg:SI 31 s15 [orig:303 _451 ] [303])) "../System/ray_funkcije.c":476:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1561 1941 19 47 (set (reg/f:SI 7 r7 [743])
        (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)
        (nil)))
(insn 19 1561 1006 47 (set (reg/v:SI 6 r6 [orig:280 countx ] [280])
        (const_int 0 [0])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 1006 19 852 48 190 (nil) [1 uses])
(note 852 1006 857 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(note 857 852 861 48 NOTE_INSN_DELETED)
(note 861 857 853 48 NOTE_INSN_DELETED)
(debug_insn 853 861 854 48 (var_location:SF x (reg/v:SF 35 s19 [orig:281 x ] [281])) -1
     (nil))
(debug_insn 854 853 855 48 (var_location:SI countx (reg/v:SI 6 r6 [orig:280 countx ] [280])) -1
     (nil))
(debug_insn 855 854 858 48 (debug_marker) "../System/ray_funkcije.c":476:7 -1
     (nil))
(insn 858 855 1942 48 (set (reg:SI 31 s15 [608])
        (fix:SI (fix:SF (reg/v:SF 35 s19 [orig:281 x ] [281])))) "../System/ray_funkcije.c":476:45 805 {*truncsisf2_vfp}
     (nil))
(insn 1942 858 859 48 (set (reg:SI 3 r3 [608])
        (reg:SI 31 s15 [608])) "../System/ray_funkcije.c":476:45 728 {*thumb2_movsi_vfp}
     (nil))
(insn 859 1942 862 48 (set (reg:SI 3 r3 [609])
        (plus:SI (mult:SI (reg:SI 8 r8 [orig:303 _451 ] [303])
                (reg:SI 1 r1 [orig:304 prephitmp_453 ] [304]))
            (reg:SI 3 r3 [608]))) "../System/ray_funkcije.c":476:43 57 {*mla}
     (nil))
(insn 862 859 864 48 (set (reg:SI 3 r3 [612])
        (plus:SI (ashift:SI (reg:SI 3 r3 [609])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [609]))) "../System/ray_funkcije.c":476:13 318 {*add_shiftsi}
     (nil))
(debug_insn 864 862 865 48 (var_location:SI pixel (reg:SI 3 r3 [612])) "../System/ray_funkcije.c":476:13 -1
     (nil))
(debug_insn 865 864 871 48 (debug_marker) "../System/ray_funkcije.c":477:7 -1
     (nil))
(insn 871 865 867 48 (set (reg/f:SI 2 r2 [615])
        (plus:SI (reg/f:SI 7 r7 [743])
            (reg:SI 3 r3 [612]))) "../System/ray_funkcije.c":478:13 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [612])
            (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>))
        (nil)))
(insn 867 871 868 48 (set (reg/v:SI 3 r3 [orig:273 red ] [273])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 7 r7 [743])
                    (reg:SI 3 r3 [612])) [0 t_enemy[pixel_247]+0 S1 A8]))) "../System/ray_funkcije.c":477:11 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [612])
                    (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)) [0 t_enemy[pixel_247]+0 S1 A8]))
        (nil)))
(debug_insn 868 867 869 48 (var_location:QI red (reg:QI 3 r3 [orig:273 red ] [273])) "../System/ray_funkcije.c":477:11 -1
     (nil))
(debug_insn 869 868 872 48 (debug_marker) "../System/ray_funkcije.c":478:7 -1
     (nil))
(insn 872 869 873 48 (set (reg/v:SI 12 ip [orig:274 green ] [274])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [615])
                    (const_int 1 [0x1])) [0 t_enemy[_84]+0 S1 A8]))) "../System/ray_funkcije.c":478:13 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 873 872 874 48 (var_location:QI green (reg:QI 12 ip [orig:274 green ] [274])) "../System/ray_funkcije.c":478:13 -1
     (nil))
(debug_insn 874 873 877 48 (debug_marker) "../System/ray_funkcije.c":479:7 -1
     (nil))
(insn 877 874 878 48 (set (reg/v:SI 2 r2 [orig:275 blue ] [275])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [615])
                    (const_int 2 [0x2])) [0 t_enemy[_85]+0 S1 A8]))) "../System/ray_funkcije.c":479:12 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 878 877 879 48 (var_location:QI blue (reg:QI 2 r2 [orig:275 blue ] [275])) "../System/ray_funkcije.c":479:12 -1
     (nil))
(debug_insn 879 878 880 48 (debug_marker) "../System/ray_funkcije.c":483:7 -1
     (nil))
(insn 880 879 881 48 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:273 red ] [273])
            (const_int 188 [0xbc]))) "../System/ray_funkcije.c":483:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 881 880 882 48 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 891)
            (pc))) "../System/ray_funkcije.c":483:10 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 891)
(note 882 881 883 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(note 883 882 885 49 NOTE_INSN_DELETED)
(note 885 883 886 49 NOTE_INSN_DELETED)
(insn 886 885 887 49 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (ior:SI (reg/v:SI 12 ip [orig:274 green ] [274])
                        (reg/v:SI 2 r2 [orig:275 blue ] [275]))
                    (const_int 0 [0])))
            (clobber (reg:SI 14 lr [857]))
        ]) "../System/ray_funkcije.c":483:23 108 {*iorsi3_compare0_scratch}
     (nil))
(jump_insn 887 886 1741 49 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref 1430)
            (pc))) "../System/ray_funkcije.c":483:23 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1430)
(note 1741 887 1742 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1742 1741 1743 50 (set (pc)
        (label_ref 996)) 284 {*arm_jump}
     (nil)
 -> 996)
(barrier 1743 1742 891)
(code_label 891 1743 892 51 181 (nil) [1 uses])
(note 892 891 893 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(debug_insn 893 892 896 51 (debug_marker) "../System/ray_funkcije.c":484:8 -1
     (nil))
(insn 896 893 897 51 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
            (const_int 0 [0]))) "../System/ray_funkcije.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 897 896 1437 51 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 902)
            (pc))) "../System/ray_funkcije.c":484:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 902)
(code_label 1437 897 898 52 214 (nil) [1 uses])
(note 898 1437 1943 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 1943 898 899 52 (set (reg/v:SI 31 s15 [orig:273 red ] [273])
        (reg/v:SI 3 r3 [orig:273 red ] [273])) "../System/ray_funkcije.c":488:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 899 1943 1744 52 (set (reg:SF 31 s15 [orig:317 _480 ] [317])
        (float:SF (reg/v:SI 31 s15 [orig:273 red ] [273]))) "../System/ray_funkcije.c":488:12 809 {*floatsisf2_vfp}
     (nil))
(jump_insn 1744 899 1745 52 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1745 1744 902)
(code_label 902 1745 903 53 184 (nil) [1 uses])
(note 903 902 904 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(debug_insn 904 903 1944 53 (debug_marker) "../System/ray_funkcije.c":485:9 -1
     (nil))
(insn 1944 904 905 53 (set (reg/v:SI 31 s15 [orig:273 red ] [273])
        (reg/v:SI 3 r3 [orig:273 red ] [273])) "../System/ray_funkcije.c":485:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 905 1944 1807 53 (set (reg:SF 31 s15 [orig:181 _88 ] [181])
        (float:SF (reg/v:SI 31 s15 [orig:273 red ] [273]))) "../System/ray_funkcije.c":485:16 809 {*floatsisf2_vfp}
     (nil))
(insn 1807 905 1808 53 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:181 _88 ] [181])
            (reg:SF 44 s28 [769]))) "../System/ray_funkcije.c":485:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1808 1807 908 53 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":485:11 817 {*movcc_vfp}
     (nil))
(jump_insn 908 1808 909 53 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1468)
            (pc))) "../System/ray_funkcije.c":485:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 414363460 (nil))
 -> 1468)
(note 909 908 910 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(debug_insn 910 909 911 54 (debug_marker) "../System/ray_funkcije.c":486:14 -1
     (nil))
(debug_insn 911 910 913 54 (var_location:QI red (unsigned_fix:QI (plus:SF (reg:SF 31 s15 [orig:181 _88 ] [181])
            (const_double:SF 7.5e+1 [0x0.96p+7])))) "../System/ray_funkcije.c":486:18 -1
     (nil))
(insn 913 911 914 54 (set (reg:SF 31 s15 [622])
        (plus:SF (reg:SF 31 s15 [orig:181 _88 ] [181])
            (reg:SF 45 s29 [771]))) "../System/ray_funkcije.c":485:16 758 {*addsf3_vfp}
     (expr_list:REG_EQUAL (plus:SF (reg:SF 31 s15 [orig:181 _88 ] [181])
            (const_double:SF 7.5e+1 [0x0.96p+7]))
        (nil)))
(insn 914 913 1945 54 (set (reg:SI 31 s15 [625])
        (unsigned_fix:SI (fix:SF (reg:SF 31 s15 [622])))) "../System/ray_funkcije.c":486:18 807 {fixuns_truncsfsi2}
     (nil))
(insn 1945 914 916 54 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-464 S4 A32])
        (reg:SI 31 s15 [625])) "../System/ray_funkcije.c":486:18 728 {*thumb2_movsi_vfp}
     (nil))
(insn 916 1945 1946 54 (set (reg:SI 3 r3 [orig:626 red ] [626])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])) [8 %sfp+-464 S1 A32]))) "../System/ray_funkcije.c":488:12 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1946 916 917 54 (set (reg:SI 31 s15 [orig:626 red ] [626])
        (reg:SI 3 r3 [orig:626 red ] [626])) "../System/ray_funkcije.c":488:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 917 1946 1746 54 (set (reg:SF 31 s15 [orig:317 _480 ] [317])
        (float:SF (reg:SI 31 s15 [orig:626 red ] [626]))) "../System/ray_funkcije.c":488:12 809 {*floatsisf2_vfp}
     (nil))
(jump_insn 1746 917 1747 54 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1747 1746 1468)
(code_label 1468 1747 1467 55 220 (nil) [1 uses])
(note 1467 1468 1623 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1623 1467 1748 55 (set (reg:SF 31 s15 [orig:317 _480 ] [317])
        (reg:SF 46 s30 [orig:770 _480 ] [770])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1748 1623 1749 55 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1749 1748 1480)
(code_label 1480 1749 1479 56 223 (nil) [1 uses])
(note 1479 1480 1624 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1624 1479 918 56 (set (reg:SF 31 s15 [orig:317 _480 ] [317])
        (reg:SF 46 s30 [orig:770 _480 ] [770])) "../System/ray_funkcije.c":484:11 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 918 1624 919 57 185 (nil) [3 uses])
(note 919 918 920 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(debug_insn 920 919 921 57 (var_location:QI red (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 921 920 922 57 (debug_marker) "../System/ray_funkcije.c":488:8 -1
     (nil))
(debug_insn 922 921 923 57 (var_location:SF D#48 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":488:12 -1
     (nil))
(debug_insn 923 922 924 57 (var_location:QI red (unsigned_fix:QI (debug_expr:SF D#48))) "../System/ray_funkcije.c":488:12 -1
     (nil))
(debug_insn 924 923 925 57 (debug_marker) "../System/ray_funkcije.c":489:8 -1
     (nil))
(debug_insn 925 924 926 57 (var_location:SI D#47 (zero_extend:SI (reg:QI 12 ip [orig:274 green ] [274]))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 926 925 927 57 (var_location:SF D#46 (float:SF (debug_expr:SI D#47))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 927 926 928 57 (var_location:SF D#45 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 928 927 929 57 (var_location:QI green (unsigned_fix:QI (debug_expr:SF D#45))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 929 928 930 57 (debug_marker) "../System/ray_funkcije.c":490:8 -1
     (nil))
(debug_insn 930 929 931 57 (var_location:SI D#44 (zero_extend:SI (reg:QI 2 r2 [orig:275 blue ] [275]))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 931 930 932 57 (var_location:SF D#43 (float:SF (debug_expr:SI D#44))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 932 931 933 57 (var_location:SF D#42 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 933 932 934 57 (var_location:QI blue (unsigned_fix:QI (debug_expr:SF D#42))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 934 933 1947 57 (debug_marker) "../System/ray_funkcije.c":494:8 -1
     (nil))
(insn 1947 934 935 57 (set (reg/v:SI 29 s13 [orig:280 countx ] [280])
        (reg/v:SI 6 r6 [orig:280 countx ] [280])) "../System/ray_funkcije.c":494:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 935 1947 936 57 (set (reg:SF 32 s16 [627])
        (float:SF (reg/v:SI 29 s13 [orig:280 countx ] [280]))) "../System/ray_funkcije.c":494:15 809 {*floatsisf2_vfp}
     (nil))
(insn 936 935 1805 57 (set (reg:SF 32 s16 [orig:191 _100 ] [191])
        (plus:SF (reg:SF 32 s16 [627])
            (reg/v:SF 38 s22 [orig:267 sx ] [267]))) "../System/ray_funkcije.c":494:15 758 {*addsf3_vfp}
     (nil))
(insn 1805 936 1806 57 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:191 _100 ] [191])
            (reg:SF 34 s18 [777]))) "../System/ray_funkcije.c":494:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1806 1805 939 57 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":494:11 817 {*movcc_vfp}
     (nil))
(jump_insn 939 1806 943 57 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":494:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 996)
(note 943 939 1803 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1803 943 1804 58 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:191 _100 ] [191])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":494:35 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1804 1803 946 58 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":494:35 817 {*movcc_vfp}
     (nil))
(jump_insn 946 1804 950 58 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":494:35 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 996)
(note 950 946 1801 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1801 950 1802 59 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 42 s26 [orig:193 _102 ] [193])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":495:19 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1802 1801 953 59 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":495:19 817 {*movcc_vfp}
     (nil))
(jump_insn 953 1802 957 59 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":495:19 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 996)
(note 957 953 1799 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1799 957 1800 60 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 42 s26 [orig:193 _102 ] [193])
            (reg:SF 34 s18 [777]))) "../System/ray_funkcije.c":495:38 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1800 1799 960 60 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":495:38 817 {*movcc_vfp}
     (nil))
(jump_insn 960 1800 964 60 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":495:38 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 996)
(note 964 960 972 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 972 964 975 61 NOTE_INSN_DELETED)
(note 975 972 979 61 NOTE_INSN_DELETED)
(note 979 975 984 61 NOTE_INSN_DELETED)
(note 984 979 985 61 NOTE_INSN_DELETED)
(note 985 984 987 61 NOTE_INSN_DELETED)
(note 987 985 965 61 NOTE_INSN_DELETED)
(debug_insn 965 987 1948 61 (debug_marker) "../System/ray_funkcije.c":496:9 -1
     (nil))
(insn 1948 965 966 61 (set (reg/v:SI 30 s14 [orig:274 green ] [274])
        (reg/v:SI 12 ip [orig:274 green ] [274])) "../System/ray_funkcije.c":489:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 966 1948 1949 61 (set (reg:SF 29 s13 [632])
        (float:SF (reg/v:SI 30 s14 [orig:274 green ] [274]))) "../System/ray_funkcije.c":489:14 809 {*floatsisf2_vfp}
     (nil))
(insn 1949 966 968 61 (set (reg/v:SI 30 s14 [orig:275 blue ] [275])
        (reg/v:SI 2 r2 [orig:275 blue ] [275])) "../System/ray_funkcije.c":490:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 968 1949 967 61 (set (reg:SF 30 s14 [633])
        (float:SF (reg/v:SI 30 s14 [orig:275 blue ] [275]))) "../System/ray_funkcije.c":490:13 809 {*floatsisf2_vfp}
     (nil))
(insn 967 968 973 61 (set (reg:SF 29 s13 [orig:186 _95 ] [186])
        (mult:SF (reg:SF 29 s13 [632])
            (reg/v:SF 47 s31 [orig:268 vis ] [268]))) "../System/ray_funkcije.c":489:14 767 {*mulsf3_vfp}
     (nil))
(insn 973 967 1950 61 (set (reg:SI 29 s13 [638])
        (unsigned_fix:SI (fix:SF (reg:SF 29 s13 [orig:186 _95 ] [186])))) "../System/ray_funkcije.c":489:14 807 {fixuns_truncsfsi2}
     (nil))
(insn 1950 973 969 61 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [8 %sfp+-456 S4 A32])
        (reg:SI 29 s13 [638])) "../System/ray_funkcije.c":489:14 728 {*thumb2_movsi_vfp}
     (nil))
(insn 969 1950 970 61 (set (reg:SF 30 s14 [orig:189 _98 ] [189])
        (mult:SF (reg:SF 30 s14 [633])
            (reg/v:SF 47 s31 [orig:268 vis ] [268]))) "../System/ray_funkcije.c":490:13 767 {*mulsf3_vfp}
     (nil))
(insn 970 969 1951 61 (set (reg:SI 30 s14 [635])
        (unsigned_fix:SI (fix:SF (reg:SF 30 s14 [orig:189 _98 ] [189])))) "../System/ray_funkcije.c":490:13 807 {fixuns_truncsfsi2}
     (nil))
(insn 1951 970 976 61 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [8 %sfp+-464 S4 A32])
        (reg:SI 30 s14 [635])) "../System/ray_funkcije.c":490:13 728 {*thumb2_movsi_vfp}
     (nil))
(insn 976 1951 977 61 (set (reg:SF 31 s15 [640])
        (mult:SF (reg/v:SF 47 s31 [orig:268 vis ] [268])
            (reg:SF 31 s15 [orig:317 _480 ] [317]))) "../System/ray_funkcije.c":488:12 767 {*mulsf3_vfp}
     (nil))
(insn 977 976 1952 61 (set (reg:SI 31 s15 [642])
        (unsigned_fix:SI (fix:SF (reg:SF 31 s15 [640])))) "../System/ray_funkcije.c":488:12 807 {fixuns_truncsfsi2}
     (nil))
(insn 1952 977 980 61 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [8 %sfp+-452 S4 A32])
        (reg:SI 31 s15 [642])) "../System/ray_funkcije.c":488:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 980 1952 981 61 (set (reg:SI 2 r2)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 8 [0x8])) [8 %sfp+-464 S1 A32]))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 981 980 982 61 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 16 [0x10])) [8 %sfp+-456 S1 A32]))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 982 981 983 61 (set (reg:SI 0 r0)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 13 sp)
                    (const_int 20 [0x14])) [8 %sfp+-452 S1 A32]))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(call_insn 983 982 988 61 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":496:56 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 988 983 990 61 (set (reg:SI 2 r2)
        (zero_extend:SI (reg:HI 0 r0 [811]))) "../System/ray_funkcije.c":496:9 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 990 988 1953 61 (set (reg:SI 31 s15 [908])
        (fix:SI (fix:SF (reg:SF 32 s16 [orig:191 _100 ] [191])))) "../System/ray_funkcije.c":496:9 805 {*truncsisf2_vfp}
     (nil))
(insn 1953 990 989 61 (set (reg:SI 0 r0)
        (reg:SI 31 s15 [908])) "../System/ray_funkcije.c":496:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 989 1953 991 61 (set (reg:SI 1 r1)
        (reg:SI 41 s25 [764])) "../System/ray_funkcije.c":496:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 991 989 992 61 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>) [0 narisi_velik_kvadrat S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":496:9 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(insn 992 991 1954 61 (set (reg:SI 3 r3 [orig:310 prephitmp_470 ] [310])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":475:38 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1954 992 1562 61 (set (reg:SI 30 s14 [orig:310 prephitmp_470 ] [310])
        (reg:SI 3 r3 [orig:310 prephitmp_470 ] [310])) "../System/ray_funkcije.c":475:38 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1562 1954 993 61 (set (reg:SF 30 s14 [orig:742 _166 ] [742])
        (float:SF (reg:SI 30 s14 [orig:310 prephitmp_470 ] [310]))) 809 {*floatsisf2_vfp}
     (nil))
(insn 993 1562 995 61 (set (reg:SI 1 r1 [orig:304 prephitmp_453 ] [304])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":473:37 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 995 993 996 61 (set (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
        (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 996 995 997 62 183 (nil) [5 uses])
(note 997 996 998 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(debug_insn 998 997 1002 62 (debug_marker) "../System/ray_funkcije.c":498:7 -1
     (nil))
(insn 1002 998 999 62 (set (reg/v:SF 35 s19 [orig:281 x ] [281])
        (plus:SF (reg/v:SF 35 s19 [orig:281 x ] [281])
            (reg:SF 36 s20 [orig:302 _440 ] [302]))) "../System/ray_funkcije.c":475:48 758 {*addsf3_vfp}
     (nil))
(insn 999 1002 1000 62 (set (reg/v:SI 6 r6 [orig:280 countx ] [280])
        (plus:SI (reg/v:SI 6 r6 [orig:280 countx ] [280])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":498:13 7 {*arm_addsi3}
     (nil))
(debug_insn 1000 999 1001 62 (var_location:SI countx (reg/v:SI 6 r6 [orig:280 countx ] [280])) "../System/ray_funkcije.c":498:13 -1
     (nil))
(debug_insn 1001 1000 1003 62 (debug_marker) "../System/ray_funkcije.c":475:46 -1
     (nil))
(debug_insn 1003 1001 1004 62 (var_location:SF x (reg/v:SF 35 s19 [orig:281 x ] [281])) -1
     (nil))
(debug_insn 1004 1003 1005 62 (var_location:SI countx (reg/v:SI 6 r6 [orig:280 countx ] [280])) -1
     (nil))
(debug_insn 1005 1004 1797 62 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(insn 1797 1005 1798 62 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:742 _166 ] [742])
            (reg/v:SF 35 s19 [orig:281 x ] [281]))) "../System/ray_funkcije.c":475:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1798 1797 1009 62 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":475:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1009 1798 1750 62 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1006)
            (pc))) "../System/ray_funkcije.c":475:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1006)
(note 1750 1009 1752 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1752 1750 1753 63 (set (pc)
        (label_ref 1751)) 284 {*arm_jump}
     (nil)
 -> 1751)
(barrier 1753 1752 1061)
(code_label 1061 1753 1013 64 196 (nil) [1 uses])
(note 1013 1061 1795 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1795 1013 1796 64 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:742 _166 ] [742])
            (const_double:SF 0.0 [0x0.0p+0]))) 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1796 1795 1016 64 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) 817 {*movcc_vfp}
     (nil))
(jump_insn 1016 1796 1031 64 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1047)
            (pc))) 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1073741828 (nil))
 -> 1047)
(code_label 1031 1016 1017 66 193 (nil) [1 uses])
(note 1017 1031 1018 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1018 1017 1019 66 (var_location:SF y (reg/v:SF 43 s27 [orig:297 y ] [297])) -1
     (nil))
(debug_insn 1019 1018 1020 66 (var_location:SI county (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1020 1019 1021 66 (var_location:SF x (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1021 1020 1022 66 (var_location:SI countx (const_int 0 [0])) -1
     (nil))
(debug_insn 1022 1021 1023 66 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(debug_insn 1023 1022 1024 66 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(debug_insn 1024 1023 1025 66 (var_location:SI county (debug_expr:SI D#55)) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1025 1024 1026 66 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(insn 1026 1025 1027 66 (set (reg/v:SF 43 s27 [orig:297 y ] [297])
        (plus:SF (reg/v:SF 43 s27 [orig:297 y ] [297])
            (reg:SF 36 s20 [orig:302 _440 ] [302]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(debug_insn 1027 1026 1028 66 (var_location:SF y (reg/v:SF 43 s27 [orig:297 y ] [297])) -1
     (nil))
(debug_insn 1028 1027 1029 66 (var_location:SI county (debug_expr:SI D#55)) -1
     (nil))
(debug_insn 1029 1028 1793 66 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1793 1029 1794 66 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:741 _193 ] [741])
            (reg/v:SF 43 s27 [orig:297 y ] [297]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1794 1793 1033 66 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (nil))
(jump_insn 1033 1794 1754 66 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1031)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1031)
(note 1754 1033 1755 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1755 1754 1756 67 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1756 1755 1039)
(code_label 1039 1756 1040 68 180 (nil) [2 uses])
(note 1040 1039 1041 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1041 1040 1042 68 (var_location:SF y (reg/v:SF 43 s27 [orig:297 y ] [297])) -1
     (nil))
(debug_insn 1042 1041 1043 68 (var_location:SI county (reg/v:SI 9 r9 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1043 1042 1044 68 (var_location:SF x (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1044 1043 1045 68 (var_location:SI countx (const_int 0 [0])) -1
     (nil))
(debug_insn 1045 1044 1791 68 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(insn 1791 1045 1792 68 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 30 s14 [orig:742 _166 ] [742])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":475:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1792 1791 1050 68 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":475:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1050 1792 1051 68 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1047)
            (pc))) "../System/ray_funkcije.c":475:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 941251804 (nil))
 -> 1047)
(note 1051 1050 1052 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1052 1051 1056 69 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(insn 1056 1052 1053 69 (set (reg/v:SF 43 s27 [orig:297 y ] [297])
        (plus:SF (reg/v:SF 43 s27 [orig:297 y ] [297])
            (reg:SF 36 s20 [orig:302 _440 ] [302]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(insn 1053 1056 1054 69 (set (reg/v:SI 9 r9 [orig:293 county ] [293])
        (plus:SI (reg/v:SI 9 r9 [orig:293 county ] [293])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":500:12 7 {*arm_addsi3}
     (nil))
(debug_insn 1054 1053 1055 69 (var_location:SI county (reg/v:SI 9 r9 [orig:293 county ] [293])) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1055 1054 1057 69 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(debug_insn 1057 1055 1058 69 (var_location:SF y (reg/v:SF 43 s27 [orig:297 y ] [297])) -1
     (nil))
(debug_insn 1058 1057 1059 69 (var_location:SI county (reg/v:SI 9 r9 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1059 1058 1789 69 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1789 1059 1790 69 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:741 _193 ] [741])
            (reg/v:SF 43 s27 [orig:297 y ] [297]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1790 1789 1063 69 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (nil))
(jump_insn 1063 1790 1757 69 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1061)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630308 (nil))
 -> 1061)
(note 1757 1063 1758 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1758 1757 1759 70 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1759 1758 1738)
(code_label 1738 1759 1068 71 249 (nil) [1 uses])
(note 1068 1738 1069 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 71 (set (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
        (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 1070 1069 1071 72 194 (nil) [3 uses])
(note 1071 1070 1072 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1072 1071 1075 72 (debug_marker) "../System/ray_funkcije.c":503:5 -1
     (nil))
(insn 1075 1072 1076 72 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
            (const_int 0 [0]))) "../System/ray_funkcije.c":503:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1076 1075 1575 72 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1760)
            (pc))) "../System/ray_funkcije.c":503:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 373017916 (nil))
 -> 1760)
(note 1575 1076 1563 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1563 1575 1761 73 (set (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1761 1563 1762 73 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1762 1761 1760)
(code_label 1760 1762 1077 74 251 (nil) [1 uses])
(note 1077 1760 1078 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1078 1077 1081 74 (debug_marker) "../System/ray_funkcije.c":504:6 -1
     (nil))
(insn 1081 1078 1087 74 (set (reg:SF 32 s16 [653])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":504:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1087 1081 1079 74 (set (reg:SF 29 s13 [654])
        (mult:SF (reg/v:SF 39 s23 [orig:249 scaling ] [249])
            (reg:SF 32 s16 [653]))) "../System/ray_funkcije.c":505:12 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg/v:SF 39 s23 [orig:249 scaling ] [249])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 1079 1087 1955 74 (set (reg:SI 3 r3 [orig:650 MEM[base: _419, offset: 20B] ] [650])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":504:46 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1955 1079 1080 74 (set (reg:SI 30 s14 [orig:650 MEM[base: _419, offset: 20B] ] [650])
        (reg:SI 3 r3 [orig:650 MEM[base: _419, offset: 20B] ] [650])) "../System/ray_funkcije.c":504:46 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1080 1955 1082 74 (set (reg:SF 30 s14 [651])
        (float:SF (reg:SI 30 s14 [orig:650 MEM[base: _419, offset: 20B] ] [650]))) "../System/ray_funkcije.c":504:34 809 {*floatsisf2_vfp}
     (nil))
(insn 1082 1080 1088 74 (set (reg:SF 30 s14 [652])
        (mult:SF (reg:SF 30 s14 [651])
            (reg:SF 32 s16 [653]))) "../System/ray_funkcije.c":504:12 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 30 s14 [651])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 1088 1082 1083 74 (set (reg/v:SF 40 s24 [orig:270 starty ] [270])
        (fma:SF (reg:SF 31 s15 [orig:741 _193 ] [741])
            (reg:SF 29 s13 [654])
            (reg/v:SF 40 s24 [orig:266 sy ] [266]))) "../System/ray_funkcije.c":505:12 788 {fmasf4}
     (nil))
(insn 1083 1088 1084 74 (set (reg/v:SF 38 s22 [orig:269 startx ] [269])
        (fma:SF (reg/v:SF 39 s23 [orig:249 scaling ] [249])
            (reg:SF 30 s14 [652])
            (reg/v:SF 38 s22 [orig:267 sx ] [267]))) "../System/ray_funkcije.c":504:12 788 {fmasf4}
     (nil))
(debug_insn 1084 1083 1085 74 (var_location:SF startx (reg/v:SF 38 s22 [orig:269 startx ] [269])) "../System/ray_funkcije.c":504:12 -1
     (nil))
(debug_insn 1085 1084 1089 74 (debug_marker) "../System/ray_funkcije.c":505:6 -1
     (nil))
(debug_insn 1089 1085 1090 74 (var_location:SF starty (reg/v:SF 40 s24 [orig:270 starty ] [270])) "../System/ray_funkcije.c":505:12 -1
     (nil))
(debug_insn 1090 1089 1091 74 (debug_marker) "../System/ray_funkcije.c":506:6 -1
     (nil))
(debug_insn 1091 1090 1092 74 (debug_marker) "../System/ray_funkcije.c":506:11 -1
     (nil))
(debug_insn 1092 1091 1093 74 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 1093 1092 1139 74 (debug_marker) "../System/ray_funkcije.c":506:22 -1
     (nil))
(insn 1139 1093 1140 74 (set (reg:SI 8 r8 [761])
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 444 [0x1bc])
        (nil)))
(insn 1140 1139 24 74 (set (reg:SI 8 r8 [762])
        (mult:SI (reg:SI 8 r8 [761])
            (reg/v:SI 11 fp [orig:282 sprite ] [282]))) "../System/ray_funkcije.c":510:7 56 {*mul}
     (nil))
(insn 24 1140 25 74 (set (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
        (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":505:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 1158 74 (set (reg/v:SI 7 r7 [orig:271 i ] [271])
        (const_int 0 [0])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 1158 25 1094 75 200 (nil) [1 uses])
(note 1094 1158 1095 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1095 1094 1096 75 (var_location:SI i (reg/v:SI 7 r7 [orig:271 i ] [271])) -1
     (nil))
(debug_insn 1096 1095 1102 75 (debug_marker) "../System/ray_funkcije.c":507:7 -1
     (nil))
(debug_insn 1102 1096 1126 75 (debug_marker) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1126 1102 1127 75 (var_location:SI blood (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1127 1126 1128 75 (var_location:SF maxy (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1128 1127 1098 75 (debug_marker) "../System/ray_funkcije.c":509:7 -1
     (nil))
(insn 1098 1128 1099 75 (set (reg:SI 3 r3 [orig:656 MEM[base: _518, offset: 56B] ] [656])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
                    (const_int 56 [0x38])) [0 MEM[base: _518, offset: 56B]+0 S1 A32]))) "../System/ray_funkcije.c":507:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1099 1098 1103 75 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:656 MEM[base: _518, offset: 56B] ] [656])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":507:10 268 {*arm_cmpsi_insn}
     (nil))
(insn 1103 1099 1104 75 (set (reg/f:SI 0 r0 [orig:327 _517 ] [327])
        (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
            (const_int 40 [0x28]))) 7 {*arm_addsi3}
     (nil))
(debug_insn 1104 1103 1441 75 (var_location:SI blood (reg/f:SI 0 r0 [orig:327 _517 ] [327])) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1441 1104 1105 75 (var_location:HI D#56 (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
            (const_int 22 [0x16])) [0 MEM[base: _419, offset: 22B]+0 S2 A16])) "../System/ray_funkcije.c":484:11 -1
     (nil))
(debug_insn 1105 1441 1106 75 (var_location:SF maxy (mult:SF (mult:SF (float:SF (zero_extend:SI (debug_expr:HI D#56)))
            (reg/v:SF 39 s23 [orig:249 scaling ] [249]))
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1106 1105 1107 75 (debug_marker:BLK) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":30:13 -1
     (nil))
(debug_insn 1107 1106 1100 75 (debug_marker) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:5 -1
     (nil))
(jump_insn 1100 1107 1101 75 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1151)
            (pc))) "../System/ray_funkcije.c":507:10 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 524845004 (nil))
 -> 1151)
(note 1101 1100 1120 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1120 1101 1113 76 (debug_marker) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:3 -1
     (nil))
(insn 1113 1120 1121 76 (set (reg:SF 30 s14 [orig:662 MEM[base: _518, offset: 44B] ] [662])
        (mem:SF (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
                (const_int 44 [0x2c])) [2 MEM[base: _518, offset: 44B]+0 S4 A32])) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
                (const_int 44 [0x2c])) [2 MEM[base: _518, offset: 44B]+0 S4 A32])
        (nil)))
(insn 1121 1113 1108 76 (set (reg:SI 3 r3 [663])
        (const_int 0 [0])) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1108 1121 1956 76 (set (reg:SI 2 r2 [orig:657 MEM[base: _419, offset: 22B] ] [657])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":508:65 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1956 1108 1109 76 (set (reg:SI 31 s15 [orig:657 MEM[base: _419, offset: 22B] ] [657])
        (reg:SI 2 r2 [orig:657 MEM[base: _419, offset: 22B] ] [657])) "../System/ray_funkcije.c":508:65 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1109 1956 1111 76 (set (reg:SF 31 s15 [658])
        (float:SF (reg:SI 31 s15 [orig:657 MEM[base: _419, offset: 22B] ] [657]))) "../System/ray_funkcije.c":508:53 809 {*floatsisf2_vfp}
     (nil))
(insn 1111 1109 1112 76 (set (reg:SF 31 s15 [659])
        (mult:SF (reg:SF 31 s15 [658])
            (reg:SF 32 s16 [653]))) "../System/ray_funkcije.c":508:7 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg:SF 31 s15 [658])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 1112 1111 1787 76 (set (reg:SF 31 s15 [661])
        (mult:SF (reg:SF 31 s15 [659])
            (reg/v:SF 39 s23 [orig:249 scaling ] [249]))) "../System/ray_funkcije.c":508:7 767 {*mulsf3_vfp}
     (nil))
(insn 1787 1112 1788 76 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [661])
            (reg:SF 30 s14 [orig:662 MEM[base: _518, offset: 44B] ] [662]))) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1788 1787 1115 76 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 817 {*movcc_vfp}
     (nil))
(jump_insn 1115 1788 1119 76 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1124)
            (pc))) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1124)
(note 1119 1115 1123 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1123 1119 1124 77 (set (mem:QI (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
                (const_int 56 [0x38])) [2 MEM[base: _518, offset: 56B]+0 S1 A32])
        (reg:QI 3 r3 [663])) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:17 263 {*arm_movqi_insn}
     (nil))
(code_label 1124 1123 1125 78 198 (nil) [1 uses])
(note 1125 1124 1132 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(note 1132 1125 1135 78 NOTE_INSN_DELETED)
(note 1135 1132 1137 78 NOTE_INSN_DELETED)
(note 1137 1135 1130 78 NOTE_INSN_DELETED)
(call_insn 1130 1137 1131 78 (parallel [
            (call (mem:SI (symbol_ref:SI ("moveBlood") [flags 0x41]  <function_decl 0000000005e4c700 moveBlood>) [0 moveBlood S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":509:7 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("moveBlood") [flags 0x41]  <function_decl 0000000005e4c700 moveBlood>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1131 1130 1147 78 (debug_marker) "../System/ray_funkcije.c":510:7 -1
     (nil))
(insn 1147 1131 1148 78 (set (reg:SF 18 s2)
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1148 1147 1149 78 (set (reg:SF 17 s1)
        (reg/v:SF 40 s24 [orig:270 starty ] [270])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1149 1148 1136 78 (set (reg:SF 16 s0)
        (reg/v:SF 38 s22 [orig:269 startx ] [269])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1136 1149 1141 78 (set (reg:SI 3 r3 [669])
        (plus:SI (ashift:SI (reg/v:SI 7 r7 [orig:271 i ] [271])
                (const_int 2 [0x2]))
            (reg/v:SI 7 r7 [orig:271 i ] [271]))) "../System/ray_funkcije.c":510:7 318 {*add_shiftsi}
     (nil))
(insn 1141 1136 1142 78 (set (reg:SI 3 r3 [673])
        (plus:SI (ashift:SI (reg:SI 3 r3 [669])
                (const_int 2 [0x2]))
            (reg:SI 8 r8 [762]))) "../System/ray_funkcije.c":510:7 318 {*add_shiftsi}
     (nil))
(insn 1142 1141 1143 78 (set (reg:SI 3 r3 [674])
        (plus:SI (reg:SI 3 r3 [673])
            (reg/f:SI 5 r5 [747]))) "../System/ray_funkcije.c":510:7 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [673])
            (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>))
        (nil)))
(insn 1143 1142 1144 78 (set (reg/f:SI 3 r3 [675])
        (plus:SI (reg:SI 3 r3 [674])
            (const_int 40 [0x28]))) "../System/ray_funkcije.c":510:7 7 {*arm_addsi3}
     (nil))
(insn 1144 1143 1145 78 (set (reg:SI 2 r2 [orig:676 sp[sprite_308].blood[i_309]+16 ] [676])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [675])
                (const_int 16 [0x10])) [2 sp[sprite_308].blood[i_309]+16 S4 A32])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 3 r3 [675])
                (const_int 16 [0x10])) [2 sp[sprite_308].blood[i_309]+16 S4 A32])
        (nil)))
(insn 1145 1144 1146 78 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 2 r2 [orig:676 sp[sprite_308].blood[i_309]+16 ] [676])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1146 1145 1150 78 (parallel [
            (set (reg:SI 0 r0)
                (mem:SI (reg/f:SI 3 r3 [675]) [2 sp[sprite_308].blood[i_309]+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem:SI (plus:SI (reg/f:SI 3 r3 [675])
                        (const_int 4 [0x4])) [2 sp[sprite_308].blood[i_309]+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem:SI (plus:SI (reg/f:SI 3 r3 [675])
                        (const_int 8 [0x8])) [2 sp[sprite_308].blood[i_309]+8 S4 A32]))
            (set (reg:SI 3 r3)
                (mem:SI (plus:SI (reg/f:SI 3 r3 [675])
                        (const_int 12 [0xc])) [2 sp[sprite_308].blood[i_309]+12 S4 A32]))
        ]) "../System/ray_funkcije.c":510:7 423 {*ldm4_}
     (nil))
(call_insn 1150 1146 1151 78 (parallel [
            (call (mem:SI (symbol_ref:SI ("drawBlood") [flags 0x41]  <function_decl 0000000005e4cb00 drawBlood>) [0 drawBlood S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":510:7 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("drawBlood") [flags 0x41]  <function_decl 0000000005e4cb00 drawBlood>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 3 r3))
            (expr_list (use (reg:SI 2 r2))
                (expr_list (use (reg:SI 1 r1))
                    (expr_list (use (reg:SI 0 r0))
                        (expr_list:SF (use (reg:SF 16 s0))
                            (expr_list:SF (use (reg:SF 17 s1))
                                (expr_list:SF (use (reg:SF 18 s2))
                                    (expr_list:BLK (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                                        (nil)))))))))))
(code_label 1151 1150 1152 79 197 (nil) [1 uses])
(note 1152 1151 1153 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1153 1152 1154 79 (debug_marker) "../System/ray_funkcije.c":506:50 -1
     (nil))
(insn 1154 1153 1155 79 (set (reg/v:SI 7 r7 [orig:271 i ] [271])
        (plus:SI (reg/v:SI 7 r7 [orig:271 i ] [271])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":506:51 7 {*arm_addsi3}
     (nil))
(debug_insn 1155 1154 1156 79 (var_location:SI i (reg/v:SI 7 r7 [orig:271 i ] [271])) -1
     (nil))
(debug_insn 1156 1155 1157 79 (debug_marker) "../System/ray_funkcije.c":506:22 -1
     (nil))
(insn 1157 1156 1159 79 (set (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
        (plus:SI (reg:SI 6 r6 [orig:286 ivtmp.157 ] [286])
            (const_int 20 [0x14]))) "../System/ray_funkcije.c":506:6 7 {*arm_addsi3}
     (nil))
(insn 1159 1157 1160 79 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:271 i ] [271])
            (const_int 20 [0x14]))) "../System/ray_funkcije.c":506:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1160 1159 1577 79 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1158)
            (pc))) "../System/ray_funkcije.c":506:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1020077300 (nil))
 -> 1158)
(note 1577 1160 1564 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1564 1577 1161 80 (set (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 1161 1564 1162 81 162 (nil) [5 uses])
(note 1162 1161 1163 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1163 1162 1164 81 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1164 1163 1165 81 (debug_marker) "../System/ray_funkcije.c":517:3 -1
     (nil))
(insn 1165 1164 1166 81 (set (reg:SI 3 r3 [orig:677 MEM[base: _419, offset: 440B] ] [677])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 440 [0x1b8])) [0 MEM[base: _419, offset: 440B]+0 S1 A32]))) "../System/ray_funkcije.c":517:5 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1166 1165 1167 81 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:677 MEM[base: _419, offset: 440B] ] [677])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":517:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1167 1166 1172 81 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1317)
            (pc))) "../System/ray_funkcije.c":517:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 1317)
(note 1172 1167 1174 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1174 1172 1785 82 (set (reg:SF 31 s15 [678])
        (const_double:SF 4.0e+0 [0x0.8p+3])) "../System/ray_funkcije.c":517:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 1785 1174 1786 82 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 37 s21 [orig:263 dist ] [263])
            (reg:SF 31 s15 [678]))) "../System/ray_funkcije.c":517:28 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1786 1785 1176 82 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":517:28 817 {*movcc_vfp}
     (nil))
(jump_insn 1176 1786 1180 82 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1317)
            (pc))) "../System/ray_funkcije.c":517:28 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1317)
(note 1180 1176 1230 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(note 1230 1180 1237 83 NOTE_INSN_DELETED)
(note 1237 1230 1242 83 NOTE_INSN_DELETED)
(note 1242 1237 1246 83 NOTE_INSN_DELETED)
(note 1246 1242 1181 83 NOTE_INSN_DELETED)
(debug_insn 1181 1246 1182 83 (debug_marker) "../System/ray_funkcije.c":518:4 -1
     (nil))
(debug_insn 1182 1181 1183 83 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":518:8 -1
     (nil))
(debug_insn 1183 1182 1184 83 (debug_marker) "../System/ray_funkcije.c":519:4 -1
     (nil))
(debug_insn 1184 1183 1185 83 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":519:8 -1
     (nil))
(debug_insn 1185 1184 1186 83 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":519:21 -1
     (nil))
(debug_insn 1186 1185 1187 83 (debug_marker) "../System/ray_funkcije.c":520:4 -1
     (nil))
(insn 1187 1186 1188 83 (set (reg:SF 0 r0)
        (reg/v:SF 33 s17 [orig:247 sangle ] [247])) "../System/ray_funkcije.c":520:20 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1188 1187 1632 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1632 1188 1192 83 (set (reg:DF 2 r2)
        (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])) "../System/ray_funkcije.c":520:20 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1192 1632 1195 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1195 1192 1196 83 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1196 1195 1197 83 (set (reg:SF 33 s17 [orig:215 _135 ] [215])
        (reg:SF 0 r0 [812])) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1197 1196 1198 83 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:215 _135 ] [215])) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1198 1197 1673 83 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1673 1198 1208 83 (set (reg:SF 35 s19 [813])
        (reg:SF 16 s0)) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1208 1673 1780 83 (set (reg:SF 16 s0)
        (reg:SF 33 s17 [orig:215 _135 ] [215])) "../System/ray_funkcije.c":524:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1780 1208 1781 83 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 35 s19 [orig:216 _136 ] [216])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":523:13 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1781 1780 1592 83 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":523:13 817 {*movcc_vfp}
     (nil))
(insn 1592 1781 1206 83 (set (reg/v:SI 6 r6 [orig:253 fCheckX ] [253])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":523:13 986 {*thumb2_movsicc_insn}
     (nil))
(debug_insn 1206 1592 1207 83 (var_location:SI fCheckX (reg/v:SI 6 r6 [orig:253 fCheckX ] [253])) -1
     (nil))
(debug_insn 1207 1206 1209 83 (debug_marker) "../System/ray_funkcije.c":524:4 -1
     (nil))
(call_insn/u 1209 1207 1210 83 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":524:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1210 1209 1219 83 (set (reg:SF 33 s17 [orig:217 _137 ] [217])
        (reg:SF 16 s0 [814])) "../System/ray_funkcije.c":524:8 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1219 1210 1223 83 (set (reg:SF 36 s20 [orig:218 _138 ] [218])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":528:35 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1223 1219 1782 83 (set (reg:SF 37 s21 [orig:221 _141 ] [221])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])) "../System/ray_funkcije.c":529:36 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1782 1223 1783 83 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 33 s17 [orig:217 _137 ] [217])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":527:13 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1783 1782 1220 83 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":527:13 817 {*movcc_vfp}
     (nil))
(insn 1220 1783 1957 83 (set (reg:SI 31 s15 [orig:219 _139 ] [219])
        (fix:SI (fix:SF (reg:SF 36 s20 [orig:218 _138 ] [218])))) "../System/ray_funkcije.c":528:19 805 {*truncsisf2_vfp}
     (nil))
(insn 1957 1220 1228 83 (set (reg:SI 9 r9 [orig:219 _139 ] [219])
        (reg:SI 31 s15 [orig:219 _139 ] [219])) "../System/ray_funkcije.c":528:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1228 1957 1224 83 (set (reg:SI 0 r0 [686])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":528:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 1224 1228 1958 83 (set (reg:SI 31 s15 [orig:222 _142 ] [222])
        (fix:SI (fix:SF (reg:SF 37 s21 [orig:221 _141 ] [221])))) "../System/ray_funkcije.c":529:20 805 {*truncsisf2_vfp}
     (nil))
(insn 1958 1224 1839 83 (set (reg:SI 3 r3 [orig:222 _142 ] [222])
        (reg:SI 31 s15 [orig:222 _142 ] [222])) "../System/ray_funkcije.c":529:20 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1839 1958 1234 83 (var_location:SI D#57 (reg/v:SI 6 r6 [orig:253 fCheckX ] [253])) -1
     (nil))
(insn 1234 1839 1229 83 (set (reg:SI 2 r2 [690])
        (plus:SI (reg:SI 3 r3 [orig:222 _142 ] [222])
            (reg/v:SI 6 r6 [orig:253 fCheckX ] [253]))) "../System/ray_funkcije.c":529:39 7 {*arm_addsi3}
     (nil))
(insn 1229 1234 1236 83 (parallel [
            (set (reg:SI 6 r6 [685])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 9 r9 [orig:219 _139 ] [219]))
                            (sign_extend:DI (reg:SI 0 r0 [686])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [858]))
        ]) "../System/ray_funkcije.c":528:38 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 9 r9 [orig:219 _139 ] [219]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 1236 1229 1238 83 (parallel [
            (set (reg:SI 0 r0 [692])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [690]))
                            (sign_extend:DI (reg:SI 0 r0 [686])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 1 r1 [859]))
        ]) "../System/ray_funkcije.c":529:50 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2 r2 [690]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 1238 1236 1239 83 (set (reg:SI 2 r2 [695])
        (ashiftrt:SI (reg:SI 2 r2 [690])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":529:50 147 {*arm_shiftsi3}
     (nil))
(insn 1239 1238 1240 83 (set (reg:SI 2 r2 [691])
        (minus:SI (ashiftrt:SI (reg:SI 0 r0 [692])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [695]))) "../System/ray_funkcije.c":529:50 319 {*rsb_shiftsi}
     (nil))
(insn 1240 1239 1231 83 (set (reg:SI 2 r2 [696])
        (zero_extend:SI (reg:QI 2 r2 [691]))) "../System/ray_funkcije.c":530:17 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1231 1240 1232 83 (set (reg:SI 1 r1 [688])
        (ashiftrt:SI (reg:SI 9 r9 [orig:219 _139 ] [219])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":528:38 147 {*arm_shiftsi3}
     (nil))
(insn 1232 1231 1233 83 (set (reg:SI 1 r1 [684])
        (minus:SI (ashiftrt:SI (reg:SI 6 r6 [685])
                (const_int 2 [0x2]))
            (reg:SI 1 r1 [688]))) "../System/ray_funkcije.c":528:38 319 {*rsb_shiftsi}
     (nil))
(insn 1233 1232 1227 83 (set (reg:SI 1 r1 [689])
        (zero_extend:SI (reg:QI 1 r1 [684]))) "../System/ray_funkcije.c":530:17 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1227 1233 1241 83 (set (reg/f:SI 8 r8 [744])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":530:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 1241 1227 1243 83 (set (reg:SI 0 r0 [698])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":530:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 1243 1241 1245 83 (set (reg:SI 1 r1 [699])
        (plus:SI (mult:SI (reg:SI 0 r0 [698])
                (reg:SI 1 r1 [689]))
            (reg/f:SI 8 r8 [744]))) "../System/ray_funkcije.c":530:17 57 {*mla}
     (nil))
(insn 1245 1243 1599 83 (set (reg:SI 2 r2 [orig:701 map[_206][_208] ] [701])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 1 r1 [699])
                    (reg:SI 2 r2 [696])) [0 map[_206][_208]+0 S1 A8]))) "../System/ray_funkcije.c":530:7 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1599 1245 1217 83 (set (reg/v:SI 10 r10 [orig:254 fCheckY ] [254])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":527:13 986 {*thumb2_movsicc_insn}
     (nil))
(debug_insn 1217 1599 1218 83 (var_location:SI fCheckY (reg/v:SI 10 r10 [orig:254 fCheckY ] [254])) -1
     (nil))
(debug_insn 1218 1217 1221 83 (debug_marker) "../System/ray_funkcije.c":528:4 -1
     (nil))
(debug_insn 1221 1218 1222 83 (var_location:QI mapy (subreg:QI (div:SI (reg:SI 9 r9 [orig:219 _139 ] [219])
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":528:12 -1
     (nil))
(debug_insn 1222 1221 1225 83 (debug_marker) "../System/ray_funkcije.c":529:4 -1
     (nil))
(debug_insn 1225 1222 1226 83 (var_location:QI mapx (subreg:QI (div:SI (plus:SI (reg:SI 3 r3 [orig:222 _142 ] [222])
                (debug_expr:SI D#57))
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":529:12 -1
     (nil))
(debug_insn 1226 1225 1247 83 (debug_marker) "../System/ray_funkcije.c":530:4 -1
     (nil))
(jump_insn 1247 1226 1248 83 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:701 map[_206][_208] ] [701])
                        (const_int 0 [0]))
                    (label_ref 1269)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":530:7 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1269)
(note 1248 1247 1259 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(note 1259 1248 1249 84 NOTE_INSN_DELETED)
(debug_insn 1249 1259 1250 84 (debug_marker) "../System/ray_funkcije.c":530:30 -1
     (nil))
(insn 1250 1249 1251 84 (set (reg:SF 0 r0)
        (reg:SF 35 s19 [orig:216 _136 ] [216])) "../System/ray_funkcije.c":530:52 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1251 1250 1253 84 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1253 1251 1255 84 (set (reg:DF 2 r2)
        (const_double:DF 4.00000000000000022204460492503130808472633361816e-1 [0x0.ccccccccccccdp-1])) "../System/ray_funkcije.c":530:50 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1255 1253 1256 84 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:50 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1256 1255 1257 84 (set (reg:DF 6 r6 [703])
        (reg:DF 0 r0 [815])) "../System/ray_funkcije.c":530:50 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1257 1256 1258 84 (set (reg:SF 0 r0)
        (reg:SF 37 s21 [orig:221 _141 ] [221])) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1258 1257 1676 84 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1676 1258 1261 84 (set (reg:DF 2 r2 [816])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":530:43 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1261 1676 1262 84 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [703])) "../System/ray_funkcije.c":530:43 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1262 1261 1265 84 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1265 1262 1266 84 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1266 1265 1267 84 (set (reg:SF 31 s15 [orig:230 _150 ] [230])
        (reg:SF 0 r0 [817])) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1267 1266 1268 84 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])
        (reg:SF 31 s15 [orig:230 _150 ] [230])) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1268 1267 1959 84 (set (reg:SI 31 s15 [orig:222 _142 ] [222])
        (fix:SI (fix:SF (reg:SF 31 s15 [orig:230 _150 ] [230])))) "../System/ray_funkcije.c":533:11 805 {*truncsisf2_vfp}
     (nil))
(insn 1959 1268 1269 84 (set (reg:SI 3 r3 [orig:222 _142 ] [222])
        (reg:SI 31 s15 [orig:222 _142 ] [222])) "../System/ray_funkcije.c":533:11 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 1269 1959 1270 85 207 (nil) [1 uses])
(note 1270 1269 1280 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(note 1280 1270 1286 85 NOTE_INSN_DELETED)
(note 1286 1280 1291 85 NOTE_INSN_DELETED)
(note 1291 1286 1295 85 NOTE_INSN_DELETED)
(note 1295 1291 1271 85 NOTE_INSN_DELETED)
(debug_insn 1271 1295 1272 85 (debug_marker) "../System/ray_funkcije.c":532:4 -1
     (nil))
(debug_insn 1272 1271 1273 85 (var_location:QI mapy (subreg:QI (div:SI (plus:SI (reg:SI 9 r9 [orig:219 _139 ] [219])
                (reg/v:SI 10 r10 [orig:254 fCheckY ] [254]))
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":532:9 -1
     (nil))
(debug_insn 1273 1272 1274 85 (debug_marker) "../System/ray_funkcije.c":533:4 -1
     (nil))
(debug_insn 1274 1273 1275 85 (var_location:QI mapx (subreg:QI (div:SI (reg:SI 3 r3 [orig:222 _142 ] [222])
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":533:9 -1
     (nil))
(debug_insn 1275 1274 1277 85 (debug_marker) "../System/ray_funkcije.c":534:4 -1
     (nil))
(insn 1277 1275 1278 85 (set (reg:SI 9 r9 [707])
        (plus:SI (reg:SI 9 r9 [orig:219 _139 ] [219])
            (reg/v:SI 10 r10 [orig:254 fCheckY ] [254]))) "../System/ray_funkcije.c":532:31 7 {*arm_addsi3}
     (nil))
(insn 1278 1277 1281 85 (set (reg:SI 1 r1 [710])
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":532:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 1281 1278 1279 85 (set (reg:SI 2 r2 [712])
        (ashiftrt:SI (reg:SI 9 r9 [707])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":532:42 147 {*arm_shiftsi3}
     (nil))
(insn 1279 1281 1282 85 (parallel [
            (set (reg:SI 9 r9 [709])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 9 r9 [707]))
                            (sign_extend:DI (reg:SI 1 r1 [710])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 r0 [860]))
        ]) "../System/ray_funkcije.c":532:42 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 9 r9 [707]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 1282 1279 1285 85 (set (reg:SI 9 r9 [708])
        (minus:SI (ashiftrt:SI (reg:SI 9 r9 [709])
                (const_int 2 [0x2]))
            (reg:SI 2 r2 [712]))) "../System/ray_funkcije.c":532:42 319 {*rsb_shiftsi}
     (nil))
(insn 1285 1282 1287 85 (parallel [
            (set (reg:SI 1 r1 [715])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [orig:222 _142 ] [222]))
                            (sign_extend:DI (reg:SI 1 r1 [710])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [861]))
        ]) "../System/ray_funkcije.c":533:30 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 3 r3 [orig:222 _142 ] [222]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 1287 1285 1288 85 (set (reg:SI 3 r3 [718])
        (ashiftrt:SI (reg:SI 3 r3 [orig:222 _142 ] [222])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":533:30 147 {*arm_shiftsi3}
     (nil))
(insn 1288 1287 1283 85 (set (reg:SI 3 r3 [714])
        (minus:SI (ashiftrt:SI (reg:SI 1 r1 [715])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [718]))) "../System/ray_funkcije.c":533:30 319 {*rsb_shiftsi}
     (nil))
(insn 1283 1288 1289 85 (set (reg:SI 9 r9 [713])
        (zero_extend:SI (reg:QI 9 r9 [708]))) "../System/ray_funkcije.c":534:17 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1289 1283 1290 85 (set (reg:SI 3 r3 [719])
        (zero_extend:SI (reg:QI 3 r3 [714]))) "../System/ray_funkcije.c":534:17 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1290 1289 1292 85 (set (reg:SI 2 r2 [721])
        (const_int 50 [0x32])) "../System/ray_funkcije.c":534:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 1292 1290 1294 85 (set (reg:SI 8 r8 [722])
        (plus:SI (mult:SI (reg:SI 2 r2 [721])
                (reg:SI 9 r9 [713]))
            (reg/f:SI 8 r8 [744]))) "../System/ray_funkcije.c":534:17 57 {*mla}
     (nil))
(insn 1294 1292 1296 85 (set (reg:SI 3 r3 [orig:724 map[_209][_210] ] [724])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 8 r8 [722])
                    (reg:SI 3 r3 [719])) [0 map[_209][_210]+0 S1 A8]))) "../System/ray_funkcije.c":534:7 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 1296 1294 1297 85 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:724 map[_209][_210] ] [724])
                        (const_int 0 [0]))
                    (label_ref:SI 1317)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":534:7 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1317)
(note 1297 1296 1308 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(note 1308 1297 1315 86 NOTE_INSN_DELETED)
(note 1315 1308 1298 86 NOTE_INSN_DELETED)
(debug_insn 1298 1315 1299 86 (debug_marker) "../System/ray_funkcije.c":534:30 -1
     (nil))
(insn 1299 1298 1300 86 (set (reg:SF 0 r0)
        (reg:SF 33 s17 [orig:217 _137 ] [217])) "../System/ray_funkcije.c":534:52 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1300 1299 1302 86 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1302 1300 1304 86 (set (reg:DF 2 r2)
        (const_double:DF 4.00000000000000022204460492503130808472633361816e-1 [0x0.ccccccccccccdp-1])) "../System/ray_funkcije.c":534:50 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1304 1302 1305 86 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:50 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1305 1304 1306 86 (set (reg:DF 6 r6 [726])
        (reg:DF 0 r0 [818])) "../System/ray_funkcije.c":534:50 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1306 1305 1307 86 (set (reg:SF 0 r0)
        (reg:SF 36 s20 [orig:218 _138 ] [218])) "../System/ray_funkcije.c":534:43 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1307 1306 1679 86 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1679 1307 1310 86 (set (reg:DF 2 r2 [819])
        (reg:DF 0 r0)) "../System/ray_funkcije.c":534:43 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1310 1679 1311 86 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [726])) "../System/ray_funkcije.c":534:43 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1311 1310 1314 86 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1314 1311 1316 86 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1316 1314 1317 86 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])
        (reg:SF 0 r0 [820])) "../System/ray_funkcije.c":534:43 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 1317 1316 1318 87 202 (nil) [3 uses])
(note 1318 1317 1319 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1319 1318 1321 87 (debug_marker) "../System/ray_funkcije.c":538:3 -1
     (nil))
(insn 1321 1319 1777 87 (set (reg:SF 31 s15 [731])
        (const_double:SF 5.0e+0 [0x0.ap+3])) "../System/ray_funkcije.c":538:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+0 [0x0.ap+3])
        (nil)))
(insn 1777 1321 1778 87 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
            (reg:SF 31 s15 [731]))) "../System/ray_funkcije.c":538:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1778 1777 1323 87 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":538:6 817 {*movcc_vfp}
     (nil))
(jump_insn 1323 1778 1327 87 (set (pc)
        (if_then_else (ungt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1340)
            (pc))) "../System/ray_funkcije.c":538:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1340)
(note 1327 1323 1329 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(note 1329 1327 1328 88 NOTE_INSN_DELETED)
(insn 1328 1329 1330 88 (set (reg:SI 3 r3 [orig:732 MEM[base: _419, offset: 24B] ] [732])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                    (const_int 24 [0x18])) [0 MEM[base: _419, offset: 24B]+0 S1 A32]))) "../System/ray_funkcije.c":538:28 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 1330 1328 1331 88 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [orig:732 MEM[base: _419, offset: 24B] ] [732])
                        (const_int 0 [0]))
                    (label_ref:SI 1340)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":538:28 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 1014686028 (nil))
 -> 1340)
(note 1331 1330 1332 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1332 1331 1333 89 (debug_marker) "../System/ray_funkcije.c":539:4 -1
     (nil))
(insn 1333 1332 1334 89 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":539:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1334 1333 1335 89 (parallel [
            (call (mem:SI (symbol_ref:SI ("play_sound") [flags 0x41]  <function_decl 0000000005e52500 play_sound>) [0 play_sound S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":539:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("play_sound") [flags 0x41]  <function_decl 0000000005e52500 play_sound>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1335 1334 1336 89 (debug_marker) "../System/ray_funkcije.c":540:4 -1
     (nil))
(call_insn 1336 1335 1337 89 (parallel [
            (call (mem:SI (symbol_ref:SI ("reset") [flags 0x41]  <function_decl 0000000005e4c100 reset>) [0 reset S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":540:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("reset") [flags 0x41]  <function_decl 0000000005e4c100 reset>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 1337 1336 1338 89 (debug_marker) "../System/ray_funkcije.c":541:4 -1
     (nil))
(call_insn/j 1338 1337 1339 89 (parallel [
            (call (mem:SI (symbol_ref:SI ("init") [flags 0x41]  <function_decl 0000000005e4cd00 init>) [0 init S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":541:4 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("init") [flags 0x41]  <function_decl 0000000005e4cd00 init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(barrier 1339 1338 1340)
(code_label 1340 1339 1341 90 208 (nil) [2 uses])
(note 1341 1340 1342 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1342 1341 1343 90 (debug_marker) "../System/ray_funkcije.c":544:3 -1
     (nil))
(insn 1343 1342 1346 90 (set (reg:SI 3 r3 [orig:242 _164 ] [242])
        (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":544:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1346 1343 1347 90 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:242 _164 ] [242])
            (const_int 0 [0]))) "../System/ray_funkcije.c":544:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1347 1346 1348 90 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1352)
            (pc))) "../System/ray_funkcije.c":544:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 440234148 (nil))
 -> 1352)
(note 1348 1347 1349 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1349 1348 1350 91 (debug_marker) "../System/ray_funkcije.c":544:35 -1
     (nil))
(insn 1350 1349 1351 91 (set (reg:SI 3 r3 [733])
        (plus:SI (reg:SI 3 r3 [orig:242 _164 ] [242])
            (const_int -1 [0xffffffffffffffff]))) "../System/ray_funkcije.c":544:58 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
        (nil)))
(insn 1351 1350 1352 91 (set (mem:SI (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
        (reg:SI 3 r3 [733])) "../System/ray_funkcije.c":544:58 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 1352 1351 1353 92 210 (nil) [1 uses])
(note 1353 1352 1354 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1354 1353 1355 92 (debug_marker) "../System/ray_funkcije.c":400:47 -1
     (nil))
(insn 1355 1354 1356 92 (set (reg/v:SI 11 fp [orig:282 sprite ] [282])
        (plus:SI (reg/v:SI 11 fp [orig:282 sprite ] [282])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":400:53 7 {*arm_addsi3}
     (nil))
(debug_insn 1356 1355 1357 92 (var_location:SI sprite (reg/v:SI 11 fp [orig:282 sprite ] [282])) -1
     (nil))
(debug_insn 1357 1356 1358 92 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1358 1357 1359 92 (debug_marker) "../System/ray_funkcije.c":400:23 -1
     (nil))
(insn 1359 1358 1360 92 (set (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
        (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":400:2 7 {*arm_addsi3}
     (nil))
(insn 1360 1359 1361 92 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 11 fp [orig:282 sprite ] [282])
            (const_int 4 [0x4]))) "../System/ray_funkcije.c":400:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1361 1360 1362 92 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) "../System/ray_funkcije.c":400:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 276026180 (nil))
 -> 1370)
(note 1362 1361 1960 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1960 1362 1364 93 (set (reg:SI 3 r3 [915])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":412:28 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1364 1960 1961 93 (set (reg:SF 33 s17 [orig:300 pretmp_423 ] [300])
        (mem/c:SF (reg:SI 3 r3 [915]) [1 py+0 S4 A32])) "../System/ray_funkcije.c":412:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 1961 1364 1366 93 (set (reg:SI 3 r3 [916])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":412:40 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1366 1961 1763 93 (set (reg:SF 32 s16 [orig:301 pretmp_425 ] [301])
        (mem/c:SF (reg:SI 3 r3 [916]) [1 px+0 S4 A32])) "../System/ray_funkcije.c":412:40 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(jump_insn 1763 1366 1764 93 (set (pc)
        (label_ref 1367)) 284 {*arm_jump}
     (nil)
 -> 1367)
(barrier 1764 1763 1370)
(code_label 1370 1764 1371 94 211 (nil) [1 uses])
(note 1371 1370 1373 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(note 1373 1371 1372 94 NOTE_INSN_DELETED)
(debug_insn 1372 1373 1962 94 (debug_marker) "../System/ray_funkcije.c":546:2 -1
     (nil))
(insn 1962 1372 1374 94 (set (reg/v:SI 3 r3 [orig:245 indicate_led ] [245])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [8 %sfp+-460 S4 A32])) "../System/ray_funkcije.c":546:4 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 1374 1962 1375 94 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 3 r3 [orig:245 indicate_led ] [245])
                        (const_int 0 [0]))
                    (label_ref 1383)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":546:4 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 1383)
(note 1375 1374 1376 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1376 1375 1377 95 (debug_marker) "../System/ray_funkcije.c":547:3 -1
     (nil))
(insn 1377 1376 1378 95 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":547:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1378 1377 1379 95 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":547:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1379 1378 1380 95 (debug_marker) "../System/ray_funkcije.c":548:3 -1
     (nil))
(insn 1380 1379 1381 95 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":548:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1381 1380 1382 95 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":548:3 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(barrier 1382 1381 1383)
(code_label 1383 1382 1384 96 213 (nil) [1 uses])
(note 1384 1383 1385 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1385 1384 1386 96 (debug_marker) "../System/ray_funkcije.c":550:3 -1
     (nil))
(insn 1386 1385 1387 96 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":550:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1387 1386 1388 96 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>) [0 LED_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":550:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1388 1387 1389 96 (debug_marker) "../System/ray_funkcije.c":551:3 -1
     (nil))
(insn 1389 1388 1390 96 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":551:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1390 1389 1391 96 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>) [0 LED_off S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":551:3 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(barrier 1391 1390 1396)
(code_label 1396 1391 1397 97 176 (nil) [1 uses])
(note 1397 1396 1398 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1398 1397 1399 97 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 1399 1398 1400 97 (set (reg:SI 3 r3 [736])
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1400 1399 1401 97 (set (mem:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 3 r3 [736])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1401 1400 1402 97 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1402 1401 1765 97 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(jump_insn 1765 1402 1766 97 (set (pc)
        (label_ref 807)) 284 {*arm_jump}
     (nil)
 -> 807)
(barrier 1766 1765 1405)
(code_label 1405 1766 1406 98 175 (nil) [1 uses])
(note 1406 1405 1407 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1407 1406 1565 98 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 1565 1407 1408 98 (set (reg:SF 32 s16 [orig:738 MEM[base: _419, offset: 36B] ] [738])
        (mem:SF (plus:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1408 1565 1409 98 (set (reg:SI 3 r3 [737])
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1409 1408 1410 98 (set (mem:SI (reg:SI 4 r4 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 3 r3 [737])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 1410 1409 1411 98 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1411 1410 1767 98 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(jump_insn 1767 1411 1768 98 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1768 1767 1751)
(code_label 1751 1768 1415 99 250 (nil) [1 uses])
(note 1415 1751 1416 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1416 1415 1420 99 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(insn 1420 1416 1963 99 (set (reg/v:SF 43 s27 [orig:297 y ] [297])
        (plus:SF (reg/v:SF 43 s27 [orig:297 y ] [297])
            (reg:SF 36 s20 [orig:302 _440 ] [302]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(insn 1963 1420 1424 99 (set (reg:SI 31 s15 [orig:304 prephitmp_453 ] [304])
        (reg:SI 1 r1 [orig:304 prephitmp_453 ] [304])) "../System/ray_funkcije.c":473:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1424 1963 1417 99 (set (reg:SF 31 s15 [orig:741 _193 ] [741])
        (float:SF (reg:SI 31 s15 [orig:304 prephitmp_453 ] [304]))) "../System/ray_funkcije.c":473:25 809 {*floatsisf2_vfp}
     (nil))
(insn 1417 1424 1418 99 (set (reg/v:SI 9 r9 [orig:293 county ] [293])
        (plus:SI (reg/v:SI 9 r9 [orig:293 county ] [293])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":500:12 7 {*arm_addsi3}
     (nil))
(debug_insn 1418 1417 1419 99 (var_location:SI county (reg/v:SI 9 r9 [orig:293 county ] [293])) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1419 1418 1421 99 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(debug_insn 1421 1419 1422 99 (var_location:SF y (reg/v:SF 43 s27 [orig:297 y ] [297])) -1
     (nil))
(debug_insn 1422 1421 1423 99 (var_location:SI county (reg/v:SI 9 r9 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1423 1422 1775 99 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1775 1423 1776 99 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:741 _193 ] [741])
            (reg/v:SF 43 s27 [orig:297 y ] [297]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1776 1775 1426 99 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (nil))
(jump_insn 1426 1776 1769 99 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1039)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 1039)
(note 1769 1426 1770 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1770 1769 1771 100 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1771 1770 1430)
(code_label 1430 1771 1431 101 182 (nil) [1 uses])
(note 1431 1430 1432 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1432 1431 1435 101 (debug_marker) "../System/ray_funkcije.c":484:8 -1
     (nil))
(insn 1435 1432 1436 101 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:319 prephitmp_491 ] [319])
            (const_int 0 [0]))) "../System/ray_funkcije.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1436 1435 1772 101 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1480)
            (pc))) "../System/ray_funkcije.c":484:11 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 633507684 (nil))
 -> 1480)
(note 1772 1436 1773 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1773 1772 1774 102 (set (pc)
        (label_ref 1437)) 284 {*arm_jump}
     (nil)
 -> 1437)
(barrier 1774 1773 1898)
(note 1898 1774 0 NOTE_INSN_DELETED)
