
;; Function narisi_velik_kvadrat (narisi_velik_kvadrat, funcdef_no=866, decl_uid=11965, cgraph_uid=870, symbol_order=877)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) j {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=6,losers=1,rld_nregs=0
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 32:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 36:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 42:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 45
	 Choosing alt 0 in insn 45:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 48:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=12,losers=2,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 64:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) m  (1) r {*thumb2_movhi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 72:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 76:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 91:  (0) l  (1) l  (2) Pd {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=1,overall=6,losers=1,rld_nregs=0
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 88:  (0) m  (1) r {unaligned_storesi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 93:  (0) m  (1) r {*thumb2_movhi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
  BB 7
   Insn 93: point = 0, n_alt = 4
   Insn 88: point = 1, n_alt = 2
   Insn 84: point = 2, n_alt = 0
   Insn 91: point = 3, n_alt = 3
   Insn 83: point = 4, n_alt = 0
   Insn 86: point = 5, n_alt = 5
   Insn 82: point = 6, n_alt = 1
  BB 6
   Insn 78: point = 8, n_alt = -1
   Insn 77: point = 8, n_alt = 1
   Insn 76: point = 9, n_alt = 4
   Insn 73: point = 10, n_alt = 1
   Insn 72: point = 12, n_alt = 4
  BB 5
   Insn 66: point = 15, n_alt = 4
   Insn 64: point = 16, n_alt = 2
   Insn 60: point = 18, n_alt = 2
   Insn 58: point = 19, n_alt = 5
   Insn 56: point = 20, n_alt = 0
   Insn 55: point = 21, n_alt = 0
   Insn 54: point = 22, n_alt = 1
  BB 4
   Insn 50: point = 24, n_alt = -1
   Insn 49: point = 24, n_alt = 1
   Insn 48: point = 25, n_alt = 4
   Insn 45: point = 26, n_alt = 0
   Insn 42: point = 28, n_alt = 4
  BB 3
   Insn 38: point = 30, n_alt = 4
   Insn 36: point = 31, n_alt = 4
   Insn 32: point = 33, n_alt = 2
   Insn 30: point = 34, n_alt = 5
   Insn 28: point = 35, n_alt = 0
   Insn 27: point = 36, n_alt = 0
   Insn 26: point = 37, n_alt = 1
  BB 2
   Insn 22: point = 39, n_alt = -1
   Insn 21: point = 39, n_alt = 1
   Insn 12: point = 40, n_alt = 1
   Insn 4: point = 42, n_alt = -2
   Insn 20: point = 44, n_alt = 4
   Insn 17: point = 45, n_alt = 1
   Insn 124: point = 46, n_alt = -2
   Insn 2: point = 47, n_alt = -2
   Insn 11: point = 49, n_alt = 1
   Insn 123: point = 51, n_alt = -2
   Insn 122: point = 52, n_alt = -2
 r113: [32..45]
 r116: [17..26]
 r119: [1..10]
 r122: [27..28]
 r130: [11..47]
 r132: [0..42]
 r135: [41..49]
 r136: [13..40]
 r137: [39..44]
 r138: [33..37]
 r141: [30..34]
 r144: [30..31]
 r146: [24..25]
 r147: [18..22]
 r150: [15..19]
 r153: [15..16]
 r155: [11..12]
 r156: [8..9]
 r157: [1..6]
 r160: [0..5]
 r162: [0..3]
 r164: [48..52]
 r165: [50..51]
 r166: [43..46]
Compressing live ranges: from 53 to 28 - 52%
Ranges after the compression:
 r113: [16..23]
 r116: [8..11]
 r119: [0..3]
 r122: [12..13]
 r130: [4..23]
 r132: [0..21]
 r135: [20..25]
 r136: [6..19]
 r137: [18..23]
 r138: [16..17]
 r141: [14..17]
 r144: [14..15]
 r146: [10..11]
 r147: [8..9]
 r150: [6..9]
 r153: [6..7]
 r155: [4..5]
 r156: [2..3]
 r157: [0..1]
 r160: [0..1]
 r162: [0..1]
 r164: [24..27]
 r165: [26..27]
 r166: [22..23]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=8)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 32
changing reg in insn 36
changing reg in insn 21
changing reg in insn 21
changing reg in insn 45
changing reg in insn 60
changing reg in insn 64
changing reg in insn 49
changing reg in insn 49
changing reg in insn 73
changing reg in insn 88
changing reg in insn 91
changing reg in insn 77
changing reg in insn 77
changing reg in insn 42
changing reg in insn 43
changing reg in insn 2
changing reg in insn 17
changing reg in insn 73
changing reg in insn 4
changing reg in insn 84
changing reg in insn 83
changing reg in insn 56
changing reg in insn 55
changing reg in insn 28
changing reg in insn 27
changing reg in insn 11
changing reg in insn 17
changing reg in insn 12
changing reg in insn 12
changing reg in insn 72
changing reg in insn 70
changing reg in insn 42
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 27
changing reg in insn 26
changing reg in insn 32
changing reg in insn 28
changing reg in insn 27
changing reg in insn 30
changing reg in insn 32
changing reg in insn 38
changing reg in insn 36
changing reg in insn 38
changing reg in insn 48
changing reg in insn 49
changing reg in insn 56
changing reg in insn 55
changing reg in insn 54
changing reg in insn 60
changing reg in insn 56
changing reg in insn 55
changing reg in insn 58
changing reg in insn 60
changing reg in insn 66
changing reg in insn 64
changing reg in insn 66
changing reg in insn 72
changing reg in insn 73
changing reg in insn 76
changing reg in insn 77
changing reg in insn 84
changing reg in insn 83
changing reg in insn 82
changing reg in insn 88
changing reg in insn 84
changing reg in insn 83
changing reg in insn 86
changing reg in insn 88
changing reg in insn 93
changing reg in insn 91
changing reg in insn 93
changing reg in insn 122
changing reg in insn 2
changing reg in insn 123
changing reg in insn 11
changing reg in insn 11
changing reg in insn 124
changing reg in insn 4
deleting insn with uid = 122.
deleting insn with uid = 123.
deleting insn with uid = 2.
deleting insn with uid = 124.
deleting insn with uid = 4.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)


narisi_velik_kvadrat

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 100 [cc]
;;  ref usage 	r0={2d,5u} r1={9d,16u,2e} r2={1d,9u} r3={7d,9u} r4={3d,5u} r12={6d,8u,1e} r13={1d,8u} r14={2d,1u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={3d,3u} 
;;    total ref usage 117{50d,64u,3e} in 55{55 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 5 2 NOTE_INSN_DELETED)
(note 5 3 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 8 2 NOTE_INSN_DELETED)
(debug_insn 8 10 11 2 (debug_marker) "../System/pomozne_funkcije.c":29:2 -1
     (nil))
(insn 11 8 17 2 (set (reg:SI 1 r1 [135])
        (minus:SI (ashift:SI (reg:SI 1 r1 [165])
                (const_int 4 [0x4]))
            (reg:SI 1 r1 [165]))) "../System/pomozne_funkcije.c":29:6 319 {*rsb_shiftsi}
     (nil))
(insn 17 11 20 2 (set (reg:SI 12 ip [orig:113 _1 ] [113])
        (plus:SI (ashift:SI (reg:SI 1 r1 [135])
                (const_int 4 [0x4]))
            (reg/v:SI 0 r0 [orig:130 x ] [130]))) "../System/pomozne_funkcije.c":30:7 318 {*add_shiftsi}
     (nil))
(insn 20 17 12 2 (set (reg:SI 14 lr [137])
        (const_int 57597 [0xe0fd])) "../System/pomozne_funkcije.c":30:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57597 [0xe0fd])
        (nil)))
(insn 12 20 15 2 (set (reg:SI 3 r3 [136])
        (ashift:SI (reg:SI 1 r1 [135])
            (const_int 4 [0x4]))) "../System/pomozne_funkcije.c":29:6 147 {*arm_shiftsi3}
     (nil))
(debug_insn 15 12 16 2 (var_location:SI ay (reg:SI 3 r3 [136])) "../System/pomozne_funkcije.c":29:6 -1
     (nil))
(debug_insn 16 15 21 2 (debug_marker) "../System/pomozne_funkcije.c":30:2 -1
     (nil))
(insn 21 16 22 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 12 ip [orig:113 _1 ] [113])
            (reg:SI 14 lr [137]))) "../System/pomozne_funkcije.c":30:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 12 ip [orig:113 _1 ] [113])
            (const_int 57597 [0xe0fd]))
        (nil)))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "../System/pomozne_funkcije.c":30:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 39)
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 24 23 25 3 (debug_marker) "../System/pomozne_funkcije.c":31:3 -1
     (nil))
(debug_insn 25 24 26 3 (debug_marker) "../System/pomozne_funkcije.c":32:3 -1
     (nil))
(insn 26 25 27 3 (set (reg:SI 1 r1 [orig:138 c ] [138])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":31:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 27 26 28 3 (set (zero_extract:SI (reg:SI 1 r1 [orig:138 c ] [138])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":31:20 99 {insv_t2}
     (nil))
(insn 28 27 30 3 (set (zero_extract:SI (reg:SI 1 r1 [orig:138 c ] [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":31:20 99 {insv_t2}
     (nil))
(insn 30 28 32 3 (set (reg/f:SI 4 r4 [141])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":31:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 32 30 33 3 (set (mem:SI (plus:SI (mult:SI (reg:SI 12 ip [orig:113 _1 ] [113])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [141])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.49_36]+0 S4 A16])
        (unspec:SI [
                (reg:SI 1 r1 [orig:138 c ] [138])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":31:20 158 {unaligned_storesi}
     (nil))
(debug_insn 33 32 36 3 (debug_marker) "../System/pomozne_funkcije.c":33:3 -1
     (nil))
(insn 36 33 38 3 (set (reg:SI 12 ip [144])
        (plus:SI (reg:SI 12 ip [orig:113 _1 ] [113])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":33:22 7 {*arm_addsi3}
     (nil))
(insn 38 36 39 3 (set (mem:HI (plus:SI (mult:SI (reg:SI 12 ip [144])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [141])) [3 pixels[_5]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":33:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 39 38 40 4 2 (nil) [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 41 40 42 4 (debug_marker) "../System/pomozne_funkcije.c":36:2 -1
     (nil))
(insn 42 41 43 4 (set (reg/v:SI 1 r1 [orig:122 ay ] [122])
        (plus:SI (reg:SI 3 r3 [136])
            (const_int 240 [0xf0]))) "../System/pomozne_funkcije.c":36:5 7 {*arm_addsi3}
     (nil))
(debug_insn 43 42 44 4 (var_location:SI ay (reg/v:SI 1 r1 [orig:122 ay ] [122])) "../System/pomozne_funkcije.c":36:5 -1
     (nil))
(debug_insn 44 43 45 4 (debug_marker) "../System/pomozne_funkcije.c":37:2 -1
     (nil))
(insn 45 44 48 4 (set (reg:SI 1 r1 [orig:116 _7 ] [116])
        (plus:SI (reg/v:SI 1 r1 [orig:122 ay ] [122])
            (reg/v:SI 0 r0 [orig:130 x ] [130]))) "../System/pomozne_funkcije.c":37:7 7 {*arm_addsi3}
     (nil))
(insn 48 45 49 4 (set (reg:SI 12 ip [146])
        (const_int 57597 [0xe0fd])) "../System/pomozne_funkcije.c":37:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57597 [0xe0fd])
        (nil)))
(insn 49 48 50 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:116 _7 ] [116])
            (reg:SI 12 ip [146]))) "../System/pomozne_funkcije.c":37:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 1 r1 [orig:116 _7 ] [116])
            (const_int 57597 [0xe0fd]))
        (nil)))
(jump_insn 50 49 51 4 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "../System/pomozne_funkcije.c":37:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 67)
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 52 51 53 5 (debug_marker) "../System/pomozne_funkcije.c":38:3 -1
     (nil))
(debug_insn 53 52 54 5 (debug_marker) "../System/pomozne_funkcije.c":39:3 -1
     (nil))
(insn 54 53 55 5 (set (reg:SI 12 ip [orig:147 c ] [147])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":38:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 55 54 56 5 (set (zero_extract:SI (reg:SI 12 ip [orig:147 c ] [147])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":38:20 99 {insv_t2}
     (nil))
(insn 56 55 58 5 (set (zero_extract:SI (reg:SI 12 ip [orig:147 c ] [147])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":38:20 99 {insv_t2}
     (nil))
(insn 58 56 60 5 (set (reg/f:SI 4 r4 [150])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":38:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 60 58 61 5 (set (mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:116 _7 ] [116])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [150])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.51_42]+0 S4 A16])
        (unspec:SI [
                (reg:SI 12 ip [orig:147 c ] [147])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":38:20 158 {unaligned_storesi}
     (nil))
(debug_insn 61 60 64 5 (debug_marker) "../System/pomozne_funkcije.c":40:3 -1
     (nil))
(insn 64 61 66 5 (set (reg:SI 1 r1 [153])
        (plus:SI (reg:SI 1 r1 [orig:116 _7 ] [116])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":40:22 7 {*arm_addsi3}
     (nil))
(insn 66 64 67 5 (set (mem:HI (plus:SI (mult:SI (reg:SI 1 r1 [153])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [150])) [3 pixels[_11]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":40:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 67 66 68 6 3 (nil) [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 69 68 70 6 (debug_marker) "../System/pomozne_funkcije.c":43:2 -1
     (nil))
(debug_insn 70 69 71 6 (var_location:SI ay (plus:SI (reg:SI 3 r3 [136])
        (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":43:5 -1
     (nil))
(debug_insn 71 70 72 6 (debug_marker) "../System/pomozne_funkcije.c":44:2 -1
     (nil))
(insn 72 71 73 6 (set (reg:SI 3 r3 [orig:155 ay ] [155])
        (plus:SI (reg:SI 3 r3 [136])
            (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":43:5 7 {*arm_addsi3}
     (nil))
(insn 73 72 76 6 (set (reg:SI 1 r1 [orig:119 _13 ] [119])
        (plus:SI (reg:SI 3 r3 [orig:155 ay ] [155])
            (reg/v:SI 0 r0 [orig:130 x ] [130]))) "../System/pomozne_funkcije.c":44:7 7 {*arm_addsi3}
     (nil))
(insn 76 73 77 6 (set (reg:SI 3 r3 [156])
        (const_int 57597 [0xe0fd])) "../System/pomozne_funkcije.c":44:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57597 [0xe0fd])
        (nil)))
(insn 77 76 78 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1 r1 [orig:119 _13 ] [119])
            (reg:SI 3 r3 [156]))) "../System/pomozne_funkcije.c":44:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 1 r1 [orig:119 _13 ] [119])
            (const_int 57597 [0xe0fd]))
        (nil)))
(jump_insn 78 77 79 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 96)
            (pc))) "../System/pomozne_funkcije.c":44:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 96)
(note 79 78 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 80 79 81 7 (debug_marker) "../System/pomozne_funkcije.c":45:3 -1
     (nil))
(debug_insn 81 80 82 7 (debug_marker) "../System/pomozne_funkcije.c":46:3 -1
     (nil))
(insn 82 81 86 7 (set (reg:SI 3 r3 [orig:157 c ] [157])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":45:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 86 82 83 7 (set (reg/f:SI 0 r0 [160])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":45:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 83 86 91 7 (set (zero_extract:SI (reg:SI 3 r3 [orig:157 c ] [157])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":45:20 99 {insv_t2}
     (nil))
(insn 91 83 84 7 (set (reg:SI 4 r4 [162])
        (plus:SI (reg:SI 1 r1 [orig:119 _13 ] [119])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":47:22 7 {*arm_addsi3}
     (nil))
(insn 84 91 88 7 (set (zero_extract:SI (reg:SI 3 r3 [orig:157 c ] [157])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":45:20 99 {insv_t2}
     (nil))
(insn 88 84 89 7 (set (mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:119 _13 ] [119])
                    (const_int 2 [0x2]))
                (reg/f:SI 0 r0 [160])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.53_46]+0 S4 A16])
        (unspec:SI [
                (reg:SI 3 r3 [orig:157 c ] [157])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":45:20 158 {unaligned_storesi}
     (nil))
(debug_insn 89 88 93 7 (debug_marker) "../System/pomozne_funkcije.c":47:3 -1
     (nil))
(insn 93 89 96 7 (set (mem:HI (plus:SI (mult:SI (reg:SI 4 r4 [162])
                    (const_int 2 [0x2]))
                (reg/f:SI 0 r0 [160])) [3 pixels[_16]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":47:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 96 93 97 8 1 (nil) [1 uses])
(note 97 96 128 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 128 97 129 NOTE_INSN_DELETED)
(note 129 128 0 NOTE_INSN_DELETED)

;; Function narisi_velik_kvadrat_stene (narisi_velik_kvadrat_stene, funcdef_no=867, decl_uid=11969, cgraph_uid=871, symbol_order=878)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) j {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=12,losers=2,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) m  (1) r {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 37:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 41:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 43:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 47:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 50
	 Choosing alt 0 in insn 50:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=12,losers=2,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) m  (1) r {unaligned_storesi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 69:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 73:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 75:  (0) m  (1) r {*thumb2_movhi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 81:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 0 in insn 82:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 85:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) +r  (1) M  (2) M  (3) r {insv_t2}
          alt=1,overall=6,losers=1,rld_nregs=0
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 100:  (0) m  (1) r {unaligned_storesi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 104:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) Uw  (1) l {unaligned_storesi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 106:  (0) m  (1) r {*thumb2_movhi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
  BB 7
   Insn 106: point = 0, n_alt = 4
   Insn 101: point = 1, n_alt = 1
   Insn 104: point = 2, n_alt = 2
   Insn 100: point = 4, n_alt = 2
   Insn 91: point = 4, n_alt = 0
   Insn 99: point = 5, n_alt = 1
   Insn 90: point = 6, n_alt = 0
   Insn 89: point = 7, n_alt = 1
   Insn 98: point = 8, n_alt = 5
  BB 6
   Insn 87: point = 10, n_alt = -1
   Insn 86: point = 10, n_alt = 1
   Insn 85: point = 11, n_alt = 4
   Insn 82: point = 12, n_alt = 0
   Insn 81: point = 14, n_alt = 4
  BB 5
   Insn 75: point = 17, n_alt = 4
   Insn 73: point = 18, n_alt = 2
   Insn 69: point = 20, n_alt = 2
   Insn 67: point = 21, n_alt = 1
   Insn 68: point = 22, n_alt = 2
   Insn 66: point = 22, n_alt = 5
   Insn 59: point = 23, n_alt = 0
   Insn 58: point = 24, n_alt = 0
   Insn 57: point = 25, n_alt = 1
  BB 4
   Insn 55: point = 27, n_alt = -1
   Insn 54: point = 27, n_alt = 1
   Insn 53: point = 28, n_alt = 4
   Insn 50: point = 29, n_alt = 0
   Insn 47: point = 31, n_alt = 4
  BB 3
   Insn 43: point = 33, n_alt = 4
   Insn 41: point = 34, n_alt = 2
   Insn 37: point = 36, n_alt = 2
   Insn 35: point = 37, n_alt = 1
   Insn 36: point = 38, n_alt = 2
   Insn 34: point = 38, n_alt = 5
   Insn 27: point = 39, n_alt = 0
   Insn 26: point = 40, n_alt = 0
   Insn 25: point = 41, n_alt = 1
  BB 2
   Insn 23: point = 43, n_alt = -1
   Insn 22: point = 43, n_alt = 1
   Insn 13: point = 44, n_alt = 1
   Insn 4: point = 46, n_alt = -2
   Insn 21: point = 48, n_alt = 4
   Insn 18: point = 49, n_alt = 1
   Insn 113: point = 50, n_alt = -2
   Insn 2: point = 51, n_alt = -2
   Insn 12: point = 53, n_alt = 1
   Insn 112: point = 55, n_alt = -2
   Insn 111: point = 56, n_alt = -2
 r113: [35..49]
 r116: [19..29]
 r119: [3..12]
 r122: [30..31]
 r125: [36..37]
 r127: [20..21]
 r129: [1..5]
 r130: [13..51]
 r132: [0..46]
 r135: [45..53]
 r136: [15..44]
 r137: [43..48]
 r138: [36..41]
 r140: [33..38]
 r143: [33..34]
 r145: [27..28]
 r146: [20..25]
 r148: [17..22]
 r151: [17..18]
 r153: [13..14]
 r154: [10..11]
 r155: [1..7]
 r157: [0..8]
 r159: [0..2]
 r161: [52..56]
 r162: [54..55]
 r163: [47..50]
Compressing live ranges: from 57 to 30 - 52%
Ranges after the compression:
 r113: [18..25]
 r116: [10..13]
 r119: [2..5]
 r122: [14..15]
 r125: [18..19]
 r127: [10..11]
 r129: [0..3]
 r130: [6..25]
 r132: [0..23]
 r135: [22..27]
 r136: [8..21]
 r137: [20..25]
 r138: [18..19]
 r140: [16..19]
 r143: [16..17]
 r145: [12..13]
 r146: [10..11]
 r148: [8..11]
 r151: [8..9]
 r153: [6..7]
 r154: [4..5]
 r155: [0..3]
 r157: [0..3]
 r159: [0..1]
 r161: [26..29]
 r162: [28..29]
 r163: [24..25]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=8, prev_offset=8)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 35
changing reg in insn 36
changing reg in insn 41
changing reg in insn 22
changing reg in insn 22
changing reg in insn 50
changing reg in insn 67
changing reg in insn 68
changing reg in insn 73
changing reg in insn 54
changing reg in insn 54
changing reg in insn 82
changing reg in insn 99
changing reg in insn 100
changing reg in insn 104
changing reg in insn 86
changing reg in insn 86
changing reg in insn 47
changing reg in insn 48
changing reg in insn 35
changing reg in insn 37
changing reg in insn 67
changing reg in insn 69
changing reg in insn 99
changing reg in insn 101
changing reg in insn 2
changing reg in insn 18
changing reg in insn 4
changing reg in insn 91
changing reg in insn 90
changing reg in insn 59
changing reg in insn 58
changing reg in insn 27
changing reg in insn 26
changing reg in insn 12
changing reg in insn 18
changing reg in insn 13
changing reg in insn 13
changing reg in insn 81
changing reg in insn 79
changing reg in insn 47
changing reg in insn 16
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 26
changing reg in insn 25
changing reg in insn 36
changing reg in insn 37
changing reg in insn 27
changing reg in insn 26
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 43
changing reg in insn 41
changing reg in insn 43
changing reg in insn 53
changing reg in insn 54
changing reg in insn 59
changing reg in insn 58
changing reg in insn 57
changing reg in insn 68
changing reg in insn 69
changing reg in insn 59
changing reg in insn 58
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 75
changing reg in insn 73
changing reg in insn 75
changing reg in insn 81
changing reg in insn 85
changing reg in insn 86
changing reg in insn 91
changing reg in insn 90
changing reg in insn 89
changing reg in insn 100
changing reg in insn 101
changing reg in insn 91
changing reg in insn 90
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 106
changing reg in insn 104
changing reg in insn 106
changing reg in insn 111
changing reg in insn 2
changing reg in insn 112
changing reg in insn 12
changing reg in insn 12
changing reg in insn 113
changing reg in insn 4
deleting insn with uid = 111.
deleting insn with uid = 112.
deleting insn with uid = 2.
deleting insn with uid = 113.
deleting insn with uid = 4.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)


narisi_velik_kvadrat_stene

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,8u,1e} r1={5d,12u} r2={1d,9u} r3={10d,17u,2e} r4={5d,9u} r12={6d,8u} r13={1d,8u} r14={3d,2u} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={3d,3u} 
;;    total ref usage 132{53d,76u,3e} in 68{68 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 6 5 2 NOTE_INSN_DELETED)
(note 5 3 11 2 NOTE_INSN_FUNCTION_BEG)
(note 11 5 8 2 NOTE_INSN_DELETED)
(debug_insn 8 11 9 2 (debug_marker) "../System/pomozne_funkcije.c":53:2 -1
     (nil))
(debug_insn 9 8 12 2 (debug_marker) "../System/pomozne_funkcije.c":54:2 -1
     (nil))
(insn 12 9 18 2 (set (reg:SI 1 r1 [135])
        (minus:SI (ashift:SI (reg:SI 1 r1 [162])
                (const_int 4 [0x4]))
            (reg:SI 1 r1 [162]))) "../System/pomozne_funkcije.c":54:5 319 {*rsb_shiftsi}
     (nil))
(insn 18 12 21 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (plus:SI (ashift:SI (reg:SI 1 r1 [135])
                (const_int 4 [0x4]))
            (reg/v:SI 0 r0 [orig:130 x ] [130]))) "../System/pomozne_funkcije.c":55:7 318 {*add_shiftsi}
     (nil))
(insn 21 18 13 2 (set (reg:SI 4 r4 [137])
        (const_int 57595 [0xe0fb])) "../System/pomozne_funkcije.c":55:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57595 [0xe0fb])
        (nil)))
(insn 13 21 16 2 (set (reg:SI 1 r1 [136])
        (ashift:SI (reg:SI 1 r1 [135])
            (const_int 4 [0x4]))) "../System/pomozne_funkcije.c":54:5 147 {*arm_shiftsi3}
     (nil))
(debug_insn 16 13 17 2 (var_location:SI ay (reg:SI 1 r1 [136])) "../System/pomozne_funkcije.c":54:5 -1
     (nil))
(debug_insn 17 16 22 2 (debug_marker) "../System/pomozne_funkcije.c":55:2 -1
     (nil))
(insn 22 17 23 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (reg:SI 4 r4 [137]))) "../System/pomozne_funkcije.c":55:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 57595 [0xe0fb]))
        (nil)))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "../System/pomozne_funkcije.c":55:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 44)
(note 24 23 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 33 24 25 3 NOTE_INSN_DELETED)
(insn 25 33 26 3 (set (reg:SI 12 ip [orig:138 c ] [138])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 26 25 27 3 (set (zero_extract:SI (reg:SI 12 ip [orig:138 c ] [138])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(insn 27 26 29 3 (set (zero_extract:SI (reg:SI 12 ip [orig:138 c ] [138])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(debug_insn 29 27 30 3 (debug_marker) "../System/pomozne_funkcije.c":56:3 -1
     (nil))
(debug_insn 30 29 31 3 (debug_marker) "../System/pomozne_funkcije.c":57:3 -1
     (nil))
(debug_insn 31 30 32 3 (debug_marker) "../System/pomozne_funkcije.c":58:3 -1
     (nil))
(debug_insn 32 31 34 3 (debug_marker) "../System/pomozne_funkcije.c":59:3 -1
     (nil))
(insn 34 32 36 3 (set (reg/f:SI 4 r4 [140])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 36 34 35 3 (set (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [140])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.58_56]+0 S4 A16])
        (unspec:SI [
                (reg:SI 12 ip [orig:138 c ] [138])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":56:20 158 {unaligned_storesi}
     (nil))
(insn 35 36 37 3 (set (reg/f:SI 14 lr [orig:125 vectp.58 ] [125])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 1 [0x1]))
            (reg/f:SI 4 r4 [140]))) 318 {*add_shiftsi}
     (nil))
(insn 37 35 38 3 (set (mem:SI (plus:SI (reg/f:SI 14 lr [orig:125 vectp.58 ] [125])
                (const_int 4 [0x4])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.58_56 + 4B]+0 S4 A16])
        (unspec:SI [
                (reg:SI 12 ip [orig:138 c ] [138])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":56:20 158 {unaligned_storesi}
     (nil))
(debug_insn 38 37 41 3 (debug_marker) "../System/pomozne_funkcije.c":60:3 -1
     (nil))
(insn 41 38 43 3 (set (reg:SI 3 r3 [143])
        (plus:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 4 [0x4]))) "../System/pomozne_funkcije.c":60:22 7 {*arm_addsi3}
     (nil))
(insn 43 41 44 3 (set (mem:HI (plus:SI (mult:SI (reg:SI 3 r3 [143])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [140])) [3 pixels[_9]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":60:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 44 43 45 4 10 (nil) [1 uses])
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 46 45 47 4 (debug_marker) "../System/pomozne_funkcije.c":63:2 -1
     (nil))
(insn 47 46 48 4 (set (reg/v:SI 3 r3 [orig:122 ay ] [122])
        (plus:SI (reg:SI 1 r1 [136])
            (const_int 240 [0xf0]))) "../System/pomozne_funkcije.c":63:5 7 {*arm_addsi3}
     (nil))
(debug_insn 48 47 49 4 (var_location:SI ay (reg/v:SI 3 r3 [orig:122 ay ] [122])) "../System/pomozne_funkcije.c":63:5 -1
     (nil))
(debug_insn 49 48 50 4 (debug_marker) "../System/pomozne_funkcije.c":64:2 -1
     (nil))
(insn 50 49 53 4 (set (reg:SI 3 r3 [orig:116 _11 ] [116])
        (plus:SI (reg/v:SI 3 r3 [orig:122 ay ] [122])
            (reg/v:SI 0 r0 [orig:130 x ] [130]))) "../System/pomozne_funkcije.c":64:8 7 {*arm_addsi3}
     (nil))
(insn 53 50 54 4 (set (reg:SI 4 r4 [145])
        (const_int 57595 [0xe0fb])) "../System/pomozne_funkcije.c":64:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57595 [0xe0fb])
        (nil)))
(insn 54 53 55 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _11 ] [116])
            (reg:SI 4 r4 [145]))) "../System/pomozne_funkcije.c":64:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:116 _11 ] [116])
            (const_int 57595 [0xe0fb]))
        (nil)))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "../System/pomozne_funkcije.c":64:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 76)
(note 56 55 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 65 56 57 5 NOTE_INSN_DELETED)
(insn 57 65 58 5 (set (reg:SI 12 ip [orig:146 c ] [146])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 58 57 59 5 (set (zero_extract:SI (reg:SI 12 ip [orig:146 c ] [146])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(insn 59 58 61 5 (set (zero_extract:SI (reg:SI 12 ip [orig:146 c ] [146])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(debug_insn 61 59 62 5 (debug_marker) "../System/pomozne_funkcije.c":65:3 -1
     (nil))
(debug_insn 62 61 63 5 (debug_marker) "../System/pomozne_funkcije.c":66:3 -1
     (nil))
(debug_insn 63 62 64 5 (debug_marker) "../System/pomozne_funkcije.c":67:3 -1
     (nil))
(debug_insn 64 63 66 5 (debug_marker) "../System/pomozne_funkcije.c":68:3 -1
     (nil))
(insn 66 64 68 5 (set (reg/f:SI 4 r4 [148])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 68 66 67 5 (set (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:116 _11 ] [116])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [148])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.60_64]+0 S4 A16])
        (unspec:SI [
                (reg:SI 12 ip [orig:146 c ] [146])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":65:20 158 {unaligned_storesi}
     (nil))
(insn 67 68 69 5 (set (reg/f:SI 14 lr [orig:127 vectp.60 ] [127])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:116 _11 ] [116])
                (const_int 1 [0x1]))
            (reg/f:SI 4 r4 [148]))) 318 {*add_shiftsi}
     (nil))
(insn 69 67 70 5 (set (mem:SI (plus:SI (reg/f:SI 14 lr [orig:127 vectp.60 ] [127])
                (const_int 4 [0x4])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.60_64 + 4B]+0 S4 A16])
        (unspec:SI [
                (reg:SI 12 ip [orig:146 c ] [146])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":65:20 158 {unaligned_storesi}
     (nil))
(debug_insn 70 69 73 5 (debug_marker) "../System/pomozne_funkcije.c":69:3 -1
     (nil))
(insn 73 70 75 5 (set (reg:SI 3 r3 [151])
        (plus:SI (reg:SI 3 r3 [orig:116 _11 ] [116])
            (const_int 4 [0x4]))) "../System/pomozne_funkcije.c":69:22 7 {*arm_addsi3}
     (nil))
(insn 75 73 76 5 (set (mem:HI (plus:SI (mult:SI (reg:SI 3 r3 [151])
                    (const_int 2 [0x2]))
                (reg/f:SI 4 r4 [148])) [3 pixels[_19]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":69:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 76 75 77 6 11 (nil) [1 uses])
(note 77 76 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 78 77 79 6 (debug_marker) "../System/pomozne_funkcije.c":72:2 -1
     (nil))
(debug_insn 79 78 80 6 (var_location:SI ay (plus:SI (reg:SI 1 r1 [136])
        (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":72:5 -1
     (nil))
(debug_insn 80 79 81 6 (debug_marker) "../System/pomozne_funkcije.c":73:2 -1
     (nil))
(insn 81 80 82 6 (set (reg:SI 1 r1 [orig:153 ay ] [153])
        (plus:SI (reg:SI 1 r1 [136])
            (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":72:5 7 {*arm_addsi3}
     (nil))
(insn 82 81 85 6 (set (reg:SI 0 r0 [orig:119 _21 ] [119])
        (plus:SI (reg/v:SI 0 r0 [orig:130 x ] [130])
            (reg:SI 1 r1 [orig:153 ay ] [153]))) "../System/pomozne_funkcije.c":73:8 7 {*arm_addsi3}
     (nil))
(insn 85 82 86 6 (set (reg:SI 3 r3 [154])
        (const_int 57595 [0xe0fb])) "../System/pomozne_funkcije.c":73:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 57595 [0xe0fb])
        (nil)))
(insn 86 85 87 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:119 _21 ] [119])
            (reg:SI 3 r3 [154]))) "../System/pomozne_funkcije.c":73:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 0 r0 [orig:119 _21 ] [119])
            (const_int 57595 [0xe0fb]))
        (nil)))
(jump_insn 87 86 88 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 109)
            (pc))) "../System/pomozne_funkcije.c":73:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 109)
(note 88 87 97 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 97 88 98 7 NOTE_INSN_DELETED)
(insn 98 97 89 7 (set (reg/f:SI 1 r1 [157])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 89 98 90 7 (set (reg:SI 3 r3 [orig:155 c ] [155])
        (const_int 0 [0])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 90 89 99 7 (set (zero_extract:SI (reg:SI 3 r3 [orig:155 c ] [155])
            (const_int 16 [0x10])
            (const_int 0 [0]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(insn 99 90 91 7 (set (reg/f:SI 4 r4 [orig:129 vectp.62 ] [129])
        (plus:SI (ashift:SI (reg:SI 0 r0 [orig:119 _21 ] [119])
                (const_int 1 [0x1]))
            (reg/f:SI 1 r1 [157]))) 318 {*add_shiftsi}
     (nil))
(insn 91 99 93 7 (set (zero_extract:SI (reg:SI 3 r3 [orig:155 c ] [155])
            (const_int 16 [0x10])
            (const_int 16 [0x10]))
        (reg/v:SI 2 r2 [orig:132 c ] [132])) 99 {insv_t2}
     (nil))
(debug_insn 93 91 94 7 (debug_marker) "../System/pomozne_funkcije.c":74:3 -1
     (nil))
(debug_insn 94 93 95 7 (debug_marker) "../System/pomozne_funkcije.c":75:3 -1
     (nil))
(debug_insn 95 94 96 7 (debug_marker) "../System/pomozne_funkcije.c":76:3 -1
     (nil))
(debug_insn 96 95 100 7 (debug_marker) "../System/pomozne_funkcije.c":77:3 -1
     (nil))
(insn 100 96 104 7 (set (mem:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:119 _21 ] [119])
                    (const_int 2 [0x2]))
                (reg/f:SI 1 r1 [157])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.62_72]+0 S4 A16])
        (unspec:SI [
                (reg:SI 3 r3 [orig:155 c ] [155])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":74:20 158 {unaligned_storesi}
     (nil))
(insn 104 100 101 7 (set (reg:SI 0 r0 [159])
        (plus:SI (reg:SI 0 r0 [orig:119 _21 ] [119])
            (const_int 4 [0x4]))) "../System/pomozne_funkcije.c":78:22 7 {*arm_addsi3}
     (nil))
(insn 101 104 102 7 (set (mem:SI (plus:SI (reg/f:SI 4 r4 [orig:129 vectp.62 ] [129])
                (const_int 4 [0x4])) [3 MEM <vector(2) short unsigned int> [(short unsigned int *)vectp.62_72 + 4B]+0 S4 A16])
        (unspec:SI [
                (reg:SI 3 r3 [orig:155 c ] [155])
            ] UNSPEC_UNALIGNED_STORE)) "../System/pomozne_funkcije.c":74:20 158 {unaligned_storesi}
     (nil))
(debug_insn 102 101 106 7 (debug_marker) "../System/pomozne_funkcije.c":78:3 -1
     (nil))
(insn 106 102 109 7 (set (mem:HI (plus:SI (mult:SI (reg:SI 0 r0 [159])
                    (const_int 2 [0x2]))
                (reg/f:SI 1 r1 [157])) [3 pixels[_26]+0 S2 A16])
        (reg:HI 2 r2 [orig:132 c ] [132])) "../System/pomozne_funkcije.c":78:22 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 109 106 110 8 9 (nil) [1 uses])
(note 110 109 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 117 110 118 NOTE_INSN_DELETED)
(note 118 117 0 NOTE_INSN_DELETED)

;; Function reset (reset, funcdef_no=868, decl_uid=11970, cgraph_uid=872, symbol_order=879)

      Creating newreg=158
Removing SCRATCH in insn #37 (nop 3)
rescanning insn with uid = 37.
      Creating newreg=159
Removing SCRATCH in insn #49 (nop 3)
rescanning insn with uid = 49.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
      Removing equiv init insn 100 (freq=1)
  100: r152:SI=sfp:SI+0x8
      REG_EQUIV sfp:SI-0x8
deleting insn with uid = 100.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) I {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r158
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) l  (1) l  (2) l {*arm_addsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r159
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) r  (2) r  (3) r {*mls}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 46:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) r  (2) r  (3) r {*mls}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 62:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 63:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 64:  (0) r  (1) rk  (2) rI {*arm_addsi3}
Changing pseudo 152 in operand 1 of insn 70 on equiv sfp:SI+0x8
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=160, assigning class CORE_REGS to r160
   70: r0:SI=r160:SI
      REG_EQUAL sfp:SI-0x8
    Inserting insn reload before:
  113: r160:SI=sfp:SI+0x8

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 113:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r160
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 152 in operand 1 of insn 78 on equiv sfp:SI+0x8
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=161, assigning class CORE_REGS to r161
   78: r0:SI=r161:SI
      REG_EQUAL sfp:SI-0x8
    Inserting insn reload before:
  114: r161:SI=sfp:SI+0x8

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 114:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r161
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =l  (1) l  (2) lPt {thumb2_addsi3_compare0}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
  BB 5
   Insn 92: point = 0, n_alt = -1
   Insn 91: point = 0, n_alt = 0
  BB 4
   Insn 84: point = 2, n_alt = 0
   Insn 108: point = 3, n_alt = -2
   Insn 79: point = 4, n_alt = -1
   Insn 78: point = 4, n_alt = 0
	Hard reg 0 is preferable by r161 with profit 1000
   Insn 114: point = 5, n_alt = 4
   Insn 103: point = 6, n_alt = 1
  BB 3
   Insn 71: point = 7, n_alt = -1
   Insn 70: point = 7, n_alt = 0
	Hard reg 0 is preferable by r160 with profit 110
   Insn 113: point = 8, n_alt = 4
   Insn 67: point = 9, n_alt = -1
   Insn 66: point = 9, n_alt = -2
   Insn 65: point = 10, n_alt = -2
   Insn 64: point = 11, n_alt = 4
   Insn 63: point = 11, n_alt = 4
   Insn 62: point = 11, n_alt = 8
   Insn 109: point = 11, n_alt = 0
   Insn 47: point = 13, n_alt = 0
   Insn 56: point = 15, n_alt = 0
   Insn 46: point = 17, n_alt = 2
   Insn 53: point = 19, n_alt = 1
   Insn 44: point = 21, n_alt = 0
   Insn 52: point = 23, n_alt = 1
   Insn 50: point = 24, n_alt = 1
   Insn 41: point = 26, n_alt = 1
   Insn 40: point = 28, n_alt = 1
   Insn 49: point = 29, n_alt = 0
   Insn 38: point = 30, n_alt = 1
   Insn 37: point = 32, n_alt = 0
   Insn 33: point = 33, n_alt = -2
   Insn 107: point = 35, n_alt = -2
   Insn 32: point = 36, n_alt = -1
   Insn 29: point = 36, n_alt = -2
   Insn 106: point = 38, n_alt = -2
   Insn 28: point = 39, n_alt = -1
  BB 2
   Insn 61: point = 40, n_alt = 1
   Insn 42: point = 41, n_alt = 1
   Insn 3: point = 42, n_alt = 1
   Insn 36: point = 43, n_alt = 5
   Insn 8: point = 44, n_alt = -1
   Insn 7: point = 44, n_alt = 1
  r152 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 11 (  1.6)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      122  127  132  148
    liveout: 2:

        7   13  102  103  122  127  132  148

BB 3:
    gen: 3:

      127  132  148
    killed: 3:

      113  116  118  123  125  126  128  130  133  135  136
      137  139  141  144  154  155  158  159  160
    livein: 3:

      122  127  132  148
    liveout: 3:

        7   13  102  103  122  127  132  148

BB 4:
    killed: 4:

      100  156  161
    livein: 4:

      122  127  132  148
    liveout: 4:

        7   13  102  103  122  127  132  148

BB 5:
    gen: 5:

      122
    killed: 5:

      100  122
    livein: 5:

      122  127  132  148
    liveout: 5:

        7   13  102  103  122  127  132  148

BB 6:
    liveout: 6:

        7   13  102  103
 r113: [22..36]
 r116: [16..33]
 r118: [9..13]
 r122: [0..42]
 r123: [10..11]
 r125: [22..26]
 r126: [31..32]
 r127: [0..43]
 r128: [27..30]
 r130: [27..28]
 r132: [0..41]
 r133: [18..21]
 r135: [14..17]
 r136: [16..19]
 r137: [25..29]
 r139: [20..24]
 r141: [20..23]
 r144: [12..15]
 r148: [0..40]
 r152: [0..44]
 r154: [37..38]
 r155: [34..35]
 r156: [2..3]
 r158: [32..32]
 r159: [29..29]
 r160: [7..8]
 r161: [4..5]
Compressing live ranges: from 45 to 33 - 73%
Ranges after the compression:
 r113: [18..30]
 r116: [12..28]
 r118: [6..9]
 r122: [0..32]
 r123: [6..7]
 r125: [18..21]
 r126: [26..27]
 r127: [0..32]
 r128: [22..25]
 r130: [22..23]
 r132: [0..32]
 r133: [14..17]
 r135: [10..13]
 r136: [12..15]
 r137: [20..24]
 r139: [16..19]
 r141: [16..19]
 r144: [8..11]
 r148: [0..32]
 r152: [0..32]
 r154: [31..32]
 r155: [29..30]
 r156: [0..1]
 r158: [27..27]
 r159: [24..24]
 r160: [4..5]
 r161: [2..3]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 6
  BB 5
   Insn 92: point = 0, n_alt = -1
   Insn 91: point = 0, n_alt = 0
  BB 4
   Insn 84: point = 2, n_alt = 0
   Insn 108: point = 3, n_alt = -2
   Insn 79: point = 4, n_alt = -1
   Insn 78: point = 4, n_alt = 0
	Hard reg 0 is preferable by r161 with profit 1000
   Insn 114: point = 5, n_alt = 4
   Insn 103: point = 6, n_alt = 1
  BB 3
   Insn 71: point = 7, n_alt = -1
   Insn 70: point = 7, n_alt = 0
	Hard reg 0 is preferable by r160 with profit 110
   Insn 113: point = 8, n_alt = 4
   Insn 67: point = 9, n_alt = -1
   Insn 66: point = 9, n_alt = -2
   Insn 65: point = 10, n_alt = -2
   Insn 64: point = 11, n_alt = 4
   Insn 63: point = 11, n_alt = 4
   Insn 62: point = 11, n_alt = 8
   Insn 109: point = 11, n_alt = 0
   Insn 47: point = 13, n_alt = 0
   Insn 56: point = 15, n_alt = 0
   Insn 46: point = 17, n_alt = 2
   Insn 53: point = 19, n_alt = 1
   Insn 44: point = 21, n_alt = 0
   Insn 52: point = 23, n_alt = 1
   Insn 50: point = 24, n_alt = 1
   Insn 41: point = 26, n_alt = 1
   Insn 40: point = 28, n_alt = 1
   Insn 49: point = 29, n_alt = 0
   Insn 38: point = 30, n_alt = 1
   Insn 37: point = 32, n_alt = 0
   Insn 33: point = 33, n_alt = -2
   Insn 107: point = 35, n_alt = -2
   Insn 32: point = 36, n_alt = -1
   Insn 29: point = 36, n_alt = -2
   Insn 106: point = 38, n_alt = -2
   Insn 28: point = 39, n_alt = -1
  BB 2
   Insn 61: point = 40, n_alt = 1
   Insn 42: point = 41, n_alt = 1
   Insn 3: point = 42, n_alt = 1
   Insn 36: point = 43, n_alt = 5
   Insn 8: point = 44, n_alt = -1
   Insn 7: point = 44, n_alt = 1
 r113: [22..36]
 r116: [16..33]
 r118: [9..13]
 r122: [0..42]
 r123: [10..11]
 r125: [22..26]
 r126: [31..32]
 r127: [0..43]
 r128: [27..30]
 r130: [27..28]
 r132: [0..41]
 r133: [18..21]
 r135: [14..17]
 r136: [16..19]
 r137: [25..29]
 r139: [20..24]
 r141: [20..23]
 r144: [12..15]
 r148: [0..40]
 r154: [37..38]
 r155: [34..35]
 r156: [2..3]
 r158: [32..32]
 r159: [29..29]
 r160: [7..8]
 r161: [4..5]
Compressing live ranges: from 44 to 33 - 75%
Ranges after the compression:
 r113: [18..30]
 r116: [12..28]
 r118: [6..9]
 r122: [0..32]
 r123: [6..7]
 r125: [18..21]
 r126: [26..27]
 r127: [0..32]
 r128: [22..25]
 r130: [22..23]
 r132: [0..32]
 r133: [14..17]
 r135: [10..13]
 r136: [12..15]
 r137: [20..24]
 r139: [16..19]
 r141: [16..19]
 r144: [8..11]
 r148: [0..32]
 r154: [31..32]
 r155: [29..30]
 r156: [0..1]
 r158: [27..27]
 r159: [24..24]
 r160: [4..5]
 r161: [2..3]

********** Assignment #1: **********

	 Assigning to 161 (cl=GENERAL_REGS, orig=161, freq=2000, tfirst=161, tfreq=2000)...
	   Assign 0 to reload r161 (freq=2000)
	 Assigning to 160 (cl=GENERAL_REGS, orig=160, freq=220, tfirst=160, tfreq=220)...
	   Assign 0 to reload r160 (freq=220)
	 Assigning to 158 (cl=GENERAL_REGS, orig=158, freq=110, tfirst=158, tfreq=110)...
	   Assign 3 to reload r158 (freq=110)
	 Assigning to 159 (cl=GENERAL_REGS, orig=159, freq=110, tfirst=159, tfreq=110)...
	   Assign 2 to reload r159 (freq=110)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=40, prev_offset=40)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can eliminate 102 to 13 (offset=16, prev_offset=16)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 29
changing reg in insn 37
changing reg in insn 44
changing reg in insn 40
changing reg in insn 38
changing reg in insn 30
changing reg in insn 37
changing reg in insn 33
changing reg in insn 49
changing reg in insn 56
changing reg in insn 52
changing reg in insn 50
changing reg in insn 34
changing reg in insn 49
changing reg in insn 47
changing reg in insn 64
changing reg in insn 66
changing reg in insn 91
changing reg in insn 3
changing reg in insn 91
changing reg in insn 91
changing reg in insn 109
changing reg in insn 63
changing reg in insn 65
changing reg in insn 41
changing reg in insn 44
changing reg in insn 37
changing reg in insn 38
changing reg in insn 36
changing reg in insn 49
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 56
changing reg in insn 44
changing reg in insn 44
changing reg in insn 46
changing reg in insn 46
changing reg in insn 53
changing reg in insn 56
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 61
changing reg in insn 62
changing reg in insn 106
changing reg in insn 29
changing reg in insn 107
changing reg in insn 33
changing reg in insn 108
changing reg in insn 84
changing reg in insn 37
changing reg in insn 49
deleting insn with uid = 106.
deleting insn with uid = 107.
deleting insn with uid = 33.
deleting insn with uid = 65.
deleting insn with uid = 66.
deleting insn with uid = 70.
deleting insn with uid = 78.
deleting insn with uid = 108.


try_optimize_cfg iteration 1

Deleting fallthru block 6.
deleting block 6


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 79.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 7 count 8 (  1.3)


reset

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,12u,1e} r1={13d,7u} r2={12d,4u} r3={11d,3u} r4={3d,7u,1e} r5={2d,2u} r6={1d,2u} r7={1d,2u} r8={1d,1u} r12={12d} r13={1d,15u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,1u} r101={6d} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 595{537d,56u,2e} in 64{58 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 2 7 2 (debug_marker) "../System/pomozne_funkcije.c":92:2 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/pomozne_funkcije.c":92:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>) [0 LEDs_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":92:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 9 8 10 2 (debug_marker) "../System/pomozne_funkcije.c":93:2 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/pomozne_funkcije.c":94:2 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI counter (const_int 0 [0])) "../System/pomozne_funkcije.c":94:6 -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/pomozne_funkcije.c":95:2 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 14 13 15 2 (var_location:SI r (const_int 255 [0xff])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 17 16 18 2 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 18 17 19 2 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 19 18 20 2 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 20 19 21 2 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 21 20 22 2 (var_location:SI red (const_int 63488 [0xf800])) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/pomozne_funkcije.c":97:2 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SI counter (const_int 0 [0])) -1
     (nil))
(debug_insn 24 23 36 2 (debug_marker) "../System/pomozne_funkcije.c":97:8 -1
     (nil))
(insn 36 24 3 2 (set (reg:SI 7 r7 [127])
        (const_int -1935500283 [0xffffffff8ca29c05])) "../System/pomozne_funkcije.c":98:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int -1935500283 [0xffffffff8ca29c05])
        (nil)))
(insn 3 36 100 2 (set (reg:SI 5 r5 [orig:122 ivtmp_10 ] [122])
        (const_int 700 [0x2bc])) "../System/pomozne_funkcije.c":92:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 700 [0x2bc])
        (nil)))
(note 100 3 42 2 NOTE_INSN_DELETED)
(insn 42 100 61 2 (set (reg:SI 6 r6 [132])
        (const_int 233 [0xe9])) "../System/pomozne_funkcije.c":98:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 233 [0xe9])
        (nil)))
(insn 61 42 90 2 (set (reg:SI 8 r8 [148])
        (const_int 63488 [0xf800])) "../System/pomozne_funkcije.c":101:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 63488 [0xf800])
        (nil)))
(code_label 90 61 25 3 18 (nil) [1 uses])
(note 25 90 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 39 25 43 3 NOTE_INSN_DELETED)
(note 43 39 51 3 NOTE_INSN_DELETED)
(note 51 43 55 3 NOTE_INSN_DELETED)
(note 55 51 59 3 NOTE_INSN_DELETED)
(note 59 55 60 3 NOTE_INSN_DELETED)
(note 60 59 26 3 NOTE_INSN_DELETED)
(debug_insn 26 60 27 3 (var_location:SI counter (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker) "../System/pomozne_funkcije.c":98:3 -1
     (nil))
(call_insn 28 27 29 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":98:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 29 28 30 3 (set (reg:SI 4 r4 [orig:113 _1 ] [113])
        (reg:SI 0 r0 [154])) "../System/pomozne_funkcije.c":98:7 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 30 29 31 3 (var_location:HI x (plus:HI (subreg:HI (mod:SI (reg:SI 4 r4 [orig:113 _1 ] [113])
                (const_int 233 [0xe9])) 0)
        (const_int 40 [0x28]))) "../System/pomozne_funkcije.c":98:5 -1
     (nil))
(debug_insn 31 30 32 3 (debug_marker) "../System/pomozne_funkcije.c":99:3 -1
     (nil))
(call_insn 32 31 34 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":99:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 34 32 35 3 (var_location:HI y (subreg:HI (mod:SI (reg:SI 0 r0 [orig:116 _4 ] [116])
            (const_int 233 [0xe9])) 0)) "../System/pomozne_funkcije.c":99:5 -1
     (nil))
(debug_insn 35 34 37 3 (debug_marker) "../System/pomozne_funkcije.c":101:3 -1
     (nil))
(insn 37 35 38 3 (parallel [
            (set (reg:SI 2 r2 [126])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [orig:113 _1 ] [113]))
                            (sign_extend:DI (reg:SI 7 r7 [127])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [158]))
        ]) "../System/pomozne_funkcije.c":98:14 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [orig:113 _1 ] [113]))
                    (const_int -1935500283 [0xffffffff8ca29c05]))
                (const_int 32 [0x20])))
        (nil)))
(insn 38 37 49 3 (set (reg:SI 3 r3 [128])
        (plus:SI (reg:SI 2 r2 [126])
            (reg:SI 4 r4 [orig:113 _1 ] [113]))) "../System/pomozne_funkcije.c":98:14 7 {*arm_addsi3}
     (nil))
(insn 49 38 40 3 (parallel [
            (set (reg:SI 1 r1 [137])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:116 _4 ] [116]))
                            (sign_extend:DI (reg:SI 7 r7 [127])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [159]))
        ]) "../System/pomozne_funkcije.c":99:14 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:116 _4 ] [116]))
                    (const_int -1935500283 [0xffffffff8ca29c05]))
                (const_int 32 [0x20])))
        (nil)))
(insn 40 49 41 3 (set (reg:SI 2 r2 [130])
        (ashiftrt:SI (reg:SI 4 r4 [orig:113 _1 ] [113])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":98:14 147 {*arm_shiftsi3}
     (nil))
(insn 41 40 50 3 (set (reg:SI 2 r2 [125])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [128])
                (const_int 7 [0x7]))
            (reg:SI 2 r2 [130]))) "../System/pomozne_funkcije.c":98:14 319 {*rsb_shiftsi}
     (nil))
(insn 50 41 52 3 (set (reg:SI 3 r3 [139])
        (plus:SI (reg:SI 1 r1 [137])
            (reg:SI 0 r0 [orig:116 _4 ] [116]))) "../System/pomozne_funkcije.c":99:14 7 {*arm_addsi3}
     (nil))
(insn 52 50 44 3 (set (reg:SI 1 r1 [141])
        (ashiftrt:SI (reg:SI 0 r0 [orig:116 _4 ] [116])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":99:14 147 {*arm_shiftsi3}
     (nil))
(insn 44 52 53 3 (set (reg:SI 4 r4 [133])
        (minus:SI (reg:SI 4 r4 [orig:113 _1 ] [113])
            (mult:SI (reg:SI 6 r6 [132])
                (reg:SI 2 r2 [125])))) "../System/pomozne_funkcije.c":98:14 58 {*mls}
     (nil))
(insn 53 44 46 3 (set (reg:SI 1 r1 [136])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [139])
                (const_int 7 [0x7]))
            (reg:SI 1 r1 [141]))) "../System/pomozne_funkcije.c":99:14 319 {*rsb_shiftsi}
     (nil))
(insn 46 53 56 3 (set (reg:SI 4 r4 [135])
        (plus:SI (reg:SI 4 r4 [133])
            (const_int 40 [0x28]))) "../System/pomozne_funkcije.c":98:5 7 {*arm_addsi3}
     (nil))
(insn 56 46 47 3 (set (reg:SI 1 r1 [144])
        (minus:SI (reg:SI 0 r0 [orig:116 _4 ] [116])
            (mult:SI (reg:SI 6 r6 [132])
                (reg:SI 1 r1 [136])))) "../System/pomozne_funkcije.c":99:14 58 {*mls}
     (nil))
(insn 47 56 109 3 (set (reg:SI 0 r0 [orig:118 _6 ] [118])
        (zero_extend:SI (reg:HI 4 r4 [135]))) "../System/pomozne_funkcije.c":101:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 109 47 62 3 (set (reg:SI 1 r1 [orig:123 _15 ] [123])
        (zero_extend:SI (reg:HI 1 r1 [144]))) 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 62 109 63 3 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 8 r8 [148])) "../System/pomozne_funkcije.c":101:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 3 (set (reg:SI 3 r3)
        (plus:SI (reg:SI 1 r1 [orig:123 _15 ] [123])
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":101:3 7 {*arm_addsi3}
     (nil))
(insn 64 63 67 3 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 0 r0 [orig:118 _6 ] [118])
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":101:3 7 {*arm_addsi3}
     (nil))
(call_insn 67 64 68 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":101:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 68 67 113 3 (debug_marker) "../System/pomozne_funkcije.c":102:3 -1
     (nil))
(insn 113 68 71 3 (set (reg:SI 0 r0 [160])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":102:3 7 {*arm_addsi3}
     (nil))
(call_insn 71 113 72 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":102:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 72 71 82 3 (debug_marker) "../System/pomozne_funkcije.c":103:3 -1
     (nil))
(code_label 82 72 73 4 17 (nil) [1 uses])
(note 73 82 80 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 80 73 83 4 NOTE_INSN_DELETED)
(note 83 80 74 4 NOTE_INSN_DELETED)
(debug_insn 74 83 75 4 (debug_marker) "../System/pomozne_funkcije.c":103:56 -1
     (nil))
(debug_insn 75 74 103 4 (debug_marker) "../System/pomozne_funkcije.c":103:8 -1
     (nil))
(insn 103 75 114 4 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":103:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 114 103 79 4 (set (reg:SI 0 r0 [161])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":103:10 7 {*arm_addsi3}
     (nil))
(call_insn 79 114 84 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>) [0 TIMUT_stopwatch_has_X_ms_passed S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":103:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 84 79 85 4 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [156])
                        (const_int 0 [0]))
                    (label_ref:SI 82)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":103:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 82)
(note 85 84 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 89 85 86 5 NOTE_INSN_DELETED)
(debug_insn 86 89 87 5 (debug_marker) "../System/pomozne_funkcije.c":105:3 -1
     (nil))
(debug_insn 87 86 88 5 (var_location:SI counter (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 88 87 91 5 (debug_marker) "../System/pomozne_funkcije.c":97:8 -1
     (nil))
(insn 91 88 92 5 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 5 r5 [orig:122 ivtmp_10 ] [122])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 5 r5 [orig:122 ivtmp_10 ] [122])
                (plus:SI (reg:SI 5 r5 [orig:122 ivtmp_10 ] [122])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/pomozne_funkcije.c":97:8 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 92 91 111 5 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 90)
            (pc))) "../System/pomozne_funkcije.c":97:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 90)
(note 111 92 112 NOTE_INSN_DELETED)
(note 112 111 0 NOTE_INSN_DELETED)

;; Function popraviKot (popraviKot, funcdef_no=870, decl_uid=11972, cgraph_uid=874, symbol_order=881)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) t  (1) G {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 19:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 35:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 46:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 59: point = 0, n_alt = -1
   Insn 58: point = 0, n_alt = -2
  BB 5
   Insn 80: point = 2, n_alt = -1
   Insn 52: point = 2, n_alt = 0
   Insn 75: point = 4, n_alt = -2
   Insn 51: point = 5, n_alt = -1
   Insn 48: point = 5, n_alt = -1
   Insn 47: point = 5, n_alt = -2
   Insn 46: point = 6, n_alt = 6
  BB 3
   Insn 77: point = 7, n_alt = -1
   Insn 25: point = 7, n_alt = 0
   Insn 72: point = 9, n_alt = -2
   Insn 24: point = 10, n_alt = -1
   Insn 21: point = 10, n_alt = -1
   Insn 19: point = 10, n_alt = 6
   Insn 17: point = 10, n_alt = -1
   Insn 16: point = 10, n_alt = 1
  BB 6
   Insn 4: point = 12, n_alt = -2
  BB 4
   Insn 40: point = 15, n_alt = 0
   Insn 74: point = 16, n_alt = -2
   Insn 37: point = 17, n_alt = -1
   Insn 35: point = 17, n_alt = 6
   Insn 33: point = 17, n_alt = -2
   Insn 73: point = 19, n_alt = -2
   Insn 32: point = 20, n_alt = -1
   Insn 31: point = 20, n_alt = 1
  BB 2
   Insn 10: point = 21, n_alt = -1
   Insn 83: point = 21, n_alt = -2
   Insn 82: point = 21, n_alt = 1
   Insn 2: point = 21, n_alt = -2
   Insn 71: point = 23, n_alt = -2
 r115: [15..17] [5..6]
 r117: [12..12] [7..7] [0..2]
 r118: [13..21] [10..11]
 r126: [22..23]
 r127: [8..9]
 r128: [18..19]
 r129: [15..16]
 r130: [3..4]
Compressing live ranges: from 24 to 18 - 75%
Ranges after the compression:
 r115: [12..13] [4..5]
 r117: [11..11] [6..6] [0..1]
 r118: [12..15] [9..10]
 r126: [16..17]
 r127: [7..8]
 r128: [14..15]
 r129: [12..13]
 r130: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=24)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 33
changing reg in insn 47
changing reg in insn 52
changing reg in insn 25
changing reg in insn 4
changing reg in insn 58
changing reg in insn 2
changing reg in insn 82
changing reg in insn 4
changing reg in insn 31
changing reg in insn 16
changing reg in insn 33
changing reg in insn 71
changing reg in insn 2
changing reg in insn 72
changing reg in insn 25
changing reg in insn 73
changing reg in insn 33
changing reg in insn 74
changing reg in insn 40
changing reg in insn 75
changing reg in insn 52
deleting insn with uid = 71.
deleting insn with uid = 72.
deleting insn with uid = 33.
deleting insn with uid = 74.
deleting insn with uid = 75.
deleting insn with uid = 58.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


popraviKot

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp] 16 [s0]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 32 [s16] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={11d,11u} r1={13d,6u} r2={11d,3u} r3={11d,3u} r4={1d,1u} r5={1d,1u} r12={14d} r13={1d,14u} r14={8d} r15={7d} r16={11d,3u} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={1d,4u} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={9d,1u} r101={8d,1u} r104={7d} r105={7d} r106={7d} 
;;    total ref usage 660{612d,48u,0e} in 29{22 regular + 7 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 3 2 2 (debug_marker) "../System/pomozne_funkcije.c":150:2 -1
     (nil))
(insn 2 7 82 2 (set (reg/v:SF 32 s16 [orig:118 kot ] [118])
        (reg:SF 16 s0 [126])) "../System/pomozne_funkcije.c":149:29 737 {*thumb2_movsf_vfp}
     (nil))
(insn 82 2 83 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 32 s16 [orig:118 kot ] [118])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/pomozne_funkcije.c":150:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 83 82 10 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":150:5 817 {*movcc_vfp}
     (nil))
(jump_insn 10 83 14 2 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 76)
            (pc))) "../System/pomozne_funkcije.c":150:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 790703484 (nil))
 -> 76)
(note 14 10 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 15 14 16 3 (debug_marker) "../System/pomozne_funkcije.c":150:15 -1
     (nil))
(insn 16 15 17 3 (set (reg:SF 0 r0)
        (reg/v:SF 32 s16 [orig:118 kot ] [118])) "../System/pomozne_funkcije.c":150:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 17 16 19 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":150:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 19 17 21 3 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/pomozne_funkcije.c":150:26 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 21 19 24 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":150:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 24 21 25 3 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":150:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 25 24 77 3 (set (reg:SF 16 s0 [orig:117 <retval> ] [117])
        (reg:SF 0 r0 [127])) "../System/pomozne_funkcije.c":150:26 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 77 25 78 3 (set (pc)
        (label_ref 57)) "../System/pomozne_funkcije.c":150:26 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 78 77 76)
(code_label 76 78 29 4 33 (nil) [1 uses])
(note 29 76 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 38 29 39 4 NOTE_INSN_DELETED)
(note 39 38 30 4 NOTE_INSN_DELETED)
(debug_insn 30 39 31 4 (debug_marker) "../System/pomozne_funkcije.c":151:7 -1
     (nil))
(insn 31 30 32 4 (set (reg:SF 0 r0)
        (reg/v:SF 32 s16 [orig:118 kot ] [118])) "../System/pomozne_funkcije.c":151:15 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 32 31 73 4 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":151:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 73 32 35 4 (set (reg:DF 4 r4 [128])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":151:15 739 {*thumb2_movdf_vfp}
     (nil))
(insn 35 73 37 4 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/pomozne_funkcije.c":151:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 37 35 40 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 00000000067e4d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":151:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 00000000067e4d00 __aeabi_dcmpgt>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 40 37 44 4 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [129])
                        (const_int 0 [0]))
                    (label_ref:SI 79)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":151:10 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 79)
(note 44 40 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 45 44 46 5 (debug_marker) "../System/pomozne_funkcije.c":151:25 -1
     (nil))
(insn 46 45 47 5 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/pomozne_funkcije.c":151:36 739 {*thumb2_movdf_vfp}
     (nil))
(insn 47 46 48 5 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [orig:115 _3 ] [115])) "../System/pomozne_funkcije.c":151:36 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 48 47 51 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":151:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 51 48 52 5 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":151:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 52 51 80 5 (set (reg:SF 16 s0 [orig:117 <retval> ] [117])
        (reg:SF 0 r0 [130])) "../System/pomozne_funkcije.c":151:36 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 80 52 81 5 (set (pc)
        (label_ref 57)) "../System/pomozne_funkcije.c":151:36 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 81 80 79)
(code_label 79 81 63 6 34 (nil) [1 uses])
(note 63 79 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 63 57 6 (set (reg:SF 16 s0 [orig:117 <retval> ] [117])
        (reg/v:SF 32 s16 [orig:118 kot ] [118])) "../System/pomozne_funkcije.c":152:9 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 57 4 60 7 25 (nil) [2 uses])
(note 60 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 60 84 7 (use (reg/i:SF 16 s0)) "../System/pomozne_funkcije.c":153:1 -1
     (nil))
(note 84 59 85 NOTE_INSN_DELETED)
(note 85 84 0 NOTE_INSN_DELETED)

;; Function create_rgb (create_rgb, funcdef_no=871, decl_uid=11976, cgraph_uid=875, symbol_order=882)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = 1
   Insn 13: point = 1, n_alt = 1
   Insn 12: point = 3, n_alt = 1
   Insn 11: point = 5, n_alt = 1
   Insn 9: point = 7, n_alt = 1
   Insn 23: point = 9, n_alt = -2
   Insn 25: point = 10, n_alt = -2
   Insn 24: point = 11, n_alt = -2
 r125: [4..7]
 r127: [4..5]
 r128: [0..3]
 r129: [0..1]
 r131: [2..9]
 r132: [8..11]
 r133: [6..10]
Compressing live ranges: from 12 to 10 - 83%
Ranges after the compression:
 r125: [4..7]
 r127: [4..5]
 r128: [0..3]
 r129: [0..1]
 r131: [2..9]
 r132: [8..9]
 r133: [6..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 12
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 20
changing reg in insn 13
changing reg in insn 20
changing reg in insn 23
changing reg in insn 13
changing reg in insn 24
changing reg in insn 9
changing reg in insn 25
changing reg in insn 11
deleting insn with uid = 24.
deleting insn with uid = 25.
deleting insn with uid = 23.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


create_rgb

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 0 [r0] 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2]
;;  ref usage 	r0={3d,4u} r1={2d,2u} r2={3d,3u} r3={1d} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 38{27d,11u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 14 2 NOTE_INSN_DELETED)
(note 14 10 15 2 NOTE_INSN_DELETED)
(note 15 14 8 2 NOTE_INSN_DELETED)
(debug_insn 8 15 9 2 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(insn 9 8 11 2 (set (reg:SI 1 r1 [125])
        (ashiftrt:SI (reg:SI 1 r1 [132])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":156:29 147 {*arm_shiftsi3}
     (nil))
(insn 11 9 12 2 (set (reg:SI 2 r2 [127])
        (ashiftrt:SI (reg:SI 2 r2 [133])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:42 147 {*arm_shiftsi3}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [128])
        (ior:SI (ashift:SI (reg:SI 1 r1 [125])
                (const_int 5 [0x5]))
            (reg:SI 2 r2 [127]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 13 12 20 2 (set (reg:SI 0 r0 [129])
        (ashiftrt:SI (reg:SI 0 r0 [131])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:14 147 {*arm_shiftsi3}
     (nil))
(insn 20 13 21 2 (set (reg/i:SI 0 r0)
        (ior:SI (ashift:SI (reg:SI 0 r0 [129])
                (const_int 11 [0xb]))
            (reg:SI 2 r2 [128]))) "../System/pomozne_funkcije.c":157:1 320 {*orr_shiftsi}
     (nil))
(insn 21 20 26 2 (use (reg/i:SI 0 r0)) "../System/pomozne_funkcije.c":157:1 -1
     (nil))
(note 26 21 27 NOTE_INSN_DELETED)
(note 27 26 0 NOTE_INSN_DELETED)

;; Function visibility (visibility, funcdef_no=872, decl_uid=11978, cgraph_uid=876, symbol_order=883)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 44:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 29:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 0
   Insn 50: point = 1, n_alt = -2
   Insn 34: point = 2, n_alt = -1
   Insn 33: point = 2, n_alt = -2
   Insn 49: point = 3, n_alt = 1
   Insn 31: point = 4, n_alt = -1
   Insn 30: point = 4, n_alt = 0
   Insn 29: point = 5, n_alt = 4
   Insn 28: point = 6, n_alt = 0
   Insn 27: point = 6, n_alt = -2
   Insn 44: point = 8, n_alt = 6
   Insn 48: point = 9, n_alt = -2
   Insn 26: point = 10, n_alt = -1
   Insn 24: point = 10, n_alt = -2
   Insn 22: point = 11, n_alt = -1
   Insn 20: point = 11, n_alt = -2
   Insn 47: point = 12, n_alt = -2
   Insn 17: point = 13, n_alt = -1
   Insn 15: point = 13, n_alt = -2
   Insn 13: point = 13, n_alt = -2
   Insn 46: point = 15, n_alt = -2
   Insn 12: point = 16, n_alt = -1
   Insn 10: point = 16, n_alt = 6
   Insn 8: point = 16, n_alt = -1
   Insn 7: point = 16, n_alt = -2
   Insn 45: point = 17, n_alt = 1
 r123: [10..13]
 r126: [5..6]
 r127: [4..8]
 r129: [16..17]
 r130: [14..15]
 r131: [11..12]
 r132: [7..9]
 r133: [2..3]
 r134: [0..1]
Compressing live ranges: from 18 to 14 - 77%
Ranges after the compression:
 r123: [8..9]
 r126: [4..5]
 r127: [4..7]
 r129: [12..13]
 r130: [10..11]
 r131: [8..9]
 r132: [6..7]
 r133: [2..3]
 r134: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 24
changing reg in insn 15
changing reg in insn 27
changing reg in insn 44
changing reg in insn 29
changing reg in insn 30
changing reg in insn 28
changing reg in insn 45
changing reg in insn 7
changing reg in insn 46
changing reg in insn 13
changing reg in insn 47
changing reg in insn 20
changing reg in insn 48
changing reg in insn 27
changing reg in insn 49
changing reg in insn 33
changing reg in insn 50
changing reg in insn 40
deleting insn with uid = 7.
deleting insn with uid = 13.
deleting insn with uid = 20.
deleting insn with uid = 48.
deleting insn with uid = 27.
deleting insn with uid = 33.
deleting insn with uid = 50.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


visibility

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp] 16 [s0]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1]
;;  ref usage 	r0={10d,10u} r1={14d,8u} r2={14d,5u} r3={14d,5u} r4={1d,2u} r5={1d,2u} r12={14d} r13={1d,9u} r14={8d} r15={7d} r16={10d,5u} r17={10d,2u} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r104={7d} r105={7d} r106={7d} 
;;    total ref usage 663{615d,48u,0e} in 21{14 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_DELETED)
(note 3 2 18 2 NOTE_INSN_FUNCTION_BEG)
(note 18 3 32 2 NOTE_INSN_DELETED)
(note 32 18 35 2 NOTE_INSN_DELETED)
(note 35 32 6 2 NOTE_INSN_DELETED)
(debug_insn 6 35 45 2 (debug_marker) "../System/pomozne_funkcije.c":162:5 -1
     (nil))
(insn 45 6 8 2 (set (reg:SF 0 r0 [129])
        (reg:SF 16 s0 [ distance ])) "../System/pomozne_funkcije.c":161:1 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 8 45 10 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 10 8 12 2 (set (reg:DF 2 r2)
        (const_double:DF 3.25999999999999970357045242508320370689034461975e-2 [0x0.858793dd97f628p-4])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 12 10 46 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 46 12 15 2 (set (reg:DF 4 r4 [130])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(insn 15 46 17 2 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [123])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 17 15 47 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 47 17 22 2 (set (reg:DF 2 r2 [131])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 22 47 24 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 24 22 26 2 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [123])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 26 24 44 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 44 26 28 2 (set (reg:DF 2 r2 [127])
        (const_double:DF 0.0 [0x0.0p+0])) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 28 44 29 2 (set (reg:SI 2 r2 [127])
        (reg:SI 0 r0 [126])) "../System/pomozne_funkcije.c":162:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 2 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (reg:SI 1 r1 [+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) "../System/pomozne_funkcije.c":162:12 7 {*arm_addsi3}
     (nil))
(insn 30 29 31 2 (set (reg:DF 16 s0)
        (reg:DF 2 r2 [127])) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 31 30 49 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("exp") [flags 0x41]  <function_decl 0000000006644d00 exp>) [0 __builtin_exp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("exp") [flags 0x41]  <function_decl 0000000006644d00 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 49 31 34 2 (set (reg:DF 0 r0 [133])
        (reg:DF 16 s0)) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 34 49 40 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 40 34 41 2 (set (reg/i:SF 16 s0)
        (reg:SF 0 r0 [134])) "../System/pomozne_funkcije.c":163:1 737 {*thumb2_movsf_vfp}
     (nil))
(insn 41 40 51 2 (use (reg/i:SF 16 s0)) "../System/pomozne_funkcije.c":163:1 -1
     (nil))
(note 51 41 52 NOTE_INSN_DELETED)
(note 52 51 0 NOTE_INSN_DELETED)

;; Function map_range (map_range, funcdef_no=873, decl_uid=11985, cgraph_uid=877, symbol_order=884)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =t  (1) t  (2) t {*subsf3_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =t  (1) t  (2) t {*subsf3_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 19:  (0) =t  (1) t  (2) t  (3) 0 {fmasf4}
      Creating newreg=134 from oldreg=130, assigning class VFP_LO_REGS to r134
   19: r134:SF={r123:SF*r126:SF+r134:SF}
      REG_DEAD r130:SF
      REG_DEAD r126:SF
      REG_DEAD r123:SF
    Inserting insn reload before:
   29: r134:SF=r130:SF
    Inserting insn reload after:
   30: s0:SF=r134:SF

	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 20: point = 0, n_alt = -1
   Insn 30: point = 0, n_alt = -2
	Hard reg 16 is preferable by r134 with profit 1000
   Insn 19: point = 1, n_alt = 0
   Insn 29: point = 3, n_alt = -2
	Hard reg 16 is preferable by r134 with profit 1000
	Hard reg 18 is preferable by r134 with profit 1000
   Insn 11: point = 5, n_alt = 0
   Insn 25: point = 7, n_alt = -2
   Insn 14: point = 8, n_alt = 0
   Insn 24: point = 9, n_alt = -2
   Insn 12: point = 10, n_alt = 0
   Insn 13: point = 12, n_alt = 0
   Insn 26: point = 14, n_alt = -2
   Insn 2: point = 15, n_alt = -2
   Insn 23: point = 17, n_alt = -2
   Insn 22: point = 18, n_alt = -2
 r118: [11..15]
 r123: [2..5]
 r124: [8..10]
 r125: [8..12]
 r126: [2..8]
 r128: [16..18]
 r129: [13..17]
 r130: [4..9]
 r131: [6..7]
 r132: [11..14]
 r134: [0..3]
Compressing live ranges: from 19 to 14 - 73%
Ranges after the compression:
 r118: [8..11]
 r123: [0..3]
 r124: [6..7]
 r125: [6..9]
 r126: [0..6]
 r128: [12..13]
 r129: [10..13]
 r130: [2..7]
 r131: [4..5]
 r132: [8..11]
 r134: [0..1]

********** Assignment #1: **********

	 Assigning to 134 (cl=VFP_LO_REGS, orig=130, freq=3000, tfirst=134, tfreq=3000)...
	   Assign 18 to reload r134 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=0, prev_offset=0)
Can't eliminate 103 to 102 (offset=0, prev_offset=0)
Can't eliminate 103 to 11 (offset=0, prev_offset=0)
Can eliminate 103 to 7 (offset=0, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 2
changing reg in insn 13
changing reg in insn 12
changing reg in insn 11
changing reg in insn 19
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 19
changing reg in insn 22
changing reg in insn 2
changing reg in insn 23
changing reg in insn 13
changing reg in insn 24
changing reg in insn 11
changing reg in insn 25
changing reg in insn 11
changing reg in insn 26
changing reg in insn 12
deleting insn with uid = 22.
deleting insn with uid = 23.
deleting insn with uid = 2.
deleting insn with uid = 26.
deleting insn with uid = 24.
deleting insn with uid = 25.
deleting insn with uid = 29.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


map_range

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp] 16 [s0]
;;  regs ever live 	 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 31 [s15]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d} r16={2d,4u} r17={2d,2u} r18={2d,3u} r19={2d,2u} r20={2d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={2d,1u} 
;;    total ref usage 44{28d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 8 4 2 NOTE_INSN_DELETED)
(note 4 3 5 2 NOTE_INSN_DELETED)
(note 5 4 6 2 NOTE_INSN_DELETED)
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 15 2 NOTE_INSN_FUNCTION_BEG)
(note 15 7 10 2 NOTE_INSN_DELETED)
(debug_insn 10 15 13 2 (debug_marker) "../System/pomozne_funkcije.c":167:2 -1
     (nil))
(insn 13 10 12 2 (set (reg:SF 17 s1 [125])
        (minus:SF (reg:SF 17 s1 [129])
            (reg/v:SF 16 s0 [orig:118 min1 ] [118]))) "../System/pomozne_funkcije.c":167:56 761 {*subsf3_vfp}
     (nil))
(insn 12 13 14 2 (set (reg:SF 20 s4 [124])
        (minus:SF (reg:SF 20 s4 [132])
            (reg/v:SF 16 s0 [orig:118 min1 ] [118]))) "../System/pomozne_funkcije.c":167:40 761 {*subsf3_vfp}
     (nil))
(insn 14 12 11 2 (set (reg:SF 31 s15 [126])
        (div:SF (reg:SF 20 s4 [124])
            (reg:SF 17 s1 [125]))) "../System/pomozne_funkcije.c":167:48 764 {*divsf3_vfp}
     (nil))
(insn 11 14 19 2 (set (reg:SF 19 s3 [123])
        (minus:SF (reg:SF 19 s3 [131])
            (reg:SF 18 s2 [130]))) "../System/pomozne_funkcije.c":167:22 761 {*subsf3_vfp}
     (nil))
(insn 19 11 30 2 (set (reg:SF 18 s2 [130])
        (fma:SF (reg:SF 19 s3 [123])
            (reg:SF 31 s15 [126])
            (reg:SF 18 s2 [130]))) "../System/pomozne_funkcije.c":168:1 788 {fmasf4}
     (nil))
(insn 30 19 20 2 (set (reg/i:SF 16 s0)
        (reg:SF 18 s2 [130])) "../System/pomozne_funkcije.c":168:1 737 {*thumb2_movsf_vfp}
     (nil))
(insn 20 30 27 2 (use (reg/i:SF 16 s0)) "../System/pomozne_funkcije.c":168:1 -1
     (nil))
(note 27 20 28 NOTE_INSN_DELETED)
(note 28 27 0 NOTE_INSN_DELETED)

;; Function moveBlood (moveBlood, funcdef_no=875, decl_uid=11987, cgraph_uid=879, symbol_order=886)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 15:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 27:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 32:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 44:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) Uv  (1) t {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 57:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=13,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) r  (1) mHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 66:  (0) m  (1) r {*thumb2_movsf_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
  BB 5
   Insn 66: point = 0, n_alt = 6
   Insn 65: point = 1, n_alt = 5
  BB 4
   Insn 59: point = 3, n_alt = -1
   Insn 81: point = 3, n_alt = -2
   Insn 80: point = 3, n_alt = 0
   Insn 57: point = 4, n_alt = 2
  BB 3
   Insn 53: point = 6, n_alt = 4
  BB 2
   Insn 46: point = 8, n_alt = -1
   Insn 83: point = 8, n_alt = -2
   Insn 82: point = 8, n_alt = 0
   Insn 42: point = 9, n_alt = 4
   Insn 41: point = 10, n_alt = 0
   Insn 44: point = 12, n_alt = 2
   Insn 38: point = 13, n_alt = 0
   Insn 40: point = 15, n_alt = 2
   Insn 79: point = 16, n_alt = -2
   Insn 37: point = 17, n_alt = -1
   Insn 34: point = 17, n_alt = -1
   Insn 32: point = 17, n_alt = 6
   Insn 30: point = 17, n_alt = -1
   Insn 27: point = 17, n_alt = 4
   Insn 26: point = 17, n_alt = 0
   Insn 29: point = 19, n_alt = 1
   Insn 78: point = 20, n_alt = -2
   Insn 25: point = 21, n_alt = -1
   Insn 22: point = 21, n_alt = -1
   Insn 20: point = 21, n_alt = 6
   Insn 18: point = 21, n_alt = -1
   Insn 15: point = 21, n_alt = 4
   Insn 10: point = 22, n_alt = 4
   Insn 17: point = 23, n_alt = 1
   Insn 14: point = 24, n_alt = 0
   Insn 9: point = 26, n_alt = 0
   Insn 13: point = 28, n_alt = 3
   Insn 8: point = 29, n_alt = 3
   Insn 12: point = 30, n_alt = 3
   Insn 7: point = 31, n_alt = 3
   Insn 2: point = 32, n_alt = -2
   Insn 77: point = 34, n_alt = -2
 r114: [23..31]
 r117: [19..30]
 r121: [8..17]
 r124: [3..13]
 r126: [0..32]
 r127: [22..26]
 r128: [27..29]
 r129: [21..24]
 r130: [25..28]
 r135: [9..10]
 r136: [11..15]
 r137: [6..12]
 r139: [3..4]
 r140: [0..1]
 r143: [33..34]
 r144: [18..20]
 r145: [14..16]
Compressing live ranges: from 35 to 20 - 57%
Ranges after the compression:
 r114: [12..17]
 r117: [10..17]
 r121: [4..9]
 r124: [2..7]
 r126: [0..17]
 r127: [12..15]
 r128: [16..17]
 r129: [12..13]
 r130: [14..17]
 r135: [4..5]
 r136: [6..9]
 r137: [4..7]
 r139: [2..3]
 r140: [0..1]
 r143: [18..19]
 r144: [10..11]
 r145: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 17
changing reg in insn 9
changing reg in insn 12
changing reg in insn 29
changing reg in insn 14
changing reg in insn 26
changing reg in insn 82
changing reg in insn 27
changing reg in insn 38
changing reg in insn 80
changing reg in insn 41
changing reg in insn 41
changing reg in insn 2
changing reg in insn 53
changing reg in insn 66
changing reg in insn 42
changing reg in insn 27
changing reg in insn 15
changing reg in insn 13
changing reg in insn 12
changing reg in insn 10
changing reg in insn 8
changing reg in insn 7
changing reg in insn 41
changing reg in insn 13
changing reg in insn 8
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 13
changing reg in insn 14
changing reg in insn 41
changing reg in insn 42
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 82
changing reg in insn 53
changing reg in insn 57
changing reg in insn 80
changing reg in insn 65
changing reg in insn 66
changing reg in insn 77
changing reg in insn 2
changing reg in insn 78
changing reg in insn 26
changing reg in insn 79
changing reg in insn 38
deleting insn with uid = 77.
deleting insn with uid = 79.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)


moveBlood

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={9d,9u} r1={11d,4u} r2={9d,2u} r3={11d,4u} r4={1d,10u,4e} r12={12d} r13={1d,12u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={9d,4u} r30={12d,5u} r31={10d,4u,1e} r32={2d,4u} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={8d,2u} r101={8d,2u} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 604{537d,62u,5e} in 46{40 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 2 2 (debug_marker) "../System/pomozne_funkcije.c":202:2 -1
     (nil))
(insn 2 6 7 2 (set (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
        (reg:SI 0 r0 [143])) "../System/pomozne_funkcije.c":201:30 728 {*thumb2_movsi_vfp}
     (nil))
(insn 7 2 12 2 (set (reg:SF 29 s13 [orig:114 _2 ] [114])
        (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 8 [0x8])) [1 blood_17(D)->velx+0 S4 A32])) "../System/pomozne_funkcije.c":202:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 8 [0x8])) [1 blood_17(D)->velx+0 S4 A32])
        (nil)))
(insn 12 7 8 2 (set (reg:SF 32 s16 [orig:117 _5 ] [117])
        (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 12 [0xc])) [1 blood_17(D)->vely+0 S4 A32])) "../System/pomozne_funkcije.c":203:22 737 {*thumb2_movsf_vfp}
     (nil))
(insn 8 12 13 2 (set (reg:SF 30 s14 [orig:128 blood_17(D)->posx ] [128])
        (mem:SF (reg/v/f:SI 4 r4 [orig:126 blood ] [126]) [1 blood_17(D)->posx+0 S4 A32])) "../System/pomozne_funkcije.c":202:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (reg/v/f:SI 4 r4 [orig:126 blood ] [126]) [1 blood_17(D)->posx+0 S4 A32])
        (nil)))
(insn 13 8 9 2 (set (reg:SF 31 s15 [orig:130 blood_17(D)->posy ] [130])
        (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 4 [0x4])) [1 blood_17(D)->posy+0 S4 A32])) "../System/pomozne_funkcije.c":203:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 4 [0x4])) [1 blood_17(D)->posy+0 S4 A32])
        (nil)))
(insn 9 13 14 2 (set (reg:SF 30 s14 [127])
        (plus:SF (reg:SF 30 s14 [orig:128 blood_17(D)->posx ] [128])
            (reg:SF 29 s13 [orig:114 _2 ] [114]))) "../System/pomozne_funkcije.c":202:14 758 {*addsf3_vfp}
     (nil))
(insn 14 9 17 2 (set (reg:SF 31 s15 [129])
        (plus:SF (reg:SF 31 s15 [orig:130 blood_17(D)->posy ] [130])
            (reg:SF 32 s16 [orig:117 _5 ] [117]))) "../System/pomozne_funkcije.c":203:14 758 {*addsf3_vfp}
     (nil))
(insn 17 14 10 2 (set (reg:SF 0 r0)
        (reg:SF 29 s13 [orig:114 _2 ] [114])) "../System/pomozne_funkcije.c":204:14 737 {*thumb2_movsf_vfp}
     (nil))
(insn 10 17 11 2 (set (mem:SF (reg/v/f:SI 4 r4 [orig:126 blood ] [126]) [1 blood_17(D)->posx+0 S4 A32])
        (reg:SF 30 s14 [127])) "../System/pomozne_funkcije.c":202:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 11 10 15 2 (debug_marker) "../System/pomozne_funkcije.c":203:2 -1
     (nil))
(insn 15 11 16 2 (set (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 4 [0x4])) [1 blood_17(D)->posy+0 S4 A32])
        (reg:SF 31 s15 [129])) "../System/pomozne_funkcije.c":203:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 16 15 18 2 (debug_marker) "../System/pomozne_funkcije.c":204:2 -1
     (nil))
(call_insn/u 18 16 20 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":204:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 20 18 22 2 (set (reg:DF 2 r2)
        (const_double:DF 9.49999999999999955591079014993738383054733276367e-1 [0x0.f333333333333p+0])) "../System/pomozne_funkcije.c":204:14 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 22 20 25 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":204:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 25 22 78 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":204:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 78 25 29 2 (set (reg:SF 3 r3 [144])
        (reg:SF 0 r0)) "../System/pomozne_funkcije.c":204:14 737 {*thumb2_movsf_vfp}
     (nil))
(insn 29 78 26 2 (set (reg:SF 0 r0)
        (reg:SF 32 s16 [orig:117 _5 ] [117])) "../System/pomozne_funkcije.c":205:14 737 {*thumb2_movsf_vfp}
     (nil))
(insn 26 29 27 2 (set (reg:SF 32 s16 [orig:121 _9 ] [121])
        (reg:SF 3 r3 [144])) "../System/pomozne_funkcije.c":204:14 737 {*thumb2_movsf_vfp}
     (nil))
(insn 27 26 28 2 (set (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 8 [0x8])) [1 blood_17(D)->velx+0 S4 A32])
        (reg:SF 32 s16 [orig:121 _9 ] [121])) "../System/pomozne_funkcije.c":204:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 28 27 30 2 (debug_marker) "../System/pomozne_funkcije.c":205:2 -1
     (nil))
(call_insn/u 30 28 32 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":205:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 32 30 34 2 (set (reg:DF 2 r2)
        (const_double:DF 9.49999999999999955591079014993738383054733276367e-1 [0x0.f333333333333p+0])) "../System/pomozne_funkcije.c":205:14 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 34 32 37 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":205:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 37 34 40 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":205:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 40 37 38 2 (set (reg:SF 30 s14 [136])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/pomozne_funkcije.c":206:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 38 40 39 2 (set (reg:SF 31 s15 [orig:124 _12 ] [124])
        (reg:SF 0 r0 [145])) "../System/pomozne_funkcije.c":205:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 39 38 44 2 (debug_marker) "../System/pomozne_funkcije.c":206:2 -1
     (nil))
(insn 44 39 41 2 (set (reg:SF 29 s13 [137])
        (const_double:SF 5.0e+0 [0x0.ap+3])) "../System/pomozne_funkcije.c":207:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+0 [0x0.ap+3])
        (nil)))
(insn 41 44 42 2 (set (reg:SF 30 s14 [135])
        (plus:SF (reg:SF 31 s15 [orig:124 _12 ] [124])
            (reg:SF 30 s14 [136]))) "../System/pomozne_funkcije.c":206:14 758 {*addsf3_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 12 [0xc])) [1 blood_17(D)->vely+0 S4 A32])
        (expr_list:REG_EQUAL (plus:SF (reg:SF 31 s15 [orig:124 _12 ] [124])
                (const_double:SF 5.0e-1 [0x0.8p+0]))
            (nil))))
(insn 42 41 43 2 (set (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 12 [0xc])) [1 blood_17(D)->vely+0 S4 A32])
        (reg:SF 30 s14 [135])) "../System/pomozne_funkcije.c":206:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 43 42 82 2 (debug_marker) "../System/pomozne_funkcije.c":207:2 -1
     (nil))
(insn 82 43 83 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 32 s16 [orig:121 _9 ] [121])
            (reg:SF 29 s13 [137]))) "../System/pomozne_funkcije.c":207:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 83 82 46 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":207:5 817 {*movcc_vfp}
     (nil))
(jump_insn 46 83 50 2 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 54)
            (pc))) "../System/pomozne_funkcije.c":207:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 54)
(note 50 46 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 53 3 (debug_marker) "../System/pomozne_funkcije.c":207:30 -1
     (nil))
(insn 53 51 54 3 (set (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 8 [0x8])) [1 blood_17(D)->velx+0 S4 A32])
        (reg:SF 29 s13 [137])) "../System/pomozne_funkcije.c":207:42 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 54 53 55 4 47 (nil) [1 uses])
(note 55 54 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 56 55 57 4 (debug_marker) "../System/pomozne_funkcije.c":208:2 -1
     (nil))
(insn 57 56 80 4 (set (reg:SF 30 s14 [139])
        (const_double:SF 4.5e+0 [0x0.9p+3])) "../System/pomozne_funkcije.c":208:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.5e+0 [0x0.9p+3])
        (nil)))
(insn 80 57 81 4 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:124 _12 ] [124])
            (reg:SF 30 s14 [139]))) "../System/pomozne_funkcije.c":208:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 81 80 59 4 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":208:5 817 {*movcc_vfp}
     (nil))
(jump_insn 59 81 63 4 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 69)
            (pc))) "../System/pomozne_funkcije.c":208:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 69)
(note 63 59 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 64 63 65 5 (debug_marker) "../System/pomozne_funkcije.c":208:30 -1
     (nil))
(insn 65 64 66 5 (set (reg:SF 3 r3 [140])
        (const_double:SF 5.0e+0 [0x0.ap+3])) "../System/pomozne_funkcije.c":208:42 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+0 [0x0.ap+3])
        (nil)))
(insn 66 65 69 5 (set (mem:SF (plus:SI (reg/v/f:SI 4 r4 [orig:126 blood ] [126])
                (const_int 12 [0xc])) [1 blood_17(D)->vely+0 S4 A32])
        (reg:SF 3 r3 [140])) "../System/pomozne_funkcije.c":208:42 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 69 66 70 6 46 (nil) [1 uses])
(note 70 69 84 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 84 70 85 NOTE_INSN_DELETED)
(note 85 84 0 NOTE_INSN_DELETED)

;; Function initBlood (initBlood, funcdef_no=876, decl_uid=11992, cgraph_uid=880, symbol_order=887)

      Creating newreg=185
Removing SCRATCH in insn #48 (nop 3)
rescanning insn with uid = 48.
      Creating newreg=186
Removing SCRATCH in insn #78 (nop 3)
rescanning insn with uid = 78.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=48, prev_offset=0)
Can't eliminate 103 to 102 (offset=48, prev_offset=0)
Can't eliminate 103 to 11 (offset=48, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=13,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=20,losers=2 -- refuse
            0 Costly set: reject++
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 3:  (0) *t  (1) r {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=13,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=20,losers=2 -- refuse
            0 Costly set: reject++
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =t  (1) t {floatunssisf2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =t  (1) t {floatunssisf2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) t  (1) t {*cmpsf_trap_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=21,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=6,overall=12,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7,overall=12,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 23:  (0) ?r  (1) t  (2) t {*thumb2_movsfcc_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 47:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 77:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 34:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) I {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=1,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=4,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 29:  (0) m  (1) r {*thumb2_movdf_vfp}
      Removing equiv init insn 58 (freq=47)
   58: r169:DF=1.0000000000000000208166817117216851329430937767e-2
      REG_EQUIV 1.0000000000000000208166817117216851329430937767e-2
deleting insn with uid = 58.
      Removing equiv init insn 62 (freq=47)
   62: r170:DF=6.0e+0
      REG_EQUIV 6.0e+0
deleting insn with uid = 62.
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 39:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r185
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) r  (2) r  (3) r {*mls}
Changing pseudo 169 in operand 1 of insn 112 on equiv 1.0000000000000000208166817117216851329430937767e-2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 112:  (0) r  (1) mHa {*thumb2_movdf_vfp}
Changing pseudo 170 in operand 1 of insn 113 on equiv 6.0e+0
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 113:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 73:  (0) m  (1) r {*thumb2_movsf_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r186
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) r  (2) r  (3) r {*mls}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 88:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 95:  (0) m  (1) r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 99:  (0) Uu  (1) l {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 103:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) r {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 106: point = 0, n_alt = -1
   Insn 105: point = 0, n_alt = 1
   Insn 103: point = 0, n_alt = 2
   Insn 99: point = 1, n_alt = 6
   Insn 97: point = 2, n_alt = 1
   Insn 95: point = 3, n_alt = 6
   Insn 123: point = 4, n_alt = -2
   Insn 93: point = 5, n_alt = -1
   Insn 90: point = 5, n_alt = -1
   Insn 88: point = 5, n_alt = 6
   Insn 86: point = 5, n_alt = -1
   Insn 85: point = 5, n_alt = 0
   Insn 81: point = 6, n_alt = 1
   Insn 80: point = 8, n_alt = 1
   Insn 78: point = 9, n_alt = 0
   Insn 76: point = 10, n_alt = -2
   Insn 122: point = 12, n_alt = -2
   Insn 75: point = 13, n_alt = -1
   Insn 73: point = 13, n_alt = 6
   Insn 121: point = 14, n_alt = -2
   Insn 71: point = 15, n_alt = -1
   Insn 68: point = 15, n_alt = -1
   Insn 66: point = 15, n_alt = -2
   Insn 64: point = 15, n_alt = -1
   Insn 113: point = 15, n_alt = 6
   Insn 60: point = 15, n_alt = -1
   Insn 112: point = 15, n_alt = 6
   Insn 56: point = 15, n_alt = -1
   Insn 55: point = 15, n_alt = 0
   Insn 51: point = 16, n_alt = 1
   Insn 50: point = 18, n_alt = 1
   Insn 48: point = 19, n_alt = 0
   Insn 46: point = 20, n_alt = -2
   Insn 120: point = 22, n_alt = -2
   Insn 45: point = 23, n_alt = -1
   Insn 41: point = 23, n_alt = 4
   Insn 39: point = 23, n_alt = 4
  BB 2
   Insn 131: point = 24, n_alt = -2
   Insn 130: point = 26, n_alt = -2
   Insn 129: point = 28, n_alt = -2
   Insn 29: point = 30, n_alt = 7
   Insn 119: point = 32, n_alt = -2
   Insn 28: point = 33, n_alt = -1
   Insn 26: point = 33, n_alt = 6
   Insn 82: point = 33, n_alt = 1
   Insn 52: point = 34, n_alt = 1
   Insn 34: point = 35, n_alt = 4
   Insn 77: point = 36, n_alt = 6
   Insn 47: point = 37, n_alt = 6
   Insn 25: point = 38, n_alt = -2
   Insn 118: point = 40, n_alt = -2
   Insn 24: point = 41, n_alt = -1
   Insn 23: point = 41, n_alt = 8
   Insn 125: point = 42, n_alt = -2
   Insn 124: point = 42, n_alt = 0
   Insn 32: point = 42, n_alt = 0
   Insn 31: point = 44, n_alt = 0
   Insn 33: point = 46, n_alt = -2
   Insn 4: point = 48, n_alt = 9
   Insn 3: point = 50, n_alt = 9
   Insn 2: point = 52, n_alt = -2
   Insn 115: point = 54, n_alt = -2
   Insn 114: point = 55, n_alt = -2
   Insn 116: point = 56, n_alt = -2
   Insn 19: point = 57, n_alt = 2
   Insn 11: point = 58, n_alt = 0
   Insn 10: point = 59, n_alt = 2
   Insn 117: point = 60, n_alt = -2
  r169 is added to live at bb2 start
  r170 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 5 count 6 (  1.2)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  101  119  125  128  129  130  131  133  134  135
      136  138  140  145  149  158  162  171  172  173  174
      175  176  181  182  183
    liveout: 2:

        7   13  102  103  128  130  131  145  149  158  162
      181  182  183

BB 3:
    gen: 3:

      128  130  131  145  149  158  162  181  182  183
    killed: 3:

      100  114  122  143  144  147  156  157  160  167  177
      178  179  180  182  185  186
    livein: 3:

      128  130  131  145  149  158  162  181  182  183
    liveout: 3:

        7   13  102  103  128  130  131  145  149  158  162
      181  182  183

BB 4:
    liveout: 4:

        7   13  102  103
 r114: [15..20]
 r119: [29..38]
 r122: [5..10]
 r125: [27..46]
 r128: [0..30]
 r129: [41..58]
 r130: [0..44]
 r131: [0..42]
 r133: [25..35]
 r134: [47..52]
 r135: [45..50]
 r136: [43..48]
 r138: [58..59]
 r140: [41..57]
 r143: [15..16]
 r144: [17..19]
 r145: [0..37]
 r147: [17..18]
 r149: [0..34]
 r156: [5..6]
 r157: [7..9]
 r158: [0..36]
 r160: [7..8]
 r162: [0..33]
 r167: [1..2]
 r169: [0..61]
 r170: [0..61]
 r171: [53..55]
 r172: [51..54]
 r173: [49..56]
 r174: [58..60]
 r175: [39..40]
 r176: [31..32]
 r177: [21..22]
 r178: [13..14]
 r179: [11..12]
 r180: [3..4]
 r181: [0..28]
 r182: [0..26]
 r183: [0..24]
 r185: [19..19]
 r186: [9..9]
Compressing live ranges: from 62 to 48 - 77%
Ranges after the compression:
 r114: [14..19]
 r119: [26..29]
 r122: [4..9]
 r125: [24..37]
 r128: [0..27]
 r129: [32..46]
 r130: [0..35]
 r131: [0..33]
 r133: [22..29]
 r134: [38..43]
 r135: [36..41]
 r136: [34..39]
 r138: [46..47]
 r140: [32..45]
 r143: [14..15]
 r144: [16..18]
 r145: [0..29]
 r147: [16..17]
 r149: [0..29]
 r156: [4..5]
 r157: [6..8]
 r158: [0..29]
 r160: [6..7]
 r162: [0..29]
 r167: [0..1]
 r169: [0..47]
 r170: [0..47]
 r171: [44..45]
 r172: [42..45]
 r173: [40..45]
 r174: [46..47]
 r175: [30..31]
 r176: [28..29]
 r177: [20..21]
 r178: [12..13]
 r179: [10..11]
 r180: [2..3]
 r181: [0..25]
 r182: [0..23]
 r183: [0..21]
 r185: [18..18]
 r186: [8..8]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 4
  BB 3
   Insn 106: point = 0, n_alt = -1
   Insn 105: point = 0, n_alt = 1
   Insn 103: point = 0, n_alt = 2
   Insn 99: point = 1, n_alt = 6
   Insn 97: point = 2, n_alt = 1
   Insn 95: point = 3, n_alt = 6
   Insn 123: point = 4, n_alt = -2
   Insn 93: point = 5, n_alt = -1
   Insn 90: point = 5, n_alt = -1
   Insn 88: point = 5, n_alt = 6
   Insn 86: point = 5, n_alt = -1
   Insn 85: point = 5, n_alt = 0
   Insn 81: point = 6, n_alt = 1
   Insn 80: point = 8, n_alt = 1
   Insn 78: point = 9, n_alt = 0
   Insn 76: point = 10, n_alt = -2
   Insn 122: point = 12, n_alt = -2
   Insn 75: point = 13, n_alt = -1
   Insn 73: point = 13, n_alt = 6
   Insn 121: point = 14, n_alt = -2
   Insn 71: point = 15, n_alt = -1
   Insn 68: point = 15, n_alt = -1
   Insn 66: point = 15, n_alt = -2
   Insn 64: point = 15, n_alt = -1
   Insn 113: point = 15, n_alt = 6
   Insn 60: point = 15, n_alt = -1
   Insn 112: point = 15, n_alt = 6
   Insn 56: point = 15, n_alt = -1
   Insn 55: point = 15, n_alt = 0
   Insn 51: point = 16, n_alt = 1
   Insn 50: point = 18, n_alt = 1
   Insn 48: point = 19, n_alt = 0
   Insn 46: point = 20, n_alt = -2
   Insn 120: point = 22, n_alt = -2
   Insn 45: point = 23, n_alt = -1
   Insn 41: point = 23, n_alt = 4
   Insn 39: point = 23, n_alt = 4
  BB 2
   Insn 131: point = 24, n_alt = -2
   Insn 130: point = 26, n_alt = -2
   Insn 129: point = 28, n_alt = -2
   Insn 29: point = 30, n_alt = 7
   Insn 119: point = 32, n_alt = -2
   Insn 28: point = 33, n_alt = -1
   Insn 26: point = 33, n_alt = 6
   Insn 82: point = 33, n_alt = 1
   Insn 52: point = 34, n_alt = 1
   Insn 34: point = 35, n_alt = 4
   Insn 77: point = 36, n_alt = 6
   Insn 47: point = 37, n_alt = 6
   Insn 25: point = 38, n_alt = -2
   Insn 118: point = 40, n_alt = -2
   Insn 24: point = 41, n_alt = -1
   Insn 23: point = 41, n_alt = 8
   Insn 125: point = 42, n_alt = -2
   Insn 124: point = 42, n_alt = 0
   Insn 32: point = 42, n_alt = 0
   Insn 31: point = 44, n_alt = 0
   Insn 33: point = 46, n_alt = -2
   Insn 4: point = 48, n_alt = 9
   Insn 3: point = 50, n_alt = 9
   Insn 2: point = 52, n_alt = -2
   Insn 115: point = 54, n_alt = -2
   Insn 114: point = 55, n_alt = -2
   Insn 116: point = 56, n_alt = -2
   Insn 19: point = 57, n_alt = 2
   Insn 11: point = 58, n_alt = 0
   Insn 10: point = 59, n_alt = 2
   Insn 117: point = 60, n_alt = -2
 r114: [15..20]
 r119: [29..38]
 r122: [5..10]
 r125: [27..46]
 r128: [0..30]
 r129: [41..58]
 r130: [0..44]
 r131: [0..42]
 r133: [25..35]
 r134: [47..52]
 r135: [45..50]
 r136: [43..48]
 r138: [58..59]
 r140: [41..57]
 r143: [15..16]
 r144: [17..19]
 r145: [0..37]
 r147: [17..18]
 r149: [0..34]
 r156: [5..6]
 r157: [7..9]
 r158: [0..36]
 r160: [7..8]
 r162: [0..33]
 r167: [1..2]
 r171: [53..55]
 r172: [51..54]
 r173: [49..56]
 r174: [58..60]
 r175: [39..40]
 r176: [31..32]
 r177: [21..22]
 r178: [13..14]
 r179: [11..12]
 r180: [3..4]
 r181: [0..28]
 r182: [0..26]
 r183: [0..24]
 r185: [19..19]
 r186: [9..9]
Compressing live ranges: from 61 to 48 - 78%
Ranges after the compression:
 r114: [14..19]
 r119: [26..29]
 r122: [4..9]
 r125: [24..37]
 r128: [0..27]
 r129: [32..46]
 r130: [0..35]
 r131: [0..33]
 r133: [22..29]
 r134: [38..43]
 r135: [36..41]
 r136: [34..39]
 r138: [46..47]
 r140: [32..45]
 r143: [14..15]
 r144: [16..18]
 r145: [0..29]
 r147: [16..17]
 r149: [0..29]
 r156: [4..5]
 r157: [6..8]
 r158: [0..29]
 r160: [6..7]
 r162: [0..29]
 r167: [0..1]
 r171: [44..45]
 r172: [42..45]
 r173: [40..45]
 r174: [46..47]
 r175: [30..31]
 r176: [28..29]
 r177: [20..21]
 r178: [12..13]
 r179: [10..11]
 r180: [2..3]
 r181: [0..25]
 r182: [0..23]
 r183: [0..21]
 r185: [18..18]
 r186: [8..8]

********** Assignment #1: **********

	 Assigning to 185 (cl=GENERAL_REGS, orig=185, freq=952, tfirst=185, tfreq=952)...
	   Assign 3 to reload r185 (freq=952)
	 Assigning to 186 (cl=GENERAL_REGS, orig=186, freq=952, tfirst=186, tfreq=952)...
	   Assign 3 to reload r186 (freq=952)
  Reassigning non-reload pseudos
	   Assign 34 to r128 (freq=999)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=48)
Can't eliminate 103 to 102 (offset=56, prev_offset=0)
Can't eliminate 103 to 11 (offset=56, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=56)
Can't eliminate 103 to 102 (offset=56, prev_offset=0)
Can't eliminate 103 to 11 (offset=56, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 46
changing reg in insn 48
changing reg in insn 55
changing reg in insn 50
changing reg in insn 48
changing reg in insn 25
changing reg in insn 129
changing reg in insn 29
changing reg in insn 76
changing reg in insn 78
changing reg in insn 85
changing reg in insn 80
changing reg in insn 78
changing reg in insn 33
changing reg in insn 130
changing reg in insn 34
changing reg in insn 29
changing reg in insn 88
changing reg in insn 11
changing reg in insn 124
changing reg in insn 23
changing reg in insn 14
changing reg in insn 12
changing reg in insn 31
changing reg in insn 39
changing reg in insn 32
changing reg in insn 41
changing reg in insn 34
changing reg in insn 131
changing reg in insn 2
changing reg in insn 33
changing reg in insn 3
changing reg in insn 31
changing reg in insn 4
changing reg in insn 32
changing reg in insn 10
changing reg in insn 11
changing reg in insn 19
changing reg in insn 124
changing reg in insn 23
changing reg in insn 51
changing reg in insn 55
changing reg in insn 48
changing reg in insn 51
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 81
changing reg in insn 85
changing reg in insn 78
changing reg in insn 81
changing reg in insn 77
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 97
changing reg in insn 114
changing reg in insn 2
changing reg in insn 115
changing reg in insn 3
changing reg in insn 116
changing reg in insn 4
changing reg in insn 117
changing reg in insn 11
changing reg in insn 118
changing reg in insn 25
changing reg in insn 119
changing reg in insn 29
changing reg in insn 120
changing reg in insn 46
changing reg in insn 121
changing reg in insn 73
changing reg in insn 122
changing reg in insn 76
changing reg in insn 123
changing reg in insn 95
changing reg in insn 129
changing reg in insn 66
changing reg in insn 130
changing reg in insn 103
changing reg in insn 105
changing reg in insn 103
changing reg in insn 99
changing reg in insn 95
changing reg in insn 73
changing reg in insn 41
changing reg in insn 39
changing reg in insn 123
changing reg in insn 121
changing reg in insn 131
changing reg in insn 105
changing reg in insn 48
changing reg in insn 78
deleting insn with uid = 117.
deleting insn with uid = 116.
deleting insn with uid = 114.
deleting insn with uid = 115.
deleting insn with uid = 2.
deleting insn with uid = 25.
deleting insn with uid = 119.
deleting insn with uid = 129.
deleting insn with uid = 130.
deleting insn with uid = 131.
deleting insn with uid = 120.
deleting insn with uid = 46.
deleting insn with uid = 121.
deleting insn with uid = 122.
deleting insn with uid = 76.
deleting insn with uid = 123.


try_optimize_cfg iteration 1

Deleting fallthru block 4.
deleting block 4


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 93.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 4 count 4 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 4 count 5 (  1.2)


initBlood

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={16d,21u,2e} r1={21d,10u} r2={20d,8u} r3={25d,10u} r4={2d,8u} r5={1d,1u} r6={1d,1u,1e} r7={1d,1u,1e} r8={1d,1u} r9={1d,1u} r10={1d,1u} r11={1d,1u} r12={24d} r13={1d,15u} r14={13d} r15={12d} r16={13d,1u} r17={13d} r18={13d} r19={13d} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={13d} r30={14d,4u} r31={15d,3u} r32={2d,2u} r33={2d,2u} r34={1d,1u} r35={1d,1u} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r81={12d} r82={12d} r83={12d} r84={12d} r85={12d} r86={12d} r87={12d} r88={12d} r89={12d} r90={12d} r91={12d} r92={12d} r93={12d} r94={12d} r95={12d} r96={12d} r97={12d} r98={12d} r99={12d} r100={14d,2u} r101={13d,1u} r104={12d} r105={12d} r106={12d} 
;;    total ref usage 1145{1045d,96u,4e} in 71{59 regular + 12 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 7 6 2 NOTE_INSN_DELETED)
(note 6 5 22 2 NOTE_INSN_FUNCTION_BEG)
(note 22 6 9 2 NOTE_INSN_DELETED)
(debug_insn 9 22 10 2 (debug_marker) "../System/pomozne_funkcije.c":212:5 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 31 s15 [138])
        (const_double:SF 2.0e+1 [0x0.ap+5])) "../System/pomozne_funkcije.c":212:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SF 30 s14 [orig:129 scale ] [129])
        (div:SF (reg:SF 31 s15 [138])
            (reg:SF 16 s0 [174]))) "../System/pomozne_funkcije.c":212:11 764 {*divsf3_vfp}
     (nil))
(debug_insn 12 11 13 2 (var_location:SF scale (reg/v:SF 30 s14 [orig:129 scale ] [129])) "../System/pomozne_funkcije.c":212:11 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/pomozne_funkcije.c":213:5 -1
     (nil))
(debug_insn 14 13 15 2 (var_location:SF scale (smin:SF (reg/v:SF 30 s14 [orig:129 scale ] [129])
        (const_double:SF 1.0e+0 [0x0.8p+1]))) -1
     (nil))
(debug_insn 15 14 16 2 (debug_marker) "../System/pomozne_funkcije.c":214:5 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/pomozne_funkcije.c":214:10 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/pomozne_funkcije.c":214:20 -1
     (nil))
(insn 19 18 3 2 (set (reg:SF 31 s15 [140])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/pomozne_funkcije.c":218:74 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3 19 4 2 (set (reg/v:SI 33 s17 [orig:135 x ] [135])
        (reg:SI 1 r1 [172])) "../System/pomozne_funkcije.c":211:65 728 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 33 2 (set (reg/v:SI 32 s16 [orig:136 y ] [136])
        (reg:SI 2 r2 [173])) "../System/pomozne_funkcije.c":211:65 728 {*thumb2_movsi_vfp}
     (nil))
(insn 33 4 31 2 (set (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
        (reg/v/f:SI 0 r0 [orig:134 blood ] [134])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 31 33 32 2 (set (reg:SF 33 s17 [orig:130 _38 ] [130])
        (unsigned_float:SF (reg/v:SI 33 s17 [orig:135 x ] [135]))) "../System/pomozne_funkcije.c":215:23 811 {floatunssisf2}
     (nil))
(insn 32 31 124 2 (set (reg:SF 32 s16 [orig:131 _39 ] [131])
        (unsigned_float:SF (reg/v:SI 32 s16 [orig:136 y ] [136]))) "../System/pomozne_funkcije.c":216:23 811 {floatunssisf2}
     (nil))
(insn 124 32 125 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 30 s14 [orig:129 scale ] [129])
            (reg:SF 31 s15 [140]))) "../System/pomozne_funkcije.c":218:74 828 {*cmpsf_trap_vfp}
     (nil))
(insn 125 124 23 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":218:74 817 {*movcc_vfp}
     (nil))
(insn 23 125 24 2 (set (reg:SF 0 r0)
        (if_then_else:SF (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (reg/v:SF 30 s14 [orig:129 scale ] [129])
            (reg:SF 31 s15 [140]))) "../System/pomozne_funkcije.c":218:74 741 {*thumb2_movsfcc_vfp}
     (nil))
(call_insn/u 24 23 118 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 118 24 47 2 (set (reg:DF 6 r6 [175])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":218:74 739 {*thumb2_movdf_vfp}
     (nil))
(insn 47 118 77 2 (set (reg:SI 11 fp [145])
        (const_int 458129845 [0x1b4e81b5])) "../System/pomozne_funkcije.c":218:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 458129845 [0x1b4e81b5])
        (nil)))
(insn 77 47 34 2 (set (reg:SI 10 r10 [158])
        (const_int 274877907 [0x10624dd3])) "../System/pomozne_funkcije.c":219:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 274877907 [0x10624dd3])
        (nil)))
(insn 34 77 52 2 (set (reg/f:SI 9 r9 [orig:133 _48 ] [133])
        (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
            (const_int 400 [0x190]))) 7 {*arm_addsi3}
     (nil))
(insn 52 34 82 2 (set (reg:SI 8 r8 [149])
        (const_int 1200 [0x4b0])) "../System/pomozne_funkcije.c":218:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1200 [0x4b0])
        (nil)))
(insn 82 52 26 2 (set (reg:SI 5 r5 [162])
        (const_int 500 [0x1f4])) "../System/pomozne_funkcije.c":219:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 500 [0x1f4])
        (nil)))
(insn 26 82 28 2 (set (reg:DF 2 r2)
        (const_double:DF -1.0000000000000000208166817117216851329430937767e-2 [-0x0.a3d70a3d70a3d8p-6])) 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 28 26 29 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 29 28 58 2 (set (reg:DF 34 s18 [orig:128 _23 ] [128])
        (reg:DF 0 r0 [176])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (mult:DF (reg:DF 6 r6 [orig:119 _12 ] [119])
            (const_double:DF -1.0000000000000000208166817117216851329430937767e-2 [-0x0.a3d70a3d70a3d8p-6]))
        (nil)))
(note 58 29 62 2 NOTE_INSN_DELETED)
(note 62 58 104 2 NOTE_INSN_DELETED)
(code_label 104 62 35 3 57 (nil) [1 uses])
(note 35 104 49 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 49 35 53 3 NOTE_INSN_DELETED)
(note 53 49 54 3 NOTE_INSN_DELETED)
(note 54 53 72 3 NOTE_INSN_DELETED)
(note 72 54 79 3 NOTE_INSN_DELETED)
(note 79 72 83 3 NOTE_INSN_DELETED)
(note 83 79 84 3 NOTE_INSN_DELETED)
(note 84 83 94 3 NOTE_INSN_DELETED)
(note 94 84 36 3 NOTE_INSN_DELETED)
(debug_insn 36 94 37 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 37 36 39 3 (debug_marker) "../System/pomozne_funkcije.c":215:9 -1
     (nil))
(insn 39 37 40 3 (set (mem:SF (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125]) [1 MEM[base: _41, offset: 0B]+0 S4 A32])
        (reg:SF 33 s17 [orig:130 _38 ] [130])) "../System/pomozne_funkcije.c":215:23 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 40 39 41 3 (debug_marker) "../System/pomozne_funkcije.c":216:9 -1
     (nil))
(insn 41 40 42 3 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
                (const_int 4 [0x4])) [1 MEM[base: _41, offset: 4B]+0 S4 A32])
        (reg:SF 32 s16 [orig:131 _39 ] [131])) "../System/pomozne_funkcije.c":216:23 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 42 41 43 3 (debug_marker) "../System/pomozne_funkcije.c":217:9 -1
     (nil))
(debug_insn 43 42 44 3 (var_location:SI range (const_int 100 [0x64])) "../System/pomozne_funkcije.c":217:13 -1
     (nil))
(debug_insn 44 43 45 3 (debug_marker) "../System/pomozne_funkcije.c":218:9 -1
     (nil))
(call_insn 45 44 48 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 48 45 50 3 (parallel [
            (set (reg:SI 2 r2 [144])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:114 _7 ] [114]))
                            (sign_extend:DI (reg:SI 11 fp [145])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [185]))
        ]) "../System/pomozne_funkcije.c":218:43 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:114 _7 ] [114]))
                    (const_int 458129845 [0x1b4e81b5]))
                (const_int 32 [0x20])))
        (nil)))
(insn 50 48 51 3 (set (reg:SI 3 r3 [147])
        (ashiftrt:SI (reg:SI 0 r0 [orig:114 _7 ] [114])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":218:43 147 {*arm_shiftsi3}
     (nil))
(insn 51 50 55 3 (set (reg:SI 3 r3 [143])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [144])
                (const_int 7 [0x7]))
            (reg:SI 3 r3 [147]))) "../System/pomozne_funkcije.c":218:43 319 {*rsb_shiftsi}
     (nil))
(insn 55 51 56 3 (set (reg:SI 0 r0)
        (minus:SI (reg:SI 0 r0 [orig:114 _7 ] [114])
            (mult:SI (reg:SI 8 r8 [149])
                (reg:SI 3 r3 [143])))) "../System/pomozne_funkcije.c":218:27 58 {*mls}
     (nil))
(call_insn/u 56 55 112 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 112 56 60 3 (set (reg:DF 2 r2)
        (const_double:DF 1.0000000000000000208166817117216851329430937767e-2 [0x0.a3d70a3d70a3d8p-6])) "../System/pomozne_funkcije.c":218:59 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 60 112 113 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:59 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 113 60 64 3 (set (reg:DF 2 r2)
        (const_double:DF 6.0e+0 [0x0.cp+3])) "../System/pomozne_funkcije.c":218:70 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 64 113 66 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:70 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 66 64 68 3 (set (reg:DF 2 r2)
        (reg:DF 6 r6 [orig:119 _12 ] [119])) "../System/pomozne_funkcije.c":218:74 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 68 66 71 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 71 68 73 3 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 73 71 74 3 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
                (const_int 8 [0x8])) [1 MEM[base: _41, offset: 8B]+0 S4 A32])
        (reg:SF 0 r0 [178])) "../System/pomozne_funkcije.c":218:74 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 74 73 75 3 (debug_marker) "../System/pomozne_funkcije.c":219:9 -1
     (nil))
(call_insn 75 74 78 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 78 75 80 3 (parallel [
            (set (reg:SI 2 r2 [157])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:122 _15 ] [122]))
                            (sign_extend:DI (reg:SI 10 r10 [158])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [186]))
        ]) "../System/pomozne_funkcije.c":219:43 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:122 _15 ] [122]))
                    (const_int 274877907 [0x10624dd3]))
                (const_int 32 [0x20])))
        (nil)))
(insn 80 78 81 3 (set (reg:SI 3 r3 [160])
        (ashiftrt:SI (reg:SI 0 r0 [orig:122 _15 ] [122])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":219:43 147 {*arm_shiftsi3}
     (nil))
(insn 81 80 85 3 (set (reg:SI 3 r3 [156])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [157])
                (const_int 5 [0x5]))
            (reg:SI 3 r3 [160]))) "../System/pomozne_funkcije.c":219:43 319 {*rsb_shiftsi}
     (nil))
(insn 85 81 86 3 (set (reg:SI 0 r0)
        (minus:SI (reg:SI 0 r0 [orig:122 _15 ] [122])
            (mult:SI (reg:SI 5 r5 [162])
                (reg:SI 3 r3 [156])))) "../System/pomozne_funkcije.c":219:27 58 {*mls}
     (nil))
(call_insn/u 86 85 88 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 88 86 90 3 (set (reg:DF 2 r2)
        (reg:DF 34 s18 [orig:128 _23 ] [128])) "../System/pomozne_funkcije.c":219:69 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 90 88 93 3 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:69 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 93 90 95 3 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:69 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 95 93 96 3 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
                (const_int 12 [0xc])) [1 MEM[base: _41, offset: 12B]+0 S4 A32])
        (reg:SF 0 r0 [180])) "../System/pomozne_funkcije.c":219:69 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 96 95 97 3 (debug_marker) "../System/pomozne_funkcije.c":220:9 -1
     (nil))
(insn 97 96 99 3 (set (reg:SI 3 r3 [167])
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":220:25 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 99 97 100 3 (set (mem:QI (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
                (const_int 16 [0x10])) [0 MEM[base: _41, offset: 16B]+0 S1 A32])
        (reg:QI 3 r3 [167])) "../System/pomozne_funkcije.c":220:25 263 {*arm_movqi_insn}
     (nil))
(debug_insn 100 99 101 3 (debug_marker) "../System/pomozne_funkcije.c":214:47 -1
     (nil))
(debug_insn 101 100 102 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 102 101 103 3 (debug_marker) "../System/pomozne_funkcije.c":214:20 -1
     (nil))
(insn 103 102 105 3 (set (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
        (plus:SI (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
            (const_int 20 [0x14]))) "../System/pomozne_funkcije.c":214:5 7 {*arm_addsi3}
     (nil))
(insn 105 103 106 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 4 r4 [orig:125 ivtmp.94 ] [125])
            (reg/f:SI 9 r9 [orig:133 _48 ] [133]))) "../System/pomozne_funkcije.c":214:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 106 105 128 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 104)
            (pc))) "../System/pomozne_funkcije.c":214:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1020077284 (nil))
 -> 104)
(note 128 106 132 NOTE_INSN_DELETED)
(note 132 128 0 NOTE_INSN_DELETED)

;; Function drawBlood (drawBlood, funcdef_no=877, decl_uid=12001, cgraph_uid=881, symbol_order=888)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            5 Non-pseudo reload: reject+=2
            5 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 2:  (5) rk {*stm4_}
      Creating newreg=165, assigning class CORE_REGS to r165
    2: {[r165:SI]=r0:SI;[r165:SI+0x4]=r1:SI;[r165:SI+0x8]=r2:SI;[r165:SI+0xc]=r3:SI;}
      REG_DEAD r3:SI
      REG_DEAD r2:SI
      REG_DEAD r1:SI
      REG_DEAD r0:SI
    Inserting insn reload before:
  122: r165:SI=afp:SI+0x18

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 122:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r165
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?r  (1) t {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) t  (1) G {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) t  (1) t {*cmpsf_trap_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 58:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 103:  (0) r  (1) mHa {*thumb2_movdf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 78:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 94:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=166 from oldreg=1, assigning class VFP_LO_REGS to r166
   94: r166:SI=fix(fix(r121:SF))
      REG_DEAD r121:SF
    Inserting insn reload after:
  123: r1:SI=r166:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 123:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 86:  (0) =t  (1) t  (2) t {*mulsf3_vfp}
      Creating newreg=167 from oldreg=163, assigning class VFP_LO_REGS to r167
   86: r148:SF=r167:SF*r149:SF
      REG_DEAD r163:SF
      REG_DEAD r149:SF
    Inserting insn reload before:
  124: r167:SF=r163:SF

            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 95:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=168 from oldreg=0, assigning class VFP_LO_REGS to r168
   95: r168:SI=fix(fix(r120:SF))
      REG_DEAD r120:SF
    Inserting insn reload after:
  125: r0:SI=r168:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 125:  (0) r  (1) *t {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 87:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=169 from oldreg=150, assigning class VFP_LO_REGS to r169
   87: r169:SI=fix(fix(r148:SF))
      REG_DEAD r148:SF
    Inserting insn reload after:
  126: r150:SI=r169:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 126:  (0) r  (1) *t {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 6
   Insn 96: point = 0, n_alt = 1
   Insn 93: point = 0, n_alt = 0
   Insn 89: point = 1, n_alt = 1
   Insn 126: point = 3, n_alt = 10
	Hard reg 2 is preferable by r169 with profit 156
   Insn 87: point = 5, n_alt = 0
   Insn 125: point = 7, n_alt = 10
	Hard reg 0 is preferable by r168 with profit 156
   Insn 95: point = 8, n_alt = 0
   Insn 86: point = 10, n_alt = 0
   Insn 124: point = 12, n_alt = 0
	Hard reg 0 is preferable by r167 with profit 156
   Insn 123: point = 14, n_alt = 10
	Hard reg 1 is preferable by r166 with profit 156
   Insn 94: point = 15, n_alt = 0
   Insn 85: point = 17, n_alt = 3
   Insn 111: point = 18, n_alt = -2
   Insn 83: point = 19, n_alt = -1
   Insn 82: point = 19, n_alt = -2
   Insn 110: point = 20, n_alt = 1
   Insn 80: point = 21, n_alt = -1
   Insn 79: point = 21, n_alt = 0
   Insn 78: point = 22, n_alt = 4
   Insn 77: point = 23, n_alt = 0
   Insn 76: point = 23, n_alt = -2
   Insn 103: point = 25, n_alt = 6
   Insn 109: point = 26, n_alt = -2
   Insn 75: point = 27, n_alt = -1
   Insn 73: point = 27, n_alt = -2
   Insn 71: point = 28, n_alt = -1
   Insn 69: point = 28, n_alt = -2
   Insn 108: point = 29, n_alt = -2
   Insn 65: point = 30, n_alt = -1
   Insn 63: point = 30, n_alt = -2
   Insn 61: point = 30, n_alt = -2
   Insn 107: point = 32, n_alt = -2
   Insn 60: point = 33, n_alt = -1
   Insn 58: point = 33, n_alt = 6
   Insn 56: point = 33, n_alt = -1
   Insn 55: point = 33, n_alt = -2
  BB 5
   Insn 53: point = 35, n_alt = -1
   Insn 113: point = 35, n_alt = -2
   Insn 112: point = 35, n_alt = 0
   Insn 51: point = 36, n_alt = 3
  BB 4
   Insn 49: point = 38, n_alt = -1
   Insn 115: point = 38, n_alt = -2
   Insn 114: point = 38, n_alt = 1
   Insn 46: point = 38, n_alt = 0
   Insn 45: point = 40, n_alt = 3
  BB 3
   Insn 43: point = 42, n_alt = -1
   Insn 117: point = 42, n_alt = -2
   Insn 116: point = 42, n_alt = 0
   Insn 41: point = 43, n_alt = 3
  BB 2
   Insn 39: point = 45, n_alt = -1
   Insn 119: point = 45, n_alt = -2
   Insn 118: point = 45, n_alt = 0
   Insn 5: point = 46, n_alt = 1
   Insn 11: point = 48, n_alt = 0
   Insn 4: point = 50, n_alt = -2
   Insn 10: point = 52, n_alt = 3
   Insn 37: point = 53, n_alt = 3
   Insn 106: point = 54, n_alt = -2
   Insn 105: point = 55, n_alt = -2
   Insn 104: point = 56, n_alt = -2
   Insn 2: point = 57, n_alt = 0
   Insn 122: point = 58, n_alt = 4
 r120: [9..48]
 r121: [16..38]
 r133: [39..50]
 r134: [33..46]
 r135: [49..52]
 r136: [45..53]
 r137: [42..43]
 r138: [39..40]
 r140: [35..36]
 r142: [27..30]
 r145: [22..23]
 r146: [21..25]
 r148: [6..10]
 r149: [11..17]
 r150: [2..3]
 r152: [0..1]
 r156: [49..56]
 r157: [51..55]
 r158: [47..54]
 r159: [31..32]
 r160: [28..29]
 r161: [24..26]
 r162: [19..20]
 r163: [13..18]
 r165: [57..58]
 r166: [14..15]
 r167: [11..12]
 r168: [7..8]
 r169: [4..5]
Compressing live ranges: from 59 to 42 - 71%
Ranges after the compression:
 r120: [8..35]
 r121: [14..27]
 r133: [28..37]
 r134: [26..33]
 r135: [36..39]
 r136: [32..39]
 r137: [30..31]
 r138: [28..29]
 r140: [26..27]
 r142: [22..23]
 r145: [18..19]
 r146: [18..21]
 r148: [6..9]
 r149: [10..15]
 r150: [2..3]
 r152: [0..1]
 r156: [36..39]
 r157: [38..39]
 r158: [34..39]
 r159: [24..25]
 r160: [22..23]
 r161: [20..21]
 r162: [16..17]
 r163: [12..15]
 r165: [40..41]
 r166: [12..13]
 r167: [10..11]
 r168: [6..7]
 r169: [4..5]

********** Assignment #1: **********

	 Assigning to 165 (cl=GENERAL_REGS, orig=165, freq=2000, tfirst=165, tfreq=2000)...
	   Assign 4 to reload r165 (freq=2000)
	 Assigning to 166 (cl=VFP_LO_REGS, orig=166, freq=312, tfirst=166, tfreq=312)...
	   Assign 30 to reload r166 (freq=312)
	 Assigning to 167 (cl=VFP_LO_REGS, orig=163, freq=312, tfirst=167, tfreq=312)...
	   Assign 30 to reload r167 (freq=312)
	 Assigning to 168 (cl=VFP_LO_REGS, orig=168, freq=312, tfirst=168, tfreq=312)...
	   Assign 30 to reload r168 (freq=312)
	 Assigning to 169 (cl=VFP_LO_REGS, orig=150, freq=312, tfirst=169, tfreq=312)...
	   Assign 31 to reload r169 (freq=312)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=24)
Can't eliminate 103 to 102 (offset=24, prev_offset=0)
Can't eliminate 103 to 11 (offset=24, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 118
changing reg in insn 116
changing reg in insn 95
changing reg in insn 12
changing reg in insn 46
changing reg in insn 114
changing reg in insn 112
changing reg in insn 94
changing reg in insn 4
changing reg in insn 46
changing reg in insn 15
changing reg in insn 5
changing reg in insn 55
changing reg in insn 17
changing reg in insn 10
changing reg in insn 11
changing reg in insn 37
changing reg in insn 118
changing reg in insn 41
changing reg in insn 116
changing reg in insn 45
changing reg in insn 46
changing reg in insn 51
changing reg in insn 112
changing reg in insn 61
changing reg in insn 73
changing reg in insn 63
changing reg in insn 76
changing reg in insn 103
changing reg in insn 78
changing reg in insn 79
changing reg in insn 77
changing reg in insn 86
changing reg in insn 87
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 89
changing reg in insn 93
changing reg in insn 104
changing reg in insn 11
changing reg in insn 105
changing reg in insn 4
changing reg in insn 106
changing reg in insn 5
changing reg in insn 107
changing reg in insn 61
changing reg in insn 108
changing reg in insn 69
changing reg in insn 109
changing reg in insn 76
changing reg in insn 110
changing reg in insn 82
changing reg in insn 111
deleting insn with uid = 104.
deleting insn with uid = 105.
deleting insn with uid = 106.
deleting insn with uid = 4.
deleting insn with uid = 55.
deleting insn with uid = 61.
deleting insn with uid = 69.
deleting insn with uid = 109.
deleting insn with uid = 76.
deleting insn with uid = 82.
deleting insn with uid = 111.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 96.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 11 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 11 count 8 (    1)


drawBlood

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={12d,13u} r1={16d,10u} r2={17d,9u} r3={15d,6u} r4={2d,6u} r5={1d,2u} r12={16d} r13={1d,19u} r14={9d} r15={8d} r16={9d,3u} r17={10d,4u} r18={8d,1u} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={11d,3u} r31={14d,6u} r32={2d,5u} r33={2d,4u} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={12d,4u} r101={12d,4u} r103={2e} r104={8d} r105={8d} r106={8d} 
;;    total ref usage 806{705d,99u,2e} in 78{70 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 7 6 2 NOTE_INSN_DELETED)
(note 6 3 9 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 9 6 122 2 (debug_marker) "../System/pomozne_funkcije.c":225:2 -1
     (nil))
(insn 122 9 2 2 (set (reg:SI 4 r4 [165])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) "../System/pomozne_funkcije.c":224:61 7 {*arm_addsi3}
     (nil))
(insn 2 122 37 2 (parallel [
            (set (mem/c:SI (reg:SI 4 r4 [165]) [2 blood+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/c:SI (plus:SI (reg:SI 4 r4 [165])
                        (const_int 4 [0x4])) [2 blood+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/c:SI (plus:SI (reg:SI 4 r4 [165])
                        (const_int 8 [0x8])) [2 blood+8 S4 A32])
                (reg:SI 2 r2))
            (set (mem/c:SI (plus:SI (reg:SI 4 r4 [165])
                        (const_int 12 [0xc])) [2 blood+12 S4 A32])
                (reg:SI 3 r3))
        ]) "../System/pomozne_funkcije.c":224:61 427 {*stm4_}
     (nil))
(insn 37 2 10 2 (set (reg:SF 31 s15 [136])
        (const_double:SF 4.0e+1 [0x0.ap+6])) "../System/pomozne_funkcije.c":230:4 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.0e+1 [0x0.ap+6])
        (nil)))
(insn 10 37 11 2 (set (reg:SF 32 s16 [orig:135 blood.posx ] [135])
        (mem/c:SF (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [1 blood.posx+0 S4 A32])) "../System/pomozne_funkcije.c":225:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 103 afp) [1 blood.posx+0 S4 A32])
        (nil)))
(insn 11 10 12 2 (set (reg/v:SF 32 s16 [orig:120 realx ] [120])
        (plus:SF (reg:SF 16 s0 [156])
            (reg:SF 32 s16 [orig:135 blood.posx ] [135]))) "../System/pomozne_funkcije.c":225:8 758 {*addsf3_vfp}
     (nil))
(debug_insn 12 11 13 2 (var_location:SF realx (reg/v:SF 32 s16 [orig:120 realx ] [120])) "../System/pomozne_funkcije.c":225:8 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/pomozne_funkcije.c":226:2 -1
     (nil))
(debug_insn 14 13 15 2 (var_location:SF D#8 (mem/c:SF (plus:SI (reg/f:SI 13 sp)
            (const_int 28 [0x1c])) [1 blood.posy+0 S4 A32])) "../System/pomozne_funkcije.c":226:21 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:SF realy (plus:SF (debug_expr:SF D#8)
        (reg/v:SF 17 s1 [orig:133 sy ] [133]))) "../System/pomozne_funkcije.c":226:8 -1
     (nil))
(debug_insn 16 15 5 2 (debug_marker) "../System/pomozne_funkcije.c":227:2 -1
     (nil))
(insn 5 16 17 2 (set (reg/v:SF 0 r0 [orig:134 dist ] [134])
        (reg:SF 18 s2 [158])) "../System/pomozne_funkcije.c":224:61 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 17 5 18 2 (var_location:SF distance (reg/v:SF 0 r0 [orig:134 dist ] [134])) "../System/pomozne_funkcije.c":227:2 -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker:BLK) "../System/pomozne_funkcije.c":160:7 -1
     (nil))
(debug_insn 19 18 20 2 (debug_marker) "../System/pomozne_funkcije.c":162:5 -1
     (nil))
(debug_insn 20 19 21 2 (var_location:SF distance (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":227:14 -1
     (nil))
(debug_insn 21 20 22 2 (var_location:SF vis (debug_expr:SF D#7)) "../System/pomozne_funkcije.c":227:14 -1
     (nil))
(debug_insn 22 21 23 2 (debug_marker) "../System/pomozne_funkcije.c":229:2 -1
     (nil))
(debug_insn 23 22 24 2 (var_location:SF D#6 (mult:SF (debug_expr:SF D#7)
        (const_double:SF 2.55e+2 [0x0.ffp+8]))) "../System/pomozne_funkcije.c":229:29 -1
     (nil))
(debug_insn 24 23 25 2 (var_location:SI D#5 (fix:SI (debug_expr:SF D#6))) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 25 24 26 2 (var_location:SI r (debug_expr:SI D#5)) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 27 26 28 2 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 28 27 29 2 (debug_marker:BLK) "../System/pomozne_funkcije.c":154:15 -1
     (nil))
(debug_insn 29 28 30 2 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 30 29 31 2 (var_location:SI D#4 (ashiftrt:SI (debug_expr:SI D#5)
        (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:14 -1
     (nil))
(debug_insn 31 30 32 2 (var_location:SI D#3 (ashift:SI (debug_expr:SI D#4)
        (const_int 11 [0xb]))) "../System/pomozne_funkcije.c":156:18 -1
     (nil))
(debug_insn 32 31 33 2 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 33 32 34 2 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 34 33 35 2 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 35 34 36 2 (var_location:SI c (debug_expr:SI D#3)) "../System/pomozne_funkcije.c":229:15 -1
     (nil))
(debug_insn 36 35 118 2 (debug_marker) "../System/pomozne_funkcije.c":230:2 -1
     (nil))
(insn 118 36 119 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 32 s16 [orig:120 realx ] [120])
            (reg:SF 31 s15 [136]))) "../System/pomozne_funkcije.c":230:4 828 {*cmpsf_trap_vfp}
     (nil))
(insn 119 118 39 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":230:4 817 {*movcc_vfp}
     (nil))
(jump_insn 39 119 40 2 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 100)
            (pc))) "../System/pomozne_funkcije.c":230:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 100)
(note 40 39 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 116 3 (set (reg:SF 31 s15 [137])
        (const_double:SF 2.8e+2 [0x0.8cp+9])) "../System/pomozne_funkcije.c":230:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.8e+2 [0x0.8cp+9])
        (nil)))
(insn 116 41 117 3 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 32 s16 [orig:120 realx ] [120])
            (reg:SF 31 s15 [137]))) "../System/pomozne_funkcije.c":230:16 828 {*cmpsf_trap_vfp}
     (nil))
(insn 117 116 43 3 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":230:16 817 {*movcc_vfp}
     (nil))
(jump_insn 43 117 44 3 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 100)
            (pc))) "../System/pomozne_funkcije.c":230:16 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 100)
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg:SF 33 s17 [orig:138 blood.posy ] [138])
        (mem/c:SF (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [1 blood.posy+0 S4 A32])) "../System/pomozne_funkcije.c":226:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 103 afp)
                (const_int 4 [0x4])) [1 blood.posy+0 S4 A32])
        (nil)))
(insn 46 45 114 4 (set (reg/v:SF 33 s17 [orig:121 realy ] [121])
        (plus:SF (reg/v:SF 17 s1 [orig:133 sy ] [133])
            (reg:SF 33 s17 [orig:138 blood.posy ] [138]))) "../System/pomozne_funkcije.c":226:8 758 {*addsf3_vfp}
     (nil))
(insn 114 46 115 4 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 33 s17 [orig:121 realy ] [121])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/pomozne_funkcije.c":230:31 828 {*cmpsf_trap_vfp}
     (nil))
(insn 115 114 49 4 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":230:31 817 {*movcc_vfp}
     (nil))
(jump_insn 49 115 50 4 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 100)
            (pc))) "../System/pomozne_funkcije.c":230:31 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 283038348 (nil))
 -> 100)
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 112 5 (set (reg:SF 31 s15 [140])
        (const_double:SF 2.4e+2 [0x0.fp+8])) "../System/pomozne_funkcije.c":230:44 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.4e+2 [0x0.fp+8])
        (nil)))
(insn 112 51 113 5 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 33 s17 [orig:121 realy ] [121])
            (reg:SF 31 s15 [140]))) "../System/pomozne_funkcije.c":230:44 828 {*cmpsf_trap_vfp}
     (nil))
(insn 113 112 53 5 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":230:44 817 {*movcc_vfp}
     (nil))
(jump_insn 53 113 54 5 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 100)
            (pc))) "../System/pomozne_funkcije.c":230:44 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 548896828 (nil))
 -> 100)
(note 54 53 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 66 54 81 6 NOTE_INSN_DELETED)
(note 81 66 84 6 NOTE_INSN_DELETED)
(note 84 81 88 6 NOTE_INSN_DELETED)
(note 88 84 90 6 NOTE_INSN_DELETED)
(note 90 88 91 6 NOTE_INSN_DELETED)
(note 91 90 92 6 NOTE_INSN_DELETED)
(note 92 91 56 6 NOTE_INSN_DELETED)
(call_insn/u 56 92 58 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 58 56 60 6 (set (reg:DF 2 r2)
        (const_double:DF 3.25999999999999970357045242508320370689034461975e-2 [0x0.858793dd97f628p-4])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 60 58 107 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 107 60 63 6 (set (reg:DF 4 r4 [159])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(insn 63 107 65 6 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [142])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 65 63 68 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(debug_insn 68 65 108 6 (debug_marker) "../System/pomozne_funkcije.c":231:2 -1
     (nil))
(insn 108 68 71 6 (set (reg:DF 2 r2 [160])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 71 108 73 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 73 71 75 6 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [142])) "../System/pomozne_funkcije.c":162:17 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 75 73 103 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 103 75 77 6 (set (reg:DF 2 r2 [146])
        (const_double:DF 0.0 [0x0.0p+0])) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 77 103 78 6 (set (reg:SI 2 r2 [146])
        (reg:SI 0 r0 [145])) "../System/pomozne_funkcije.c":162:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 6 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (reg:SI 1 r1 [+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) "../System/pomozne_funkcije.c":162:12 7 {*arm_addsi3}
     (nil))
(insn 79 78 80 6 (set (reg:DF 16 s0)
        (reg:DF 2 r2 [146])) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 80 79 110 6 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("exp") [flags 0x41]  <function_decl 0000000006644d00 exp>) [0 __builtin_exp S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("exp") [flags 0x41]  <function_decl 0000000006644d00 exp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 110 80 83 6 (set (reg:DF 0 r0 [162])
        (reg:DF 16 s0)) "../System/pomozne_funkcije.c":162:12 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 83 110 85 6 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":162:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 85 83 94 6 (set (reg:SF 31 s15 [149])
        (const_double:SF 2.55e+2 [0x0.ffp+8])) "../System/pomozne_funkcije.c":229:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.55e+2 [0x0.ffp+8])
        (nil)))
(insn 94 85 123 6 (set (reg:SI 30 s14 [166])
        (fix:SI (fix:SF (reg/v:SF 33 s17 [orig:121 realy ] [121])))) "../System/pomozne_funkcije.c":231:2 805 {*truncsisf2_vfp}
     (nil))
(insn 123 94 124 6 (set (reg:SI 1 r1)
        (reg:SI 30 s14 [166])) "../System/pomozne_funkcije.c":231:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 86 6 (set (reg:SF 30 s14 [163])
        (reg:SF 0 r0 [163])) "../System/pomozne_funkcije.c":229:29 737 {*thumb2_movsf_vfp}
     (nil))
(insn 86 124 95 6 (set (reg:SF 31 s15 [148])
        (mult:SF (reg:SF 30 s14 [163])
            (reg:SF 31 s15 [149]))) "../System/pomozne_funkcije.c":229:29 767 {*mulsf3_vfp}
     (nil))
(insn 95 86 125 6 (set (reg:SI 30 s14 [168])
        (fix:SI (fix:SF (reg/v:SF 32 s16 [orig:120 realx ] [120])))) "../System/pomozne_funkcije.c":231:2 805 {*truncsisf2_vfp}
     (nil))
(insn 125 95 87 6 (set (reg:SI 0 r0)
        (reg:SI 30 s14 [168])) "../System/pomozne_funkcije.c":231:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 87 125 126 6 (set (reg:SI 31 s15 [150])
        (fix:SI (fix:SF (reg:SF 31 s15 [148])))) "../System/pomozne_funkcije.c":229:15 805 {*truncsisf2_vfp}
     (nil))
(insn 126 87 89 6 (set (reg:SI 2 r2 [150])
        (reg:SI 31 s15 [150])) "../System/pomozne_funkcije.c":229:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 89 126 93 6 (set (reg:SI 2 r2 [152])
        (ashift:SI (reg:SI 2 r2 [150])
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":156:18 147 {*arm_shiftsi3}
     (nil))
(insn 93 89 96 6 (set (reg:SI 2 r2)
        (and:SI (reg:SI 2 r2 [152])
            (const_int 63488 [0xf800]))) "../System/pomozne_funkcije.c":231:2 90 {*arm_andsi3_insn}
     (nil))
(call_insn/j 96 93 97 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x3]  <function_decl 0000000007a61a00 narisi_velik_kvadrat>) [0 narisi_velik_kvadrat S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/pomozne_funkcije.c":231:2 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x3]  <function_decl 0000000007a61a00 narisi_velik_kvadrat>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(barrier 97 96 100)
(code_label 100 97 101 7 62 (nil) [4 uses])
(note 101 100 120 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 120 101 121 NOTE_INSN_DELETED)
(note 121 120 0 NOTE_INSN_DELETED)

;; Function draw_full_screen_image (draw_full_screen_image, funcdef_no=878, decl_uid=12003, cgraph_uid=882, symbol_order=889)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 102:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 16:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 103:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 57:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) m  (1) r {*thumb2_movhi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) r {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 66:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 65:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 74:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (1) US {*sibcall_value_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 89: point = 0, n_alt = 1
   Insn 87: point = 0, n_alt = 1
   Insn 88: point = 0, n_alt = 5
   Insn 84: point = 0, n_alt = -1
   Insn 81: point = 0, n_alt = -2
   Insn 83: point = 0, n_alt = 1
   Insn 82: point = 0, n_alt = 1
   Insn 80: point = 0, n_alt = 1
  BB 4
   Insn 68: point = 0, n_alt = -1
   Insn 67: point = 0, n_alt = 1
   Insn 65: point = 0, n_alt = 4
   Insn 66: point = 1, n_alt = 4
  BB 3
   Insn 60: point = 4, n_alt = -1
   Insn 59: point = 4, n_alt = 1
   Insn 53: point = 4, n_alt = 4
   Insn 57: point = 6, n_alt = 2
   Insn 51: point = 7, n_alt = 1
   Insn 48: point = 9, n_alt = 1
   Insn 47: point = 11, n_alt = 1
   Insn 43: point = 13, n_alt = 1
   Insn 49: point = 15, n_alt = 1
   Insn 46: point = 16, n_alt = 1
   Insn 42: point = 18, n_alt = 1
   Insn 45: point = 19, n_alt = 1
  BB 5
   Insn 100: point = 21, n_alt = -1
   Insn 4: point = 21, n_alt = -2
   Insn 74: point = 22, n_alt = 10
  BB 2
   Insn 98: point = 24, n_alt = -1
   Insn 103: point = 24, n_alt = 4
   Insn 16: point = 25, n_alt = 4
   Insn 14: point = 27, n_alt = 5
   Insn 102: point = 28, n_alt = 4
   Insn 2: point = 29, n_alt = -2
   Insn 97: point = 31, n_alt = -2
 r117: [2..22]
 r127: [4..21]
 r131: [0..27]
 r132: [4..25] [0..1]
 r134: [0..28]
 r135: [26..29]
 r137: [14..18]
 r138: [10..13]
 r140: [17..19]
 r141: [12..16]
 r142: [10..11]
 r143: [8..9]
 r144: [8..15]
 r146: [5..7]
 r150: [30..31]
Compressing live ranges: from 32 to 18 - 56%
Ranges after the compression:
 r117: [2..13]
 r127: [2..13]
 r131: [0..15]
 r132: [0..13]
 r134: [0..15]
 r135: [14..15]
 r137: [10..13]
 r138: [6..9]
 r140: [12..13]
 r141: [8..11]
 r142: [6..7]
 r143: [4..5]
 r144: [4..11]
 r146: [2..3]
 r150: [16..17]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 74
changing reg in insn 57
changing reg in insn 49
changing reg in insn 45
changing reg in insn 42
changing reg in insn 66
changing reg in insn 35
changing reg in insn 34
changing reg in insn 33
changing reg in insn 31
changing reg in insn 29
changing reg in insn 27
changing reg in insn 24
changing reg in insn 59
changing reg in insn 57
changing reg in insn 53
changing reg in insn 4
changing reg in insn 53
changing reg in insn 65
changing reg in insn 14
changing reg in insn 4
changing reg in insn 65
changing reg in insn 66
changing reg in insn 16
changing reg in insn 74
changing reg in insn 67
changing reg in insn 59
changing reg in insn 103
changing reg in insn 102
changing reg in insn 103
changing reg in insn 67
changing reg in insn 2
changing reg in insn 102
changing reg in insn 16
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 48
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 51
changing reg in insn 49
changing reg in insn 51
changing reg in insn 51
changing reg in insn 97
changing reg in insn 2
deleting insn with uid = 97.
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 89.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 9 (  1.3)


draw_full_screen_image

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,6u} r1={7d,4u} r2={6d,14u} r3={9d,7u} r4={2d,2u} r5={2d,2u} r12={5d,1u} r13={1d,8u} r14={5d,3u} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 259{210d,49u,0e} in 69{67 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 17 2 NOTE_INSN_FUNCTION_BEG)
(note 17 3 93 2 NOTE_INSN_DELETED)
(debug_insn 93 17 7 2 (var_location:SI D#10 (reg:SI 0 r0 [ img ])) -1
     (nil))
(debug_insn 7 93 8 2 (debug_marker) "../System/pomozne_funkcije.c":247:2 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:SI pixel (const_int 0 [0])) "../System/pomozne_funkcije.c":247:6 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../System/pomozne_funkcije.c":248:2 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/pomozne_funkcije.c":249:2 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/pomozne_funkcije.c":249:6 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 13 12 102 2 (debug_marker) "../System/pomozne_funkcije.c":249:14 -1
     (nil))
(insn 102 13 14 2 (set (reg/f:SI 5 r5 [orig:134 _70 ] [134])
        (plus:SI (reg/v/f:SI 0 r0 [orig:135 img ] [135])
            (const_int 173056 [0x2a400]))) 7 {*arm_addsi3}
     (nil))
(insn 14 102 16 2 (set (reg:SI 4 r4 [orig:131 ivtmp.116 ] [131])
        (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
                (const_int -2 [0xfffffffffffffffe])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
                (const_int -2 [0xfffffffffffffffe])))
        (nil)))
(insn 16 14 103 2 (set (reg:SI 14 lr [orig:132 ivtmp.119 ] [132])
        (plus:SI (reg/v/f:SI 0 r0 [orig:135 img ] [135])
            (const_int 720 [0x2d0]))) 7 {*arm_addsi3}
     (nil))
(insn 103 16 98 2 (set (reg/f:SI 5 r5 [orig:134 _70 ] [134])
        (plus:SI (reg/f:SI 5 r5 [orig:134 _70 ] [134])
            (const_int 464 [0x1d0]))) 7 {*arm_addsi3}
     (nil))
(jump_insn 98 103 99 2 (set (pc)
        (label_ref 69)) 284 {*arm_jump}
     (nil)
 -> 69)
(barrier 99 98 58)
(code_label 58 99 21 3 70 (nil) [2 uses])
(note 21 58 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 44 21 50 3 NOTE_INSN_DELETED)
(note 50 44 22 3 NOTE_INSN_DELETED)
(debug_insn 22 50 23 3 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 23 22 24 3 (debug_marker) "../System/pomozne_funkcije.c":251:4 -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI pixel (minus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
        (debug_expr:SI D#10))) "../System/pomozne_funkcije.c":251:10 -1
     (nil))
(debug_insn 25 24 27 3 (debug_marker) "../System/pomozne_funkcije.c":252:4 -1
     (nil))
(debug_insn 27 25 28 3 (var_location:QI red (mem:QI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117]) [0 MEM[base: _50, offset: 0B]+0 S1 A8])) "../System/pomozne_funkcije.c":252:8 -1
     (nil))
(debug_insn 28 27 29 3 (debug_marker) "../System/pomozne_funkcije.c":253:4 -1
     (nil))
(debug_insn 29 28 30 3 (var_location:QI green (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
            (const_int 1 [0x1])) [0 MEM[base: _50, offset: 1B]+0 S1 A8])) "../System/pomozne_funkcije.c":253:10 -1
     (nil))
(debug_insn 30 29 31 3 (debug_marker) "../System/pomozne_funkcije.c":254:4 -1
     (nil))
(debug_insn 31 30 32 3 (var_location:QI blue (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
            (const_int 2 [0x2])) [0 MEM[base: _50, offset: 2B]+0 S1 A8])) "../System/pomozne_funkcije.c":254:9 -1
     (nil))
(debug_insn 32 31 33 3 (debug_marker) "../System/pomozne_funkcije.c":255:4 -1
     (nil))
(debug_insn 33 32 34 3 (var_location:SI r (zero_extend:SI (mem:QI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117]) [0 MEM[base: _50, offset: 0B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(debug_insn 34 33 35 3 (var_location:SI g (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
                (const_int 1 [0x1])) [0 MEM[base: _50, offset: 1B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(debug_insn 35 34 36 3 (var_location:SI b (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
                (const_int 2 [0x2])) [0 MEM[base: _50, offset: 2B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(debug_insn 36 35 37 3 (debug_marker:BLK) "../System/pomozne_funkcije.c":154:15 -1
     (nil))
(debug_insn 37 36 38 3 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 38 37 39 3 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(debug_insn 39 38 40 3 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(debug_insn 40 39 45 3 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":255:24 -1
     (nil))
(insn 45 40 42 3 (set (reg:SI 3 r3 [orig:140 MEM[base: _50, offset: 1B] ] [140])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
                    (const_int 1 [0x1])) [0 MEM[base: _50, offset: 1B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 42 45 46 3 (set (reg:SI 1 r1 [orig:137 MEM[base: _50, offset: 0B] ] [137])
        (zero_extend:SI (mem:QI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117]) [0 MEM[base: _50, offset: 0B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 46 42 49 3 (set (reg:SI 3 r3 [141])
        (ashiftrt:SI (reg:SI 3 r3 [orig:140 MEM[base: _50, offset: 1B] ] [140])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":156:29 147 {*arm_shiftsi3}
     (nil))
(insn 49 46 43 3 (set (reg:SI 12 ip [orig:144 MEM[base: _50, offset: 2B] ] [144])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
                    (const_int 2 [0x2])) [0 MEM[base: _50, offset: 2B]+0 S1 A8]))) "../System/pomozne_funkcije.c":255:24 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 43 49 47 3 (set (reg:SI 1 r1 [138])
        (ashiftrt:SI (reg:SI 1 r1 [orig:137 MEM[base: _50, offset: 0B] ] [137])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:14 147 {*arm_shiftsi3}
     (nil))
(insn 47 43 48 3 (set (reg:SI 3 r3 [142])
        (ashift:SI (reg:SI 3 r3 [141])
            (const_int 5 [0x5]))) "../System/pomozne_funkcije.c":156:33 147 {*arm_shiftsi3}
     (nil))
(insn 48 47 51 3 (set (reg:SI 3 r3 [143])
        (ior:SI (ashift:SI (reg:SI 1 r1 [138])
                (const_int 11 [0xb]))
            (reg:SI 3 r3 [142]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 51 48 57 3 (set (reg:SI 3 r3 [146])
        (ior:SI (lshiftrt:SI (reg:SI 12 ip [orig:144 MEM[base: _50, offset: 2B] ] [144])
                (const_int 3 [0x3]))
            (reg:SI 3 r3 [143]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 57 51 53 3 (set (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
        (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":250:3 7 {*arm_addsi3}
     (nil))
(insn 53 57 54 3 (set (mem:HI (pre_inc:SI (reg:SI 0 r0 [orig:127 ivtmp.108 ] [127])) [3 MEM[base: _53, offset: 0B]+0 S2 A16])
        (reg:HI 3 r3 [146])) "../System/pomozne_funkcije.c":255:22 724 {*thumb2_movhi_vfp}
     (expr_list:REG_INC (reg:SI 0 r0 [orig:127 ivtmp.108 ] [127])
        (nil)))
(debug_insn 54 53 55 3 (debug_marker) "../System/pomozne_funkcije.c":250:21 -1
     (nil))
(debug_insn 55 54 56 3 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 56 55 59 3 (debug_marker) "../System/pomozne_funkcije.c":250:15 -1
     (nil))
(insn 59 56 60 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
            (reg:SI 14 lr [orig:132 ivtmp.119 ] [132]))) "../System/pomozne_funkcije.c":250:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 60 59 61 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 58)
            (pc))) "../System/pomozne_funkcije.c":250:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 58)
(note 61 60 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 61 63 4 (debug_marker) "../System/pomozne_funkcije.c":249:20 -1
     (nil))
(debug_insn 63 62 64 4 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 64 63 66 4 (debug_marker) "../System/pomozne_funkcije.c":249:14 -1
     (nil))
(insn 66 64 65 4 (set (reg:SI 14 lr [orig:132 ivtmp.119 ] [132])
        (plus:SI (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
            (const_int 720 [0x2d0]))) "../System/pomozne_funkcije.c":249:2 7 {*arm_addsi3}
     (nil))
(insn 65 66 67 4 (set (reg:SI 4 r4 [orig:131 ivtmp.116 ] [131])
        (plus:SI (reg:SI 4 r4 [orig:131 ivtmp.116 ] [131])
            (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":249:2 7 {*arm_addsi3}
     (nil))
(insn 67 65 68 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 14 lr [orig:132 ivtmp.119 ] [132])
            (reg/f:SI 5 r5 [orig:134 _70 ] [134]))) "../System/pomozne_funkcije.c":249:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "../System/pomozne_funkcije.c":249:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 10845908 (nil))
 -> 77)
(code_label 69 68 70 5 69 (nil) [1 uses])
(note 70 69 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 71 70 72 5 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 72 71 73 5 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 73 72 74 5 (debug_marker) "../System/pomozne_funkcije.c":250:15 -1
     (nil))
(insn 74 73 4 5 (set (reg:SI 2 r2 [orig:117 ivtmp.106 ] [117])
        (plus:SI (reg:SI 14 lr [orig:132 ivtmp.119 ] [132])
            (const_int -720 [0xfffffffffffffd30]))) 7 {*arm_addsi3}
     (nil))
(insn 4 74 100 5 (set (reg:SI 0 r0 [orig:127 ivtmp.108 ] [127])
        (reg:SI 4 r4 [orig:131 ivtmp.116 ] [131])) "../System/pomozne_funkcije.c":246:48 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 100 4 101 5 (set (pc)
        (label_ref 58)) 284 {*arm_jump}
     (nil)
 -> 58)
(barrier 101 100 77)
(code_label 77 101 78 6 71 (nil) [1 uses])
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 79 78 80 6 (debug_marker) "../System/pomozne_funkcije.c":258:2 -1
     (nil))
(insn 80 79 82 6 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":258:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 82 80 83 6 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":258:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 81 6 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":258:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 81 83 84 6 (set (reg:SI 2 r2)
        (reg:SI 3 r3)) "../System/pomozne_funkcije.c":258:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 240 [0xf0])
        (nil)))
(call_insn 84 81 85 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":258:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 85 84 88 6 (debug_marker) "../System/pomozne_funkcije.c":259:2 -1
     (nil))
(insn 88 85 87 6 (set (reg:SI 0 r0)
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":259:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 87 88 89 6 (set (reg:SI 1 r1)
        (const_int 57600 [0xe100])) "../System/pomozne_funkcije.c":259:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 89 87 90 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/pomozne_funkcije.c":259:2 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(barrier 90 89 104)
(note 104 90 0 NOTE_INSN_DELETED)

;; Function draw_full_screen_image_without_red (draw_full_screen_image_without_red, funcdef_no=879, decl_uid=12006, cgraph_uid=883, symbol_order=890)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 118:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 15:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 119:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            alt=0: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) r {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 39
	 Choosing alt 1 in insn 39:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 66:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 60:  (0) m  (1) r {*thumb2_movhi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 67:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) r {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 75:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 76:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 84:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (1) US {*sibcall_value_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 99: point = 0, n_alt = 1
   Insn 97: point = 0, n_alt = 1
   Insn 98: point = 0, n_alt = 5
   Insn 94: point = 0, n_alt = -1
   Insn 91: point = 0, n_alt = -2
   Insn 93: point = 0, n_alt = 1
   Insn 92: point = 0, n_alt = 1
   Insn 90: point = 0, n_alt = 1
  BB 6
   Insn 78: point = 0, n_alt = -1
   Insn 77: point = 0, n_alt = 1
   Insn 76: point = 0, n_alt = 4
   Insn 75: point = 1, n_alt = 4
  BB 5
   Insn 70: point = 3, n_alt = -1
   Insn 69: point = 3, n_alt = 1
   Insn 67: point = 3, n_alt = 4
  BB 4
   Insn 60: point = 5, n_alt = 4
   Insn 58: point = 6, n_alt = 1
   Insn 56: point = 8, n_alt = 1
  BB 3
   Insn 41: point = 11, n_alt = -1
   Insn 55: point = 11, n_alt = 1
   Insn 52: point = 13, n_alt = 1
   Insn 40: point = 15, n_alt = 0
   Insn 54: point = 16, n_alt = 1
   Insn 66: point = 18, n_alt = 2
   Insn 39: point = 19, n_alt = 1
   Insn 36: point = 21, n_alt = 3
   Insn 33: point = 22, n_alt = 1
   Insn 30: point = 23, n_alt = 1
   Insn 27: point = 24, n_alt = 1
  BB 7
   Insn 116: point = 26, n_alt = -1
   Insn 4: point = 26, n_alt = -2
   Insn 84: point = 27, n_alt = 10
  BB 2
   Insn 114: point = 29, n_alt = -1
   Insn 119: point = 29, n_alt = 2
   Insn 15: point = 30, n_alt = 4
   Insn 16: point = 32, n_alt = 5
   Insn 118: point = 33, n_alt = 4
   Insn 2: point = 34, n_alt = -2
   Insn 113: point = 36, n_alt = -2
 r118: [14..24]
 r119: [17..23]
 r120: [7..22]
 r128: [0..33]
 r129: [0..32]
 r131: [0..30]
 r135: [3..26]
 r136: [3..27]
 r137: [31..34]
 r139: [20..21]
 r142: [15..19]
 r143: [9..13]
 r145: [12..16]
 r146: [9..11]
 r147: [7..8]
 r149: [5..6]
 r154: [35..36]
Compressing live ranges: from 37 to 18 - 48%
Ranges after the compression:
 r118: [8..13]
 r119: [10..13]
 r120: [2..13]
 r128: [0..15]
 r129: [0..15]
 r131: [0..13]
 r135: [0..13]
 r136: [0..13]
 r137: [14..15]
 r139: [12..13]
 r142: [8..11]
 r143: [4..7]
 r145: [6..9]
 r146: [4..5]
 r147: [2..3]
 r149: [0..1]
 r154: [16..17]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 27
changing reg in insn 52
changing reg in insn 36
changing reg in insn 30
changing reg in insn 54
changing reg in insn 36
changing reg in insn 33
changing reg in insn 58
changing reg in insn 119
changing reg in insn 118
changing reg in insn 119
changing reg in insn 77
changing reg in insn 76
changing reg in insn 16
changing reg in insn 4
changing reg in insn 76
changing reg in insn 15
changing reg in insn 75
changing reg in insn 84
changing reg in insn 77
changing reg in insn 75
changing reg in insn 69
changing reg in insn 4
changing reg in insn 67
changing reg in insn 60
changing reg in insn 67
changing reg in insn 84
changing reg in insn 66
changing reg in insn 33
changing reg in insn 30
changing reg in insn 27
changing reg in insn 24
changing reg in insn 69
changing reg in insn 66
changing reg in insn 2
changing reg in insn 118
changing reg in insn 15
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 52
changing reg in insn 56
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 58
changing reg in insn 58
changing reg in insn 113
changing reg in insn 2
deleting insn with uid = 113.
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 99.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 11 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 11 (  1.2)


draw_full_screen_image_without_red

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,7u} r1={7d,7u} r2={6d,7u} r3={9d,10u} r4={2d,2u} r5={2d,2u} r6={1d,4u} r12={6d,2u} r13={1d,10u} r14={5d,4u} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={5d,3u} r101={2d} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 271{213d,58u,0e} in 75{73 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 5 17 2 NOTE_INSN_FUNCTION_BEG)
(note 17 3 103 2 NOTE_INSN_DELETED)
(debug_insn 103 17 7 2 (var_location:SI D#11 (reg:SI 0 r0 [ img ])) -1
     (nil))
(debug_insn 7 103 8 2 (debug_marker) "../System/pomozne_funkcije.c":263:2 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:SI pixel (const_int 0 [0])) "../System/pomozne_funkcije.c":263:6 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../System/pomozne_funkcije.c":264:2 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/pomozne_funkcije.c":266:2 -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/pomozne_funkcije.c":266:6 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 13 12 118 2 (debug_marker) "../System/pomozne_funkcije.c":266:14 -1
     (nil))
(insn 118 13 16 2 (set (reg/f:SI 5 r5 [orig:128 _71 ] [128])
        (plus:SI (reg/v/f:SI 0 r0 [orig:137 img ] [137])
            (const_int 94208 [0x17000]))) 7 {*arm_addsi3}
     (nil))
(insn 16 118 15 2 (set (reg:SI 4 r4 [orig:129 ivtmp.141 ] [129])
        (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
                (const_int 26400 [0x6720])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
                (const_int 26400 [0x6720])))
        (nil)))
(insn 15 16 119 2 (set (reg:SI 14 lr [orig:131 ivtmp.137 ] [131])
        (plus:SI (reg/v/f:SI 0 r0 [orig:137 img ] [137])
            (const_int 720 [0x2d0]))) 7 {*arm_addsi3}
     (nil))
(insn 119 15 114 2 (set (reg/f:SI 5 r5 [orig:128 _71 ] [128])
        (plus:SI (reg/f:SI 5 r5 [orig:128 _71 ] [128])
            (const_int 112 [0x70]))) 7 {*arm_addsi3}
     (nil))
(jump_insn 114 119 115 2 (set (pc)
        (label_ref 79)) 284 {*arm_jump}
     (nil)
 -> 79)
(barrier 115 114 68)
(code_label 68 115 21 3 79 (nil) [2 uses])
(note 21 68 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 38 21 22 3 NOTE_INSN_DELETED)
(debug_insn 22 38 23 3 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 23 22 24 3 (debug_marker) "../System/pomozne_funkcije.c":268:4 -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI pixel (minus:SI (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
        (debug_expr:SI D#11))) "../System/pomozne_funkcije.c":268:10 -1
     (nil))
(debug_insn 25 24 43 3 (debug_marker) "../System/pomozne_funkcije.c":269:4 -1
     (nil))
(debug_insn 43 25 63 3 (debug_marker) "../System/pomozne_funkcije.c":273:5 -1
     (nil))
(debug_insn 63 43 64 3 (debug_marker) "../System/pomozne_funkcije.c":267:21 -1
     (nil))
(debug_insn 64 63 65 3 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 65 64 27 3 (debug_marker) "../System/pomozne_funkcije.c":267:15 -1
     (nil))
(insn 27 65 28 3 (set (reg/v:SI 1 r1 [orig:118 red ] [118])
        (zero_extend:SI (mem:QI (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136]) [0 MEM[base: _105, offset: 0B]+0 S1 A8]))) "../System/pomozne_funkcije.c":269:8 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 28 27 29 3 (var_location:QI red (reg:QI 1 r1 [orig:118 red ] [118])) "../System/pomozne_funkcije.c":269:8 -1
     (nil))
(debug_insn 29 28 44 3 (debug_marker) "../System/pomozne_funkcije.c":270:4 -1
     (nil))
(debug_insn 44 29 30 3 (var_location:SI r (zero_extend:SI (reg:QI 1 r1 [orig:118 red ] [118]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(insn 30 44 31 3 (set (reg/v:SI 3 r3 [orig:119 green ] [119])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
                    (const_int 1 [0x1])) [0 MEM[base: _105, offset: 1B]+0 S1 A8]))) "../System/pomozne_funkcije.c":270:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 31 30 32 3 (var_location:QI green (reg:QI 3 r3 [orig:119 green ] [119])) "../System/pomozne_funkcije.c":270:10 -1
     (nil))
(debug_insn 32 31 45 3 (debug_marker) "../System/pomozne_funkcije.c":271:4 -1
     (nil))
(debug_insn 45 32 33 3 (var_location:SI g (zero_extend:SI (reg:QI 3 r3 [orig:119 green ] [119]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(insn 33 45 34 3 (set (reg/v:SI 6 r6 [orig:120 blue ] [120])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
                    (const_int 2 [0x2])) [0 MEM[base: _105, offset: 2B]+0 S1 A8]))) "../System/pomozne_funkcije.c":271:9 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 34 33 35 3 (var_location:QI blue (reg:QI 6 r6 [orig:120 blue ] [120])) "../System/pomozne_funkcije.c":271:9 -1
     (nil))
(debug_insn 35 34 46 3 (debug_marker) "../System/pomozne_funkcije.c":272:4 -1
     (nil))
(debug_insn 46 35 47 3 (var_location:SI b (zero_extend:SI (reg:QI 6 r6 [orig:120 blue ] [120]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(debug_insn 47 46 48 3 (debug_marker:BLK) "../System/pomozne_funkcije.c":154:15 -1
     (nil))
(debug_insn 48 47 49 3 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 49 48 50 3 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(debug_insn 50 49 51 3 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(debug_insn 51 50 36 3 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":273:30 -1
     (nil))
(insn 36 51 39 3 (set (reg:SI 0 r0 [139])
        (and:SI (reg/v:SI 1 r1 [orig:118 red ] [118])
            (reg/v:SI 3 r3 [orig:119 green ] [119]))) "../System/pomozne_funkcije.c":272:34 90 {*arm_andsi3_insn}
     (nil))
(insn 39 36 66 3 (set (reg:SI 0 r0 [142])
        (and:SI (reg:SI 0 r0 [139])
            (reg/v:SI 6 r6 [orig:120 blue ] [120]))) "../System/pomozne_funkcije.c":272:34 90 {*arm_andsi3_insn}
     (nil))
(insn 66 39 54 3 (set (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
        (plus:SI (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":267:3 7 {*arm_addsi3}
     (nil))
(insn 54 66 40 3 (set (reg:SI 3 r3 [145])
        (ashiftrt:SI (reg/v:SI 3 r3 [orig:119 green ] [119])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":156:29 147 {*arm_shiftsi3}
     (nil))
(insn 40 54 52 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [142])
            (const_int 255 [0xff]))) "../System/pomozne_funkcije.c":272:34 268 {*arm_cmpsi_insn}
     (nil))
(insn 52 40 55 3 (set (reg:SI 1 r1 [143])
        (ashiftrt:SI (reg/v:SI 1 r1 [orig:118 red ] [118])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:14 147 {*arm_shiftsi3}
     (nil))
(insn 55 52 41 3 (set (reg:SI 3 r3 [146])
        (ashift:SI (reg:SI 3 r3 [145])
            (const_int 5 [0x5]))) "../System/pomozne_funkcije.c":156:33 147 {*arm_shiftsi3}
     (nil))
(jump_insn 41 55 42 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 61)
            (pc))) "../System/pomozne_funkcije.c":272:34 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 365072228 (nil))
 -> 61)
(note 42 41 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 53 42 57 4 NOTE_INSN_DELETED)
(note 57 53 56 4 NOTE_INSN_DELETED)
(insn 56 57 58 4 (set (reg:SI 3 r3 [147])
        (ior:SI (ashift:SI (reg:SI 1 r1 [143])
                (const_int 11 [0xb]))
            (reg:SI 3 r3 [146]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 58 56 60 4 (set (reg:SI 3 r3 [149])
        (ior:SI (lshiftrt:SI (reg/v:SI 6 r6 [orig:120 blue ] [120])
                (const_int 3 [0x3]))
            (reg:SI 3 r3 [147]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 60 58 61 4 (set (mem:HI (reg:SI 12 ip [orig:135 ivtmp.131 ] [135]) [3 MEM[base: _83, offset: 0B]+0 S2 A16])
        (reg:HI 3 r3 [149])) "../System/pomozne_funkcije.c":273:28 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 61 60 62 5 78 (nil) [1 uses])
(note 62 61 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 62 69 5 (set (reg:SI 12 ip [orig:135 ivtmp.131 ] [135])
        (plus:SI (reg:SI 12 ip [orig:135 ivtmp.131 ] [135])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":267:3 7 {*arm_addsi3}
     (nil))
(insn 69 67 70 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 14 lr [orig:131 ivtmp.137 ] [131])
            (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136]))) "../System/pomozne_funkcije.c":267:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 70 69 71 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 68)
            (pc))) "../System/pomozne_funkcije.c":267:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 68)
(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 72 71 73 6 (debug_marker) "../System/pomozne_funkcije.c":266:20 -1
     (nil))
(debug_insn 73 72 74 6 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 74 73 75 6 (debug_marker) "../System/pomozne_funkcije.c":266:14 -1
     (nil))
(insn 75 74 76 6 (set (reg:SI 14 lr [orig:131 ivtmp.137 ] [131])
        (plus:SI (reg:SI 14 lr [orig:131 ivtmp.137 ] [131])
            (const_int 720 [0x2d0]))) "../System/pomozne_funkcije.c":266:2 7 {*arm_addsi3}
     (nil))
(insn 76 75 77 6 (set (reg:SI 4 r4 [orig:129 ivtmp.141 ] [129])
        (plus:SI (reg:SI 4 r4 [orig:129 ivtmp.141 ] [129])
            (const_int 480 [0x1e0]))) "../System/pomozne_funkcije.c":266:2 7 {*arm_addsi3}
     (nil))
(insn 77 76 78 6 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 5 r5 [orig:128 _71 ] [128])
            (reg:SI 14 lr [orig:131 ivtmp.137 ] [131]))) "../System/pomozne_funkcije.c":266:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 78 77 79 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "../System/pomozne_funkcije.c":266:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 10845908 (nil))
 -> 87)
(code_label 79 78 80 7 77 (nil) [1 uses])
(note 80 79 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 81 80 82 7 (var_location:SI y (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 82 81 83 7 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 83 82 84 7 (debug_marker) "../System/pomozne_funkcije.c":267:15 -1
     (nil))
(insn 84 83 4 7 (set (reg:SI 2 r2 [orig:136 ivtmp.130 ] [136])
        (plus:SI (reg:SI 14 lr [orig:131 ivtmp.137 ] [131])
            (const_int -720 [0xfffffffffffffd30]))) 7 {*arm_addsi3}
     (nil))
(insn 4 84 116 7 (set (reg:SI 12 ip [orig:135 ivtmp.131 ] [135])
        (reg:SI 4 r4 [orig:129 ivtmp.141 ] [129])) "../System/pomozne_funkcije.c":262:60 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 116 4 117 7 (set (pc)
        (label_ref 68)) 284 {*arm_jump}
     (nil)
 -> 68)
(barrier 117 116 87)
(code_label 87 117 88 8 80 (nil) [1 uses])
(note 88 87 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 89 88 90 8 (debug_marker) "../System/pomozne_funkcije.c":276:2 -1
     (nil))
(insn 90 89 92 8 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":276:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 92 90 93 8 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":276:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 91 8 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":276:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 91 93 94 8 (set (reg:SI 2 r2)
        (reg:SI 3 r3)) "../System/pomozne_funkcije.c":276:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 240 [0xf0])
        (nil)))
(call_insn 94 91 95 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":276:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 95 94 98 8 (debug_marker) "../System/pomozne_funkcije.c":277:2 -1
     (nil))
(insn 98 95 97 8 (set (reg:SI 0 r0)
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":277:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 97 98 99 8 (set (reg:SI 1 r1)
        (const_int 57600 [0xe100])) "../System/pomozne_funkcije.c":277:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 99 97 100 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/pomozne_funkcije.c":277:2 293 {*sibcall_value_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(barrier 100 99 120)
(note 120 100 0 NOTE_INSN_DELETED)

;; Function create_level_one_sprites (create_level_one_sprites, funcdef_no=881, decl_uid=12007, cgraph_uid=885, symbol_order=892)

      Creating newreg=288
Removing SCRATCH in insn #52 (nop 3)
rescanning insn with uid = 52.
      Creating newreg=289
Removing SCRATCH in insn #69 (nop 3)
rescanning insn with uid = 69.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=40, prev_offset=0)
Can't eliminate 103 to 11 (offset=40, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
      Removing equiv init insn 13 (freq=20)
   13: r252:SI=`sp_original'
      REG_EQUIV `sp_original'
deleting insn with uid = 13.
      Removing equiv init insn 360 (freq=20)
  360: r251:SI=`map'
      REG_EQUIV `map'
deleting insn with uid = 360.
      Removing equiv init insn 361 (freq=20)
  361: r250:SI=`Blocksize'
      REG_EQUIV `Blocksize'
deleting insn with uid = 361.
      Removing equiv init insn 51 (freq=20)
   51: r174:SI=0xffffffffb21642c9
      REG_EQUIV 0xffffffffb21642c9
deleting insn with uid = 51.
      Removing equiv init insn 68 (freq=20)
   68: r186:SI=0x2e8ba2e9
      REG_EQUIV 0x2e8ba2e9
deleting insn with uid = 68.
Changing pseudo 252 in operand 1 of insn 363 on equiv `sp_original'
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 363:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
      Removing equiv init insn 14 (freq=20)
   14: r125:SI=r252:SI+0x6f0
      REG_EQUIV const(`sp_original'+0x6f0)
deleting insn with uid = 14.
      Removing equiv init insn 362 (freq=20)
  362: r253:SI=r252:SI+0x53c
      REG_EQUIV const(`sp_original'+0x53c)
deleting insn with uid = 362.
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 100:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 427:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=290 from oldreg=282, assigning class CORE_REGS to address r290
	   Change to class GENERAL_REGS for r290
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_vfp}
   21: [r290:SI+0x14]=r163:SI
      REG_DEAD r163:SI
    Inserting insn reload before:
  434: r290:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 434:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r290 for output r290:SI, change to class LO_REGS for r290
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=291 from oldreg=282, assigning class CORE_REGS to address r291
	   Change to class GENERAL_REGS for r291
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 25:  (0) Uu  (1) l {*arm_movqi_insn}
   25: [r291:SI+0x18]=r164:SI#0
      REG_DEAD r164:SI
    Inserting insn reload before:
  435: r291:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 435:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r291 for output r291:SI, change to class LO_REGS for r291
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=292 from oldreg=282, assigning class CORE_REGS to address r292
	   Change to class GENERAL_REGS for r292
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_vfp}
   28: [r292:SI+0x1c]=r166:SI
    Inserting insn reload before:
  436: r292:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 436:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r292 for output r292:SI, change to class LO_REGS for r292
      Creating newreg=293 from oldreg=282, assigning class CORE_REGS to address r293
	   Change to class GENERAL_REGS for r293
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) m  (1) l {*thumb2_movsi_vfp}
   34: [r293:SI]=r166:SI
    Inserting insn reload before:
  437: r293:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 437:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r293 for output r293:SI, change to class LO_REGS for r293
      Creating newreg=294 from oldreg=282, assigning class CORE_REGS to address r294
	   Change to class GENERAL_REGS for r294
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) m  (1) l {*thumb2_movsi_vfp}
   37: [r294:SI+0x4]=r166:SI
    Inserting insn reload before:
  438: r294:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 438:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r294 for output r294:SI, change to class LO_REGS for r294
      Creating newreg=295 from oldreg=282, assigning class CORE_REGS to address r295
	   Change to class GENERAL_REGS for r295
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 41:  (0) m  (1) r {*arm_movqi_insn}
   41: [r295:SI+0x1b8]=r166:SI#0
      REG_DEAD r166:SI
    Inserting insn reload before:
  439: r295:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 439:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r295 for output r295:SI, change to class LO_REGS for r295
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=296 from oldreg=282, assigning class CORE_REGS to address r296
	   Change to class GENERAL_REGS for r296
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 31:  (0) m  (1) l {*thumb2_movsi_vfp}
   31: [r296:SI+0x20]=r167:SI
      REG_DEAD r167:SI
    Inserting insn reload before:
  440: r296:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 440:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r296 for output r296:SI, change to class LO_REGS for r296
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=1,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=4,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 428:  (0) m  (1) r {*thumb2_movdf_vfp}
Changing pseudo 174 in operand 2 of insn 52 on equiv 0xffffffffb21642c9
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 52:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r288
      Creating newreg=297, assigning class GENERAL_REGS to r297
   52: {r173:SI=trunc(sign_extend(r113:SI)*sign_extend(r297:SI) 0>>0x20);clobber r288:SI;}
      REG_UNUSED r288:SI
      REG_EQUAL trunc(sign_extend(r113:SI)*0xffffffffb21642c9 0>>0x20)
    Inserting insn reload before:
  441: r297:SI=0xffffffffb21642c9

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 441:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r297
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 63:  (0) r  (1) rk  (2) rI {*arm_addsi3}
Changing pseudo 186 in operand 2 of insn 69 on equiv 0x2e8ba2e9
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 69:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r289
      Creating newreg=298, assigning class GENERAL_REGS to r298
   69: {r185:SI=trunc(sign_extend(r115:SI)*sign_extend(r298:SI) 0>>0x20);clobber r289:SI;}
      REG_UNUSED r289:SI
      REG_EQUAL trunc(sign_extend(r115:SI)*0x2e8ba2e9 0>>0x20)
    Inserting insn reload before:
  442: r298:SI=0x2e8ba2e9

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 442:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r298
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) r  (2) r  (3) r {*mls}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 76:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) r  (2) %r  (3) r {*mla}
Changing pseudo 251 in operand 1 of insn 83 on equiv `map'
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
  Commutative operand exchange in insn 83
	 Choosing alt 0 in insn 83:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
      Creating newreg=299, assigning class CORE_REGS to r299
   83: r195:SI=r193:SI+r299:SI
      REG_DEAD r193:SI
      REG_EQUAL r193:SI+`map'
    Inserting insn reload before:
  443: r299:SI=`map'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 443:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r299
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) l {*thumb2_cbnz}
Changing address in insn 94 r250:SI -- no change
Changing pseudo 250 in address of insn 94 on equiv `Blocksize'
      Creating newreg=300, assigning class CORE_REGS to address r300
	   Change to class GENERAL_REGS for r300
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
   94: r0:SI=[r300:SI]
      REG_EQUAL [`Blocksize']
    Inserting insn reload before:
  444: r300:SI=`Blocksize'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 444:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r300
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 381:  (0) r  (1) mHa {*thumb2_movdf_vfp}
Changing address in insn 110 r252:SI+0x8 -- no change
Changing pseudo 252 in address of insn 110 on equiv `sp_original'
      Creating newreg=301, assigning class CORE_REGS to address r301
	   Change to class GENERAL_REGS for r301
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  110: r0:SF=[r301:SI+0x8]
      REG_EQUAL [const(`sp_original'+0x8)]
    Inserting insn reload before:
  445: r301:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 445:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r301
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 385:  (0) r  (1) mHa {*thumb2_movdf_vfp}
Changing address in insn 135 r252:SI+0xc -- no change
Changing pseudo 252 in address of insn 135 on equiv `sp_original'
      Creating newreg=302, assigning class CORE_REGS to address r302
	   Change to class GENERAL_REGS for r302
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  135: r0:SF=[r302:SI+0xc]
      REG_EQUAL [const(`sp_original'+0xc)]
    Inserting insn reload before:
  446: r302:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 446:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r302
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 422:  (0) =r  (1) r {clzsi2}
      Creating newreg=303 from oldreg=141, assigning class GENERAL_REGS to r303
  422: r303:SI=clz(r264:SI)
      REG_DEAD r264:SI
    Inserting insn reload after:
  447: r141:SI=r303:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 447:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=304 from oldreg=303, assigning class LO_REGS to r304
  447: r141:SI=r304:SI
    Inserting insn reload before:
  448: r304:SI=r303:SI

            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
          alt=1,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=2,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=22,losers=3 -- refuse
	 Choosing alt 1 in insn 423:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=305 from oldreg=141, assigning class LO_REGS to r305
      Creating newreg=306 from oldreg=141, assigning class LO_REGS to r306
  423: r305:SI=r306:SI 0>>0x5
    Inserting insn reload before:
  450: r306:SI=r141:SI
    Inserting insn reload after:
  449: r141:SI=r305:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 449:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 450:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=6,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=11,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=17,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
      Creating newreg=307 from oldreg=141, assigning class GENERAL_REGS to r307
    3: r307:SI=0x1
    Inserting insn reload after:
  451: r141:SI=r307:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 451:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=308 from oldreg=307, assigning class LO_REGS to r308
  451: r141:SI=r308:SI
    Inserting insn reload before:
  452: r308:SI=r307:SI

Changing address in insn 157 r252:SI+0x1c4 -- no change
Changing pseudo 252 in address of insn 157 on equiv `sp_original'
      Creating newreg=309, assigning class CORE_REGS to address r309
	   Change to class GENERAL_REGS for r309
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 157:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  157: r0:SF=[r309:SI+0x1c4]
      REG_EQUAL [const(`sp_original'+0x1c4)]
    Inserting insn reload before:
  453: r309:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 453:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r309
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 384:  (0) r  (1) mHa {*thumb2_movdf_vfp}
Changing address in insn 182 r252:SI+0x1c8 -- no change
Changing pseudo 252 in address of insn 182 on equiv `sp_original'
      Creating newreg=310, assigning class CORE_REGS to address r310
	   Change to class GENERAL_REGS for r310
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  182: r0:SF=[r310:SI+0x1c8]
      REG_EQUAL [const(`sp_original'+0x1c8)]
    Inserting insn reload before:
  454: r310:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 454:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r310
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=1,overall=24,losers=3 -- refuse
            0 Non input pseudo reload: reject++
          alt=2,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=3,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=24,losers=3 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=7,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=11,overall=22,losers=3 -- refuse
	 Choosing alt 0 in insn 377:  (0) =l  (1) 0  (2) lPy {*thumb2_movsicc_insn}
      Creating newreg=311 from oldreg=141, assigning class LO_REGS to r311
  377: r311:SI={(cc:CC==0)?r311:SI:0}
      REG_DEAD cc:CC
    Inserting insn reload before:
  455: r311:SI=r141:SI
    Inserting insn reload after:
  456: r141:SI=r311:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 456:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 455:  (0) l  (1) mi {*thumb2_movsi_vfp}
Changing address in insn 201 r252:SI+0x380 -- no change
Changing pseudo 252 in address of insn 201 on equiv `sp_original'
      Creating newreg=312, assigning class CORE_REGS to address r312
	   Change to class GENERAL_REGS for r312
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 201:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  201: r0:SF=[r312:SI+0x380]
      REG_EQUAL [const(`sp_original'+0x380)]
    Inserting insn reload before:
  457: r312:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 457:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r312
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 383:  (0) r  (1) mHa {*thumb2_movdf_vfp}
Changing address in insn 226 r252:SI+0x384 -- no change
Changing pseudo 252 in address of insn 226 on equiv `sp_original'
      Creating newreg=313, assigning class CORE_REGS to address r313
	   Change to class GENERAL_REGS for r313
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 226:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  226: r0:SF=[r313:SI+0x384]
      REG_EQUAL [const(`sp_original'+0x384)]
    Inserting insn reload before:
  458: r313:SI=`sp_original'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 458:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r313
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) l {*thumb2_cbnz}
Changing address in insn 247 r253:SI -- no change
Changing pseudo 253 in address of insn 247 on equiv const(`sp_original'+0x53c)
      Creating newreg=314, assigning class CORE_REGS to address r314
	   Change to class GENERAL_REGS for r314
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 247:  (0) r  (1) mHa {*thumb2_movsf_vfp}
  247: r0:SF=[r314:SI]
      REG_EQUAL [const(`sp_original'+0x53c)]
    Inserting insn reload before:
  459: r314:SI=const(`sp_original'+0x53c)

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 459:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r314
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) l {*thumb2_cbz}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 382:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 274:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 275:  (0) r  (1) mHa {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) l {*thumb2_cbnz}
          alt=0,overall=6,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=15,losers=2 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=15,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
          alt=4,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 289:  (0) l  (1) Py {*arm_cmpsi_insn}
      Creating newreg=315 from oldreg=141, assigning class LO_REGS to r315
  289: cc:CC=cmp(r315:SI,0x1)
      REG_DEAD r141:SI
    Inserting insn reload before:
  460: r315:SI=r141:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 460:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=8,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 432:  (0) r  (1) mHa {*thumb2_movdf_vfp}
      Creating newreg=316 from oldreg=282, assigning class CORE_REGS to address r316
	   Change to class GENERAL_REGS for r316
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 296:  (0) m  (1) r {*thumb2_movsf_vfp}
  296: [r316:SI+0x8]=r280:SF
      REG_DEAD r280:SF
    Inserting insn reload before:
  461: r316:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 461:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r316 for output r316:SI, change to class LO_REGS for r316
      Creating newreg=317 from oldreg=282, assigning class CORE_REGS to address r317
	   Change to class GENERAL_REGS for r317
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 312:  (0) m  (1) r {*thumb2_movsf_vfp}
  312: [r317:SI+0xc]=r281:SF
      REG_DEAD r281:SF
    Inserting insn reload before:
  462: r317:SI=r282:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 462:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r317 for output r317:SI, change to class LO_REGS for r317
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=13,losers=2,rld_nregs=2
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=2,rld_nregs=2
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=22,losers=2 -- refuse
	 Choosing alt 4 in insn 316:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Creating newreg=318 from oldreg=282, assigning class GENERAL_REGS to r318
      Creating newreg=319 from oldreg=282, assigning class CORE_REGS to r319
  316: r318:SI=r319:SI+0x1bc
    Inserting insn reload before:
  464: r319:SI=r282:SI
    Inserting insn reload after:
  463: r282:SI=r318:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 463:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=320 from oldreg=318, assigning class LO_REGS to r320
  463: r282:SI=r320:SI
    Inserting insn reload before:
  465: r320:SI=r318:SI

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 464:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r319 for output r319:SI, change to class LO_REGS for r319
Changing pseudo 125 in operand 0 of insn 318 on equiv const(`sp_original'+0x6f0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=15,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 318:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=321, assigning class GENERAL_REGS to r321
      Creating newreg=322 from oldreg=282, assigning class GENERAL_REGS to r322
  318: cc:CC=cmp(r321:SI,r322:SI)
    Inserting insn reload before:
  466: r321:SI=const(`sp_original'+0x6f0)
  467: r322:SI=r282:SI

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 466:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r321
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 467:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r322 for output r322:SI, change to class LO_REGS for r322
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=323 from oldreg=282, assigning class LO_REGS to inheritance r323
    Original reg change 282->323 (bb3):
  439: r295:SI=r323:SI
    Add inheritance<-original before:
  468: r323:SI=r282:SI

    Inheritance reuse change 282->323 (bb3):
  440: r296:SI=r323:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=324 from oldreg=282, assigning class LO_REGS to inheritance r324
    Original reg change 282->324 (bb3):
  438: r294:SI=r324:SI
    Add inheritance<-original before:
  469: r324:SI=r282:SI

    Inheritance reuse change 282->324 (bb3):
  468: r323:SI=r324:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=325 from oldreg=282, assigning class LO_REGS to inheritance r325
    Original reg change 282->325 (bb3):
  437: r293:SI=r325:SI
    Add inheritance<-original before:
  470: r325:SI=r282:SI

    Inheritance reuse change 282->325 (bb3):
  469: r324:SI=r325:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=326 from oldreg=282, assigning class LO_REGS to inheritance r326
    Original reg change 282->326 (bb3):
  436: r292:SI=r326:SI
    Add inheritance<-original before:
  471: r326:SI=r282:SI

    Inheritance reuse change 282->326 (bb3):
  470: r325:SI=r326:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=327 from oldreg=282, assigning class LO_REGS to inheritance r327
    Original reg change 282->327 (bb3):
  435: r291:SI=r327:SI
    Add inheritance<-original before:
  472: r327:SI=r282:SI

    Inheritance reuse change 282->327 (bb3):
  471: r326:SI=r327:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=328 from oldreg=282, assigning class LO_REGS to inheritance r328
    Original reg change 282->328 (bb3):
  434: r290:SI=r328:SI
    Add inheritance<-original before:
  473: r328:SI=r282:SI

    Inheritance reuse change 282->328 (bb3):
  472: r327:SI=r328:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 4
EBB 5 6
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=329 from oldreg=141, assigning class LO_REGS to inheritance r329
    Original reg change 141->329 (bb6):
  447: r329:SI=r304:SI
    Add original<-inheritance after:
  474: r141:SI=r329:SI

    Inheritance reuse change 141->329 (bb6):
  450: r306:SI=r329:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=330 from oldreg=301, assigning class LO_REGS to invariant inheritance r330
  445: r301:SI=`sp_original'
    Add invariant inheritance<-original after:
  475: r330:SI=r301:SI

  446: r302:SI=`sp_original'
    Changing reload<-inheritance after:
  476: r302:SI=r330:SI

deleting insn with uid = 446.
    Invariant inheritance reuse change 330 (bb6):
  446: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=331 from oldreg=283, assigning class ALL_REGS to inheritance r331
    Original reg change 283->331 (bb5):
  381: r2:DF=r331:DF
    Add inheritance<-original before:
  477: r331:DF=r283:DF

    Inheritance reuse change 283->331 (bb6):
  385: r2:DF=r331:DF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   474: r141:SI=r329:SI
deleting insn with uid = 474.
EBB 7
EBB 8 9
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=332 from oldreg=309, assigning class LO_REGS to invariant inheritance r332
  453: r309:SI=`sp_original'
    Add invariant inheritance<-original after:
  478: r332:SI=r309:SI

  454: r310:SI=`sp_original'
    Changing reload<-inheritance after:
  479: r310:SI=r332:SI

deleting insn with uid = 454.
    Invariant inheritance reuse change 332 (bb9):
  454: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 10 11
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=333 from oldreg=312, assigning class LO_REGS to invariant inheritance r333
  457: r312:SI=`sp_original'
    Add invariant inheritance<-original after:
  480: r333:SI=r312:SI

  458: r313:SI=`sp_original'
    Changing reload<-inheritance after:
  481: r313:SI=r333:SI

deleting insn with uid = 458.
    Invariant inheritance reuse change 333 (bb11):
  458: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 12 13
EBB 14 15
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=334 from oldreg=282, assigning class LO_REGS to inheritance r334
    Original reg change 282->334 (bb15):
  463: r334:SI=r320:SI
    Add original<-inheritance after:
  482: r282:SI=r334:SI

    Inheritance reuse change 282->334 (bb15):
  467: r322:SI=r334:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=335 from oldreg=282, assigning class LO_REGS to inheritance r335
    Original reg change 282->335 (bb15):
  462: r317:SI=r335:SI
    Add inheritance<-original before:
  483: r335:SI=r282:SI

    Inheritance reuse change 282->335 (bb15):
  464: r319:SI=r335:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=336 from oldreg=282, assigning class LO_REGS to inheritance r336
    Original reg change 282->336 (bb15):
  461: r316:SI=r336:SI
    Add inheritance<-original before:
  484: r336:SI=r282:SI

    Inheritance reuse change 282->336 (bb15):
  483: r335:SI=r336:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
  BB 15
   Insn 319: point = 0, n_alt = -1
   Insn 318: point = 0, n_alt = 1
   Insn 467: point = 1, n_alt = 5
	   Creating copy r322<-r334@81
   Insn 466: point = 3, n_alt = 5
   Insn 482: point = 4, n_alt = -1
   Insn 463: point = 5, n_alt = 7
	   Creating copy r320->r334@81
   Insn 465: point = 7, n_alt = -2
	   Creating copy r318->r320@81
   Insn 316: point = 9, n_alt = 4
   Insn 464: point = 11, n_alt = 5
	   Creating copy r319<-r335@81
   Insn 312: point = 13, n_alt = 6
   Insn 462: point = 14, n_alt = 5
	   Creating copy r317<-r335@81
   Insn 483: point = 15, n_alt = -1
	   Creating copy r335<-r336@81
   Insn 418: point = 17, n_alt = -2
   Insn 310: point = 18, n_alt = -1
   Insn 307: point = 18, n_alt = -1
   Insn 305: point = 18, n_alt = -2
   Insn 303: point = 19, n_alt = -1
   Insn 386: point = 19, n_alt = -2
   Insn 299: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -2
   Insn 296: point = 20, n_alt = 6
   Insn 461: point = 21, n_alt = 5
	   Creating copy r316<-r336@81
   Insn 484: point = 22, n_alt = -1
   Insn 417: point = 24, n_alt = -2
   Insn 294: point = 25, n_alt = -1
   Insn 293: point = 25, n_alt = -2
   Insn 432: point = 26, n_alt = 6
   Insn 431: point = 28, n_alt = -2
   Insn 430: point = 30, n_alt = -2
   Insn 429: point = 32, n_alt = -2
  BB 14
   Insn 290: point = 35, n_alt = -1
   Insn 289: point = 35, n_alt = 0
   Insn 460: point = 36, n_alt = 5
  BB 13
   Insn 283: point = 39, n_alt = 0
   Insn 416: point = 40, n_alt = -2
   Insn 280: point = 41, n_alt = -1
   Insn 279: point = 41, n_alt = -2
   Insn 278: point = 42, n_alt = -2
   Insn 415: point = 43, n_alt = -2
   Insn 276: point = 44, n_alt = -1
   Insn 275: point = 44, n_alt = 5
   Insn 274: point = 45, n_alt = 5
   Insn 270: point = 46, n_alt = -2
   Insn 414: point = 48, n_alt = -2
   Insn 269: point = 49, n_alt = -1
   Insn 267: point = 49, n_alt = -2
   Insn 265: point = 49, n_alt = -1
   Insn 382: point = 49, n_alt = 6
   Insn 261: point = 49, n_alt = -1
   Insn 260: point = 49, n_alt = -2
  BB 12
   Insn 255: point = 50, n_alt = 0
   Insn 413: point = 51, n_alt = -2
   Insn 252: point = 52, n_alt = -1
   Insn 251: point = 52, n_alt = -2
   Insn 250: point = 52, n_alt = -2
   Insn 412: point = 53, n_alt = -2
   Insn 248: point = 54, n_alt = -1
   Insn 247: point = 54, n_alt = 5
   Insn 459: point = 55, n_alt = 5
  BB 11
   Insn 234: point = 57, n_alt = 0
   Insn 411: point = 58, n_alt = -2
   Insn 231: point = 59, n_alt = -1
   Insn 230: point = 59, n_alt = -2
   Insn 229: point = 60, n_alt = -2
   Insn 410: point = 61, n_alt = -2
   Insn 227: point = 62, n_alt = -1
   Insn 226: point = 62, n_alt = 5
   Insn 481: point = 63, n_alt = -1
	   Creating copy r313<-r333@100
   Insn 224: point = 65, n_alt = -2
   Insn 409: point = 67, n_alt = -2
   Insn 223: point = 68, n_alt = -1
   Insn 221: point = 68, n_alt = -2
   Insn 219: point = 68, n_alt = -1
   Insn 383: point = 68, n_alt = 6
   Insn 215: point = 68, n_alt = -1
   Insn 214: point = 68, n_alt = -2
  BB 10
   Insn 209: point = 69, n_alt = 0
   Insn 408: point = 70, n_alt = -2
   Insn 206: point = 71, n_alt = -1
   Insn 205: point = 71, n_alt = -2
   Insn 204: point = 71, n_alt = -2
   Insn 407: point = 72, n_alt = -2
   Insn 202: point = 73, n_alt = -1
   Insn 201: point = 73, n_alt = 5
   Insn 480: point = 74, n_alt = -1
	   Creating copy r312->r333@200
   Insn 457: point = 75, n_alt = 5
  BB 9
   Insn 456: point = 77, n_alt = 7
   Insn 377: point = 79, n_alt = 0
   Insn 455: point = 80, n_alt = 5
   Insn 376: point = 82, n_alt = 0
   Insn 406: point = 83, n_alt = -2
   Insn 187: point = 84, n_alt = -1
   Insn 186: point = 84, n_alt = -2
   Insn 185: point = 85, n_alt = -2
   Insn 405: point = 86, n_alt = -2
   Insn 183: point = 87, n_alt = -1
   Insn 182: point = 87, n_alt = 5
   Insn 479: point = 88, n_alt = -1
	   Creating copy r310<-r332@100
   Insn 180: point = 90, n_alt = -2
   Insn 404: point = 92, n_alt = -2
   Insn 179: point = 93, n_alt = -1
   Insn 177: point = 93, n_alt = -2
   Insn 175: point = 93, n_alt = -1
   Insn 384: point = 93, n_alt = 6
   Insn 171: point = 93, n_alt = -1
   Insn 170: point = 93, n_alt = -2
  BB 8
   Insn 165: point = 94, n_alt = 0
   Insn 403: point = 95, n_alt = -2
   Insn 162: point = 96, n_alt = -1
   Insn 161: point = 96, n_alt = -2
   Insn 160: point = 96, n_alt = -2
   Insn 402: point = 97, n_alt = -2
   Insn 158: point = 98, n_alt = -1
   Insn 157: point = 98, n_alt = 5
   Insn 478: point = 99, n_alt = -1
	   Creating copy r309->r332@200
   Insn 453: point = 100, n_alt = 5
  BB 6
   Insn 420: point = 102, n_alt = -1
   Insn 449: point = 102, n_alt = 7
   Insn 423: point = 104, n_alt = 1
   Insn 450: point = 106, n_alt = 5
	   Creating copy r306<-r329@100
   Insn 447: point = 108, n_alt = 7
	   Creating copy r304->r329@100
   Insn 448: point = 110, n_alt = -2
	   Creating copy r303->r304@100
   Insn 422: point = 112, n_alt = 0
   Insn 401: point = 114, n_alt = -2
   Insn 141: point = 115, n_alt = -1
   Insn 140: point = 115, n_alt = -2
   Insn 139: point = 116, n_alt = -2
   Insn 400: point = 117, n_alt = -2
   Insn 136: point = 118, n_alt = -1
   Insn 135: point = 118, n_alt = 5
   Insn 476: point = 119, n_alt = -1
	   Creating copy r302<-r330@100
   Insn 133: point = 121, n_alt = -2
   Insn 399: point = 123, n_alt = -2
   Insn 132: point = 124, n_alt = -1
   Insn 130: point = 124, n_alt = -2
   Insn 128: point = 124, n_alt = -1
   Insn 385: point = 124, n_alt = 6
	Hard reg 2 is preferable by r331 with profit 100
   Insn 124: point = 125, n_alt = -1
   Insn 123: point = 125, n_alt = -2
  BB 7
   Insn 451: point = 126, n_alt = 7
   Insn 452: point = 128, n_alt = -2
	   Creating copy r307->r308@100
   Insn 3: point = 130, n_alt = 1
  BB 5
   Insn 118: point = 132, n_alt = 0
   Insn 398: point = 133, n_alt = -2
   Insn 115: point = 134, n_alt = -1
   Insn 114: point = 134, n_alt = -2
   Insn 113: point = 134, n_alt = -2
   Insn 397: point = 135, n_alt = -2
   Insn 111: point = 136, n_alt = -1
   Insn 110: point = 136, n_alt = 5
   Insn 475: point = 137, n_alt = -1
	   Creating copy r301->r330@200
   Insn 445: point = 138, n_alt = 5
   Insn 107: point = 139, n_alt = -2
   Insn 396: point = 141, n_alt = -2
   Insn 106: point = 142, n_alt = -1
   Insn 104: point = 142, n_alt = -2
   Insn 102: point = 142, n_alt = -1
   Insn 381: point = 142, n_alt = 6
   Insn 477: point = 142, n_alt = -1
   Insn 98: point = 143, n_alt = -1
   Insn 96: point = 143, n_alt = -2
   Insn 97: point = 145, n_alt = -2
   Insn 395: point = 146, n_alt = -2
   Insn 95: point = 147, n_alt = -1
   Insn 94: point = 147, n_alt = 5
   Insn 444: point = 148, n_alt = 5
  BB 4
   Insn 87: point = 150, n_alt = 0
   Insn 85: point = 151, n_alt = 1
   Insn 83: point = 153, n_alt = 0
   Insn 443: point = 155, n_alt = 5
   Insn 82: point = 156, n_alt = 0
   Insn 81: point = 158, n_alt = 1
   Insn 76: point = 159, n_alt = 4
   Insn 75: point = 160, n_alt = 0
   Insn 73: point = 162, n_alt = 1
   Insn 72: point = 163, n_alt = 1
   Insn 71: point = 165, n_alt = 1
   Insn 69: point = 166, n_alt = 0
   Insn 442: point = 168, n_alt = 5
   Insn 67: point = 169, n_alt = -2
   Insn 394: point = 171, n_alt = -2
   Insn 66: point = 172, n_alt = -1
   Insn 63: point = 172, n_alt = 4
   Insn 62: point = 174, n_alt = 0
   Insn 61: point = 176, n_alt = 1
   Insn 59: point = 178, n_alt = 1
   Insn 56: point = 179, n_alt = 1
   Insn 55: point = 181, n_alt = 1
   Insn 53: point = 182, n_alt = 1
   Insn 52: point = 184, n_alt = 0
   Insn 441: point = 186, n_alt = 5
   Insn 50: point = 187, n_alt = -2
   Insn 393: point = 189, n_alt = -2
   Insn 49: point = 190, n_alt = -1
  BB 3
   Insn 428: point = 191, n_alt = 7
   Insn 31: point = 193, n_alt = 7
   Insn 440: point = 194, n_alt = 5
	   Creating copy r296<-r323@81
   Insn 30: point = 196, n_alt = 1
   Insn 41: point = 197, n_alt = 8
   Insn 439: point = 198, n_alt = 5
	   Creating copy r295<-r323@81
   Insn 468: point = 199, n_alt = -1
	   Creating copy r323<-r324@81
   Insn 37: point = 201, n_alt = 7
   Insn 438: point = 202, n_alt = 5
	   Creating copy r294<-r324@81
   Insn 469: point = 203, n_alt = -1
	   Creating copy r324<-r325@81
   Insn 34: point = 205, n_alt = 7
   Insn 437: point = 206, n_alt = 5
	   Creating copy r293<-r325@81
   Insn 470: point = 207, n_alt = -1
	   Creating copy r325<-r326@81
   Insn 28: point = 209, n_alt = 7
   Insn 436: point = 210, n_alt = 5
	   Creating copy r292<-r326@81
   Insn 471: point = 211, n_alt = -1
	   Creating copy r326<-r327@81
   Insn 27: point = 213, n_alt = 1
   Insn 25: point = 214, n_alt = 6
   Insn 435: point = 215, n_alt = 5
	   Creating copy r291<-r327@81
   Insn 472: point = 216, n_alt = -1
	   Creating copy r327<-r328@81
   Insn 23: point = 218, n_alt = 1
   Insn 21: point = 219, n_alt = 7
   Insn 434: point = 220, n_alt = 5
	   Creating copy r290<-r328@81
   Insn 473: point = 221, n_alt = -1
   Insn 20: point = 222, n_alt = 1
  BB 2
   Insn 427: point = 224, n_alt = 8
   Insn 100: point = 226, n_alt = 6
   Insn 363: point = 227, n_alt = 6
  r125 is added to live at bb2 start
  r174 is added to live at bb2 start
  r186 is added to live at bb2 start
  r250 is added to live at bb2 start
  r251 is added to live at bb2 start
  r252 is added to live at bb2 start
  r253 is added to live at bb2 start
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 25 count 22 (  1.3)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      126  255  282
    liveout: 2:

        7   13  102  103  255  282

BB 3:
    gen: 3:

      255  282
    killed: 3:

      163  164  166  167  283  290  291  292  293  294  295
      296  323  324  325  326  327  328
    livein: 3:

      255  282
    liveout: 3:

        7   13  102  103  282  283

BB 4:
    killed: 4:

      100  113  115  127  172  173  175  177  180  182  183
      184  185  188  190  191  193  194  195  197  256  257
      284  288  289  297  298  299
    livein: 4:

      282  283
    liveout: 4:

        7   13  102  103  127  282  283  284

BB 5:
    gen: 5:

      127  283
    killed: 5:

      100  258  259  260  261  285  286  300  301  330  331
    livein: 5:

      127  282  283  284
    liveout: 5:

        7   13  102  103  282  283  284  285  286  330  331

BB 6:
    gen: 6:

      284  285  330  331
    killed: 6:

      141  207  262  263  264  302  303  304  305  306  329
    livein: 6:

      282  283  284  285  286  330  331
    liveout: 6:

        7   13  102  103  141  282  283  284  285  286

BB 7:
    killed: 7:

      141  307  308
    livein: 7:

      282  283  284  285  286
    liveout: 7:

        7   13  102  103  141  282  283  284  285  286

BB 8:
    gen: 8:

      286
    killed: 8:

      100  265  266  309  332
    livein: 8:

      141  282  283  284  285  286
    liveout: 8:

        7   13  102  103  141  282  283  284  285  286  332

BB 9:
    gen: 9:

      141  283  284  285  332
    killed: 9:

      100  141  217  267  268  269  310  311
    livein: 9:

      141  282  283  284  285  286  332
    liveout: 9:

        7   13  102  103  141  282  283  284  285  286

BB 10:
    gen: 10:

      286
    killed: 10:

      100  270  271  312  333
    livein: 10:

      141  282  283  284  285  286
    liveout: 10:

        7   13  102  103  141  282  283  284  285  286  333

BB 11:
    gen: 11:

      283  284  285  333
    killed: 11:

      100  226  272  273  274  313
    livein: 11:

      141  282  283  284  285  286  333
    liveout: 11:

        7   13  102  103  141  282  283  284  285  286

BB 12:
    gen: 12:

      286
    killed: 12:

      100  275  276  314
    livein: 12:

      141  282  283  284  285  286
    liveout: 12:

        7   13  102  103  141  282  283  284  285  286

BB 13:
    gen: 13:

      283  284  285
    killed: 13:

      100  238  242  277  278  279
    livein: 13:

      141  282  283  284  285  286
    liveout: 13:

        7   13  102  103  141  282  283  284  285  286

BB 14:
    gen: 14:

      141
    killed: 14:

      100  315
    livein: 14:

      141  282  283  284  285  286
    liveout: 14:

        7   13  102  103  282  283  284  285  286

BB 15:
    gen: 15:

      282  283  284  285  286
    killed: 15:

      100  128  132  133  255  280  281  282  316  317  318
      319  320  321  322  334  335  336
    livein: 15:

      282  283  284  285  286
    liveout: 15:

        7   13  102  103  255  282

BB 16:
    liveout: 16:

        7   13  102  103
 r113: [175..187]
 r115: [161..169]
 r125: [0..228]
 r126: [225..227]
 r127: [145..172]
 r128: [19..32]
 r132: [18..30]
 r133: [25..28]
 r141: [126..126] [81..102] [37..77]
 r163: [219..222]
 r164: [214..218]
 r166: [197..213]
 r167: [193..196]
 r172: [177..179]
 r173: [183..184]
 r174: [0..228]
 r175: [180..182]
 r177: [180..181]
 r180: [177..178]
 r182: [175..176]
 r183: [173..174]
 r184: [161..163]
 r185: [164..166]
 r186: [0..228]
 r188: [164..165]
 r190: [161..162]
 r191: [157..160]
 r193: [154..156]
 r194: [157..158]
 r195: [152..153]
 r197: [150..151]
 r207: [115..121]
 r217: [84..90]
 r226: [59..65]
 r238: [41..46]
 r242: [44..45]
 r250: [0..228]
 r251: [0..228]
 r252: [0..228]
 r253: [0..228]
 r255: [192..226] [0..26]
 r256: [188..189]
 r257: [170..171]
 r258: [144..146]
 r259: [140..141]
 r260: [134..135]
 r261: [132..133]
 r262: [122..123]
 r263: [116..117]
 r264: [113..114]
 r265: [96..97]
 r266: [94..95]
 r267: [91..92]
 r268: [85..86]
 r269: [82..83]
 r270: [71..72]
 r271: [69..70]
 r272: [66..67]
 r273: [60..61]
 r274: [57..58]
 r275: [52..53]
 r276: [50..51]
 r277: [47..48]
 r278: [42..43]
 r279: [39..40]
 r280: [20..24]
 r281: [13..17]
 r282: [23..224] [0..4]
 r283: [27..191]
 r284: [33..159]
 r285: [31..143]
 r286: [29..139]
 r288: [184..184]
 r289: [166..166]
 r290: [219..220]
 r291: [214..215]
 r292: [209..210]
 r293: [205..206]
 r294: [201..202]
 r295: [197..198]
 r296: [193..194]
 r297: [185..186]
 r298: [167..168]
 r299: [154..155]
 r300: [147..148]
 r301: [136..138]
 r302: [118..119]
 r303: [111..112]
 r304: [109..110]
 r305: [103..104]
 r306: [105..106]
 r307: [129..130]
 r308: [127..128]
 r309: [98..100]
 r310: [87..88]
 r311: [78..80]
 r312: [73..75]
 r313: [62..63]
 r314: [54..55]
 r315: [35..36]
 r316: [20..21]
 r317: [13..14]
 r318: [8..9]
 r319: [10..11]
 r320: [6..7]
 r321: [0..3]
 r322: [0..1]
 r323: [195..199]
 r324: [200..203]
 r325: [204..207]
 r326: [208..211]
 r327: [212..216]
 r328: [217..221]
 r329: [107..108]
 r330: [132..137] [120..125]
 r331: [132..142] [124..125]
 r332: [89..99]
 r333: [64..74]
 r334: [2..5]
 r335: [12..15]
 r336: [16..22]
Compressing live ranges: from 229 to 168 - 73%
Ranges after the compression:
 r113: [134..143]
 r115: [123..129]
 r125: [0..167]
 r126: [166..167]
 r127: [111..131]
 r128: [14..25]
 r132: [14..23]
 r133: [18..21]
 r141: [98..98] [60..75] [28..57]
 r163: [164..165]
 r164: [160..163]
 r166: [150..159]
 r167: [146..149]
 r172: [136..137]
 r173: [140..141]
 r174: [0..167]
 r175: [138..139]
 r177: [138..139]
 r180: [136..137]
 r182: [134..135]
 r183: [132..133]
 r184: [123..124]
 r185: [125..127]
 r186: [0..167]
 r188: [125..126]
 r190: [123..124]
 r191: [121..122]
 r193: [119..120]
 r194: [121..122]
 r195: [117..118]
 r197: [115..116]
 r207: [88..93]
 r217: [62..67]
 r226: [44..49]
 r238: [30..33]
 r242: [32..33]
 r250: [0..167]
 r251: [0..167]
 r252: [0..167]
 r253: [0..167]
 r255: [146..167] [0..19]
 r256: [144..145]
 r257: [130..131]
 r258: [111..112]
 r259: [109..110]
 r260: [105..106]
 r261: [103..104]
 r262: [94..95]
 r263: [88..89]
 r264: [86..87]
 r265: [72..73]
 r266: [70..71]
 r267: [68..69]
 r268: [62..63]
 r269: [60..61]
 r270: [54..55]
 r271: [52..53]
 r272: [50..51]
 r273: [44..45]
 r274: [42..43]
 r275: [38..39]
 r276: [36..37]
 r277: [34..35]
 r278: [30..31]
 r279: [28..29]
 r280: [14..17]
 r281: [10..13]
 r282: [16..165] [0..3]
 r283: [20..145]
 r284: [26..122]
 r285: [24..110]
 r286: [22..108]
 r288: [141..141]
 r289: [127..127]
 r290: [164..165]
 r291: [160..161]
 r292: [156..157]
 r293: [154..155]
 r294: [152..153]
 r295: [150..151]
 r296: [146..147]
 r297: [142..143]
 r298: [128..129]
 r299: [119..120]
 r300: [113..114]
 r301: [107..108]
 r302: [90..91]
 r303: [84..85]
 r304: [82..83]
 r305: [76..77]
 r306: [78..79]
 r307: [101..102]
 r308: [99..100]
 r309: [74..75]
 r310: [64..65]
 r311: [58..59]
 r312: [56..57]
 r313: [46..47]
 r314: [40..41]
 r315: [26..27]
 r316: [14..15]
 r317: [10..11]
 r318: [6..7]
 r319: [8..9]
 r320: [4..5]
 r321: [0..3]
 r322: [0..1]
 r323: [148..151]
 r324: [152..153]
 r325: [154..155]
 r326: [156..157]
 r327: [158..161]
 r328: [162..165]
 r329: [80..81]
 r330: [103..108] [92..97]
 r331: [103..110] [96..97]
 r332: [66..75]
 r333: [48..57]
 r334: [2..3]
 r335: [10..11]
 r336: [12..15]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 16
  BB 15
   Insn 319: point = 0, n_alt = -1
   Insn 318: point = 0, n_alt = 1
   Insn 467: point = 1, n_alt = 5
	   Creating copy r322<-r334@81
   Insn 466: point = 3, n_alt = 5
   Insn 482: point = 4, n_alt = -1
   Insn 463: point = 5, n_alt = 7
	   Creating copy r320->r334@81
   Insn 465: point = 7, n_alt = -2
	   Creating copy r318->r320@81
   Insn 316: point = 9, n_alt = 4
   Insn 464: point = 11, n_alt = 5
	   Creating copy r319<-r335@81
   Insn 312: point = 13, n_alt = 6
   Insn 462: point = 14, n_alt = 5
	   Creating copy r317<-r335@81
   Insn 483: point = 15, n_alt = -1
	   Creating copy r335<-r336@81
   Insn 418: point = 17, n_alt = -2
   Insn 310: point = 18, n_alt = -1
   Insn 307: point = 18, n_alt = -1
   Insn 305: point = 18, n_alt = -2
   Insn 303: point = 19, n_alt = -1
   Insn 386: point = 19, n_alt = -2
   Insn 299: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -2
   Insn 296: point = 20, n_alt = 6
   Insn 461: point = 21, n_alt = 5
	   Creating copy r316<-r336@81
   Insn 484: point = 22, n_alt = -1
   Insn 417: point = 24, n_alt = -2
   Insn 294: point = 25, n_alt = -1
   Insn 293: point = 25, n_alt = -2
   Insn 432: point = 26, n_alt = 6
   Insn 431: point = 28, n_alt = -2
   Insn 430: point = 30, n_alt = -2
   Insn 429: point = 32, n_alt = -2
  BB 14
   Insn 290: point = 35, n_alt = -1
   Insn 289: point = 35, n_alt = 0
   Insn 460: point = 36, n_alt = 5
  BB 13
   Insn 283: point = 39, n_alt = 0
   Insn 416: point = 40, n_alt = -2
   Insn 280: point = 41, n_alt = -1
   Insn 279: point = 41, n_alt = -2
   Insn 278: point = 42, n_alt = -2
   Insn 415: point = 43, n_alt = -2
   Insn 276: point = 44, n_alt = -1
   Insn 275: point = 44, n_alt = 5
   Insn 274: point = 45, n_alt = 5
   Insn 270: point = 46, n_alt = -2
   Insn 414: point = 48, n_alt = -2
   Insn 269: point = 49, n_alt = -1
   Insn 267: point = 49, n_alt = -2
   Insn 265: point = 49, n_alt = -1
   Insn 382: point = 49, n_alt = 6
   Insn 261: point = 49, n_alt = -1
   Insn 260: point = 49, n_alt = -2
  BB 12
   Insn 255: point = 50, n_alt = 0
   Insn 413: point = 51, n_alt = -2
   Insn 252: point = 52, n_alt = -1
   Insn 251: point = 52, n_alt = -2
   Insn 250: point = 52, n_alt = -2
   Insn 412: point = 53, n_alt = -2
   Insn 248: point = 54, n_alt = -1
   Insn 247: point = 54, n_alt = 5
   Insn 459: point = 55, n_alt = 5
  BB 11
   Insn 234: point = 57, n_alt = 0
   Insn 411: point = 58, n_alt = -2
   Insn 231: point = 59, n_alt = -1
   Insn 230: point = 59, n_alt = -2
   Insn 229: point = 60, n_alt = -2
   Insn 410: point = 61, n_alt = -2
   Insn 227: point = 62, n_alt = -1
   Insn 226: point = 62, n_alt = 5
   Insn 481: point = 63, n_alt = -1
	   Creating copy r313<-r333@100
   Insn 224: point = 65, n_alt = -2
   Insn 409: point = 67, n_alt = -2
   Insn 223: point = 68, n_alt = -1
   Insn 221: point = 68, n_alt = -2
   Insn 219: point = 68, n_alt = -1
   Insn 383: point = 68, n_alt = 6
   Insn 215: point = 68, n_alt = -1
   Insn 214: point = 68, n_alt = -2
  BB 10
   Insn 209: point = 69, n_alt = 0
   Insn 408: point = 70, n_alt = -2
   Insn 206: point = 71, n_alt = -1
   Insn 205: point = 71, n_alt = -2
   Insn 204: point = 71, n_alt = -2
   Insn 407: point = 72, n_alt = -2
   Insn 202: point = 73, n_alt = -1
   Insn 201: point = 73, n_alt = 5
   Insn 480: point = 74, n_alt = -1
	   Creating copy r312->r333@200
   Insn 457: point = 75, n_alt = 5
  BB 9
   Insn 456: point = 77, n_alt = 7
   Insn 377: point = 79, n_alt = 0
   Insn 455: point = 80, n_alt = 5
   Insn 376: point = 82, n_alt = 0
   Insn 406: point = 83, n_alt = -2
   Insn 187: point = 84, n_alt = -1
   Insn 186: point = 84, n_alt = -2
   Insn 185: point = 85, n_alt = -2
   Insn 405: point = 86, n_alt = -2
   Insn 183: point = 87, n_alt = -1
   Insn 182: point = 87, n_alt = 5
   Insn 479: point = 88, n_alt = -1
	   Creating copy r310<-r332@100
   Insn 180: point = 90, n_alt = -2
   Insn 404: point = 92, n_alt = -2
   Insn 179: point = 93, n_alt = -1
   Insn 177: point = 93, n_alt = -2
   Insn 175: point = 93, n_alt = -1
   Insn 384: point = 93, n_alt = 6
   Insn 171: point = 93, n_alt = -1
   Insn 170: point = 93, n_alt = -2
  BB 8
   Insn 165: point = 94, n_alt = 0
   Insn 403: point = 95, n_alt = -2
   Insn 162: point = 96, n_alt = -1
   Insn 161: point = 96, n_alt = -2
   Insn 160: point = 96, n_alt = -2
   Insn 402: point = 97, n_alt = -2
   Insn 158: point = 98, n_alt = -1
   Insn 157: point = 98, n_alt = 5
   Insn 478: point = 99, n_alt = -1
	   Creating copy r309->r332@200
   Insn 453: point = 100, n_alt = 5
  BB 6
   Insn 420: point = 102, n_alt = -1
   Insn 449: point = 102, n_alt = 7
   Insn 423: point = 104, n_alt = 1
   Insn 450: point = 106, n_alt = 5
	   Creating copy r306<-r329@100
   Insn 447: point = 108, n_alt = 7
	   Creating copy r304->r329@100
   Insn 448: point = 110, n_alt = -2
	   Creating copy r303->r304@100
   Insn 422: point = 112, n_alt = 0
   Insn 401: point = 114, n_alt = -2
   Insn 141: point = 115, n_alt = -1
   Insn 140: point = 115, n_alt = -2
   Insn 139: point = 116, n_alt = -2
   Insn 400: point = 117, n_alt = -2
   Insn 136: point = 118, n_alt = -1
   Insn 135: point = 118, n_alt = 5
   Insn 476: point = 119, n_alt = -1
	   Creating copy r302<-r330@100
   Insn 133: point = 121, n_alt = -2
   Insn 399: point = 123, n_alt = -2
   Insn 132: point = 124, n_alt = -1
   Insn 130: point = 124, n_alt = -2
   Insn 128: point = 124, n_alt = -1
   Insn 385: point = 124, n_alt = 6
	Hard reg 2 is preferable by r331 with profit 100
   Insn 124: point = 125, n_alt = -1
   Insn 123: point = 125, n_alt = -2
  BB 7
   Insn 451: point = 126, n_alt = 7
   Insn 452: point = 128, n_alt = -2
	   Creating copy r307->r308@100
   Insn 3: point = 130, n_alt = 1
  BB 5
   Insn 118: point = 132, n_alt = 0
   Insn 398: point = 133, n_alt = -2
   Insn 115: point = 134, n_alt = -1
   Insn 114: point = 134, n_alt = -2
   Insn 113: point = 134, n_alt = -2
   Insn 397: point = 135, n_alt = -2
   Insn 111: point = 136, n_alt = -1
   Insn 110: point = 136, n_alt = 5
   Insn 475: point = 137, n_alt = -1
	   Creating copy r301->r330@200
   Insn 445: point = 138, n_alt = 5
   Insn 107: point = 139, n_alt = -2
   Insn 396: point = 141, n_alt = -2
   Insn 106: point = 142, n_alt = -1
   Insn 104: point = 142, n_alt = -2
   Insn 102: point = 142, n_alt = -1
   Insn 381: point = 142, n_alt = 6
   Insn 477: point = 142, n_alt = -1
   Insn 98: point = 143, n_alt = -1
   Insn 96: point = 143, n_alt = -2
   Insn 97: point = 145, n_alt = -2
   Insn 395: point = 146, n_alt = -2
   Insn 95: point = 147, n_alt = -1
   Insn 94: point = 147, n_alt = 5
   Insn 444: point = 148, n_alt = 5
  BB 4
   Insn 87: point = 150, n_alt = 0
   Insn 85: point = 151, n_alt = 1
   Insn 83: point = 153, n_alt = 0
   Insn 443: point = 155, n_alt = 5
   Insn 82: point = 156, n_alt = 0
   Insn 81: point = 158, n_alt = 1
   Insn 76: point = 159, n_alt = 4
   Insn 75: point = 160, n_alt = 0
   Insn 73: point = 162, n_alt = 1
   Insn 72: point = 163, n_alt = 1
   Insn 71: point = 165, n_alt = 1
   Insn 69: point = 166, n_alt = 0
   Insn 442: point = 168, n_alt = 5
   Insn 67: point = 169, n_alt = -2
   Insn 394: point = 171, n_alt = -2
   Insn 66: point = 172, n_alt = -1
   Insn 63: point = 172, n_alt = 4
   Insn 62: point = 174, n_alt = 0
   Insn 61: point = 176, n_alt = 1
   Insn 59: point = 178, n_alt = 1
   Insn 56: point = 179, n_alt = 1
   Insn 55: point = 181, n_alt = 1
   Insn 53: point = 182, n_alt = 1
   Insn 52: point = 184, n_alt = 0
   Insn 441: point = 186, n_alt = 5
   Insn 50: point = 187, n_alt = -2
   Insn 393: point = 189, n_alt = -2
   Insn 49: point = 190, n_alt = -1
  BB 3
   Insn 428: point = 191, n_alt = 7
   Insn 31: point = 193, n_alt = 7
   Insn 440: point = 194, n_alt = 5
	   Creating copy r296<-r323@81
   Insn 30: point = 196, n_alt = 1
   Insn 41: point = 197, n_alt = 8
   Insn 439: point = 198, n_alt = 5
	   Creating copy r295<-r323@81
   Insn 468: point = 199, n_alt = -1
	   Creating copy r323<-r324@81
   Insn 37: point = 201, n_alt = 7
   Insn 438: point = 202, n_alt = 5
	   Creating copy r294<-r324@81
   Insn 469: point = 203, n_alt = -1
	   Creating copy r324<-r325@81
   Insn 34: point = 205, n_alt = 7
   Insn 437: point = 206, n_alt = 5
	   Creating copy r293<-r325@81
   Insn 470: point = 207, n_alt = -1
	   Creating copy r325<-r326@81
   Insn 28: point = 209, n_alt = 7
   Insn 436: point = 210, n_alt = 5
	   Creating copy r292<-r326@81
   Insn 471: point = 211, n_alt = -1
	   Creating copy r326<-r327@81
   Insn 27: point = 213, n_alt = 1
   Insn 25: point = 214, n_alt = 6
   Insn 435: point = 215, n_alt = 5
	   Creating copy r291<-r327@81
   Insn 472: point = 216, n_alt = -1
	   Creating copy r327<-r328@81
   Insn 23: point = 218, n_alt = 1
   Insn 21: point = 219, n_alt = 7
   Insn 434: point = 220, n_alt = 5
	   Creating copy r290<-r328@81
   Insn 473: point = 221, n_alt = -1
   Insn 20: point = 222, n_alt = 1
  BB 2
   Insn 427: point = 224, n_alt = 8
   Insn 100: point = 226, n_alt = 6
   Insn 363: point = 227, n_alt = 6
 r113: [175..187]
 r115: [161..169]
 r126: [225..227]
 r127: [145..172]
 r128: [19..32]
 r132: [18..30]
 r133: [25..28]
 r141: [126..126] [81..102] [37..77]
 r163: [219..222]
 r164: [214..218]
 r166: [197..213]
 r167: [193..196]
 r172: [177..179]
 r173: [183..184]
 r175: [180..182]
 r177: [180..181]
 r180: [177..178]
 r182: [175..176]
 r183: [173..174]
 r184: [161..163]
 r185: [164..166]
 r188: [164..165]
 r190: [161..162]
 r191: [157..160]
 r193: [154..156]
 r194: [157..158]
 r195: [152..153]
 r197: [150..151]
 r207: [115..121]
 r217: [84..90]
 r226: [59..65]
 r238: [41..46]
 r242: [44..45]
 r255: [192..226] [0..26]
 r256: [188..189]
 r257: [170..171]
 r258: [144..146]
 r259: [140..141]
 r260: [134..135]
 r261: [132..133]
 r262: [122..123]
 r263: [116..117]
 r264: [113..114]
 r265: [96..97]
 r266: [94..95]
 r267: [91..92]
 r268: [85..86]
 r269: [82..83]
 r270: [71..72]
 r271: [69..70]
 r272: [66..67]
 r273: [60..61]
 r274: [57..58]
 r275: [52..53]
 r276: [50..51]
 r277: [47..48]
 r278: [42..43]
 r279: [39..40]
 r280: [20..24]
 r281: [13..17]
 r282: [23..224] [0..4]
 r283: [27..191]
 r284: [33..159]
 r285: [31..143]
 r286: [29..139]
 r288: [184..184]
 r289: [166..166]
 r290: [219..220]
 r291: [214..215]
 r292: [209..210]
 r293: [205..206]
 r294: [201..202]
 r295: [197..198]
 r296: [193..194]
 r297: [185..186]
 r298: [167..168]
 r299: [154..155]
 r300: [147..148]
 r301: [136..138]
 r302: [118..119]
 r303: [111..112]
 r304: [109..110]
 r305: [103..104]
 r306: [105..106]
 r307: [129..130]
 r308: [127..128]
 r309: [98..100]
 r310: [87..88]
 r311: [78..80]
 r312: [73..75]
 r313: [62..63]
 r314: [54..55]
 r315: [35..36]
 r316: [20..21]
 r317: [13..14]
 r318: [8..9]
 r319: [10..11]
 r320: [6..7]
 r321: [0..3]
 r322: [0..1]
 r323: [195..199]
 r324: [200..203]
 r325: [204..207]
 r326: [208..211]
 r327: [212..216]
 r328: [217..221]
 r329: [107..108]
 r330: [132..137] [120..125]
 r331: [132..142] [124..125]
 r332: [89..99]
 r333: [64..74]
 r334: [2..5]
 r335: [12..15]
 r336: [16..22]
Compressing live ranges: from 228 to 168 - 73%
Ranges after the compression:
 r113: [134..143]
 r115: [123..129]
 r126: [166..167]
 r127: [111..131]
 r128: [14..25]
 r132: [14..23]
 r133: [18..21]
 r141: [98..98] [60..75] [28..57]
 r163: [164..165]
 r164: [160..163]
 r166: [150..159]
 r167: [146..149]
 r172: [136..137]
 r173: [140..141]
 r175: [138..139]
 r177: [138..139]
 r180: [136..137]
 r182: [134..135]
 r183: [132..133]
 r184: [123..124]
 r185: [125..127]
 r188: [125..126]
 r190: [123..124]
 r191: [121..122]
 r193: [119..120]
 r194: [121..122]
 r195: [117..118]
 r197: [115..116]
 r207: [88..93]
 r217: [62..67]
 r226: [44..49]
 r238: [30..33]
 r242: [32..33]
 r255: [146..167] [0..19]
 r256: [144..145]
 r257: [130..131]
 r258: [111..112]
 r259: [109..110]
 r260: [105..106]
 r261: [103..104]
 r262: [94..95]
 r263: [88..89]
 r264: [86..87]
 r265: [72..73]
 r266: [70..71]
 r267: [68..69]
 r268: [62..63]
 r269: [60..61]
 r270: [54..55]
 r271: [52..53]
 r272: [50..51]
 r273: [44..45]
 r274: [42..43]
 r275: [38..39]
 r276: [36..37]
 r277: [34..35]
 r278: [30..31]
 r279: [28..29]
 r280: [14..17]
 r281: [10..13]
 r282: [16..165] [0..3]
 r283: [20..145]
 r284: [26..122]
 r285: [24..110]
 r286: [22..108]
 r288: [141..141]
 r289: [127..127]
 r290: [164..165]
 r291: [160..161]
 r292: [156..157]
 r293: [154..155]
 r294: [152..153]
 r295: [150..151]
 r296: [146..147]
 r297: [142..143]
 r298: [128..129]
 r299: [119..120]
 r300: [113..114]
 r301: [107..108]
 r302: [90..91]
 r303: [84..85]
 r304: [82..83]
 r305: [76..77]
 r306: [78..79]
 r307: [101..102]
 r308: [99..100]
 r309: [74..75]
 r310: [64..65]
 r311: [58..59]
 r312: [56..57]
 r313: [46..47]
 r314: [40..41]
 r315: [26..27]
 r316: [14..15]
 r317: [10..11]
 r318: [6..7]
 r319: [8..9]
 r320: [4..5]
 r321: [0..3]
 r322: [0..1]
 r323: [148..151]
 r324: [152..153]
 r325: [154..155]
 r326: [156..157]
 r327: [158..161]
 r328: [162..165]
 r329: [80..81]
 r330: [103..108] [92..97]
 r331: [103..110] [96..97]
 r332: [66..75]
 r333: [48..57]
 r334: [2..3]
 r335: [10..11]
 r336: [12..15]

********** Assignment #1: **********

	 Assigning to 297 (cl=LO_REGS, orig=297, freq=1480, tfirst=297, tfreq=1480)...
	   Assign 3 to reload r297 (freq=1480)
	 Assigning to 298 (cl=LO_REGS, orig=298, freq=1480, tfirst=298, tfreq=1480)...
	   Assign 3 to reload r298 (freq=1480)
	 Assigning to 299 (cl=LO_REGS, orig=299, freq=1480, tfirst=299, tfreq=1480)...
	   Assign 3 to reload r299 (freq=1480)
	 Assigning to 323 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r323 (freq=243)
	Hard reg 2 is preferable by r324 with profit 81
	Hard reg 2 is preferable by r325 with profit 40
	Hard reg 2 is preferable by r326 with profit 20
	Hard reg 2 is preferable by r327 with profit 10
	Hard reg 2 is preferable by r328 with profit 5
	Hard reg 2 is preferable by r290 with profit 2
	Hard reg 2 is preferable by r291 with profit 5
	Hard reg 2 is preferable by r292 with profit 10
	Hard reg 2 is preferable by r293 with profit 20
	Hard reg 2 is preferable by r294 with profit 40
	Hard reg 2 is preferable by r295 with profit 81
	Hard reg 2 is preferable by r296 with profit 81
	 Assigning to 327 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r327 (freq=243)
	Hard reg 2 is preferable by r328 with profit 86
	Hard reg 2 is preferable by r290 with profit 42
	Hard reg 2 is preferable by r291 with profit 86
	Hard reg 2 is preferable by r326 with profit 101
	Hard reg 2 is preferable by r292 with profit 50
	Hard reg 2 is preferable by r325 with profit 80
	Hard reg 2 is preferable by r293 with profit 40
	Hard reg 2 is preferable by r324 with profit 101
	Hard reg 2 is preferable by r294 with profit 50
	 Assigning to 328 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r328 (freq=243)
	Hard reg 2 is preferable by r290 with profit 123
	 Assigning to 290 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r290 (freq=162)
	 Assigning to 291 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r291 (freq=162)
	 Assigning to 292 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r292 (freq=162)
	Hard reg 2 is preferable by r326 with profit 182
	Hard reg 2 is preferable by r325 with profit 120
	Hard reg 2 is preferable by r293 with profit 60
	Hard reg 2 is preferable by r324 with profit 121
	Hard reg 2 is preferable by r294 with profit 60
	 Assigning to 293 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r293 (freq=162)
	Hard reg 2 is preferable by r325 with profit 201
	Hard reg 2 is preferable by r326 with profit 222
	Hard reg 2 is preferable by r324 with profit 161
	Hard reg 2 is preferable by r294 with profit 80
	 Assigning to 294 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r294 (freq=162)
	Hard reg 2 is preferable by r324 with profit 242
	Hard reg 2 is preferable by r325 with profit 241
	Hard reg 2 is preferable by r326 with profit 242
	 Assigning to 295 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r295 (freq=162)
	 Assigning to 296 (cl=LO_REGS, orig=126, freq=162, tfirst=290, tfreq=648)...
	   Assign 2 to reload r296 (freq=162)
	 Assigning to 324 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r324 (freq=243)
	Hard reg 2 is preferable by r325 with profit 322
	Hard reg 2 is preferable by r326 with profit 282
	 Assigning to 325 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r325 (freq=243)
	Hard reg 2 is preferable by r326 with profit 363
	 Assigning to 326 (cl=LO_REGS, orig=126, freq=243, tfirst=290, tfreq=648)...
	   Assign 2 to inheritance r326 (freq=243)
	 Assigning to 330 (cl=LO_REGS, orig=301, freq=300, tfirst=301, tfreq=500)...
	 Assigning to 301 (cl=LO_REGS, orig=301, freq=600, tfirst=301, tfreq=500)...
	   Assign 3 to reload r301 (freq=600)
	Hard reg 3 is preferable by r330 with profit 200
	Hard reg 3 is preferable by r302 with profit 50
	 Assigning to 302 (cl=LO_REGS, orig=302, freq=200, tfirst=301, tfreq=500)...
	   Assign 3 to reload r302 (freq=200)
	Hard reg 3 is preferable by r330 with profit 300
	 Assigning to 332 (cl=LO_REGS, orig=309, freq=300, tfirst=309, tfreq=500)...
	 Assigning to 309 (cl=LO_REGS, orig=309, freq=600, tfirst=309, tfreq=500)...
	   Assign 3 to reload r309 (freq=600)
	Hard reg 3 is preferable by r332 with profit 200
	Hard reg 3 is preferable by r310 with profit 50
	 Assigning to 310 (cl=LO_REGS, orig=310, freq=200, tfirst=309, tfreq=500)...
	   Assign 3 to reload r310 (freq=200)
	Hard reg 3 is preferable by r332 with profit 300
	 Assigning to 333 (cl=LO_REGS, orig=312, freq=300, tfirst=312, tfreq=500)...
	 Assigning to 312 (cl=LO_REGS, orig=312, freq=600, tfirst=312, tfreq=500)...
	   Assign 3 to reload r312 (freq=600)
	Hard reg 3 is preferable by r333 with profit 200
	Hard reg 3 is preferable by r313 with profit 50
	 Assigning to 313 (cl=LO_REGS, orig=313, freq=200, tfirst=312, tfreq=500)...
	   Assign 3 to reload r313 (freq=200)
	Hard reg 3 is preferable by r333 with profit 300
	 Assigning to 300 (cl=LO_REGS, orig=300, freq=400, tfirst=300, tfreq=400)...
	   Assign 3 to reload r300 (freq=400)
	 Assigning to 336 (cl=LO_REGS, orig=126, freq=243, tfirst=316, tfreq=324)...
	   Assign 5 to inheritance r336 (freq=243)
	Hard reg 5 is preferable by r316 with profit 81
	Hard reg 5 is preferable by r335 with profit 81
	Hard reg 5 is preferable by r317 with profit 40
	Hard reg 5 is preferable by r319 with profit 40
	 Assigning to 316 (cl=LO_REGS, orig=126, freq=162, tfirst=316, tfreq=324)...
	   Assign 5 to reload r316 (freq=162)
	 Assigning to 317 (cl=LO_REGS, orig=126, freq=162, tfirst=316, tfreq=324)...
	   Assign 5 to reload r317 (freq=162)
	Hard reg 5 is preferable by r335 with profit 162
	Hard reg 5 is preferable by r319 with profit 80
	 Assigning to 319 (cl=LO_REGS, orig=126, freq=162, tfirst=316, tfreq=324)...
	   Assign 5 to reload r319 (freq=162)
	Hard reg 5 is preferable by r335 with profit 243
	 Assigning to 335 (cl=LO_REGS, orig=126, freq=243, tfirst=316, tfreq=324)...
	   Assign 5 to inheritance r335 (freq=243)
	 Assigning to 311 (cl=LO_REGS, orig=141, freq=300, tfirst=311, tfreq=300)...
	   Assign 3 to reload r311 (freq=300)
	 Assigning to 314 (cl=LO_REGS, orig=314, freq=300, tfirst=314, tfreq=300)...
	   Assign 3 to reload r314 (freq=300)
	 Assigning to 320 (cl=LO_REGS, orig=126, freq=162, tfirst=320, tfreq=243)...
	   Assign 3 to reload r320 (freq=162)
	Hard reg 3 is preferable by r318 with profit 81
	Hard reg 3 is preferable by r334 with profit 81
	Hard reg 3 is preferable by r322 with profit 40
	 Assigning to 322 (cl=LO_REGS, orig=126, freq=162, tfirst=320, tfreq=243)...
	   Assign 3 to reload r322 (freq=162)
	Hard reg 3 is preferable by r334 with profit 162
	 Assigning to 334 (cl=LO_REGS, orig=126, freq=243, tfirst=320, tfreq=243)...
	   Assign 3 to inheritance r334 (freq=243)
	 Assigning to 315 (cl=LO_REGS, orig=141, freq=224, tfirst=315, tfreq=224)...
	   Assign 3 to reload r315 (freq=224)
	 Assigning to 304 (cl=LO_REGS, orig=141, freq=200, tfirst=304, tfreq=200)...
	   Assign 3 to reload r304 (freq=200)
	Hard reg 3 is preferable by r303 with profit 100
	Hard reg 3 is preferable by r329 with profit 100
	Hard reg 3 is preferable by r306 with profit 50
	 Assigning to 306 (cl=LO_REGS, orig=141, freq=200, tfirst=304, tfreq=200)...
	   Assign 3 to reload r306 (freq=200)
	Hard reg 3 is preferable by r329 with profit 200
	 Assigning to 329 (cl=LO_REGS, orig=141, freq=200, tfirst=304, tfreq=200)...
	   Assign 3 to inheritance r329 (freq=200)
	 Assigning to 305 (cl=LO_REGS, orig=141, freq=200, tfirst=305, tfreq=200)...
	   Assign 3 to reload r305 (freq=200)
	 Assigning to 308 (cl=LO_REGS, orig=141, freq=200, tfirst=308, tfreq=200)...
	   Assign 3 to reload r308 (freq=200)
	Hard reg 3 is preferable by r307 with profit 100
	 Assigning to 321 (cl=LO_REGS, orig=321, freq=162, tfirst=321, tfreq=162)...
	   Assign 2 to reload r321 (freq=162)
	 Assigning to 288 (cl=GENERAL_REGS, orig=288, freq=740, tfirst=288, tfreq=740)...
	   Assign 3 to reload r288 (freq=740)
	 Assigning to 289 (cl=GENERAL_REGS, orig=289, freq=740, tfirst=289, tfreq=740)...
	   Assign 3 to reload r289 (freq=740)
	 Assigning to 303 (cl=GENERAL_REGS, orig=141, freq=200, tfirst=303, tfreq=200)...
	   Assign 3 to reload r303 (freq=200)
	 Assigning to 307 (cl=GENERAL_REGS, orig=141, freq=200, tfirst=307, tfreq=200)...
	   Assign 3 to reload r307 (freq=200)
	 Assigning to 318 (cl=GENERAL_REGS, orig=126, freq=162, tfirst=318, tfreq=162)...
	   Assign 3 to reload r318 (freq=162)
	 Assigning to 331 (cl=ALL_REGS, orig=255, freq=500, tfirst=331, tfreq=500)...
	   Assign 4 to inheritance r331 (freq=500)
  Reassigning non-reload pseudos
	   Assign 32 to r283 (freq=637)
	   Assign 8 to r141 (freq=512)

********** Undoing inheritance #1: **********

Inherit 11 out of 14 (78.57%)
	   Removing invariant inheritance:
  475: r330:SI=r301:SI

deleting insn with uid = 475.
  476: r302:SI=r330:SI
      REG_DEAD r330:SI
    Changing reload<-invariant inheritance after:
  485: r302:SI=`sp_original'

deleting insn with uid = 476.
	   Removing invariant inheritance:
  478: r332:SI=r309:SI

deleting insn with uid = 478.
  479: r310:SI=r332:SI
      REG_DEAD r332:SI
    Changing reload<-invariant inheritance after:
  486: r310:SI=`sp_original'

deleting insn with uid = 479.
	   Removing invariant inheritance:
  480: r333:SI=r312:SI

deleting insn with uid = 480.
  481: r313:SI=r333:SI
      REG_DEAD r333:SI
    Changing reload<-invariant inheritance after:
  487: r313:SI=`sp_original'

deleting insn with uid = 481.

********** Pseudo live ranges #3: **********

  BB 16
  BB 15
   Insn 319: point = 0, n_alt = -1
   Insn 318: point = 0, n_alt = 1
   Insn 467: point = 1, n_alt = -1
	   Creating copy r322<-r334@81
   Insn 466: point = 3, n_alt = 5
   Insn 482: point = 4, n_alt = -1
   Insn 463: point = 5, n_alt = -1
	   Creating copy r320->r334@81
   Insn 465: point = 7, n_alt = -2
	   Creating copy r318->r320@81
   Insn 316: point = 9, n_alt = 4
   Insn 464: point = 11, n_alt = -1
	   Creating copy r319<-r335@81
   Insn 312: point = 13, n_alt = 6
   Insn 462: point = 14, n_alt = -1
	   Creating copy r317<-r335@81
   Insn 483: point = 15, n_alt = -1
	   Creating copy r335<-r336@81
   Insn 418: point = 17, n_alt = -2
   Insn 310: point = 18, n_alt = -1
   Insn 307: point = 18, n_alt = -1
   Insn 305: point = 18, n_alt = -2
   Insn 303: point = 19, n_alt = -1
   Insn 386: point = 19, n_alt = -2
   Insn 299: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -2
   Insn 296: point = 20, n_alt = 6
   Insn 461: point = 21, n_alt = -1
	   Creating copy r316<-r336@81
   Insn 484: point = 22, n_alt = -1
   Insn 417: point = 24, n_alt = -2
   Insn 294: point = 25, n_alt = -1
   Insn 293: point = 25, n_alt = -2
   Insn 432: point = 26, n_alt = -1
   Insn 431: point = 28, n_alt = -2
   Insn 430: point = 30, n_alt = -2
   Insn 429: point = 32, n_alt = -2
  BB 14
   Insn 290: point = 35, n_alt = -1
   Insn 289: point = 35, n_alt = 0
   Insn 460: point = 36, n_alt = -1
	Hard reg 8 is preferable by r315 with profit 112
  BB 13
   Insn 283: point = 39, n_alt = 0
   Insn 416: point = 40, n_alt = -2
   Insn 280: point = 41, n_alt = -1
   Insn 279: point = 41, n_alt = -2
   Insn 278: point = 42, n_alt = -2
   Insn 415: point = 43, n_alt = -2
   Insn 276: point = 44, n_alt = -1
   Insn 275: point = 44, n_alt = 5
   Insn 274: point = 45, n_alt = 5
   Insn 270: point = 46, n_alt = -2
   Insn 414: point = 48, n_alt = -2
   Insn 269: point = 49, n_alt = -1
   Insn 267: point = 49, n_alt = -2
   Insn 265: point = 49, n_alt = -1
   Insn 382: point = 49, n_alt = -1
   Insn 261: point = 49, n_alt = -1
   Insn 260: point = 49, n_alt = -2
  BB 12
   Insn 255: point = 50, n_alt = 0
   Insn 413: point = 51, n_alt = -2
   Insn 252: point = 52, n_alt = -1
   Insn 251: point = 52, n_alt = -2
   Insn 250: point = 52, n_alt = -2
   Insn 412: point = 53, n_alt = -2
   Insn 248: point = 54, n_alt = -1
   Insn 247: point = 54, n_alt = 5
   Insn 459: point = 55, n_alt = 5
  BB 11
   Insn 234: point = 57, n_alt = 0
   Insn 411: point = 58, n_alt = -2
   Insn 231: point = 59, n_alt = -1
   Insn 230: point = 59, n_alt = -2
   Insn 229: point = 60, n_alt = -2
   Insn 410: point = 61, n_alt = -2
   Insn 227: point = 62, n_alt = -1
   Insn 226: point = 62, n_alt = 5
   Insn 487: point = 63, n_alt = -1
   Insn 224: point = 64, n_alt = -2
   Insn 409: point = 66, n_alt = -2
   Insn 223: point = 67, n_alt = -1
   Insn 221: point = 67, n_alt = -2
   Insn 219: point = 67, n_alt = -1
   Insn 383: point = 67, n_alt = -1
   Insn 215: point = 67, n_alt = -1
   Insn 214: point = 67, n_alt = -2
  BB 10
   Insn 209: point = 68, n_alt = 0
   Insn 408: point = 69, n_alt = -2
   Insn 206: point = 70, n_alt = -1
   Insn 205: point = 70, n_alt = -2
   Insn 204: point = 70, n_alt = -2
   Insn 407: point = 71, n_alt = -2
   Insn 202: point = 72, n_alt = -1
   Insn 201: point = 72, n_alt = 5
   Insn 457: point = 73, n_alt = 5
  BB 9
   Insn 456: point = 75, n_alt = -1
	Hard reg 8 is preferable by r311 with profit 100
   Insn 377: point = 77, n_alt = 0
   Insn 455: point = 78, n_alt = -1
	Hard reg 8 is preferable by r311 with profit 200
   Insn 376: point = 80, n_alt = 0
   Insn 406: point = 81, n_alt = -2
   Insn 187: point = 82, n_alt = -1
   Insn 186: point = 82, n_alt = -2
   Insn 185: point = 83, n_alt = -2
   Insn 405: point = 84, n_alt = -2
   Insn 183: point = 85, n_alt = -1
   Insn 182: point = 85, n_alt = 5
   Insn 486: point = 86, n_alt = -1
   Insn 180: point = 87, n_alt = -2
   Insn 404: point = 89, n_alt = -2
   Insn 179: point = 90, n_alt = -1
   Insn 177: point = 90, n_alt = -2
   Insn 175: point = 90, n_alt = -1
   Insn 384: point = 90, n_alt = -1
   Insn 171: point = 90, n_alt = -1
   Insn 170: point = 90, n_alt = -2
  BB 8
   Insn 165: point = 91, n_alt = 0
   Insn 403: point = 92, n_alt = -2
   Insn 162: point = 93, n_alt = -1
   Insn 161: point = 93, n_alt = -2
   Insn 160: point = 93, n_alt = -2
   Insn 402: point = 94, n_alt = -2
   Insn 158: point = 95, n_alt = -1
   Insn 157: point = 95, n_alt = 5
   Insn 453: point = 96, n_alt = 5
  BB 6
   Insn 420: point = 98, n_alt = -1
   Insn 449: point = 98, n_alt = -1
	Hard reg 8 is preferable by r305 with profit 100
   Insn 423: point = 100, n_alt = 1
   Insn 450: point = 102, n_alt = -1
	   Creating copy r306<-r329@100
   Insn 447: point = 104, n_alt = -1
	   Creating copy r304->r329@100
   Insn 448: point = 106, n_alt = -2
	   Creating copy r303->r304@100
   Insn 422: point = 108, n_alt = 0
   Insn 401: point = 110, n_alt = -2
   Insn 141: point = 111, n_alt = -1
   Insn 140: point = 111, n_alt = -2
   Insn 139: point = 112, n_alt = -2
   Insn 400: point = 113, n_alt = -2
   Insn 136: point = 114, n_alt = -1
   Insn 135: point = 114, n_alt = 5
   Insn 485: point = 115, n_alt = -1
   Insn 133: point = 116, n_alt = -2
   Insn 399: point = 118, n_alt = -2
   Insn 132: point = 119, n_alt = -1
   Insn 130: point = 119, n_alt = -2
   Insn 128: point = 119, n_alt = -1
   Insn 385: point = 119, n_alt = -1
	Hard reg 2 is preferable by r331 with profit 100
   Insn 124: point = 120, n_alt = -1
   Insn 123: point = 120, n_alt = -2
  BB 7
   Insn 451: point = 121, n_alt = -1
	Hard reg 8 is preferable by r308 with profit 100
   Insn 452: point = 123, n_alt = -2
	   Creating copy r307->r308@100
   Insn 3: point = 125, n_alt = 1
  BB 5
   Insn 118: point = 127, n_alt = 0
   Insn 398: point = 128, n_alt = -2
   Insn 115: point = 129, n_alt = -1
   Insn 114: point = 129, n_alt = -2
   Insn 113: point = 129, n_alt = -2
   Insn 397: point = 130, n_alt = -2
   Insn 111: point = 131, n_alt = -1
   Insn 110: point = 131, n_alt = 5
   Insn 445: point = 132, n_alt = 5
   Insn 107: point = 133, n_alt = -2
   Insn 396: point = 135, n_alt = -2
   Insn 106: point = 136, n_alt = -1
   Insn 104: point = 136, n_alt = -2
   Insn 102: point = 136, n_alt = -1
   Insn 381: point = 136, n_alt = -1
   Insn 477: point = 136, n_alt = -1
	Hard reg 32 is preferable by r331 with profit 200
	Hard reg 2 is preferable by r331 with profit 100
   Insn 98: point = 137, n_alt = -1
   Insn 96: point = 137, n_alt = -2
   Insn 97: point = 139, n_alt = -2
   Insn 395: point = 140, n_alt = -2
   Insn 95: point = 141, n_alt = -1
   Insn 94: point = 141, n_alt = 5
   Insn 444: point = 142, n_alt = 5
  BB 4
   Insn 87: point = 144, n_alt = 0
   Insn 85: point = 145, n_alt = 1
   Insn 83: point = 147, n_alt = 0
   Insn 443: point = 149, n_alt = 5
   Insn 82: point = 150, n_alt = 0
   Insn 81: point = 152, n_alt = 1
   Insn 76: point = 153, n_alt = 4
   Insn 75: point = 154, n_alt = 0
   Insn 73: point = 156, n_alt = 1
   Insn 72: point = 157, n_alt = 1
   Insn 71: point = 159, n_alt = 1
   Insn 69: point = 160, n_alt = 0
   Insn 442: point = 162, n_alt = 5
   Insn 67: point = 163, n_alt = -2
   Insn 394: point = 165, n_alt = -2
   Insn 66: point = 166, n_alt = -1
   Insn 63: point = 166, n_alt = 4
   Insn 62: point = 168, n_alt = 0
   Insn 61: point = 170, n_alt = 1
   Insn 59: point = 172, n_alt = 1
   Insn 56: point = 173, n_alt = 1
   Insn 55: point = 175, n_alt = 1
   Insn 53: point = 176, n_alt = 1
   Insn 52: point = 178, n_alt = 0
   Insn 441: point = 180, n_alt = 5
   Insn 50: point = 181, n_alt = -2
   Insn 393: point = 183, n_alt = -2
   Insn 49: point = 184, n_alt = -1
  BB 3
   Insn 428: point = 185, n_alt = -1
   Insn 31: point = 187, n_alt = 7
   Insn 440: point = 188, n_alt = -1
	   Creating copy r296<-r323@81
   Insn 30: point = 190, n_alt = 1
   Insn 41: point = 191, n_alt = 8
   Insn 439: point = 192, n_alt = -1
	   Creating copy r295<-r323@81
   Insn 468: point = 193, n_alt = -1
	   Creating copy r323<-r324@81
   Insn 37: point = 195, n_alt = 7
   Insn 438: point = 196, n_alt = -1
	   Creating copy r294<-r324@81
   Insn 469: point = 197, n_alt = -1
	   Creating copy r324<-r325@81
   Insn 34: point = 199, n_alt = 7
   Insn 437: point = 200, n_alt = -1
	   Creating copy r293<-r325@81
   Insn 470: point = 201, n_alt = -1
	   Creating copy r325<-r326@81
   Insn 28: point = 203, n_alt = 7
   Insn 436: point = 204, n_alt = -1
	   Creating copy r292<-r326@81
   Insn 471: point = 205, n_alt = -1
	   Creating copy r326<-r327@81
   Insn 27: point = 207, n_alt = 1
   Insn 25: point = 208, n_alt = 6
   Insn 435: point = 209, n_alt = -1
	   Creating copy r291<-r327@81
   Insn 472: point = 210, n_alt = -1
	   Creating copy r327<-r328@81
   Insn 23: point = 212, n_alt = 1
   Insn 21: point = 213, n_alt = 7
   Insn 434: point = 214, n_alt = -1
	   Creating copy r290<-r328@81
   Insn 473: point = 215, n_alt = -1
   Insn 20: point = 216, n_alt = 1
  BB 2
   Insn 427: point = 218, n_alt = 8
   Insn 100: point = 220, n_alt = 6
   Insn 363: point = 221, n_alt = 6
 r113: [169..181]
 r115: [155..163]
 r126: [219..221]
 r127: [139..166]
 r128: [19..32]
 r132: [18..30]
 r133: [25..28]
 r141: [121..121] [79..98] [37..75]
 r163: [213..216]
 r164: [208..212]
 r166: [191..207]
 r167: [187..190]
 r172: [171..173]
 r173: [177..178]
 r175: [174..176]
 r177: [174..175]
 r180: [171..172]
 r182: [169..170]
 r183: [167..168]
 r184: [155..157]
 r185: [158..160]
 r188: [158..159]
 r190: [155..156]
 r191: [151..154]
 r193: [148..150]
 r194: [151..152]
 r195: [146..147]
 r197: [144..145]
 r207: [111..116]
 r217: [82..87]
 r226: [59..64]
 r238: [41..46]
 r242: [44..45]
 r255: [186..220] [0..26]
 r256: [182..183]
 r257: [164..165]
 r258: [138..140]
 r259: [134..135]
 r260: [129..130]
 r261: [127..128]
 r262: [117..118]
 r263: [112..113]
 r264: [109..110]
 r265: [93..94]
 r266: [91..92]
 r267: [88..89]
 r268: [83..84]
 r269: [80..81]
 r270: [70..71]
 r271: [68..69]
 r272: [65..66]
 r273: [60..61]
 r274: [57..58]
 r275: [52..53]
 r276: [50..51]
 r277: [47..48]
 r278: [42..43]
 r279: [39..40]
 r280: [20..24]
 r281: [13..17]
 r282: [23..218] [0..4]
 r283: [27..185]
 r284: [33..153]
 r285: [31..137]
 r286: [29..133]
 r288: [178..178]
 r289: [160..160]
 r290: [213..214]
 r291: [208..209]
 r292: [203..204]
 r293: [199..200]
 r294: [195..196]
 r295: [191..192]
 r296: [187..188]
 r297: [179..180]
 r298: [161..162]
 r299: [148..149]
 r300: [141..142]
 r301: [131..132]
 r302: [114..115]
 r303: [107..108]
 r304: [105..106]
 r305: [99..100]
 r306: [101..102]
 r307: [124..125]
 r308: [122..123]
 r309: [95..96]
 r310: [85..86]
 r311: [76..78]
 r312: [72..73]
 r313: [62..63]
 r314: [54..55]
 r315: [35..36]
 r316: [20..21]
 r317: [13..14]
 r318: [8..9]
 r319: [10..11]
 r320: [6..7]
 r321: [0..3]
 r322: [0..1]
 r323: [189..193]
 r324: [194..197]
 r325: [198..201]
 r326: [202..205]
 r327: [206..210]
 r328: [211..215]
 r329: [103..104]
 r331: [127..136] [119..120]
 r334: [2..5]
 r335: [12..15]
 r336: [16..22]
Compressing live ranges: from 222 to 162 - 72%
Ranges after the compression:
 r113: [128..137]
 r115: [117..123]
 r126: [160..161]
 r127: [105..125]
 r128: [14..25]
 r132: [14..23]
 r133: [18..21]
 r141: [92..92] [58..71] [28..55]
 r163: [158..159]
 r164: [154..157]
 r166: [144..153]
 r167: [140..143]
 r172: [130..131]
 r173: [134..135]
 r175: [132..133]
 r177: [132..133]
 r180: [130..131]
 r182: [128..129]
 r183: [126..127]
 r184: [117..118]
 r185: [119..121]
 r188: [119..120]
 r190: [117..118]
 r191: [115..116]
 r193: [113..114]
 r194: [115..116]
 r195: [111..112]
 r197: [109..110]
 r207: [84..87]
 r217: [60..63]
 r226: [44..47]
 r238: [30..33]
 r242: [32..33]
 r255: [140..161] [0..19]
 r256: [138..139]
 r257: [124..125]
 r258: [105..106]
 r259: [103..104]
 r260: [99..100]
 r261: [97..98]
 r262: [88..89]
 r263: [84..85]
 r264: [82..83]
 r265: [68..69]
 r266: [66..67]
 r267: [64..65]
 r268: [60..61]
 r269: [58..59]
 r270: [52..53]
 r271: [50..51]
 r272: [48..49]
 r273: [44..45]
 r274: [42..43]
 r275: [38..39]
 r276: [36..37]
 r277: [34..35]
 r278: [30..31]
 r279: [28..29]
 r280: [14..17]
 r281: [10..13]
 r282: [16..159] [0..3]
 r283: [20..139]
 r284: [26..116]
 r285: [24..104]
 r286: [22..102]
 r288: [135..135]
 r289: [121..121]
 r290: [158..159]
 r291: [154..155]
 r292: [150..151]
 r293: [148..149]
 r294: [146..147]
 r295: [144..145]
 r296: [140..141]
 r297: [136..137]
 r298: [122..123]
 r299: [113..114]
 r300: [107..108]
 r301: [101..102]
 r302: [86..87]
 r303: [80..81]
 r304: [78..79]
 r305: [72..73]
 r306: [74..75]
 r307: [95..96]
 r308: [93..94]
 r309: [70..71]
 r310: [62..63]
 r311: [56..57]
 r312: [54..55]
 r313: [46..47]
 r314: [40..41]
 r315: [26..27]
 r316: [14..15]
 r317: [10..11]
 r318: [6..7]
 r319: [8..9]
 r320: [4..5]
 r321: [0..3]
 r322: [0..1]
 r323: [142..145]
 r324: [146..147]
 r325: [148..149]
 r326: [150..151]
 r327: [152..155]
 r328: [156..159]
 r329: [76..77]
 r331: [97..104] [90..91]
 r334: [2..3]
 r335: [10..11]
 r336: [12..15]

********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=48, prev_offset=40)
Can't eliminate 103 to 102 (offset=48, prev_offset=0)
Can't eliminate 103 to 11 (offset=48, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 487:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 486:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 485:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 432:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 384:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 383:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 484:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 482:  (0) m  (1) l {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 477:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 473:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 25 count 17 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 17 n_edges 25 count 17 (    1)

Cands:
0 (nop=0, remat_regno=282, reload_regno=-1):
(insn 482 463 466 15 (set (reg:SI 282 [orig:126 ivtmp.156 ] [126])
                    (reg:SI 334 [orig:126 ivtmp.156 ] [126])) "../System/pomozne_funkcije.c":303:2 728 {*thumb2_movsi_vfp}
                 (nil))

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 255 282
  changed regs: 126 255 282
  dead regs: 126

BB 3:
  register live in: 255 282
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 282 283
  changed regs: 163 164 166 167 283 290 291 292 293 294 295 296 323 324 325 326 327 328
  dead regs: 163 164 166 167 255 290 291 292 293 294 295 296 323 324 325 326 327 328

BB 4:
  register live in: 282 283
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127 282 283 284
  changed regs: 0 [r0] 113 115 127 172 173 175 177 180 182 183 184 185 188 190 191 193 194 195 197 256 257 284 288 289 297 298 299
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 115 172 173 175 177 180 182 183 184 185 188 190 191 193 194 195 197 256 257 297 298 299

BB 5:
  register live in: 127 282 283 284
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 282 283 284 285 286 331
  changed regs: 0 [r0] 2 [r2] 258 259 260 261 285 286 300 301 331
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 127 258 259 260 261 300 301

BB 6:
  register live in: 282 283 284 285 286 331
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 141 207 262 263 264 302 303 304 305 306 329
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 207 262 263 264 302 303 304 305 306 329 331

BB 7:
  register live in: 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 141 307 308
  dead regs: 307 308

BB 8:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 265 266 309
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 265 266 309

BB 9:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 141 217 267 268 269 310 311
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 141 217 267 268 269 310 311

BB 10:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 270 271 312
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 270 271 312

BB 11:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 226 272 273 274 313
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 226 272 273 274 313

BB 12:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 275 276 314
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 275 276 314

BB 13:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 141 282 283 284 285 286
  changed regs: 0 [r0] 2 [r2] 238 242 277 278 279
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 238 242 277 278 279

BB 14:
  register live in: 141 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 282 283 284 285 286
  changed regs: 315
  dead regs: 100 [cc] 141 315

BB 15:
  register live in: 282 283 284 285 286
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 255 282
  changed regs: 0 [r0] 2 [r2] 128 132 133 255 280 281 282 316 317 318 319 320 321 322 334 335 336
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 128 132 133 280 281 282 283 284 285 286 316 317 318 319 320 321 322 334 335 336

BB 16:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs:
  dead regs:
subreg regs:
  Slot 0 regnos (width = 0):	 282
Changing spilled pseudos to memory in insn #427
Changing spilled pseudos to memory in insn #473
Changing spilled pseudos to memory in insn #484
Changing spilled pseudos to memory in insn #482
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=48)
Can't eliminate 103 to 102 (offset=48, prev_offset=0)
Can't eliminate 103 to 11 (offset=44, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 482:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 484:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 473:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 427:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=56)
Can't eliminate 103 to 102 (offset=48, prev_offset=0)
Can't eliminate 103 to 11 (offset=44, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
changing reg in insn 50
changing reg in insn 52
changing reg in insn 62
changing reg in insn 55
changing reg in insn 53
changing reg in insn 52
changing reg in insn 67
changing reg in insn 69
changing reg in insn 75
changing reg in insn 71
changing reg in insn 69
changing reg in insn 363
changing reg in insn 427
changing reg in insn 63
changing reg in insn 85
changing reg in insn 97
changing reg in insn 64
changing reg in insn 429
changing reg in insn 298
changing reg in insn 430
changing reg in insn 305
changing reg in insn 431
changing reg in insn 293
changing reg in insn 287
changing reg in insn 240
changing reg in insn 237
changing reg in insn 197
changing reg in insn 194
changing reg in insn 153
changing reg in insn 150
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 27
changing reg in insn 37
changing reg in insn 34
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 56
changing reg in insn 61
changing reg in insn 59
changing reg in insn 59
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
changing reg in insn 59
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 72
changing reg in insn 75
changing reg in insn 69
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 82
changing reg in insn 82
changing reg in insn 83
changing reg in insn 81
changing reg in insn 82
changing reg in insn 82
changing reg in insn 83
changing reg in insn 85
changing reg in insn 85
changing reg in insn 87
changing reg in insn 133
changing reg in insn 140
changing reg in insn 180
changing reg in insn 186
changing reg in insn 224
changing reg in insn 230
changing reg in insn 270
changing reg in insn 279
changing reg in insn 274
changing reg in insn 275
changing reg in insn 432
changing reg in insn 100
changing reg in insn 428
changing reg in insn 386
changing reg in insn 393
changing reg in insn 50
changing reg in insn 394
changing reg in insn 67
changing reg in insn 395
changing reg in insn 96
changing reg in insn 396
changing reg in insn 107
changing reg in insn 397
changing reg in insn 113
changing reg in insn 398
changing reg in insn 118
changing reg in insn 399
changing reg in insn 133
changing reg in insn 400
changing reg in insn 139
changing reg in insn 401
changing reg in insn 422
changing reg in insn 402
changing reg in insn 160
changing reg in insn 403
changing reg in insn 165
changing reg in insn 404
changing reg in insn 180
changing reg in insn 405
changing reg in insn 185
changing reg in insn 406
changing reg in insn 376
changing reg in insn 407
changing reg in insn 204
changing reg in insn 408
changing reg in insn 209
changing reg in insn 409
changing reg in insn 224
changing reg in insn 410
changing reg in insn 229
changing reg in insn 411
changing reg in insn 234
changing reg in insn 412
changing reg in insn 250
changing reg in insn 413
changing reg in insn 255
changing reg in insn 414
changing reg in insn 270
changing reg in insn 415
changing reg in insn 278
changing reg in insn 416
changing reg in insn 283
changing reg in insn 417
changing reg in insn 296
changing reg in insn 418
changing reg in insn 312
changing reg in insn 428
changing reg in insn 432
changing reg in insn 384
changing reg in insn 383
changing reg in insn 382
changing reg in insn 76
changing reg in insn 429
changing reg in insn 77
changing reg in insn 123
changing reg in insn 170
changing reg in insn 214
changing reg in insn 260
changing reg in insn 96
changing reg in insn 430
changing reg in insn 104
changing reg in insn 130
changing reg in insn 177
changing reg in insn 221
changing reg in insn 267
changing reg in insn 107
changing reg in insn 431
changing reg in insn 114
changing reg in insn 161
changing reg in insn 205
changing reg in insn 251
changing reg in insn 52
changing reg in insn 69
deleting insn with uid = 434.
deleting insn with uid = 472.
deleting insn with uid = 435.
deleting insn with uid = 471.
deleting insn with uid = 436.
deleting insn with uid = 470.
deleting insn with uid = 437.
deleting insn with uid = 469.
deleting insn with uid = 438.
deleting insn with uid = 468.
deleting insn with uid = 439.
deleting insn with uid = 440.
deleting insn with uid = 393.
deleting insn with uid = 50.
deleting insn with uid = 394.
deleting insn with uid = 67.
deleting insn with uid = 96.
deleting insn with uid = 396.
deleting insn with uid = 113.
deleting insn with uid = 398.
deleting insn with uid = 399.
deleting insn with uid = 139.
deleting insn with uid = 401.
deleting insn with uid = 448.
deleting insn with uid = 447.
deleting insn with uid = 450.
deleting insn with uid = 452.
deleting insn with uid = 160.
deleting insn with uid = 403.
deleting insn with uid = 404.
deleting insn with uid = 185.
deleting insn with uid = 406.
deleting insn with uid = 204.
deleting insn with uid = 408.
deleting insn with uid = 409.
deleting insn with uid = 229.
deleting insn with uid = 411.
deleting insn with uid = 250.
deleting insn with uid = 413.
deleting insn with uid = 414.
deleting insn with uid = 278.
deleting insn with uid = 416.
deleting insn with uid = 430.
deleting insn with uid = 431.
deleting insn with uid = 417.
deleting insn with uid = 461.
deleting insn with uid = 418.
deleting insn with uid = 483.
deleting insn with uid = 462.
deleting insn with uid = 464.
deleting insn with uid = 465.
deleting insn with uid = 463.
deleting insn with uid = 467.


try_optimize_cfg iteration 1

Deleting fallthru block 16.
deleting block 16


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 175.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 206.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 231.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 261.
verify found no changes in insn with uid = 265.
verify found no changes in insn with uid = 269.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 299.
verify found no changes in insn with uid = 303.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 310.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 24 count 20 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 24 count 18 (  1.1)


create_level_one_sprites

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 32 [s16] 33 [s17] 100 [cc]
;;  ref usage 	r0={68d,73u,3e} r1={76d,36u} r2={64d,30u} r3={91d,54u} r4={6d,7u} r5={11d,18u} r6={1d,5u} r7={1d,5u} r8={5d,11u} r9={3d,8u} r10={1d,6u} r11={2d,7u} r12={78d} r13={1d,58u} r14={40d} r15={39d} r16={40d} r17={40d} r18={40d} r19={40d} r20={40d} r21={40d} r22={40d} r23={40d} r24={40d} r25={40d} r26={40d} r27={40d} r28={40d} r29={40d} r30={40d} r31={40d} r32={1d,5u} r33={1d,5u} r48={39d} r49={39d} r50={39d} r51={39d} r52={39d} r53={39d} r54={39d} r55={39d} r56={39d} r57={39d} r58={39d} r59={39d} r60={39d} r61={39d} r62={39d} r63={39d} r64={39d} r65={39d} r66={39d} r67={39d} r68={39d} r69={39d} r70={39d} r71={39d} r72={39d} r73={39d} r74={39d} r75={39d} r76={39d} r77={39d} r78={39d} r79={39d} r80={39d} r81={39d} r82={39d} r83={39d} r84={39d} r85={39d} r86={39d} r87={39d} r88={39d} r89={39d} r90={39d} r91={39d} r92={39d} r93={39d} r94={39d} r95={39d} r96={39d} r97={39d} r98={39d} r99={39d} r100={49d,3u} r101={39d} r104={39d} r105={39d} r106={39d} 
;;    total ref usage 3696{3362d,331u,3e} in 221{182 regular + 39 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 2 8 2 (debug_marker) "../System/pomozne_funkcije.c":302:2 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:SI done (const_int 0 [0])) "../System/pomozne_funkcije.c":302:18 -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../System/pomozne_funkcije.c":303:2 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/pomozne_funkcije.c":303:6 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/pomozne_funkcije.c":303:14 -1
     (nil))
(note 13 12 360 2 NOTE_INSN_DELETED)
(note 360 13 361 2 NOTE_INSN_DELETED)
(note 361 360 51 2 NOTE_INSN_DELETED)
(note 51 361 68 2 NOTE_INSN_DELETED)
(note 68 51 363 2 NOTE_INSN_DELETED)
(insn 363 68 14 2 (set (reg:SI 11 fp [orig:126 ivtmp.156 ] [126])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
        (nil)))
(note 14 363 362 2 NOTE_INSN_DELETED)
(note 362 14 100 2 NOTE_INSN_DELETED)
(insn 100 362 427 2 (set (reg:DF 8 r8 [255])
        (const_double:DF 5.0e-1 [0x0.8p+0])) "../System/pomozne_funkcije.c":319:14 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 427 100 317 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])
        (reg:SI 11 fp [orig:126 ivtmp.156 ] [126])) "../System/pomozne_funkcije.c":319:14 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 317 427 15 3 99 (nil) [1 uses])
(note 15 317 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 16 15 17 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "../System/pomozne_funkcije.c":304:3 -1
     (nil))
(debug_insn 18 17 20 3 (debug_marker) "../System/pomozne_funkcije.c":305:3 -1
     (nil))
(insn 20 18 473 3 (set (reg:SI 3 r3 [163])
        (const_int 8388736 [0x800080])) "../System/pomozne_funkcije.c":304:24 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 8388736 [0x800080])
        (nil)))
(insn 473 20 21 3 (set (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])) "../System/pomozne_funkcije.c":304:24 728 {*thumb2_movsi_vfp}
     (nil))
(insn 21 473 22 3 (set (mem:SI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 20 [0x14])) [3 MEM[base: _22, offset: 20B]+0 S4 A32])
        (reg:SI 3 r3 [163])) "../System/pomozne_funkcije.c":304:24 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 22 21 23 3 (debug_marker) "../System/pomozne_funkcije.c":306:3 -1
     (nil))
(insn 23 22 25 3 (set (reg:SI 3 r3 [164])
        (const_int 3 [0x3])) "../System/pomozne_funkcije.c":306:23 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 25 23 26 3 (set (mem:QI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 24 [0x18])) [0 MEM[base: _22, offset: 24B]+0 S1 A32])
        (reg:QI 3 r3 [164])) "../System/pomozne_funkcije.c":306:23 263 {*arm_movqi_insn}
     (nil))
(debug_insn 26 25 27 3 (debug_marker) "../System/pomozne_funkcije.c":307:3 -1
     (nil))
(insn 27 26 28 3 (set (reg:SI 3 r3 [166])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":307:31 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 28 27 29 3 (set (mem:SI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 28 [0x1c])) [5 MEM[base: _22, offset: 28B]+0 S4 A32])
        (reg:SI 3 r3 [166])) "../System/pomozne_funkcije.c":307:31 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 29 28 34 3 (debug_marker) "../System/pomozne_funkcije.c":308:3 -1
     (nil))
(insn 34 29 37 3 (set (mem:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126]) [5 MEM[base: _22, offset: 0B]+0 S4 A32])
        (reg:SI 3 r3 [166])) "../System/pomozne_funkcije.c":309:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 37 34 41 3 (set (mem:SI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 4 [0x4])) [5 MEM[base: _22, offset: 4B]+0 S4 A32])
        (reg:SI 3 r3 [166])) "../System/pomozne_funkcije.c":310:22 728 {*thumb2_movsi_vfp}
     (nil))
(insn 41 37 30 3 (set (mem:QI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 440 [0x1b8])) [0 MEM[base: _22, offset: 440B]+0 S1 A32])
        (reg:QI 3 r3 [166])) "../System/pomozne_funkcije.c":311:24 263 {*arm_movqi_insn}
     (nil))
(insn 30 41 31 3 (set (reg:SI 3 r3 [167])
        (const_int 5 [0x5])) "../System/pomozne_funkcije.c":308:34 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 5 [0x5])
        (nil)))
(insn 31 30 32 3 (set (mem:SI (plus:SI (reg:SI 2 r2 [orig:126 ivtmp.156 ] [126])
                (const_int 32 [0x20])) [5 MEM[base: _22, offset: 32B]+0 S4 A32])
        (reg:SI 3 r3 [167])) "../System/pomozne_funkcije.c":308:34 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 32 31 35 3 (debug_marker) "../System/pomozne_funkcije.c":309:3 -1
     (nil))
(debug_insn 35 32 38 3 (debug_marker) "../System/pomozne_funkcije.c":310:3 -1
     (nil))
(debug_insn 38 35 42 3 (debug_marker) "../System/pomozne_funkcije.c":311:3 -1
     (nil))
(debug_insn 42 38 43 3 (debug_marker) "../System/pomozne_funkcije.c":312:3 -1
     (nil))
(debug_insn 43 42 428 3 (var_location:SI done (const_int 0 [0])) "../System/pomozne_funkcije.c":312:8 -1
     (nil))
(insn 428 43 387 3 (set (reg:DF 32 s16 [255])
        (reg:DF 8 r8 [255])) "../System/pomozne_funkcije.c":308:34 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(code_label 387 428 378 4 109 (nil) [4 uses])
(note 378 387 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 54 378 58 4 NOTE_INSN_DELETED)
(note 58 54 60 4 NOTE_INSN_DELETED)
(note 60 58 70 4 NOTE_INSN_DELETED)
(note 70 60 74 4 NOTE_INSN_DELETED)
(note 74 70 86 4 NOTE_INSN_DELETED)
(note 86 74 45 4 NOTE_INSN_DELETED)
(debug_insn 45 86 46 4 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 46 45 47 4 (var_location:SI done (const_int 0 [0])) -1
     (nil))
(debug_insn 47 46 48 4 (debug_marker) "../System/pomozne_funkcije.c":313:3 -1
     (nil))
(debug_insn 48 47 49 4 (debug_marker) "../System/pomozne_funkcije.c":314:4 -1
     (nil))
(call_insn 49 48 441 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":314:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 441 49 52 4 (set (reg:SI 3 r3 [297])
        (const_int -1307163959 [0xffffffffb21642c9])) "../System/pomozne_funkcije.c":314:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 52 441 53 4 (parallel [
            (set (reg:SI 5 r5 [173])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:113 _1 ] [113]))
                            (sign_extend:DI (reg:SI 3 r3 [297])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [288]))
        ]) "../System/pomozne_funkcije.c":314:17 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:113 _1 ] [113]))
                    (const_int -1307163959 [0xffffffffb21642c9]))
                (const_int 32 [0x20])))
        (nil)))
(insn 53 52 55 4 (set (reg:SI 3 r3 [175])
        (plus:SI (reg:SI 5 r5 [173])
            (reg:SI 0 r0 [orig:113 _1 ] [113]))) "../System/pomozne_funkcije.c":314:17 7 {*arm_addsi3}
     (nil))
(insn 55 53 56 4 (set (reg:SI 5 r5 [177])
        (ashiftrt:SI (reg:SI 0 r0 [orig:113 _1 ] [113])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":314:17 147 {*arm_shiftsi3}
     (nil))
(insn 56 55 59 4 (set (reg:SI 5 r5 [172])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [175])
                (const_int 4 [0x4]))
            (reg:SI 5 r5 [177]))) "../System/pomozne_funkcije.c":314:17 319 {*rsb_shiftsi}
     (nil))
(insn 59 56 61 4 (set (reg:SI 3 r3 [180])
        (plus:SI (ashift:SI (reg:SI 5 r5 [172])
                (const_int 1 [0x1]))
            (reg:SI 5 r5 [172]))) "../System/pomozne_funkcije.c":314:17 318 {*add_shiftsi}
     (nil))
(insn 61 59 62 4 (set (reg:SI 5 r5 [182])
        (minus:SI (ashift:SI (reg:SI 3 r3 [180])
                (const_int 3 [0x3]))
            (reg:SI 5 r5 [172]))) "../System/pomozne_funkcije.c":314:17 319 {*rsb_shiftsi}
     (nil))
(insn 62 61 63 4 (set (reg:SI 0 r0 [183])
        (minus:SI (reg:SI 0 r0 [orig:113 _1 ] [113])
            (reg:SI 5 r5 [182]))) "../System/pomozne_funkcije.c":314:17 45 {*arm_subsi3_insn}
     (nil))
(insn 63 62 64 4 (set (reg/v:SI 5 r5 [orig:127 tmpx ] [127])
        (plus:SI (reg:SI 0 r0 [183])
            (const_int 25 [0x19]))) "../System/pomozne_funkcije.c":314:9 7 {*arm_addsi3}
     (nil))
(debug_insn 64 63 65 4 (var_location:SI tmpx (reg/v:SI 5 r5 [orig:127 tmpx ] [127])) "../System/pomozne_funkcije.c":314:9 -1
     (nil))
(debug_insn 65 64 66 4 (debug_marker) "../System/pomozne_funkcije.c":315:4 -1
     (nil))
(call_insn 66 65 442 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":315:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 442 66 69 4 (set (reg:SI 3 r3 [298])
        (const_int 780903145 [0x2e8ba2e9])) "../System/pomozne_funkcije.c":315:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 69 442 71 4 (parallel [
            (set (reg:SI 2 r2 [185])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:115 _3 ] [115]))
                            (sign_extend:DI (reg:SI 3 r3 [298])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [289]))
        ]) "../System/pomozne_funkcije.c":315:17 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:115 _3 ] [115]))
                    (const_int 780903145 [0x2e8ba2e9]))
                (const_int 32 [0x20])))
        (nil)))
(insn 71 69 72 4 (set (reg:SI 3 r3 [188])
        (ashiftrt:SI (reg:SI 0 r0 [orig:115 _3 ] [115])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":315:17 147 {*arm_shiftsi3}
     (nil))
(insn 72 71 73 4 (set (reg:SI 3 r3 [184])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [185])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [188]))) "../System/pomozne_funkcije.c":315:17 319 {*rsb_shiftsi}
     (nil))
(insn 73 72 75 4 (set (reg:SI 2 r2 [190])
        (const_int 22 [0x16])) "../System/pomozne_funkcije.c":315:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 22 [0x16])
        (nil)))
(insn 75 73 76 4 (set (reg:SI 0 r0 [191])
        (minus:SI (reg:SI 0 r0 [orig:115 _3 ] [115])
            (mult:SI (reg:SI 2 r2 [190])
                (reg:SI 3 r3 [184])))) "../System/pomozne_funkcije.c":315:17 58 {*mls}
     (nil))
(insn 76 75 77 4 (set (reg/v:SI 9 r9 [orig:128 tmpy ] [128])
        (plus:SI (reg:SI 0 r0 [191])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":315:9 7 {*arm_addsi3}
     (nil))
(debug_insn 77 76 78 4 (var_location:SI tmpy (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":315:9 -1
     (nil))
(debug_insn 78 77 81 4 (debug_marker) "../System/pomozne_funkcije.c":316:4 -1
     (nil))
(insn 81 78 82 4 (set (reg:SI 3 r3 [194])
        (const_int 50 [0x32])) "../System/pomozne_funkcije.c":316:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 82 81 443 4 (set (reg:SI 0 r0 [193])
        (plus:SI (mult:SI (reg:SI 0 r0 [191])
                (reg:SI 3 r3 [194]))
            (reg:SI 3 r3 [194]))) "../System/pomozne_funkcije.c":316:16 57 {*mla}
     (nil))
(insn 443 82 83 4 (set (reg:SI 3 r3 [299])
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 000000000786a990 map>)) "../System/pomozne_funkcije.c":316:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 83 443 85 4 (set (reg:SI 0 r0 [195])
        (plus:SI (reg:SI 0 r0 [193])
            (reg:SI 3 r3 [299]))) "../System/pomozne_funkcije.c":316:16 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 0 r0 [193])
            (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 000000000786a990 map>))
        (nil)))
(insn 85 83 87 4 (set (reg:SI 3 r3 [orig:197 map[tmpy_50][tmpx_48] ] [197])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 0 r0 [195])
                    (reg/v:SI 5 r5 [orig:127 tmpx ] [127])) [0 map[tmpy_50][tmpx_48]+0 S1 A8]))) "../System/pomozne_funkcije.c":316:6 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 87 85 88 4 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:197 map[tmpy_50][tmpx_48] ] [197])
                        (const_int 0 [0]))
                    (label_ref:SI 387)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":316:6 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 783831532 (nil))
 -> 387)
(note 88 87 112 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 112 88 116 5 NOTE_INSN_DELETED)
(note 116 112 117 5 NOTE_INSN_DELETED)
(note 117 116 89 5 NOTE_INSN_DELETED)
(debug_insn 89 117 90 5 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 90 89 91 5 (var_location:SI done (const_int 1 [0x1])) -1
     (nil))
(debug_insn 91 90 92 5 (debug_marker) "../System/pomozne_funkcije.c":318:17 -1
     (nil))
(debug_insn 92 91 444 5 (debug_marker) "../System/pomozne_funkcije.c":319:6 -1
     (nil))
(insn 444 92 94 5 (set (reg:SI 3 r3 [300])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>)) "../System/pomozne_funkcije.c":319:20 728 {*thumb2_movsi_vfp}
     (nil))
(insn 94 444 95 5 (set (reg:SI 0 r0)
        (mem/c:SI (reg:SI 3 r3 [300]) [5 Blocksize+0 S4 A32])) "../System/pomozne_funkcije.c":319:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>) [5 Blocksize+0 S4 A32])
        (nil)))
(call_insn/u 95 94 395 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 395 95 97 5 (set (reg:DF 10 r10 [258])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:20 739 {*thumb2_movdf_vfp}
     (nil))
(insn 97 395 98 5 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:127 tmpx ] [127])) "../System/pomozne_funkcije.c":319:14 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 98 97 477 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 477 98 381 5 (set (reg:DF 4 r4 [255])
        (reg:DF 32 s16 [255])) "../System/pomozne_funkcije.c":319:14 739 {*thumb2_movdf_vfp}
     (nil))
(insn 381 477 102 5 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [255])) "../System/pomozne_funkcije.c":319:14 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 102 381 104 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 104 102 106 5 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":319:20 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 106 104 107 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 107 106 445 5 (set (reg:DF 6 r6 [orig:133 _60 ] [133])
        (reg:DF 0 r0 [259])) "../System/pomozne_funkcije.c":319:20 739 {*thumb2_movdf_vfp}
     (nil))
(insn 445 107 475 5 (set (reg:SI 3 r3 [301])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:49 728 {*thumb2_movsi_vfp}
     (nil))
(note 475 445 110 5 NOTE_INSN_DELETED)
(insn 110 475 111 5 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [301])
                (const_int 8 [0x8])) [1 sp_original[0].x+0 S4 A32])) "../System/pomozne_funkcije.c":319:49 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 8 [0x8]))) [1 sp_original[0].x+0 S4 A32])
        (nil)))
(call_insn/u 111 110 397 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:49 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 397 111 114 5 (set (reg:DF 2 r2 [260])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:49 739 {*thumb2_movdf_vfp}
     (nil))
(insn 114 397 115 5 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:133 _60 ] [133])) "../System/pomozne_funkcije.c":319:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 115 114 118 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 118 115 122 5 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [261])
                        (const_int 0 [0]))
                    (label_ref:SI 419)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 419)
(note 122 118 137 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 137 122 142 6 NOTE_INSN_DELETED)
(note 142 137 373 6 NOTE_INSN_DELETED)
(note 373 142 123 6 NOTE_INSN_DELETED)
(insn 123 373 124 6 (set (reg:SI 0 r0)
        (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":319:60 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 124 123 385 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 385 124 128 6 (set (reg:DF 2 r2)
        (reg:DF 4 r4 [255])) "../System/pomozne_funkcije.c":319:60 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 128 385 130 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 130 128 132 6 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 132 130 133 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:66 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 133 132 446 6 (set (reg:DF 4 r4 [207])
        (reg:DF 0 r0 [262])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(note 446 133 476 6 NOTE_INSN_DELETED)
(note 476 446 485 6 NOTE_INSN_DELETED)
(insn 485 476 135 6 (set (reg:SI 3 r3 [302])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:95 728 {*thumb2_movsi_vfp}
     (nil))
(insn 135 485 136 6 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [302])
                (const_int 12 [0xc])) [1 sp_original[0].y+0 S4 A32])) "../System/pomozne_funkcije.c":319:95 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 12 [0xc]))) [1 sp_original[0].y+0 S4 A32])
        (nil)))
(call_insn/u 136 135 400 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:95 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 400 136 140 6 (set (reg:DF 2 r2 [263])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:95 739 {*thumb2_movdf_vfp}
     (nil))
(insn 140 400 141 6 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [207])) "../System/pomozne_funkcije.c":319:52 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 141 140 422 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 422 141 474 6 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (clz:SI (reg:SI 0 r0 [264]))) "../System/pomozne_funkcije.c":319:52 393 {clzsi2}
     (nil))
(note 474 422 423 6 NOTE_INSN_DELETED)
(insn 423 474 449 6 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (lshiftrt:SI (reg/v:SI 3 r3 [orig:141 done ] [141])
            (const_int 5 [0x5]))) "../System/pomozne_funkcije.c":319:52 147 {*arm_shiftsi3}
     (nil))
(insn 449 423 420 6 (set (reg/v:SI 8 r8 [orig:141 done ] [141])
        (reg/v:SI 3 r3 [orig:141 done ] [141])) "../System/pomozne_funkcije.c":319:52 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 420 449 421 6 (set (pc)
        (label_ref 148)) 284 {*arm_jump}
     (nil)
 -> 148)
(barrier 421 420 419)
(code_label 419 421 325 7 110 (nil) [1 uses])
(note 325 419 3 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 3 325 451 7 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":317:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 451 3 148 7 (set (reg/v:SI 8 r8 [orig:141 done ] [141])
        (reg/v:SI 3 r3 [orig:141 done ] [141])) "../System/pomozne_funkcije.c":317:10 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 148 451 149 8 90 (nil) [1 uses])
(note 149 148 159 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 159 149 163 8 NOTE_INSN_DELETED)
(note 163 159 164 8 NOTE_INSN_DELETED)
(note 164 163 150 8 NOTE_INSN_DELETED)
(debug_insn 150 164 151 8 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 151 150 152 8 (debug_marker) "../System/pomozne_funkcije.c":318:33 -1
     (nil))
(debug_insn 152 151 153 8 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 153 152 154 8 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 154 153 155 8 (debug_marker) "../System/pomozne_funkcije.c":318:17 -1
     (nil))
(debug_insn 155 154 453 8 (debug_marker) "../System/pomozne_funkcije.c":319:6 -1
     (nil))
(insn 453 155 478 8 (set (reg:SI 3 r3 [309])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:49 728 {*thumb2_movsi_vfp}
     (nil))
(note 478 453 157 8 NOTE_INSN_DELETED)
(insn 157 478 158 8 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [309])
                (const_int 452 [0x1c4])) [1 sp_original[1].x+0 S4 A32])) "../System/pomozne_funkcije.c":319:49 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 452 [0x1c4]))) [1 sp_original[1].x+0 S4 A32])
        (nil)))
(call_insn/u 158 157 402 8 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:49 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 402 158 161 8 (set (reg:DF 2 r2 [265])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:49 739 {*thumb2_movdf_vfp}
     (nil))
(insn 161 402 162 8 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:133 _60 ] [133])) "../System/pomozne_funkcije.c":319:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 162 161 165 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 165 162 169 8 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [266])
                        (const_int 0 [0]))
                    (label_ref:SI 192)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 192)
(note 169 165 184 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 184 169 188 9 NOTE_INSN_DELETED)
(note 188 184 170 9 NOTE_INSN_DELETED)
(insn 170 188 171 9 (set (reg:SI 0 r0)
        (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":319:60 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 171 170 384 9 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 384 171 175 9 (set (reg:DF 2 r2)
        (reg:DF 32 s16 [255])) "../System/pomozne_funkcije.c":319:60 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 175 384 177 9 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 177 175 179 9 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 179 177 180 9 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:66 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 180 179 454 9 (set (reg:DF 4 r4 [217])
        (reg:DF 0 r0 [267])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(note 454 180 479 9 NOTE_INSN_DELETED)
(note 479 454 486 9 NOTE_INSN_DELETED)
(insn 486 479 182 9 (set (reg:SI 3 r3 [310])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:95 728 {*thumb2_movsi_vfp}
     (nil))
(insn 182 486 183 9 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [310])
                (const_int 456 [0x1c8])) [1 sp_original[1].y+0 S4 A32])) "../System/pomozne_funkcije.c":319:95 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 456 [0x1c8]))) [1 sp_original[1].y+0 S4 A32])
        (nil)))
(call_insn/u 183 182 405 9 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:95 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 405 183 186 9 (set (reg:DF 2 r2 [268])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:95 739 {*thumb2_movdf_vfp}
     (nil))
(insn 186 405 187 9 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [217])) "../System/pomozne_funkcije.c":319:52 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 187 186 376 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 376 187 455 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [269])
            (const_int 0 [0]))) "../System/pomozne_funkcije.c":319:104 268 {*arm_cmpsi_insn}
     (nil))
(insn 455 376 377 9 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (reg/v:SI 8 r8 [orig:141 done ] [141])) "../System/pomozne_funkcije.c":319:104 728 {*thumb2_movsi_vfp}
     (nil))
(insn 377 455 456 9 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (if_then_else:SI (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (reg/v:SI 3 r3 [orig:141 done ] [141])
            (const_int 0 [0]))) "../System/pomozne_funkcije.c":319:104 986 {*thumb2_movsicc_insn}
     (nil))
(insn 456 377 192 9 (set (reg/v:SI 8 r8 [orig:141 done ] [141])
        (reg/v:SI 3 r3 [orig:141 done ] [141])) "../System/pomozne_funkcije.c":319:104 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 192 456 193 10 93 (nil) [1 uses])
(note 193 192 203 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 203 193 207 10 NOTE_INSN_DELETED)
(note 207 203 208 10 NOTE_INSN_DELETED)
(note 208 207 194 10 NOTE_INSN_DELETED)
(debug_insn 194 208 195 10 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 195 194 196 10 (debug_marker) "../System/pomozne_funkcije.c":318:33 -1
     (nil))
(debug_insn 196 195 197 10 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 197 196 198 10 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 198 197 199 10 (debug_marker) "../System/pomozne_funkcije.c":318:17 -1
     (nil))
(debug_insn 199 198 457 10 (debug_marker) "../System/pomozne_funkcije.c":319:6 -1
     (nil))
(insn 457 199 480 10 (set (reg:SI 3 r3 [312])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:49 728 {*thumb2_movsi_vfp}
     (nil))
(note 480 457 201 10 NOTE_INSN_DELETED)
(insn 201 480 202 10 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [312])
                (const_int 896 [0x380])) [1 sp_original[2].x+0 S4 A32])) "../System/pomozne_funkcije.c":319:49 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 896 [0x380]))) [1 sp_original[2].x+0 S4 A32])
        (nil)))
(call_insn/u 202 201 407 10 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:49 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 407 202 205 10 (set (reg:DF 2 r2 [270])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:49 739 {*thumb2_movdf_vfp}
     (nil))
(insn 205 407 206 10 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:133 _60 ] [133])) "../System/pomozne_funkcije.c":319:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 206 205 209 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 209 206 213 10 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [271])
                        (const_int 0 [0]))
                    (label_ref:SI 235)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 235)
(note 213 209 228 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 228 213 232 11 NOTE_INSN_DELETED)
(note 232 228 233 11 NOTE_INSN_DELETED)
(note 233 232 214 11 NOTE_INSN_DELETED)
(insn 214 233 215 11 (set (reg:SI 0 r0)
        (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":319:60 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 215 214 383 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 383 215 219 11 (set (reg:DF 2 r2)
        (reg:DF 32 s16 [255])) "../System/pomozne_funkcije.c":319:60 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 219 383 221 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 221 219 223 11 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 223 221 224 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:66 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 224 223 458 11 (set (reg:DF 4 r4 [226])
        (reg:DF 0 r0 [272])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(note 458 224 481 11 NOTE_INSN_DELETED)
(note 481 458 487 11 NOTE_INSN_DELETED)
(insn 487 481 226 11 (set (reg:SI 3 r3 [313])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) "../System/pomozne_funkcije.c":319:95 728 {*thumb2_movsi_vfp}
     (nil))
(insn 226 487 227 11 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg:SI 3 r3 [313])
                (const_int 900 [0x384])) [1 sp_original[2].y+0 S4 A32])) "../System/pomozne_funkcije.c":319:95 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 900 [0x384]))) [1 sp_original[2].y+0 S4 A32])
        (nil)))
(call_insn/u 227 226 410 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:95 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 410 227 230 11 (set (reg:DF 2 r2 [273])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:95 739 {*thumb2_movdf_vfp}
     (nil))
(insn 230 410 231 11 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [226])) "../System/pomozne_funkcije.c":319:52 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 231 230 234 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 234 231 235 11 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [274])
                        (const_int 0 [0]))
                    (label_ref:SI 387)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:52 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 387)
(code_label 235 234 236 12 95 (nil) [1 uses])
(note 236 235 249 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 249 236 253 12 NOTE_INSN_DELETED)
(note 253 249 254 12 NOTE_INSN_DELETED)
(note 254 253 237 12 NOTE_INSN_DELETED)
(debug_insn 237 254 238 12 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 238 237 239 12 (debug_marker) "../System/pomozne_funkcije.c":318:33 -1
     (nil))
(debug_insn 239 238 240 12 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 240 239 241 12 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 241 240 242 12 (debug_marker) "../System/pomozne_funkcije.c":318:17 -1
     (nil))
(debug_insn 242 241 459 12 (debug_marker) "../System/pomozne_funkcije.c":319:6 -1
     (nil))
(insn 459 242 247 12 (set (reg:SI 3 r3 [314])
        (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                (const_int 1340 [0x53c])))) "../System/pomozne_funkcije.c":319:49 728 {*thumb2_movsi_vfp}
     (nil))
(insn 247 459 248 12 (set (reg:SF 0 r0)
        (mem/c:SF (reg:SI 3 r3 [314]) [1 sp_original[3].x+0 S4 A32])) "../System/pomozne_funkcije.c":319:49 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 1340 [0x53c]))) [1 sp_original[3].x+0 S4 A32])
        (nil)))
(call_insn/u 248 247 412 12 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:49 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 412 248 251 12 (set (reg:DF 2 r2 [275])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:49 739 {*thumb2_movdf_vfp}
     (nil))
(insn 251 412 252 12 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:133 _60 ] [133])) "../System/pomozne_funkcije.c":319:8 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 252 251 255 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 255 252 259 12 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [276])
                        (const_int 0 [0]))
                    (label_ref:SI 284)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 284)
(note 259 255 277 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 277 259 281 13 NOTE_INSN_DELETED)
(note 281 277 282 13 NOTE_INSN_DELETED)
(note 282 281 260 13 NOTE_INSN_DELETED)
(insn 260 282 261 13 (set (reg:SI 0 r0)
        (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":319:60 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 261 260 382 13 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 382 261 265 13 (set (reg:DF 2 r2)
        (reg:DF 32 s16 [255])) "../System/pomozne_funkcije.c":319:60 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 265 382 267 13 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:60 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 267 265 269 13 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 269 267 270 13 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:66 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 270 269 274 13 (set (reg:DF 4 r4 [238])
        (reg:DF 0 r0 [277])) "../System/pomozne_funkcije.c":319:66 739 {*thumb2_movdf_vfp}
     (nil))
(insn 274 270 275 13 (set (reg/f:SI 3 r3 [242])
        (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                (const_int 1344 [0x540])))) "../System/pomozne_funkcije.c":319:95 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                (const_int 1344 [0x540])))
        (nil)))
(insn 275 274 276 13 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 3 r3 [242]) [1 sp_original[3].y+0 S4 A32])) "../System/pomozne_funkcije.c":319:95 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                    (const_int 1344 [0x540]))) [1 sp_original[3].y+0 S4 A32])
        (nil)))
(call_insn/u 276 275 415 13 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:95 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 415 276 279 13 (set (reg:DF 2 r2 [278])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":319:95 739 {*thumb2_movdf_vfp}
     (nil))
(insn 279 415 280 13 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [238])) "../System/pomozne_funkcije.c":319:52 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 280 279 283 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":319:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpeq") [flags 0x41]  <function_decl 00000000067e4800 __aeabi_dcmpeq>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(jump_insn 283 280 284 13 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [279])
                        (const_int 0 [0]))
                    (label_ref:SI 387)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":319:52 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 387)
(code_label 284 283 285 14 97 (nil) [1 uses])
(note 285 284 286 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 286 285 287 14 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 287 286 288 14 (var_location:SI done (reg/v:SI 8 r8 [orig:141 done ] [141])) -1
     (nil))
(debug_insn 288 287 460 14 (debug_marker) "../System/pomozne_funkcije.c":322:4 -1
     (nil))
(insn 460 288 289 14 (set (reg/v:SI 3 r3 [orig:141 done ] [141])
        (reg/v:SI 8 r8 [orig:141 done ] [141])) "../System/pomozne_funkcije.c":322:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 289 460 290 14 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:141 done ] [141])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":322:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 290 289 291 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 387)
            (pc))) "../System/pomozne_funkcije.c":322:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 282183612 (nil))
 -> 387)
(note 291 290 429 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 429 291 432 15 (set (reg/v:SI 4 r4 [orig:128 tmpy ] [128])
        (reg/v:SI 9 r9 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":324:33 728 {*thumb2_movsi_vfp}
     (nil))
(insn 432 429 295 15 (set (reg:DF 8 r8 [255])
        (reg:DF 32 s16 [255])) "../System/pomozne_funkcije.c":324:33 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(note 295 432 311 15 NOTE_INSN_DELETED)
(note 311 295 292 15 NOTE_INSN_DELETED)
(debug_insn 292 311 293 15 (debug_marker) "../System/pomozne_funkcije.c":324:3 -1
     (nil))
(insn 293 292 294 15 (set (reg:DF 0 r0)
        (reg:DF 6 r6 [orig:133 _60 ] [133])) "../System/pomozne_funkcije.c":324:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 294 293 484 15 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":324:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 484 294 296 15 (set (reg:SI 5 r5 [orig:126 ivtmp.156 ] [126])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])) "../System/pomozne_funkcije.c":324:33 728 {*thumb2_movsi_vfp}
     (nil))
(insn 296 484 297 15 (set (mem:SF (plus:SI (reg:SI 5 r5 [orig:126 ivtmp.156 ] [126])
                (const_int 8 [0x8])) [1 MEM[base: _22, offset: 8B]+0 S4 A32])
        (reg:SF 0 r0 [280])) "../System/pomozne_funkcije.c":324:33 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 297 296 298 15 (debug_marker) "../System/pomozne_funkcije.c":325:3 -1
     (nil))
(insn 298 297 299 15 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:128 tmpy ] [128])) "../System/pomozne_funkcije.c":325:27 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 299 298 386 15 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":325:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 386 299 303 15 (set (reg:DF 2 r2)
        (reg:DF 8 r8 [255])) "../System/pomozne_funkcije.c":325:27 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 303 386 305 15 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":325:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 00000000067e4300 __aeabi_dadd>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 305 303 307 15 (set (reg:DF 2 r2)
        (reg:DF 10 r10 [orig:132 _59 ] [132])) "../System/pomozne_funkcije.c":325:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 307 305 310 15 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":325:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 310 307 312 15 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":325:33 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 312 310 313 15 (set (mem:SF (plus:SI (reg:SI 5 r5 [orig:126 ivtmp.156 ] [126])
                (const_int 12 [0xc])) [1 MEM[base: _22, offset: 12B]+0 S4 A32])
        (reg:SF 0 r0 [281])) "../System/pomozne_funkcije.c":325:33 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 313 312 314 15 (debug_marker) "../System/pomozne_funkcije.c":303:30 -1
     (nil))
(debug_insn 314 313 315 15 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 315 314 316 15 (debug_marker) "../System/pomozne_funkcije.c":303:14 -1
     (nil))
(insn 316 315 482 15 (set (reg:SI 3 r3 [orig:126 ivtmp.156 ] [126])
        (plus:SI (reg:SI 5 r5 [orig:126 ivtmp.156 ] [126])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":303:2 7 {*arm_addsi3}
     (nil))
(insn 482 316 466 15 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [12 %sfp+-4 S4 A32])
        (reg:SI 3 r3 [orig:126 ivtmp.156 ] [126])) "../System/pomozne_funkcije.c":303:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 466 482 318 15 (set (reg:SI 2 r2 [321])
        (const:SI (plus:SI (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
                (const_int 1776 [0x6f0])))) "../System/pomozne_funkcije.c":303:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 318 466 319 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [321])
            (reg:SI 3 r3 [orig:126 ivtmp.156 ] [126]))) "../System/pomozne_funkcije.c":303:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 319 318 426 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 317)
            (pc))) "../System/pomozne_funkcije.c":303:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 805306364 (nil))
 -> 317)
(note 426 319 433 NOTE_INSN_DELETED)
(note 433 426 0 NOTE_INSN_DELETED)

;; Function init (init, funcdef_no=869, decl_uid=12004, cgraph_uid=873, symbol_order=880)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 231:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 76:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) r  (1) I {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 91:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 92:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 107:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=198 from oldreg=154, assigning class VFP_LO_REGS to r198
  107: r155:SF=float(r198:SI)
      REG_DEAD r154:SI
      REG_EQUIV [r150:SI]
    Inserting insn reload before:
  243: r198:SI=r154:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 243:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 116:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=199 from oldreg=160, assigning class VFP_LO_REGS to r199
  116: r161:SF=float(r199:SI)
      REG_DEAD r160:SI
      REG_EQUIV [r156:SI]
    Inserting insn reload before:
  244: r199:SI=r160:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 244:  (0) *t  (1) r {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=13,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 120:  (0) r  (1) mHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 108:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) I {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 121:  (0) m  (1) r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 125:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) US {*sibcall_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 165:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 166:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 167:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 232:  (0) r  (1) I {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 182:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 183:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 190:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 192:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 191:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 201:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 198:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=200 from oldreg=178, assigning class VFP_LO_REGS to r200
  198: r179:SF=float(r200:SI)
      REG_DEAD r178:SI
      REG_EQUIV [r174:SI]
    Inserting insn reload before:
  245: r200:SI=r178:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 245:  (0) *t  (1) r {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 207:  (0) =t  (1) t {*floatsisf2_vfp}
      Creating newreg=201 from oldreg=184, assigning class VFP_LO_REGS to r201
  207: r185:SF=float(r201:SI)
      REG_DEAD r184:SI
      REG_EQUIV [r180:SI]
    Inserting insn reload before:
  246: r201:SI=r184:SI

            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 246:  (0) *t  (1) r {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 210:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=13,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 211:  (0) r  (1) mHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 214:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 199:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 208:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) r  (1) I {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 212:  (0) m  (1) r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 219:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 216:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) US {*sibcall_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14

********** Pseudo live ranges #1: **********

  BB 8
   Insn 129: point = 0, n_alt = 1
   Insn 125: point = 0, n_alt = 7
   Insn 128: point = 1, n_alt = 5
   Insn 121: point = 1, n_alt = 6
   Insn 124: point = 2, n_alt = 1
   Insn 117: point = 3, n_alt = 4
   Insn 108: point = 4, n_alt = 4
   Insn 123: point = 5, n_alt = 5
   Insn 120: point = 6, n_alt = 5
   Insn 119: point = 7, n_alt = 5
   Insn 116: point = 8, n_alt = 0
   Insn 244: point = 10, n_alt = 9
	Hard reg 3 is preferable by r199 with profit 56
   Insn 107: point = 12, n_alt = 0
   Insn 243: point = 14, n_alt = 9
	Hard reg 2 is preferable by r198 with profit 56
   Insn 114: point = 16, n_alt = 1
   Insn 105: point = 18, n_alt = 1
   Insn 113: point = 20, n_alt = 1
   Insn 104: point = 22, n_alt = 1
   Insn 110: point = 23, n_alt = 5
   Insn 100: point = 24, n_alt = 5
   Insn 101: point = 26, n_alt = 5
   Insn 99: point = 27, n_alt = 5
  BB 7
   Insn 95: point = 28, n_alt = -1
   Insn 94: point = 28, n_alt = 1
   Insn 92: point = 28, n_alt = 4
   Insn 86: point = 29, n_alt = -1
   Insn 91: point = 29, n_alt = 4
   Insn 230: point = 30, n_alt = 1
   Insn 85: point = 30, n_alt = -2
   Insn 84: point = 30, n_alt = -2
  BB 6
   Insn 76: point = 31, n_alt = 4
   Insn 75: point = 32, n_alt = 5
   Insn 67: point = 33, n_alt = -1
   Insn 74: point = 33, n_alt = 5
   Insn 66: point = 34, n_alt = 1
   Insn 64: point = 34, n_alt = -1
   Insn 62: point = 34, n_alt = -1
   Insn 60: point = 34, n_alt = -1
   Insn 55: point = 34, n_alt = -1
  BB 5
   Insn 52: point = 34, n_alt = 0
   Insn 234: point = 35, n_alt = -2
   Insn 47: point = 36, n_alt = -1
   Insn 231: point = 36, n_alt = 1
  BB 3
   Insn 236: point = 36, n_alt = -1
   Insn 36: point = 36, n_alt = -1
   Insn 33: point = 36, n_alt = -1
   Insn 29: point = 36, n_alt = 6
   Insn 32: point = 37, n_alt = 5
  BB 4
   Insn 42: point = 38, n_alt = -1
  BB 14
   Insn 220: point = 38, n_alt = 1
   Insn 216: point = 38, n_alt = 7
   Insn 219: point = 39, n_alt = 5
   Insn 212: point = 39, n_alt = 6
   Insn 215: point = 40, n_alt = 1
   Insn 208: point = 41, n_alt = 4
   Insn 199: point = 42, n_alt = 4
   Insn 214: point = 43, n_alt = 5
   Insn 211: point = 44, n_alt = 5
   Insn 210: point = 45, n_alt = 5
   Insn 207: point = 46, n_alt = 0
   Insn 246: point = 48, n_alt = 9
	Hard reg 3 is preferable by r201 with profit 110
   Insn 198: point = 50, n_alt = 0
   Insn 245: point = 52, n_alt = 9
	Hard reg 2 is preferable by r200 with profit 110
   Insn 205: point = 54, n_alt = 1
   Insn 196: point = 56, n_alt = 1
   Insn 204: point = 58, n_alt = 1
   Insn 195: point = 60, n_alt = 1
   Insn 201: point = 61, n_alt = 5
   Insn 191: point = 62, n_alt = 5
   Insn 192: point = 64, n_alt = 5
   Insn 190: point = 65, n_alt = 5
  BB 13
   Insn 186: point = 66, n_alt = -1
   Insn 185: point = 66, n_alt = 1
   Insn 183: point = 66, n_alt = 4
   Insn 177: point = 67, n_alt = -1
   Insn 182: point = 67, n_alt = 4
   Insn 232: point = 68, n_alt = 1
   Insn 176: point = 68, n_alt = -2
   Insn 175: point = 68, n_alt = -2
  BB 12
   Insn 167: point = 69, n_alt = 4
   Insn 166: point = 70, n_alt = 5
   Insn 158: point = 71, n_alt = -1
   Insn 165: point = 71, n_alt = 5
   Insn 157: point = 72, n_alt = 1
  BB 11
   Insn 154: point = 72, n_alt = 0
   Insn 235: point = 73, n_alt = -2
   Insn 149: point = 74, n_alt = -1
   Insn 233: point = 74, n_alt = 1
  BB 9
   Insn 238: point = 74, n_alt = -1
   Insn 138: point = 74, n_alt = -1
   Insn 136: point = 74, n_alt = -1
   Insn 135: point = 74, n_alt = 5
  BB 2
   Insn 23: point = 74, n_alt = -1
   Insn 22: point = 74, n_alt = 0
   Insn 21: point = 75, n_alt = 1
   Insn 20: point = 76, n_alt = 5
   Insn 18: point = 77, n_alt = -1
   Insn 17: point = 77, n_alt = 1
   Insn 16: point = 77, n_alt = -2
   Insn 15: point = 77, n_alt = 1
   Insn 14: point = 77, n_alt = 1
   Insn 13: point = 77, n_alt = 7
   Insn 10: point = 77, n_alt = -1
   Insn 9: point = 77, n_alt = 1
   Insn 12: point = 77, n_alt = 1
   Insn 7: point = 78, n_alt = -1
   Insn 6: point = 78, n_alt = 1
  BB 10
   Insn 144: point = 78, n_alt = -1
 r115: [21..24]
 r121: [59..62]
 r127: [66..69]
 r132: [28..33]
 r133: [66..70]
 r134: [66..71]
 r135: [28..31]
 r136: [28..32]
 r137: [74..77] [36..37]
 r138: [74..76] [36..37]
 r139: [74..75]
 r149: [25..27]
 r150: [4..26]
 r153: [19..22]
 r154: [15..18]
 r155: [4..12]
 r156: [3..23]
 r159: [17..20]
 r160: [11..16]
 r161: [3..8]
 r162: [1..7]
 r163: [1..6]
 r164: [0..5]
 r165: [0..2]
 r173: [63..65]
 r174: [42..64]
 r177: [57..60]
 r178: [53..56]
 r179: [42..50]
 r180: [41..61]
 r183: [55..58]
 r184: [49..54]
 r185: [41..46]
 r186: [39..45]
 r187: [39..44]
 r188: [38..43]
 r189: [38..40]
 r195: [34..35]
 r196: [72..73]
 r198: [13..14]
 r199: [9..10]
 r200: [51..52]
 r201: [47..48]
Compressing live ranges: from 78 to 52 - 66%
Ranges after the compression:
 r115: [16..17]
 r121: [42..43]
 r127: [46..47]
 r132: [20..21]
 r133: [46..47]
 r134: [46..47]
 r135: [20..21]
 r136: [20..21]
 r137: [50..51] [24..25]
 r138: [50..51] [24..25]
 r139: [50..51]
 r149: [18..19]
 r150: [2..19]
 r153: [14..17]
 r154: [10..13]
 r155: [2..7]
 r156: [2..17]
 r159: [12..15]
 r160: [6..11]
 r161: [2..3]
 r162: [0..3]
 r163: [0..3]
 r164: [0..3]
 r165: [0..1]
 r173: [44..45]
 r174: [28..45]
 r177: [40..43]
 r178: [36..39]
 r179: [28..33]
 r180: [28..43]
 r183: [38..41]
 r184: [32..37]
 r185: [28..29]
 r186: [26..29]
 r187: [26..29]
 r188: [26..29]
 r189: [26..27]
 r195: [22..23]
 r196: [48..49]
 r198: [8..9]
 r199: [4..5]
 r200: [34..35]
 r201: [30..31]

********** Assignment #1: **********

	 Assigning to 200 (cl=VFP_LO_REGS, orig=178, freq=220, tfirst=200, tfreq=220)...
	   Assign 31 to reload r200 (freq=220)
	 Assigning to 201 (cl=VFP_LO_REGS, orig=184, freq=220, tfirst=201, tfreq=220)...
	   Assign 31 to reload r201 (freq=220)
	 Assigning to 198 (cl=VFP_LO_REGS, orig=154, freq=112, tfirst=198, tfreq=112)...
	   Assign 31 to reload r198 (freq=112)
	 Assigning to 199 (cl=VFP_LO_REGS, orig=160, freq=112, tfirst=199, tfreq=112)...
	   Assign 31 to reload r199 (freq=112)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=24, prev_offset=24)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 100
changing reg in insn 113
changing reg in insn 113
changing reg in insn 104
changing reg in insn 104
changing reg in insn 191
changing reg in insn 204
changing reg in insn 204
changing reg in insn 195
changing reg in insn 195
changing reg in insn 167
changing reg in insn 185
changing reg in insn 91
changing reg in insn 74
changing reg in insn 76
changing reg in insn 85
changing reg in insn 94
changing reg in insn 91
changing reg in insn 183
changing reg in insn 166
changing reg in insn 175
changing reg in insn 183
changing reg in insn 182
changing reg in insn 165
changing reg in insn 167
changing reg in insn 176
changing reg in insn 185
changing reg in insn 182
changing reg in insn 76
changing reg in insn 94
changing reg in insn 92
changing reg in insn 75
changing reg in insn 84
changing reg in insn 92
changing reg in insn 12
changing reg in insn 16
changing reg in insn 13
changing reg in insn 20
changing reg in insn 29
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 108
changing reg in insn 107
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 110
changing reg in insn 117
changing reg in insn 116
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 121
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 125
changing reg in insn 124
changing reg in insn 125
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 199
changing reg in insn 198
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 208
changing reg in insn 207
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 207
changing reg in insn 208
changing reg in insn 210
changing reg in insn 212
changing reg in insn 211
changing reg in insn 212
changing reg in insn 214
changing reg in insn 216
changing reg in insn 215
changing reg in insn 216
changing reg in insn 234
changing reg in insn 52
changing reg in insn 235
changing reg in insn 154
deleting insn with uid = 234.
deleting insn with uid = 235.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 220.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 19 count 15 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 19 count 21 (  1.4)


init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 30 [s14] 31 [s15] 100 [cc]
;;  ref usage 	r0={37d,19u} r1={27d,5u} r2={32d,10u} r3={34d,19u} r4={7d,13u,2e} r5={6d,6u,2e} r6={2d,2u} r12={42d} r13={1d,37u} r14={22d} r15={21d} r16={22d} r17={22d} r18={22d} r19={22d} r20={22d} r21={22d} r22={22d} r23={22d} r24={22d} r25={22d} r26={22d} r27={22d} r28={22d} r29={22d} r30={24d,2u} r31={28d,6u} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r77={21d} r78={21d} r79={21d} r80={21d} r81={21d} r82={21d} r83={21d} r84={21d} r85={21d} r86={21d} r87={21d} r88={21d} r89={21d} r90={21d} r91={21d} r92={21d} r93={21d} r94={21d} r95={21d} r96={21d} r97={21d} r98={21d} r99={21d} r100={26d,3u} r101={21d} r104={21d} r105={21d} r106={21d} 
;;    total ref usage 1919{1793d,122u,4e} in 164{143 regular + 21 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/pomozne_funkcije.c":110:2 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":110:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetBackcolor") [flags 0x41]  <function_decl 000000000787ca00 UG_SetBackcolor>) [0 UG_SetBackcolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":110:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetBackcolor") [flags 0x41]  <function_decl 000000000787ca00 UG_SetBackcolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 8 7 12 2 (debug_marker) "../System/pomozne_funkcije.c":111:2 -1
     (nil))
(insn 12 8 9 2 (set (reg:SI 4 r4 [137])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 9 12 10 2 (set (reg:SI 0 r0)
        (const_int 63488 [0xf800])) "../System/pomozne_funkcije.c":111:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":111:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 11 10 13 2 (debug_marker) "../System/pomozne_funkcije.c":113:2 -1
     (nil))
(insn 13 11 14 2 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 4 r4 [137])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 r1)
        (reg:SI 4 r4 [137])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":113:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 18 17 19 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":113:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 19 18 20 2 (debug_marker) "../System/pomozne_funkcije.c":114:2 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("firstInit") [flags 0xc0]  <var_decl 0000000007a6f1b0 firstInit>)) "../System/pomozne_funkcije.c":114:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("firstInit") [flags 0xc0]  <var_decl 0000000007a6f1b0 firstInit>)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 2 r2 [orig:139 firstInit ] [139])
        (zero_extend:SI (mem/c:QI (reg/f:SI 3 r3 [138]) [0 firstInit+0 S1 A8]))) "../System/pomozne_funkcije.c":114:4 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("firstInit") [flags 0xc0]  <var_decl 0000000007a6f1b0 firstInit>) [0 firstInit+0 S1 A8]))
        (nil)))
(insn 22 21 23 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:139 firstInit ] [139])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":114:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "../System/pomozne_funkcije.c":114:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 131)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 32 3 (debug_marker) "../System/pomozne_funkcije.c":115:3 -1
     (nil))
(insn 32 25 29 3 (set (reg:SI 0 r0)
        (symbol_ref:SI ("t_cover_photo_complete") [flags 0x82]  <var_decl 0000000007c5c1b0 t_cover_photo_complete>)) "../System/pomozne_funkcije.c":116:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 29 32 30 3 (set (mem/c:QI (reg/f:SI 3 r3 [138]) [0 firstInit+0 S1 A8])
        (reg:QI 4 r4 [137])) "../System/pomozne_funkcije.c":115:13 263 {*arm_movqi_insn}
     (nil))
(debug_insn 30 29 33 3 (debug_marker) "../System/pomozne_funkcije.c":116:3 -1
     (nil))
(call_insn 33 30 34 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("draw_full_screen_image") [flags 0x3]  <function_decl 0000000007a76700 draw_full_screen_image>) [0 draw_full_screen_image S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":116:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("draw_full_screen_image") [flags 0x3]  <function_decl 0000000007a76700 draw_full_screen_image>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 34 33 35 3 (debug_marker) "../System/pomozne_funkcije.c":117:3 -1
     (nil))
(debug_insn 35 34 36 3 (debug_marker) "../System/pomozne_funkcije.c":118:3 -1
     (nil))
(call_insn 36 35 37 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":118:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 37 36 236 3 (debug_marker) "../System/pomozne_funkcije.c":119:3 -1
     (nil))
(jump_insn 236 37 237 3 (set (pc)
        (label_ref 43)) "../System/pomozne_funkcije.c":119:8 284 {*arm_jump}
     (nil)
 -> 43)
(barrier 237 236 50)
(code_label 50 237 40 4 117 (nil) [1 uses])
(note 40 50 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 42 40 43 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":120:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(code_label 43 42 44 5 116 (nil) [1 uses])
(note 44 43 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 48 44 51 5 NOTE_INSN_DELETED)
(note 51 48 45 5 NOTE_INSN_DELETED)
(debug_insn 45 51 231 5 (debug_marker) "../System/pomozne_funkcije.c":119:8 -1
     (nil))
(insn 231 45 47 5 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":119:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 47 231 41 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":119:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 41 47 52 5 (debug_marker) "../System/pomozne_funkcije.c":120:4 -1
     (nil))
(jump_insn 52 41 53 5 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [195])
                        (const_int 0 [0]))
                    (label_ref 50)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":119:8 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 50)
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 54 53 55 6 (debug_marker) "../System/pomozne_funkcije.c":122:3 -1
     (nil))
(call_insn 55 54 225 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000007732700 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":122:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000007732700 HAL_GetTick>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 225 55 57 6 (var_location:SI D#12 (reg:SI 0 r0)) -1
     (nil))
(debug_insn 57 225 58 6 (var_location:SI seed (debug_expr:SI D#12)) "../System/pomozne_funkcije.c":122:10 -1
     (nil))
(debug_insn 58 57 60 6 (debug_marker) "../System/pomozne_funkcije.c":123:3 -1
     (nil))
(call_insn 60 58 61 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("srand") [flags 0x41]  <function_decl 0000000007d1d100 srand>) [0 srand S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":123:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("srand") [flags 0x41]  <function_decl 0000000007d1d100 srand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 61 60 62 6 (debug_marker) "../System/pomozne_funkcije.c":124:3 -1
     (nil))
(call_insn 62 61 63 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("generateMap") [flags 0x41]  <function_decl 0000000007d2f600 generateMap>) [0 generateMap S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":124:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("generateMap") [flags 0x41]  <function_decl 0000000007d2f600 generateMap>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 63 62 64 6 (debug_marker) "../System/pomozne_funkcije.c":125:3 -1
     (nil))
(call_insn 64 63 65 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("create_level_one_sprites") [flags 0x3]  <function_decl 0000000007a76a00 create_level_one_sprites>) [0 create_level_one_sprites S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":125:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_level_one_sprites") [flags 0x3]  <function_decl 0000000007a76a00 create_level_one_sprites>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 65 64 66 6 (debug_marker) "../System/pomozne_funkcije.c":126:3 -1
     (nil))
(insn 66 65 74 6 (set (reg:SI 0 r0)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":126:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 74 66 67 6 (set (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
        (nil)))
(call_insn 67 74 68 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>) [0 LEDs_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":126:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 68 67 69 6 (debug_marker) "../System/pomozne_funkcije.c":127:3 -1
     (nil))
(debug_insn 69 68 70 6 (debug_marker:BLK) "../System/pomozne_funkcije.c":330:6 -1
     (nil))
(debug_insn 70 69 71 6 (debug_marker) "../System/pomozne_funkcije.c":331:2 -1
     (nil))
(debug_insn 71 70 72 6 (debug_marker) "../System/pomozne_funkcije.c":331:6 -1
     (nil))
(debug_insn 72 71 73 6 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 73 72 75 6 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 75 73 76 6 (set (reg:SI 5 r5 [orig:136 ivtmp.167 ] [136])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
        (nil)))
(insn 76 75 93 6 (set (reg/f:SI 6 r6 [orig:135 _75 ] [135])
        (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])
            (const_int 1776 [0x6f0]))) 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 1776 [0x6f0])))
        (nil)))
(code_label 93 76 77 7 118 (nil) [1 uses])
(note 77 93 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 78 77 79 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 79 78 84 7 (debug_marker) "../System/pomozne_funkcije.c":332:3 -1
     (nil))
(insn 84 79 85 7 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:136 ivtmp.167 ] [136])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 230 7 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 230 85 91 7 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 91 230 86 7 (set (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])
        (plus:SI (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(call_insn 86 91 88 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":332:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 88 86 89 7 (debug_marker) "../System/pomozne_funkcije.c":331:30 -1
     (nil))
(debug_insn 89 88 90 7 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 90 89 92 7 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 92 90 94 7 (set (reg:SI 5 r5 [orig:136 ivtmp.167 ] [136])
        (plus:SI (reg:SI 5 r5 [orig:136 ivtmp.167 ] [136])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(insn 94 92 95 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 4 r4 [orig:132 ivtmp.166 ] [132])
            (reg/f:SI 6 r6 [orig:135 _75 ] [135]))) "../System/pomozne_funkcije.c":331:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 95 94 96 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 93)
            (pc))) "../System/pomozne_funkcije.c":331:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 805306364 (nil))
 -> 93)
(note 96 95 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 103 96 112 8 NOTE_INSN_DELETED)
(note 112 103 97 8 NOTE_INSN_DELETED)
(debug_insn 97 112 98 8 (var_location:SI i (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":127:3 -1
     (nil))
(debug_insn 98 97 99 8 (debug_marker) "../System/pomozne_funkcije.c":128:3 -1
     (nil))
(insn 99 98 101 8 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>)) "../System/pomozne_funkcije.c":128:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>)
        (nil)))
(insn 101 99 100 8 (set (reg/f:SI 5 r5 [150])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 000000000786a2d0 px>)) "../System/pomozne_funkcije.c":128:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 000000000786a2d0 px>)
        (nil)))
(insn 100 101 110 8 (set (reg:SI 3 r3 [orig:115 Blocksize.1_3 ] [115])
        (mem/c:SI (reg/f:SI 3 r3 [149]) [5 Blocksize+0 S4 A32])) "../System/pomozne_funkcije.c":128:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>) [5 Blocksize+0 S4 A32])
        (nil)))
(insn 110 100 104 8 (set (reg/f:SI 4 r4 [156])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 000000000786a360 py>)) "../System/pomozne_funkcije.c":129:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 000000000786a360 py>)
        (nil)))
(insn 104 110 113 8 (set (reg:SI 2 r2 [153])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:115 Blocksize.1_3 ] [115])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [orig:115 Blocksize.1_3 ] [115]))) "../System/pomozne_funkcije.c":128:10 318 {*add_shiftsi}
     (nil))
(insn 113 104 105 8 (set (reg:SI 3 r3 [159])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:115 Blocksize.1_3 ] [115])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [orig:115 Blocksize.1_3 ] [115]))) "../System/pomozne_funkcije.c":129:10 318 {*add_shiftsi}
     (nil))
(insn 105 113 114 8 (set (reg:SI 2 r2 [154])
        (ashift:SI (reg:SI 2 r2 [153])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":128:10 147 {*arm_shiftsi3}
     (nil))
(insn 114 105 243 8 (set (reg:SI 3 r3 [160])
        (ashift:SI (reg:SI 3 r3 [159])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":129:10 147 {*arm_shiftsi3}
     (nil))
(insn 243 114 107 8 (set (reg:SI 31 s15 [154])
        (reg:SI 2 r2 [154])) "../System/pomozne_funkcije.c":128:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 107 243 244 8 (set (reg:SF 30 s14 [155])
        (float:SF (reg:SI 31 s15 [154]))) "../System/pomozne_funkcije.c":128:6 809 {*floatsisf2_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 5 r5 [150]) [1 px+0 S4 A32])
        (nil)))
(insn 244 107 116 8 (set (reg:SI 31 s15 [160])
        (reg:SI 3 r3 [160])) "../System/pomozne_funkcije.c":129:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 116 244 119 8 (set (reg:SF 31 s15 [161])
        (float:SF (reg:SI 31 s15 [160]))) "../System/pomozne_funkcije.c":129:6 809 {*floatsisf2_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 4 r4 [156]) [1 py+0 S4 A32])
        (nil)))
(insn 119 116 120 8 (set (reg/f:SI 1 r1 [162])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 000000000786a3f0 angle>)) "../System/pomozne_funkcije.c":130:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 000000000786a3f0 angle>)
        (nil)))
(insn 120 119 123 8 (set (reg:SF 0 r0 [163])
        (const_double:SF 7.8539752960205078125e-1 [0x0.c90fdp+0])) "../System/pomozne_funkcije.c":130:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.8539752960205078125e-1 [0x0.c90fdp+0])
        (nil)))
(insn 123 120 108 8 (set (reg/f:SI 3 r3 [164])
        (const_int 1073744896 [0x40000c00])) "../System/pomozne_funkcije.c":131:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1073744896 [0x40000c00])
        (nil)))
(insn 108 123 109 8 (set (mem/c:SF (reg/f:SI 5 r5 [150]) [1 px+0 S4 A32])
        (reg:SF 30 s14 [155])) "../System/pomozne_funkcije.c":128:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 109 108 117 8 (debug_marker) "../System/pomozne_funkcije.c":129:3 -1
     (nil))
(insn 117 109 118 8 (set (mem/c:SF (reg/f:SI 4 r4 [156]) [1 py+0 S4 A32])
        (reg:SF 31 s15 [161])) "../System/pomozne_funkcije.c":129:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 118 117 124 8 (debug_marker) "../System/pomozne_funkcije.c":130:3 -1
     (nil))
(insn 124 118 121 8 (set (reg:SI 2 r2 [165])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":131:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 121 124 122 8 (set (mem/c:SF (reg/f:SI 1 r1 [162]) [1 angle+0 S4 A32])
        (reg:SF 0 r0 [163])) "../System/pomozne_funkcije.c":130:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 122 121 128 8 (debug_marker) "../System/pomozne_funkcije.c":131:3 -1
     (nil))
(insn 128 122 125 8 (set (reg:SI 0 r0)
        (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)) "../System/pomozne_funkcije.c":132:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 125 128 126 8 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [164])
                (const_int 56 [0x38])) [7 MEM[(struct TIM_TypeDef *)1073744896B].CCR2+0 S4 A64])
        (reg:SI 2 r2 [165])) "../System/pomozne_funkcije.c":131:14 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 126 125 129 8 (debug_marker) "../System/pomozne_funkcije.c":132:3 -1
     (nil))
(call_insn/j 129 126 130 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/pomozne_funkcije.c":132:3 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 130 129 131)
(code_label 131 130 132 9 115 (nil) [1 uses])
(note 132 131 133 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 133 132 135 9 (debug_marker) "../System/pomozne_funkcije.c":134:3 -1
     (nil))
(insn 135 133 136 9 (set (reg:SI 0 r0)
        (symbol_ref:SI ("t_cover_photo_complete") [flags 0x82]  <var_decl 0000000007c5c1b0 t_cover_photo_complete>)) "../System/pomozne_funkcije.c":134:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 136 135 137 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("draw_full_screen_image") [flags 0x3]  <function_decl 0000000007a76700 draw_full_screen_image>) [0 draw_full_screen_image S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":134:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("draw_full_screen_image") [flags 0x3]  <function_decl 0000000007a76700 draw_full_screen_image>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 137 136 138 9 (debug_marker) "../System/pomozne_funkcije.c":135:3 -1
     (nil))
(call_insn 138 137 139 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":135:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 139 138 238 9 (debug_marker) "../System/pomozne_funkcije.c":136:3 -1
     (nil))
(jump_insn 238 139 239 9 (set (pc)
        (label_ref 145)) "../System/pomozne_funkcije.c":136:8 284 {*arm_jump}
     (nil)
 -> 145)
(barrier 239 238 152)
(code_label 152 239 142 10 120 (nil) [1 uses])
(note 142 152 144 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 144 142 145 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":137:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(code_label 145 144 146 11 119 (nil) [1 uses])
(note 146 145 150 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 150 146 153 11 NOTE_INSN_DELETED)
(note 153 150 147 11 NOTE_INSN_DELETED)
(debug_insn 147 153 233 11 (debug_marker) "../System/pomozne_funkcije.c":136:8 -1
     (nil))
(insn 233 147 149 11 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":136:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 149 233 143 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":136:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 143 149 154 11 (debug_marker) "../System/pomozne_funkcije.c":137:4 -1
     (nil))
(jump_insn 154 143 155 11 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [196])
                        (const_int 0 [0]))
                    (label_ref 152)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":136:8 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 152)
(note 155 154 156 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 156 155 157 12 (debug_marker) "../System/pomozne_funkcije.c":139:3 -1
     (nil))
(insn 157 156 165 12 (set (reg:SI 0 r0)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":139:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 165 157 158 12 (set (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
        (nil)))
(call_insn 158 165 159 12 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>) [0 LEDs_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":139:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 159 158 160 12 (debug_marker) "../System/pomozne_funkcije.c":140:3 -1
     (nil))
(debug_insn 160 159 161 12 (debug_marker:BLK) "../System/pomozne_funkcije.c":330:6 -1
     (nil))
(debug_insn 161 160 162 12 (debug_marker) "../System/pomozne_funkcije.c":331:2 -1
     (nil))
(debug_insn 162 161 163 12 (debug_marker) "../System/pomozne_funkcije.c":331:6 -1
     (nil))
(debug_insn 163 162 164 12 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 164 163 166 12 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 166 164 167 12 (set (reg:SI 5 r5 [orig:133 ivtmp.175 ] [133])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
        (nil)))
(insn 167 166 184 12 (set (reg/f:SI 6 r6 [orig:127 _47 ] [127])
        (plus:SI (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134])
            (const_int 1776 [0x6f0]))) 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 1776 [0x6f0])))
        (nil)))
(code_label 184 167 168 13 121 (nil) [1 uses])
(note 168 184 169 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 169 168 170 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 170 169 175 13 (debug_marker) "../System/pomozne_funkcije.c":332:3 -1
     (nil))
(insn 175 170 176 13 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:133 ivtmp.175 ] [133])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 176 175 232 13 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 232 176 182 13 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 182 232 177 13 (set (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134])
        (plus:SI (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(call_insn 177 182 179 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":332:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 179 177 180 13 (debug_marker) "../System/pomozne_funkcije.c":331:30 -1
     (nil))
(debug_insn 180 179 181 13 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 181 180 183 13 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 183 181 185 13 (set (reg:SI 5 r5 [orig:133 ivtmp.175 ] [133])
        (plus:SI (reg:SI 5 r5 [orig:133 ivtmp.175 ] [133])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(insn 185 183 186 13 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 6 r6 [orig:127 _47 ] [127])
            (reg:SI 4 r4 [orig:134 ivtmp.174 ] [134]))) "../System/pomozne_funkcije.c":331:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 186 185 187 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 184)
            (pc))) "../System/pomozne_funkcije.c":331:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 805306372 (nil))
 -> 184)
(note 187 186 194 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 194 187 203 14 NOTE_INSN_DELETED)
(note 203 194 188 14 NOTE_INSN_DELETED)
(debug_insn 188 203 189 14 (var_location:SI i (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":140:3 -1
     (nil))
(debug_insn 189 188 190 14 (debug_marker) "../System/pomozne_funkcije.c":141:3 -1
     (nil))
(insn 190 189 192 14 (set (reg/f:SI 3 r3 [173])
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>)) "../System/pomozne_funkcije.c":141:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>)
        (nil)))
(insn 192 190 191 14 (set (reg/f:SI 5 r5 [174])
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 000000000786a2d0 px>)) "../System/pomozne_funkcije.c":141:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 000000000786a2d0 px>)
        (nil)))
(insn 191 192 201 14 (set (reg:SI 3 r3 [orig:121 Blocksize.3_9 ] [121])
        (mem/c:SI (reg/f:SI 3 r3 [173]) [5 Blocksize+0 S4 A32])) "../System/pomozne_funkcije.c":141:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 000000000786a7e0 Blocksize>) [5 Blocksize+0 S4 A32])
        (nil)))
(insn 201 191 195 14 (set (reg/f:SI 4 r4 [180])
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 000000000786a360 py>)) "../System/pomozne_funkcije.c":142:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 000000000786a360 py>)
        (nil)))
(insn 195 201 204 14 (set (reg:SI 2 r2 [177])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:121 Blocksize.3_9 ] [121])
                (const_int 2 [0x2]))
            (reg:SI 3 r3 [orig:121 Blocksize.3_9 ] [121]))) "../System/pomozne_funkcije.c":141:10 318 {*add_shiftsi}
     (nil))
(insn 204 195 196 14 (set (reg:SI 3 r3 [183])
        (plus:SI (ashift:SI (reg:SI 3 r3 [orig:121 Blocksize.3_9 ] [121])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [orig:121 Blocksize.3_9 ] [121]))) "../System/pomozne_funkcije.c":142:10 318 {*add_shiftsi}
     (nil))
(insn 196 204 205 14 (set (reg:SI 2 r2 [178])
        (ashift:SI (reg:SI 2 r2 [177])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":141:10 147 {*arm_shiftsi3}
     (nil))
(insn 205 196 245 14 (set (reg:SI 3 r3 [184])
        (ashift:SI (reg:SI 3 r3 [183])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":142:10 147 {*arm_shiftsi3}
     (nil))
(insn 245 205 198 14 (set (reg:SI 31 s15 [178])
        (reg:SI 2 r2 [178])) "../System/pomozne_funkcije.c":141:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 198 245 246 14 (set (reg:SF 30 s14 [179])
        (float:SF (reg:SI 31 s15 [178]))) "../System/pomozne_funkcije.c":141:6 809 {*floatsisf2_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 5 r5 [174]) [1 px+0 S4 A32])
        (nil)))
(insn 246 198 207 14 (set (reg:SI 31 s15 [184])
        (reg:SI 3 r3 [184])) "../System/pomozne_funkcije.c":142:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 207 246 210 14 (set (reg:SF 31 s15 [185])
        (float:SF (reg:SI 31 s15 [184]))) "../System/pomozne_funkcije.c":142:6 809 {*floatsisf2_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 4 r4 [180]) [1 py+0 S4 A32])
        (nil)))
(insn 210 207 211 14 (set (reg/f:SI 1 r1 [186])
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 000000000786a3f0 angle>)) "../System/pomozne_funkcije.c":143:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 000000000786a3f0 angle>)
        (nil)))
(insn 211 210 214 14 (set (reg:SF 0 r0 [187])
        (const_double:SF 7.8539752960205078125e-1 [0x0.c90fdp+0])) "../System/pomozne_funkcije.c":143:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.8539752960205078125e-1 [0x0.c90fdp+0])
        (nil)))
(insn 214 211 199 14 (set (reg/f:SI 3 r3 [188])
        (const_int 1073744896 [0x40000c00])) "../System/pomozne_funkcije.c":144:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1073744896 [0x40000c00])
        (nil)))
(insn 199 214 200 14 (set (mem/c:SF (reg/f:SI 5 r5 [174]) [1 px+0 S4 A32])
        (reg:SF 30 s14 [179])) "../System/pomozne_funkcije.c":141:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 200 199 208 14 (debug_marker) "../System/pomozne_funkcije.c":142:3 -1
     (nil))
(insn 208 200 209 14 (set (mem/c:SF (reg/f:SI 4 r4 [180]) [1 py+0 S4 A32])
        (reg:SF 31 s15 [185])) "../System/pomozne_funkcije.c":142:6 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 209 208 215 14 (debug_marker) "../System/pomozne_funkcije.c":143:3 -1
     (nil))
(insn 215 209 212 14 (set (reg:SI 2 r2 [189])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":144:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 212 215 213 14 (set (mem/c:SF (reg/f:SI 1 r1 [186]) [1 angle+0 S4 A32])
        (reg:SF 0 r0 [187])) "../System/pomozne_funkcije.c":143:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 213 212 219 14 (debug_marker) "../System/pomozne_funkcije.c":144:3 -1
     (nil))
(insn 219 213 216 14 (set (reg:SI 0 r0)
        (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)) "../System/pomozne_funkcije.c":145:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 216 219 217 14 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 56 [0x38])) [7 MEM[(struct TIM_TypeDef *)1073744896B].CCR2+0 S4 A64])
        (reg:SI 2 r2 [189])) "../System/pomozne_funkcije.c":144:14 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 217 216 220 14 (debug_marker) "../System/pomozne_funkcije.c":145:3 -1
     (nil))
(call_insn/j 220 217 221 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/pomozne_funkcije.c":145:3 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 221 220 242)
(note 242 221 0 NOTE_INSN_DELETED)

;; Function copy_sprites (copy_sprites, funcdef_no=882, decl_uid=12011, cgraph_uid=886, symbol_order=893)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 11:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 26:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 27:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) r {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = 1
   Insn 27: point = 0, n_alt = 4
   Insn 21: point = 1, n_alt = -1
   Insn 26: point = 1, n_alt = 4
   Insn 36: point = 2, n_alt = 1
   Insn 20: point = 2, n_alt = -2
   Insn 19: point = 2, n_alt = -2
  BB 2
   Insn 11: point = 3, n_alt = 4
   Insn 10: point = 4, n_alt = 5
   Insn 9: point = 5, n_alt = 5
 r115: [0..5]
 r116: [0..3]
 r117: [0..4]
Compressing live ranges: from 6 to 2 - 33%
Ranges after the compression:
 r115: [0..1]
 r116: [0..1]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=16, prev_offset=16)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 26
changing reg in insn 9
changing reg in insn 11
changing reg in insn 20
changing reg in insn 29
changing reg in insn 26
changing reg in insn 11
changing reg in insn 29
changing reg in insn 27
changing reg in insn 10
changing reg in insn 19
changing reg in insn 27


try_optimize_cfg iteration 1

Deleting fallthru block 4.
deleting block 4


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 4 count 4 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 4 count 5 (  1.2)


copy_sprites

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r4={2d,4u} r5={2d,2u} r6={1d,1u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 127{112d,15u,0e} in 20{19 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 5 2 6 2 (debug_marker) "../System/pomozne_funkcije.c":331:2 -1
     (nil))
(debug_insn 6 5 7 2 (debug_marker) "../System/pomozne_funkcije.c":331:6 -1
     (nil))
(debug_insn 7 6 8 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 8 7 9 2 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 5 r5 [orig:117 ivtmp.186 ] [117])
        (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp_original") [flags 0xc0]  <var_decl 000000000786a900 sp_original>)
        (nil)))
(insn 11 10 28 2 (set (reg/f:SI 6 r6 [orig:116 _9 ] [116])
        (plus:SI (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115])
            (const_int 1776 [0x6f0]))) 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 1776 [0x6f0])))
        (nil)))
(code_label 28 11 12 3 130 (nil) [1 uses])
(note 12 28 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 13 12 14 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 14 13 19 3 (debug_marker) "../System/pomozne_funkcije.c":332:3 -1
     (nil))
(insn 19 14 20 3 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:117 ivtmp.186 ] [117])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 36 3 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 36 20 26 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/pomozne_funkcije.c":332:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 26 36 21 3 (set (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115])
        (plus:SI (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(call_insn 21 26 23 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":332:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 000000000669e200 __builtin_memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 23 21 24 3 (debug_marker) "../System/pomozne_funkcije.c":331:30 -1
     (nil))
(debug_insn 24 23 25 3 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 25 24 27 3 (debug_marker) "../System/pomozne_funkcije.c":331:14 -1
     (nil))
(insn 27 25 29 3 (set (reg:SI 5 r5 [orig:117 ivtmp.186 ] [117])
        (plus:SI (reg:SI 5 r5 [orig:117 ivtmp.186 ] [117])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":331:2 7 {*arm_addsi3}
     (nil))
(insn 29 27 30 3 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 6 r6 [orig:116 _9 ] [116])
            (reg:SI 4 r4 [orig:115 ivtmp.185 ] [115]))) "../System/pomozne_funkcije.c":331:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 37 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 28)
            (pc))) "../System/pomozne_funkcije.c":331:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 805306364 (nil))
 -> 28)
(note 37 30 38 NOTE_INSN_DELETED)
(note 38 37 0 NOTE_INSN_DELETED)

;; Function handle_score (handle_score, funcdef_no=883, decl_uid=12010, cgraph_uid=887, symbol_order=894)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=184, prev_offset=0)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=176, prev_offset=0)
Can eliminate 102 to 13 (offset=152, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=144, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=619,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) t  (1) G {*cmpsf_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 409:  (0) t  (1) t {*cmpsf_trap_vfp}
      Creating newreg=257 from oldreg=159, assigning class VFP_LO_REGS to r257
  409: vfpcc:CCFPE=cmp(r113:SF,r257:SF)
    Inserting insn reload before:
  417: r257:SF=r159:SF

            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 32:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) r  (1) mHa {*thumb2_movsf_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 43:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 50:  (0) m  (1) r {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 139:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 162:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 109:  (0) r  (1) j {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 185:  (0) r  (1) j {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 67:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=17,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=10,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 77:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 415:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=258 from oldreg=176, assigning class VFP_LO_REGS to r258
  415: r258:SI=fix(fix(r141:SF))
    Inserting insn reload after:
  418: r176:SI=r258:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 418:  (0) r  (1) *t {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 99:  (0) =t  (1) t {*truncsisf2_vfp}
      Creating newreg=259 from oldreg=177, assigning class VFP_LO_REGS to r259
   99: r259:SI=fix(fix(r154:SF))
    Inserting insn reload after:
  419: r177:SI=r259:SI

            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            Using memory insn operand 1: reject+=3
          alt=5,overall=9,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            alt=6,overall=17,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=13,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=13,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=14,losers=2 -- refuse
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 419:  (0) r  (1) *t {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =t  (1) t  (2) t {*addsf3_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2,overall=15,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 140:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
          alt=1,overall=13,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 151:  (0) r  (1) r  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 155:  (0) m  (1) r {*thumb2_movhi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 167:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) r  (1) r {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 183:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =t  (1) t  (2) t {*addsf3_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 184:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 191:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 206:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 217:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 219:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 232:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 247:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 249:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 264:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 262:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 265:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 290:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 298:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 305:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 313:  (0) r  (1) rk  (3) r  (4) M {*add_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 320:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 330:  (0) r  (1) j {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 334:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 340:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 341:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 342:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 383:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) l {*thumb2_cbnz}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8 9 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
  BB 15
   Insn 361: point = 0, n_alt = 0
   Insn 397: point = 1, n_alt = -2
   Insn 356: point = 2, n_alt = -1
   Insn 383: point = 2, n_alt = 1
  BB 13
   Insn 403: point = 2, n_alt = -1
   Insn 345: point = 2, n_alt = -1
   Insn 343: point = 2, n_alt = -1
   Insn 342: point = 2, n_alt = 1
   Insn 341: point = 2, n_alt = 1
   Insn 340: point = 2, n_alt = 5
   Insn 337: point = 2, n_alt = -1
   Insn 336: point = 2, n_alt = 1
   Insn 335: point = 2, n_alt = 1
   Insn 334: point = 2, n_alt = 5
   Insn 331: point = 2, n_alt = -1
   Insn 330: point = 2, n_alt = 4
   Insn 321: point = 2, n_alt = -1
   Insn 320: point = 2, n_alt = 4
   Insn 319: point = 3, n_alt = 1
   Insn 318: point = 3, n_alt = -2
   Insn 316: point = 4, n_alt = 0
   Insn 313: point = 6, n_alt = 1
   Insn 306: point = 8, n_alt = -1
   Insn 304: point = 8, n_alt = 1
   Insn 305: point = 8, n_alt = 4
   Insn 303: point = 9, n_alt = -2
   Insn 301: point = 10, n_alt = 0
   Insn 298: point = 12, n_alt = 1
   Insn 291: point = 14, n_alt = -1
   Insn 279: point = 14, n_alt = -2
   Insn 290: point = 16, n_alt = 4
   Insn 396: point = 16, n_alt = -2
   Insn 278: point = 17, n_alt = -1
   Insn 272: point = 17, n_alt = -2
   Insn 277: point = 19, n_alt = -2
   Insn 395: point = 19, n_alt = -2
   Insn 271: point = 20, n_alt = -1
   Insn 270: point = 20, n_alt = -2
   Insn 267: point = 20, n_alt = -1
   Insn 266: point = 20, n_alt = 1
   Insn 265: point = 20, n_alt = 1
   Insn 262: point = 20, n_alt = 7
   Insn 264: point = 21, n_alt = 1
   Insn 263: point = 21, n_alt = 1
   Insn 252: point = 21, n_alt = -1
   Insn 251: point = 21, n_alt = 1
   Insn 250: point = 21, n_alt = 1
   Insn 249: point = 21, n_alt = 1
   Insn 248: point = 21, n_alt = 1
   Insn 247: point = 21, n_alt = 7
   Insn 237: point = 21, n_alt = -1
   Insn 236: point = 21, n_alt = 1
   Insn 235: point = 21, n_alt = 1
   Insn 234: point = 21, n_alt = 1
   Insn 233: point = 21, n_alt = 1
   Insn 232: point = 21, n_alt = 7
   Insn 222: point = 21, n_alt = -1
   Insn 221: point = 21, n_alt = 1
   Insn 220: point = 21, n_alt = 1
   Insn 219: point = 21, n_alt = 1
   Insn 218: point = 21, n_alt = 1
   Insn 217: point = 21, n_alt = 7
   Insn 207: point = 21, n_alt = -1
   Insn 206: point = 21, n_alt = 5
   Insn 205: point = 21, n_alt = 1
   Insn 202: point = 21, n_alt = -1
   Insn 201: point = 21, n_alt = 1
   Insn 200: point = 21, n_alt = -2
   Insn 199: point = 21, n_alt = -2
   Insn 198: point = 21, n_alt = 1
   Insn 196: point = 21, n_alt = -1
   Insn 195: point = 21, n_alt = 1
   Insn 194: point = 21, n_alt = -2
   Insn 193: point = 21, n_alt = 1
   Insn 192: point = 21, n_alt = 1
   Insn 191: point = 21, n_alt = 7
   Insn 190: point = 21, n_alt = 1
  BB 12
   Insn 187: point = 23, n_alt = -1
   Insn 186: point = 23, n_alt = 1
   Insn 184: point = 23, n_alt = 2
   Insn 176: point = 24, n_alt = 0
   Insn 183: point = 25, n_alt = 4
  BB 11
   Insn 170: point = 28, n_alt = -1
   Insn 169: point = 28, n_alt = 1
   Insn 167: point = 28, n_alt = 2
  BB 10
   Insn 155: point = 30, n_alt = 4
   Insn 153: point = 31, n_alt = 1
   Insn 151: point = 33, n_alt = 2
   Insn 147: point = 35, n_alt = 1
   Insn 146: point = 37, n_alt = 1
   Insn 145: point = 39, n_alt = 1
   Insn 150: point = 41, n_alt = 1
   Insn 141: point = 43, n_alt = 1
   Insn 144: point = 44, n_alt = 1
  BB 9
   Insn 119: point = 47, n_alt = -1
   Insn 118: point = 47, n_alt = 3
   Insn 140: point = 47, n_alt = 4
  BB 8
   Insn 111: point = 49, n_alt = -1
   Insn 110: point = 49, n_alt = 1
   Insn 103: point = 49, n_alt = 1
   Insn 100: point = 51, n_alt = 0
   Insn 163: point = 53, n_alt = 0
   Insn 419: point = 54, n_alt = 10
	Hard reg 3 is preferable by r259 with profit 990
   Insn 99: point = 56, n_alt = 0
  BB 7
   Insn 7: point = 58, n_alt = -2
   Insn 93: point = 59, n_alt = 1
   Insn 418: point = 61, n_alt = 10
	Hard reg 1 is preferable by r258 with profit 10
   Insn 415: point = 63, n_alt = 0
   Insn 8: point = 64, n_alt = 3
  BB 5
   Insn 399: point = 66, n_alt = -1
   Insn 185: point = 66, n_alt = 4
   Insn 109: point = 67, n_alt = 4
   Insn 5: point = 68, n_alt = 1
   Insn 4: point = 69, n_alt = 1
   Insn 162: point = 70, n_alt = 3
   Insn 139: point = 71, n_alt = 6
   Insn 137: point = 72, n_alt = 5
   Insn 6: point = 73, n_alt = 3
  BB 6
   Insn 401: point = 75, n_alt = -1
   Insn 81: point = 75, n_alt = -1
   Insn 80: point = 75, n_alt = -2
   Insn 79: point = 75, n_alt = 5
   Insn 78: point = 75, n_alt = -2
   Insn 77: point = 76, n_alt = 4
   Insn 394: point = 77, n_alt = -2
   Insn 74: point = 78, n_alt = -1
   Insn 73: point = 78, n_alt = -2
   Insn 71: point = 79, n_alt = -1
   Insn 70: point = 79, n_alt = -2
   Insn 69: point = 79, n_alt = 5
   Insn 68: point = 79, n_alt = -2
   Insn 67: point = 80, n_alt = 4
   Insn 393: point = 81, n_alt = -2
   Insn 64: point = 82, n_alt = -1
   Insn 63: point = 82, n_alt = 1
  BB 4
   Insn 50: point = 84, n_alt = 6
   Insn 47: point = 85, n_alt = -1
   Insn 46: point = 85, n_alt = -2
   Insn 45: point = 85, n_alt = 5
   Insn 43: point = 85, n_alt = 4
   Insn 44: point = 86, n_alt = -2
   Insn 392: point = 87, n_alt = -2
   Insn 40: point = 88, n_alt = -1
   Insn 39: point = 88, n_alt = 5
   Insn 36: point = 88, n_alt = -1
   Insn 35: point = 88, n_alt = -2
   Insn 34: point = 88, n_alt = 5
   Insn 33: point = 88, n_alt = -2
   Insn 32: point = 89, n_alt = 4
   Insn 391: point = 90, n_alt = -2
   Insn 29: point = 91, n_alt = -1
   Insn 28: point = 91, n_alt = -2
  BB 3
   Insn 21: point = 92, n_alt = -1
   Insn 410: point = 92, n_alt = -2
   Insn 409: point = 92, n_alt = 0
   Insn 417: point = 93, n_alt = 0
	Hard reg 6 is preferable by r257 with profit 1
  BB 2
   Insn 18: point = 95, n_alt = -1
   Insn 412: point = 95, n_alt = -2
   Insn 411: point = 95, n_alt = 1
   Insn 2: point = 95, n_alt = 1
   Insn 15: point = 97, n_alt = 3
   Insn 390: point = 98, n_alt = -2
   Insn 14: point = 99, n_alt = 5
  BB 14
   Insn 351: point = 100, n_alt = -1
 r113: [92..97] [82..83]
 r121: [28..59]
 r141: [23..73]
 r154: [28..64]
 r155: [26..58]
 r157: [28..68] [23..25]
 r158: [23..69]
 r159: [78..95]
 r176: [60..61]
 r177: [52..54]
 r178: [50..51]
 r181: [45..49]
 r182: [23..67]
 r187: [42..47]
 r188: [36..43]
 r191: [40..44]
 r192: [38..39]
 r193: [36..37]
 r194: [32..35]
 r197: [34..41]
 r198: [32..33]
 r200: [30..31]
 r202: [23..70]
 r204: [23..66]
 r205: [20..21]
 r212: [13..17]
 r214: [7..14]
 r220: [11..12]
 r223: [8..10]
 r230: [5..6]
 r233: [2..4]
 r238: [84..89] [9..80]
 r239: [84..85] [3..76]
 r240: [84..99]
 r242: [23..72]
 r243: [23..71]
 r247: [96..98]
 r248: [88..90]
 r249: [86..87]
 r250: [79..81]
 r251: [75..77]
 r252: [18..19]
 r253: [15..16]
 r254: [0..1]
 r257: [92..93]
 r258: [62..63]
 r259: [55..56]
Compressing live ranges: from 100 to 62 - 62%
Ranges after the compression:
 r113: [58..61] [50..51]
 r121: [20..41]
 r141: [18..45]
 r154: [20..45]
 r155: [20..41]
 r157: [18..45]
 r158: [18..45]
 r159: [48..59]
 r176: [42..43]
 r177: [38..39]
 r178: [36..37]
 r181: [34..35]
 r182: [18..45]
 r187: [32..35]
 r188: [26..33]
 r191: [30..33]
 r192: [28..29]
 r193: [26..27]
 r194: [22..25]
 r197: [24..31]
 r198: [22..23]
 r200: [20..21]
 r202: [18..45]
 r204: [18..45]
 r205: [16..17]
 r212: [10..13]
 r214: [6..11]
 r220: [8..9]
 r223: [6..7]
 r230: [4..5]
 r233: [2..3]
 r238: [52..57] [6..49]
 r239: [52..53] [2..47]
 r240: [52..61]
 r242: [18..45]
 r243: [18..45]
 r247: [60..61]
 r248: [56..57]
 r249: [54..55]
 r250: [48..49]
 r251: [46..47]
 r252: [14..15]
 r253: [12..13]
 r254: [0..1]
 r257: [58..59]
 r258: [44..45]
 r259: [40..41]

********** Assignment #1: **********

	 Assigning to 259 (cl=VFP_LO_REGS, orig=177, freq=1980, tfirst=259, tfreq=1980)...
	   Assign 28 to reload r259 (freq=1980)
	 Assigning to 258 (cl=VFP_LO_REGS, orig=176, freq=20, tfirst=258, tfreq=20)...
	   Assign 28 to reload r258 (freq=20)
	 Assigning to 257 (cl=VFP_LO_REGS, orig=159, freq=2, tfirst=257, tfreq=2)...
	   Assign 30 to reload r257 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=184, prev_offset=184)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=176, prev_offset=0)
Can eliminate 102 to 13 (offset=152, prev_offset=152)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=144, prev_offset=0)
changing reg in insn 15
changing reg in insn 411
changing reg in insn 409
changing reg in insn 63
changing reg in insn 93
changing reg in insn 100
changing reg in insn 176
changing reg in insn 6
changing reg in insn 415
changing reg in insn 176
changing reg in insn 180
changing reg in insn 90
changing reg in insn 163
changing reg in insn 8
changing reg in insn 164
changing reg in insn 163
changing reg in insn 113
changing reg in insn 99
changing reg in insn 96
changing reg in insn 167
changing reg in insn 7
changing reg in insn 155
changing reg in insn 183
changing reg in insn 169
changing reg in insn 167
changing reg in insn 118
changing reg in insn 183
changing reg in insn 5
changing reg in insn 186
changing reg in insn 169
changing reg in insn 186
changing reg in insn 184
changing reg in insn 4
changing reg in insn 184
changing reg in insn 7
changing reg in insn 2
changing reg in insn 50
changing reg in insn 73
changing reg in insn 28
changing reg in insn 93
changing reg in insn 100
changing reg in insn 100
changing reg in insn 103
changing reg in insn 103
changing reg in insn 103
changing reg in insn 144
changing reg in insn 140
changing reg in insn 130
changing reg in insn 129
changing reg in insn 128
changing reg in insn 126
changing reg in insn 124
changing reg in insn 122
changing reg in insn 115
changing reg in insn 110
changing reg in insn 105
changing reg in insn 144
changing reg in insn 140
changing reg in insn 110
changing reg in insn 109
changing reg in insn 110
changing reg in insn 140
changing reg in insn 150
changing reg in insn 141
changing reg in insn 141
changing reg in insn 147
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 153
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 153
changing reg in insn 153
changing reg in insn 162
changing reg in insn 176
changing reg in insn 163
changing reg in insn 185
changing reg in insn 186
changing reg in insn 190
changing reg in insn 200
changing reg in insn 194
changing reg in insn 262
changing reg in insn 247
changing reg in insn 232
changing reg in insn 217
changing reg in insn 191
changing reg in insn 272
changing reg in insn 298
changing reg in insn 298
changing reg in insn 279
changing reg in insn 313
changing reg in insn 313
changing reg in insn 298
changing reg in insn 301
changing reg in insn 301
changing reg in insn 305
changing reg in insn 313
changing reg in insn 316
changing reg in insn 316
changing reg in insn 320
changing reg in insn 32
changing reg in insn 67
changing reg in insn 303
changing reg in insn 270
changing reg in insn 70
changing reg in insn 35
changing reg in insn 43
changing reg in insn 77
changing reg in insn 318
changing reg in insn 277
changing reg in insn 80
changing reg in insn 46
changing reg in insn 14
changing reg in insn 50
changing reg in insn 39
changing reg in insn 15
changing reg in insn 137
changing reg in insn 155
changing reg in insn 139
changing reg in insn 144
changing reg in insn 140
changing reg in insn 390
changing reg in insn 2
changing reg in insn 391
changing reg in insn 33
changing reg in insn 392
changing reg in insn 44
changing reg in insn 393
changing reg in insn 68
changing reg in insn 394
changing reg in insn 78
changing reg in insn 395
changing reg in insn 272
changing reg in insn 396
changing reg in insn 279
changing reg in insn 397
changing reg in insn 361
deleting insn with uid = 390.
deleting insn with uid = 33.
deleting insn with uid = 44.
deleting insn with uid = 68.
deleting insn with uid = 78.
deleting insn with uid = 272.
deleting insn with uid = 279.
deleting insn with uid = 397.


try_optimize_cfg iteration 1

Deleting fallthru block 16.
deleting block 16


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 222.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 291.
verify found no changes in insn with uid = 306.
verify found no changes in insn with uid = 321.
verify found no changes in insn with uid = 331.
verify found no changes in insn with uid = 337.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 351.
verify found no changes in insn with uid = 356.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 21 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 20 (  1.2)


handle_score

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={55d,35u,1e} r1={48d,21u} r2={43d,19u} r3={45d,30u,3e} r4={2d,4u} r5={2d,4u} r6={5d,16u} r7={5d,9u} r8={1d,1u} r9={3d,4u} r10={1d,1u} r12={53d,1u} r13={1d,55u} r14={28d,2u} r15={26d} r16={27d,1u} r17={27d} r18={27d} r19={27d} r20={27d} r21={27d} r22={27d} r23={27d} r24={27d} r25={27d} r26={27d} r27={27d} r28={29d,2u} r29={29d,4u} r30={29d,3u} r31={30d,8u} r48={26d} r49={26d} r50={26d} r51={26d} r52={26d} r53={26d} r54={26d} r55={26d} r56={26d} r57={26d} r58={26d} r59={26d} r60={26d} r61={26d} r62={26d} r63={26d} r64={26d} r65={26d} r66={26d} r67={26d} r68={26d} r69={26d} r70={26d} r71={26d} r72={26d} r73={26d} r74={26d} r75={26d} r76={26d} r77={26d} r78={26d} r79={26d} r80={26d} r81={26d} r82={26d} r83={26d} r84={26d} r85={26d} r86={26d} r87={26d} r88={26d} r89={26d} r90={26d} r91={26d} r92={26d} r93={26d} r94={26d} r95={26d} r96={26d} r97={26d} r98={26d} r99={26d} r100={33d,6u} r101={28d,2u} r102={12e} r104={26d} r105={26d} r106={26d} 
;;    total ref usage 2494{2250d,228u,16e} in 278{252 regular + 26 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 9 11 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 11 3 12 2 (debug_marker) "../System/pomozne_funkcije.c":337:2 -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/pomozne_funkcije.c":338:2 -1
     (nil))
(debug_insn 13 12 14 2 (debug_marker) "../System/pomozne_funkcije.c":339:2 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 7 r7 [240])
        (symbol_ref:SI ("prevScore") [flags 0xc0]  <var_decl 000000000786acf0 prevScore>)) "../System/pomozne_funkcije.c":339:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("prevScore") [flags 0xc0]  <var_decl 000000000786acf0 prevScore>)
        (nil)))
(insn 15 14 2 2 (set (reg:SF 31 s15 [orig:113 prevScore.23_1 ] [113])
        (mem/c:SF (reg/f:SI 7 r7 [240]) [1 prevScore+0 S4 A32])) "../System/pomozne_funkcije.c":339:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("prevScore") [flags 0xc0]  <var_decl 000000000786acf0 prevScore>) [1 prevScore+0 S4 A32])
        (nil)))
(insn 2 15 411 2 (set (reg/v:SF 6 r6 [orig:159 currScore ] [159])
        (reg:SF 16 s0 [247])) "../System/pomozne_funkcije.c":336:35 737 {*thumb2_movsf_vfp}
     (nil))
(insn 411 2 412 2 (set (reg:CCFP 101 vfpcc)
        (compare:CCFP (reg:SF 31 s15 [orig:113 prevScore.23_1 ] [113])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/pomozne_funkcije.c":339:4 827 {*cmpsf_vfp}
     (nil))
(insn 412 411 18 2 (set (reg:CCFP 100 cc)
        (reg:CCFP 101 vfpcc)) "../System/pomozne_funkcije.c":339:4 817 {*movcc_vfp}
     (nil))
(jump_insn 18 412 19 2 (set (pc)
        (if_then_else (eq (reg:CCFP 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 25)
            (pc))) "../System/pomozne_funkcije.c":339:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 25)
(note 19 18 417 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 417 19 409 3 (set (reg/v:SF 30 s14 [orig:159 currScore ] [159])
        (reg/v:SF 6 r6 [orig:159 currScore ] [159])) "../System/pomozne_funkcije.c":339:20 737 {*thumb2_movsf_vfp}
     (nil))
(insn 409 417 410 3 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 31 s15 [orig:113 prevScore.23_1 ] [113])
            (reg/v:SF 30 s14 [orig:159 currScore ] [159]))) "../System/pomozne_funkcije.c":339:20 828 {*cmpsf_trap_vfp}
     (nil))
(insn 410 409 21 3 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":339:20 817 {*movcc_vfp}
     (nil))
(jump_insn 21 410 25 3 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 398)
            (pc))) "../System/pomozne_funkcije.c":339:20 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 398)
(code_label 25 21 26 4 136 (nil) [1 uses])
(note 26 25 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 30 26 41 4 NOTE_INSN_DELETED)
(note 41 30 27 4 NOTE_INSN_DELETED)
(debug_insn 27 41 28 4 (debug_marker) "../System/pomozne_funkcije.c":340:3 -1
     (nil))
(insn 28 27 29 4 (set (reg:SF 0 r0)
        (reg/v:SF 6 r6 [orig:159 currScore ] [159])) "../System/pomozne_funkcije.c":340:3 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 29 28 391 4 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":340:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 391 29 32 4 (set (reg:DF 2 r2 [248])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":340:3 739 {*thumb2_movdf_vfp}
     (nil))
(insn 32 391 34 4 (set (reg/f:SI 5 r5 [238])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":340:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(insn 34 32 35 4 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82]  <var_decl 0000000009f6a240 *.LC0>)) "../System/pomozne_funkcije.c":340:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 4 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [238])) "../System/pomozne_funkcije.c":340:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(call_insn 36 35 37 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":340:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:DF (use (reg:DF 2 r2))
                    (nil))))))
(debug_insn 37 36 39 4 (debug_marker) "../System/pomozne_funkcije.c":341:3 -1
     (nil))
(insn 39 37 40 4 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 7 r7 [240]) [1 prevScore+0 S4 A32])) "../System/pomozne_funkcije.c":341:3 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("prevScore") [flags 0xc0]  <var_decl 000000000786acf0 prevScore>) [1 prevScore+0 S4 A32])
        (nil)))
(call_insn/u 40 39 392 4 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":341:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 392 40 43 4 (set (reg:DF 2 r2 [249])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":341:3 739 {*thumb2_movdf_vfp}
     (nil))
(insn 43 392 45 4 (set (reg/f:SI 4 r4 [239])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 80 [0x50]))) "../System/pomozne_funkcije.c":341:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(insn 45 43 46 4 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82]  <var_decl 0000000009f6a2d0 *.LC1>)) "../System/pomozne_funkcije.c":341:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [239])) "../System/pomozne_funkcije.c":341:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(call_insn 47 46 48 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":341:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:DF (use (reg:DF 2 r2))
                    (nil))))))
(debug_insn 48 47 50 4 (debug_marker) "../System/pomozne_funkcije.c":342:3 -1
     (nil))
(insn 50 48 82 4 (set (mem/c:SF (reg/f:SI 7 r7 [240]) [1 prevScore+0 S4 A32])
        (reg/v:SF 6 r6 [orig:159 currScore ] [159])) "../System/pomozne_funkcije.c":342:13 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 82 50 51 5 140 (nil) [1 uses])
(note 51 82 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 52 51 53 5 (var_location:SF delta (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":349:8 -1
     (nil))
(debug_insn 53 52 54 5 (var_location:SI pixel (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":351:6 -1
     (nil))
(debug_insn 54 53 55 5 (var_location:SI countX (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":352:6 -1
     (nil))
(debug_insn 55 54 56 5 (var_location:SF y (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 56 55 57 5 (var_location:SI countY (const_int 0 [0])) -1
     (nil))
(debug_insn 57 56 6 5 (debug_marker) "../System/pomozne_funkcije.c":354:16 -1
     (nil))
(insn 6 57 137 5 (set (reg/v:SF 29 s13 [orig:141 y ] [141])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/pomozne_funkcije.c":336:35 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 137 6 139 5 (set (reg/f:SI 6 r6 [242])
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":363:31 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)
        (nil)))
(insn 139 137 162 5 (set (reg/f:SI 14 lr [243])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)) "../System/pomozne_funkcije.c":361:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)
        (nil)))
(insn 162 139 4 5 (set (reg:SF 30 s14 [202])
        (const_double:SF 1.3333334028720855712890625e-1 [0x0.888889p-2])) "../System/pomozne_funkcije.c":356:23 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.3333334028720855712890625e-1 [0x0.888889p-2])
        (nil)))
(insn 4 162 5 5 (set (reg:SI 7 r7 [orig:158 ivtmp.205 ] [158])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":336:35 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 5 4 109 5 (set (reg:SI 0 r0 [orig:157 ivtmp.204 ] [157])
        (const_int 241 [0xf1])) "../System/pomozne_funkcije.c":336:35 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 241 [0xf1])
        (nil)))
(insn 109 5 185 5 (set (reg:SI 12 ip [182])
        (const_int 3069 [0xbfd])) "../System/pomozne_funkcije.c":358:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3069 [0xbfd])
        (nil)))
(insn 185 109 399 5 (set (reg:SI 8 r8 [204])
        (const_int 58081 [0xe2e1])) "../System/pomozne_funkcije.c":354:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 58081 [0xe2e1])
        (nil)))
(jump_insn 399 185 400 5 (set (pc)
        (label_ref 85)) 284 {*arm_jump}
     (nil)
 -> 85)
(barrier 400 399 398)
(code_label 398 400 61 6 150 (nil) [1 uses])
(note 61 398 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 65 61 75 6 NOTE_INSN_DELETED)
(note 75 65 62 6 NOTE_INSN_DELETED)
(debug_insn 62 75 63 6 (debug_marker) "../System/pomozne_funkcije.c":345:3 -1
     (nil))
(insn 63 62 64 6 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [orig:113 prevScore.23_1 ] [113])) "../System/pomozne_funkcije.c":345:3 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 64 63 393 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":345:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 393 64 67 6 (set (reg:DF 2 r2 [250])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":345:3 739 {*thumb2_movdf_vfp}
     (nil))
(insn 67 393 69 6 (set (reg/f:SI 5 r5 [238])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":345:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(insn 69 67 70 6 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82]  <var_decl 0000000009f6a360 *.LC2>)) "../System/pomozne_funkcije.c":345:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 6 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [238])) "../System/pomozne_funkcije.c":345:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(call_insn 71 70 72 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":345:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:DF (use (reg:DF 2 r2))
                    (nil))))))
(debug_insn 72 71 73 6 (debug_marker) "../System/pomozne_funkcije.c":346:3 -1
     (nil))
(insn 73 72 74 6 (set (reg:SF 0 r0)
        (reg/v:SF 6 r6 [orig:159 currScore ] [159])) "../System/pomozne_funkcije.c":346:3 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 74 73 394 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":346:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 394 74 77 6 (set (reg:DF 2 r2 [251])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":346:3 739 {*thumb2_movdf_vfp}
     (nil))
(insn 77 394 79 6 (set (reg/f:SI 4 r4 [239])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 80 [0x50]))) "../System/pomozne_funkcije.c":346:3 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(insn 79 77 80 6 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82]  <var_decl 0000000009f6a3f0 *.LC3>)) "../System/pomozne_funkcije.c":346:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 6 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [239])) "../System/pomozne_funkcije.c":346:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(call_insn 81 80 401 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":346:3 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 00000000066aab00 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:DF (use (reg:DF 2 r2))
                    (nil))))))
(jump_insn 401 81 402 6 (set (pc)
        (label_ref 82)) 284 {*arm_jump}
     (nil)
 -> 82)
(barrier 402 401 85)
(code_label 85 402 86 7 139 (nil) [2 uses])
(note 86 85 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 87 86 88 7 (var_location:SF delta (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":349:8 -1
     (nil))
(debug_insn 88 87 89 7 (var_location:SI pixel (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":351:6 -1
     (nil))
(debug_insn 89 88 90 7 (var_location:SI countX (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":352:6 -1
     (nil))
(debug_insn 90 89 91 7 (var_location:SF y (reg/v:SF 29 s13 [orig:141 y ] [141])) -1
     (nil))
(debug_insn 91 90 8 7 (var_location:SI countY (clobber (const_int 0 [0]))) -1
     (nil))
(insn 8 91 415 7 (set (reg/v:SF 31 s15 [orig:154 x ] [154])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/pomozne_funkcije.c":356:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 415 8 418 7 (set (reg:SI 28 s12 [176])
        (fix:SI (fix:SF (reg/v:SF 29 s13 [orig:141 y ] [141])))) "../System/pomozne_funkcije.c":357:21 805 {*truncsisf2_vfp}
     (nil))
(insn 418 415 93 7 (set (reg:SI 1 r1 [176])
        (reg:SI 28 s12 [176])) "../System/pomozne_funkcije.c":357:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 93 418 7 7 (set (reg:SI 1 r1 [orig:121 _10 ] [121])
        (ashift:SI (reg:SI 1 r1 [176])
            (const_int 5 [0x5]))) "../System/pomozne_funkcije.c":357:21 147 {*arm_shiftsi3}
     (nil))
(insn 7 93 168 7 (set (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
        (reg:SI 7 r7 [orig:158 ivtmp.205 ] [158])) "../System/pomozne_funkcije.c":357:21 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 168 7 94 8 142 (nil) [1 uses])
(note 94 168 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 102 94 95 8 NOTE_INSN_DELETED)
(debug_insn 95 102 96 8 (var_location:SI D#14 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 96 95 97 8 (var_location:SF x (reg/v:SF 31 s15 [orig:154 x ] [154])) -1
     (nil))
(debug_insn 97 96 98 8 (var_location:SI countX (debug_expr:SI D#14)) -1
     (nil))
(debug_insn 98 97 113 8 (debug_marker) "../System/pomozne_funkcije.c":357:4 -1
     (nil))
(debug_insn 113 98 114 8 (var_location:SF x (reg/v:SF 31 s15 [orig:154 x ] [154])) -1
     (nil))
(debug_insn 114 113 158 8 (var_location:SI countX (debug_expr:SI D#14)) -1
     (nil))
(debug_insn 158 114 159 8 (debug_marker) "../System/pomozne_funkcije.c":365:4 -1
     (nil))
(debug_insn 159 158 160 8 (var_location:SI D#13 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 160 159 161 8 (var_location:SI countX (debug_expr:SI D#13)) "../System/pomozne_funkcije.c":365:10 -1
     (nil))
(debug_insn 161 160 99 8 (debug_marker) "../System/pomozne_funkcije.c":356:22 -1
     (nil))
(insn 99 161 419 8 (set (reg:SI 28 s12 [177])
        (fix:SI (fix:SF (reg/v:SF 31 s15 [orig:154 x ] [154])))) "../System/pomozne_funkcije.c":357:25 805 {*truncsisf2_vfp}
     (nil))
(insn 419 99 163 8 (set (reg:SI 3 r3 [177])
        (reg:SI 28 s12 [177])) "../System/pomozne_funkcije.c":357:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 163 419 164 8 (set (reg/v:SF 31 s15 [orig:154 x ] [154])
        (plus:SF (reg/v:SF 31 s15 [orig:154 x ] [154])
            (reg:SF 30 s14 [202]))) "../System/pomozne_funkcije.c":356:23 758 {*addsf3_vfp}
     (nil))
(debug_insn 164 163 165 8 (var_location:SF x (reg/v:SF 31 s15 [orig:154 x ] [154])) -1
     (nil))
(debug_insn 165 164 166 8 (var_location:SI countX (debug_expr:SI D#13)) -1
     (nil))
(debug_insn 166 165 100 8 (debug_marker) "../System/pomozne_funkcije.c":356:17 -1
     (nil))
(insn 100 166 103 8 (set (reg:SI 3 r3 [178])
        (plus:SI (reg:SI 3 r3 [177])
            (reg:SI 1 r1 [orig:121 _10 ] [121]))) "../System/pomozne_funkcije.c":357:24 7 {*arm_addsi3}
     (nil))
(insn 103 100 105 8 (set (reg:SI 3 r3 [181])
        (plus:SI (ashift:SI (reg:SI 3 r3 [178])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [178]))) "../System/pomozne_funkcije.c":357:10 318 {*add_shiftsi}
     (nil))
(debug_insn 105 103 106 8 (var_location:SI pixel (reg:SI 3 r3 [181])) "../System/pomozne_funkcije.c":357:10 -1
     (nil))
(debug_insn 106 105 115 8 (debug_marker) "../System/pomozne_funkcije.c":358:4 -1
     (nil))
(debug_insn 115 106 110 8 (var_location:SI pixel (reg:SI 3 r3 [181])) "../System/pomozne_funkcije.c":357:10 -1
     (nil))
(insn 110 115 111 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [181])
            (reg:SI 12 ip [182]))) "../System/pomozne_funkcije.c":358:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [181])
            (const_int 3069 [0xbfd]))
        (nil)))
(jump_insn 111 110 112 8 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "../System/pomozne_funkcije.c":358:6 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 156)
(note 112 111 121 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 121 112 122 9 (debug_marker) "../System/pomozne_funkcije.c":359:5 -1
     (nil))
(debug_insn 122 121 123 9 (var_location:QI red (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)) [0 t_wall[pixel_76]+0 S1 A8])) "../System/pomozne_funkcije.c":359:9 -1
     (nil))
(debug_insn 123 122 124 9 (debug_marker) "../System/pomozne_funkcije.c":360:5 -1
     (nil))
(debug_insn 124 123 125 9 (var_location:QI green (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
            (const:SI (plus:SI (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)
                    (const_int 1 [0x1])))) [0 t_wall[_15]+0 S1 A8])) "../System/pomozne_funkcije.c":360:11 -1
     (nil))
(debug_insn 125 124 126 9 (debug_marker) "../System/pomozne_funkcije.c":361:5 -1
     (nil))
(debug_insn 126 125 127 9 (var_location:QI blue (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
            (const:SI (plus:SI (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)
                    (const_int 2 [0x2])))) [0 t_wall[_16]+0 S1 A8])) "../System/pomozne_funkcije.c":361:10 -1
     (nil))
(debug_insn 127 126 128 9 (debug_marker) "../System/pomozne_funkcije.c":363:5 -1
     (nil))
(debug_insn 128 127 129 9 (var_location:SI r (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
                (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)) [0 t_wall[pixel_76]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(debug_insn 129 128 130 9 (var_location:SI g (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
                (const:SI (plus:SI (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)
                        (const_int 1 [0x1])))) [0 t_wall[_15]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(debug_insn 130 129 131 9 (var_location:SI b (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
                (const:SI (plus:SI (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)
                        (const_int 2 [0x2])))) [0 t_wall[_16]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(debug_insn 131 130 132 9 (debug_marker:BLK) "../System/pomozne_funkcije.c":154:15 -1
     (nil))
(debug_insn 132 131 133 9 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 133 132 134 9 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(debug_insn 134 133 135 9 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(debug_insn 135 134 140 9 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":363:33 -1
     (nil))
(insn 140 135 118 9 (set (reg/f:SI 9 r9 [187])
        (plus:SI (reg/f:SI 14 lr [243])
            (reg:SI 3 r3 [181]))) "../System/pomozne_funkcije.c":361:10 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [181])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>))
        (nil)))
(insn 118 140 119 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
            (const_int 57600 [0xe100]))) "../System/pomozne_funkcije.c":358:26 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 119 118 120 9 (set (pc)
        (if_then_else (ge (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "../System/pomozne_funkcije.c":358:26 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 156)
(note 120 119 142 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 142 120 152 10 NOTE_INSN_DELETED)
(note 152 142 144 10 NOTE_INSN_DELETED)
(insn 144 152 141 10 (set (reg:SI 3 r3 [orig:191 t_wall[pixel_76] ] [191])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 14 lr [243])
                    (reg:SI 3 r3 [181])) [0 t_wall[pixel_76]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 3 r3 [181])
                    (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000007a6f2d0 t_wall>)) [0 t_wall[pixel_76]+0 S1 A8]))
        (nil)))
(insn 141 144 150 10 (set (reg:SI 10 r10 [orig:188 t_wall[_16] ] [188])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 9 r9 [187])
                    (const_int 2 [0x2])) [0 t_wall[_16]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 150 141 145 10 (set (reg:SI 9 r9 [orig:197 t_wall[_15] ] [197])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 9 r9 [187])
                    (const_int 1 [0x1])) [0 t_wall[_15]+0 S1 A8]))) "../System/pomozne_funkcije.c":363:33 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 145 150 146 10 (set (reg:SI 3 r3 [192])
        (ashiftrt:SI (reg:SI 3 r3 [orig:191 t_wall[pixel_76] ] [191])
            (const_int 3 [0x3]))) "../System/pomozne_funkcije.c":156:14 147 {*arm_shiftsi3}
     (nil))
(insn 146 145 147 10 (set (reg:SI 3 r3 [193])
        (ashift:SI (reg:SI 3 r3 [192])
            (const_int 11 [0xb]))) "../System/pomozne_funkcije.c":156:18 147 {*arm_shiftsi3}
     (nil))
(insn 147 146 151 10 (set (reg:SI 3 r3 [194])
        (ior:SI (lshiftrt:SI (reg:SI 10 r10 [orig:188 t_wall[_16] ] [188])
                (const_int 3 [0x3]))
            (reg:SI 3 r3 [193]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 151 147 153 10 (set (reg:SI 9 r9 [198])
        (ashiftrt:SI (reg:SI 9 r9 [orig:197 t_wall[_15] ] [197])
            (const_int 2 [0x2]))) "../System/pomozne_funkcije.c":156:29 147 {*arm_shiftsi3}
     (nil))
(insn 153 151 155 10 (set (reg:SI 3 r3 [200])
        (ior:SI (ashift:SI (reg:SI 9 r9 [198])
                (const_int 5 [0x5]))
            (reg:SI 3 r3 [194]))) "../System/pomozne_funkcije.c":156:38 320 {*orr_shiftsi}
     (nil))
(insn 155 153 156 10 (set (mem:HI (plus:SI (mult:SI (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
                    (const_int 2 [0x2]))
                (reg/f:SI 6 r6 [242])) [3 MEM[symbol: pixels, index: ivtmp.198_104, step: 2, offset: 0B]+0 S2 A16])
        (reg:HI 3 r3 [200])) "../System/pomozne_funkcije.c":363:31 724 {*thumb2_movhi_vfp}
     (nil))
(code_label 156 155 157 11 141 (nil) [2 uses])
(note 157 156 167 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 167 157 169 11 (set (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
        (plus:SI (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":356:3 7 {*arm_addsi3}
     (nil))
(insn 169 167 170 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
            (reg:SI 0 r0 [orig:157 ivtmp.204 ] [157]))) "../System/pomozne_funkcije.c":356:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 170 169 171 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 168)
            (pc))) "../System/pomozne_funkcije.c":356:3 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 168)
(note 171 170 172 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 172 171 173 12 (debug_marker) "../System/pomozne_funkcije.c":367:3 -1
     (nil))
(debug_insn 173 172 174 12 (var_location:SI countY (debug_expr:SI D#15)) "../System/pomozne_funkcije.c":367:9 -1
     (nil))
(debug_insn 174 173 183 12 (debug_marker) "../System/pomozne_funkcije.c":354:21 -1
     (nil))
(insn 183 174 176 12 (set (reg:SI 0 r0 [orig:157 ivtmp.204 ] [157])
        (plus:SI (reg:SI 2 r2 [orig:155 ivtmp.198 ] [155])
            (const_int 240 [0xf0]))) "../System/pomozne_funkcije.c":354:2 7 {*arm_addsi3}
     (nil))
(insn 176 183 177 12 (set (reg/v:SF 29 s13 [orig:141 y ] [141])
        (plus:SF (reg/v:SF 29 s13 [orig:141 y ] [141])
            (reg:SF 30 s14 [202]))) "../System/pomozne_funkcije.c":354:22 758 {*addsf3_vfp}
     (nil))
(debug_insn 177 176 178 12 (var_location:SF delta (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":349:8 -1
     (nil))
(debug_insn 178 177 179 12 (var_location:SI pixel (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":351:6 -1
     (nil))
(debug_insn 179 178 180 12 (var_location:SI countX (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":352:6 -1
     (nil))
(debug_insn 180 179 181 12 (var_location:SF y (reg/v:SF 29 s13 [orig:141 y ] [141])) -1
     (nil))
(debug_insn 181 180 182 12 (var_location:SI countY (debug_expr:SI D#15)) -1
     (nil))
(debug_insn 182 181 184 12 (debug_marker) "../System/pomozne_funkcije.c":354:16 -1
     (nil))
(insn 184 182 186 12 (set (reg:SI 7 r7 [orig:158 ivtmp.205 ] [158])
        (plus:SI (reg:SI 7 r7 [orig:158 ivtmp.205 ] [158])
            (const_int 240 [0xf0]))) "../System/pomozne_funkcije.c":354:2 7 {*arm_addsi3}
     (nil))
(insn 186 184 187 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 0 r0 [orig:157 ivtmp.204 ] [157])
            (reg:SI 8 r8 [204]))) "../System/pomozne_funkcije.c":354:2 268 {*arm_cmpsi_insn}
     (expr_list:REG_EQUAL (compare:CC (reg:SI 0 r0 [orig:157 ivtmp.204 ] [157])
            (const_int 58081 [0xe2e1]))
        (nil)))
(jump_insn 187 186 188 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 85)
            (pc))) "../System/pomozne_funkcije.c":354:2 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 85)
(note 188 187 296 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 296 188 299 13 NOTE_INSN_DELETED)
(note 299 296 300 13 NOTE_INSN_DELETED)
(note 300 299 302 13 NOTE_INSN_DELETED)
(note 302 300 311 13 NOTE_INSN_DELETED)
(note 311 302 314 13 NOTE_INSN_DELETED)
(note 314 311 315 13 NOTE_INSN_DELETED)
(note 315 314 317 13 NOTE_INSN_DELETED)
(note 317 315 189 13 NOTE_INSN_DELETED)
(debug_insn 189 317 190 13 (debug_marker) "../System/pomozne_funkcije.c":369:2 -1
     (nil))
(insn 190 189 191 13 (set (reg:SI 6 r6 [205])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 191 190 192 13 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 192 191 193 13 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 193 192 194 13 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 194 193 195 13 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 195 194 196 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":369:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 196 195 197 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":369:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 197 196 198 13 (debug_marker) "../System/pomozne_funkcije.c":370:2 -1
     (nil))
(insn 198 197 199 13 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":370:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 199 198 200 13 (set (reg:SI 2 r2)
        (reg:SI 3 r3)) "../System/pomozne_funkcije.c":370:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 240 [0xf0])
        (nil)))
(insn 200 199 201 13 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":370:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 201 200 202 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":370:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 202 201 203 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>) [0 ILI9341_SetDisplayWindow S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":370:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SetDisplayWindow") [flags 0x41]  <function_decl 0000000007843e00 ILI9341_SetDisplayWindow>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(debug_insn 203 202 205 13 (debug_marker) "../System/pomozne_funkcije.c":371:2 -1
     (nil))
(insn 205 203 206 13 (set (reg:SI 1 r1)
        (const_int 57600 [0xe100])) "../System/pomozne_funkcije.c":371:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 206 205 207 13 (set (reg:SI 0 r0)
        (symbol_ref:SI ("pixels") [flags 0xc0]  <var_decl 000000000786aa20 pixels>)) "../System/pomozne_funkcije.c":371:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 207 206 208 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>) [0 ILI9341_SendData S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":371:2 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("ILI9341_SendData") [flags 0x41]  <function_decl 0000000007843a00 ILI9341_SendData>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 208 207 209 13 (debug_marker) "../System/pomozne_funkcije.c":373:2 -1
     (nil))
(debug_insn 209 208 210 13 (var_location:SI r (const_int 0 [0])) "../System/pomozne_funkcije.c":373:2 -1
     (nil))
(debug_insn 210 209 211 13 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":373:2 -1
     (nil))
(debug_insn 211 210 212 13 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":373:2 -1
     (nil))
(debug_insn 212 211 213 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 213 212 214 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":373:57 -1
     (nil))
(debug_insn 214 213 215 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":373:57 -1
     (nil))
(debug_insn 215 214 217 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":373:57 -1
     (nil))
(insn 217 215 218 13 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":373:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 218 217 219 13 (set (reg:SI 3 r3)
        (const_int 92 [0x5c])) "../System/pomozne_funkcije.c":373:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 219 218 220 13 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":373:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 220 219 221 13 (set (reg:SI 1 r1)
        (const_int 80 [0x50])) "../System/pomozne_funkcije.c":373:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 221 220 222 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":373:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 222 221 223 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":373:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 223 222 224 13 (debug_marker) "../System/pomozne_funkcije.c":374:2 -1
     (nil))
(debug_insn 224 223 225 13 (var_location:SI r (const_int 0 [0])) "../System/pomozne_funkcije.c":374:2 -1
     (nil))
(debug_insn 225 224 226 13 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":374:2 -1
     (nil))
(debug_insn 226 225 227 13 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":374:2 -1
     (nil))
(debug_insn 227 226 228 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 228 227 229 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":374:57 -1
     (nil))
(debug_insn 229 228 230 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":374:57 -1
     (nil))
(debug_insn 230 229 232 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":374:57 -1
     (nil))
(insn 232 230 233 13 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":374:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 233 232 234 13 (set (reg:SI 3 r3)
        (const_int 104 [0x68])) "../System/pomozne_funkcije.c":374:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 234 233 235 13 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":374:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 235 234 236 13 (set (reg:SI 1 r1)
        (const_int 92 [0x5c])) "../System/pomozne_funkcije.c":374:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 236 235 237 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":374:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 237 236 238 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":374:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 238 237 239 13 (debug_marker) "../System/pomozne_funkcije.c":375:2 -1
     (nil))
(debug_insn 239 238 240 13 (var_location:SI r (const_int 0 [0])) "../System/pomozne_funkcije.c":375:2 -1
     (nil))
(debug_insn 240 239 241 13 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":375:2 -1
     (nil))
(debug_insn 241 240 242 13 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":375:2 -1
     (nil))
(debug_insn 242 241 243 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 243 242 244 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":375:57 -1
     (nil))
(debug_insn 244 243 245 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":375:57 -1
     (nil))
(debug_insn 245 244 247 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":375:57 -1
     (nil))
(insn 247 245 248 13 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 248 247 249 13 (set (reg:SI 3 r3)
        (const_int 157 [0x9d])) "../System/pomozne_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 249 248 250 13 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 250 249 251 13 (set (reg:SI 1 r1)
        (const_int 145 [0x91])) "../System/pomozne_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 251 250 252 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 252 251 253 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":375:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 253 252 254 13 (debug_marker) "../System/pomozne_funkcije.c":376:2 -1
     (nil))
(debug_insn 254 253 255 13 (var_location:SI r (const_int 0 [0])) "../System/pomozne_funkcije.c":376:2 -1
     (nil))
(debug_insn 255 254 256 13 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":376:2 -1
     (nil))
(debug_insn 256 255 257 13 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":376:2 -1
     (nil))
(debug_insn 257 256 258 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 258 257 259 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":376:57 -1
     (nil))
(debug_insn 259 258 260 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":376:57 -1
     (nil))
(debug_insn 260 259 263 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":376:57 -1
     (nil))
(insn 263 260 264 13 (set (reg:SI 3 r3)
        (const_int 177 [0xb1])) "../System/pomozne_funkcije.c":376:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 264 263 262 13 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) "../System/pomozne_funkcije.c":376:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 262 264 265 13 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 6 r6 [205])) "../System/pomozne_funkcije.c":376:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 265 262 266 13 (set (reg:SI 1 r1)
        (const_int 165 [0xa5])) "../System/pomozne_funkcije.c":376:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 266 265 267 13 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":376:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 267 266 268 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":376:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 268 267 270 13 (debug_marker) "../System/pomozne_funkcije.c":378:2 -1
     (nil))
(insn 270 268 271 13 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [238])) "../System/pomozne_funkcije.c":378:19 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(call_insn/i 271 270 395 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 00000000066a4100 strlen>) [0 __builtin_strlen S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":378:19 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 00000000066a4100 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 395 271 277 13 (set (reg:SI 7 r7 [252])
        (reg:SI 0 r0)) "../System/pomozne_funkcije.c":378:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 277 395 274 13 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [239])) "../System/pomozne_funkcije.c":379:19 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(debug_insn 274 277 275 13 (var_location:HI size1 (mult:HI (reg:HI 7 r7 [212])
        (const_int 9 [0x9]))) "../System/pomozne_funkcije.c":378:11 -1
     (nil))
(debug_insn 275 274 278 13 (debug_marker) "../System/pomozne_funkcije.c":379:2 -1
     (nil))
(call_insn/i 278 275 396 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 00000000066a4100 strlen>) [0 __builtin_strlen S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":379:19 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 00000000066a4100 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 396 278 290 13 (set (reg:SI 6 r6 [253])
        (reg:SI 0 r0)) "../System/pomozne_funkcije.c":379:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 290 396 281 13 (set (reg:SI 0 r0)
        (const_int 64398 [0xfb8e])) "../System/pomozne_funkcije.c":381:2 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 281 290 282 13 (var_location:HI size2 (mult:HI (reg:HI 6 r6 [214])
        (const_int 9 [0x9]))) "../System/pomozne_funkcije.c":379:11 -1
     (nil))
(debug_insn 282 281 283 13 (debug_marker) "../System/pomozne_funkcije.c":381:2 -1
     (nil))
(debug_insn 283 282 284 13 (var_location:SI r (const_int 255 [0xff])) "../System/pomozne_funkcije.c":381:2 -1
     (nil))
(debug_insn 284 283 285 13 (var_location:SI g (const_int 112 [0x70])) "../System/pomozne_funkcije.c":381:2 -1
     (nil))
(debug_insn 285 284 286 13 (var_location:SI b (const_int 112 [0x70])) "../System/pomozne_funkcije.c":381:2 -1
     (nil))
(debug_insn 286 285 287 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 287 286 288 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":381:18 -1
     (nil))
(debug_insn 288 287 289 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":381:18 -1
     (nil))
(debug_insn 289 288 291 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":381:18 -1
     (nil))
(call_insn 291 289 292 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":381:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 292 291 298 13 (debug_marker) "../System/pomozne_funkcije.c":382:2 -1
     (nil))
(insn 298 292 301 13 (set (reg:SI 7 r7 [220])
        (plus:SI (ashift:SI (reg:SI 7 r7 [212])
                (const_int 3 [0x3]))
            (reg:SI 7 r7 [212]))) "../System/pomozne_funkcije.c":378:11 318 {*add_shiftsi}
     (nil))
(insn 301 298 303 13 (set (reg:SI 0 r0 [223])
        (zero_extract:SI (reg:SI 7 r7 [220])
            (const_int 15 [0xf])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":382:30 161 {extzv_t2}
     (nil))
(insn 303 301 305 13 (set (reg:SI 2 r2)
        (reg/f:SI 5 r5 [238])) "../System/pomozne_funkcije.c":382:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(insn 305 303 304 13 (set (reg:SI 0 r0)
        (minus:SI (const_int 160 [0xa0])
            (reg:SI 0 r0 [223]))) "../System/pomozne_funkcije.c":382:2 45 {*arm_subsi3_insn}
     (nil))
(insn 304 305 306 13 (set (reg:SI 1 r1)
        (const_int 80 [0x50])) "../System/pomozne_funkcije.c":382:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 306 304 307 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":382:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 307 306 313 13 (debug_marker) "../System/pomozne_funkcije.c":383:2 -1
     (nil))
(insn 313 307 316 13 (set (reg:SI 6 r6 [230])
        (plus:SI (ashift:SI (reg:SI 6 r6 [214])
                (const_int 3 [0x3]))
            (reg:SI 6 r6 [214]))) "../System/pomozne_funkcije.c":379:11 318 {*add_shiftsi}
     (nil))
(insn 316 313 318 13 (set (reg:SI 0 r0 [233])
        (zero_extract:SI (reg:SI 6 r6 [230])
            (const_int 15 [0xf])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":383:30 161 {extzv_t2}
     (nil))
(insn 318 316 319 13 (set (reg:SI 2 r2)
        (reg/f:SI 4 r4 [239])) "../System/pomozne_funkcije.c":383:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(insn 319 318 320 13 (set (reg:SI 1 r1)
        (const_int 92 [0x5c])) "../System/pomozne_funkcije.c":383:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 320 319 321 13 (set (reg:SI 0 r0)
        (minus:SI (const_int 160 [0xa0])
            (reg:SI 0 r0 [233]))) "../System/pomozne_funkcije.c":383:2 45 {*arm_subsi3_insn}
     (nil))
(call_insn 321 320 322 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":383:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 322 321 323 13 (debug_marker) "../System/pomozne_funkcije.c":385:2 -1
     (nil))
(debug_insn 323 322 324 13 (var_location:SI r (const_int 112 [0x70])) "../System/pomozne_funkcije.c":385:2 -1
     (nil))
(debug_insn 324 323 325 13 (var_location:SI g (const_int 122 [0x7a])) "../System/pomozne_funkcije.c":385:2 -1
     (nil))
(debug_insn 325 324 326 13 (var_location:SI b (const_int 255 [0xff])) "../System/pomozne_funkcije.c":385:2 -1
     (nil))
(debug_insn 326 325 327 13 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 327 326 328 13 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":385:18 -1
     (nil))
(debug_insn 328 327 329 13 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":385:18 -1
     (nil))
(debug_insn 329 328 330 13 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":385:18 -1
     (nil))
(insn 330 329 331 13 (set (reg:SI 0 r0)
        (const_int 29663 [0x73df])) "../System/pomozne_funkcije.c":385:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 331 330 332 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>) [0 UG_SetForecolor S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":385:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_SetForecolor") [flags 0x41]  <function_decl 000000000787c900 UG_SetForecolor>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 332 331 334 13 (debug_marker) "../System/pomozne_funkcije.c":386:2 -1
     (nil))
(insn 334 332 335 13 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82]  <var_decl 0000000009f6a480 *.LC4>)) "../System/pomozne_funkcije.c":386:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 335 334 336 13 (set (reg:SI 1 r1)
        (const_int 145 [0x91])) "../System/pomozne_funkcije.c":386:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 336 335 337 13 (set (reg:SI 0 r0)
        (const_int 52 [0x34])) "../System/pomozne_funkcije.c":386:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 337 336 338 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":386:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 338 337 340 13 (debug_marker) "../System/pomozne_funkcije.c":387:2 -1
     (nil))
(insn 340 338 341 13 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82]  <var_decl 0000000009f6a510 *.LC5>)) "../System/pomozne_funkcije.c":387:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 341 340 342 13 (set (reg:SI 1 r1)
        (const_int 165 [0xa5])) "../System/pomozne_funkcije.c":387:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 342 341 343 13 (set (reg:SI 0 r0)
        (const_int 43 [0x2b])) "../System/pomozne_funkcije.c":387:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 343 342 344 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>) [0 UG_PutString S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":387:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_PutString") [flags 0x41]  <function_decl 000000000787c300 UG_PutString>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 344 343 345 13 (debug_marker) "../System/pomozne_funkcije.c":391:2 -1
     (nil))
(call_insn 345 344 346 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":391:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 346 345 403 13 (debug_marker) "../System/pomozne_funkcije.c":392:2 -1
     (nil))
(jump_insn 403 346 404 13 (set (pc)
        (label_ref 352)) "../System/pomozne_funkcije.c":392:7 284 {*arm_jump}
     (nil)
 -> 352)
(barrier 404 403 359)
(code_label 359 404 349 14 144 (nil) [1 uses])
(note 349 359 351 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 351 349 352 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":393:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(code_label 352 351 353 15 143 (nil) [1 uses])
(note 353 352 357 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 357 353 360 15 NOTE_INSN_DELETED)
(note 360 357 354 15 NOTE_INSN_DELETED)
(debug_insn 354 360 383 15 (debug_marker) "../System/pomozne_funkcije.c":392:7 -1
     (nil))
(insn 383 354 356 15 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":392:8 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 356 383 350 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":392:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 350 356 361 15 (debug_marker) "../System/pomozne_funkcije.c":393:3 -1
     (nil))
(jump_insn 361 350 413 15 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 0 r0 [254])
                        (const_int 0 [0]))
                    (label_ref 359)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":392:7 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 359)
(note 413 361 416 NOTE_INSN_DELETED)
(note 416 413 0 NOTE_INSN_DELETED)

;; Function check_victory (check_victory, funcdef_no=880, decl_uid=12008, cgraph_uid=884, symbol_order=891)

      Creating newreg=199
Removing SCRATCH in insn #168 (nop 3)
rescanning insn with uid = 168.
      Creating newreg=200
Removing SCRATCH in insn #180 (nop 3)
rescanning insn with uid = 180.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 82:  (0) =t  (1) t {floatunssisf2}
      Creating newreg=201 from oldreg=0, assigning class VFP_LO_REGS to r201
      Creating newreg=202 from oldreg=152, assigning class VFP_LO_REGS to r202
   82: r201:SF=uns_float(r202:SI)
      REG_DEAD r152:SI
    Inserting insn reload before:
  264: r202:SI=r152:SI
    Inserting insn reload after:
  263: r0:SF=r201:SF

            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) ?r  (1) t {*thumb2_movsf_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=6,overall=20,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=7,overall=10,losers=1,rld_nregs=0
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            alt=8,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            0 Non pseudo costly reload: reject++
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 264:  (0) *t  (1) r {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 67:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) m  (1) l {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 85:  (0) r  (1) mHa {*thumb2_movdf_vfp}
      Removing equiv init insn 100 (freq=1)
  100: r187:SI=sfp:SI+0x8
      REG_EQUIV sfp:SI-0x10
deleting insn with uid = 100.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) l  (1) mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =t  (1) ?r {*thumb2_movsf_vfp}
Changing pseudo 187 in operand 1 of insn 101 on equiv sfp:SI+0x8
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=203, assigning class CORE_REGS to r203
  101: r0:SI=r203:SI
      REG_EQUAL sfp:SI-0x10
    Inserting insn reload before:
  265: r203:SI=sfp:SI+0x8

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 265:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r203
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 245:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 246:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 243:  (0) r  (1) j {*thumb2_movsi_vfp}
Changing pseudo 187 in operand 1 of insn 124 on equiv sfp:SI+0x8
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=204, assigning class CORE_REGS to r204
  124: r0:SI=r204:SI
      REG_EQUAL sfp:SI-0x10
    Inserting insn reload before:
  266: r204:SI=sfp:SI+0x8

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 266:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r204
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 167:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) r  (1) I {*thumb2_movsi_vfp}
      Removing equiv init insn 238 (freq=1)
  238: r188:SI=sfp:SI+0x10
      REG_EQUIV sfp:SI-0x8
deleting insn with uid = 238.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) r  (1) I {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r199
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) l  (1) l  (2) l {*arm_addsi3}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r200
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) l  (1) l  (2) l {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) r  (2) r  (3) r {*mls}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 177:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) r  (2) r  (3) r {*mls}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 193:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 194:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 195:  (0) r  (1) rk  (2) rI {*arm_addsi3}
Changing pseudo 188 in operand 1 of insn 201 on equiv sfp:SI+0x10
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 201:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=205, assigning class CORE_REGS to r205
  201: r0:SI=r205:SI
      REG_EQUAL sfp:SI-0x8
    Inserting insn reload before:
  267: r205:SI=sfp:SI+0x10

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 267:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r205
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 188 in operand 1 of insn 209 on equiv sfp:SI+0x10
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=15,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=9,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
      Creating newreg=206, assigning class CORE_REGS to r206
  209: r0:SI=r206:SI
      REG_EQUAL sfp:SI-0x8
    Inserting insn reload before:
  268: r206:SI=sfp:SI+0x10

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=2,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 268:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r206
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) l {*thumb2_cbz}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =l  (1) l  (2) lPt {thumb2_addsi3_compare0}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
  BB 13
   Insn 228: point = 0, n_alt = -1
  BB 12
   Insn 223: point = 0, n_alt = -1
   Insn 222: point = 0, n_alt = 0
  BB 11
   Insn 215: point = 2, n_alt = 0
   Insn 254: point = 3, n_alt = -2
   Insn 210: point = 4, n_alt = -1
   Insn 209: point = 4, n_alt = 0
	Hard reg 0 is preferable by r206 with profit 1000
   Insn 268: point = 5, n_alt = 4
   Insn 242: point = 6, n_alt = 1
  BB 10
   Insn 202: point = 7, n_alt = -1
   Insn 201: point = 7, n_alt = 0
	Hard reg 0 is preferable by r205 with profit 110
   Insn 267: point = 8, n_alt = 4
   Insn 198: point = 9, n_alt = -1
   Insn 197: point = 9, n_alt = -2
   Insn 196: point = 10, n_alt = -2
   Insn 195: point = 11, n_alt = 4
   Insn 194: point = 11, n_alt = 4
   Insn 193: point = 11, n_alt = 8
   Insn 257: point = 11, n_alt = 0
   Insn 178: point = 13, n_alt = 0
   Insn 187: point = 15, n_alt = 0
   Insn 177: point = 17, n_alt = 2
   Insn 184: point = 19, n_alt = 1
   Insn 175: point = 21, n_alt = 0
   Insn 183: point = 23, n_alt = 1
   Insn 181: point = 24, n_alt = 1
   Insn 172: point = 26, n_alt = 1
   Insn 171: point = 28, n_alt = 1
   Insn 180: point = 29, n_alt = 0
   Insn 169: point = 30, n_alt = 1
   Insn 168: point = 32, n_alt = 0
   Insn 164: point = 33, n_alt = -2
   Insn 253: point = 35, n_alt = -2
   Insn 163: point = 36, n_alt = -1
   Insn 160: point = 36, n_alt = -2
   Insn 252: point = 38, n_alt = -2
   Insn 159: point = 39, n_alt = -1
  BB 9
   Insn 192: point = 40, n_alt = 1
   Insn 173: point = 41, n_alt = 1
   Insn 3: point = 42, n_alt = 1
   Insn 167: point = 43, n_alt = 5
   Insn 139: point = 44, n_alt = -1
   Insn 138: point = 44, n_alt = 1
   Insn 134: point = 44, n_alt = -1
   Insn 133: point = 44, n_alt = -2
  r188 is added to live at bb9 start
  BB 8
   Insn 130: point = 46, n_alt = 0
   Insn 244: point = 47, n_alt = 1
   Insn 251: point = 47, n_alt = -2
   Insn 125: point = 48, n_alt = -1
   Insn 124: point = 48, n_alt = 0
	Hard reg 0 is preferable by r204 with profit 10
   Insn 266: point = 49, n_alt = 4
   Insn 243: point = 50, n_alt = 4
  BB 6
   Insn 255: point = 51, n_alt = -1
   Insn 102: point = 51, n_alt = -1
   Insn 101: point = 51, n_alt = 0
	Hard reg 0 is preferable by r203 with profit 1
   Insn 265: point = 52, n_alt = 4
   Insn 97: point = 53, n_alt = -1
   Insn 91: point = 53, n_alt = 0
   Insn 96: point = 55, n_alt = 5
   Insn 250: point = 55, n_alt = -2
   Insn 90: point = 56, n_alt = -1
   Insn 87: point = 56, n_alt = -1
   Insn 85: point = 56, n_alt = 6
   Insn 83: point = 56, n_alt = -1
   Insn 75: point = 56, n_alt = 7
   Insn 71: point = 57, n_alt = 7
   Insn 74: point = 58, n_alt = 4
   Insn 67: point = 59, n_alt = 7
   Insn 66: point = 60, n_alt = 1
   Insn 263: point = 61, n_alt = 1
	Hard reg 0 is preferable by r201 with profit 1
   Insn 82: point = 62, n_alt = 0
   Insn 264: point = 64, n_alt = 9
	Hard reg 0 is preferable by r202 with profit 1
   Insn 73: point = 66, n_alt = 5
   Insn 69: point = 67, n_alt = 5
   Insn 65: point = 68, n_alt = 5
   Insn 80: point = 69, n_alt = 5
   Insn 59: point = 71, n_alt = -1
   Insn 58: point = 71, n_alt = -2
   Insn 57: point = 71, n_alt = 5
  r187 is added to live at bb6 start
  BB 5
   Insn 45: point = 73, n_alt = 0
   Insn 43: point = 73, n_alt = 1
  BB 4
   Insn 35: point = 76, n_alt = 0
   Insn 33: point = 77, n_alt = 1
  BB 3
   Insn 25: point = 79, n_alt = 0
   Insn 23: point = 80, n_alt = 1
  BB 2
   Insn 15: point = 82, n_alt = 0
   Insn 13: point = 83, n_alt = 1
   Insn 12: point = 84, n_alt = 5
  BB 7
   Insn 118: point = 85, n_alt = -1
   Insn 247: point = 85, n_alt = 1
   Insn 115: point = 85, n_alt = -1
   Insn 246: point = 85, n_alt = 1
   Insn 112: point = 85, n_alt = -1
   Insn 245: point = 85, n_alt = 1
   Insn 109: point = 85, n_alt = -1
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 21 count 21 (  1.4)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  135  136
    liveout: 2:

        7   13  102  103  135

BB 3:
    gen: 3:

      135
    killed: 3:

      100  138
    livein: 3:

      135
    liveout: 3:

        7   13  102  103  135

BB 4:
    gen: 4:

      135
    killed: 4:

      100  140
    livein: 4:

      135
    liveout: 4:

        7   13  102  103  135

BB 5:
    gen: 5:

      135
    killed: 5:

      100  142
    livein: 5:

      135
    liveout: 5:

        7   13  102  103  142

BB 6:
    gen: 6:

      142
    killed: 6:

      120  143  144  145  146  148  149  152  193  201  202
      203
    livein: 6:

      142
    liveout: 6:

        7   13  102  103  120

BB 7:
    livein: 7:

      120
    liveout: 7:

        7   13  102  103  120

BB 8:
    killed: 8:

      100  194  204
    livein: 8:

      120
    liveout: 8:

        0    7   13  102  103  120

BB 9:
    gen: 9:

      120
    killed: 9:

      132  162  167  183
    livein: 9:

      120
    liveout: 9:

        7   13  102  103  132  162  167  183

BB 10:
    gen: 10:

      162  167  183
    killed: 10:

      121  125  127  128  160  161  163  165  168  170  171
      172  174  176  179  195  196  199  200  205
    livein: 10:

      132  162  167  183
    liveout: 10:

        7   13  102  103  132  162  167  183

BB 11:
    killed: 11:

      100  197  206
    livein: 11:

      132  162  167  183
    liveout: 11:

        7   13  102  103  132  162  167  183

BB 12:
    gen: 12:

      132
    killed: 12:

      100  132
    livein: 12:

      132  162  167  183
    liveout: 12:

        7   13  102  103  132  162  167  183

BB 13:
    liveout: 13:

        7   13  102  103

BB 14:
    liveout: 14:

        7   13  102  103
 r120: [85..85] [44..53]
 r121: [22..36]
 r125: [16..33]
 r127: [9..13]
 r128: [10..11]
 r132: [0..42]
 r135: [74..84]
 r136: [82..83]
 r138: [79..80]
 r140: [76..77]
 r142: [57..73]
 r143: [70..71]
 r144: [59..68]
 r145: [59..60]
 r146: [57..67]
 r148: [56..66]
 r149: [56..58]
 r152: [65..69]
 r160: [22..26]
 r161: [31..32]
 r162: [0..43]
 r163: [27..30]
 r165: [27..28]
 r167: [0..41]
 r168: [18..21]
 r170: [14..17]
 r171: [16..19]
 r172: [25..29]
 r174: [20..24]
 r176: [20..23]
 r179: [12..15]
 r183: [0..40]
 r187: [85..85] [46..72]
 r188: [0..45]
 r193: [54..55]
 r194: [46..47]
 r195: [37..38]
 r196: [34..35]
 r197: [2..3]
 r199: [32..32]
 r200: [29..29]
 r201: [61..62]
 r202: [63..64]
 r203: [51..52]
 r204: [48..49]
 r205: [7..8]
 r206: [4..5]
Compressing live ranges: from 86 to 62 - 72%
Ranges after the compression:
 r120: [61..61] [33..40]
 r121: [18..30]
 r125: [12..28]
 r127: [6..9]
 r128: [6..7]
 r132: [0..32]
 r135: [55..60]
 r136: [59..60]
 r138: [57..58]
 r140: [55..56]
 r142: [43..54]
 r143: [53..54]
 r144: [45..52]
 r145: [45..46]
 r146: [43..52]
 r148: [43..52]
 r149: [43..44]
 r152: [51..52]
 r160: [18..21]
 r161: [26..27]
 r162: [0..32]
 r163: [22..25]
 r165: [22..23]
 r167: [0..32]
 r168: [14..17]
 r170: [10..13]
 r171: [12..15]
 r172: [20..24]
 r174: [16..19]
 r176: [16..19]
 r179: [8..11]
 r183: [0..32]
 r187: [61..61] [35..54]
 r188: [0..34]
 r193: [41..42]
 r194: [35..36]
 r195: [31..32]
 r196: [29..30]
 r197: [0..1]
 r199: [27..27]
 r200: [24..24]
 r201: [47..48]
 r202: [49..50]
 r203: [39..40]
 r204: [37..38]
 r205: [4..5]
 r206: [2..3]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 14
  BB 13
   Insn 228: point = 0, n_alt = -1
  BB 12
   Insn 223: point = 0, n_alt = -1
   Insn 222: point = 0, n_alt = 0
  BB 11
   Insn 215: point = 2, n_alt = 0
   Insn 254: point = 3, n_alt = -2
   Insn 210: point = 4, n_alt = -1
   Insn 209: point = 4, n_alt = 0
	Hard reg 0 is preferable by r206 with profit 1000
   Insn 268: point = 5, n_alt = 4
   Insn 242: point = 6, n_alt = 1
  BB 10
   Insn 202: point = 7, n_alt = -1
   Insn 201: point = 7, n_alt = 0
	Hard reg 0 is preferable by r205 with profit 110
   Insn 267: point = 8, n_alt = 4
   Insn 198: point = 9, n_alt = -1
   Insn 197: point = 9, n_alt = -2
   Insn 196: point = 10, n_alt = -2
   Insn 195: point = 11, n_alt = 4
   Insn 194: point = 11, n_alt = 4
   Insn 193: point = 11, n_alt = 8
   Insn 257: point = 11, n_alt = 0
   Insn 178: point = 13, n_alt = 0
   Insn 187: point = 15, n_alt = 0
   Insn 177: point = 17, n_alt = 2
   Insn 184: point = 19, n_alt = 1
   Insn 175: point = 21, n_alt = 0
   Insn 183: point = 23, n_alt = 1
   Insn 181: point = 24, n_alt = 1
   Insn 172: point = 26, n_alt = 1
   Insn 171: point = 28, n_alt = 1
   Insn 180: point = 29, n_alt = 0
   Insn 169: point = 30, n_alt = 1
   Insn 168: point = 32, n_alt = 0
   Insn 164: point = 33, n_alt = -2
   Insn 253: point = 35, n_alt = -2
   Insn 163: point = 36, n_alt = -1
   Insn 160: point = 36, n_alt = -2
   Insn 252: point = 38, n_alt = -2
   Insn 159: point = 39, n_alt = -1
  BB 9
   Insn 192: point = 40, n_alt = 1
   Insn 173: point = 41, n_alt = 1
   Insn 3: point = 42, n_alt = 1
   Insn 167: point = 43, n_alt = 5
   Insn 139: point = 44, n_alt = -1
   Insn 138: point = 44, n_alt = 1
   Insn 134: point = 44, n_alt = -1
   Insn 133: point = 44, n_alt = -2
  BB 8
   Insn 130: point = 46, n_alt = 0
   Insn 244: point = 47, n_alt = 1
   Insn 251: point = 47, n_alt = -2
   Insn 125: point = 48, n_alt = -1
   Insn 124: point = 48, n_alt = 0
	Hard reg 0 is preferable by r204 with profit 10
   Insn 266: point = 49, n_alt = 4
   Insn 243: point = 50, n_alt = 4
  BB 6
   Insn 255: point = 51, n_alt = -1
   Insn 102: point = 51, n_alt = -1
   Insn 101: point = 51, n_alt = 0
	Hard reg 0 is preferable by r203 with profit 1
   Insn 265: point = 52, n_alt = 4
   Insn 97: point = 53, n_alt = -1
   Insn 91: point = 53, n_alt = 0
   Insn 96: point = 55, n_alt = 5
   Insn 250: point = 55, n_alt = -2
   Insn 90: point = 56, n_alt = -1
   Insn 87: point = 56, n_alt = -1
   Insn 85: point = 56, n_alt = 6
   Insn 83: point = 56, n_alt = -1
   Insn 75: point = 56, n_alt = 7
   Insn 71: point = 57, n_alt = 7
   Insn 74: point = 58, n_alt = 4
   Insn 67: point = 59, n_alt = 7
   Insn 66: point = 60, n_alt = 1
   Insn 263: point = 61, n_alt = 1
	Hard reg 0 is preferable by r201 with profit 1
   Insn 82: point = 62, n_alt = 0
   Insn 264: point = 64, n_alt = 9
	Hard reg 0 is preferable by r202 with profit 1
   Insn 73: point = 66, n_alt = 5
   Insn 69: point = 67, n_alt = 5
   Insn 65: point = 68, n_alt = 5
   Insn 80: point = 69, n_alt = 5
   Insn 59: point = 71, n_alt = -1
   Insn 58: point = 71, n_alt = -2
   Insn 57: point = 71, n_alt = 5
  BB 5
   Insn 45: point = 73, n_alt = 0
   Insn 43: point = 73, n_alt = 1
  BB 4
   Insn 35: point = 76, n_alt = 0
   Insn 33: point = 77, n_alt = 1
  BB 3
   Insn 25: point = 79, n_alt = 0
   Insn 23: point = 80, n_alt = 1
  BB 2
   Insn 15: point = 82, n_alt = 0
   Insn 13: point = 83, n_alt = 1
   Insn 12: point = 84, n_alt = 5
  BB 7
   Insn 118: point = 85, n_alt = -1
   Insn 247: point = 85, n_alt = 1
   Insn 115: point = 85, n_alt = -1
   Insn 246: point = 85, n_alt = 1
   Insn 112: point = 85, n_alt = -1
   Insn 245: point = 85, n_alt = 1
   Insn 109: point = 85, n_alt = -1
 r120: [85..85] [44..53]
 r121: [22..36]
 r125: [16..33]
 r127: [9..13]
 r128: [10..11]
 r132: [0..42]
 r135: [74..84]
 r136: [82..83]
 r138: [79..80]
 r140: [76..77]
 r142: [57..73]
 r143: [70..71]
 r144: [59..68]
 r145: [59..60]
 r146: [57..67]
 r148: [56..66]
 r149: [56..58]
 r152: [65..69]
 r160: [22..26]
 r161: [31..32]
 r162: [0..43]
 r163: [27..30]
 r165: [27..28]
 r167: [0..41]
 r168: [18..21]
 r170: [14..17]
 r171: [16..19]
 r172: [25..29]
 r174: [20..24]
 r176: [20..23]
 r179: [12..15]
 r183: [0..40]
 r193: [54..55]
 r194: [46..47]
 r195: [37..38]
 r196: [34..35]
 r197: [2..3]
 r199: [32..32]
 r200: [29..29]
 r201: [61..62]
 r202: [63..64]
 r203: [51..52]
 r204: [48..49]
 r205: [7..8]
 r206: [4..5]
Compressing live ranges: from 86 to 60 - 69%
Ranges after the compression:
 r120: [59..59] [33..38]
 r121: [18..30]
 r125: [12..28]
 r127: [6..9]
 r128: [6..7]
 r132: [0..32]
 r135: [53..58]
 r136: [57..58]
 r138: [55..56]
 r140: [53..54]
 r142: [41..52]
 r143: [51..52]
 r144: [43..50]
 r145: [43..44]
 r146: [41..50]
 r148: [41..50]
 r149: [41..42]
 r152: [49..50]
 r160: [18..21]
 r161: [26..27]
 r162: [0..32]
 r163: [22..25]
 r165: [22..23]
 r167: [0..32]
 r168: [14..17]
 r170: [10..13]
 r171: [12..15]
 r172: [20..24]
 r174: [16..19]
 r176: [16..19]
 r179: [8..11]
 r183: [0..32]
 r193: [39..40]
 r194: [33..34]
 r195: [31..32]
 r196: [29..30]
 r197: [0..1]
 r199: [27..27]
 r200: [24..24]
 r201: [45..46]
 r202: [47..48]
 r203: [37..38]
 r204: [35..36]
 r205: [4..5]
 r206: [2..3]

********** Assignment #1: **********

	 Assigning to 206 (cl=GENERAL_REGS, orig=206, freq=2000, tfirst=206, tfreq=2000)...
	   Assign 0 to reload r206 (freq=2000)
	 Assigning to 205 (cl=GENERAL_REGS, orig=205, freq=220, tfirst=205, tfreq=220)...
	   Assign 0 to reload r205 (freq=220)
	 Assigning to 199 (cl=GENERAL_REGS, orig=199, freq=110, tfirst=199, tfreq=110)...
	   Assign 3 to reload r199 (freq=110)
	 Assigning to 200 (cl=GENERAL_REGS, orig=200, freq=110, tfirst=200, tfreq=110)...
	   Assign 2 to reload r200 (freq=110)
	 Assigning to 204 (cl=GENERAL_REGS, orig=204, freq=20, tfirst=204, tfreq=20)...
	   Assign 0 to reload r204 (freq=20)
	 Assigning to 203 (cl=GENERAL_REGS, orig=203, freq=2, tfirst=203, tfreq=2)...
	   Assign 0 to reload r203 (freq=2)
	 Assigning to 201 (cl=VFP_LO_REGS, orig=201, freq=2, tfirst=201, tfreq=2)...
	   Assign 31 to reload r201 (freq=2)
	 Assigning to 202 (cl=VFP_LO_REGS, orig=152, freq=2, tfirst=202, tfreq=2)...
	   Assign 31 to reload r202 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=56)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=24)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
changing reg in insn 91
changing reg in insn 133
changing reg in insn 93
changing reg in insn 160
changing reg in insn 168
changing reg in insn 175
changing reg in insn 171
changing reg in insn 169
changing reg in insn 161
changing reg in insn 168
changing reg in insn 164
changing reg in insn 180
changing reg in insn 187
changing reg in insn 183
changing reg in insn 181
changing reg in insn 165
changing reg in insn 180
changing reg in insn 178
changing reg in insn 195
changing reg in insn 197
changing reg in insn 257
changing reg in insn 194
changing reg in insn 196
changing reg in insn 222
changing reg in insn 3
changing reg in insn 222
changing reg in insn 222
changing reg in insn 12
changing reg in insn 43
changing reg in insn 33
changing reg in insn 23
changing reg in insn 13
changing reg in insn 13
changing reg in insn 15
changing reg in insn 23
changing reg in insn 25
changing reg in insn 33
changing reg in insn 35
changing reg in insn 43
changing reg in insn 45
changing reg in insn 71
changing reg in insn 57
changing reg in insn 58
changing reg in insn 80
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 71
changing reg in insn 73
changing reg in insn 75
changing reg in insn 74
changing reg in insn 75
changing reg in insn 80
changing reg in insn 172
changing reg in insn 175
changing reg in insn 168
changing reg in insn 169
changing reg in insn 167
changing reg in insn 180
changing reg in insn 168
changing reg in insn 169
changing reg in insn 172
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 187
changing reg in insn 175
changing reg in insn 175
changing reg in insn 177
changing reg in insn 177
changing reg in insn 184
changing reg in insn 187
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 184
changing reg in insn 183
changing reg in insn 184
changing reg in insn 187
changing reg in insn 192
changing reg in insn 193
changing reg in insn 250
changing reg in insn 91
changing reg in insn 251
changing reg in insn 130
changing reg in insn 252
changing reg in insn 160
changing reg in insn 253
changing reg in insn 164
changing reg in insn 254
changing reg in insn 215
changing reg in insn 168
changing reg in insn 180
deleting insn with uid = 101.
deleting insn with uid = 124.
deleting insn with uid = 252.
deleting insn with uid = 253.
deleting insn with uid = 164.
deleting insn with uid = 196.
deleting insn with uid = 197.
deleting insn with uid = 201.
deleting insn with uid = 209.
deleting insn with uid = 254.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 125.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 159.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 210.
verify found no changes in insn with uid = 228.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 21 count 19 (  1.3)
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 21 count 19 (  1.3)


check_victory

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 31 [s15] 32 [s16] 100 [cc]
;;  ref usage 	r0={34d,26u,1e} r1={30d,11u} r2={31d,10u} r3={29d,11u} r4={4d,9u,1e} r5={4d,5u} r6={1d,2u} r7={1d,2u} r8={1d,1u} r12={38d} r13={1d,39u} r14={20d} r15={19d} r16={21d,1u} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={20d} r30={20d} r31={22d,2u} r32={1d,2u} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r81={19d} r82={19d} r83={19d} r84={19d} r85={19d} r86={19d} r87={19d} r88={19d} r89={19d} r90={19d} r91={19d} r92={19d} r93={19d} r94={19d} r95={19d} r96={19d} r97={19d} r98={19d} r99={19d} r100={26d,1u} r101={19d} r104={19d} r105={19d} r106={19d} 
;;    total ref usage 1751{1627d,122u,2e} in 166{147 regular + 19 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 14 2 NOTE_INSN_FUNCTION_BEG)
(note 14 2 6 2 NOTE_INSN_DELETED)
(debug_insn 6 14 7 2 (debug_marker) "../System/pomozne_funkcije.c":281:2 -1
     (nil))
(debug_insn 7 6 8 2 (debug_marker) "../System/pomozne_funkcije.c":281:6 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 9 8 10 2 (debug_marker) "../System/pomozne_funkcije.c":281:14 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 11 10 12 2 (debug_marker) "../System/pomozne_funkcije.c":282:3 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)) "../System/pomozne_funkcije.c":282:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
        (nil)))
(insn 13 12 15 2 (set (reg:SI 2 r2 [orig:136 sp[0].life ] [136])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [135])
                    (const_int 24 [0x18])) [0 sp[0].life+0 S1 A32]))) "../System/pomozne_funkcije.c":282:5 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 24 [0x18]))) [0 sp[0].life+0 S1 A32]))
        (nil)))
(jump_insn 15 13 16 2 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:136 sp[0].life ] [136])
                        (const_int 0 [0]))
                    (label_ref:SI 231)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":282:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 231)
(note 16 15 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 24 16 17 3 NOTE_INSN_DELETED)
(debug_insn 17 24 18 3 (debug_marker) "../System/pomozne_funkcije.c":281:30 -1
     (nil))
(debug_insn 18 17 19 3 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 19 18 20 3 (debug_marker) "../System/pomozne_funkcije.c":281:14 -1
     (nil))
(debug_insn 20 19 21 3 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 21 20 23 3 (debug_marker) "../System/pomozne_funkcije.c":282:3 -1
     (nil))
(insn 23 21 25 3 (set (reg:SI 2 r2 [orig:138 sp[1].life ] [138])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [135])
                    (const_int 468 [0x1d4])) [0 sp[1].life+0 S1 A32]))) "../System/pomozne_funkcije.c":282:5 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 468 [0x1d4]))) [0 sp[1].life+0 S1 A32]))
        (nil)))
(jump_insn 25 23 26 3 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:138 sp[1].life ] [138])
                        (const_int 0 [0]))
                    (label_ref:SI 231)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":282:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 231)
(note 26 25 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 34 26 27 4 NOTE_INSN_DELETED)
(debug_insn 27 34 28 4 (debug_marker) "../System/pomozne_funkcije.c":281:30 -1
     (nil))
(debug_insn 28 27 29 4 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 29 28 30 4 (debug_marker) "../System/pomozne_funkcije.c":281:14 -1
     (nil))
(debug_insn 30 29 31 4 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 31 30 33 4 (debug_marker) "../System/pomozne_funkcije.c":282:3 -1
     (nil))
(insn 33 31 35 4 (set (reg:SI 2 r2 [orig:140 sp[2].life ] [140])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [135])
                    (const_int 912 [0x390])) [0 sp[2].life+0 S1 A32]))) "../System/pomozne_funkcije.c":282:5 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 912 [0x390]))) [0 sp[2].life+0 S1 A32]))
        (nil)))
(jump_insn 35 33 36 4 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:140 sp[2].life ] [140])
                        (const_int 0 [0]))
                    (label_ref:SI 231)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":282:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 231)
(note 36 35 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 44 36 37 5 NOTE_INSN_DELETED)
(debug_insn 37 44 38 5 (debug_marker) "../System/pomozne_funkcije.c":281:30 -1
     (nil))
(debug_insn 38 37 39 5 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 39 38 40 5 (debug_marker) "../System/pomozne_funkcije.c":281:14 -1
     (nil))
(debug_insn 40 39 41 5 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 41 40 43 5 (debug_marker) "../System/pomozne_funkcije.c":282:3 -1
     (nil))
(insn 43 41 45 5 (set (reg:SI 4 r4 [orig:142 sp[3].life ] [142])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [135])
                    (const_int 1356 [0x54c])) [0 sp[3].life+0 S1 A32]))) "../System/pomozne_funkcije.c":282:5 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 1356 [0x54c]))) [0 sp[3].life+0 S1 A32]))
        (nil)))
(jump_insn 45 43 52 5 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 4 r4 [orig:142 sp[3].life ] [142])
                        (const_int 0 [0]))
                    (label_ref:SI 231)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":282:5 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 59055804 (nil))
 -> 231)
(note 52 45 81 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 81 52 53 6 NOTE_INSN_DELETED)
(debug_insn 53 81 54 6 (debug_marker) "../System/pomozne_funkcije.c":281:30 -1
     (nil))
(debug_insn 54 53 55 6 (var_location:SI i (const_int 4 [0x4])) -1
     (nil))
(debug_insn 55 54 56 6 (debug_marker) "../System/pomozne_funkcije.c":281:14 -1
     (nil))
(debug_insn 56 55 57 6 (debug_marker) "../System/pomozne_funkcije.c":284:2 -1
     (nil))
(insn 57 56 58 6 (set (reg/f:SI 5 r5 [143])
        (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)) "../System/pomozne_funkcije.c":284:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)
        (nil)))
(insn 58 57 59 6 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [143])) "../System/pomozne_funkcije.c":284:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)
        (nil)))
(call_insn 59 58 60 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 000000000697d900 TIMUT_stopwatch_update>) [0 TIMUT_stopwatch_update S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":284:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 000000000697d900 TIMUT_stopwatch_update>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 60 59 61 6 (debug_marker) "../System/pomozne_funkcije.c":285:2 -1
     (nil))
(debug_insn 61 60 62 6 (var_location:QI sound (const_int 1 [0x1])) "../System/pomozne_funkcije.c":285:2 -1
     (nil))
(debug_insn 62 61 63 6 (debug_marker:BLK) "../System/pomozne_funkcije.c":398:6 -1
     (nil))
(debug_insn 63 62 64 6 (debug_marker) "../System/pomozne_funkcije.c":399:2 -1
     (nil))
(debug_insn 64 63 80 6 (debug_marker) "../System/pomozne_funkcije.c":406:3 -1
     (nil))
(insn 80 64 65 6 (set (reg:SI 0 r0 [orig:152 score.elapsed_time ] [152])
        (mem/c:SI (plus:SI (reg/f:SI 5 r5 [143])
                (const_int 4 [0x4])) [7 score.elapsed_time+0 S4 A32])) "../System/pomozne_funkcije.c":286:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("score") [flags 0xc0]  <var_decl 000000000786ac60 score>)
                    (const_int 4 [0x4]))) [7 score.elapsed_time+0 S4 A32])
        (nil)))
(insn 65 80 69 6 (set (reg/f:SI 2 r2 [144])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)
        (nil)))
(insn 69 65 73 6 (set (reg/f:SI 1 r1 [146])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":407:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)
        (nil)))
(insn 73 69 264 6 (set (reg/f:SI 3 r3 [148])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)
        (nil)))
(insn 264 73 82 6 (set (reg:SI 31 s15 [orig:152 score.elapsed_time ] [152])
        (reg:SI 0 r0 [orig:152 score.elapsed_time ] [152])) "../System/pomozne_funkcije.c":286:21 728 {*thumb2_movsi_vfp}
     (nil))
(insn 82 264 263 6 (set (reg:SF 31 s15 [201])
        (unsigned_float:SF (reg:SI 31 s15 [orig:152 score.elapsed_time ] [152]))) "../System/pomozne_funkcije.c":286:21 811 {floatunssisf2}
     (nil))
(insn 263 82 66 6 (set (reg:SF 0 r0)
        (reg:SF 31 s15 [201])) "../System/pomozne_funkcije.c":286:21 737 {*thumb2_movsf_vfp}
     (nil))
(insn 66 263 67 6 (set (reg:SI 5 r5 [145])
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 67 66 68 6 (set (mem/c:SI (reg/f:SI 2 r2 [144]) [5 sound_select+0 S4 A32])
        (reg:SI 5 r5 [145])) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 68 67 74 6 (debug_marker) "../System/pomozne_funkcije.c":407:3 -1
     (nil))
(insn 74 68 71 6 (set (reg:SI 2 r2 [149])
        (const_int 2984 [0xba8])) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 2984 [0xba8])
        (nil)))
(insn 71 74 72 6 (set (mem/c:SI (reg/f:SI 1 r1 [146]) [5 sound_counter+0 S4 A32])
        (reg:SI 4 r4 [orig:142 sp[3].life ] [142])) "../System/pomozne_funkcije.c":407:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 72 71 75 6 (debug_marker) "../System/pomozne_funkcije.c":408:3 -1
     (nil))
(insn 75 72 76 6 (set (mem/c:SI (reg/f:SI 3 r3 [148]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [149])) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 76 75 77 6 (debug_marker) "../System/pomozne_funkcije.c":409:3 -1
     (nil))
(debug_insn 77 76 78 6 (var_location:QI sound (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":285:2 -1
     (nil))
(debug_insn 78 77 83 6 (debug_marker) "../System/pomozne_funkcije.c":286:2 -1
     (nil))
(call_insn/u 83 78 85 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":286:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 85 83 87 6 (set (reg:DF 2 r2)
        (const_double:DF 1.0000000000000000208166817117216851329430937767e-3 [0x0.83126e978d4fep-9])) "../System/pomozne_funkcije.c":286:47 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 87 85 90 6 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":286:47 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 90 87 250 6 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":286:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 250 90 100 6 (set (reg:SF 3 r3 [193])
        (reg:SF 0 r0)) "../System/pomozne_funkcije.c":286:8 737 {*thumb2_movsf_vfp}
     (nil))
(note 100 250 96 6 NOTE_INSN_DELETED)
(insn 96 100 91 6 (set (reg:SI 0 r0)
        (symbol_ref:SI ("t_victory_screen") [flags 0x82]  <var_decl 0000000007c5c2d0 t_victory_screen>)) "../System/pomozne_funkcije.c":287:2 728 {*thumb2_movsi_vfp}
     (nil))
(insn 91 96 93 6 (set (reg/v:SF 32 s16 [orig:120 curr_score ] [120])
        (reg:SF 3 r3 [193])) "../System/pomozne_funkcije.c":286:8 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 93 91 94 6 (var_location:SF curr_score (reg/v:SF 32 s16 [orig:120 curr_score ] [120])) "../System/pomozne_funkcije.c":286:8 -1
     (nil))
(debug_insn 94 93 97 6 (debug_marker) "../System/pomozne_funkcije.c":287:2 -1
     (nil))
(call_insn 97 94 98 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("draw_full_screen_image_without_red") [flags 0x3]  <function_decl 0000000007a76900 draw_full_screen_image_without_red>) [0 draw_full_screen_image_without_red S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":287:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("draw_full_screen_image_without_red") [flags 0x3]  <function_decl 0000000007a76900 draw_full_screen_image_without_red>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 98 97 99 6 (debug_marker) "../System/pomozne_funkcije.c":288:2 -1
     (nil))
(debug_insn 99 98 265 6 (debug_marker) "../System/pomozne_funkcije.c":289:2 -1
     (nil))
(insn 265 99 102 6 (set (reg:SI 0 r0 [203])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":289:2 7 {*arm_addsi3}
     (nil))
(call_insn 102 265 103 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":289:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 103 102 255 6 (debug_marker) "../System/pomozne_funkcije.c":290:2 -1
     (nil))
(jump_insn 255 103 256 6 (set (pc)
        (label_ref 119)) "../System/pomozne_funkcije.c":290:7 284 {*arm_jump}
     (nil)
 -> 119)
(barrier 256 255 128)
(code_label 128 256 106 7 159 (nil) [1 uses])
(note 106 128 109 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 109 106 110 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>) [0 LEDs_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":291:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 110 109 245 7 (debug_marker) "../System/pomozne_funkcije.c":292:3 -1
     (nil))
(insn 245 110 112 7 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) "../System/pomozne_funkcije.c":292:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 112 245 113 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000007732600 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":292:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000007732600 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 113 112 246 7 (debug_marker) "../System/pomozne_funkcije.c":293:3 -1
     (nil))
(insn 246 113 115 7 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/pomozne_funkcije.c":293:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 115 246 116 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>) [0 LEDs_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":293:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 116 115 247 7 (debug_marker) "../System/pomozne_funkcije.c":294:3 -1
     (nil))
(insn 247 116 118 7 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) "../System/pomozne_funkcije.c":294:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 118 247 119 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000007732600 HAL_Delay>) [0 HAL_Delay S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":294:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("HAL_Delay") [flags 0x41]  <function_decl 0000000007732600 HAL_Delay>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(code_label 119 118 120 8 158 (nil) [1 uses])
(note 120 119 126 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 126 120 129 8 NOTE_INSN_DELETED)
(note 129 126 121 8 NOTE_INSN_DELETED)
(debug_insn 121 129 243 8 (debug_marker) "../System/pomozne_funkcije.c":290:7 -1
     (nil))
(insn 243 121 266 8 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) "../System/pomozne_funkcije.c":290:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 266 243 125 8 (set (reg:SI 0 r0 [204])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":290:9 7 {*arm_addsi3}
     (nil))
(call_insn 125 266 107 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>) [0 TIMUT_stopwatch_has_X_ms_passed S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":290:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(debug_insn 107 125 251 8 (debug_marker) "../System/pomozne_funkcije.c":291:3 -1
     (nil))
(insn 251 107 244 8 (set (reg:SI 3 r3 [194])
        (reg:SI 0 r0)) "../System/pomozne_funkcije.c":290:9 728 {*thumb2_movsi_vfp}
     (nil))
(insn 244 251 130 8 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/pomozne_funkcije.c":291:3 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 130 244 131 8 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [194])
                        (const_int 0 [0]))
                    (label_ref 128)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":290:7 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 128)
(note 131 130 132 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 132 131 133 9 (debug_marker) "../System/pomozne_funkcije.c":296:2 -1
     (nil))
(insn 133 132 134 9 (set (reg:SF 16 s0)
        (reg/v:SF 32 s16 [orig:120 curr_score ] [120])) "../System/pomozne_funkcije.c":296:2 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 134 133 135 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("handle_score") [flags 0x3]  <function_decl 0000000007a76c00 handle_score>) [0 handle_score S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":296:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("handle_score") [flags 0x3]  <function_decl 0000000007a76c00 handle_score>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(debug_insn 135 134 136 9 (debug_marker) "../System/pomozne_funkcije.c":297:2 -1
     (nil))
(debug_insn 136 135 137 9 (debug_marker:BLK) "../System/pomozne_funkcije.c":81:6 -1
     (nil))
(debug_insn 137 136 138 9 (debug_marker) "../System/pomozne_funkcije.c":92:2 -1
     (nil))
(insn 138 137 139 9 (set (reg:SI 0 r0)
        (const_int 255 [0xff])) "../System/pomozne_funkcije.c":92:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 139 138 140 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>) [0 LEDs_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":92:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 140 139 141 9 (debug_marker) "../System/pomozne_funkcije.c":93:2 -1
     (nil))
(debug_insn 141 140 142 9 (debug_marker) "../System/pomozne_funkcije.c":94:2 -1
     (nil))
(debug_insn 142 141 143 9 (var_location:SI counter (const_int 0 [0])) "../System/pomozne_funkcije.c":94:6 -1
     (nil))
(debug_insn 143 142 144 9 (debug_marker) "../System/pomozne_funkcije.c":95:2 -1
     (nil))
(debug_insn 144 143 145 9 (debug_marker) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 145 144 146 9 (var_location:SI r (const_int 255 [0xff])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 146 145 147 9 (var_location:SI g (const_int 0 [0])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 147 146 148 9 (var_location:SI b (const_int 0 [0])) "../System/pomozne_funkcije.c":96:2 -1
     (nil))
(debug_insn 148 147 149 9 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 149 148 150 9 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 150 149 151 9 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 151 150 152 9 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 152 151 153 9 (var_location:SI red (const_int 63488 [0xf800])) "../System/pomozne_funkcije.c":96:17 -1
     (nil))
(debug_insn 153 152 154 9 (debug_marker) "../System/pomozne_funkcije.c":97:2 -1
     (nil))
(debug_insn 154 153 155 9 (var_location:SI counter (const_int 0 [0])) -1
     (nil))
(debug_insn 155 154 167 9 (debug_marker) "../System/pomozne_funkcije.c":97:8 -1
     (nil))
(insn 167 155 3 9 (set (reg:SI 7 r7 [162])
        (const_int -1935500283 [0xffffffff8ca29c05])) "../System/pomozne_funkcije.c":98:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int -1935500283 [0xffffffff8ca29c05])
        (nil)))
(insn 3 167 238 9 (set (reg:SI 5 r5 [orig:132 ivtmp_40 ] [132])
        (const_int 700 [0x2bc])) "../System/pomozne_funkcije.c":92:2 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 700 [0x2bc])
        (nil)))
(note 238 3 173 9 NOTE_INSN_DELETED)
(insn 173 238 192 9 (set (reg:SI 6 r6 [167])
        (const_int 233 [0xe9])) "../System/pomozne_funkcije.c":98:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 233 [0xe9])
        (nil)))
(insn 192 173 221 9 (set (reg:SI 8 r8 [183])
        (const_int 63488 [0xf800])) "../System/pomozne_funkcije.c":101:3 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 63488 [0xf800])
        (nil)))
(code_label 221 192 156 10 161 (nil) [1 uses])
(note 156 221 170 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 170 156 174 10 NOTE_INSN_DELETED)
(note 174 170 182 10 NOTE_INSN_DELETED)
(note 182 174 186 10 NOTE_INSN_DELETED)
(note 186 182 190 10 NOTE_INSN_DELETED)
(note 190 186 191 10 NOTE_INSN_DELETED)
(note 191 190 157 10 NOTE_INSN_DELETED)
(debug_insn 157 191 158 10 (var_location:SI counter (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 158 157 159 10 (debug_marker) "../System/pomozne_funkcije.c":98:3 -1
     (nil))
(call_insn 159 158 160 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":98:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 160 159 161 10 (set (reg:SI 4 r4 [orig:121 _29 ] [121])
        (reg:SI 0 r0 [195])) "../System/pomozne_funkcije.c":98:7 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 161 160 162 10 (var_location:HI x (plus:HI (subreg:HI (mod:SI (reg:SI 4 r4 [orig:121 _29 ] [121])
                (const_int 233 [0xe9])) 0)
        (const_int 40 [0x28]))) "../System/pomozne_funkcije.c":98:5 -1
     (nil))
(debug_insn 162 161 163 10 (debug_marker) "../System/pomozne_funkcije.c":99:3 -1
     (nil))
(call_insn 163 162 165 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":99:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 165 163 166 10 (var_location:HI y (subreg:HI (mod:SI (reg:SI 0 r0 [orig:125 _33 ] [125])
            (const_int 233 [0xe9])) 0)) "../System/pomozne_funkcije.c":99:5 -1
     (nil))
(debug_insn 166 165 168 10 (debug_marker) "../System/pomozne_funkcije.c":101:3 -1
     (nil))
(insn 168 166 169 10 (parallel [
            (set (reg:SI 2 r2 [161])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [orig:121 _29 ] [121]))
                            (sign_extend:DI (reg:SI 7 r7 [162])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [199]))
        ]) "../System/pomozne_funkcije.c":98:14 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 4 r4 [orig:121 _29 ] [121]))
                    (const_int -1935500283 [0xffffffff8ca29c05]))
                (const_int 32 [0x20])))
        (nil)))
(insn 169 168 180 10 (set (reg:SI 3 r3 [163])
        (plus:SI (reg:SI 2 r2 [161])
            (reg:SI 4 r4 [orig:121 _29 ] [121]))) "../System/pomozne_funkcije.c":98:14 7 {*arm_addsi3}
     (nil))
(insn 180 169 171 10 (parallel [
            (set (reg:SI 1 r1 [172])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:125 _33 ] [125]))
                            (sign_extend:DI (reg:SI 7 r7 [162])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [200]))
        ]) "../System/pomozne_funkcije.c":99:14 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:125 _33 ] [125]))
                    (const_int -1935500283 [0xffffffff8ca29c05]))
                (const_int 32 [0x20])))
        (nil)))
(insn 171 180 172 10 (set (reg:SI 2 r2 [165])
        (ashiftrt:SI (reg:SI 4 r4 [orig:121 _29 ] [121])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":98:14 147 {*arm_shiftsi3}
     (nil))
(insn 172 171 181 10 (set (reg:SI 2 r2 [160])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [163])
                (const_int 7 [0x7]))
            (reg:SI 2 r2 [165]))) "../System/pomozne_funkcije.c":98:14 319 {*rsb_shiftsi}
     (nil))
(insn 181 172 183 10 (set (reg:SI 3 r3 [174])
        (plus:SI (reg:SI 1 r1 [172])
            (reg:SI 0 r0 [orig:125 _33 ] [125]))) "../System/pomozne_funkcije.c":99:14 7 {*arm_addsi3}
     (nil))
(insn 183 181 175 10 (set (reg:SI 1 r1 [176])
        (ashiftrt:SI (reg:SI 0 r0 [orig:125 _33 ] [125])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":99:14 147 {*arm_shiftsi3}
     (nil))
(insn 175 183 184 10 (set (reg:SI 4 r4 [168])
        (minus:SI (reg:SI 4 r4 [orig:121 _29 ] [121])
            (mult:SI (reg:SI 6 r6 [167])
                (reg:SI 2 r2 [160])))) "../System/pomozne_funkcije.c":98:14 58 {*mls}
     (nil))
(insn 184 175 177 10 (set (reg:SI 1 r1 [171])
        (minus:SI (ashiftrt:SI (reg:SI 3 r3 [174])
                (const_int 7 [0x7]))
            (reg:SI 1 r1 [176]))) "../System/pomozne_funkcije.c":99:14 319 {*rsb_shiftsi}
     (nil))
(insn 177 184 187 10 (set (reg:SI 4 r4 [170])
        (plus:SI (reg:SI 4 r4 [168])
            (const_int 40 [0x28]))) "../System/pomozne_funkcije.c":98:5 7 {*arm_addsi3}
     (nil))
(insn 187 177 178 10 (set (reg:SI 1 r1 [179])
        (minus:SI (reg:SI 0 r0 [orig:125 _33 ] [125])
            (mult:SI (reg:SI 6 r6 [167])
                (reg:SI 1 r1 [171])))) "../System/pomozne_funkcije.c":99:14 58 {*mls}
     (nil))
(insn 178 187 257 10 (set (reg:SI 0 r0 [orig:127 _35 ] [127])
        (zero_extend:SI (reg:HI 4 r4 [170]))) "../System/pomozne_funkcije.c":101:3 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 257 178 193 10 (set (reg:SI 1 r1 [orig:128 _36 ] [128])
        (zero_extend:SI (reg:HI 1 r1 [179]))) 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 193 257 194 10 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 8 r8 [183])) "../System/pomozne_funkcije.c":101:3 728 {*thumb2_movsi_vfp}
     (nil))
(insn 194 193 195 10 (set (reg:SI 3 r3)
        (plus:SI (reg:SI 1 r1 [orig:128 _36 ] [128])
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":101:3 7 {*arm_addsi3}
     (nil))
(insn 195 194 198 10 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 0 r0 [orig:127 _35 ] [127])
            (const_int 8 [0x8]))) "../System/pomozne_funkcije.c":101:3 7 {*arm_addsi3}
     (nil))
(call_insn 198 195 199 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":101:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 199 198 267 10 (debug_marker) "../System/pomozne_funkcije.c":102:3 -1
     (nil))
(insn 267 199 202 10 (set (reg:SI 0 r0 [205])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) "../System/pomozne_funkcije.c":102:3 7 {*arm_addsi3}
     (nil))
(call_insn 202 267 203 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":102:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 000000000697d800 TIMUT_stopwatch_set_time_mark>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 203 202 213 10 (debug_marker) "../System/pomozne_funkcije.c":103:3 -1
     (nil))
(code_label 213 203 204 11 160 (nil) [1 uses])
(note 204 213 211 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 211 204 214 11 NOTE_INSN_DELETED)
(note 214 211 205 11 NOTE_INSN_DELETED)
(debug_insn 205 214 206 11 (debug_marker) "../System/pomozne_funkcije.c":103:56 -1
     (nil))
(debug_insn 206 205 242 11 (debug_marker) "../System/pomozne_funkcije.c":103:8 -1
     (nil))
(insn 242 206 268 11 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":103:10 728 {*thumb2_movsi_vfp}
     (nil))
(insn 268 242 210 11 (set (reg:SI 0 r0 [206])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) "../System/pomozne_funkcije.c":103:10 7 {*arm_addsi3}
     (nil))
(call_insn 210 268 215 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>) [0 TIMUT_stopwatch_has_X_ms_passed S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":103:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_has_X_ms_passed") [flags 0x41]  <function_decl 000000000697da00 TIMUT_stopwatch_has_X_ms_passed>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 215 210 216 11 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [197])
                        (const_int 0 [0]))
                    (label_ref:SI 213)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":103:8 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 213)
(note 216 215 220 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 220 216 217 12 NOTE_INSN_DELETED)
(debug_insn 217 220 218 12 (debug_marker) "../System/pomozne_funkcije.c":105:3 -1
     (nil))
(debug_insn 218 217 219 12 (var_location:SI counter (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 219 218 222 12 (debug_marker) "../System/pomozne_funkcije.c":97:8 -1
     (nil))
(insn 222 219 223 12 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 5 r5 [orig:132 ivtmp_40 ] [132])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 5 r5 [orig:132 ivtmp_40 ] [132])
                (plus:SI (reg:SI 5 r5 [orig:132 ivtmp_40 ] [132])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/pomozne_funkcije.c":97:8 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 223 222 224 12 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 221)
            (pc))) "../System/pomozne_funkcije.c":97:8 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1062895956 (nil))
 -> 221)
(note 224 223 225 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 225 224 226 13 (var_location:HI x (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":297:2 -1
     (nil))
(debug_insn 226 225 227 13 (var_location:SI counter (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":297:2 -1
     (nil))
(debug_insn 227 226 228 13 (debug_marker) "../System/pomozne_funkcije.c":298:2 -1
     (nil))
(call_insn 228 227 231 13 (parallel [
            (call (mem:SI (symbol_ref:SI ("init") [flags 0x3]  <function_decl 0000000007a76800 init>) [0 init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":298:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("init") [flags 0x3]  <function_decl 0000000007a76800 init>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(code_label 231 228 232 14 154 (nil) [4 uses])
(note 232 231 261 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 261 232 262 NOTE_INSN_DELETED)
(note 262 261 0 NOTE_INSN_DELETED)

;; Function shoot (shoot, funcdef_no=874, decl_uid=11979, cgraph_uid=878, symbol_order=885)

      Creating newreg=257
Removing SCRATCH in insn #256 (nop 3)
rescanning insn with uid = 256.
      Creating newreg=258
Removing SCRATCH in insn #286 (nop 3)
rescanning insn with uid = 286.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=48, prev_offset=0)
Can't eliminate 103 to 11 (offset=44, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 357:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 358:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Removing equiv init insn 40 (freq=33)
   40: r230:SI=`sound_select'
      REG_EQUIV `sound_select'
deleting insn with uid = 40.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 34:  (0) Uu  (1) l {*arm_movqi_insn}
      Removing equiv init insn 44 (freq=33)
   44: r232:SI=`sound_counter'
      REG_EQUIV `sound_counter'
deleting insn with uid = 44.
      Removing equiv init insn 48 (freq=33)
   48: r233:SI=`sound_limit'
      REG_EQUIV `sound_limit'
deleting insn with uid = 48.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing address in insn 42 r230:SI -- no change
Changing pseudo 230 in address of insn 42 on equiv `sound_select'
      Creating newreg=259, assigning class CORE_REGS to address r259
	   Change to class GENERAL_REGS for r259
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
   42: [r259:SI]=r162:SI
      REG_DEAD r162:SI
    Inserting insn reload before:
  419: r259:SI=`sound_select'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 419:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r259
Changing address in insn 46 r232:SI -- no change
Changing pseudo 232 in address of insn 46 on equiv `sound_counter'
      Creating newreg=260, assigning class CORE_REGS to address r260
	   Change to class GENERAL_REGS for r260
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) m  (1) l {*thumb2_movsi_vfp}
   46: [r260:SI]=r154:SI
    Inserting insn reload before:
  420: r260:SI=`sound_counter'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 420:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r260
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 60:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 49:  (0) r  (1) j {*thumb2_movsi_vfp}
Changing address in insn 50 r233:SI -- no change
Changing pseudo 233 in address of insn 50 on equiv `sound_limit'
      Creating newreg=261, assigning class CORE_REGS to address r261
	   Change to class GENERAL_REGS for r261
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) m  (1) l {*thumb2_movsi_vfp}
   50: [r261:SI]=r166:SI
      REG_DEAD r166:SI
    Inserting insn reload before:
  421: r261:SI=`sound_limit'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 421:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r261
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 71:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 245:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
      Removing equiv init insn 255 (freq=33)
  255: r239:SI=0x1b4e81b5
      REG_EQUIV 0x1b4e81b5
deleting insn with uid = 255.
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 285:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
      Removing equiv init insn 73 (freq=33)
   73: r150:SI=r124:SI+0x6f0
      REG_EQUIV const(`sp'+0x718)
deleting insn with uid = 73.
      Removing equiv init insn 236 (freq=33)
  236: r237:DF=-1.0000000000000000208166817117216851329430937767e-2
      REG_EQUIV -1.0000000000000000208166817117216851329430937767e-2
deleting insn with uid = 236.
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 266:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=22,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=13,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 270:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 410:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) l {*thumb2_cbz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) l {*thumb2_cbnz}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 123:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
Changing address in insn 107 r230:SI -- no change
Changing pseudo 230 in address of insn 107 on equiv `sound_select'
      Creating newreg=262, assigning class CORE_REGS to address r262
	   Change to class GENERAL_REGS for r262
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 107:  (0) m  (1) l {*thumb2_movsi_vfp}
  107: [r262:SI]=r170:SI
    Inserting insn reload before:
  422: r262:SI=`sound_select'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 422:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r262
Changing address in insn 111 r232:SI -- no change
Changing pseudo 232 in address of insn 111 on equiv `sound_counter'
      Creating newreg=263, assigning class CORE_REGS to address r263
	   Change to class GENERAL_REGS for r263
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 111:  (0) m  (1) l {*thumb2_movsi_vfp}
  111: [r263:SI]=r170:SI
      REG_DEAD r170:SI
    Inserting insn reload before:
  423: r263:SI=`sound_counter'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 423:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r263
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 126:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 120:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 114:  (0) r  (1) j {*thumb2_movsi_vfp}
Changing address in insn 115 r233:SI -- no change
Changing pseudo 233 in address of insn 115 on equiv `sound_limit'
      Creating newreg=264, assigning class CORE_REGS to address r264
	   Change to class GENERAL_REGS for r264
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) m  (1) l {*thumb2_movsi_vfp}
  115: [r264:SI]=r176:SI
      REG_DEAD r176:SI
    Inserting insn reload before:
  424: r264:SI=`sound_limit'

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 424:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r264
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) l {*thumb2_cbnz}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=11,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=11,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 372:  (0) r  (1) I  (2) rI {*thumb2_movsicc_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) l {*thumb2_cbnz}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) l {*thumb2_cbnz}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) l {*thumb2_cbnz}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 220:  (0) t  (1) UvHa {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 219:  (0) t  (1) Dv {*thumb2_movsf_vfp}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =&t  (1) t  (2) t {*divsf3_vfp}
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=22,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 229:  (0) t  (1) Dv {*thumb2_movsf_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) t  (1) t {*cmpsf_trap_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=21,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=6,overall=12,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7,overall=12,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 233:  (0) ?r  (1) t  (2) t {*thumb2_movsfcc_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=1,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=4,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 235:  (0) m  (1) r {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=22,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=8,overall=7,losers=1,rld_nregs=1
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=13,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=16,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=16,losers=2 -- refuse
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=16,losers=2 -- refuse
            alt=11: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=16,losers=2 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=15,overall=13,losers=1 -- refuse
	 Choosing alt 4 in insn 359:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Creating newreg=265 from oldreg=229, assigning class GENERAL_REGS to r265
  359: r265:SI=r251:SI+0x190
    Inserting insn reload after:
  425: r229:SI=r265:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 425:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=266 from oldreg=265, assigning class LO_REGS to r266
  425: r229:SI=r266:SI
    Inserting insn reload before:
  426: r266:SI=r265:SI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (1) I {*thumb2_movsi_vfp}
Changing pseudo 237 in operand 1 of insn 379 on equiv -1.0000000000000000208166817117216851329430937767e-2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=24,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 379:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=1,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=4,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=19,losers=2 -- refuse
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 239:  (0) m  (1) r {*thumb2_movdf_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly set: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 411:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=2,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 413:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 246:  (0) Uv  (1) t {*thumb2_movsf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=15,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 249:  (0) Uv  (1) t {*thumb2_movsf_vfp}
Changing pseudo 239 in operand 2 of insn 256 on equiv 0x1b4e81b5
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            3 Scratch win: reject+=2
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 256:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r257
      Creating newreg=267, assigning class GENERAL_REGS to r267
  256: {r200:SI=trunc(sign_extend(r128:SI)*sign_extend(r267:SI) 0>>0x20);clobber r257:SI;}
      REG_UNUSED r257:SI
      REG_EQUAL trunc(sign_extend(r128:SI)*0x1b4e81b5 0>>0x20)
    Inserting insn reload before:
  427: r267:SI=0x1b4e81b5

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 427:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r267
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 259:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) r  (2) r  (3) r {*mls}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 274:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 281:  (0) m  (1) r {*thumb2_movsf_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) =r  (1) %r  (2) r  (3) =r {*smull_high}
      Change to class GENERAL_REGS for r258
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 288:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) r  (1) r  (3) r  (4) M {*rsb_shiftsi}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) r  (2) r  (3) r {*mls}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=12,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=4,overall=10,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 296:  (0) r  (1) mHa {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=15,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=3,overall=21,losers=2 -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 303:  (0) m  (1) r {*thumb2_movsf_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 305:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 307:  (0) Uu  (1) l {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 311:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 314:  (0) r  (1) r {*arm_cmpsi_insn}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=8,losers=1,rld_nregs=1
            0 Costly set: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=2,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 414:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=13,losers=2 -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=2,overall=7,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=3,overall=7,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 327:  (0) r  (1) rk  (2) rI {*arm_addsi3}
Changing pseudo 150 in operand 1 of insn 329 on equiv const(`sp'+0x718)
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
	 Choosing alt 1 in insn 329:  (0) r  (1) r {*arm_cmpsi_insn}
      Creating newreg=268, assigning class GENERAL_REGS to r268
  329: cc:CC=cmp(r251:SI,r268:SI)
    Inserting insn reload before:
  428: r268:SI=const(`sp'+0x718)

            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 428:  (0) l  (1) mi {*thumb2_movsi_vfp}
      Change to class LO_REGS for r268
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 415:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 340:  (0) Uu  (1) l {*arm_movqi_insn}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 19
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of LO_REGS and GENERAL_REGS
      Creating newreg=269 from oldreg=229, assigning class LO_REGS to inheritance r269
    Original reg change 229->269 (bb19):
  425: r269:SI=r266:SI
    Add original<-inheritance after:
  429: r229:SI=r269:SI

    Inheritance reuse change 229->269 (bb19):
  413: r255:SI=r269:SI
      REG_DEAD r269:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   429: r229:SI=r269:SI
deleting insn with uid = 429.
EBB 20
EBB 23
EBB 21
EBB 24
EBB 22

********** Pseudo live ranges #1: **********

  BB 22
   Insn 340: point = 0, n_alt = 6
   Insn 394: point = 1, n_alt = -2
   Insn 335: point = 2, n_alt = -1
   Insn 334: point = 2, n_alt = 1
  BB 5
   Insn 399: point = 3, n_alt = -1
   Insn 358: point = 3, n_alt = 5
  BB 24
   Insn 415: point = 4, n_alt = 5
  BB 21
   Insn 330: point = 7, n_alt = -1
   Insn 329: point = 7, n_alt = 1
   Insn 428: point = 8, n_alt = 5
   Insn 327: point = 9, n_alt = 4
  BB 23
   Insn 414: point = 11, n_alt = 6
  BB 20
   Insn 315: point = 14, n_alt = -1
   Insn 314: point = 14, n_alt = 1
   Insn 311: point = 14, n_alt = 2
   Insn 307: point = 15, n_alt = 6
   Insn 305: point = 16, n_alt = 1
   Insn 303: point = 17, n_alt = 6
   Insn 393: point = 18, n_alt = -2
   Insn 301: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -1
   Insn 296: point = 19, n_alt = 6
   Insn 294: point = 19, n_alt = -1
   Insn 293: point = 19, n_alt = 0
   Insn 290: point = 20, n_alt = 1
   Insn 289: point = 21, n_alt = 1
   Insn 288: point = 23, n_alt = 1
   Insn 286: point = 24, n_alt = 0
   Insn 284: point = 25, n_alt = -2
   Insn 392: point = 27, n_alt = -2
   Insn 283: point = 28, n_alt = -1
   Insn 281: point = 28, n_alt = 6
   Insn 391: point = 29, n_alt = -2
   Insn 279: point = 30, n_alt = -1
   Insn 276: point = 30, n_alt = -1
   Insn 274: point = 30, n_alt = 6
   Insn 272: point = 30, n_alt = -1
   Insn 378: point = 30, n_alt = -2
   Insn 268: point = 30, n_alt = -1
   Insn 377: point = 30, n_alt = -2
   Insn 264: point = 30, n_alt = -1
   Insn 263: point = 30, n_alt = 0
   Insn 259: point = 31, n_alt = 1
   Insn 258: point = 33, n_alt = 1
   Insn 256: point = 34, n_alt = 0
   Insn 427: point = 36, n_alt = 5
   Insn 254: point = 37, n_alt = -2
   Insn 390: point = 39, n_alt = -2
   Insn 253: point = 40, n_alt = -1
   Insn 249: point = 40, n_alt = 4
   Insn 246: point = 40, n_alt = 4
  BB 19
   Insn 413: point = 41, n_alt = 6
	Hard reg 11 is preferable by r269 with profit 7
   Insn 412: point = 43, n_alt = -2
   Insn 411: point = 45, n_alt = 8
   Insn 239: point = 47, n_alt = 7
   Insn 389: point = 49, n_alt = -2
   Insn 238: point = 50, n_alt = -1
   Insn 379: point = 50, n_alt = 6
   Insn 260: point = 50, n_alt = 1
   Insn 425: point = 51, n_alt = 7
	   Creating copy r266->r269@7
   Insn 426: point = 53, n_alt = -2
	   Creating copy r265->r266@7
   Insn 359: point = 55, n_alt = 4
   Insn 5: point = 56, n_alt = -2
   Insn 235: point = 57, n_alt = 7
   Insn 388: point = 59, n_alt = -2
   Insn 234: point = 60, n_alt = -1
   Insn 233: point = 60, n_alt = 8
   Insn 402: point = 61, n_alt = -2
   Insn 401: point = 61, n_alt = 0
   Insn 229: point = 61, n_alt = 2
   Insn 221: point = 62, n_alt = 0
   Insn 219: point = 63, n_alt = 2
   Insn 220: point = 64, n_alt = 3
  BB 18
   Insn 209: point = 66, n_alt = -1
   Insn 208: point = 66, n_alt = -2
  BB 17
   Insn 198: point = 68, n_alt = 0
   Insn 197: point = 70, n_alt = 1
  BB 16
   Insn 194: point = 73, n_alt = 0
   Insn 192: point = 74, n_alt = 1
  BB 15
   Insn 181: point = 77, n_alt = 0
   Insn 180: point = 79, n_alt = 1
  BB 14
   Insn 177: point = 82, n_alt = 0
   Insn 175: point = 83, n_alt = 1
  BB 13
   Insn 164: point = 85, n_alt = 0
   Insn 163: point = 87, n_alt = 1
  BB 12
   Insn 160: point = 90, n_alt = 0
   Insn 372: point = 91, n_alt = 6
   Insn 158: point = 92, n_alt = 1
   Insn 371: point = 93, n_alt = 0
   Insn 145: point = 94, n_alt = 1
   Insn 144: point = 95, n_alt = 5
   Insn 137: point = 96, n_alt = -1
   Insn 136: point = 96, n_alt = 1
   Insn 132: point = 96, n_alt = -1
  BB 11
   Insn 129: point = 97, n_alt = 0
   Insn 115: point = 98, n_alt = 7
   Insn 424: point = 99, n_alt = 5
   Insn 114: point = 100, n_alt = 4
   Insn 121: point = 101, n_alt = 7
   Insn 120: point = 102, n_alt = 5
   Insn 126: point = 103, n_alt = 8
   Insn 111: point = 103, n_alt = 7
   Insn 423: point = 104, n_alt = 5
   Insn 107: point = 105, n_alt = 7
   Insn 422: point = 106, n_alt = 5
   Insn 124: point = 107, n_alt = 0
   Insn 123: point = 109, n_alt = 4
  BB 10
   Insn 94: point = 112, n_alt = 0
   Insn 92: point = 112, n_alt = 5
  BB 9
   Insn 90: point = 114, n_alt = 0
   Insn 88: point = 114, n_alt = 1
  BB 8
   Insn 86: point = 116, n_alt = -1
   Insn 85: point = 116, n_alt = 0
   Insn 84: point = 117, n_alt = 5
  BB 7
   Insn 410: point = 119, n_alt = 7
   Insn 409: point = 121, n_alt = -2
   Insn 270: point = 123, n_alt = 6
   Insn 266: point = 124, n_alt = 6
   Insn 285: point = 125, n_alt = 6
   Insn 245: point = 126, n_alt = 3
   Insn 71: point = 127, n_alt = 6
   Insn 66: point = 128, n_alt = -1
   Insn 65: point = 128, n_alt = 1
   Insn 63: point = 128, n_alt = -2
   Insn 50: point = 128, n_alt = 7
   Insn 421: point = 129, n_alt = 5
   Insn 49: point = 130, n_alt = 4
   Insn 61: point = 131, n_alt = 7
   Insn 60: point = 132, n_alt = 4
   Insn 62: point = 133, n_alt = 1
   Insn 64: point = 133, n_alt = -2
   Insn 46: point = 134, n_alt = 7
   Insn 420: point = 135, n_alt = 5
   Insn 42: point = 136, n_alt = 7
   Insn 419: point = 137, n_alt = 5
   Insn 41: point = 138, n_alt = 1
   Insn 34: point = 139, n_alt = 6
   Insn 32: point = 140, n_alt = 1
   Insn 31: point = 142, n_alt = 5
  r150 is added to live at bb7 start
  r230 is added to live at bb7 start
  r232 is added to live at bb7 start
  r233 is added to live at bb7 start
  r237 is added to live at bb7 start
  r239 is added to live at bb7 start
  BB 6
   Insn 27: point = 144, n_alt = -1
   Insn 26: point = 144, n_alt = 0
   Insn 25: point = 145, n_alt = 1
   Insn 24: point = 146, n_alt = 5
  BB 4
   Insn 22: point = 148, n_alt = 0
   Insn 21: point = 148, n_alt = -2
   Insn 387: point = 150, n_alt = -2
   Insn 18: point = 151, n_alt = -1
   Insn 17: point = 151, n_alt = -2
   Insn 15: point = 152, n_alt = -1
  BB 3
   Insn 396: point = 153, n_alt = -1
   Insn 357: point = 153, n_alt = 5
  BB 2
   Insn 12: point = 154, n_alt = 0
   Insn 10: point = 154, n_alt = 1
   Insn 9: point = 155, n_alt = 5
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 32 (  1.3)
Global pseudo live data have been updated:

BB 2:
    killed: 2:

      100  152  153
    liveout: 2:

        7   13  102  103  152  153

BB 3:
    killed: 3:

      234
    liveout: 3:

        7   13  102  103  234

BB 4:
    gen: 4:

      153
    killed: 4:

      100  154  243
    livein: 4:

      152  153
    liveout: 4:

        7   13  102  103  152  154

BB 5:
    killed: 5:

      234
    liveout: 5:

        7   13  102  103  234

BB 6:
    killed: 6:

      100  156  234
    livein: 6:

      152  154
    liveout: 6:

        7   13  102  103  152  154  234

BB 7:
    gen: 7:

      152  154  234
    killed: 7:

      124  158  159  162  166  167  238  240  241  242  251
      252  259  260  261
    livein: 7:

      152  154  234
    liveout: 7:

        7   13  102  103  238  240  241  242  251  252

BB 8:
    gen: 8:

      251
    killed: 8:

      100  169
    livein: 8:

      238  240  241  242  251  252
    liveout: 8:

        7   13  102  103  238  240  241  242  251  252

BB 9:
    gen: 9:

      251
    killed: 9:

      100  118
    livein: 9:

      238  240  241  242  251  252
    liveout: 9:

        7   13  102  103  118  238  240  241  242  251  252

BB 10:
    gen: 10:

      251
    killed: 10:

      100  170
    livein: 10:

      118  238  240  241  242  251  252
    liveout: 10:

        7   13  102  103  118  170  238  240  241  242  251
      252

BB 11:
    gen: 11:

      118  170  251
    killed: 11:

      100  121  176  177  178  262  263  264
    livein: 11:

      118  170  238  240  241  242  251  252
    liveout: 11:

        7   13  102  103  238  240  241  242  251  252

BB 12:
    killed: 12:

      100  142  181  183  231
    livein: 12:

      238  240  241  242  251  252
    liveout: 12:

        7   13  102  103  142  231  238  240  241  242  251
      252

BB 13:
    gen: 13:

      142
    killed: 13:

      142  184
    livein: 13:

      142  231  238  240  241  242  251  252
    liveout: 13:

        7   13  102  103  142  231  238  240  241  242  251
      252

BB 14:
    gen: 14:

      231
    killed: 14:

      100  186
    livein: 14:

      142  231  238  240  241  242  251  252
    liveout: 14:

        7   13  102  103  142  231  238  240  241  242  251
      252

BB 15:
    gen: 15:

      142
    killed: 15:

      142  187
    livein: 15:

      142  231  238  240  241  242  251  252
    liveout: 15:

        7   13  102  103  142  231  238  240  241  242  251
      252

BB 16:
    gen: 16:

      231
    killed: 16:

      100  189
    livein: 16:

      142  231  238  240  241  242  251  252
    liveout: 16:

        7   13  102  103  142  238  240  241  242  251  252

BB 17:
    gen: 17:

      142
    killed: 17:

      142  190
    livein: 17:

      142  238  240  241  242  251  252
    liveout: 17:

        7   13  102  103  142  238  240  241  242  251  252

BB 18:
    gen: 18:

      142
    livein: 18:

      142  238  240  241  242  251  252
    liveout: 18:

        7   13  102  103  238  240  241  242  251  252

BB 19:
    gen: 19:

      251
    killed: 19:

      100  101  126  133  141  145  191  192  194  205  244
      245  253  254  255  265  266  269
    livein: 19:

      238  240  241  242  251  252
    liveout: 19:

        7   13  102  103  133  141  205  238  240  241  242
      252  253  254  255

BB 20:
    gen: 20:

      133  141  205  238  240  241  242  254  255
    killed: 20:

      100  128  136  199  200  203  212  213  216  218  223
      246  247  248  249  254  257  258  267
    livein: 20:

      133  141  205  238  240  241  242  252  253  254  255
    liveout: 20:

        7   13  102  103  133  141  205  238  240  241  242
      252  253  254  255

BB 23:
    gen: 23:

      253
    killed: 23:

      251
    livein: 23:

      238  240  241  242  252  253
    liveout: 23:

        7   13  102  103  238  240  241  242  251  252

BB 21:
    gen: 21:

      251
    killed: 21:

      100  251  268
    livein: 21:

      238  240  241  242  251  252
    liveout: 21:

        7   13  102  103  238  240  241  242  251  252

BB 24:
    gen: 24:

      252
    killed: 24:

      234
    livein: 24:

      252
    liveout: 24:

        7   13  102  103  234

BB 22:
    gen: 22:

      234
    killed: 22:

      250
    livein: 22:

      234
    liveout: 22:

        7   13  102  103
 r118: [110..114]
 r121: [97..107]
 r124: [122..127]
 r126: [60..62]
 r128: [30..37]
 r133: [14..57]
 r136: [19..25]
 r141: [14..47]
 r142: [88..91] [80..85] [71..77] [66..68]
 r145: [44..56]
 r150: [7..143]
 r152: [154..155] [139..152]
 r153: [154..154] [151..152]
 r154: [133..148]
 r156: [144..145]
 r158: [141..142]
 r159: [139..140]
 r162: [136..138]
 r166: [128..130]
 r167: [131..132]
 r169: [116..117]
 r170: [103..112]
 r176: [98..100]
 r177: [101..102]
 r178: [108..109]
 r181: [93..94]
 r183: [90..92]
 r184: [86..87]
 r186: [82..83]
 r187: [78..79]
 r189: [73..74]
 r190: [69..70]
 r191: [62..63]
 r192: [62..64]
 r194: [60..61]
 r199: [30..31]
 r200: [32..34]
 r203: [32..33]
 r205: [14..50]
 r212: [19..21]
 r213: [22..24]
 r216: [22..23]
 r218: [19..20]
 r223: [15..16]
 r230: [7..143]
 r231: [75..95]
 r232: [7..143]
 r233: [7..143]
 r234: [153..153] [120..146] [0..4]
 r237: [7..143]
 r238: [7..126]
 r239: [7..143]
 r240: [7..124]
 r241: [7..123]
 r242: [7..125]
 r243: [149..150]
 r244: [58..59]
 r245: [48..49]
 r246: [38..39]
 r247: [28..29]
 r248: [26..27]
 r249: [17..18]
 r250: [0..1]
 r251: [46..121] [7..11]
 r252: [5..119]
 r253: [12..45]
 r254: [14..43]
 r255: [14..41]
 r257: [34..34]
 r258: [24..24]
 r259: [136..137]
 r260: [134..135]
 r261: [128..129]
 r262: [105..106]
 r263: [103..104]
 r264: [98..99]
 r265: [54..55]
 r266: [52..53]
 r267: [35..36]
 r268: [7..8]
 r269: [42..51]
Compressing live ranges: from 156 to 102 - 65%
Ranges after the compression:
 r118: [73..74]
 r121: [63..70]
 r124: [79..80]
 r126: [41..43]
 r128: [18..24]
 r133: [4..38]
 r136: [8..13]
 r141: [4..32]
 r142: [59..60] [55..56] [49..52] [45..46]
 r145: [29..38]
 r150: [2..92]
 r152: [100..101] [89..98]
 r153: [100..100] [97..98]
 r154: [85..94]
 r156: [93..94]
 r158: [91..92]
 r159: [89..90]
 r162: [87..88]
 r166: [81..82]
 r167: [83..84]
 r169: [75..76]
 r170: [67..74]
 r176: [63..64]
 r177: [65..66]
 r178: [71..72]
 r181: [61..62]
 r183: [59..60]
 r184: [57..58]
 r186: [55..56]
 r187: [53..54]
 r189: [49..50]
 r190: [47..48]
 r191: [43..44]
 r192: [43..44]
 r194: [41..42]
 r199: [18..19]
 r200: [20..22]
 r203: [20..21]
 r205: [4..34]
 r212: [8..9]
 r213: [10..12]
 r216: [10..11]
 r218: [8..9]
 r223: [4..5]
 r230: [2..92]
 r231: [51..62]
 r232: [2..92]
 r233: [2..92]
 r234: [99..99] [77..94] [0..1]
 r237: [2..92]
 r238: [2..80]
 r239: [2..92]
 r240: [2..80]
 r241: [2..80]
 r242: [2..80]
 r243: [95..96]
 r244: [39..40]
 r245: [33..34]
 r246: [25..26]
 r247: [16..17]
 r248: [14..15]
 r249: [6..7]
 r250: [0..1]
 r251: [31..78] [2..3]
 r252: [2..76]
 r253: [4..30]
 r254: [4..28]
 r255: [4..26]
 r257: [22..22]
 r258: [12..12]
 r259: [87..88]
 r260: [85..86]
 r261: [81..82]
 r262: [69..70]
 r263: [67..68]
 r264: [63..64]
 r265: [37..38]
 r266: [35..36]
 r267: [23..24]
 r268: [2..3]
 r269: [27..34]
Live info was changed -- recalculate it

********** Pseudo live ranges #2: **********

  BB 22
   Insn 340: point = 0, n_alt = 6
   Insn 394: point = 1, n_alt = -2
   Insn 335: point = 2, n_alt = -1
   Insn 334: point = 2, n_alt = 1
  BB 5
   Insn 399: point = 3, n_alt = -1
   Insn 358: point = 3, n_alt = 5
  BB 24
   Insn 415: point = 4, n_alt = 5
  BB 21
   Insn 330: point = 7, n_alt = -1
   Insn 329: point = 7, n_alt = 1
   Insn 428: point = 8, n_alt = 5
   Insn 327: point = 9, n_alt = 4
  BB 23
   Insn 414: point = 11, n_alt = 6
  BB 20
   Insn 315: point = 14, n_alt = -1
   Insn 314: point = 14, n_alt = 1
   Insn 311: point = 14, n_alt = 2
   Insn 307: point = 15, n_alt = 6
   Insn 305: point = 16, n_alt = 1
   Insn 303: point = 17, n_alt = 6
   Insn 393: point = 18, n_alt = -2
   Insn 301: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -1
   Insn 296: point = 19, n_alt = 6
   Insn 294: point = 19, n_alt = -1
   Insn 293: point = 19, n_alt = 0
   Insn 290: point = 20, n_alt = 1
   Insn 289: point = 21, n_alt = 1
   Insn 288: point = 23, n_alt = 1
   Insn 286: point = 24, n_alt = 0
   Insn 284: point = 25, n_alt = -2
   Insn 392: point = 27, n_alt = -2
   Insn 283: point = 28, n_alt = -1
   Insn 281: point = 28, n_alt = 6
   Insn 391: point = 29, n_alt = -2
   Insn 279: point = 30, n_alt = -1
   Insn 276: point = 30, n_alt = -1
   Insn 274: point = 30, n_alt = 6
   Insn 272: point = 30, n_alt = -1
   Insn 378: point = 30, n_alt = -2
   Insn 268: point = 30, n_alt = -1
   Insn 377: point = 30, n_alt = -2
   Insn 264: point = 30, n_alt = -1
   Insn 263: point = 30, n_alt = 0
   Insn 259: point = 31, n_alt = 1
   Insn 258: point = 33, n_alt = 1
   Insn 256: point = 34, n_alt = 0
   Insn 427: point = 36, n_alt = 5
   Insn 254: point = 37, n_alt = -2
   Insn 390: point = 39, n_alt = -2
   Insn 253: point = 40, n_alt = -1
   Insn 249: point = 40, n_alt = 4
   Insn 246: point = 40, n_alt = 4
  BB 19
   Insn 413: point = 41, n_alt = 6
	Hard reg 11 is preferable by r269 with profit 7
   Insn 412: point = 43, n_alt = -2
   Insn 411: point = 45, n_alt = 8
   Insn 239: point = 47, n_alt = 7
   Insn 389: point = 49, n_alt = -2
   Insn 238: point = 50, n_alt = -1
   Insn 379: point = 50, n_alt = 6
   Insn 260: point = 50, n_alt = 1
   Insn 425: point = 51, n_alt = 7
	   Creating copy r266->r269@7
   Insn 426: point = 53, n_alt = -2
	   Creating copy r265->r266@7
   Insn 359: point = 55, n_alt = 4
   Insn 5: point = 56, n_alt = -2
   Insn 235: point = 57, n_alt = 7
   Insn 388: point = 59, n_alt = -2
   Insn 234: point = 60, n_alt = -1
   Insn 233: point = 60, n_alt = 8
   Insn 402: point = 61, n_alt = -2
   Insn 401: point = 61, n_alt = 0
   Insn 229: point = 61, n_alt = 2
   Insn 221: point = 62, n_alt = 0
   Insn 219: point = 63, n_alt = 2
   Insn 220: point = 64, n_alt = 3
  BB 18
   Insn 209: point = 66, n_alt = -1
   Insn 208: point = 66, n_alt = -2
  BB 17
   Insn 198: point = 68, n_alt = 0
   Insn 197: point = 70, n_alt = 1
  BB 16
   Insn 194: point = 73, n_alt = 0
   Insn 192: point = 74, n_alt = 1
  BB 15
   Insn 181: point = 77, n_alt = 0
   Insn 180: point = 79, n_alt = 1
  BB 14
   Insn 177: point = 82, n_alt = 0
   Insn 175: point = 83, n_alt = 1
  BB 13
   Insn 164: point = 85, n_alt = 0
   Insn 163: point = 87, n_alt = 1
  BB 12
   Insn 160: point = 90, n_alt = 0
   Insn 372: point = 91, n_alt = 6
   Insn 158: point = 92, n_alt = 1
   Insn 371: point = 93, n_alt = 0
   Insn 145: point = 94, n_alt = 1
   Insn 144: point = 95, n_alt = 5
   Insn 137: point = 96, n_alt = -1
   Insn 136: point = 96, n_alt = 1
   Insn 132: point = 96, n_alt = -1
  BB 11
   Insn 129: point = 97, n_alt = 0
   Insn 115: point = 98, n_alt = 7
   Insn 424: point = 99, n_alt = 5
   Insn 114: point = 100, n_alt = 4
   Insn 121: point = 101, n_alt = 7
   Insn 120: point = 102, n_alt = 5
   Insn 126: point = 103, n_alt = 8
   Insn 111: point = 103, n_alt = 7
   Insn 423: point = 104, n_alt = 5
   Insn 107: point = 105, n_alt = 7
   Insn 422: point = 106, n_alt = 5
   Insn 124: point = 107, n_alt = 0
   Insn 123: point = 109, n_alt = 4
  BB 10
   Insn 94: point = 112, n_alt = 0
   Insn 92: point = 112, n_alt = 5
  BB 9
   Insn 90: point = 114, n_alt = 0
   Insn 88: point = 114, n_alt = 1
  BB 8
   Insn 86: point = 116, n_alt = -1
   Insn 85: point = 116, n_alt = 0
   Insn 84: point = 117, n_alt = 5
  BB 7
   Insn 410: point = 119, n_alt = 7
   Insn 409: point = 121, n_alt = -2
   Insn 270: point = 123, n_alt = 6
   Insn 266: point = 124, n_alt = 6
   Insn 285: point = 125, n_alt = 6
   Insn 245: point = 126, n_alt = 3
   Insn 71: point = 127, n_alt = 6
   Insn 66: point = 128, n_alt = -1
   Insn 65: point = 128, n_alt = 1
   Insn 63: point = 128, n_alt = -2
   Insn 50: point = 128, n_alt = 7
   Insn 421: point = 129, n_alt = 5
   Insn 49: point = 130, n_alt = 4
   Insn 61: point = 131, n_alt = 7
   Insn 60: point = 132, n_alt = 4
   Insn 62: point = 133, n_alt = 1
   Insn 64: point = 133, n_alt = -2
   Insn 46: point = 134, n_alt = 7
   Insn 420: point = 135, n_alt = 5
   Insn 42: point = 136, n_alt = 7
   Insn 419: point = 137, n_alt = 5
   Insn 41: point = 138, n_alt = 1
   Insn 34: point = 139, n_alt = 6
   Insn 32: point = 140, n_alt = 1
   Insn 31: point = 142, n_alt = 5
  BB 6
   Insn 27: point = 144, n_alt = -1
   Insn 26: point = 144, n_alt = 0
   Insn 25: point = 145, n_alt = 1
   Insn 24: point = 146, n_alt = 5
  BB 4
   Insn 22: point = 148, n_alt = 0
   Insn 21: point = 148, n_alt = -2
   Insn 387: point = 150, n_alt = -2
   Insn 18: point = 151, n_alt = -1
   Insn 17: point = 151, n_alt = -2
   Insn 15: point = 152, n_alt = -1
  BB 3
   Insn 396: point = 153, n_alt = -1
   Insn 357: point = 153, n_alt = 5
  BB 2
   Insn 12: point = 154, n_alt = 0
   Insn 10: point = 154, n_alt = 1
   Insn 9: point = 155, n_alt = 5
 r118: [110..114]
 r121: [97..107]
 r124: [122..127]
 r126: [60..62]
 r128: [30..37]
 r133: [14..57]
 r136: [19..25]
 r141: [14..47]
 r142: [88..91] [80..85] [71..77] [66..68]
 r145: [44..56]
 r152: [154..155] [139..152]
 r153: [154..154] [151..152]
 r154: [133..148]
 r156: [144..145]
 r158: [141..142]
 r159: [139..140]
 r162: [136..138]
 r166: [128..130]
 r167: [131..132]
 r169: [116..117]
 r170: [103..112]
 r176: [98..100]
 r177: [101..102]
 r178: [108..109]
 r181: [93..94]
 r183: [90..92]
 r184: [86..87]
 r186: [82..83]
 r187: [78..79]
 r189: [73..74]
 r190: [69..70]
 r191: [62..63]
 r192: [62..64]
 r194: [60..61]
 r199: [30..31]
 r200: [32..34]
 r203: [32..33]
 r205: [14..50]
 r212: [19..21]
 r213: [22..24]
 r216: [22..23]
 r218: [19..20]
 r223: [15..16]
 r231: [75..95]
 r234: [153..153] [120..146] [0..4]
 r238: [7..126]
 r240: [7..124]
 r241: [7..123]
 r242: [7..125]
 r243: [149..150]
 r244: [58..59]
 r245: [48..49]
 r246: [38..39]
 r247: [28..29]
 r248: [26..27]
 r249: [17..18]
 r250: [0..1]
 r251: [46..121] [7..11]
 r252: [5..119]
 r253: [12..45]
 r254: [14..43]
 r255: [14..41]
 r257: [34..34]
 r258: [24..24]
 r259: [136..137]
 r260: [134..135]
 r261: [128..129]
 r262: [105..106]
 r263: [103..104]
 r264: [98..99]
 r265: [54..55]
 r266: [52..53]
 r267: [35..36]
 r268: [7..8]
 r269: [42..51]
Compressing live ranges: from 156 to 102 - 65%
Ranges after the compression:
 r118: [73..74]
 r121: [63..70]
 r124: [79..80]
 r126: [41..43]
 r128: [18..24]
 r133: [4..38]
 r136: [8..13]
 r141: [4..32]
 r142: [59..60] [55..56] [49..52] [45..46]
 r145: [29..38]
 r152: [100..101] [89..98]
 r153: [100..100] [97..98]
 r154: [85..94]
 r156: [93..94]
 r158: [91..92]
 r159: [89..90]
 r162: [87..88]
 r166: [81..82]
 r167: [83..84]
 r169: [75..76]
 r170: [67..74]
 r176: [63..64]
 r177: [65..66]
 r178: [71..72]
 r181: [61..62]
 r183: [59..60]
 r184: [57..58]
 r186: [55..56]
 r187: [53..54]
 r189: [49..50]
 r190: [47..48]
 r191: [43..44]
 r192: [43..44]
 r194: [41..42]
 r199: [18..19]
 r200: [20..22]
 r203: [20..21]
 r205: [4..34]
 r212: [8..9]
 r213: [10..12]
 r216: [10..11]
 r218: [8..9]
 r223: [4..5]
 r231: [51..62]
 r234: [99..99] [77..94] [0..1]
 r238: [2..80]
 r240: [2..80]
 r241: [2..80]
 r242: [2..80]
 r243: [95..96]
 r244: [39..40]
 r245: [33..34]
 r246: [25..26]
 r247: [16..17]
 r248: [14..15]
 r249: [6..7]
 r250: [0..1]
 r251: [31..78] [2..3]
 r252: [2..76]
 r253: [4..30]
 r254: [4..28]
 r255: [4..26]
 r257: [22..22]
 r258: [12..12]
 r259: [87..88]
 r260: [85..86]
 r261: [81..82]
 r262: [69..70]
 r263: [67..68]
 r264: [63..64]
 r265: [37..38]
 r266: [35..36]
 r267: [23..24]
 r268: [2..3]
 r269: [27..34]

********** Assignment #1: **********

	 Assigning to 267 (cl=LO_REGS, orig=267, freq=298, tfirst=267, tfreq=298)...
	   Assign 3 to reload r267 (freq=298)
	 Assigning to 268 (cl=LO_REGS, orig=268, freq=266, tfirst=268, tfreq=266)...
	   Assign 3 to reload r268 (freq=266)
	 Assigning to 259 (cl=LO_REGS, orig=259, freq=66, tfirst=259, tfreq=66)...
	   Assign 2 to reload r259 (freq=66)
	 Assigning to 260 (cl=LO_REGS, orig=260, freq=66, tfirst=260, tfreq=66)...
	   Assign 3 to reload r260 (freq=66)
	 Assigning to 261 (cl=LO_REGS, orig=261, freq=66, tfirst=261, tfreq=66)...
	   Assign 0 to reload r261 (freq=66)
	 Assigning to 262 (cl=LO_REGS, orig=262, freq=14, tfirst=262, tfreq=14)...
	   Assign 1 to reload r262 (freq=14)
	 Assigning to 263 (cl=LO_REGS, orig=263, freq=14, tfirst=263, tfreq=14)...
	   Assign 1 to reload r263 (freq=14)
	 Assigning to 264 (cl=LO_REGS, orig=264, freq=14, tfirst=264, tfreq=14)...
	   Assign 1 to reload r264 (freq=14)
	 Assigning to 269 (cl=LO_REGS, orig=229, freq=14, tfirst=266, tfreq=14)...
	 Assigning to 266 (cl=LO_REGS, orig=229, freq=14, tfirst=266, tfreq=14)...
	   Assign 3 to reload r266 (freq=14)
	Hard reg 3 is preferable by r265 with profit 7
	Hard reg 11 is preferable by r269 with profit 7
	Hard reg 3 is preferable by r269 with profit 7
	 Assigning to 257 (cl=GENERAL_REGS, orig=257, freq=149, tfirst=257, tfreq=149)...
	   Assign 3 to reload r257 (freq=149)
	 Assigning to 258 (cl=GENERAL_REGS, orig=258, freq=149, tfirst=258, tfreq=149)...
	   Assign 3 to reload r258 (freq=149)
	 Assigning to 265 (cl=GENERAL_REGS, orig=229, freq=14, tfirst=265, tfreq=14)...
	   Assign 3 to reload r265 (freq=14)
  Reassigning non-reload pseudos
	   Assign 34 to r133 (freq=156)
	   Assign 36 to r141 (freq=156)

********** Undoing inheritance #1: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
  413: r255:SI=r229:SI
      REG_DEAD r229:SI
   Insn after restoring regs:
  425: r229:SI=r266:SI
      REG_DEAD r266:SI

********** Pseudo live ranges #3: **********

  BB 22
   Insn 340: point = 0, n_alt = 6
   Insn 394: point = 1, n_alt = -2
   Insn 335: point = 2, n_alt = -1
   Insn 334: point = 2, n_alt = 1
  BB 5
   Insn 399: point = 3, n_alt = -1
   Insn 358: point = 3, n_alt = 5
  BB 24
   Insn 415: point = 4, n_alt = 5
  BB 21
   Insn 330: point = 7, n_alt = -1
   Insn 329: point = 7, n_alt = 1
   Insn 428: point = 8, n_alt = 5
   Insn 327: point = 9, n_alt = 4
  BB 23
   Insn 414: point = 11, n_alt = 6
  BB 20
   Insn 315: point = 14, n_alt = -1
   Insn 314: point = 14, n_alt = 1
   Insn 311: point = 14, n_alt = 2
   Insn 307: point = 15, n_alt = 6
   Insn 305: point = 16, n_alt = 1
   Insn 303: point = 17, n_alt = 6
   Insn 393: point = 18, n_alt = -2
   Insn 301: point = 19, n_alt = -1
   Insn 298: point = 19, n_alt = -1
   Insn 296: point = 19, n_alt = -1
   Insn 294: point = 19, n_alt = -1
   Insn 293: point = 19, n_alt = 0
   Insn 290: point = 20, n_alt = 1
   Insn 289: point = 21, n_alt = 1
   Insn 288: point = 23, n_alt = 1
   Insn 286: point = 24, n_alt = 0
   Insn 284: point = 25, n_alt = -2
   Insn 392: point = 27, n_alt = -2
   Insn 283: point = 28, n_alt = -1
   Insn 281: point = 28, n_alt = 6
   Insn 391: point = 29, n_alt = -2
   Insn 279: point = 30, n_alt = -1
   Insn 276: point = 30, n_alt = -1
   Insn 274: point = 30, n_alt = -1
   Insn 272: point = 30, n_alt = -1
   Insn 378: point = 30, n_alt = -2
   Insn 268: point = 30, n_alt = -1
   Insn 377: point = 30, n_alt = -2
   Insn 264: point = 30, n_alt = -1
   Insn 263: point = 30, n_alt = 0
   Insn 259: point = 31, n_alt = 1
   Insn 258: point = 33, n_alt = 1
   Insn 256: point = 34, n_alt = 0
   Insn 427: point = 36, n_alt = 5
   Insn 254: point = 37, n_alt = -2
   Insn 390: point = 39, n_alt = -2
   Insn 253: point = 40, n_alt = -1
   Insn 249: point = 40, n_alt = 4
   Insn 246: point = 40, n_alt = 4
  BB 19
   Insn 413: point = 41, n_alt = 6
   Insn 412: point = 43, n_alt = -2
   Insn 411: point = 45, n_alt = 8
   Insn 239: point = 47, n_alt = -1
   Insn 389: point = 49, n_alt = -2
   Insn 238: point = 50, n_alt = -1
   Insn 379: point = 50, n_alt = 6
   Insn 260: point = 50, n_alt = 1
   Insn 425: point = 51, n_alt = 7
   Insn 426: point = 53, n_alt = -2
	   Creating copy r265->r266@7
   Insn 359: point = 55, n_alt = 4
   Insn 5: point = 56, n_alt = -2
   Insn 235: point = 57, n_alt = -1
   Insn 388: point = 59, n_alt = -2
   Insn 234: point = 60, n_alt = -1
   Insn 233: point = 60, n_alt = 8
   Insn 402: point = 61, n_alt = -2
   Insn 401: point = 61, n_alt = 0
   Insn 229: point = 61, n_alt = 2
   Insn 221: point = 62, n_alt = 0
   Insn 219: point = 63, n_alt = 2
   Insn 220: point = 64, n_alt = 3
  BB 18
   Insn 209: point = 66, n_alt = -1
   Insn 208: point = 66, n_alt = -2
  BB 17
   Insn 198: point = 68, n_alt = 0
   Insn 197: point = 70, n_alt = 1
  BB 16
   Insn 194: point = 73, n_alt = 0
   Insn 192: point = 74, n_alt = 1
  BB 15
   Insn 181: point = 77, n_alt = 0
   Insn 180: point = 79, n_alt = 1
  BB 14
   Insn 177: point = 82, n_alt = 0
   Insn 175: point = 83, n_alt = 1
  BB 13
   Insn 164: point = 85, n_alt = 0
   Insn 163: point = 87, n_alt = 1
  BB 12
   Insn 160: point = 90, n_alt = 0
   Insn 372: point = 91, n_alt = 6
   Insn 158: point = 92, n_alt = 1
   Insn 371: point = 93, n_alt = 0
   Insn 145: point = 94, n_alt = 1
   Insn 144: point = 95, n_alt = 5
   Insn 137: point = 96, n_alt = -1
   Insn 136: point = 96, n_alt = 1
   Insn 132: point = 96, n_alt = -1
  BB 11
   Insn 129: point = 97, n_alt = 0
   Insn 115: point = 98, n_alt = 7
   Insn 424: point = 99, n_alt = 5
   Insn 114: point = 100, n_alt = 4
   Insn 121: point = 101, n_alt = 7
   Insn 120: point = 102, n_alt = 5
   Insn 126: point = 103, n_alt = 8
   Insn 111: point = 103, n_alt = 7
   Insn 423: point = 104, n_alt = 5
   Insn 107: point = 105, n_alt = 7
   Insn 422: point = 106, n_alt = 5
   Insn 124: point = 107, n_alt = 0
   Insn 123: point = 109, n_alt = 4
  BB 10
   Insn 94: point = 112, n_alt = 0
   Insn 92: point = 112, n_alt = 5
  BB 9
   Insn 90: point = 114, n_alt = 0
   Insn 88: point = 114, n_alt = 1
  BB 8
   Insn 86: point = 116, n_alt = -1
   Insn 85: point = 116, n_alt = 0
   Insn 84: point = 117, n_alt = 5
  BB 7
   Insn 410: point = 119, n_alt = 7
   Insn 409: point = 121, n_alt = -2
   Insn 270: point = 123, n_alt = 6
   Insn 266: point = 124, n_alt = 6
   Insn 285: point = 125, n_alt = 6
   Insn 245: point = 126, n_alt = 3
   Insn 71: point = 127, n_alt = 6
   Insn 66: point = 128, n_alt = -1
   Insn 65: point = 128, n_alt = 1
   Insn 63: point = 128, n_alt = -2
   Insn 50: point = 128, n_alt = 7
   Insn 421: point = 129, n_alt = 5
   Insn 49: point = 130, n_alt = 4
   Insn 61: point = 131, n_alt = 7
   Insn 60: point = 132, n_alt = 4
   Insn 62: point = 133, n_alt = 1
   Insn 64: point = 133, n_alt = -2
   Insn 46: point = 134, n_alt = 7
   Insn 420: point = 135, n_alt = 5
   Insn 42: point = 136, n_alt = 7
   Insn 419: point = 137, n_alt = 5
   Insn 41: point = 138, n_alt = 1
   Insn 34: point = 139, n_alt = 6
   Insn 32: point = 140, n_alt = 1
   Insn 31: point = 142, n_alt = 5
  BB 6
   Insn 27: point = 144, n_alt = -1
   Insn 26: point = 144, n_alt = 0
   Insn 25: point = 145, n_alt = 1
   Insn 24: point = 146, n_alt = 5
  BB 4
   Insn 22: point = 148, n_alt = 0
   Insn 21: point = 148, n_alt = -2
   Insn 387: point = 150, n_alt = -2
   Insn 18: point = 151, n_alt = -1
   Insn 17: point = 151, n_alt = -2
   Insn 15: point = 152, n_alt = -1
  BB 3
   Insn 396: point = 153, n_alt = -1
   Insn 357: point = 153, n_alt = 5
  BB 2
   Insn 12: point = 154, n_alt = 0
   Insn 10: point = 154, n_alt = 1
   Insn 9: point = 155, n_alt = 5
 r118: [110..114]
 r121: [97..107]
 r124: [122..127]
 r126: [60..62]
 r128: [30..37]
 r133: [14..57]
 r136: [19..25]
 r141: [14..47]
 r142: [88..91] [80..85] [71..77] [66..68]
 r145: [44..56]
 r152: [154..155] [139..152]
 r153: [154..154] [151..152]
 r154: [133..148]
 r156: [144..145]
 r158: [141..142]
 r159: [139..140]
 r162: [136..138]
 r166: [128..130]
 r167: [131..132]
 r169: [116..117]
 r170: [103..112]
 r176: [98..100]
 r177: [101..102]
 r178: [108..109]
 r181: [93..94]
 r183: [90..92]
 r184: [86..87]
 r186: [82..83]
 r187: [78..79]
 r189: [73..74]
 r190: [69..70]
 r191: [62..63]
 r192: [62..64]
 r194: [60..61]
 r199: [30..31]
 r200: [32..34]
 r203: [32..33]
 r205: [14..50]
 r212: [19..21]
 r213: [22..24]
 r216: [22..23]
 r218: [19..20]
 r223: [15..16]
 r229: [42..51]
 r231: [75..95]
 r234: [153..153] [120..146] [0..4]
 r238: [7..126]
 r240: [7..124]
 r241: [7..123]
 r242: [7..125]
 r243: [149..150]
 r244: [58..59]
 r245: [48..49]
 r246: [38..39]
 r247: [28..29]
 r248: [26..27]
 r249: [17..18]
 r250: [0..1]
 r251: [46..121] [7..11]
 r252: [5..119]
 r253: [12..45]
 r254: [14..43]
 r255: [14..41]
 r257: [34..34]
 r258: [24..24]
 r259: [136..137]
 r260: [134..135]
 r261: [128..129]
 r262: [105..106]
 r263: [103..104]
 r264: [98..99]
 r265: [54..55]
 r266: [52..53]
 r267: [35..36]
 r268: [7..8]
Compressing live ranges: from 156 to 102 - 65%
Ranges after the compression:
 r118: [73..74]
 r121: [63..70]
 r124: [79..80]
 r126: [41..43]
 r128: [18..24]
 r133: [4..38]
 r136: [8..13]
 r141: [4..32]
 r142: [59..60] [55..56] [49..52] [45..46]
 r145: [29..38]
 r152: [100..101] [89..98]
 r153: [100..100] [97..98]
 r154: [85..94]
 r156: [93..94]
 r158: [91..92]
 r159: [89..90]
 r162: [87..88]
 r166: [81..82]
 r167: [83..84]
 r169: [75..76]
 r170: [67..74]
 r176: [63..64]
 r177: [65..66]
 r178: [71..72]
 r181: [61..62]
 r183: [59..60]
 r184: [57..58]
 r186: [55..56]
 r187: [53..54]
 r189: [49..50]
 r190: [47..48]
 r191: [43..44]
 r192: [43..44]
 r194: [41..42]
 r199: [18..19]
 r200: [20..22]
 r203: [20..21]
 r205: [4..34]
 r212: [8..9]
 r213: [10..12]
 r216: [10..11]
 r218: [8..9]
 r223: [4..5]
 r229: [27..34]
 r231: [51..62]
 r234: [99..99] [77..94] [0..1]
 r238: [2..80]
 r240: [2..80]
 r241: [2..80]
 r242: [2..80]
 r243: [95..96]
 r244: [39..40]
 r245: [33..34]
 r246: [25..26]
 r247: [16..17]
 r248: [14..15]
 r249: [6..7]
 r250: [0..1]
 r251: [31..78] [2..3]
 r252: [2..76]
 r253: [4..30]
 r254: [4..28]
 r255: [4..26]
 r257: [22..22]
 r258: [12..12]
 r259: [87..88]
 r260: [85..86]
 r261: [81..82]
 r262: [69..70]
 r263: [67..68]
 r264: [63..64]
 r265: [37..38]
 r266: [35..36]
 r267: [23..24]
 r268: [2..3]

********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=72, prev_offset=56)
Can't eliminate 103 to 102 (offset=64, prev_offset=0)
Can't eliminate 103 to 11 (offset=60, prev_offset=0)
Can eliminate 103 to 7 (offset=64, prev_offset=0)
Can eliminate 102 to 13 (offset=8, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 296:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=621,losers=2,rld_nregs=4
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 274:  (0) ?r  (1) w {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
            Staticly defined alt reject+=6
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =w  (1) ?r {*thumb2_movdf_vfp}
	   Spilling non-eliminable hard regs: 13

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 25 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 25 (    1)

Cands:

BB 2:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 152 153
  changed regs: 152 153
  dead regs:

BB 3:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 234
  changed regs: 234
  dead regs:

BB 4:
  register live in: 152 153
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 152 154
  changed regs: 0 [r0] 154 243
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 153 243

BB 5:
  register live in:
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 234
  changed regs: 234
  dead regs:

BB 6:
  register live in: 152 154
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 152 154 234
  changed regs: 156 234
  dead regs: 100 [cc] 156

BB 7:
  register live in: 152 154 234
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 124 158 159 162 166 167 238 240 241 242 251 252 259 260 261
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 124 152 154 158 159 162 166 167 234 259 260 261

BB 8:
  register live in: 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 169
  dead regs: 100 [cc] 169

BB 9:
  register live in: 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118 238 240 241 242 251 252
  changed regs: 118
  dead regs:

BB 10:
  register live in: 118 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118 170 238 240 241 242 251 252
  changed regs: 170
  dead regs:

BB 11:
  register live in: 118 170 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 121 176 177 178 262 263 264
  dead regs: 118 121 170 176 177 178 262 263 264

BB 12:
  register live in: 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 231 238 240 241 242 251 252
  changed regs: 0 [r0] 142 181 183 231
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 181 183

BB 13:
  register live in: 142 231 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 231 238 240 241 242 251 252
  changed regs: 142 184
  dead regs: 142 184

BB 14:
  register live in: 142 231 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 231 238 240 241 242 251 252
  changed regs: 186
  dead regs: 186

BB 15:
  register live in: 142 231 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 231 238 240 241 242 251 252
  changed regs: 142 187
  dead regs: 142 187

BB 16:
  register live in: 142 231 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 238 240 241 242 251 252
  changed regs: 189
  dead regs: 189 231

BB 17:
  register live in: 142 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 142 238 240 241 242 251 252
  changed regs: 142 190
  dead regs: 142 190

BB 18:
  register live in: 142 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 0 [r0]
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 142

BB 19:
  register live in: 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 133 141 205 238 240 241 242 252 253 254 255
  changed regs: 0 [r0] 2 [r2] 126 133 141 145 191 192 194 205 229 244 245 253 254 255 265 266
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 126 145 191 192 194 229 244 245 251 265 266

BB 20:
  register live in: 133 141 205 238 240 241 242 252 253 254 255
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 133 141 205 238 240 241 242 252 253 254 255
  changed regs: 0 [r0] 2 [r2] 128 136 199 200 203 212 213 216 218 223 246 247 248 249 254 257 258 267
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 128 136 199 200 203 212 213 216 218 223 246 247 248 249 267

BB 23:
  register live in: 238 240 241 242 252 253
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 251
  dead regs: 253

BB 21:
  register live in: 238 240 241 242 251 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 238 240 241 242 251 252
  changed regs: 251 268
  dead regs: 100 [cc] 268

BB 24:
  register live in: 252
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 234
  changed regs: 234
  dead regs: 252

BB 22:
  register live in: 234
  register live out: 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
  changed regs: 0 [r0] 250
  dead regs: 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 234 250
subreg regs:
  Slot 0 regnos (width = 0):	 252
  Slot 1 regnos (width = 0):	 229
  Slot 2 regnos (width = 0):	 253
Changing spilled pseudos to memory in insn #410
Changing spilled pseudos to memory in insn #425
Changing spilled pseudos to memory in insn #411
Changing spilled pseudos to memory in insn #413
Changing spilled pseudos to memory in insn #414
Changing spilled pseudos to memory in insn #415
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=88, prev_offset=72)
Can't eliminate 103 to 102 (offset=64, prev_offset=0)
Can't eliminate 103 to 11 (offset=60, prev_offset=0)
Can eliminate 103 to 7 (offset=80, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=8)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 13
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 415:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 414:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=5,overall=7,losers=1,rld_nregs=1
            0 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 413:  (0) *hk  (1) *mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=6,losers=1,rld_nregs=1
            1 Costly set: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 411:  (0) *m  (1) *hk {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 425:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 410:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=88, prev_offset=88)
Can't eliminate 103 to 102 (offset=64, prev_offset=0)
Can't eliminate 103 to 11 (offset=60, prev_offset=0)
Can eliminate 103 to 7 (offset=80, prev_offset=0)
Can eliminate 102 to 13 (offset=24, prev_offset=24)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
changing reg in insn 88
changing reg in insn 90
changing reg in insn 123
changing reg in insn 124
changing reg in insn 129
changing reg in insn 71
changing reg in insn 409
changing reg in insn 221
changing reg in insn 401
changing reg in insn 233
changing reg in insn 224
changing reg in insn 222
changing reg in insn 254
changing reg in insn 256
changing reg in insn 263
changing reg in insn 258
changing reg in insn 256
changing reg in insn 235
changing reg in insn 274
changing reg in insn 239
changing reg in insn 284
changing reg in insn 286
changing reg in insn 293
changing reg in insn 288
changing reg in insn 286
changing reg in insn 239
changing reg in insn 296
changing reg in insn 372
changing reg in insn 198
changing reg in insn 181
changing reg in insn 164
changing reg in insn 208
changing reg in insn 197
changing reg in insn 180
changing reg in insn 163
changing reg in insn 5
changing reg in insn 412
changing reg in insn 9
changing reg in insn 34
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 64
changing reg in insn 46
changing reg in insn 25
changing reg in insn 26
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 41
changing reg in insn 42
changing reg in insn 49
changing reg in insn 50
changing reg in insn 60
changing reg in insn 61
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 94
changing reg in insn 111
changing reg in insn 107
changing reg in insn 114
changing reg in insn 115
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 145
changing reg in insn 371
changing reg in insn 158
changing reg in insn 160
changing reg in insn 163
changing reg in insn 175
changing reg in insn 177
changing reg in insn 180
changing reg in insn 192
changing reg in insn 194
changing reg in insn 197
changing reg in insn 219
changing reg in insn 221
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 229
changing reg in insn 401
changing reg in insn 233
changing reg in insn 259
changing reg in insn 263
changing reg in insn 256
changing reg in insn 259
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 263
changing reg in insn 289
changing reg in insn 293
changing reg in insn 286
changing reg in insn 289
changing reg in insn 288
changing reg in insn 289
changing reg in insn 290
changing reg in insn 293
changing reg in insn 305
changing reg in insn 144
changing reg in insn 192
changing reg in insn 175
changing reg in insn 158
changing reg in insn 145
changing reg in insn 415
changing reg in insn 358
changing reg in insn 357
changing reg in insn 24
changing reg in insn 410
changing reg in insn 340
changing reg in insn 25
changing reg in insn 245
changing reg in insn 249
changing reg in insn 246
changing reg in insn 266
changing reg in insn 377
changing reg in insn 270
changing reg in insn 378
changing reg in insn 285
changing reg in insn 286
changing reg in insn 387
changing reg in insn 21
changing reg in insn 388
changing reg in insn 235
changing reg in insn 389
changing reg in insn 239
changing reg in insn 390
changing reg in insn 254
changing reg in insn 391
changing reg in insn 281
changing reg in insn 392
changing reg in insn 284
changing reg in insn 393
changing reg in insn 303
changing reg in insn 394
changing reg in insn 414
changing reg in insn 409
changing reg in insn 327
changing reg in insn 411
changing reg in insn 84
changing reg in insn 88
changing reg in insn 92
changing reg in insn 121
changing reg in insn 120
changing reg in insn 126
changing reg in insn 359
changing reg in insn 5
changing reg in insn 220
changing reg in insn 216
changing reg in insn 213
changing reg in insn 329
changing reg in insn 327
changing reg in insn 84
changing reg in insn 120
changing reg in insn 220
changing reg in insn 412
changing reg in insn 311
changing reg in insn 314
changing reg in insn 311
changing reg in insn 307
changing reg in insn 303
changing reg in insn 281
changing reg in insn 249
changing reg in insn 246
changing reg in insn 393
changing reg in insn 391
changing reg in insn 413
changing reg in insn 314
changing reg in insn 256
changing reg in insn 286
deleting insn with uid = 387.
deleting insn with uid = 21.
deleting insn with uid = 409.
deleting insn with uid = 208.
deleting insn with uid = 426.
deleting insn with uid = 389.
deleting insn with uid = 412.
deleting insn with uid = 390.
deleting insn with uid = 254.
deleting insn with uid = 391.
deleting insn with uid = 392.
deleting insn with uid = 284.
deleting insn with uid = 393.
deleting insn with uid = 394.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 238.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 264.
verify found no changes in insn with uid = 268.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 283.
verify found no changes in insn with uid = 294.
verify found no changes in insn with uid = 298.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 335.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 31 (  1.2)
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 27 (  1.1)


shoot

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={35d,47u,2e} r1={32d,13u} r2={39d,21u} r3={48d,32u} r4={7d,12u} r5={2d,3u} r6={1d,1u} r7={1d,1u} r8={1d,1u} r9={1d,1u} r10={1d,1u} r11={4d,15u,3e} r12={38d} r13={1d,51u} r14={20d} r15={19d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={20d} r25={20d} r26={20d} r27={20d} r28={20d} r29={21d,1u} r30={21d,4u} r31={22d,3u,1e} r32={1d,2u} r34={1d,1u,1e} r35={1d,1u,1e} r36={1d,1u} r37={1d,1u} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r81={19d} r82={19d} r83={19d} r84={19d} r85={19d} r86={19d} r87={19d} r88={19d} r89={19d} r90={19d} r91={19d} r92={19d} r93={19d} r94={19d} r95={19d} r96={19d} r97={19d} r98={19d} r99={19d} r100={33d,6u} r101={20d,1u} r104={19d} r105={19d} r106={19d} 
;;    total ref usage 1905{1677d,220u,8e} in 264{245 regular + 19 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 11 2 NOTE_INSN_FUNCTION_BEG)
(note 11 2 8 2 NOTE_INSN_DELETED)
(debug_insn 8 11 9 2 (debug_marker) "../System/pomozne_funkcije.c":171:2 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 5 r5 [152])
        (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000007a6f3f0 time_gun>)) "../System/pomozne_funkcije.c":171:14 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000007a6f3f0 time_gun>)
        (nil)))
(insn 10 9 12 2 (set (reg:SI 4 r4 [orig:153 time_gun ] [153])
        (zero_extend:SI (mem/c:QI (reg/f:SI 5 r5 [152]) [0 time_gun+0 S1 A8]))) "../System/pomozne_funkcije.c":171:4 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000007a6f3f0 time_gun>) [0 time_gun+0 S1 A8]))
        (nil)))
(jump_insn 12 10 365 2 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 4 r4 [orig:153 time_gun ] [153])
                        (const_int 0 [0]))
                    (label_ref:SI 395)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":171:4 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 354334804 (nil))
 -> 395)
(note 365 12 357 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 357 365 396 3 (set (reg/f:SI 4 r4 [234])
        (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)
        (nil)))
(jump_insn 396 357 397 3 (set (pc)
        (label_ref 331)) 284 {*arm_jump}
     (nil)
 -> 331)
(barrier 397 396 395)
(code_label 395 397 13 4 189 (nil) [1 uses])
(note 13 395 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 19 13 14 4 NOTE_INSN_DELETED)
(debug_insn 14 19 15 4 (debug_marker) "../System/pomozne_funkcije.c":172:3 -1
     (nil))
(call_insn 15 14 16 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":172:3 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000007a7b200 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 16 15 17 4 (debug_marker) "../System/pomozne_funkcije.c":173:3 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:153 time_gun ] [153])) "../System/pomozne_funkcije.c":173:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(call_insn 18 17 22 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":173:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 22 18 367 4 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 0 r0 [154])
                        (const_int 0 [0]))
                    (label_ref:SI 398)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":173:5 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 398)
(note 367 22 358 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 358 367 399 5 (set (reg/f:SI 4 r4 [234])
        (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)
        (nil)))
(jump_insn 399 358 400 5 (set (pc)
        (label_ref 331)) 284 {*arm_jump}
     (nil)
 -> 331)
(barrier 400 399 398)
(code_label 398 400 23 6 190 (nil) [1 uses])
(note 23 398 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg/f:SI 4 r4 [234])
        (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)) "../System/pomozne_funkcije.c":173:76 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>)
        (nil)))
(insn 25 24 26 6 (set (reg:SI 3 r3 [orig:156 gun_button_prev ] [156])
        (zero_extend:SI (mem/c:QI (reg/f:SI 4 r4 [234]) [0 gun_button_prev+0 S1 A8]))) "../System/pomozne_funkcije.c":173:57 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("gun_button_prev") [flags 0xc0]  <var_decl 0000000007a6f480 gun_button_prev>) [0 gun_button_prev+0 S1 A8]))
        (nil)))
(insn 26 25 27 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:156 gun_button_prev ] [156])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":173:57 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 331)
            (pc))) "../System/pomozne_funkcije.c":173:57 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 856416484 (nil))
 -> 331)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 28 31 7 (debug_marker) "../System/pomozne_funkcije.c":174:4 -1
     (nil))
(insn 31 29 40 7 (set (reg/f:SI 3 r3 [158])
        (symbol_ref:SI ("max_time_gun") [flags 0xc0]  <var_decl 0000000007a6f360 max_time_gun>)) "../System/pomozne_funkcije.c":174:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("max_time_gun") [flags 0xc0]  <var_decl 0000000007a6f360 max_time_gun>)
        (nil)))
(note 40 31 32 7 NOTE_INSN_DELETED)
(insn 32 40 34 7 (set (reg:SI 3 r3 [orig:159 max_time_gun ] [159])
        (zero_extend:SI (mem/c:QI (reg/f:SI 3 r3 [158]) [0 max_time_gun+0 S1 A8]))) "../System/pomozne_funkcije.c":174:13 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("max_time_gun") [flags 0xc0]  <var_decl 0000000007a6f360 max_time_gun>) [0 max_time_gun+0 S1 A8]))
        (nil)))
(insn 34 32 35 7 (set (mem/c:QI (reg/f:SI 5 r5 [152]) [0 time_gun+0 S1 A8])
        (reg:QI 3 r3 [orig:159 max_time_gun ] [159])) "../System/pomozne_funkcije.c":174:13 263 {*arm_movqi_insn}
     (nil))
(debug_insn 35 34 36 7 (debug_marker) "../System/pomozne_funkcije.c":175:4 -1
     (nil))
(debug_insn 36 35 37 7 (var_location:QI sound (const_int 3 [0x3])) "../System/pomozne_funkcije.c":175:4 -1
     (nil))
(debug_insn 37 36 38 7 (debug_marker:BLK) "../System/pomozne_funkcije.c":398:6 -1
     (nil))
(debug_insn 38 37 39 7 (debug_marker) "../System/pomozne_funkcije.c":399:2 -1
     (nil))
(debug_insn 39 38 44 7 (debug_marker) "../System/pomozne_funkcije.c":416:3 -1
     (nil))
(note 44 39 48 7 NOTE_INSN_DELETED)
(note 48 44 41 7 NOTE_INSN_DELETED)
(insn 41 48 419 7 (set (reg:SI 3 r3 [162])
        (const_int 3 [0x3])) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 419 41 42 7 (set (reg:SI 2 r2 [259])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 42 419 43 7 (set (mem/c:SI (reg:SI 2 r2 [259]) [5 sound_select+0 S4 A32])
        (reg:SI 3 r3 [162])) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 43 42 420 7 (debug_marker) "../System/pomozne_funkcije.c":417:3 -1
     (nil))
(insn 420 43 46 7 (set (reg:SI 3 r3 [260])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":417:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 46 420 47 7 (set (mem/c:SI (reg:SI 3 r3 [260]) [5 sound_counter+0 S4 A32])
        (reg:SI 0 r0 [154])) "../System/pomozne_funkcije.c":417:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 47 46 64 7 (debug_marker) "../System/pomozne_funkcije.c":418:3 -1
     (nil))
(insn 64 47 62 7 (set (reg:SI 1 r1)
        (reg:SI 0 r0 [154])) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 62 64 60 7 (set (reg:SI 3 r3)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 60 62 61 7 (set (reg:SI 2 r2 [167])
        (const_int 61268 [0xef54])) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 61268 [0xef54])
        (nil)))
(insn 61 60 49 7 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 2 r2 [167])) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 49 61 421 7 (set (reg:SI 2 r2 [166])
        (const_int 9330 [0x2472])) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 9330 [0x2472])
        (nil)))
(insn 421 49 50 7 (set (reg:SI 0 r0 [261])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 50 421 51 7 (set (mem/c:SI (reg:SI 0 r0 [261]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [166])) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 51 50 52 7 (var_location:QI sound (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":175:4 -1
     (nil))
(debug_insn 52 51 53 7 (debug_marker) "../System/pomozne_funkcije.c":176:4 -1
     (nil))
(debug_insn 53 52 54 7 (var_location:SI r (const_int 233 [0xe9])) "../System/pomozne_funkcije.c":176:4 -1
     (nil))
(debug_insn 54 53 55 7 (var_location:SI g (const_int 235 [0xeb])) "../System/pomozne_funkcije.c":176:4 -1
     (nil))
(debug_insn 55 54 56 7 (var_location:SI b (const_int 162 [0xa2])) "../System/pomozne_funkcije.c":176:4 -1
     (nil))
(debug_insn 56 55 57 7 (debug_marker) "../System/pomozne_funkcije.c":156:2 -1
     (nil))
(debug_insn 57 56 58 7 (var_location:SI r (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":176:33 -1
     (nil))
(debug_insn 58 57 59 7 (var_location:SI g (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":176:33 -1
     (nil))
(debug_insn 59 58 63 7 (var_location:SI b (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":176:33 -1
     (nil))
(insn 63 59 65 7 (set (reg:SI 2 r2)
        (reg:SI 3 r3)) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 240 [0xf0])
        (nil)))
(insn 65 63 66 7 (set (reg:SI 0 r0)
        (const_int 40 [0x28])) "../System/pomozne_funkcije.c":176:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 66 65 67 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>) [0 UG_FillFrame S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":176:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("UG_FillFrame") [flags 0x41]  <function_decl 0000000007a36900 UG_FillFrame>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(debug_insn 67 66 68 7 (debug_marker) "../System/pomozne_funkcije.c":177:4 -1
     (nil))
(debug_insn 68 67 69 7 (debug_marker) "../System/pomozne_funkcije.c":177:8 -1
     (nil))
(debug_insn 69 68 70 7 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 70 69 71 7 (debug_marker) "../System/pomozne_funkcije.c":177:19 -1
     (nil))
(insn 71 70 245 7 (set (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 40 [0x28])))) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 40 [0x28])))
        (nil)))
(insn 245 71 255 7 (set (reg:SF 32 s16 [238])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/pomozne_funkcije.c":215:23 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(note 255 245 285 7 NOTE_INSN_DELETED)
(insn 285 255 73 7 (set (reg:SI 10 r10 [242])
        (const_int 274877907 [0x10624dd3])) "../System/pomozne_funkcije.c":219:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 274877907 [0x10624dd3])
        (nil)))
(note 73 285 236 7 NOTE_INSN_DELETED)
(note 236 73 266 7 NOTE_INSN_DELETED)
(insn 266 236 270 7 (set (reg:DF 8 r8 [240])
        (const_double:DF 1.0000000000000000208166817117216851329430937767e-2 [0x0.a3d70a3d70a3d8p-6])) "../System/pomozne_funkcije.c":218:59 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 1.0000000000000000208166817117216851329430937767e-2 [0x0.a3d70a3d70a3d8p-6])
        (nil)))
(insn 270 266 410 7 (set (reg:DF 6 r6 [241])
        (const_double:DF 6.0e+0 [0x0.cp+3])) "../System/pomozne_funkcije.c":218:70 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 410 270 328 7 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [12 %sfp+-12 S4 A32])
        (reg/f:SI 4 r4 [234])) "../System/pomozne_funkcije.c":218:70 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 328 410 74 8 180 (nil) [1 uses])
(note 74 328 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 75 74 76 8 (var_location:SI blood (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 76 75 77 8 (var_location:QI x (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 77 76 78 8 (var_location:QI y (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 78 77 79 8 (var_location:SF dist (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 79 78 80 8 (var_location:SF scale (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 80 79 81 8 (var_location:SI i (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 81 80 82 8 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 82 81 84 8 (debug_marker) "../System/pomozne_funkcije.c":179:5 -1
     (nil))
(insn 84 82 85 8 (set (reg:SI 3 r3 [orig:169 MEM[base: _99, offset: 4294967256B] ] [169])
        (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[base: _99, offset: 4294967256B]+0 S4 A32])) "../System/pomozne_funkcije.c":179:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[base: _99, offset: 4294967256B]+0 S4 A32])
        (nil)))
(insn 85 84 86 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:169 MEM[base: _99, offset: 4294967256B] ] [169])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":179:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 86 85 87 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) "../System/pomozne_funkcije.c":179:7 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 708669604 (nil))
 -> 316)
(note 87 86 89 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 89 87 88 9 NOTE_INSN_DELETED)
(insn 88 89 90 9 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                    (const_int -16 [0xfffffffffffffff0])) [0 MEM[base: _99, offset: 4294967280B]+0 S1 A32]))) "../System/pomozne_funkcije.c":179:31 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 90 88 91 9 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 3 r3 [orig:118 _6 ] [118])
                        (const_int 0 [0]))
                    (label_ref:SI 316)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":179:23 1024 {*thumb2_cbz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 316)
(note 91 90 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 93 91 92 10 NOTE_INSN_DELETED)
(insn 92 93 94 10 (set (reg:SI 2 r2 [orig:170 MEM[base: _99, offset: 4294967284B] ] [170])
        (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -12 [0xfffffffffffffff4])) [5 MEM[base: _99, offset: 4294967284B]+0 S4 A32])) "../System/pomozne_funkcije.c":179:41 728 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 94 92 95 10 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:170 MEM[base: _99, offset: 4294967284B] ] [170])
                        (const_int 0 [0]))
                    (label_ref 316)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":179:41 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 719407028 (nil))
 -> 316)
(note 95 94 128 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 128 95 96 11 NOTE_INSN_DELETED)
(debug_insn 96 128 97 11 (debug_marker) "../System/pomozne_funkcije.c":181:6 -1
     (nil))
(debug_insn 97 96 98 11 (var_location:QI sound (const_int 0 [0])) "../System/pomozne_funkcije.c":181:6 -1
     (nil))
(debug_insn 98 97 99 11 (debug_marker:BLK) "../System/pomozne_funkcije.c":398:6 -1
     (nil))
(debug_insn 99 98 100 11 (debug_marker) "../System/pomozne_funkcije.c":399:2 -1
     (nil))
(debug_insn 100 99 101 11 (var_location:QI D#1 (const_int 0 [0])) -1
     (nil))
(debug_insn 101 100 102 11 (debug_marker:BLK) "../System/pomozne_funkcije.c":398:6 -1
     (nil))
(debug_insn 102 101 103 11 (var_location:QI D#2 (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 103 102 104 11 (var_location:QI sound (debug_expr:QI D#2)) -1
     (nil))
(debug_insn 104 103 123 11 (debug_marker) "../System/pomozne_funkcije.c":401:3 -1
     (nil))
(insn 123 104 124 11 (set (reg:SI 3 r3 [178])
        (plus:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int -1 [0xffffffffffffffff]))) "../System/pomozne_funkcije.c":183:16 7 {*arm_addsi3}
     (nil))
(insn 124 123 422 11 (set (reg:SI 3 r3 [orig:121 _10 ] [121])
        (zero_extend:SI (reg:QI 3 r3 [178]))) "../System/pomozne_funkcije.c":183:16 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 422 124 107 11 (set (reg:SI 1 r1 [262])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":401:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 107 422 108 11 (set (mem/c:SI (reg:SI 1 r1 [262]) [5 sound_select+0 S4 A32])
        (reg:SI 2 r2 [orig:170 MEM[base: _99, offset: 4294967284B] ] [170])) "../System/pomozne_funkcije.c":401:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 108 107 423 11 (debug_marker) "../System/pomozne_funkcije.c":402:3 -1
     (nil))
(insn 423 108 111 11 (set (reg:SI 1 r1 [263])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":402:17 728 {*thumb2_movsi_vfp}
     (nil))
(insn 111 423 112 11 (set (mem/c:SI (reg:SI 1 r1 [263]) [5 sound_counter+0 S4 A32])
        (reg:SI 2 r2 [orig:170 MEM[base: _99, offset: 4294967284B] ] [170])) "../System/pomozne_funkcije.c":402:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 112 111 126 11 (debug_marker) "../System/pomozne_funkcije.c":403:3 -1
     (nil))
(insn 126 112 120 11 (set (mem:QI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -16 [0xfffffffffffffff0])) [0 MEM[base: _99, offset: 4294967280B]+0 S1 A32])
        (reg:QI 3 r3 [orig:121 _10 ] [121])) "../System/pomozne_funkcije.c":183:16 263 {*arm_movqi_insn}
     (nil))
(insn 120 126 121 11 (set (reg:SI 2 r2 [orig:177 MEM[base: _99, offset: 4294967288B] ] [177])
        (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[base: _99, offset: 4294967288B]+0 S4 A32])) "../System/pomozne_funkcije.c":182:25 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[base: _99, offset: 4294967288B]+0 S4 A32])
        (nil)))
(insn 121 120 114 11 (set (mem:SI (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -12 [0xfffffffffffffff4])) [5 MEM[base: _99, offset: 4294967284B]+0 S4 A32])
        (reg:SI 2 r2 [orig:177 MEM[base: _99, offset: 4294967288B] ] [177])) "../System/pomozne_funkcije.c":182:25 728 {*thumb2_movsi_vfp}
     (nil))
(insn 114 121 424 11 (set (reg:SI 2 r2 [176])
        (const_int 3209 [0xc89])) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3209 [0xc89])
        (nil)))
(insn 424 114 115 11 (set (reg:SI 1 r1 [264])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (nil))
(insn 115 424 116 11 (set (mem/c:SI (reg:SI 1 r1 [264]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [176])) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 116 115 117 11 (debug_marker) "../System/pomozne_funkcije.c":404:3 -1
     (nil))
(debug_insn 117 116 118 11 (var_location:QI sound (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 118 117 119 11 (var_location:QI sound (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":181:6 -1
     (nil))
(debug_insn 119 118 122 11 (debug_marker) "../System/pomozne_funkcije.c":182:6 -1
     (nil))
(debug_insn 122 119 127 11 (debug_marker) "../System/pomozne_funkcije.c":183:6 -1
     (nil))
(debug_insn 127 122 129 11 (debug_marker) "../System/pomozne_funkcije.c":184:6 -1
     (nil))
(jump_insn 129 127 130 11 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:121 _10 ] [121])
                        (const_int 0 [0]))
                    (label_ref 210)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":184:8 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 908278212 (nil))
 -> 210)
(note 130 129 159 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 159 130 131 12 NOTE_INSN_DELETED)
(debug_insn 131 159 132 12 (debug_marker) "../System/pomozne_funkcije.c":185:7 -1
     (nil))
(call_insn 132 131 133 12 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_victory") [flags 0x3]  <function_decl 0000000007a76b00 check_victory>) [0 check_victory S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":185:7 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("check_victory") [flags 0x3]  <function_decl 0000000007a76b00 check_victory>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 133 132 134 12 (debug_marker) "../System/pomozne_funkcije.c":186:7 -1
     (nil))
(debug_insn 134 133 135 12 (var_location:QI check (const_int -16 [0xfffffffffffffff0])) "../System/pomozne_funkcije.c":186:15 -1
     (nil))
(debug_insn 135 134 136 12 (debug_marker) "../System/pomozne_funkcije.c":187:7 -1
     (nil))
(insn 136 135 137 12 (set (reg:SI 0 r0)
        (const_int 240 [0xf0])) "../System/pomozne_funkcije.c":187:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 137 136 138 12 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>) [0 LEDs_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":187:7 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_off") [flags 0x41]  <function_decl 0000000007c32a00 LEDs_off>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 138 137 139 12 (debug_marker) "../System/pomozne_funkcije.c":188:7 -1
     (nil))
(debug_insn 139 138 140 12 (debug_marker) "../System/pomozne_funkcije.c":188:11 -1
     (nil))
(debug_insn 140 139 141 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 141 140 142 12 (var_location:QI check (const_int -16 [0xfffffffffffffff0])) -1
     (nil))
(debug_insn 142 141 143 12 (debug_marker) "../System/pomozne_funkcije.c":188:19 -1
     (nil))
(debug_insn 143 142 144 12 (debug_marker) "../System/pomozne_funkcije.c":189:8 -1
     (nil))
(insn 144 143 145 12 (set (reg/f:SI 3 r3 [231])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)) "../System/pomozne_funkcije.c":189:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
        (nil)))
(insn 145 144 371 12 (set (reg:SI 2 r2 [orig:181 sp[0].life ] [181])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [231])
                    (const_int 24 [0x18])) [0 sp[0].life+0 S1 A32]))) "../System/pomozne_funkcije.c":189:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 24 [0x18]))) [0 sp[0].life+0 S1 A32]))
        (nil)))
(insn 371 145 158 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:181 sp[0].life ] [181])
            (const_int 0 [0]))) "../System/pomozne_funkcije.c":189:33 268 {*arm_cmpsi_insn}
     (nil))
(insn 158 371 372 12 (set (reg:SI 2 r2 [orig:183 sp[1].life ] [183])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [231])
                    (const_int 468 [0x1d4])) [0 sp[1].life+0 S1 A32]))) "../System/pomozne_funkcije.c":189:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 468 [0x1d4]))) [0 sp[1].life+0 S1 A32]))
        (nil)))
(insn 372 158 151 12 (set (reg/v:SI 0 r0 [orig:142 check ] [142])
        (if_then_else:SI (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (const_int 240 [0xf0])
            (const_int 224 [0xe0]))) "../System/pomozne_funkcije.c":189:33 986 {*thumb2_movsicc_insn}
     (nil))
(debug_insn 151 372 152 12 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 152 151 153 12 (debug_marker) "../System/pomozne_funkcije.c":188:35 -1
     (nil))
(debug_insn 153 152 154 12 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 154 153 155 12 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 155 154 156 12 (debug_marker) "../System/pomozne_funkcije.c":188:19 -1
     (nil))
(debug_insn 156 155 160 12 (debug_marker) "../System/pomozne_funkcije.c":189:8 -1
     (nil))
(jump_insn 160 156 161 12 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:183 sp[1].life ] [183])
                        (const_int 0 [0]))
                    (label_ref 166)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":189:10 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 166)
(note 161 160 162 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 162 161 163 13 (debug_marker) "../System/pomozne_funkcije.c":189:27 -1
     (nil))
(insn 163 162 164 13 (set (reg:SI 0 r0 [184])
        (ashift:SI (reg/v:SI 0 r0 [orig:142 check ] [142])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":189:33 147 {*arm_shiftsi3}
     (nil))
(insn 164 163 165 13 (set (reg/v:SI 0 r0 [orig:142 check ] [142])
        (zero_extend:SI (reg:QI 0 r0 [184]))) "../System/pomozne_funkcije.c":189:33 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 165 164 166 13 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) "../System/pomozne_funkcije.c":189:33 -1
     (nil))
(code_label 166 165 167 14 176 (nil) [1 uses])
(note 167 166 176 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 176 167 168 14 NOTE_INSN_DELETED)
(debug_insn 168 176 169 14 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 169 168 170 14 (debug_marker) "../System/pomozne_funkcije.c":188:35 -1
     (nil))
(debug_insn 170 169 171 14 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 171 170 172 14 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 172 171 173 14 (debug_marker) "../System/pomozne_funkcije.c":188:19 -1
     (nil))
(debug_insn 173 172 175 14 (debug_marker) "../System/pomozne_funkcije.c":189:8 -1
     (nil))
(insn 175 173 177 14 (set (reg:SI 2 r2 [orig:186 sp[2].life ] [186])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [231])
                    (const_int 912 [0x390])) [0 sp[2].life+0 S1 A32]))) "../System/pomozne_funkcije.c":189:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 912 [0x390]))) [0 sp[2].life+0 S1 A32]))
        (nil)))
(jump_insn 177 175 178 14 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 2 r2 [orig:186 sp[2].life ] [186])
                        (const_int 0 [0]))
                    (label_ref 183)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":189:10 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 183)
(note 178 177 179 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 179 178 180 15 (debug_marker) "../System/pomozne_funkcije.c":189:27 -1
     (nil))
(insn 180 179 181 15 (set (reg:SI 0 r0 [187])
        (ashift:SI (reg/v:SI 0 r0 [orig:142 check ] [142])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":189:33 147 {*arm_shiftsi3}
     (nil))
(insn 181 180 182 15 (set (reg/v:SI 0 r0 [orig:142 check ] [142])
        (zero_extend:SI (reg:QI 0 r0 [187]))) "../System/pomozne_funkcije.c":189:33 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 182 181 183 15 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) "../System/pomozne_funkcije.c":189:33 -1
     (nil))
(code_label 183 182 184 16 177 (nil) [1 uses])
(note 184 183 193 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 193 184 185 16 NOTE_INSN_DELETED)
(debug_insn 185 193 186 16 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 186 185 187 16 (debug_marker) "../System/pomozne_funkcije.c":188:35 -1
     (nil))
(debug_insn 187 186 188 16 (var_location:SI j (const_int 3 [0x3])) -1
     (nil))
(debug_insn 188 187 189 16 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 189 188 190 16 (debug_marker) "../System/pomozne_funkcije.c":188:19 -1
     (nil))
(debug_insn 190 189 192 16 (debug_marker) "../System/pomozne_funkcije.c":189:8 -1
     (nil))
(insn 192 190 194 16 (set (reg:SI 3 r3 [orig:189 sp[3].life ] [189])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [231])
                    (const_int 1356 [0x54c])) [0 sp[3].life+0 S1 A32]))) "../System/pomozne_funkcije.c":189:10 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                        (const_int 1356 [0x54c]))) [0 sp[3].life+0 S1 A32]))
        (nil)))
(jump_insn 194 192 195 16 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 3 r3 [orig:189 sp[3].life ] [189])
                        (const_int 0 [0]))
                    (label_ref 200)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/pomozne_funkcije.c":189:10 1025 {*thumb2_cbnz}
     (int_list:REG_BR_PROB 536870916 (nil))
 -> 200)
(note 195 194 196 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 196 195 197 17 (debug_marker) "../System/pomozne_funkcije.c":189:27 -1
     (nil))
(insn 197 196 198 17 (set (reg:SI 0 r0 [190])
        (ashift:SI (reg/v:SI 0 r0 [orig:142 check ] [142])
            (const_int 1 [0x1]))) "../System/pomozne_funkcije.c":189:33 147 {*arm_shiftsi3}
     (nil))
(insn 198 197 199 17 (set (reg/v:SI 0 r0 [orig:142 check ] [142])
        (zero_extend:SI (reg:QI 0 r0 [190]))) "../System/pomozne_funkcije.c":189:33 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 199 198 200 17 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) "../System/pomozne_funkcije.c":189:33 -1
     (nil))
(code_label 200 199 201 18 178 (nil) [1 uses])
(note 201 200 202 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 202 201 203 18 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 203 202 204 18 (debug_marker) "../System/pomozne_funkcije.c":188:35 -1
     (nil))
(debug_insn 204 203 205 18 (var_location:SI j (const_int 4 [0x4])) -1
     (nil))
(debug_insn 205 204 206 18 (var_location:QI check (reg:QI 0 r0 [orig:142 check ] [142])) -1
     (nil))
(debug_insn 206 205 207 18 (debug_marker) "../System/pomozne_funkcije.c":188:19 -1
     (nil))
(debug_insn 207 206 209 18 (debug_marker) "../System/pomozne_funkcije.c":191:7 -1
     (nil))
(call_insn 209 207 210 18 (parallel [
            (call (mem:SI (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>) [0 LEDs_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":191:7 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("LEDs_on") [flags 0x41]  <function_decl 0000000007c32900 LEDs_on>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(code_label 210 209 211 19 174 (nil) [1 uses])
(note 211 210 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 232 211 212 19 NOTE_INSN_DELETED)
(debug_insn 212 232 213 19 (debug_marker) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 213 212 214 19 (var_location:SI blood (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 214 213 215 19 (var_location:QI x (const_int 0 [0])) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 215 214 216 19 (var_location:QI y (const_int 0 [0])) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 216 215 217 19 (var_location:SF dist (mem:SF (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
            (const_int -4 [0xfffffffffffffffc])) [0 MEM[base: _99, offset: 4294967292B]+0 S4 A32])) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 217 216 218 19 (debug_marker:BLK) "../System/pomozne_funkcije.c":211:6 -1
     (nil))
(debug_insn 218 217 220 19 (debug_marker) "../System/pomozne_funkcije.c":212:5 -1
     (nil))
(insn 220 218 219 19 (set (reg:SF 31 s15 [orig:192 MEM[base: _99, offset: 4294967292B] ] [192])
        (mem:SF (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[base: _99, offset: 4294967292B]+0 S4 A32])) "../System/pomozne_funkcije.c":212:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[base: _99, offset: 4294967292B]+0 S4 A32])
        (nil)))
(insn 219 220 221 19 (set (reg:SF 29 s13 [191])
        (const_double:SF 2.0e+1 [0x0.ap+5])) "../System/pomozne_funkcije.c":212:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
(insn 221 219 222 19 (set (reg/v:SF 30 s14 [orig:126 scale ] [126])
        (div:SF (reg:SF 29 s13 [191])
            (reg:SF 31 s15 [orig:192 MEM[base: _99, offset: 4294967292B] ] [192]))) "../System/pomozne_funkcije.c":212:11 764 {*divsf3_vfp}
     (expr_list:REG_EQUAL (div:SF (const_double:SF 2.0e+1 [0x0.ap+5])
            (reg:SF 31 s15 [orig:192 MEM[base: _99, offset: 4294967292B] ] [192]))
        (nil)))
(debug_insn 222 221 223 19 (var_location:SF scale (reg/v:SF 30 s14 [orig:126 scale ] [126])) "../System/pomozne_funkcije.c":212:11 -1
     (nil))
(debug_insn 223 222 224 19 (debug_marker) "../System/pomozne_funkcije.c":213:5 -1
     (nil))
(debug_insn 224 223 225 19 (var_location:SF scale (smin:SF (reg/v:SF 30 s14 [orig:126 scale ] [126])
        (const_double:SF 1.0e+0 [0x0.8p+1]))) -1
     (nil))
(debug_insn 225 224 226 19 (debug_marker) "../System/pomozne_funkcije.c":214:5 -1
     (nil))
(debug_insn 226 225 227 19 (debug_marker) "../System/pomozne_funkcije.c":214:10 -1
     (nil))
(debug_insn 227 226 228 19 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 228 227 229 19 (debug_marker) "../System/pomozne_funkcije.c":214:20 -1
     (nil))
(insn 229 228 401 19 (set (reg:SF 31 s15 [194])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/pomozne_funkcije.c":218:74 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 401 229 402 19 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 30 s14 [orig:126 scale ] [126])
            (reg:SF 31 s15 [194]))) "../System/pomozne_funkcije.c":218:74 828 {*cmpsf_trap_vfp}
     (nil))
(insn 402 401 233 19 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/pomozne_funkcije.c":218:74 817 {*movcc_vfp}
     (nil))
(insn 233 402 234 19 (set (reg:SF 0 r0)
        (if_then_else:SF (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (reg/v:SF 30 s14 [orig:126 scale ] [126])
            (reg:SF 31 s15 [194]))) "../System/pomozne_funkcije.c":218:74 741 {*thumb2_movsfcc_vfp}
     (nil))
(call_insn/u 234 233 388 19 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 00000000067e7200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 388 234 235 19 (set (reg:DF 2 r2 [244])
        (reg:DF 0 r0)) "../System/pomozne_funkcije.c":218:74 739 {*thumb2_movdf_vfp}
     (nil))
(insn 235 388 5 19 (set (reg:DF 34 s18 [orig:133 _57 ] [133])
        (reg:DF 2 r2 [244])) "../System/pomozne_funkcije.c":218:74 739 {*thumb2_movdf_vfp}
     (nil))
(insn 5 235 359 19 (set (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
        (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])) "../System/pomozne_funkcije.c":218:74 728 {*thumb2_movsi_vfp}
     (nil))
(insn 359 5 425 19 (set (reg:SI 3 r3 [229])
        (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
            (const_int 400 [0x190]))) 7 {*arm_addsi3}
     (nil))
(insn 425 359 429 19 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [12 %sfp+-8 S4 A32])
        (reg:SI 3 r3 [229])) 728 {*thumb2_movsi_vfp}
     (nil))
(note 429 425 260 19 NOTE_INSN_DELETED)
(insn 260 429 379 19 (set (reg:SI 5 r5 [205])
        (const_int 1200 [0x4b0])) "../System/pomozne_funkcije.c":218:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1200 [0x4b0])
        (nil)))
(insn 379 260 238 19 (set (reg:DF 2 r2)
        (const_double:DF -1.0000000000000000208166817117216851329430937767e-2 [-0x0.a3d70a3d70a3d8p-6])) 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 238 379 239 19 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 239 238 411 19 (set (reg:DF 36 s20 [orig:141 _68 ] [141])
        (reg:DF 0 r0 [245])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUAL (mult:DF (reg:DF 34 s18 [orig:133 _57 ] [133])
            (const_double:DF -1.0000000000000000208166817117216851329430937767e-2 [-0x0.a3d70a3d70a3d8p-6]))
        (nil)))
(insn 411 239 413 19 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [12 %sfp+-4 S4 A32])
        (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 413 411 312 19 (set (reg:SI 11 fp [229])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [12 %sfp+-8 S4 A32])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 312 413 241 20 179 (nil) [1 uses])
(note 241 312 257 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(note 257 241 261 20 NOTE_INSN_DELETED)
(note 261 257 262 20 NOTE_INSN_DELETED)
(note 262 261 280 20 NOTE_INSN_DELETED)
(note 280 262 287 20 NOTE_INSN_DELETED)
(note 287 280 291 20 NOTE_INSN_DELETED)
(note 291 287 292 20 NOTE_INSN_DELETED)
(note 292 291 302 20 NOTE_INSN_DELETED)
(note 302 292 242 20 NOTE_INSN_DELETED)
(debug_insn 242 302 243 20 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 243 242 246 20 (debug_marker) "../System/pomozne_funkcije.c":215:9 -1
     (nil))
(insn 246 243 247 20 (set (mem:SF (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145]) [1 MEM[base: _82, offset: 0B]+0 S4 A32])
        (reg:SF 32 s16 [238])) "../System/pomozne_funkcije.c":215:23 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 247 246 249 20 (debug_marker) "../System/pomozne_funkcije.c":216:9 -1
     (nil))
(insn 249 247 250 20 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
                (const_int 4 [0x4])) [1 MEM[base: _82, offset: 4B]+0 S4 A32])
        (reg:SF 32 s16 [238])) "../System/pomozne_funkcije.c":216:23 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 250 249 251 20 (debug_marker) "../System/pomozne_funkcije.c":217:9 -1
     (nil))
(debug_insn 251 250 252 20 (var_location:SI range (const_int 100 [0x64])) "../System/pomozne_funkcije.c":217:13 -1
     (nil))
(debug_insn 252 251 253 20 (debug_marker) "../System/pomozne_funkcije.c":218:9 -1
     (nil))
(call_insn 253 252 427 20 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 427 253 256 20 (set (reg:SI 3 r3 [267])
        (const_int 458129845 [0x1b4e81b5])) "../System/pomozne_funkcije.c":218:43 728 {*thumb2_movsi_vfp}
     (nil))
(insn 256 427 258 20 (parallel [
            (set (reg:SI 2 r2 [200])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:128 _52 ] [128]))
                            (sign_extend:DI (reg:SI 3 r3 [267])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [257]))
        ]) "../System/pomozne_funkcije.c":218:43 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:128 _52 ] [128]))
                    (const_int 458129845 [0x1b4e81b5]))
                (const_int 32 [0x20])))
        (nil)))
(insn 258 256 259 20 (set (reg:SI 3 r3 [203])
        (ashiftrt:SI (reg:SI 0 r0 [orig:128 _52 ] [128])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":218:43 147 {*arm_shiftsi3}
     (nil))
(insn 259 258 263 20 (set (reg:SI 3 r3 [199])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [200])
                (const_int 7 [0x7]))
            (reg:SI 3 r3 [203]))) "../System/pomozne_funkcije.c":218:43 319 {*rsb_shiftsi}
     (nil))
(insn 263 259 264 20 (set (reg:SI 0 r0)
        (minus:SI (reg:SI 0 r0 [orig:128 _52 ] [128])
            (mult:SI (reg:SI 5 r5 [205])
                (reg:SI 3 r3 [199])))) "../System/pomozne_funkcije.c":218:27 58 {*mls}
     (nil))
(call_insn/u 264 263 377 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 377 264 268 20 (set (reg:DF 2 r2)
        (reg:DF 8 r8 [240])) "../System/pomozne_funkcije.c":218:59 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 268 377 378 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:59 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 378 268 272 20 (set (reg:DF 2 r2)
        (reg:DF 6 r6 [241])) "../System/pomozne_funkcije.c":218:70 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 272 378 274 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:70 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 00000000067e4700 __aeabi_dsub>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 274 272 276 20 (set (reg:DF 2 r2)
        (reg:DF 34 s18 [orig:133 _57 ] [133])) "../System/pomozne_funkcije.c":218:74 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 276 274 279 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 279 276 281 20 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":218:74 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 281 279 282 20 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
                (const_int 8 [0x8])) [1 MEM[base: _82, offset: 8B]+0 S4 A32])
        (reg:SF 0 r0 [247])) "../System/pomozne_funkcije.c":218:74 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 282 281 283 20 (debug_marker) "../System/pomozne_funkcije.c":219:9 -1
     (nil))
(call_insn 283 282 286 20 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>) [0 rand S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:36 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("rand") [flags 0x41]  <function_decl 0000000007cf6c00 rand>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 286 283 288 20 (parallel [
            (set (reg:SI 2 r2 [213])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:136 _60 ] [136]))
                            (sign_extend:DI (reg:SI 10 r10 [242])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 3 r3 [258]))
        ]) "../System/pomozne_funkcije.c":219:43 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 r0 [orig:136 _60 ] [136]))
                    (const_int 274877907 [0x10624dd3]))
                (const_int 32 [0x20])))
        (nil)))
(insn 288 286 289 20 (set (reg:SI 3 r3 [216])
        (ashiftrt:SI (reg:SI 0 r0 [orig:136 _60 ] [136])
            (const_int 31 [0x1f]))) "../System/pomozne_funkcije.c":219:43 147 {*arm_shiftsi3}
     (nil))
(insn 289 288 290 20 (set (reg:SI 3 r3 [212])
        (minus:SI (ashiftrt:SI (reg:SI 2 r2 [213])
                (const_int 5 [0x5]))
            (reg:SI 3 r3 [216]))) "../System/pomozne_funkcije.c":219:43 319 {*rsb_shiftsi}
     (nil))
(insn 290 289 293 20 (set (reg:SI 2 r2 [218])
        (const_int 500 [0x1f4])) "../System/pomozne_funkcije.c":219:43 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 500 [0x1f4])
        (nil)))
(insn 293 290 294 20 (set (reg:SI 0 r0)
        (minus:SI (reg:SI 0 r0 [orig:136 _60 ] [136])
            (mult:SI (reg:SI 2 r2 [218])
                (reg:SI 3 r3 [212])))) "../System/pomozne_funkcije.c":219:27 58 {*mls}
     (nil))
(call_insn/u 294 293 296 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:27 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 00000000067e7300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 296 294 298 20 (set (reg:DF 2 r2)
        (reg:DF 36 s20 [orig:141 _68 ] [141])) "../System/pomozne_funkcije.c":219:69 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 298 296 301 20 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:69 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 00000000067e4500 __aeabi_dmul>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 301 298 303 20 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":219:69 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 00000000067e7100 __aeabi_d2f>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 303 301 304 20 (set (mem:SF (plus:SI (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
                (const_int 12 [0xc])) [1 MEM[base: _82, offset: 12B]+0 S4 A32])
        (reg:SF 0 r0 [249])) "../System/pomozne_funkcije.c":219:69 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 304 303 305 20 (debug_marker) "../System/pomozne_funkcije.c":220:9 -1
     (nil))
(insn 305 304 307 20 (set (reg:SI 3 r3 [223])
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":220:25 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 307 305 308 20 (set (mem:QI (plus:SI (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
                (const_int 16 [0x10])) [0 MEM[base: _82, offset: 16B]+0 S1 A32])
        (reg:QI 3 r3 [223])) "../System/pomozne_funkcije.c":220:25 263 {*arm_movqi_insn}
     (nil))
(debug_insn 308 307 309 20 (debug_marker) "../System/pomozne_funkcije.c":214:47 -1
     (nil))
(debug_insn 309 308 310 20 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 310 309 311 20 (debug_marker) "../System/pomozne_funkcije.c":214:20 -1
     (nil))
(insn 311 310 314 20 (set (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
        (plus:SI (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
            (const_int 20 [0x14]))) "../System/pomozne_funkcije.c":214:5 7 {*arm_addsi3}
     (nil))
(insn 314 311 315 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 4 r4 [orig:145 ivtmp.222 ] [145])
            (reg:SI 11 fp [229]))) "../System/pomozne_funkcije.c":214:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 315 314 416 20 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 312)
            (pc))) "../System/pomozne_funkcije.c":214:5 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 1020077284 (nil))
 -> 312)
(note 416 315 414 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 414 416 316 21 (set (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [12 %sfp+-4 S4 A32])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 316 414 317 22 173 (nil) [3 uses])
(note 317 316 318 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 318 317 319 22 (var_location:SI blood (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 319 318 320 22 (var_location:QI x (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 320 319 321 22 (var_location:QI y (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 321 320 322 22 (var_location:SF dist (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 322 321 323 22 (var_location:SF scale (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 323 322 324 22 (var_location:SI i (clobber (const_int 0 [0]))) "../System/pomozne_funkcije.c":193:6 -1
     (nil))
(debug_insn 324 323 325 22 (debug_marker) "../System/pomozne_funkcije.c":177:37 -1
     (nil))
(debug_insn 325 324 326 22 (var_location:SI i (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 326 325 327 22 (debug_marker) "../System/pomozne_funkcije.c":177:19 -1
     (nil))
(insn 327 326 428 22 (set (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
        (plus:SI (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
            (const_int 444 [0x1bc]))) "../System/pomozne_funkcije.c":177:4 7 {*arm_addsi3}
     (nil))
(insn 428 327 329 22 (set (reg:SI 3 r3 [268])
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 000000000786a870 sp>)
                (const_int 1816 [0x718])))) "../System/pomozne_funkcije.c":177:4 728 {*thumb2_movsi_vfp}
     (nil))
(insn 329 428 330 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 11 fp [orig:124 ivtmp.230 ] [124])
            (reg:SI 3 r3 [268]))) "../System/pomozne_funkcije.c":177:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 330 329 417 22 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 328)
            (pc))) "../System/pomozne_funkcije.c":177:4 273 {arm_cond_branch}
     (int_list:REG_BR_PROB 805306364 (nil))
 -> 328)
(note 417 330 415 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 415 417 331 23 (set (reg/f:SI 4 r4 [234])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [12 %sfp+-12 S4 A32])) 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 331 415 332 24 172 (nil) [3 uses])
(note 332 331 336 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 336 332 333 24 NOTE_INSN_DELETED)
(debug_insn 333 336 334 24 (debug_marker) "../System/pomozne_funkcije.c":198:2 -1
     (nil))
(insn 334 333 335 24 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/pomozne_funkcije.c":198:20 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 335 334 340 24 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/pomozne_funkcije.c":198:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000007a7b400 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 340 335 408 24 (set (mem/c:QI (reg/f:SI 4 r4 [234]) [0 gun_button_prev+0 S1 A8])
        (reg:QI 0 r0 [250])) "../System/pomozne_funkcije.c":198:18 263 {*arm_movqi_insn}
     (nil))
(note 408 340 418 NOTE_INSN_DELETED)
(note 418 408 0 NOTE_INSN_DELETED)

;; Function play_sound (play_sound, funcdef_no=884, decl_uid=12015, cgraph_uid=888, symbol_order=895)

      Creating newreg=140
Removing SCRATCH in insn #7 (nop 4)
rescanning insn with uid = 7.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
      Change to class GENERAL_REGS for r140
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 27:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 24:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 44:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 45:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 54:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 61:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 58:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 62:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 78:  (0) r  (1) j {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 79:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 13

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 5
   Insn 90: point = 0, n_alt = -1
   Insn 62: point = 0, n_alt = 7
   Insn 58: point = 1, n_alt = 7
   Insn 61: point = 2, n_alt = 4
   Insn 54: point = 3, n_alt = 7
   Insn 57: point = 4, n_alt = 1
   Insn 53: point = 5, n_alt = 1
   Insn 60: point = 6, n_alt = 5
   Insn 56: point = 7, n_alt = 5
   Insn 52: point = 8, n_alt = 5
  BB 3
   Insn 86: point = 9, n_alt = -1
   Insn 28: point = 9, n_alt = 7
   Insn 24: point = 10, n_alt = 7
   Insn 20: point = 11, n_alt = 7
   Insn 27: point = 12, n_alt = 4
   Insn 19: point = 13, n_alt = 1
   Insn 26: point = 14, n_alt = 5
   Insn 22: point = 15, n_alt = 5
   Insn 18: point = 16, n_alt = 5
  BB 4
   Insn 88: point = 17, n_alt = -1
   Insn 45: point = 17, n_alt = 7
   Insn 41: point = 18, n_alt = 7
   Insn 44: point = 19, n_alt = 4
   Insn 37: point = 20, n_alt = 7
   Insn 40: point = 21, n_alt = 1
   Insn 36: point = 22, n_alt = 1
   Insn 43: point = 23, n_alt = 5
   Insn 39: point = 24, n_alt = 5
   Insn 35: point = 25, n_alt = 5
  BB 6
   Insn 79: point = 26, n_alt = 7
   Insn 75: point = 27, n_alt = 7
   Insn 78: point = 28, n_alt = 4
   Insn 71: point = 29, n_alt = 7
   Insn 74: point = 30, n_alt = 1
   Insn 70: point = 31, n_alt = 1
   Insn 77: point = 32, n_alt = 5
   Insn 73: point = 33, n_alt = 5
   Insn 69: point = 34, n_alt = 5
  BB 2
   Insn 7: point = 35, n_alt = 0
   Insn 85: point = 37, n_alt = -2
 r114: [11..16]
 r115: [10..13]
 r116: [10..15]
 r118: [9..14]
 r119: [9..12]
 r120: [20..25]
 r121: [20..22]
 r122: [18..24]
 r123: [18..21]
 r124: [17..23]
 r125: [17..19]
 r126: [3..8]
 r127: [3..5]
 r128: [1..7]
 r129: [1..4]
 r130: [0..6]
 r131: [0..2]
 r132: [29..34]
 r133: [29..31]
 r134: [27..33]
 r135: [27..30]
 r136: [26..32]
 r137: [26..28]
 r138: [36..37]
 r140: [35..36]
Compressing live ranges: from 38 to 17 - 44%
Ranges after the compression:
 r114: [4..5]
 r115: [4..5]
 r116: [4..5]
 r118: [4..5]
 r119: [4..5]
 r120: [8..9]
 r121: [8..9]
 r122: [6..9]
 r123: [6..9]
 r124: [6..9]
 r125: [6..7]
 r126: [2..3]
 r127: [2..3]
 r128: [0..3]
 r129: [0..3]
 r130: [0..3]
 r131: [0..1]
 r132: [12..13]
 r133: [12..13]
 r134: [10..13]
 r135: [10..13]
 r136: [10..13]
 r137: [10..11]
 r138: [15..16]
 r140: [14..15]

********** Assignment #1: **********

	 Assigning to 140 (cl=GENERAL_REGS, orig=140, freq=1000, tfirst=140, tfreq=1000)...
	   Assign 3 to reload r140 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 13
	   Spilling non-eliminable hard regs: 13
New elimination table:
Can eliminate 103 to 13 (offset=4, prev_offset=4)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 24
changing reg in insn 20
changing reg in insn 22
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 27
changing reg in insn 28
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 54
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 60
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 69
changing reg in insn 71
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 75
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 85
changing reg in insn 7
changing reg in insn 7
changing reg in insn 7
deleting insn with uid = 85.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 11 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 11 count 8 (    1)


play_sound

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15]
;;  exit block uses 	 13 [sp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 100 [cc]
;;  ref usage 	r0={5d,6u} r1={5d,4u} r2={8d,7u} r3={6d,5u} r4={4d,4u} r13={1d,7u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d} 
;;    total ref usage 80{47d,33u,0e} in 60{60 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_DELETED)
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (debug_marker) "../System/pomozne_funkcije.c":399:2 -1
     (nil))
(jump_insn 7 6 8 2 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 0 r0 [138])
                        (const_int 3 [0x3]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 0 r0 [138])
                                (const_int 4 [0x4]))
                            (label_ref:SI 8)) [0  S4 A32])
                    (label_ref:SI 83)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 3 r3 [140]))
            (use (label_ref:SI 8))
        ]) "../System/pomozne_funkcije.c":399:2 1007 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 83 (nil))
 -> 8)
(code_label 8 7 9 199 (nil) [2 uses])
(jump_table_data 9 8 10 (addr_diff_vec:SI (label_ref:SI 8)
         [
            (label_ref:SI 11)
            (label_ref:SI 32)
            (label_ref:SI 49)
            (label_ref:SI 66)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 10 9 11)
(code_label 11 10 12 3 202 (nil) [1 uses])
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 13 12 14 3 (var_location:QI D#1 (const_int 0 [0])) -1
     (nil))
(debug_insn 14 13 15 3 (debug_marker:BLK) "../System/pomozne_funkcije.c":398:6 -1
     (nil))
(debug_insn 15 14 16 3 (var_location:QI D#2 (debug_expr:QI D#1)) -1
     (nil))
(debug_insn 16 15 17 3 (var_location:QI sound (debug_expr:QI D#2)) -1
     (nil))
(debug_insn 17 16 18 3 (debug_marker) "../System/pomozne_funkcije.c":401:3 -1
     (nil))
(insn 18 17 22 3 (set (reg/f:SI 4 r4 [114])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":401:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)
        (nil)))
(insn 22 18 26 3 (set (reg/f:SI 0 r0 [116])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":402:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)
        (nil)))
(insn 26 22 19 3 (set (reg/f:SI 2 r2 [118])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)
        (nil)))
(insn 19 26 27 3 (set (reg:SI 3 r3 [115])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":401:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 27 19 20 3 (set (reg:SI 1 r1 [119])
        (const_int 3209 [0xc89])) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3209 [0xc89])
        (nil)))
(insn 20 27 21 3 (set (mem/c:SI (reg/f:SI 4 r4 [114]) [5 sound_select+0 S4 A32])
        (reg:SI 3 r3 [115])) "../System/pomozne_funkcije.c":401:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 21 20 24 3 (debug_marker) "../System/pomozne_funkcije.c":402:3 -1
     (nil))
(insn 24 21 25 3 (set (mem/c:SI (reg/f:SI 0 r0 [116]) [5 sound_counter+0 S4 A32])
        (reg:SI 3 r3 [115])) "../System/pomozne_funkcije.c":402:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 25 24 28 3 (debug_marker) "../System/pomozne_funkcije.c":403:3 -1
     (nil))
(insn 28 25 29 3 (set (mem/c:SI (reg/f:SI 2 r2 [118]) [5 sound_limit+0 S4 A32])
        (reg:SI 1 r1 [119])) "../System/pomozne_funkcije.c":403:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 29 28 86 3 (debug_marker) "../System/pomozne_funkcije.c":404:3 -1
     (nil))
(jump_insn 86 29 87 3 (set (pc)
        (label_ref 83)) 284 {*arm_jump}
     (nil)
 -> 83)
(barrier 87 86 32)
(code_label 32 87 33 4 201 (nil) [1 uses])
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 34 33 35 4 (debug_marker) "../System/pomozne_funkcije.c":406:3 -1
     (nil))
(insn 35 34 39 4 (set (reg/f:SI 2 r2 [120])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)
        (nil)))
(insn 39 35 43 4 (set (reg/f:SI 1 r1 [122])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":407:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)
        (nil)))
(insn 43 39 36 4 (set (reg/f:SI 3 r3 [124])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)
        (nil)))
(insn 36 43 40 4 (set (reg:SI 4 r4 [121])
        (const_int 1 [0x1])) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 40 36 37 4 (set (reg:SI 0 r0 [123])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":407:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 37 40 38 4 (set (mem/c:SI (reg/f:SI 2 r2 [120]) [5 sound_select+0 S4 A32])
        (reg:SI 4 r4 [121])) "../System/pomozne_funkcije.c":406:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 38 37 44 4 (debug_marker) "../System/pomozne_funkcije.c":407:3 -1
     (nil))
(insn 44 38 41 4 (set (reg:SI 2 r2 [125])
        (const_int 2984 [0xba8])) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 2984 [0xba8])
        (nil)))
(insn 41 44 42 4 (set (mem/c:SI (reg/f:SI 1 r1 [122]) [5 sound_counter+0 S4 A32])
        (reg:SI 0 r0 [123])) "../System/pomozne_funkcije.c":407:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 42 41 45 4 (debug_marker) "../System/pomozne_funkcije.c":408:3 -1
     (nil))
(insn 45 42 46 4 (set (mem/c:SI (reg/f:SI 3 r3 [124]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [125])) "../System/pomozne_funkcije.c":408:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 46 45 88 4 (debug_marker) "../System/pomozne_funkcije.c":409:3 -1
     (nil))
(jump_insn 88 46 89 4 (set (pc)
        (label_ref 83)) "../System/pomozne_funkcije.c":409:3 284 {*arm_jump}
     (nil)
 -> 83)
(barrier 89 88 49)
(code_label 49 89 50 5 200 (nil) [1 uses])
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 52 5 (debug_marker) "../System/pomozne_funkcije.c":411:3 -1
     (nil))
(insn 52 51 56 5 (set (reg/f:SI 2 r2 [126])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":411:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)
        (nil)))
(insn 56 52 60 5 (set (reg/f:SI 1 r1 [128])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":412:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)
        (nil)))
(insn 60 56 53 5 (set (reg/f:SI 3 r3 [130])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":413:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)
        (nil)))
(insn 53 60 57 5 (set (reg:SI 4 r4 [127])
        (const_int 2 [0x2])) "../System/pomozne_funkcije.c":411:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
(insn 57 53 54 5 (set (reg:SI 0 r0 [129])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":412:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 54 57 55 5 (set (mem/c:SI (reg/f:SI 2 r2 [126]) [5 sound_select+0 S4 A32])
        (reg:SI 4 r4 [127])) "../System/pomozne_funkcije.c":411:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 55 54 61 5 (debug_marker) "../System/pomozne_funkcije.c":412:3 -1
     (nil))
(insn 61 55 58 5 (set (reg:SI 2 r2 [131])
        (const_int 3721 [0xe89])) "../System/pomozne_funkcije.c":413:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3721 [0xe89])
        (nil)))
(insn 58 61 59 5 (set (mem/c:SI (reg/f:SI 1 r1 [128]) [5 sound_counter+0 S4 A32])
        (reg:SI 0 r0 [129])) "../System/pomozne_funkcije.c":412:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 59 58 62 5 (debug_marker) "../System/pomozne_funkcije.c":413:3 -1
     (nil))
(insn 62 59 63 5 (set (mem/c:SI (reg/f:SI 3 r3 [130]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [131])) "../System/pomozne_funkcije.c":413:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 63 62 90 5 (debug_marker) "../System/pomozne_funkcije.c":414:3 -1
     (nil))
(jump_insn 90 63 91 5 (set (pc)
        (label_ref 83)) "../System/pomozne_funkcije.c":414:3 284 {*arm_jump}
     (nil)
 -> 83)
(barrier 91 90 66)
(code_label 66 91 67 6 198 (nil) [1 uses])
(note 67 66 68 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 68 67 69 6 (debug_marker) "../System/pomozne_funkcije.c":416:3 -1
     (nil))
(insn 69 68 73 6 (set (reg/f:SI 2 r2 [132])
        (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_select") [flags 0xc0]  <var_decl 000000000786aea0 sound_select>)
        (nil)))
(insn 73 69 77 6 (set (reg/f:SI 1 r1 [134])
        (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)) "../System/pomozne_funkcije.c":417:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_counter") [flags 0xc0]  <var_decl 000000000786ad80 sound_counter>)
        (nil)))
(insn 77 73 70 6 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sound_limit") [flags 0xc0]  <var_decl 000000000786ae10 sound_limit>)
        (nil)))
(insn 70 77 74 6 (set (reg:SI 4 r4 [133])
        (const_int 3 [0x3])) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))
(insn 74 70 71 6 (set (reg:SI 0 r0 [135])
        (const_int 0 [0])) "../System/pomozne_funkcije.c":417:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 71 74 72 6 (set (mem/c:SI (reg/f:SI 2 r2 [132]) [5 sound_select+0 S4 A32])
        (reg:SI 4 r4 [133])) "../System/pomozne_funkcije.c":416:16 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 72 71 78 6 (debug_marker) "../System/pomozne_funkcije.c":417:3 -1
     (nil))
(insn 78 72 75 6 (set (reg:SI 2 r2 [137])
        (const_int 9330 [0x2472])) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 9330 [0x2472])
        (nil)))
(insn 75 78 76 6 (set (mem/c:SI (reg/f:SI 1 r1 [134]) [5 sound_counter+0 S4 A32])
        (reg:SI 0 r0 [135])) "../System/pomozne_funkcije.c":417:17 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 76 75 79 6 (debug_marker) "../System/pomozne_funkcije.c":418:3 -1
     (nil))
(insn 79 76 82 6 (set (mem/c:SI (reg/f:SI 3 r3 [136]) [5 sound_limit+0 S4 A32])
        (reg:SI 2 r2 [137])) "../System/pomozne_funkcije.c":418:15 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 82 79 83 6 (var_location:QI sound (clobber (const_int 0 [0]))) -1
     (nil))
(code_label 83 82 84 7 196 (nil) [4 uses])
(note 84 83 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 96 84 97 NOTE_INSN_DELETED)
(note 97 96 0 NOTE_INSN_DELETED)
