
;; Function drawGun (drawGun, funcdef_no=356, decl_uid=5812, cgraph_uid=360, symbol_order=368)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 19 (  1.3)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 9 8 7 6 5 4 3
;;
;; Loop 2
;;  header 3, multiple latches: 7 9
;;  depth 2, outer 1
;;  nodes: 3 7 9 6 5 4
;; 2 succs { 11 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 3 8 }
;; 8 succs { 10 }
;; 9 succs { 3 10 }
;; 10 succs { 11 12 }
;; 11 succs { 3 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 192 uninteresting (no unique first use)
Reg 191: def dominates all uses has unique first use
Reg 178: def dominates all uses has unique first use
Reg 174: def dominates all uses has unique first use
Reg 197: def dominates all uses has unique first use
Reg 157 uninteresting
Reg 158 uninteresting
Reg 160: local to bb 7 def dominates all uses has unique first use
Reg 162: local to bb 7 def dominates all uses has unique first use
Reg 164 uninteresting
Reg 198: local to bb 7 def dominates all uses has unique first use
Reg 168: local to bb 7 def dominates all uses has unique first use
Reg 199 uninteresting
Reg 169: local to bb 7 def dominates all uses has unique first use
Reg 173: local to bb 11 def dominates all uses has unique first use
Reg 175: local to bb 11 def dominates all uses has unique first use
Reg 195: def dominates all uses has unique first use
Reg 177 uninteresting
Reg 200: local to bb 11 def dominates all uses has unique first use
Reg 185: local to bb 11 def dominates all uses has unique first use
Reg 150: def dominates all uses has unique first use
Reg 189 uninteresting
Reg 150 not local to one basic block
Examining insn 77, def for 160
  all ok
Examining insn 78, def for 162
  all ok
Examining insn 89, def for 168
  all ok
Examining insn 102, def for 169
  all ok
Examining insn 150, def for 173
  all ok
Reg 174 not local to one basic block
Examining insn 151, def for 175
  all ok
Reg 178 not local to one basic block
Examining insn 170, def for 185
  all ok and transp
      Creating newreg=202 from oldreg=185
rescanning insn with uid = 170.
scanning new insn with uid = 258.
Reg 191 not local to one basic block
Reg 195 not local to one basic block
Reg 197 not local to one basic block
Found def insn 245 for 198 to be not moveable
Found def insn 247 for 200 to be not moveable
    New r202: setting preferred GENERAL_REGS, alternative NO_REGS
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 9 8 7 6 5 4 3
;;
;; Loop 2
;;  header 3, multiple latches: 7 9
;;  depth 2, outer 1
;;  nodes: 3 7 9 6 5 4
;; 2 succs { 11 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 3 8 }
;; 8 succs { 10 }
;; 9 succs { 3 10 }
;; 10 succs { 11 12 }
;; 11 succs { 3 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 19 (  1.3)
init_insns for 174: (insn_list:REG_DEP_TRUE 149 (nil))
init_insns for 178: (insn_list:REG_DEP_TRUE 153 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 228 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 195: (insn_list:REG_DEP_TRUE 80 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 159 (nil))

Pass 1 for finding pseudo/allocno costs

    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r199: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r198: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r197: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r195: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r192: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r192,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r192,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r191,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r191,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r178: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r177: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r176: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r175: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r174: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r173: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r172: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r169: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r168: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r164: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r163: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r162: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r160: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r159: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r152: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r152,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r152,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r192,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:45,4905 VFP_LO_REGS:45,4905 ALL_REGS:45,4905 MEM:30,3270
  a1(r189,l0) costs: GENERAL_REGS:0,0 MEM:20,20
  a2(r119,l0) costs: LO_REGS:0,0 HI_REGS:2,1970 CALLER_SAVE_REGS:2,1970 EVEN_REG:2,1970 GENERAL_REGS:2,1970 VFP_D0_D7_REGS:45,19665 VFP_LO_REGS:45,19665 ALL_REGS:45,19665 MEM:30,13110
  a3(r197,l0) costs: GENERAL_REGS:0,678 VFP_D0_D7_REGS:15,10185 VFP_LO_REGS:15,10185 ALL_REGS:15,5100 MEM:10,6790
  a4(r174,l0) costs: LO_REGS:15,5100 HI_REGS:15,5100 CALLER_SAVE_REGS:15,5100 EVEN_REG:15,5100 GENERAL_REGS:15,5100 VFP_LO_REGS:0,0 ALL_REGS:15,5100 MEM:10,3400
  a5(r146,l0) costs: GENERAL_REGS:0,450 VFP_D0_D7_REGS:15,1365 VFP_LO_REGS:15,1365 ALL_REGS:15,1590 MEM:10,1135
  a6(r178,l0) costs: LO_REGS:15,240 HI_REGS:15,240 CALLER_SAVE_REGS:15,240 EVEN_REG:15,240 GENERAL_REGS:15,240 VFP_LO_REGS:0,0 ALL_REGS:15,240 MEM:10,160
  a7(r191,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,240 VFP_LO_REGS:15,240 ALL_REGS:15,240 MEM:10,160
  a8(r152,l0) costs: LO_REGS:0,0 HI_REGS:2,2 CALLER_SAVE_REGS:2,2 EVEN_REG:2,2 GENERAL_REGS:2,2 VFP_D0_D7_REGS:15,690 VFP_LO_REGS:15,690 ALL_REGS:15,690 MEM:10,460
  a9(r119,l1) costs: LO_REGS:0,0 HI_REGS:0,1968 CALLER_SAVE_REGS:0,1968 EVEN_REG:0,1968 GENERAL_REGS:0,1968 VFP_D0_D7_REGS:0,19620 VFP_LO_REGS:0,19620 ALL_REGS:0,19620 MEM:0,13080
  a10(r146,l1) costs: GENERAL_REGS:450,450 VFP_D0_D7_REGS:1350,1350 VFP_LO_REGS:1350,1350 ALL_REGS:1575,1575 MEM:1125,1125
  a11(r152,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:675,675 MEM:450,450
  a12(r174,l1) costs: LO_REGS:225,5085 HI_REGS:225,5085 CALLER_SAVE_REGS:225,5085 EVEN_REG:225,5085 GENERAL_REGS:225,5085 VFP_LO_REGS:0,0 ALL_REGS:225,5085 MEM:150,3390
  a13(r178,l1) costs: LO_REGS:225,225 HI_REGS:225,225 CALLER_SAVE_REGS:225,225 EVEN_REG:225,225 GENERAL_REGS:225,225 VFP_LO_REGS:0,0 ALL_REGS:225,225 MEM:150,150
  a14(r191,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:225,225 VFP_LO_REGS:225,225 ALL_REGS:225,225 MEM:150,150
  a15(r192,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,4860 VFP_LO_REGS:0,4860 ALL_REGS:0,4860 MEM:0,3240
  a16(r197,l1) costs: GENERAL_REGS:30,678 VFP_D0_D7_REGS:450,10170 VFP_LO_REGS:450,10170 ALL_REGS:225,5085 MEM:300,6780
  a17(r114,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:225,51855 VFP_LO_REGS:225,51855 ALL_REGS:225,51855 MEM:150,34570
  a18(r185,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,450 VFP_LO_REGS:450,450 ALL_REGS:450,450 MEM:300,300
  a19(r202,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:450,450 VFP_LO_REGS:450,450 ALL_REGS:450,450 MEM:300,300
  a20(r150,l1) costs: GENERAL_REGS:0,648 VFP_D0_D7_REGS:225,9945 VFP_LO_REGS:225,9945 ALL_REGS:225,5085 MEM:150,6630
  a21(r200,l1) costs: GENERAL_REGS:30,30 VFP_D0_D7_REGS:675,675 VFP_LO_REGS:675,675 ALL_REGS:450,450 MEM:450,450
  a22(r177,l1) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_LO_REGS:225,225 ALL_REGS:675,675 MEM:525,525
  a23(r176,l1) costs: LO_REGS:450,450 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_LO_REGS:0,0 ALL_REGS:450,450 MEM:300,300
  a24(r175,l1) costs: LO_REGS:450,450 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_LO_REGS:0,0 ALL_REGS:450,450 MEM:300,300
  a25(r195,l1) costs: LO_REGS:225,5085 HI_REGS:225,5085 CALLER_SAVE_REGS:225,5085 EVEN_REG:225,5085 GENERAL_REGS:225,5085 VFP_LO_REGS:0,0 ALL_REGS:225,5085 MEM:150,3390
  a26(r173,l1) costs: LO_REGS:450,450 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_LO_REGS:0,0 ALL_REGS:450,450 MEM:300,300
  a27(r151,l1) costs: GENERAL_REGS:0,9720 VFP_D0_D7_REGS:225,49320 VFP_LO_REGS:225,49320 ALL_REGS:225,54180 MEM:150,37740
  a28(r172,l1) costs: LO_REGS:675,675 HI_REGS:675,675 CALLER_SAVE_REGS:675,675 EVEN_REG:675,675 GENERAL_REGS:675,675 VFP_LO_REGS:225,225 ALL_REGS:675,675 MEM:525,525
  a29(r116,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:225,51855 VFP_LO_REGS:225,51855 ALL_REGS:225,51855 MEM:150,34570
  a30(r114,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:51630,51630 VFP_LO_REGS:51630,51630 ALL_REGS:51630,51630 MEM:34420,34420
  a31(r116,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:51630,51630 VFP_LO_REGS:51630,51630 ALL_REGS:51630,51630 MEM:34420,34420
  a32(r119,l2) costs: LO_REGS:0,0 HI_REGS:1968,1968 CALLER_SAVE_REGS:1968,1968 EVEN_REG:1968,1968 GENERAL_REGS:1968,1968 VFP_D0_D7_REGS:19620,19620 VFP_LO_REGS:19620,19620 ALL_REGS:19620,19620 MEM:13080,13080
  a33(r146,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a34(r150,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:9720,9720 VFP_LO_REGS:9720,9720 ALL_REGS:4860,4860 MEM:6480,6480
  a35(r151,l2) costs: GENERAL_REGS:9720,9720 VFP_D0_D7_REGS:49095,49095 VFP_LO_REGS:49095,49095 ALL_REGS:53955,53955 MEM:37590,37590
  a36(r152,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r174,l2) costs: LO_REGS:4860,4860 HI_REGS:4860,4860 CALLER_SAVE_REGS:4860,4860 EVEN_REG:4860,4860 GENERAL_REGS:4860,4860 VFP_LO_REGS:0,0 ALL_REGS:4860,4860 MEM:3240,3240
  a38(r178,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r191,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a40(r192,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:4860,4860 VFP_LO_REGS:4860,4860 ALL_REGS:4860,4860 MEM:3240,3240
  a41(r195,l2) costs: LO_REGS:4860,4860 HI_REGS:4860,4860 CALLER_SAVE_REGS:4860,4860 EVEN_REG:4860,4860 GENERAL_REGS:4860,4860 VFP_LO_REGS:0,0 ALL_REGS:4860,4860 MEM:3240,3240
  a42(r197,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:9720,9720 VFP_LO_REGS:9720,9720 ALL_REGS:4860,4860 MEM:6480,6480
  a43(r169,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:14580,14580 VFP_LO_REGS:14580,14580 ALL_REGS:9720,9720 MEM:9720,9720
  a44(r168,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:14580,14580 VFP_LO_REGS:14580,14580 ALL_REGS:9720,9720 MEM:9720,9720
  a45(r199,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:14580,14580 VFP_LO_REGS:14580,14580 ALL_REGS:9720,9720 MEM:9720,9720
  a46(r141,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:39240,39240 VFP_LO_REGS:39240,39240 ALL_REGS:34380,34380 MEM:26160,26160
  a47(r142,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:39240,39240 VFP_LO_REGS:39240,39240 ALL_REGS:34380,34380 MEM:26160,26160
  a48(r198,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:14580,14580 VFP_LO_REGS:14580,14580 ALL_REGS:9720,9720 MEM:9720,9720
  a49(r143,l2) costs: GENERAL_REGS:648,648 VFP_D0_D7_REGS:39240,39240 VFP_LO_REGS:39240,39240 ALL_REGS:34380,34380 MEM:26160,26160
  a50(r164,l2) costs: LO_REGS:14580,14580 HI_REGS:14580,14580 CALLER_SAVE_REGS:14580,14580 EVEN_REG:14580,14580 GENERAL_REGS:14580,14580 VFP_LO_REGS:4860,4860 ALL_REGS:14580,14580 MEM:11340,11340
  a51(r163,l2) costs: LO_REGS:9720,9720 HI_REGS:9720,9720 CALLER_SAVE_REGS:9720,9720 EVEN_REG:9720,9720 GENERAL_REGS:9720,9720 VFP_LO_REGS:0,0 ALL_REGS:9720,9720 MEM:6480,6480
  a52(r162,l2) costs: LO_REGS:9720,9720 HI_REGS:9720,9720 CALLER_SAVE_REGS:9720,9720 EVEN_REG:9720,9720 GENERAL_REGS:9720,9720 VFP_LO_REGS:0,0 ALL_REGS:9720,9720 MEM:6480,6480
  a53(r160,l2) costs: LO_REGS:9720,9720 HI_REGS:9720,9720 CALLER_SAVE_REGS:9720,9720 EVEN_REG:9720,9720 GENERAL_REGS:9720,9720 VFP_LO_REGS:0,0 ALL_REGS:9720,9720 MEM:6480,6480
  a54(r159,l2) costs: LO_REGS:14580,14580 HI_REGS:14580,14580 CALLER_SAVE_REGS:14580,14580 EVEN_REG:14580,14580 GENERAL_REGS:14580,14580 VFP_LO_REGS:4860,4860 ALL_REGS:14580,14580 MEM:11340,11340
  a55(r158,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:29520,29520 VFP_LO_REGS:29520,29520 ALL_REGS:29520,29520 MEM:19680,19680
  a56(r157,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:29520,29520 VFP_LO_REGS:29520,29520 ALL_REGS:29520,29520 MEM:19680,19680

   Insn 188(l0): point = 1
   Insn 186(l0): point = 3
   Insn 182(l0): point = 6
   Insn 248(l0): point = 9
   Insn 159(l0): point = 11
   Insn 149(l0): point = 13
   Insn 5(l0): point = 15
   Insn 153(l0): point = 17
   Insn 228(l0): point = 19
   Insn 20(l0): point = 21
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 255(l1): point = 28
   Insn 174(l1): point = 30
   Insn 258(l1): point = 32
   Insn 166(l1): point = 34
   Insn 170(l1): point = 36
   Insn 247(l1): point = 38
   Insn 165(l1): point = 40
   Insn 161(l1): point = 42
   Insn 238(l1): point = 44
   Insn 157(l1): point = 46
   Insn 156(l1): point = 48
   Insn 154(l1): point = 50
   Insn 152(l1): point = 52
   Insn 80(l1): point = 54
   Insn 151(l1): point = 56
   Insn 4(l1): point = 58
   Insn 150(l1): point = 60
   Insn 3(l1): point = 62
   Insn 148(l1): point = 64
   Insn 142(l1): point = 67
   Insn 141(l1): point = 69
   Insn 140(l1): point = 71
   Insn 137(l1): point = 73
   Insn 253(l1): point = 76
   Insn 31(l2): point = 79
   Insn 120(l2): point = 82
   Insn 119(l2): point = 84
   Insn 111(l2): point = 86
   Insn 109(l2): point = 88
   Insn 107(l2): point = 90
   Insn 106(l2): point = 92
   Insn 104(l2): point = 94
   Insn 103(l2): point = 96
   Insn 102(l2): point = 98
   Insn 246(l2): point = 100
   Insn 100(l2): point = 102
   Insn 99(l2): point = 104
   Insn 98(l2): point = 106
   Insn 89(l2): point = 108
   Insn 97(l2): point = 110
   Insn 245(l2): point = 112
   Insn 88(l2): point = 114
   Insn 237(l2): point = 116
   Insn 84(l2): point = 118
   Insn 83(l2): point = 120
   Insn 81(l2): point = 122
   Insn 79(l2): point = 124
   Insn 117(l2): point = 126
   Insn 78(l2): point = 128
   Insn 116(l2): point = 130
   Insn 77(l2): point = 132
   Insn 113(l2): point = 134
   Insn 75(l2): point = 136
   Insn 133(l2): point = 139
   Insn 132(l2): point = 141
   Insn 131(l2): point = 143
   Insn 130(l2): point = 145
   Insn 127(l2): point = 147
   Insn 68(l2): point = 150
   Insn 67(l2): point = 152
   Insn 64(l2): point = 154
   Insn 63(l2): point = 156
   Insn 55(l2): point = 159
   Insn 52(l2): point = 161
   Insn 49(l2): point = 163
   Insn 250(l2): point = 166
   Insn 41(l2): point = 168
   Insn 38(l2): point = 170
   Insn 35(l2): point = 172
 a0(r192): [2..25]
 a1(r189): [2..3]
 a2(r119): [4..21]
 a3(r197 [0]): [9..11]
 a3(r197 [1]): [9..11]
 a4(r174): [9..13]
 a5(r146): [9..15]
 a6(r178): [9..17]
 a7(r191): [9..19]
 a8(r152): [9..23]
 a9(r119): [28..78]
 a10(r146): [28..78]
 a11(r152): [28..78]
 a12(r174): [28..78]
 a13(r178): [28..78]
 a14(r191): [28..78]
 a15(r192): [28..78]
 a16(r197 [0]): [28..78]
 a16(r197 [1]): [28..78]
 a17(r114): [28..30]
 a18(r185): [31..32]
 a19(r202): [33..36]
 a20(r150): [28..34]
 a21(r200): [35..38]
 a22(r177): [49..50]
 a23(r176): [51..52]
 a24(r175): [53..56]
 a25(r195): [28..54]
 a26(r173): [57..60]
 a27(r151): [28..58]
 a28(r172): [61..64]
 a29(r116): [28..62]
 a30(r114): [79..174]
 a31(r116): [79..174]
 a32(r119): [139..174] [79..86]
 a33(r146): [79..174]
 a34(r150): [79..174]
 a35(r151): [79..174]
 a36(r152): [79..174]
 a37(r174): [79..174]
 a38(r178): [79..174]
 a39(r191): [79..174]
 a40(r192): [79..174]
 a41(r195): [79..174]
 a42(r197 [0]): [79..174]
 a42(r197 [1]): [79..174]
 a43(r169): [93..98]
 a44(r168 [0]): [97..108]
 a44(r168 [1]): [97..108]
 a45(r199): [99..100]
 a46(r141): [166..172] [150..163] [105..138]
 a47(r142): [166..170] [150..161] [107..138]
 a48(r198 [0]): [109..112]
 a48(r198 [1]): [109..112]
 a49(r143): [166..168] [150..159] [111..138]
 a50(r164): [121..122]
 a51(r163): [123..124]
 a52(r162): [125..128]
 a53(r160): [129..132]
 a54(r159): [133..136]
 a55(r158): [153..154]
 a56(r157): [155..156]
Compressing live ranges: from 175 to 48 - 27%
Ranges after the compression:
 a0(r192): [0..3]
 a1(r189): [0..1]
 a2(r119): [2..3]
 a3(r197 [0]): [2..3]
 a3(r197 [1]): [2..3]
 a4(r174): [2..3]
 a5(r146): [2..3]
 a6(r178): [2..3]
 a7(r191): [2..3]
 a8(r152): [2..3]
 a9(r119): [4..21]
 a10(r146): [4..21]
 a11(r152): [4..21]
 a12(r174): [4..21]
 a13(r178): [4..21]
 a14(r191): [4..21]
 a15(r192): [4..21]
 a16(r197 [0]): [4..21]
 a16(r197 [1]): [4..21]
 a17(r114): [4..5]
 a18(r185): [6..7]
 a19(r202): [8..11]
 a20(r150): [4..9]
 a21(r200): [10..11]
 a22(r177): [12..13]
 a23(r176): [14..15]
 a24(r175): [16..17]
 a25(r195): [4..17]
 a26(r173): [18..19]
 a27(r151): [4..19]
 a28(r172): [20..21]
 a29(r116): [4..21]
 a30(r114): [22..47]
 a31(r116): [22..47]
 a32(r119): [42..47] [22..23]
 a33(r146): [22..47]
 a34(r150): [22..47]
 a35(r151): [22..47]
 a36(r152): [22..47]
 a37(r174): [22..47]
 a38(r178): [22..47]
 a39(r191): [22..47]
 a40(r192): [22..47]
 a41(r195): [22..47]
 a42(r197 [0]): [22..47]
 a42(r197 [1]): [22..47]
 a43(r169): [24..25]
 a44(r168 [0]): [24..29]
 a44(r168 [1]): [24..29]
 a45(r199): [26..27]
 a46(r141): [28..47]
 a47(r142): [28..47]
 a48(r198 [0]): [30..31]
 a48(r198 [1]): [30..31]
 a49(r143): [30..47]
 a50(r164): [32..33]
 a51(r163): [34..35]
 a52(r162): [36..37]
 a53(r160): [38..39]
 a54(r159): [40..41]
 a55(r158): [42..43]
 a56(r157): [44..45]
    Creating cap  a57(r114,l0: a17(r114,l1))
    Creating cap  a58(r185,l0: a18(r185,l1))
    Creating cap  a59(r202,l0: a19(r202,l1))
    Creating cap  a60(r150,l0: a20(r150,l1))
    Creating cap  a61(r200,l0: a21(r200,l1))
    Creating cap  a62(r177,l0: a22(r177,l1))
    Creating cap  a63(r176,l0: a23(r176,l1))
    Creating cap  a64(r175,l0: a24(r175,l1))
    Creating cap  a65(r195,l0: a25(r195,l1))
    Creating cap  a66(r173,l0: a26(r173,l1))
    Creating cap  a67(r151,l0: a27(r151,l1))
    Creating cap  a68(r172,l0: a28(r172,l1))
    Creating cap  a69(r116,l0: a29(r116,l1))
    Creating cap  a70(r169,l1: a43(r169,l2))
    Creating cap  a71(r168,l1: a44(r168,l2))
    Creating cap  a72(r199,l1: a45(r199,l2))
    Creating cap  a73(r141,l1: a46(r141,l2))
    Creating cap  a74(r142,l1: a47(r142,l2))
    Creating cap  a75(r198,l1: a48(r198,l2))
    Creating cap  a76(r143,l1: a49(r143,l2))
    Creating cap  a77(r164,l1: a50(r164,l2))
    Creating cap  a78(r163,l1: a51(r163,l2))
    Creating cap  a79(r162,l1: a52(r162,l2))
    Creating cap  a80(r160,l1: a53(r160,l2))
    Creating cap  a81(r159,l1: a54(r159,l2))
    Creating cap  a82(r158,l1: a55(r158,l2))
    Creating cap  a83(r157,l1: a56(r157,l2))
    Creating cap  a84(r169,l0: a70(r169,l1: a43(r169,l2)))
    Creating cap  a85(r168,l0: a71(r168,l1: a44(r168,l2)))
    Creating cap  a86(r199,l0: a72(r199,l1: a45(r199,l2)))
    Creating cap  a87(r141,l0: a73(r141,l1: a46(r141,l2)))
    Creating cap  a88(r142,l0: a74(r142,l1: a47(r142,l2)))
    Creating cap  a89(r198,l0: a75(r198,l1: a48(r198,l2)))
    Creating cap  a90(r143,l0: a76(r143,l1: a49(r143,l2)))
    Creating cap  a91(r164,l0: a77(r164,l1: a50(r164,l2)))
    Creating cap  a92(r163,l0: a78(r163,l1: a51(r163,l2)))
    Creating cap  a93(r162,l0: a79(r162,l1: a52(r162,l2)))
    Creating cap  a94(r160,l0: a80(r160,l1: a53(r160,l2)))
    Creating cap  a95(r159,l0: a81(r159,l1: a54(r159,l2)))
    Creating cap  a96(r158,l0: a82(r158,l1: a55(r158,l2)))
    Creating cap  a97(r157,l0: a83(r157,l1: a56(r157,l2)))
+++Allocating 1576 bytes for conflict table (uncompressed size 1712)
;; a0(r192,l0) conflicts: a1(r189,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a1(r189,l0) conflicts: a0(r192,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r119,l0) conflicts: a0(r192,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a87(r141,l0) a88(r142,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a3(r197,l0) conflicts:
;;   subobject 0: a0(r192,l0) a2(r119,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a62(r177,l0) a63(r176,l0) a64(r175,l0) a66(r173,l0) a68(r172,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a0(r192,l0) a2(r119,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a62(r177,l0) a63(r176,l0) a64(r175,l0) a66(r173,l0) a68(r172,l0) a84(r169,l0) a85(r168,w0,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a90(r143,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a4(r174,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0) a61(r200,l0) a62(r177,l0) a63(r176,l0) a64(r175,l0) a66(r173,l0) a68(r172,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a89(r198,w0,l0) a89(r198,w1,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r146,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a6(r178,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a60(r150,l0) a65(r195,l0) a61(r200,l0) a62(r177,l0) a63(r176,l0) a64(r175,l0) a66(r173,l0) a68(r172,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a89(r198,w0,l0) a89(r198,w1,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r191,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a8(r152,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a9(r119,l1) conflicts: a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a73(r141,l1) a74(r142,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a10(r146,l1) conflicts: a9(r119,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a11(r152,l1) conflicts: a9(r119,l1) a10(r146,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a12(r174,l1) conflicts: a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1) a21(r200,l1) a22(r177,l1) a23(r176,l1) a24(r175,l1) a26(r173,l1) a28(r172,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a75(r198,w0,l1) a75(r198,w1,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r178,l1) conflicts: a12(r174,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1) a21(r200,l1) a22(r177,l1) a23(r176,l1) a24(r175,l1) a26(r173,l1) a28(r172,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a75(r198,w0,l1) a75(r198,w1,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r191,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a15(r192,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a16(r197,l1) conflicts:
;;   subobject 0: a9(r119,l1) a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a22(r177,l1) a23(r176,l1) a24(r175,l1) a26(r173,l1) a28(r172,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a9(r119,l1) a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a22(r177,l1) a23(r176,l1) a24(r175,l1) a26(r173,l1) a28(r172,l1) a70(r169,l1) a71(r168,w0,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a76(r143,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a17(r114,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a18(r185,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r202,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a21(r200,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r150,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a21(r200,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a19(r202,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r177,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r176,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r175,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r195,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a21(r200,l1) a22(r177,l1) a23(r176,l1) a24(r175,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a75(r198,w0,l1) a75(r198,w1,l1) a77(r164,l1) a78(r163,l1) a79(r162,l1) a80(r160,l1) a81(r159,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r173,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r151,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a29(r116,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a28(r172,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r116,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a18(r185,l1) a19(r202,l1) a21(r200,l1) a70(r169,l1) a71(r168,w0,l1) a71(r168,w1,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a30(r114,l2) conflicts: a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a31(r116,l2) conflicts: a30(r114,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a32(r119,l2) conflicts: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a46(r141,l2) a47(r142,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r146,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a34(r150,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a35(r151,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a36(r152,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a37(r174,l2) conflicts: a34(r150,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a48(r198,w0,l2) a48(r198,w1,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r178,l2) conflicts: a34(r150,l2) a37(r174,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a48(r198,w0,l2) a48(r198,w1,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r191,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a40(r192,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a41(r195,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a48(r198,w0,l2) a48(r198,w1,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r197,l2) conflicts:
;;   subobject 0: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a43(r169,l2) a44(r168,w0,l2) a44(r168,w1,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a43(r169,l2) a44(r168,w0,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a49(r143,l2) a50(r164,l2) a51(r163,l2) a52(r162,l2) a53(r160,l2) a54(r159,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a43(r169,l2) conflicts: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a44(r168,w0,l2) a44(r168,w1,l2)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a44(r168,l2) conflicts:
;;   subobject 0: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a43(r169,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a43(r169,l2) a45(r199,l2) a46(r141,l2) a47(r142,l2)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a45(r199,l2) conflicts: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a44(r168,w0,l2) a44(r168,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r141,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a44(r168,w0,l2) a44(r168,w1,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a47(r142,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a44(r168,w0,l2) a44(r168,w1,l2) a46(r141,l2) a48(r198,w0,l2) a48(r198,w1,l2) a49(r143,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a48(r198,l2) conflicts:
;;   subobject 0: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2) a46(r141,l2) a47(r142,l2) a49(r143,l2)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a30(r114,l2) a31(r116,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a37(r174,l2) a38(r178,l2) a39(r191,l2) a40(r192,l2) a41(r195,l2) a42(r197,w0,l2) a46(r141,l2) a47(r142,l2) a49(r143,l2)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a49(r143,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a46(r141,l2) a47(r142,l2) a48(r198,w0,l2) a48(r198,w1,l2) a55(r158,l2) a56(r157,l2)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a50(r164,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r163,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r162,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r160,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r159,l2) conflicts: a34(r150,l2) a37(r174,l2) a38(r178,l2) a41(r195,l2) a42(r197,w0,l2) a42(r197,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r158,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a46(r141,l2) a47(r142,l2) a49(r143,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r157,l2) conflicts: a30(r114,l2) a31(r116,l2) a32(r119,l2) a33(r146,l2) a34(r150,l2) a35(r151,l2) a36(r152,l2) a39(r191,l2) a40(r192,l2) a42(r197,w0,l2) a42(r197,w1,l2) a46(r141,l2) a47(r142,l2) a49(r143,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r114,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a58(r185,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r202,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a61(r200,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r150,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a61(r200,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a59(r202,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r177,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r176,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r175,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r195,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a61(r200,l0) a62(r177,l0) a63(r176,l0) a64(r175,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a89(r198,w0,l0) a89(r198,w1,l0) a91(r164,l0) a92(r163,l0) a93(r162,l0) a94(r160,l0) a95(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r173,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r151,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a69(r116,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a68(r172,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r116,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a58(r185,l0) a59(r202,l0) a61(r200,l0) a84(r169,l0) a85(r168,w0,l0) a85(r168,w1,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a70(r169,l1) conflicts: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a71(r168,w0,l1) a71(r168,w1,l1)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a71(r168,l1) conflicts:
;;   subobject 0: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a70(r169,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a70(r169,l1) a72(r199,l1) a73(r141,l1) a74(r142,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a72(r199,l1) conflicts: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a71(r168,w0,l1) a71(r168,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r141,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a71(r168,w0,l1) a71(r168,w1,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a74(r142,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a71(r168,w0,l1) a71(r168,w1,l1) a73(r141,l1) a75(r198,w0,l1) a75(r198,w1,l1) a76(r143,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a75(r198,l1) conflicts:
;;   subobject 0: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a73(r141,l1) a74(r142,l1) a76(r143,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a10(r146,l1) a11(r152,l1) a12(r174,l1) a13(r178,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a17(r114,l1) a20(r150,l1) a25(r195,l1) a27(r151,l1) a29(r116,l1) a73(r141,l1) a74(r142,l1) a76(r143,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a76(r143,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a73(r141,l1) a74(r142,l1) a75(r198,w0,l1) a75(r198,w1,l1) a82(r158,l1) a83(r157,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a77(r164,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r163,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r162,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r160,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r159,l1) conflicts: a12(r174,l1) a13(r178,l1) a16(r197,w0,l1) a16(r197,w1,l1) a20(r150,l1) a25(r195,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r158,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a73(r141,l1) a74(r142,l1) a76(r143,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r157,l1) conflicts: a9(r119,l1) a10(r146,l1) a11(r152,l1) a14(r191,l1) a15(r192,l1) a16(r197,w0,l1) a16(r197,w1,l1) a17(r114,l1) a20(r150,l1) a27(r151,l1) a29(r116,l1) a73(r141,l1) a74(r142,l1) a76(r143,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r169,l0) conflicts: a0(r192,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a85(r168,w0,l0) a85(r168,w1,l0)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a85(r168,l0) conflicts:
;;   subobject 0: a0(r192,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a84(r169,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a0(r192,l0) a3(r197,w0,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a84(r169,l0) a86(r199,l0) a87(r141,l0) a88(r142,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a86(r199,l0) conflicts: a0(r192,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a85(r168,w0,l0) a85(r168,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r141,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a85(r168,w0,l0) a85(r168,w1,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a88(r142,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a85(r168,w0,l0) a85(r168,w1,l0) a87(r141,l0) a89(r198,w0,l0) a89(r198,w1,l0) a90(r143,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a89(r198,l0) conflicts:
;;   subobject 0: a0(r192,l0) a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a87(r141,l0) a88(r142,l0) a90(r143,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a0(r192,l0) a3(r197,w0,l0) a4(r174,l0) a5(r146,l0) a6(r178,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a65(r195,l0) a67(r151,l0) a69(r116,l0) a87(r141,l0) a88(r142,l0) a90(r143,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a90(r143,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a87(r141,l0) a88(r142,l0) a89(r198,w0,l0) a89(r198,w1,l0) a96(r158,l0) a97(r157,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a91(r164,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r163,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r162,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r160,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r159,l0) conflicts: a3(r197,w0,l0) a3(r197,w1,l0) a4(r174,l0) a6(r178,l0) a60(r150,l0) a65(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r158,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a87(r141,l0) a88(r142,l0) a90(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r157,l0) conflicts: a0(r192,l0) a2(r119,l0) a3(r197,w0,l0) a3(r197,w1,l0) a5(r146,l0) a7(r191,l0) a8(r152,l0) a57(r114,l0) a60(r150,l0) a67(r151,l0) a69(r116,l0) a87(r141,l0) a88(r142,l0) a90(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a1(r189)<->a2(r119)@1:shuffle
  cp1:a26(r173)<->a28(r172)@1:shuffle
  cp2:a24(r175)<->a26(r173)@1:shuffle
  cp3:a23(r176)<->a24(r175)@1:shuffle
  cp4:a22(r177)<->a23(r176)@1:shuffle
  cp5:a20(r150)<->a21(r200)@15:move
  cp6:a18(r185)<->a19(r202)@15:move
  cp7:a17(r114)<->a18(r185)@1:shuffle
  cp8:a53(r160)<->a54(r159)@40:shuffle
  cp9:a52(r162)<->a53(r160)@40:shuffle
  cp10:a51(r163)<->a52(r162)@40:shuffle
  cp11:a50(r164)<->a51(r163)@40:shuffle
  cp12:a44(r168)<->a48(r198)@324:move
  cp13:a43(r169)<->a45(r199)@40:shuffle
  cp14:a55(r158)<->a56(r157)@123:shuffle
  cp15:a66(r173)<->a68(r172)@1:shuffle
  cp16:a64(r175)<->a66(r173)@1:shuffle
  cp17:a63(r176)<->a64(r175)@1:shuffle
  cp18:a62(r177)<->a63(r176)@1:shuffle
  cp19:a60(r150)<->a61(r200)@15:move
  cp20:a58(r185)<->a59(r202)@15:move
  cp21:a57(r114)<->a58(r185)@1:shuffle
  cp22:a80(r160)<->a81(r159)@40:shuffle
  cp23:a79(r162)<->a80(r160)@40:shuffle
  cp24:a78(r163)<->a79(r162)@40:shuffle
  cp25:a77(r164)<->a78(r163)@40:shuffle
  cp26:a71(r168)<->a75(r198)@324:move
  cp27:a70(r169)<->a72(r199)@40:shuffle
  cp28:a82(r158)<->a83(r157)@123:shuffle
  cp29:a94(r160)<->a95(r159)@40:shuffle
  cp30:a93(r162)<->a94(r160)@40:shuffle
  cp31:a92(r163)<->a93(r162)@40:shuffle
  cp32:a91(r164)<->a92(r163)@40:shuffle
  cp33:a85(r168)<->a89(r198)@324:move
  cp34:a84(r169)<->a86(r199)@40:shuffle
  cp35:a96(r158)<->a97(r157)@123:shuffle
  pref0:a16(r197)<-hr2@339
  pref1:a3(r197)<-hr2@339
  pref2:a21(r200)<-hr0@30
  pref3:a42(r197)<-hr2@324
  pref4:a48(r198)<-hr0@648
  pref5:a49(r143)<-hr2@648
  pref6:a47(r142)<-hr1@648
  pref7:a46(r141)<-hr0@648
  pref8:a45(r199)<-hr0@648
  pref9:a44(r168)<-hr0@648
  pref10:a43(r169)<-hr2@648
  pref11:a34(r150)<-hr1@324
  pref12:a20(r150)<-hr1@324
  pref13:a61(r200)<-hr0@15
  pref14:a75(r198)<-hr0@324
  pref15:a89(r198)<-hr0@324
  pref16:a76(r143)<-hr2@324
  pref17:a90(r143)<-hr2@324
  pref18:a74(r142)<-hr1@324
  pref19:a88(r142)<-hr1@324
  pref20:a73(r141)<-hr0@324
  pref21:a87(r141)<-hr0@324
  pref22:a72(r199)<-hr0@324
  pref23:a86(r199)<-hr0@324
  pref24:a71(r168)<-hr0@324
  pref25:a85(r168)<-hr0@324
  pref26:a70(r169)<-hr2@324
  pref27:a84(r169)<-hr2@324
  regions=3, blocks=15, points=48
    allocnos=98 (big 9), copies=36, conflicts=0, ranges=63

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 14 13 12 2(->11:l1)
    all: 0r192 1r189 2r119 3r197 4r174 5r146 6r178 7r191 8r152 57r114 58r185 59r202 60r150 61r200 62r177 63r176 64r175 65r195 66r173 67r151 68r172 69r116 84r169 85r168 86r199 87r141 88r142 89r198 90r143 91r164 92r163 93r162 94r160 95r159 96r158 97r157
    modified regnos: 114 116 119 141 142 143 146 150 151 152 157 158 159 160 162 163 164 168 169 172 173 174 175 176 177 178 185 189 191 192 195 197 198 199 200 202
    border:
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=4
 Removing pref1:hr2@339
 Removing pref25:hr0@324
 Removing pref21:hr0@324
 Removing pref19:hr1@324
 Removing pref17:hr2@324
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 16-47)@67800
          2:( 32-47)@13900
        3:( 0-12 14)@119284
          4:( 0-1 3-12)@37584
            5:( 3-11)@49896
              6:( 4-11)@402502
                7:( 4-10)@12224
      Allocno a0r192 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a1r189 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a2r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a3r197 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a4r174 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a5r146 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a6r178 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a7r191 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a8r152 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a57r114 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a58r185 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a59r202 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a60r150 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a61r200 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a62r177 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a63r176 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a64r175 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a65r195 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a66r173 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a67r151 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a68r172 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a69r116 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a84r169 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a85r168 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a86r199 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a87r141 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a88r142 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a89r198 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a90r143 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a91r164 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a92r163 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a93r162 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a94r160 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a95r159 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a96r158 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a97r157 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread by copy 35:a96r158-a97r157 (freq=123):
        Result (freq=3936): a96r158(1968) a97r157(1968)
      Forming thread by copy 29:a94r160-a95r159 (freq=40):
        Result (freq=1296): a94r160(648) a95r159(648)
      Forming thread by copy 30:a93r162-a94r160 (freq=40):
        Result (freq=1944): a93r162(648) a94r160(648) a95r159(648)
      Forming thread by copy 31:a92r163-a93r162 (freq=40):
        Result (freq=2592): a92r163(648) a93r162(648) a94r160(648) a95r159(648)
      Forming thread by copy 32:a91r164-a92r163 (freq=40):
        Result (freq=3240): a91r164(648) a92r163(648) a93r162(648) a94r160(648) a95r159(648)
      Forming thread by copy 34:a84r169-a86r199 (freq=40):
        Result (freq=1296): a84r169(648) a86r199(648)
      Forming thread by copy 20:a58r185-a59r202 (freq=15):
        Result (freq=60): a58r185(30) a59r202(30)
      Forming thread by copy 0:a1r189-a2r119 (freq=1):
        Result (freq=1313): a1r189(2) a2r119(1311)
      Forming thread by copy 15:a66r173-a68r172 (freq=1):
        Result (freq=60): a66r173(30) a68r172(30)
      Forming thread by copy 16:a64r175-a66r173 (freq=1):
        Result (freq=90): a64r175(30) a66r173(30) a68r172(30)
      Forming thread by copy 17:a63r176-a64r175 (freq=1):
        Result (freq=120): a63r176(30) a64r175(30) a66r173(30) a68r172(30)
      Forming thread by copy 18:a62r177-a63r176 (freq=1):
        Result (freq=150): a62r177(30) a63r176(30) a64r175(30) a66r173(30) a68r172(30)
      Pushing a6(r178,l0)(cost 0)
      Pushing a61(r200,l0: a21(r200,l1))(cost 0)
      Pushing a58(r185,l0: a18(r185,l1))(cost 0)
      Pushing a59(r202,l0: a19(r202,l1))(cost 0)
      Pushing a68(r172,l0: a28(r172,l1))(cost 0)
      Pushing a66(r173,l0: a26(r173,l1))(cost 0)
      Pushing a64(r175,l0: a24(r175,l1))(cost 0)
      Pushing a63(r176,l0: a23(r176,l1))(cost 0)
      Pushing a62(r177,l0: a22(r177,l1))(cost 0)
      Pushing a65(r195,l0: a25(r195,l1))(cost 0)
      Pushing a4(r174,l0)(cost 0)
      Pushing a89(r198,l0: a75(r198,l1: a48(r198,l2)))(cost 0)
      Pushing a86(r199,l0: a72(r199,l1: a45(r199,l2)))(cost 0)
      Pushing a84(r169,l0: a70(r169,l1: a43(r169,l2)))(cost 0)
      Pushing a1(r189,l0)(cost 0)
      Pushing a95(r159,l0: a81(r159,l1: a54(r159,l2)))(cost 0)
      Pushing a94(r160,l0: a80(r160,l1: a53(r160,l2)))(cost 0)
      Pushing a93(r162,l0: a79(r162,l1: a52(r162,l2)))(cost 0)
      Pushing a92(r163,l0: a78(r163,l1: a51(r163,l2)))(cost 0)
      Pushing a91(r164,l0: a77(r164,l1: a50(r164,l2)))(cost 0)
      Pushing a97(r157,l0: a83(r157,l1: a56(r157,l2)))(cost 0)
      Pushing a96(r158,l0: a82(r158,l1: a55(r158,l2)))(cost 0)
      Pushing a7(r191,l0)(potential spill: pri=6, cost=160)
      Pushing a8(r152,l0)(potential spill: pri=17, cost=460)
      Pushing a5(r146,l0)(potential spill: pri=26, cost=685)
      Pushing a3(r197,l0)(potential spill: pri=60, cost=6112)
      Pushing a0(r192,l0)(potential spill: pri=125, cost=3270)
        Making a2(r119,l0) colorable
        Making a90(r143,l0: a76(r143,l1: a49(r143,l2))) colorable
      Pushing a2(r119,l0)(cost 13110)
      Pushing a90(r143,l0: a76(r143,l1: a49(r143,l2)))(cost 26808)
      Forming thread by copy 21:a57r114-a58r185 (freq=1):
        Result (freq=3517): a57r114(3457) a58r185(30) a59r202(30)
        Making a57(r114,l0: a17(r114,l1)) colorable
      Forming thread by copy 19:a60r150-a61r200 (freq=15):
        Result (freq=369): a60r150(339) a61r200(30)
        Making a60(r150,l0: a20(r150,l1)) colorable
        Making a67(r151,l0: a27(r151,l1)) colorable
        Making a69(r116,l0: a29(r116,l1)) colorable
        Making a87(r141,l0: a73(r141,l1: a46(r141,l2))) colorable
        Making a88(r142,l0: a74(r142,l1: a47(r142,l2))) colorable
      Pushing a60(r150,l0: a20(r150,l1))(cost 5982)
      Pushing a88(r142,l0: a74(r142,l1: a47(r142,l2)))(cost 26808)
      Pushing a87(r141,l0: a73(r141,l1: a46(r141,l2)))(cost 26808)
      Forming thread by copy 33:a85r168-a89r198 (freq=324):
        Result (freq=1296): a85r168(648) a89r198(648)
        Making a85(r168,l0: a71(r168,l1: a44(r168,l2))) colorable
      Pushing a85(r168,l0: a71(r168,l1: a44(r168,l2)))(cost 18792)
      Pushing a67(r151,l0: a27(r151,l1))(cost 28020)
      Pushing a69(r116,l0: a29(r116,l1))(cost 34570)
      Pushing a57(r114,l0: a17(r114,l1))(cost 34570)
      Popping a57(r114,l0: a17(r114,l1))  -- assign reg 4
      Popping a69(r116,l0: a29(r116,l1))  -- assign reg 5
      Popping a67(r151,l0: a27(r151,l1))  -- assign reg 6
      Popping a85(r168,l0: a71(r168,l1: a44(r168,l2)))  -- assign reg 8
      Popping a87(r141,l0: a73(r141,l1: a46(r141,l2)))  -- assign reg 7
      Popping a88(r142,l0: a74(r142,l1: a47(r142,l2)))  -- assign reg 10
      Popping a60(r150,l0: a20(r150,l1))  -- assign reg 11
      Popping a90(r143,l0: a76(r143,l1: a49(r143,l2)))  -- assign reg 9
      Popping a2(r119,l0)  -- assign reg 8
      Popping a0(r192,l0)  -- spill
      Popping a3(r197,l0)  -- spill
      Popping a5(r146,l0)  -- spill
      Popping a8(r152,l0)  -- spill
      Popping a7(r191,l0)  -- spill
      Popping a96(r158,l0: a82(r158,l1: a55(r158,l2)))  -- assign reg 3
      Popping a97(r157,l0: a83(r157,l1: a56(r157,l2)))  -- assign reg 3
      Popping a91(r164,l0: a77(r164,l1: a50(r164,l2)))  -- assign reg 31
      Popping a92(r163,l0: a78(r163,l1: a51(r163,l2)))  -- assign reg 31
      Popping a93(r162,l0: a79(r162,l1: a52(r162,l2)))  -- assign reg 31
      Popping a94(r160,l0: a80(r160,l1: a53(r160,l2)))  -- assign reg 31
      Popping a95(r159,l0: a81(r159,l1: a54(r159,l2)))  -- assign reg 31
      Popping a1(r189,l0)  -- assign reg 8
      Popping a84(r169,l0: a70(r169,l1: a43(r169,l2)))  -- assign reg 2
      Popping a86(r199,l0: a72(r199,l1: a45(r199,l2)))  -- assign reg 0
      Popping a89(r198,l0: a75(r198,l1: a48(r198,l2)))  -- assign reg 0
      Popping a4(r174,l0)  -- assign reg 32
      Popping a65(r195,l0: a25(r195,l1))  -- assign reg 33
      Popping a62(r177,l0: a22(r177,l1))  -- assign reg 31
      Popping a63(r176,l0: a23(r176,l1))  -- assign reg 31
      Popping a64(r175,l0: a24(r175,l1))  -- assign reg 31
      Popping a66(r173,l0: a26(r173,l1))  -- assign reg 31
      Popping a68(r172,l0: a28(r172,l1))  -- assign reg 31
      Popping a59(r202,l0: a19(r202,l1))  -- assign reg 4
      Popping a58(r185,l0: a18(r185,l1))  -- assign reg 4
      Popping a61(r200,l0: a21(r200,l1))  -- assign reg 0
      Popping a6(r178,l0)  -- assign reg 34

  Loop 1 (parent 0, header bb11, depth 1)
    bbs: 11(->3:l2) 10(->12:l0) 8
    all: 9r119 10r146 11r152 12r174 13r178 14r191 15r192 16r197 17r114 18r185 19r202 20r150 21r200 22r177 23r176 24r175 25r195 26r173 27r151 28r172 29r116 70r169 71r168 72r199 73r141 74r142 75r198 76r143 77r164 78r163 79r162 80r160 81r159 82r158 83r157
    modified regnos: 114 116 119 141 142 143 146 150 151 152 157 158 159 160 162 163 164 168 169 172 173 175 176 177 185 195 198 199 200 202
    border: 9r119 10r146 11r152 12r174 13r178 14r191 15r192 16r197
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=4
 Removing pref12:hr1@324
 Removing pref24:hr0@324
 Removing pref20:hr0@324
 Removing pref18:hr1@324
 Removing pref16:hr2@324
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@119244
          2:( 0-1 3-12)@37584
            3:( 3-11)@49896
              4:( 4-11)@395542
      Allocno a9r119 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a10r146 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a11r152 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a17r114 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a18r185 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a19r202 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a20r150 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a21r200 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a27r151 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a29r116 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a70r169 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a71r168 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a72r199 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a73r141 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a74r142 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a75r198 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a76r143 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a82r158 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a83r157 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread by copy 28:a82r158-a83r157 (freq=123):
        Result (freq=3936): a82r158(1968) a83r157(1968)
      Forming thread by copy 27:a70r169-a72r199 (freq=40):
        Result (freq=1296): a70r169(648) a72r199(648)
      Forming thread by copy 6:a18r185-a19r202 (freq=15):
        Result (freq=60): a18r185(30) a19r202(30)
      Pushing a21(r200,l1)(cost 0)
      Pushing a18(r185,l1)(cost 0)
      Pushing a19(r202,l1)(cost 0)
      Pushing a75(r198,l1: a48(r198,l2))(cost 0)
      Pushing a72(r199,l1: a45(r199,l2))(cost 0)
      Pushing a70(r169,l1: a43(r169,l2))(cost 0)
      Pushing a83(r157,l1: a56(r157,l2))(cost 0)
      Pushing a82(r158,l1: a55(r158,l2))(cost 0)
      Pushing a11(r152,l1)(potential spill: pri=15, cost=410)
      Pushing a10(r146,l1)(potential spill: pri=24, cost=635)
        Making a9(r119,l1) colorable
        Making a76(r143,l1: a49(r143,l2)) colorable
      Pushing a9(r119,l1)(cost 13116)
      Pushing a76(r143,l1: a49(r143,l2))(cost 26808)
      Forming thread by copy 7:a17r114-a18r185 (freq=1):
        Result (freq=3517): a17r114(3457) a18r185(30) a19r202(30)
        Making a17(r114,l1) colorable
      Forming thread by copy 5:a20r150-a21r200 (freq=15):
        Result (freq=369): a20r150(339) a21r200(30)
        Making a20(r150,l1) colorable
        Making a27(r151,l1) colorable
        Making a29(r116,l1) colorable
        Making a73(r141,l1: a46(r141,l2)) colorable
        Making a74(r142,l1: a47(r142,l2)) colorable
      Pushing a20(r150,l1)(cost 5982)
      Pushing a74(r142,l1: a47(r142,l2))(cost 26808)
      Pushing a73(r141,l1: a46(r141,l2))(cost 26808)
      Forming thread by copy 26:a71r168-a75r198 (freq=324):
        Result (freq=1296): a71r168(648) a75r198(648)
        Making a71(r168,l1: a44(r168,l2)) colorable
      Pushing a71(r168,l1: a44(r168,l2))(cost 18792)
      Pushing a27(r151,l1)(cost 28020)
      Pushing a29(r116,l1)(cost 34570)
      Pushing a17(r114,l1)(cost 34570)
      Popping a17(r114,l1)  -- assign reg 4
      Popping a29(r116,l1)  -- assign reg 5
      Popping a27(r151,l1)  -- assign reg 6
      Popping a71(r168,l1: a44(r168,l2))  -- assign reg 8
      Popping a73(r141,l1: a46(r141,l2))  -- assign reg 7
      Popping a74(r142,l1: a47(r142,l2))  -- assign reg 10
      Popping a20(r150,l1)  -- assign reg 11
      Popping a76(r143,l1: a49(r143,l2))  -- assign reg 9
      Popping a9(r119,l1)  -- assign reg 8
      Popping a10(r146,l1)  -- spill
      Popping a11(r152,l1)  -- spill
      Popping a82(r158,l1: a55(r158,l2))  -- assign reg 3
      Popping a83(r157,l1: a56(r157,l2))  -- assign reg 3
      Popping a70(r169,l1: a43(r169,l2))  -- assign reg 2
      Popping a72(r199,l1: a45(r199,l2))  -- assign reg 0
      Popping a75(r198,l1: a48(r198,l2))  -- assign reg 0
      Popping a19(r202,l1)  -- assign reg 4
      Popping a18(r185,l1)  -- assign reg 4
      Popping a21(r200,l1)  -- assign reg 0

  Loop 2 (parent 1, header bb3, depth 2)
    bbs: 9(->10:l1) 7(->8:l1) 6 5 4 3
    all: 30r114 31r116 32r119 33r146 34r150 35r151 36r152 37r174 38r178 39r191 40r192 41r195 42r197 43r169 44r168 45r199 46r141 47r142 48r198 49r143 50r164 51r163 52r162 53r160 54r159 55r158 56r157
    modified regnos: 114 116 119 141 142 143 151 157 158 159 160 162 163 164 168 169 198 199
    border: 30r114 31r116 32r119 33r146 34r150 35r151 36r152 37r174 38r178 39r191 40r192 41r195 42r197
    Pressure: GENERAL_REGS=19 VFP_LO_REGS=4
 Removing pref11:hr1@324
 Removing pref9:hr0@648
 Removing pref7:hr0@648
 Removing pref6:hr1@648
 Removing pref5:hr2@648
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14)@142464
          2:( 0-1 3-12)@37584
            3:( 3-11)@49896
              4:( 4-11)@360100
      Spill a33(r146,l2)
      Spill a36(r152,l2)
      Allocno a30r114 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a31r116 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a32r119 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a34r150 of ALL_REGS(46) has 21 avail. regs  4-11 35-47, ^node:  0-12 14 16-47 (confl regs =  0-3 12-15 48-106)
      Allocno a35r151 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a43r169 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a44r168 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a45r199 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a46r141 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a47r142 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a48r198 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a49r143 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a55r158 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a56r157 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread by copy 14:a55r158-a56r157 (freq=123):
        Result (freq=3936): a55r158(1968) a56r157(1968)
      Forming thread by copy 13:a43r169-a45r199 (freq=40):
        Result (freq=1296): a43r169(648) a45r199(648)
      Pushing a34(r150,l2)(cost 0)
      Pushing a48(r198,l2)(cost 0)
      Pushing a45(r199,l2)(cost 0)
      Pushing a43(r169,l2)(cost 0)
      Pushing a32(r119,l2)(cost 0)
        Making a49(r143,l2) colorable
      Pushing a49(r143,l2)(cost 26808)
      Pushing a56(r157,l2)(cost 0)
        Making a30(r114,l2) colorable
        Making a31(r116,l2) colorable
        Making a35(r151,l2) colorable
        Making a46(r141,l2) colorable
        Making a47(r142,l2) colorable
      Pushing a47(r142,l2)(cost 26808)
      Pushing a46(r141,l2)(cost 26808)
      Forming thread by copy 12:a44r168-a48r198 (freq=324):
        Result (freq=1296): a44r168(648) a48r198(648)
        Making a44(r168,l2) colorable
      Pushing a44(r168,l2)(cost 18792)
      Pushing a35(r151,l2)(cost 47570)
      Pushing a31(r116,l2)(cost 54120)
      Pushing a30(r114,l2)(cost 54120)
      Pushing a55(r158,l2)(cost 0)
      Popping a55(r158,l2)  -- assign reg 3
      Popping a30(r114,l2)  -- assign reg 4
      Popping a31(r116,l2)  -- assign reg 5
      Popping a35(r151,l2)  -- assign reg 6
      Popping a44(r168,l2)  -- assign reg 8
      Popping a46(r141,l2)  -- assign reg 7
      Popping a47(r142,l2)  -- assign reg 10
      Popping a56(r157,l2)  -- assign reg 3
      Popping a49(r143,l2)  -- assign reg 9
      Popping a32(r119,l2)  -- assign reg 8
      Popping a43(r169,l2)  -- assign reg 2
      Popping a45(r199,l2)  -- assign reg 0
      Popping a48(r198,l2)  -- assign reg 0
      Popping a34(r150,l2)  -- assign reg 11
Assigning 2 to a32r119
Disposition:
   30:r114 l2     4   17:r114 l1     4   31:r116 l2     5   29:r116 l1     5
   32:r119 l2     2    9:r119 l1     8    2:r119 l0     8   46:r141 l2     7
   47:r142 l2    10   49:r143 l2     9   33:r146 l2   mem   10:r146 l1   mem
    5:r146 l0   mem   34:r150 l2    11   20:r150 l1    11   35:r151 l2     6
   27:r151 l1     6   36:r152 l2   mem   11:r152 l1   mem    8:r152 l0   mem
   56:r157 l2     3   55:r158 l2     3   54:r159 l2    31   53:r160 l2    31
   52:r162 l2    31   51:r163 l2    31   50:r164 l2    31   44:r168 l2     8
   43:r169 l2     2   28:r172 l1    31   26:r173 l1    31   37:r174 l2    32
   12:r174 l1    32    4:r174 l0    32   24:r175 l1    31   23:r176 l1    31
   22:r177 l1    31   38:r178 l2    34   13:r178 l1    34    6:r178 l0    34
   18:r185 l1     4    1:r189 l0     8   39:r191 l2   mem   14:r191 l1   mem
    7:r191 l0   mem   40:r192 l2   mem   15:r192 l1   mem    0:r192 l0   mem
   41:r195 l2    33   25:r195 l1    33   42:r197 l2   mem   16:r197 l1   mem
    3:r197 l0   mem   48:r198 l2     0   45:r199 l2     0   21:r200 l1     0
   19:r202 l1     4
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb11)
  8 vs parent 8:      Creating newreg=203 from oldreg=119
      Changing RTL for loop 2 (header bb3)
  4 vs parent 4:      Creating newreg=204 from oldreg=114
  5 vs parent 5:      Creating newreg=205 from oldreg=116
  2 vs parent 8:      Creating newreg=206 from oldreg=203
  11 vs parent 11:      Creating newreg=207 from oldreg=150
  6 vs parent 6:      Creating newreg=208 from oldreg=151
rescanning insn with uid = 127.
rescanning insn with uid = 128.
rescanning insn with uid = 130.
rescanning insn with uid = 131.
rescanning insn with uid = 132.
rescanning insn with uid = 191.
rescanning insn with uid = 75.
rescanning insn with uid = 113.
rescanning insn with uid = 116.
rescanning insn with uid = 117.
rescanning insn with uid = 107.
rescanning insn with uid = 111.
rescanning insn with uid = 114.
rescanning insn with uid = 119.
rescanning insn with uid = 49.
rescanning insn with uid = 52.
rescanning insn with uid = 55.
rescanning insn with uid = 35.
rescanning insn with uid = 38.
rescanning insn with uid = 41.
rescanning insn with uid = 26.
rescanning insn with uid = 28.
rescanning insn with uid = 31.
scanning new insn with uid = 260.
scanning new insn with uid = 267.
    Adding cp36:a2r119-a9r203
    Adding range [49..49] to allocno a2r119
    Adding range [50..50] to allocno a9r203
    Adding range [49..50] to live through  allocno a5r146
    Adding range [49..50] to live through  allocno a8r152
    Adding range [49..50] to live through  allocno a4r174
    Adding range [49..50] to live through  allocno a6r178
    Adding range [49..50] to live through  allocno a7r191
    Adding range [49..50] to live through  allocno a0r192
    Adding range [49..50] to live through  allocno a3r197
    Adding cp37:a9r203-a32r206
    Adding range [52..52] to allocno a32r206
    Adding range [53..53] to allocno a9r203
    Adding range [52..53] to live through  allocno a10r146
    Adding range [52..53] to live through  allocno a11r152
    Adding range [52..53] to live through  allocno a12r174
    Adding range [52..53] to live through  allocno a13r178
    Adding range [52..53] to live through  allocno a14r191
    Adding range [52..53] to live through  allocno a15r192
    Adding range [52..53] to live through  allocno a16r197
    Adding cp38:a9r203-a32r206
    Adding range [55..55] to allocno a32r206
    Adding range [56..56] to allocno a9r203
    Adding range [55..56] to live through  allocno a33r146
    Adding range [55..56] to live through  allocno a36r152
    Adding range [55..56] to live through  allocno a37r174
    Adding range [55..56] to live through  allocno a38r178
    Adding range [55..56] to live through  allocno a39r191
    Adding range [55..56] to live through  allocno a40r192
    Adding range [55..56] to live through  allocno a42r197
    Adding cp39:a17r114-a30r204
    Adding range [58..58] to allocno a17r114
    Adding cp40:a29r116-a31r205
    Adding range [58..60] to allocno a29r116
    Adding cp41:a9r203-a32r206
    Adding range [58..62] to allocno a9r203
    Adding cp42:a20r150-a34r207
    Adding range [58..64] to allocno a20r150
    Adding cp43:a27r151-a35r208
    Adding range [58..66] to allocno a27r151
    Adding range [59..67] to allocno a30r204
    Adding range [61..67] to allocno a31r205
    Adding range [63..67] to allocno a32r206
    Adding range [65..67] to allocno a34r207
    Adding range [67..67] to allocno a35r208
    Adding range [58..67] to live through  allocno a10r146
    Adding range [58..67] to live through  allocno a11r152
    Adding range [58..67] to live through  allocno a12r174
    Adding range [58..67] to live through  allocno a13r178
    Adding range [58..67] to live through  allocno a14r191
    Adding range [58..67] to live through  allocno a15r192
    Adding range [58..67] to live through  allocno a25r195
    Adding range [58..67] to live through  allocno a16r197
    Adding cp44:a2r119-a9r203
    Adding range [69..69] to allocno a9r203
    Adding range [70..70] to allocno a2r119
    Adding range [69..70] to live through  allocno a0r192
scanning new insn with uid = 259.
changing bb of uid 268
  unscanned insn
scanning new insn with uid = 261.
scanning new insn with uid = 262.
scanning new insn with uid = 263.
scanning new insn with uid = 264.
scanning new insn with uid = 265.
scanning new insn with uid = 266.
    New r203: setting preferred LO_REGS, alternative GENERAL_REGS
    New r204: setting preferred GENERAL_REGS, alternative NO_REGS
    New r205: setting preferred GENERAL_REGS, alternative NO_REGS
    New r206: setting preferred LO_REGS, alternative GENERAL_REGS
    New r207: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r208: setting preferred GENERAL_REGS, alternative NO_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 20 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 15 10 11 12 13 14
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 15 8 7 6 5 4 3 9
;;
;; Loop 2
;;  header 3, multiple latches: 7 9
;;  depth 2, outer 1
;;  nodes: 3 7 9 6 5 4
;; 2 succs { 11 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 3 8 }
;; 8 succs { 10 }
;; 9 succs { 3 15 }
;; 15 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 3 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
+++Costs: overall 43110, reg 9830, mem 33280, ld 0, st 0, move 379
+++       move loops 0, new jumps 2


drawGun

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={13d,12u} r1={16d,8u} r2={13d,4u} r3={11d,2u} r7={1d,15u} r12={16d} r13={1d,23u} r14={9d} r15={8d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={14d,4u} r101={8d} r102={1d,15u} r103={1d,14u} r104={8d} r105={8d} r106={8d} r114={1d,1u} r116={1d,1u} r119={2d,3u} r141={2d,5u} r142={2d,5u} r143={2d,5u} r146={2d,7u} r150={1d,1u} r151={1d,1u} r152={2d,2u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1e} r160={1d,1u} r162={1d,1u} r163={1d,1u,1e} r164={1d,1u} r168={1d,3u} r169={1d,1u} r172={1d,1u,1e} r173={1d,1u} r174={1d,2u} r175={1d,1u} r176={1d,1u,1e} r177={1d,1u} r178={1d,1u} r185={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,3u} r195={1d,1u} r197={1d,2u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u} r203={3d,2u} r204={3d,5u} r205={3d,6u} r206={2d,3u} r207={1d,1u} r208={3d,9u} 
;;    total ref usage 943{753d,186u,4e} in 150{142 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 6 8 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 8 2 9 2 (debug_marker) "../System/ray_funkcije.c":38:2 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:SF scale (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":38:8 -1
     (nil))
(debug_insn 10 9 11 2 (debug_marker) "../System/ray_funkcije.c":39:2 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI tx_step (const_int 2 [0x2])) "../System/ray_funkcije.c":39:6 -1
     (nil))
(debug_insn 12 11 13 2 (debug_marker) "../System/ray_funkcije.c":40:2 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:SI ty_step (const_int 2 [0x2])) "../System/ray_funkcije.c":40:6 -1
     (nil))
(debug_insn 14 13 15 2 (debug_marker) "../System/ray_funkcije.c":41:2 -1
     (nil))
(debug_insn 15 14 16 2 (debug_marker) "../System/ray_funkcije.c":42:2 -1
     (nil))
(debug_insn 16 15 17 2 (debug_marker) "../System/ray_funkcije.c":42:7 -1
     (nil))
(debug_insn 17 16 18 2 (var_location:SI y (const_int 0 [0])) -1
     (nil))
(debug_insn 18 17 19 2 (debug_marker) "../System/ray_funkcije.c":42:18 -1
     (nil))
(insn 19 18 21 2 (set (reg/f:SI 192)
        (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>)) "../System/ray_funkcije.c":45:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>)
        (nil)))
(insn 21 19 20 2 (set (reg:SI 152 [ ivtmp.105 ])
        (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>)
        (nil)))
(insn 20 21 228 2 (set (reg:SI 119 [ prephitmp_10 ])
        (zero_extend:SI (mem/c:QI (reg/f:SI 192) [0 time_gun+0 S1 A8]))) "../System/ray_funkcije.c":45:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>) [0 time_gun+0 S1 A8]))
        (nil)))
(insn 228 20 153 2 (set (reg/f:SI 191)
        (symbol_ref:SI ("t_gun_2") [flags 0x82]  <var_decl 0000000006be3e10 t_gun_2>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("t_gun_2") [flags 0x82]  <var_decl 0000000006be3e10 t_gun_2>)
        (nil)))
(insn 153 228 5 2 (set (reg:SF 178)
        (const_double:SF 4.4e+1 [0x0.bp+6])) "../System/ray_funkcije.c":58:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.4e+1 [0x0.bp+6])
        (nil)))
(insn 5 153 149 2 (set (reg/v:SI 146 [ y ])
        (const_int 0 [0])) "../System/ray_funkcije.c":42:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 149 5 159 2 (set (reg:SF 174)
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":57:57 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 159 149 259 2 (set (reg:DF 197)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":62:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])
        (nil)))
(insn 259 159 248 2 (set (reg:SI 203 [orig:119 prephitmp_10 ] [119])
        (reg:SI 119 [ prephitmp_10 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 119 [ prephitmp_10 ])
        (nil)))
(jump_insn 248 259 249 2 (set (pc)
        (label_ref 143)) 284 {*arm_jump}
     (nil)
 -> 143)
(barrier 249 248 175)
(code_label 175 249 25 3 9 (nil) [3 uses])
(note 25 175 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 30 25 26 3 NOTE_INSN_DELETED)
(debug_insn 26 30 27 3 (var_location:SI x (reg/v:SI 208 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 27 26 28 3 (debug_marker) "../System/ray_funkcije.c":44:4 -1
     (nil))
(debug_insn 28 27 29 3 (var_location:SI pixel (minus:SI (reg:SI 205 [orig:116 ivtmp.94 ] [116])
        (symbol_ref:SI ("t_guns") [flags 0x82]  <var_decl 0000000006be3d80 t_guns>))) "../System/ray_funkcije.c":44:8 -1
     (nil))
(debug_insn 29 28 33 3 (debug_marker) "../System/ray_funkcije.c":45:4 -1
     (nil))
(debug_insn 33 29 47 3 (debug_marker) "../System/ray_funkcije.c":46:5 -1
     (nil))
(debug_insn 47 33 31 3 (debug_marker) "../System/ray_funkcije.c":50:5 -1
     (nil))
(jump_insn 31 47 32 3 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 206 [orig:119 prephitmp_10 ] [119])
                        (const_int 0 [0]))
                    (label_ref 45)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":45:6 1025 {*thumb2_cbnz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 45)
(note 32 31 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 32 36 4 (set (reg/v:SI 141 [ red ])
        (zero_extend:SI (mem:QI (reg:SI 205 [orig:116 ivtmp.94 ] [116]) [0 MEM[base: _72, offset: 0B]+0 S1 A16]))) "../System/ray_funkcije.c":46:9 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 36 35 37 4 (var_location:SI red (reg/v:SI 141 [ red ])) "../System/ray_funkcije.c":46:9 -1
     (nil))
(debug_insn 37 36 38 4 (debug_marker) "../System/ray_funkcije.c":47:5 -1
     (nil))
(insn 38 37 39 4 (set (reg/v:SI 142 [ green ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 205 [orig:116 ivtmp.94 ] [116])
                    (const_int 1 [0x1])) [0 MEM[base: _72, offset: 1B]+0 S1 A8]))) "../System/ray_funkcije.c":47:11 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 39 38 40 4 (var_location:SI green (reg/v:SI 142 [ green ])) "../System/ray_funkcije.c":47:11 -1
     (nil))
(debug_insn 40 39 41 4 (debug_marker) "../System/ray_funkcije.c":48:5 -1
     (nil))
(insn 41 40 42 4 (set (reg/v:SI 143 [ blue ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 205 [orig:116 ivtmp.94 ] [116])
                    (const_int 2 [0x2])) [0 MEM[base: _72, offset: 2B]+0 S1 A16]))) "../System/ray_funkcije.c":48:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 42 41 250 4 (var_location:SI blue (reg/v:SI 143 [ blue ])) "../System/ray_funkcije.c":48:10 -1
     (nil))
(jump_insn 250 42 251 4 (set (pc)
        (label_ref 57)) 284 {*arm_jump}
     (nil)
 -> 57)
(barrier 251 250 45)
(code_label 45 251 46 5 3 (nil) [1 uses])
(note 46 45 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 46 50 5 (set (reg/v:SI 141 [ red ])
        (zero_extend:SI (mem:QI (reg:SI 204 [orig:114 ivtmp.95 ] [114]) [0 MEM[base: _65, offset: 0B]+0 S1 A16]))) "../System/ray_funkcije.c":50:9 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 50 49 51 5 (var_location:SI red (reg/v:SI 141 [ red ])) "../System/ray_funkcije.c":50:9 -1
     (nil))
(debug_insn 51 50 52 5 (debug_marker) "../System/ray_funkcije.c":51:5 -1
     (nil))
(insn 52 51 53 5 (set (reg/v:SI 142 [ green ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 204 [orig:114 ivtmp.95 ] [114])
                    (const_int 1 [0x1])) [0 MEM[base: _65, offset: 1B]+0 S1 A8]))) "../System/ray_funkcije.c":51:11 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 53 52 54 5 (var_location:SI green (reg/v:SI 142 [ green ])) "../System/ray_funkcije.c":51:11 -1
     (nil))
(debug_insn 54 53 55 5 (debug_marker) "../System/ray_funkcije.c":52:5 -1
     (nil))
(insn 55 54 56 5 (set (reg/v:SI 143 [ blue ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 204 [orig:114 ivtmp.95 ] [114])
                    (const_int 2 [0x2])) [0 MEM[base: _65, offset: 2B]+0 S1 A16]))) "../System/ray_funkcije.c":52:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 56 55 57 5 (var_location:SI blue (reg/v:SI 143 [ blue ])) "../System/ray_funkcije.c":52:10 -1
     (nil))
(code_label 57 56 58 6 4 (nil) [1 uses])
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 59 58 60 6 (var_location:SI blue (reg/v:SI 143 [ blue ])) -1
     (nil))
(debug_insn 60 59 61 6 (var_location:SI green (reg/v:SI 142 [ green ])) -1
     (nil))
(debug_insn 61 60 62 6 (var_location:SI red (reg/v:SI 141 [ red ])) -1
     (nil))
(debug_insn 62 61 126 6 (debug_marker) "../System/ray_funkcije.c":54:4 -1
     (nil))
(debug_insn 126 62 63 6 (debug_marker) "../System/ray_funkcije.c":43:28 -1
     (nil))
(insn 63 126 64 6 (set (reg:SI 157)
        (plus:SI (reg/v:SI 141 [ red ])
            (reg/v:SI 142 [ green ]))) "../System/ray_funkcije.c":54:13 7 {*arm_addsi3}
     (nil))
(insn 64 63 67 6 (set (reg:SI 158)
        (plus:SI (reg:SI 157)
            (reg/v:SI 143 [ blue ]))) "../System/ray_funkcije.c":54:21 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 67 64 68 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 158)
            (const_int 688 [0x2b0]))) "../System/ray_funkcije.c":54:7 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(jump_insn 68 67 69 6 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "../System/ray_funkcije.c":54:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 124)
(note 69 68 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 82 69 101 7 NOTE_INSN_DELETED)
(note 101 82 70 7 NOTE_INSN_DELETED)
(debug_insn 70 101 191 7 (debug_marker) "../System/ray_funkcije.c":55:5 -1
     (nil))
(debug_insn 191 70 71 7 (var_location:SF D#1 (mult:SF (float:SF (reg/v:SI 208 [orig:151 x ] [151]))
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":70:1 -1
     (nil))
(debug_insn 71 191 72 7 (var_location:SI gun_x (fix:SI (plus:SF (float:SF (fix:SI (debug_expr:SF D#1)))
            (const_double:SF 1.8e+1 [0x0.9p+5])))) "../System/ray_funkcije.c":55:9 -1
     (nil))
(debug_insn 72 71 192 7 (debug_marker) "../System/ray_funkcije.c":57:5 -1
     (nil))
(debug_insn 192 72 73 7 (var_location:SF D#2 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":70:1 -1
     (nil))
(debug_insn 73 192 74 7 (var_location:SI gun_y (fix:SI (plus:SF (float:SF (fix:SI (debug_expr:SF D#2)))
            (const_double:SF 4.4e+1 [0x0.bp+6])))) "../System/ray_funkcije.c":57:9 -1
     (nil))
(debug_insn 74 73 75 7 (debug_marker) "../System/ray_funkcije.c":60:5 -1
     (nil))
(insn 75 74 113 7 (set (reg:SF 159)
        (float:SF (reg/v:SI 208 [orig:151 x ] [151]))) "../System/ray_funkcije.c":56:16 809 {*floatsisf2_vfp}
     (nil))
(insn 113 75 77 7 (set (reg/v:SI 208 [orig:151 x ] [151])
        (plus:SI (reg/v:SI 208 [orig:151 x ] [151])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":43:30 7 {*arm_addsi3}
     (nil))
(insn 77 113 116 7 (set (reg:SF 160)
        (mult:SF (reg:SF 159)
            (reg:SF 174))) "../System/ray_funkcije.c":56:26 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 159)
        (expr_list:REG_EQUAL (mult:SF (reg:SF 159)
                (const_double:SF 5.0e-1 [0x0.8p+0]))
            (nil))))
(insn 116 77 78 7 (set (reg:SI 205 [orig:116 ivtmp.94 ] [116])
        (plus:SI (reg:SI 205 [orig:116 ivtmp.94 ] [116])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 78 116 117 7 (set (reg:SI 162)
        (fix:SI (fix:SF (reg:SF 160)))) "../System/ray_funkcije.c":56:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 160)
        (nil)))
(insn 117 78 79 7 (set (reg:SI 204 [orig:114 ivtmp.95 ] [114])
        (plus:SI (reg:SI 204 [orig:114 ivtmp.95 ] [114])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 79 117 81 7 (set (reg:SF 163)
        (float:SF (reg:SI 162))) "../System/ray_funkcije.c":56:7 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 81 79 83 7 (set (reg:SF 164)
        (plus:SF (reg:SF 163)
            (reg:SF 195))) "../System/ray_funkcije.c":56:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 163)
        (expr_list:REG_EQUAL (plus:SF (reg:SF 163)
                (const_double:SF 1.8e+1 [0x0.9p+5]))
            (nil))))
(insn 83 81 84 7 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 164)))) "../System/ray_funkcije.c":60:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 164)
        (nil)))
(call_insn/u 84 83 237 7 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 237 84 88 7 (set (reg:DF 2 r2)
        (reg:DF 197)) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 88 237 245 7 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 245 88 97 7 (set (reg:DF 198)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 97 245 89 7 (set (reg:SI 2 r2)
        (reg/v:SI 143 [ blue ])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 143 [ blue ])
        (nil)))
(insn 89 97 91 7 (set (reg:DF 168)
        (reg:DF 198)) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 198)
        (nil)))
(debug_insn 91 89 92 7 (var_location:SI gun_x (fix:SI (reg:DF 168))) "../System/ray_funkcije.c":60:11 -1
     (nil))
(debug_insn 92 91 93 7 (debug_marker) "../System/ray_funkcije.c":61:5 -1
     (nil))
(debug_insn 93 92 94 7 (var_location:SI gun_x (fix:SI (reg:DF 168))) "../System/ray_funkcije.c":61:11 -1
     (nil))
(debug_insn 94 93 95 7 (debug_marker) "../System/ray_funkcije.c":62:5 -1
     (nil))
(debug_insn 95 94 96 7 (var_location:SI gun_y (fix:SI (debug_expr:DF D#3))) "../System/ray_funkcije.c":62:11 -1
     (nil))
(debug_insn 96 95 98 7 (debug_marker) "../System/ray_funkcije.c":64:5 -1
     (nil))
(insn 98 96 99 7 (set (reg:SI 1 r1)
        (reg/v:SI 142 [ green ])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 142 [ green ])
        (nil)))
(insn 99 98 100 7 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ red ])) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 141 [ red ])
        (nil)))
(call_insn 100 99 246 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":65:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 246 100 102 7 (set (reg:SI 199)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":65:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 102 246 103 7 (set (reg:SI 169 [ _30 ])
        (zero_extend:SI (subreg:HI (reg:SI 199) 0))) "../System/ray_funkcije.c":64:5 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 103 102 104 7 (set (reg:DF 0 r0)
        (reg:DF 168)) "../System/ray_funkcije.c":60:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 168)
        (nil)))
(call_insn/u 104 103 106 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":60:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 106 104 107 7 (set (reg:SI 2 r2)
        (reg:SI 169 [ _30 ])) "../System/ray_funkcije.c":64:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 169 [ _30 ])
        (nil)))
(insn 107 106 109 7 (set (reg:SI 1 r1)
        (reg/v:SI 207 [orig:150 gun_y ] [150])) "../System/ray_funkcije.c":64:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 109 107 111 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>) [0 narisi_velik_kvadrat S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":64:5 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(insn 111 109 112 7 (set (reg:SI 206 [orig:119 prephitmp_10 ] [119])
        (zero_extend:SI (mem/c:QI (reg/f:SI 192) [0 time_gun+0 S1 A8]))) "../System/ray_funkcije.c":69:14 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/c:QI (symbol_ref:SI ("time_gun") [flags 0xc0]  <var_decl 0000000005e473f0 time_gun>) [0 time_gun+0 S1 A8]))
        (nil)))
(debug_insn 112 111 114 7 (debug_marker) "../System/ray_funkcije.c":43:28 -1
     (nil))
(debug_insn 114 112 115 7 (var_location:SI x (reg/v:SI 208 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 115 114 119 7 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 119 115 120 7 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 208 [orig:151 x ] [151])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":43:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 120 119 252 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 175)
            (pc))) "../System/ray_funkcije.c":43:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1056947572 (nil)))
 -> 175)
(note 252 120 260 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 260 252 253 8 (set (reg:SI 203 [orig:119 prephitmp_10 ] [119])
        (reg:SI 206 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 206 [orig:119 prephitmp_10 ] [119])
        (nil)))
(jump_insn 253 260 254 8 (set (pc)
        (label_ref 134)) 284 {*arm_jump}
     (nil)
 -> 134)
(barrier 254 253 124)
(code_label 124 254 125 9 5 (nil) [1 uses])
(note 125 124 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 9 (set (reg/v:SI 208 [orig:151 x ] [151])
        (plus:SI (reg/v:SI 208 [orig:151 x ] [151])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":43:30 7 {*arm_addsi3}
     (nil))
(debug_insn 128 127 129 9 (var_location:SI x (reg/v:SI 208 [orig:151 x ] [151])) -1
     (nil))
(debug_insn 129 128 130 9 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 130 129 131 9 (set (reg:SI 205 [orig:116 ivtmp.94 ] [116])
        (plus:SI (reg:SI 205 [orig:116 ivtmp.94 ] [116])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 131 130 132 9 (set (reg:SI 204 [orig:114 ivtmp.95 ] [114])
        (plus:SI (reg:SI 204 [orig:114 ivtmp.95 ] [114])
            (const_int 6 [0x6]))) "../System/ray_funkcije.c":43:3 7 {*arm_addsi3}
     (nil))
(insn 132 131 133 9 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 208 [orig:151 x ] [151])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":43:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 133 132 268 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 175)
            (pc))) "../System/ray_funkcije.c":43:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1056947572 (nil)))
 -> 175)
(note 268 133 261 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 261 268 134 15 (set (reg:SI 203 [orig:119 prephitmp_10 ] [119])
        (reg:SI 206 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 206 [orig:119 prephitmp_10 ] [119])
        (nil)))
(code_label 134 261 135 10 7 (nil) [1 uses])
(note 135 134 136 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 136 135 137 10 (debug_marker) "../System/ray_funkcije.c":42:27 -1
     (nil))
(insn 137 136 138 10 (set (reg/v:SI 146 [ y ])
        (plus:SI (reg/v:SI 146 [ y ])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":42:29 7 {*arm_addsi3}
     (nil))
(debug_insn 138 137 139 10 (var_location:SI y (reg/v:SI 146 [ y ])) -1
     (nil))
(debug_insn 139 138 140 10 (debug_marker) "../System/ray_funkcije.c":42:18 -1
     (nil))
(insn 140 139 141 10 (set (reg:SI 152 [ ivtmp.105 ])
        (plus:SI (reg:SI 152 [ ivtmp.105 ])
            (const_int 768 [0x300]))) "../System/ray_funkcije.c":42:2 7 {*arm_addsi3}
     (nil))
(insn 141 140 142 10 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 146 [ y ])
            (const_int 128 [0x80]))) "../System/ray_funkcije.c":42:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 142 141 143 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "../System/ray_funkcije.c":42:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 16794292 (nil)))
 -> 178)
(code_label 143 142 144 11 2 (nil) [1 uses])
(note 144 143 155 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 155 144 169 11 NOTE_INSN_DELETED)
(note 169 155 171 11 NOTE_INSN_DELETED)
(note 171 169 145 11 NOTE_INSN_DELETED)
(debug_insn 145 171 146 11 (var_location:SI y (reg/v:SI 146 [ y ])) -1
     (nil))
(debug_insn 146 145 147 11 (var_location:SI x (const_int 0 [0])) -1
     (nil))
(debug_insn 147 146 148 11 (debug_marker) "../System/ray_funkcije.c":43:19 -1
     (nil))
(insn 148 147 3 11 (set (reg:SF 172)
        (float:SF (reg/v:SI 146 [ y ]))) "../System/ray_funkcije.c":57:47 809 {*floatsisf2_vfp}
     (nil))
(insn 3 148 150 11 (set (reg:SI 116 [ ivtmp.94 ])
        (reg:SI 152 [ ivtmp.105 ])) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 150 3 4 11 (set (reg:SF 173)
        (mult:SF (reg:SF 172)
            (reg:SF 174))) "../System/ray_funkcije.c":57:57 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 172)
        (expr_list:REG_EQUAL (mult:SF (reg:SF 172)
                (const_double:SF 5.0e-1 [0x0.8p+0]))
            (nil))))
(insn 4 150 151 11 (set (reg/v:SI 151 [ x ])
        (const_int 0 [0])) "../System/ray_funkcije.c":43:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 151 4 80 11 (set (reg:SI 175)
        (fix:SI (fix:SF (reg:SF 173)))) "../System/ray_funkcije.c":57:40 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 173)
        (nil)))
(insn 80 151 152 11 (set (reg:SF 195)
        (const_double:SF 1.8e+1 [0x0.9p+5])) "../System/ray_funkcije.c":56:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.8e+1 [0x0.9p+5])
        (nil)))
(insn 152 80 154 11 (set (reg:SF 176)
        (float:SF (reg:SI 175))) "../System/ray_funkcije.c":57:38 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 154 152 156 11 (set (reg:SF 177)
        (plus:SF (reg:SF 176)
            (reg:SF 178))) "../System/ray_funkcije.c":58:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 176)
        (expr_list:REG_EQUAL (plus:SF (reg:SF 176)
                (const_double:SF 4.4e+1 [0x0.bp+6]))
            (nil))))
(insn 156 154 157 11 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 177)))) "../System/ray_funkcije.c":62:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 177)
        (nil)))
(call_insn/u 157 156 238 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 238 157 161 11 (set (reg:DF 2 r2)
        (reg:DF 197)) "../System/ray_funkcije.c":62:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 161 238 196 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(debug_insn 196 161 195 11 (var_location:DF D#4 (reg:DF 0 r0)) -1
     (nil))
(debug_insn 195 196 165 11 (var_location:DF D#3 (debug_expr:DF D#4)) -1
     (nil))
(call_insn/u 165 195 247 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":62:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 247 165 170 11 (set (reg:SI 200)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 170 247 166 11 (set (reg:SI 202 [185])
        (plus:SI (ashift:SI (reg/v:SI 146 [ y ])
                (const_int 1 [0x1]))
            (reg/v:SI 146 [ y ]))) 318 {*add_shiftsi}
     (nil))
(insn 166 170 258 11 (set (reg/v:SI 150 [ gun_y ])
        (reg:SI 200)) "../System/ray_funkcije.c":62:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 258 166 174 11 (set (reg:SI 185)
        (reg:SI 202 [185])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 202 [185])
        (nil)))
(insn 174 258 262 11 (set (reg:SI 114 [ ivtmp.95 ])
        (plus:SI (ashift:SI (reg:SI 185)
                (const_int 7 [0x7]))
            (reg/f:SI 191))) 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(insn 262 174 263 11 (set (reg:SI 204 [orig:114 ivtmp.95 ] [114])
        (reg:SI 114 [ ivtmp.95 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 114 [ ivtmp.95 ])
        (nil)))
(insn 263 262 264 11 (set (reg:SI 205 [orig:116 ivtmp.94 ] [116])
        (reg:SI 116 [ ivtmp.94 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 116 [ ivtmp.94 ])
        (nil)))
(insn 264 263 265 11 (set (reg:SI 206 [orig:119 prephitmp_10 ] [119])
        (reg:SI 203 [orig:119 prephitmp_10 ] [119])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 203 [orig:119 prephitmp_10 ] [119])
        (nil)))
(insn 265 264 266 11 (set (reg/v:SI 207 [orig:150 gun_y ] [150])
        (reg/v:SI 150 [ gun_y ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 150 [ gun_y ])
        (nil)))
(insn 266 265 255 11 (set (reg/v:SI 208 [orig:151 x ] [151])
        (reg/v:SI 151 [ x ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 151 [ x ])
        (nil)))
(jump_insn 255 266 256 11 (set (pc)
        (label_ref 175)) 284 {*arm_jump}
     (nil)
 -> 175)
(barrier 256 255 178)
(code_label 178 256 179 12 8 (nil) [1 uses])
(note 179 178 267 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 267 179 181 12 (set (reg:SI 119 [ prephitmp_10 ])
        (reg:SI 203 [orig:119 prephitmp_10 ] [119])) "../System/ray_funkcije.c":69:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 203 [orig:119 prephitmp_10 ] [119])
        (nil)))
(note 181 267 180 12 NOTE_INSN_DELETED)
(debug_insn 180 181 182 12 (debug_marker) "../System/ray_funkcije.c":69:2 -1
     (nil))
(jump_insn 182 180 183 12 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 119 [ prephitmp_10 ])
                        (const_int 0 [0]))
                    (label_ref:SI 193)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":69:4 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 193)
(note 183 182 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 184 183 186 13 (debug_marker) "../System/ray_funkcije.c":69:19 -1
     (nil))
(insn 186 184 188 13 (set (reg:SI 189)
        (plus:SI (reg:SI 119 [ prephitmp_10 ])
            (const_int -1 [0xffffffffffffffff]))) "../System/ray_funkcije.c":69:27 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 119 [ prephitmp_10 ])
        (nil)))
(insn 188 186 193 13 (set (mem/c:QI (reg/f:SI 192) [0 time_gun+0 S1 A8])
        (subreg:QI (reg:SI 189) 0)) "../System/ray_funkcije.c":69:27 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 192)
        (expr_list:REG_DEAD (reg:SI 189)
            (nil))))
(code_label 193 188 194 14 1 (nil) [1 uses])
(note 194 193 257 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 257 194 0 NOTE_INSN_DELETED)

;; Function drawMap (drawMap, funcdef_no=357, decl_uid=5813, cgraph_uid=361, symbol_order=369)

Starting decreasing number of live ranges...
rescanning insn with uid = 520.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 104 n_edges 149 count 183 (  1.8)
scanning new insn with uid = 2220.
rescanning insn with uid = 1892.
verify found no changes in insn with uid = 2220.
scanning new insn with uid = 2221.
rescanning insn with uid = 1886.
verify found no changes in insn with uid = 2221.
scanning new insn with uid = 2222.
scanning new insn with uid = 2223.
rescanning insn with uid = 1885.
rescanning insn with uid = 1887.
verify found no changes in insn with uid = 2222.
verify found no changes in insn with uid = 2223.
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
;;
;; Loop 1
;;  header 41, latch 102
;;  depth 1, outer 0
;;  nodes: 41 102 93 92 101 100 99 98 97 95 96 90 91 89 80 79 78 88 87 84 86 85 82 81 83 76 77 73 75 74 72 71 70 69 68 67 66 62 64 63 60 59 61 65 57 58 56 55 51 53 52 49 48 50 54 46 47 45 43 44 42
;;
;; Loop 6
;;  header 100, latch 100
;;  depth 2, outer 1
;;  nodes: 100
;;
;; Loop 5
;;  header 98, latch 98
;;  depth 2, outer 1
;;  nodes: 98
;;
;; Loop 4
;;  header 82, latch 87
;;  depth 2, outer 1
;;  nodes: 82 87 84 86 85 83
;;
;; Loop 3
;;  header 59, latch 63
;;  depth 2, outer 1
;;  nodes: 59 63 60 61
;;
;; Loop 2
;;  header 48, latch 52
;;  depth 2, outer 1
;;  nodes: 48 52 49 50
;; 2 succs { 3 9 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 15 }
;; 8 succs { 15 }
;; 9 succs { 11 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 23 }
;; 17 succs { 18 19 }
;; 18 succs { 23 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 28 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 30 29 }
;; 29 succs { 36 }
;; 30 succs { 32 31 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 35 34 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 38 37 }
;; 37 succs { 40 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 54 }
;; 47 succs { 54 }
;; 48 succs { 49 52 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 55 }
;; 52 succs { 48 53 }
;; 53 succs { 55 }
;; 54 succs { 48 }
;; 55 succs { 57 56 }
;; 56 succs { 57 58 }
;; 57 succs { 65 }
;; 58 succs { 65 }
;; 59 succs { 60 63 }
;; 60 succs { 61 63 }
;; 61 succs { 62 63 }
;; 62 succs { 66 }
;; 63 succs { 59 64 }
;; 64 succs { 66 }
;; 65 succs { 59 }
;; 66 succs { 68 67 }
;; 67 succs { 69 }
;; 68 succs { 69 }
;; 69 succs { 71 70 }
;; 70 succs { 72 }
;; 71 succs { 72 }
;; 72 succs { 73 75 }
;; 73 succs { 74 78 }
;; 74 succs { 78 }
;; 75 succs { 76 78 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 81 79 }
;; 79 succs { 80 90 }
;; 80 succs { 89 }
;; 81 succs { 82 }
;; 82 succs { 83 85 }
;; 83 succs { 84 86 }
;; 84 succs { 87 }
;; 85 succs { 87 }
;; 86 succs { 87 }
;; 87 succs { 82 88 }
;; 88 succs { 79 }
;; 89 succs { 92 }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 95 93 }
;; 93 succs { 102 94 }
;; 94 succs { 103 }
;; 95 succs { 97 96 }
;; 96 succs { 98 }
;; 97 succs { 99 }
;; 98 succs { 98 99 }
;; 99 succs { 100 }
;; 100 succs { 100 101 }
;; 101 succs { 93 }
;; 102 succs { 41 }
;; 103 succs { 1 }
Adding REG_EQUIV to insn 2037 for source of insn 108
Adding REG_EQUIV to insn 2041 for source of insn 172
Adding REG_EQUIV to insn 349 for source of insn 351
Adding REG_EQUIV to insn 385 for source of insn 387
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 481, has equiv memory
Ignoring reg 483, has equiv memory
Reg 996 uninteresting
Reg 997 uninteresting
Ignoring reg 998, has equiv memory
Reg 999 uninteresting
Reg 1000 uninteresting
Reg 1001 uninteresting
Ignoring reg 1002, has equiv memory
Reg 1003 uninteresting
Reg 1004 uninteresting
Reg 519: def dominates all uses has unique first use
Reg 521 uninteresting
Reg 1005 uninteresting
Reg 1006 uninteresting
Reg 1007 uninteresting
Reg 1008 uninteresting
Reg 1009 uninteresting
Reg 535: local to bb 24 def dominates all uses has unique first use
Reg 534: local to bb 24 def dominates all uses has unique first use
Reg 540: local to bb 24 def dominates all uses has unique first use
Reg 543 uninteresting
Reg 539: local to bb 24 def dominates all uses has unique first use
Reg 537 uninteresting
Reg 533: local to bb 24 def dominates all uses has unique first use
Reg 545 uninteresting
Reg 546 uninteresting
Reg 548 uninteresting
Reg 1010: local to bb 25 def dominates all uses has unique first use
Ignoring reg 553, has equiv memory
Reg 552 uninteresting
Ignoring reg 146, has equiv memory
Reg 559: local to bb 26 def dominates all uses has unique first use
Reg 558: local to bb 26 def dominates all uses has unique first use
Reg 561 uninteresting
Reg 557: local to bb 26 def dominates all uses has unique first use
Reg 563: local to bb 26 def dominates all uses has unique first use
Reg 566 uninteresting
Reg 562: local to bb 26 def dominates all uses has unique first use
Reg 568 uninteresting
Reg 569 uninteresting
Reg 571 uninteresting
Reg 1011: local to bb 27 def dominates all uses has unique first use
Ignoring reg 576, has equiv memory
Reg 575 uninteresting
Ignoring reg 154, has equiv memory
Reg 1012 uninteresting
Reg 411 uninteresting
Reg 1013: local to bb 29 def dominates all uses has unique first use
Reg 1014 uninteresting
Reg 587: local to bb 30 def dominates all uses has unique first use
Reg 586: local to bb 30 def dominates all uses has unique first use
Reg 592: local to bb 30 def dominates all uses has unique first use
Reg 595 uninteresting
Reg 591: local to bb 30 def dominates all uses has unique first use
Reg 589 uninteresting
Reg 585: local to bb 30 def dominates all uses has unique first use
Reg 597 uninteresting
Reg 598 uninteresting
Reg 600 uninteresting
Reg 1015 uninteresting
Reg 1016 uninteresting
Reg 605 uninteresting
Reg 612: local to bb 33 def dominates all uses has unique first use
Reg 614: local to bb 33 def dominates all uses has unique first use
Reg 611 uninteresting
Reg 610: local to bb 33 def dominates all uses has unique first use
Reg 616: local to bb 33 def dominates all uses has unique first use
Reg 619 uninteresting
Reg 615: local to bb 33 def dominates all uses has unique first use
Reg 621 uninteresting
Reg 622 uninteresting
Reg 624 uninteresting
Reg 1017 uninteresting
Reg 1018 uninteresting
Reg 627 uninteresting
Reg 1019 uninteresting
Reg 630 uninteresting
Reg 632 uninteresting
Reg 358: local to bb 38 def dominates all uses has unique first use
Reg 357: local to bb 38 def dominates all uses has unique first use
Reg 637: local to bb 38 def dominates all uses has unique first use
Reg 639: local to bb 38 def dominates all uses has unique first use
Reg 634 uninteresting
Reg 169 uninteresting
Reg 640: def dominates all uses has unique first use
Reg 636 uninteresting
Reg 171 uninteresting
Reg 642 uninteresting
Reg 987 uninteresting (no unique first use)
Reg 989: def dominates all uses has unique first use
Reg 990 uninteresting (no unique first use)
Reg 992: def dominates all uses has unique first use
Reg 993: def dominates all uses has unique first use
Reg 1020 uninteresting
Reg 651: local to bb 41 def dominates all uses has unique first use
Reg 1021 uninteresting
Reg 1022 uninteresting
Reg 1023 uninteresting
Reg 1024 uninteresting
Reg 1025 uninteresting
Reg 1026 uninteresting
Reg 1027 uninteresting
Reg 1028 uninteresting
Reg 1029 uninteresting
Reg 664 uninteresting
Reg 359 uninteresting (no unique first use)
Reg 1030 uninteresting
Reg 672 uninteresting
Reg 674 uninteresting
Reg 1031 uninteresting
Reg 681 uninteresting
Reg 682 uninteresting
Reg 688 uninteresting
Reg 692 uninteresting
Reg 695 uninteresting
Reg 696: local to bb 48 def dominates all uses has unique first use
Reg 697: local to bb 48 def dominates all uses has unique first use
Reg 400: def dominates all uses has unique first use
Reg 401: def dominates all uses has unique first use
Reg 701: def dominates all uses has unique first use
Reg 199 uninteresting
Reg 703 uninteresting
Reg 354: def dominates all uses has unique first use
Reg 988: def dominates all uses has unique first use
Reg 201: local to bb 55 def dominates all uses has unique first use
Reg 200: local to bb 55 def dominates all uses has unique first use
Reg 704 uninteresting
Reg 1032 uninteresting
Reg 1033 uninteresting
Reg 1034 uninteresting
Reg 362: def dominates all uses has unique first use
Reg 1035 uninteresting
Reg 1036 uninteresting
Reg 716 uninteresting
Reg 720 uninteresting
Reg 721 uninteresting
Reg 727 uninteresting
Reg 729 uninteresting
Reg 1037 uninteresting
Reg 735 uninteresting
Reg 734: local to bb 58 def dominates all uses has unique first use
Reg 736: local to bb 59 def dominates all uses has unique first use
Reg 737: local to bb 59 def dominates all uses has unique first use
Reg 395: def dominates all uses has unique first use
Reg 396: def dominates all uses has unique first use
Reg 741: def dominates all uses has unique first use
Reg 220 uninteresting
Reg 986: def dominates all uses has unique first use
Reg 222: local to bb 66 def dominates all uses has unique first use
Reg 221: local to bb 66 def dominates all uses has unique first use
Reg 743 uninteresting
Reg 1038 uninteresting
Reg 1039 uninteresting
Reg 1040 uninteresting
Reg 1041 uninteresting
Reg 364: def dominates all uses has unique first use
Reg 750: local to bb 69 def dominates all uses has unique first use
Reg 751: local to bb 69 def dominates all uses has unique first use
Reg 752: def dominates all uses has unique first use
Reg 748 uninteresting
Reg 747 uninteresting
Reg 749 uninteresting
Reg 365 uninteresting (no unique first use)
Reg 755: local to bb 70 def dominates all uses has unique first use
Reg 754 uninteresting
Reg 756 uninteresting
Reg 757: local to bb 71 def dominates all uses has unique first use
Reg 760: local to bb 71 def dominates all uses has unique first use
Reg 366 uninteresting (no unique first use)
Reg 763 uninteresting
Reg 764: local to bb 73 def dominates all uses has unique first use
Reg 765 uninteresting
Reg 769 uninteresting
Reg 1042 uninteresting
Reg 772 uninteresting
Reg 773 uninteresting
Reg 774 uninteresting
Reg 778 uninteresting
Reg 1043 uninteresting
Reg 1044 uninteresting
Reg 783 uninteresting
Reg 785 uninteresting
Reg 787 uninteresting
Reg 786 uninteresting
Reg 1045 uninteresting
Reg 368 uninteresting (no unique first use)
Ignoring reg 794, has equiv memory
Reg 216 uninteresting (no unique first use)
Reg 429: def dominates all uses has unique first use
Reg 982: def dominates all uses has unique first use
Reg 983: def dominates all uses has unique first use
Reg 984: def dominates all uses has unique first use
Reg 796 uninteresting
Reg 798 uninteresting
Reg 821: def dominates all uses has unique first use
Reg 807: local to bb 85 def dominates all uses has unique first use
Reg 803 uninteresting
Reg 804: local to bb 85 def dominates all uses has unique first use
Reg 808: local to bb 85 def dominates all uses has unique first use
Reg 813: local to bb 85 def dominates all uses has unique first use
Reg 809: local to bb 85 def dominates all uses has unique first use
Reg 814: local to bb 85 def dominates all uses has unique first use
Reg 805: local to bb 85 def dominates all uses has unique first use
Reg 810: local to bb 85 def dominates all uses has unique first use
Reg 815: local to bb 85 def dominates all uses has unique first use
Reg 817: local to bb 86 def dominates all uses has unique first use
Reg 822: local to bb 86 def dominates all uses has unique first use
Reg 827: local to bb 86 def dominates all uses has unique first use
Reg 818: local to bb 86 def dominates all uses has unique first use
Reg 823: local to bb 86 def dominates all uses has unique first use
Reg 828: local to bb 86 def dominates all uses has unique first use
Reg 819: local to bb 86 def dominates all uses has unique first use
Reg 824: local to bb 86 def dominates all uses has unique first use
Reg 829: local to bb 86 def dominates all uses has unique first use
Reg 830: local to bb 87 def dominates all uses has unique first use
Reg 1046: local to bb 87 def dominates all uses has unique first use
Reg 833: local to bb 87 def dominates all uses has unique first use
Reg 1047 uninteresting
Reg 834: local to bb 87 def dominates all uses has unique first use
Reg 1048: local to bb 87 def dominates all uses has unique first use
Reg 1049 uninteresting
Reg 1050 uninteresting
Reg 283: def dominates all uses has unique first use
Reg 1051 uninteresting
Reg 1052 uninteresting
Reg 1053: local to bb 92 def dominates all uses has unique first use
Reg 369: local to bb 92 def dominates all uses has unique first use
Reg 1054 uninteresting
Reg 370 uninteresting (no unique first use)
Reg 1055: local to bb 92 def dominates all uses has unique first use
Reg 371: local to bb 92 def dominates all uses has unique first use
Reg 1056 uninteresting
Reg 372 uninteresting (no unique first use)
Reg 1057 uninteresting
Reg 373 uninteresting (no unique first use)
Reg 1058 uninteresting
Reg 374 uninteresting (no unique first use)
Reg 1059 uninteresting
Reg 375 uninteresting (no unique first use)
Reg 857 uninteresting
Reg 860: def dominates all uses has unique first use
Reg 981: def dominates all uses has unique first use
Reg 859 uninteresting
Reg 296 uninteresting
Reg 861: local to bb 98 def dominates all uses has unique first use
Reg 866: local to bb 98 def dominates all uses has unique first use
Reg 862: local to bb 98 def dominates all uses has unique first use
Reg 867: local to bb 98 def dominates all uses has unique first use
Reg 863 uninteresting
Reg 864: local to bb 98 def dominates all uses has unique first use
Reg 868 uninteresting
Reg 869 uninteresting
Reg 870 uninteresting
Reg 1060 uninteresting
Reg 380: local to bb 98 def dominates all uses has unique first use
Reg 880 uninteresting
Reg 881 uninteresting
Reg 882: local to bb 98 def dominates all uses has unique first use
Reg 875 uninteresting
Reg 876 uninteresting
Reg 877: local to bb 98 def dominates all uses has unique first use
Reg 885 uninteresting
Reg 886 uninteresting
Reg 887: local to bb 98 def dominates all uses has unique first use
Reg 1061 uninteresting
Reg 889: local to bb 98 def dominates all uses has unique first use
Reg 1062: local to bb 98 def dominates all uses has unique first use
Reg 894 uninteresting
Reg 895: local to bb 98 def dominates all uses has unique first use
Reg 899 uninteresting
Reg 900: local to bb 98 def dominates all uses has unique first use
Reg 904 uninteresting
Reg 905: local to bb 98 def dominates all uses has unique first use
Reg 896: local to bb 98 def dominates all uses has unique first use
Reg 901: local to bb 98 def dominates all uses has unique first use
Reg 906: local to bb 98 def dominates all uses has unique first use
Reg 1063 uninteresting
Reg 908: local to bb 98 def dominates all uses has unique first use
Reg 1064: local to bb 98 def dominates all uses has unique first use
Reg 915: def dominates all uses has unique first use
Reg 979: def dominates all uses has unique first use
Reg 914 uninteresting
Reg 475 uninteresting
Reg 916: local to bb 100 def dominates all uses has unique first use
Reg 921: local to bb 100 def dominates all uses has unique first use
Reg 917: local to bb 100 def dominates all uses has unique first use
Reg 922: local to bb 100 def dominates all uses has unique first use
Reg 918 uninteresting
Reg 919: local to bb 100 def dominates all uses has unique first use
Reg 923 uninteresting
Reg 924 uninteresting
Reg 925 uninteresting
Reg 934 uninteresting
Reg 935: local to bb 100 def dominates all uses has unique first use
Reg 930 uninteresting
Reg 931: local to bb 100 def dominates all uses has unique first use
Reg 938 uninteresting
Reg 939: local to bb 100 def dominates all uses has unique first use
Reg 1065 uninteresting
Reg 941: local to bb 100 def dominates all uses has unique first use
Reg 1066: local to bb 100 def dominates all uses has unique first use
Reg 946 uninteresting
Reg 947: local to bb 100 def dominates all uses has unique first use
Reg 950 uninteresting
Reg 951: local to bb 100 def dominates all uses has unique first use
Reg 954 uninteresting
Reg 955: local to bb 100 def dominates all uses has unique first use
Reg 1067 uninteresting
Reg 957: local to bb 100 def dominates all uses has unique first use
Reg 1068: local to bb 100 def dominates all uses has unique first use
Reg 1069 uninteresting
Reg 1070 uninteresting
Examining insn 838, def for 200
  all ok and transp
      Creating newreg=1072 from oldreg=200
rescanning insn with uid = 838.
scanning new insn with uid = 2224.
Examining insn 839, def for 201
  all ok and transp
      Creating newreg=1073 from oldreg=201
rescanning insn with uid = 839.
scanning new insn with uid = 2225.
Examining insn 1024, def for 221
  all ok
Examining insn 1025, def for 222
  all ok
Reg 283 not local to one basic block
Reg 354 not local to one basic block
Examining insn 535, def for 357
  all ok
Examining insn 529, def for 358
  all ok
Reg 362 not local to one basic block
Reg 364 not local to one basic block
Examining insn 1429, def for 369
  all ok
Examining insn 1439, def for 371
  all ok
Examining insn 1564, def for 380
  all ok
Reg 395 not local to one basic block
Reg 396 not local to one basic block
Reg 400 not local to one basic block
Reg 401 not local to one basic block
Reg 429 not local to one basic block
Reg 519 not local to one basic block
Examining insn 325, def for 533
  all ok
Examining insn 322, def for 534
  all ok
Ignoring reg 535 with equiv init insn
Examining insn 331, def for 539
  all ok
Examining insn 328, def for 540
  all ok
Examining insn 362, def for 557
  all ok
Examining insn 359, def for 558
  all ok
Ignoring reg 559 with equiv init insn
Examining insn 367, def for 562
  all ok
Examining insn 364, def for 563
  all ok
Examining insn 424, def for 585
  all ok
Examining insn 421, def for 586
  all ok
Ignoring reg 587 with equiv init insn
Examining insn 430, def for 591
  all ok
Examining insn 427, def for 592
  all ok
Examining insn 471, def for 610
  all ok
Ignoring reg 612 with equiv init insn
Examining insn 470, def for 614
  all ok
Examining insn 476, def for 615
  all ok
Examining insn 473, def for 616
  all ok
Ignoring reg 637 with equiv init insn
Ignoring reg 639 with equiv init insn
Reg 640 not local to one basic block
Examining insn 584, def for 651
  all ok
Examining insn 751, def for 696
  all ok and transp
      Creating newreg=1074 from oldreg=696
rescanning insn with uid = 751.
scanning new insn with uid = 2226.
Examining insn 763, def for 697
  all ok and transp
      Creating newreg=1075 from oldreg=697
rescanning insn with uid = 763.
scanning new insn with uid = 2227.
Reg 701 not local to one basic block
Examining insn 920, def for 734
  all ok
Examining insn 940, def for 736
  all ok and transp
      Creating newreg=1076 from oldreg=736
rescanning insn with uid = 940.
scanning new insn with uid = 2228.
Examining insn 952, def for 737
  all ok and transp
      Creating newreg=1077 from oldreg=737
rescanning insn with uid = 952.
scanning new insn with uid = 2229.
Reg 741 not local to one basic block
Examining insn 1063, def for 750
  all ok
Ignoring reg 751 with equiv init insn
Reg 752 not local to one basic block
Ignoring reg 755 with equiv init insn
Examining insn 1093, def for 757
  all ok
Ignoring reg 760 with equiv init insn
Examining insn 1120, def for 764
  all ok
Examining insn 1278, def for 804
  all ok
Examining insn 1279, def for 805
  all ok
Examining insn 1284, def for 807
  all ok
Examining insn 1285, def for 808
  all ok
Examining insn 1286, def for 809
  all ok
Examining insn 1287, def for 810
  all ok
Examining insn 1293, def for 813
  all ok
Examining insn 1294, def for 814
  all ok
Examining insn 1295, def for 815
  all ok
Examining insn 1305, def for 817
  all ok
Examining insn 1306, def for 818
  all ok
Examining insn 1307, def for 819
  all ok
Reg 821 not local to one basic block
Examining insn 1313, def for 822
  all ok
Examining insn 1314, def for 823
  all ok
Examining insn 1315, def for 824
  all ok
Examining insn 1321, def for 827
  all ok
Examining insn 1322, def for 828
  all ok
Examining insn 1323, def for 829
  all ok
Examining insn 1335, def for 830
  all ok
Examining insn 1343, def for 833
  all ok
Examining insn 1352, def for 834
  all ok
Reg 860 not local to one basic block
Examining insn 1543, def for 861
  all ok
Examining insn 1544, def for 862
  all ok
Examining insn 1546, def for 864
  all ok
Examining insn 1548, def for 866
  all ok
Examining insn 1549, def for 867
  all ok
Examining insn 1582, def for 877
  all ok
Examining insn 1587, def for 882
  all ok
Examining insn 1592, def for 887
  all ok
Examining insn 1599, def for 889
  all ok
Examining insn 1627, def for 895
  all ok
Examining insn 1628, def for 896
  all ok
Examining insn 1632, def for 900
  all ok
Examining insn 1633, def for 901
  all ok
Examining insn 1637, def for 905
  all ok
Examining insn 1638, def for 906
  all ok
Examining insn 1645, def for 908
  all ok
Reg 915 not local to one basic block
Examining insn 1685, def for 916
  all ok
Examining insn 1686, def for 917
  all ok
Examining insn 1688, def for 919
  all ok
Examining insn 1690, def for 921
  all ok
Examining insn 1691, def for 922
  all ok
Examining insn 1717, def for 931
  all ok
Examining insn 1721, def for 935
  all ok
Examining insn 1725, def for 939
  all ok
Examining insn 1732, def for 941
  all ok
Examining insn 1760, def for 947
  all ok
Examining insn 1764, def for 951
  all ok
Examining insn 1768, def for 955
  all ok
Examining insn 1775, def for 957
  all ok
Reg 979 not local to one basic block
Reg 981 not local to one basic block
Reg 982 not local to one basic block
Reg 983 not local to one basic block
Reg 984 not local to one basic block
Reg 986 not local to one basic block
Reg 988 not local to one basic block
Reg 989 not local to one basic block
Reg 992 not local to one basic block
Reg 993 not local to one basic block
Found def insn 2049 for 1010 to be not moveable
Found def insn 2050 for 1011 to be not moveable
Found def insn 2052 for 1013 to be not moveable
Found def insn 2085 for 1046 to be not moveable
Found def insn 2087 for 1048 to be not moveable
Found def insn 2092 for 1053 to be not moveable
Found def insn 2094 for 1055 to be not moveable
Found def insn 2101 for 1062 to be not moveable
Found def insn 2103 for 1064 to be not moveable
Found def insn 2105 for 1066 to be not moveable
Found def insn 2107 for 1068 to be not moveable
    New r1072: setting preferred VFP_LO_REGS, alternative NO_REGS
    New r1073: setting preferred VFP_LO_REGS, alternative NO_REGS
    New r1074: setting preferred VFP_LO_REGS, alternative NO_REGS
    New r1075: setting preferred VFP_LO_REGS, alternative NO_REGS
    New r1076: setting preferred VFP_LO_REGS, alternative NO_REGS
    New r1077: setting preferred VFP_LO_REGS, alternative NO_REGS
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
;;
;; Loop 1
;;  header 41, latch 102
;;  depth 1, outer 0
;;  nodes: 41 102 93 92 101 100 99 98 97 95 96 90 91 89 80 79 78 88 87 84 86 85 82 81 83 76 77 73 75 74 72 71 70 69 68 67 66 62 64 63 60 59 61 65 57 58 56 55 51 53 52 49 48 50 54 46 47 45 43 44 42
;;
;; Loop 6
;;  header 100, latch 100
;;  depth 2, outer 1
;;  nodes: 100
;;
;; Loop 5
;;  header 98, latch 98
;;  depth 2, outer 1
;;  nodes: 98
;;
;; Loop 4
;;  header 82, latch 87
;;  depth 2, outer 1
;;  nodes: 82 87 84 86 85 83
;;
;; Loop 3
;;  header 59, latch 63
;;  depth 2, outer 1
;;  nodes: 59 63 60 61
;;
;; Loop 2
;;  header 48, latch 52
;;  depth 2, outer 1
;;  nodes: 48 52 49 50
;; 2 succs { 3 9 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 15 }
;; 8 succs { 15 }
;; 9 succs { 11 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 23 }
;; 17 succs { 18 19 }
;; 18 succs { 23 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 28 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 30 29 }
;; 29 succs { 36 }
;; 30 succs { 32 31 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 35 34 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 38 37 }
;; 37 succs { 40 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 54 }
;; 47 succs { 54 }
;; 48 succs { 49 52 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 55 }
;; 52 succs { 48 53 }
;; 53 succs { 55 }
;; 54 succs { 48 }
;; 55 succs { 57 56 }
;; 56 succs { 57 58 }
;; 57 succs { 65 }
;; 58 succs { 65 }
;; 59 succs { 60 63 }
;; 60 succs { 61 63 }
;; 61 succs { 62 63 }
;; 62 succs { 66 }
;; 63 succs { 59 64 }
;; 64 succs { 66 }
;; 65 succs { 59 }
;; 66 succs { 68 67 }
;; 67 succs { 69 }
;; 68 succs { 69 }
;; 69 succs { 71 70 }
;; 70 succs { 72 }
;; 71 succs { 72 }
;; 72 succs { 73 75 }
;; 73 succs { 74 78 }
;; 74 succs { 78 }
;; 75 succs { 76 78 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 81 79 }
;; 79 succs { 80 90 }
;; 80 succs { 89 }
;; 81 succs { 82 }
;; 82 succs { 83 85 }
;; 83 succs { 84 86 }
;; 84 succs { 87 }
;; 85 succs { 87 }
;; 86 succs { 87 }
;; 87 succs { 82 88 }
;; 88 succs { 79 }
;; 89 succs { 92 }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 95 93 }
;; 93 succs { 102 94 }
;; 94 succs { 103 }
;; 95 succs { 97 96 }
;; 96 succs { 98 }
;; 97 succs { 99 }
;; 98 succs { 98 99 }
;; 99 succs { 100 }
;; 100 succs { 100 101 }
;; 101 succs { 93 }
;; 102 succs { 41 }
;; 103 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 104 n_edges 149 count 183 (  1.8)
init_insns for 146: (insn_list:REG_DEP_TRUE 351 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 387 (nil))
init_insns for 481: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 483: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 519: (insn_list:REG_DEP_TRUE 210 (nil))
init_insns for 521: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 535: (insn_list:REG_DEP_TRUE 321 (nil))
init_insns for 545: (insn_list:REG_DEP_TRUE 332 (nil))
init_insns for 552: (insn_list:REG_DEP_TRUE 347 (nil))
init_insns for 553: (insn_list:REG_DEP_TRUE 348 (nil))
init_insns for 559: (insn_list:REG_DEP_TRUE 358 (nil))
init_insns for 568: (insn_list:REG_DEP_TRUE 368 (nil))
init_insns for 575: (insn_list:REG_DEP_TRUE 383 (nil))
init_insns for 576: (insn_list:REG_DEP_TRUE 384 (nil))
init_insns for 587: (insn_list:REG_DEP_TRUE 420 (nil))
init_insns for 597: (insn_list:REG_DEP_TRUE 431 (nil))
init_insns for 605: (insn_list:REG_DEP_TRUE 457 (nil))
init_insns for 606: (insn_list:REG_DEP_TRUE 458 (nil))
init_insns for 612: (insn_list:REG_DEP_TRUE 467 (nil))
init_insns for 621: (insn_list:REG_DEP_TRUE 477 (nil))
init_insns for 627: (insn_list:REG_DEP_TRUE 499 (nil))
init_insns for 628: (insn_list:REG_DEP_TRUE 500 (nil))
init_insns for 632: (insn_list:REG_DEP_TRUE 528 (nil))
init_insns for 637: (insn_list:REG_DEP_TRUE 538 (nil))
init_insns for 639: (insn_list:REG_DEP_TRUE 539 (nil))
init_insns for 664: (insn_list:REG_DEP_TRUE 662 (nil))
init_insns for 703: (insn_list:REG_DEP_TRUE 825 (nil))
init_insns for 748: (insn_list:REG_DEP_TRUE 1060 (nil))
init_insns for 751: (insn_list:REG_DEP_TRUE 1067 (nil))
init_insns for 752: (insn_list:REG_DEP_TRUE 1073 (nil))
init_insns for 754: (insn_list:REG_DEP_TRUE 1078 (nil))
init_insns for 755: (insn_list:REG_DEP_TRUE 1079 (nil))
init_insns for 760: (insn_list:REG_DEP_TRUE 1095 (nil))
init_insns for 763: (insn_list:REG_DEP_TRUE 1115 (nil))
init_insns for 772: (insn_list:REG_DEP_TRUE 1141 (nil))
init_insns for 783: (insn_list:REG_DEP_TRUE 1181 (nil))
init_insns for 785: (insn_list:REG_DEP_TRUE 1191 (nil))
init_insns for 787: (insn_list:REG_DEP_TRUE 1193 (nil))
init_insns for 794: (insn_list:REG_DEP_TRUE 1234 (nil))
init_insns for 857: (insn_list:REG_DEP_TRUE 1506 (nil))
init_insns for 860: (insn_list:REG_DEP_TRUE 1536 (nil))
init_insns for 915: (insn_list:REG_DEP_TRUE 1678 (nil))
init_insns for 971: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 972: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 979: (insn_list:REG_DEP_TRUE 1736 (nil))
init_insns for 981: (insn_list:REG_DEP_TRUE 1603 (nil))
init_insns for 982: (insn_list:REG_DEP_TRUE 1276 (nil))
init_insns for 983: (insn_list:REG_DEP_TRUE 1304 (nil))
init_insns for 984: (insn_list:REG_DEP_TRUE 1340 (nil))
init_insns for 986: (insn_list:REG_DEP_TRUE 960 (nil))
init_insns for 987: (insn_list:REG_DEP_TRUE 770 (nil))
init_insns for 988: (insn_list:REG_DEP_TRUE 771 (nil))
init_insns for 989: (insn_list:REG_DEP_TRUE 581 (nil))
init_insns for 990: (insn_list:REG_DEP_TRUE 632 (nil))
init_insns for 992: (insn_list:REG_DEP_TRUE 1445 (nil))
init_insns for 993: (insn_list:REG_DEP_TRUE 1472 (nil))
init_insns for 998: (insn_list:REG_DEP_TRUE 108 (nil))
init_insns for 1002: (insn_list:REG_DEP_TRUE 172 (nil))

Pass 1 for finding pseudo/allocno costs

    r1077: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1076: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1075: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1074: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1073: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1072: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1070: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1069: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r1068: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1067: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1066: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1065: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1064: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1063: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1062: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1061: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1060: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1059: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1058: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1057: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1056: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1055: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1054: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1053: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r1052: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1051: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1050: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1049: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1048: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1047: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1046: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1045: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1044: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1043: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1042: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1041: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1040: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1039: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r1038: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r1037: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1036: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1035: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1034: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1033: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r1032: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r1031: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1030: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1029: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1028: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1027: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1026: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1025: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1024: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1023: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1022: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1021: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1020: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1019: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a31 (r1019,l0) best GENERAL_REGS, allocno ALL_REGS
    r1018: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1017: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1016: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1015: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1014: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1013: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1012: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1011: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1010: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1009: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1008: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1007: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1006: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1005: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1004: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r1003: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1002: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1001: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r1000: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r999: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r998: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r997: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r996: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r993: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a534 (r993,l2) best ALL_REGS, allocno ALL_REGS
    a498 (r993,l3) best ALL_REGS, allocno ALL_REGS
    a437 (r993,l4) best ALL_REGS, allocno ALL_REGS
    a368 (r993,l5) best ALL_REGS, allocno ALL_REGS
    a311 (r993,l6) best ALL_REGS, allocno ALL_REGS
    r992: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a533 (r992,l2) best ALL_REGS, allocno ALL_REGS
    a497 (r992,l3) best ALL_REGS, allocno ALL_REGS
    a436 (r992,l4) best ALL_REGS, allocno ALL_REGS
    a367 (r992,l5) best ALL_REGS, allocno ALL_REGS
    a310 (r992,l6) best ALL_REGS, allocno ALL_REGS
    r990: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a532 (r990,l2) best ALL_REGS, allocno ALL_REGS
    a496 (r990,l3) best ALL_REGS, allocno ALL_REGS
    a435 (r990,l4) best ALL_REGS, allocno ALL_REGS
    a366 (r990,l5) best ALL_REGS, allocno ALL_REGS
    a309 (r990,l6) best ALL_REGS, allocno ALL_REGS
    r989: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a531 (r989,l2) best ALL_REGS, allocno ALL_REGS
    a495 (r989,l3) best ALL_REGS, allocno ALL_REGS
    a434 (r989,l4) best ALL_REGS, allocno ALL_REGS
    a365 (r989,l5) best ALL_REGS, allocno ALL_REGS
    a308 (r989,l6) best ALL_REGS, allocno ALL_REGS
    r988: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r987: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a529 (r987,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a494 (r987,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a433 (r987,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a364 (r987,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a307 (r987,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a130 (r987,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r986: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r984: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r983: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a431 (r983,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r982: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a430 (r982,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r981: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r979: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r973: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r972: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a528 (r972,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a492 (r972,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a429 (r972,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a362 (r972,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a305 (r972,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a129 (r972,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r971: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a527 (r971,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a491 (r971,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a428 (r971,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a361 (r971,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a304 (r971,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a128 (r971,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r970: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a526 (r970,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a490 (r970,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a427 (r970,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a360 (r970,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a303 (r970,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a127 (r970,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r969: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a359 (r969,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a302 (r969,l6) best GENERAL_REGS, allocno GENERAL_REGS
    r968: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a358 (r968,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a301 (r968,l6) best GENERAL_REGS, allocno GENERAL_REGS
    r967: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a525 (r967,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a489 (r967,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a426 (r967,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a357 (r967,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a300 (r967,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a126 (r967,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r957: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r955: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r954: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r951: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r950: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r947: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r946: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r941: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r939: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r938: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r935: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r934: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r931: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r930: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r928: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r925: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r924: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r923: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r922: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r921: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r919: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r918: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r917: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r916: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r915: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r914: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r913: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r908: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r906: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r905: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r904: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r901: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r900: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r899: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r896: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r895: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r894: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r889: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r887: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r886: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r885: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r882: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r881: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r880: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r877: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r876: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r875: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r873: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r870: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r869: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r868: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r867: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r866: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r864: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r863: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r862: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r861: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r860: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r859: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r858: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r857: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r834: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r833: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r830: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r829: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r828: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r827: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r824: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r823: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r822: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r821: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r819: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r818: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r817: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r815: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r814: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r813: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r810: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r809: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r808: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r807: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r805: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r804: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r803: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r801: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r798: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r796: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r794: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r787: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r786: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r785: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r784: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r783: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r778: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r777: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r776: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r774: preferred GENERAL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r773: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r772: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r769: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r768: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r767: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r765: preferred GENERAL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r764: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r763: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r760: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r759: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r757: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r756: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r755: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r754: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r752: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r751: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r750: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r749: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r748: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r747: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r743: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r741: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r737: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r736: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r735: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r734: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r729: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r727: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r721: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r720: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r716: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r704: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r703: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r701: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r697: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r696: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r695: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r692: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r688: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r682: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r681: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r674: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r672: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r664: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r651: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r642: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r640: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r639: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r637: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r636: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r634: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r632: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r630: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r628: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r627: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r624: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r622: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r621: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r619: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r616: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r615: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r614: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r612: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r611: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r610: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r609: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r606: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r605: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r600: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r598: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r597: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r595: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r592: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r591: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r590: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r589: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r587: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r586: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r585: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r576: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r575: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r571: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r569: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r568: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r566: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r563: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r562: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r561: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r559: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r558: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r557: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r556: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r553: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r552: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r548: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r546: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r545: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r543: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r540: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r539: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r538: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r537: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r535: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r534: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r533: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r521: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r519: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r483: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r481: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r475: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r463: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r457: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r452: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r423: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r418: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r416: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a522 (r416,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r412: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r411: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r410: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r409: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r408: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r404: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r403: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r402: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r401: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    a538 (r401,l2) best VFP_LO_REGS, allocno VFP_LO_REGS
    r400: preferred GENERAL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r398: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r397: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r396: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    a502 (r396,l3) best VFP_LO_REGS, allocno VFP_LO_REGS
    r395: preferred GENERAL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r393: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r380: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r375: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r374: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r373: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r372: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r370: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r366: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r365: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r364: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r363: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r362: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r361: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r360: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r359: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r358: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r357: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r354: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r353: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r349: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r348: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r347: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r346: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r340: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r339: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r296: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r279: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r227: preferred LO_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r222: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r221: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r220: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r201: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r200: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r199: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r193: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r183: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r181: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a507 (r181,l2) best ALL_REGS, allocno ALL_REGS
    a470 (r181,l3) best ALL_REGS, allocno ALL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r160: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r154: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r146: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r125: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS

  a0(r993,l0) costs: GENERAL_REGS:0,440 VFP_D0_D7_REGS:195,6795 VFP_LO_REGS:195,6795 ALL_REGS:195,3495 MEM:130,4530
  a1(r992,l0) costs: GENERAL_REGS:0,440 VFP_D0_D7_REGS:195,6795 VFP_LO_REGS:195,6795 ALL_REGS:195,3495 MEM:130,4530
  a2(r990,l0) costs: GENERAL_REGS:0,674 VFP_D0_D7_REGS:195,10305 VFP_LO_REGS:195,10305 ALL_REGS:195,5250 MEM:130,6870
  a3(r989,l0) costs: GENERAL_REGS:0,414 VFP_D0_D7_REGS:195,6405 VFP_LO_REGS:195,6405 ALL_REGS:195,3300 MEM:130,4270
  a4(r463,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:195,3495 VFP_LO_REGS:195,3495 ALL_REGS:195,3495 MEM:130,2330
  a5(r987,l0) costs: LO_REGS:0,0 HI_REGS:26,26 CALLER_SAVE_REGS:26,26 EVEN_REG:26,26 GENERAL_REGS:26,26 VFP_D0_D7_REGS:195,8055 VFP_LO_REGS:195,8055 ALL_REGS:195,8055 MEM:130,5370
  a6(r339,l0) costs: LO_REGS:195,8664 HI_REGS:195,8664 CALLER_SAVE_REGS:195,8664 EVEN_REG:195,8664 GENERAL_REGS:195,8664 VFP_LO_REGS:0,3105 ALL_REGS:195,8250 MEM:130,7570
  a7(r418,l0) costs: LO_REGS:195,3300 HI_REGS:195,3300 CALLER_SAVE_REGS:195,3300 EVEN_REG:195,3300 GENERAL_REGS:195,3300 VFP_LO_REGS:0,0 ALL_REGS:195,3300 MEM:130,2200
  a8(r355,l0) costs: GENERAL_REGS:390,390 VFP_D0_D7_REGS:735,3180 VFP_LO_REGS:735,3180 ALL_REGS:930,3375 MEM:685,2315
  a9(r356,l0) costs: GENERAL_REGS:390,390 VFP_D0_D7_REGS:735,4035 VFP_LO_REGS:735,4035 ALL_REGS:930,4230 MEM:685,2885
  a10(r416,l0) costs: LO_REGS:0,3300 HI_REGS:24,3518 CALLER_SAVE_REGS:24,3518 EVEN_REG:24,3518 GENERAL_REGS:24,3518 VFP_D0_D7_REGS:360,13320 VFP_LO_REGS:360,13320 ALL_REGS:360,14970 MEM:240,10530
  a11(r967,l0) costs: LO_REGS:0,0 HI_REGS:24,24 CALLER_SAVE_REGS:24,24 EVEN_REG:24,24 GENERAL_REGS:24,24 VFP_D0_D7_REGS:1035,5985 VFP_LO_REGS:1035,5985 ALL_REGS:1035,5985 MEM:690,3990
  a12(r970,l0) costs: LO_REGS:0,0 HI_REGS:24,24 CALLER_SAVE_REGS:24,24 EVEN_REG:24,24 GENERAL_REGS:24,24 VFP_D0_D7_REGS:360,3465 VFP_LO_REGS:360,3465 ALL_REGS:360,3465 MEM:240,2310
  a13(r971,l0) costs: LO_REGS:0,0 HI_REGS:26,26 CALLER_SAVE_REGS:26,26 EVEN_REG:26,26 GENERAL_REGS:26,26 VFP_D0_D7_REGS:990,4290 VFP_LO_REGS:990,4290 ALL_REGS:990,4290 MEM:660,2860
  a14(r972,l0) costs: LO_REGS:0,0 HI_REGS:26,26 CALLER_SAVE_REGS:26,26 EVEN_REG:26,26 GENERAL_REGS:26,26 VFP_D0_D7_REGS:990,4290 VFP_LO_REGS:990,4290 ALL_REGS:990,4290 MEM:660,2860
  a15(r171,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:210,210 VFP_LO_REGS:210,210 ALL_REGS:210,210 MEM:140,140
  a16(r640,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:210,210 VFP_LO_REGS:210,210 ALL_REGS:210,210 MEM:140,140
  a17(r630,l0) costs: GENERAL_REGS:26,26 MEM:280,280
  a18(r642,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a19(r636,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_D0_D7_REGS:90,90 VFP_LO_REGS:90,90 ALL_REGS:180,180 MEM:120,120
  a20(r357,l0) costs: LO_REGS:180,180 HI_REGS:180,180 CALLER_SAVE_REGS:180,180 EVEN_REG:180,180 GENERAL_REGS:180,180 VFP_LO_REGS:0,0 ALL_REGS:180,180 MEM:120,120
  a21(r637,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a22(r169,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a23(r639,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a24(r634,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_D0_D7_REGS:90,90 VFP_LO_REGS:90,90 ALL_REGS:180,180 MEM:120,120
  a25(r358,l0) costs: LO_REGS:180,180 HI_REGS:180,180 CALLER_SAVE_REGS:180,180 EVEN_REG:180,180 GENERAL_REGS:180,180 VFP_LO_REGS:0,0 ALL_REGS:180,180 MEM:120,120
  a26(r410,l0) costs: LO_REGS:315,315 HI_REGS:315,315 CALLER_SAVE_REGS:315,315 EVEN_REG:315,315 GENERAL_REGS:315,315 VFP_LO_REGS:0,0 ALL_REGS:315,315 MEM:210,210
  a27(r632,l0) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_LO_REGS:0,0 ALL_REGS:270,270 MEM:180,180
  a28(r409,l0) costs: LO_REGS:315,315 HI_REGS:315,315 CALLER_SAVE_REGS:315,315 EVEN_REG:315,315 GENERAL_REGS:315,315 VFP_LO_REGS:0,0 ALL_REGS:315,315 MEM:210,210
  a29(r413,l0) costs: LO_REGS:315,315 HI_REGS:315,315 CALLER_SAVE_REGS:315,315 EVEN_REG:315,315 GENERAL_REGS:315,315 VFP_LO_REGS:0,0 ALL_REGS:315,315 MEM:210,210
  a30(r412,l0) costs: LO_REGS:315,315 HI_REGS:315,315 CALLER_SAVE_REGS:315,315 EVEN_REG:315,315 GENERAL_REGS:315,315 VFP_LO_REGS:0,0 ALL_REGS:315,315 MEM:210,210
  a31(r1019,l0) costs: LO_REGS:26,26 HI_REGS:52,52 CALLER_SAVE_REGS:52,52 EVEN_REG:52,52 GENERAL_REGS:26,26 VFP_D0_D7_REGS:585,585 VFP_LO_REGS:585,585 ALL_REGS:390,390 MEM:390,390
  a32(r628,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:0,0
  a33(r627,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a34(r1018,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a35(r160,l0) costs: LO_REGS:450,450 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_LO_REGS:24,24 ALL_REGS:270,270 MEM:300,300
  a36(r1017,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a37(r624,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a38(r615,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a39(r622,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a40(r973,l0) costs: LO_REGS:0,0 HI_REGS:24,24 CALLER_SAVE_REGS:24,24 EVEN_REG:24,24 GENERAL_REGS:24,24 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a41(r610,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a42(r621,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a43(r619,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a44(r616,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a45(r612,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a46(r614,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a47(r611,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a48(r609,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a49(r343,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:390,390 VFP_LO_REGS:390,390 ALL_REGS:390,390 MEM:260,260
  a50(r606,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:0,0
  a51(r605,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a52(r1016,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a53(r1015,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a54(r600,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a55(r591,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a56(r598,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a57(r585,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a58(r597,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a59(r589,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a60(r586,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a61(r595,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a62(r592,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a63(r590,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a64(r587,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a65(r342,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:465,465 VFP_LO_REGS:465,465 ALL_REGS:465,465 MEM:310,310
  a66(r1014,l0) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_LO_REGS:12,12 ALL_REGS:180,180 MEM:180,180
  a67(r1013,l0) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_LO_REGS:12,12 ALL_REGS:180,180 MEM:180,180
  a68(r411,l0) costs: LO_REGS:450,450 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_LO_REGS:24,24 ALL_REGS:270,270 MEM:300,300
  a69(r1012,l0) costs: GENERAL_REGS:26,26 VFP_D0_D7_REGS:585,585 VFP_LO_REGS:585,585 ALL_REGS:390,390 MEM:390,390
  a70(r154,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a71(r576,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:0,0
  a72(r575,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a73(r1011,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a74(r571,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a75(r562,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a76(r569,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a77(r557,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a78(r568,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a79(r566,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a80(r563,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a81(r559,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a82(r561,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a83(r558,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a84(r556,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a85(r146,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a86(r553,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:0,0
  a87(r552,l0) costs: LO_REGS:90,90 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_LO_REGS:0,0 ALL_REGS:90,90 MEM:60,60
  a88(r1010,l0) costs: LO_REGS:135,135 HI_REGS:135,135 CALLER_SAVE_REGS:135,135 EVEN_REG:135,135 GENERAL_REGS:135,135 VFP_LO_REGS:6,6 ALL_REGS:90,90 MEM:90,90
  a89(r548,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a90(r539,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a91(r546,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a92(r533,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a93(r545,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a94(r537,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a95(r534,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a96(r543,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a97(r540,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:180,180 VFP_LO_REGS:180,180 ALL_REGS:180,180 MEM:120,120
  a98(r538,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a99(r535,l0) costs: LO_REGS:0,0 HI_REGS:12,12 CALLER_SAVE_REGS:12,12 EVEN_REG:12,12 GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a100(r1009,l0) costs: GENERAL_REGS:26,26 VFP_D0_D7_REGS:585,585 VFP_LO_REGS:585,585 ALL_REGS:390,390 MEM:390,390
  a101(r408,l0) costs: LO_REGS:165,165 HI_REGS:165,165 CALLER_SAVE_REGS:165,165 EVEN_REG:165,165 GENERAL_REGS:165,165 VFP_LO_REGS:0,0 ALL_REGS:165,165 MEM:110,110
  a102(r1008,l0) costs: LO_REGS:45,45 HI_REGS:45,45 CALLER_SAVE_REGS:45,45 EVEN_REG:45,45 GENERAL_REGS:45,45 VFP_LO_REGS:2,2 ALL_REGS:30,30 MEM:30,30
  a103(r125,l0) costs: LO_REGS:931,931 HI_REGS:931,931 CALLER_SAVE_REGS:931,931 EVEN_REG:931,931 GENERAL_REGS:931,931 VFP_LO_REGS:154,154 ALL_REGS:762,762 MEM:696,696
  a104(r1007,l0) costs: LO_REGS:225,225 HI_REGS:225,225 CALLER_SAVE_REGS:225,225 EVEN_REG:225,225 GENERAL_REGS:225,225 VFP_LO_REGS:10,10 ALL_REGS:150,150 MEM:150,150
  a105(r1006,l0) costs: LO_REGS:225,225 HI_REGS:225,225 CALLER_SAVE_REGS:225,225 EVEN_REG:225,225 GENERAL_REGS:225,225 VFP_LO_REGS:10,10 ALL_REGS:150,150 MEM:150,150
  a106(r519,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:255,255 MEM:170,170
  a107(r1005,l0) costs: LO_REGS:16,16 HI_REGS:48,48 CALLER_SAVE_REGS:48,48 EVEN_REG:48,48 GENERAL_REGS:32,32 VFP_D0_D7_REGS:360,360 VFP_LO_REGS:360,360 ALL_REGS:240,240 MEM:240,240
  a108(r521,l0) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:150,150 MEM:100,100
  a109(r1004,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:135,135 VFP_LO_REGS:135,135 ALL_REGS:96,96 MEM:93,93
  a110(r1003,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:180,180 MEM:180,180
  a111(r1002,l0) costs: GENERAL_REGS:6,6 VFP_D0_D7_REGS:135,135 VFP_LO_REGS:135,135 ALL_REGS:90,90 MEM:90,90
  a112(r1001,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:180,180 MEM:180,180
  a113(r1000,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:135,135 VFP_LO_REGS:135,135 ALL_REGS:96,96 MEM:93,93
  a114(r999,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:180,180 MEM:180,180
  a115(r998,l0) costs: GENERAL_REGS:6,6 VFP_D0_D7_REGS:135,135 VFP_LO_REGS:135,135 ALL_REGS:90,90 MEM:90,90
  a116(r997,l0) costs: GENERAL_REGS:12,12 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:180,180 MEM:180,180
  a117(r996,l0) costs: GENERAL_REGS:26,26 VFP_D0_D7_REGS:585,585 VFP_LO_REGS:585,585 ALL_REGS:390,390 MEM:390,390
  a118(r483,l0) costs: LO_REGS:585,585 HI_REGS:585,585 CALLER_SAVE_REGS:585,585 EVEN_REG:585,585 GENERAL_REGS:585,585 VFP_LO_REGS:195,195 ALL_REGS:585,585 MEM:195,195
  a119(r481,l0) costs: LO_REGS:585,585 HI_REGS:585,585 CALLER_SAVE_REGS:585,585 EVEN_REG:585,585 GENERAL_REGS:585,585 VFP_LO_REGS:195,195 ALL_REGS:585,585 MEM:195,195
  a120(r339,l1) costs: LO_REGS:8469,8469 HI_REGS:8469,8469 CALLER_SAVE_REGS:8469,8469 EVEN_REG:8469,8469 GENERAL_REGS:8469,8469 VFP_LO_REGS:3105,3105 ALL_REGS:8055,8055 MEM:7440,7440
  a121(r355,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2445,2445 VFP_LO_REGS:2445,2445 ALL_REGS:2445,2445 MEM:1630,1630
  a122(r356,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:3300,3300 MEM:2200,2200
  a123(r416,l1) costs: LO_REGS:3300,3300 HI_REGS:3494,3494 CALLER_SAVE_REGS:3494,3494 EVEN_REG:3494,3494 GENERAL_REGS:3494,3494 VFP_D0_D7_REGS:12960,12960 VFP_LO_REGS:12960,12960 ALL_REGS:14610,14610 MEM:10290,10290
  a124(r418,l1) costs: LO_REGS:3105,3105 HI_REGS:3105,3105 CALLER_SAVE_REGS:3105,3105 EVEN_REG:3105,3105 GENERAL_REGS:3105,3105 VFP_LO_REGS:0,0 ALL_REGS:3105,3105 MEM:2070,2070
  a125(r463,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:3300,3300 MEM:2200,2200
  a126(r967,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:4950,4950 MEM:3300,3300
  a127(r970,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:3105,3105 VFP_LO_REGS:3105,3105 ALL_REGS:3105,3105 MEM:2070,2070
  a128(r971,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:3300,3300 MEM:2200,2200
  a129(r972,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:3300,3300 MEM:2200,2200
  a130(r987,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,7860 VFP_LO_REGS:0,7860 ALL_REGS:0,7860 MEM:0,5240
  a131(r989,l1) costs: GENERAL_REGS:414,414 VFP_D0_D7_REGS:6210,6210 VFP_LO_REGS:6210,6210 ALL_REGS:3105,3105 MEM:4140,4140
  a132(r990,l1) costs: GENERAL_REGS:674,674 VFP_D0_D7_REGS:10110,10110 VFP_LO_REGS:10110,10110 ALL_REGS:5055,5055 MEM:6740,6740
  a133(r992,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:6600,6600 VFP_LO_REGS:6600,6600 ALL_REGS:3300,3300 MEM:4400,4400
  a134(r993,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:6600,6600 VFP_LO_REGS:6600,6600 ALL_REGS:3300,3300 MEM:4400,4400
  a135(r1070,l1) costs: LO_REGS:4365,4365 HI_REGS:4365,4365 CALLER_SAVE_REGS:4365,4365 EVEN_REG:4365,4365 GENERAL_REGS:4365,4365 VFP_LO_REGS:194,194 ALL_REGS:2910,2910 MEM:2910,2910
  a136(r1069,l1) costs: LO_REGS:1649,1649 HI_REGS:1649,1649 CALLER_SAVE_REGS:1649,1649 EVEN_REG:1649,1649 GENERAL_REGS:1649,1649 VFP_D0_D7_REGS:1649,1649 VFP_LO_REGS:1649,1649 ALL_REGS:2910,2910 MEM:3880,3880
  a137(r979,l1) costs: GENERAL_REGS:0,3560 VFP_D0_D7_REGS:1455,54855 VFP_LO_REGS:1455,54855 ALL_REGS:1455,28155 MEM:970,36570
  a138(r915,l1) costs: LO_REGS:1455,14805 HI_REGS:1455,14805 CALLER_SAVE_REGS:1455,14805 EVEN_REG:1455,14805 GENERAL_REGS:1455,14805 VFP_LO_REGS:0,0 ALL_REGS:1455,14805 MEM:970,9870
  a139(r368,l1) costs: GENERAL_REGS:0,8900 VFP_D0_D7_REGS:1650,135150 VFP_LO_REGS:1650,135150 ALL_REGS:1650,68400 MEM:1100,90100
  a140(r370,l1) costs: LO_REGS:1650,28350 HI_REGS:1650,28350 CALLER_SAVE_REGS:1650,28350 EVEN_REG:1650,28350 GENERAL_REGS:1650,28350 VFP_LO_REGS:0,0 ALL_REGS:1650,28350 MEM:1100,18900
  a141(r372,l1) costs: LO_REGS:1650,28350 HI_REGS:1650,28350 CALLER_SAVE_REGS:1650,28350 EVEN_REG:1650,28350 GENERAL_REGS:1650,28350 VFP_LO_REGS:220,220 ALL_REGS:1870,28570 MEM:1210,19010
  a142(r373,l1) costs: LO_REGS:1650,28350 HI_REGS:1650,28350 CALLER_SAVE_REGS:1650,28350 EVEN_REG:1650,28350 GENERAL_REGS:1650,28350 VFP_LO_REGS:220,220 ALL_REGS:1870,28570 MEM:1210,19010
  a143(r374,l1) costs: LO_REGS:1650,28350 HI_REGS:1650,28350 CALLER_SAVE_REGS:1650,28350 EVEN_REG:1650,28350 GENERAL_REGS:1650,28350 VFP_LO_REGS:220,220 ALL_REGS:1870,28570 MEM:1210,19010
  a144(r375,l1) costs: LO_REGS:1650,28350 HI_REGS:1650,28350 CALLER_SAVE_REGS:1650,28350 EVEN_REG:1650,28350 GENERAL_REGS:1650,28350 VFP_LO_REGS:220,220 ALL_REGS:1870,28570 MEM:1210,19010
  a145(r389,l1) costs: GENERAL_REGS:1650,58610 VFP_D0_D7_REGS:4755,191655 VFP_LO_REGS:4755,191655 ALL_REGS:5580,192480 MEM:3995,155295
  a146(r968,l1) costs: LO_REGS:0,0 HI_REGS:388,388 CALLER_SAVE_REGS:388,388 EVEN_REG:388,388 GENERAL_REGS:388,388 VFP_D0_D7_REGS:2910,83010 VFP_LO_REGS:2910,83010 ALL_REGS:2910,83010 MEM:1940,55340
  a147(r969,l1) costs: LO_REGS:0,0 HI_REGS:388,388 CALLER_SAVE_REGS:388,388 EVEN_REG:388,388 GENERAL_REGS:388,388 VFP_D0_D7_REGS:2910,83010 VFP_LO_REGS:2910,83010 ALL_REGS:2910,83010 MEM:1940,55340
  a148(r981,l1) costs: GENERAL_REGS:0,3560 VFP_D0_D7_REGS:1455,54855 VFP_LO_REGS:1455,54855 ALL_REGS:1455,28155 MEM:970,36570
  a149(r860,l1) costs: LO_REGS:1455,14805 HI_REGS:1455,14805 CALLER_SAVE_REGS:1455,14805 EVEN_REG:1455,14805 GENERAL_REGS:1455,14805 VFP_LO_REGS:0,0 ALL_REGS:1455,14805 MEM:970,9870
  a150(r857,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a151(r1059,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a152(r1058,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a153(r1057,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a154(r371,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a155(r1056,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a156(r1055,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:440,440 ALL_REGS:3520,3520 MEM:3410,3410
  a157(r369,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a158(r346,l1) costs: LO_REGS:16005,16005 HI_REGS:16005,16005 CALLER_SAVE_REGS:16005,16005 EVEN_REG:16005,16005 GENERAL_REGS:16005,16005 VFP_LO_REGS:1034,1034 ALL_REGS:11429,11429 MEM:10857,10857
  a159(r1054,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:220,220 ALL_REGS:3300,3300 MEM:3300,3300
  a160(r1053,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:440,440 ALL_REGS:3520,3520 MEM:3410,3410
  a161(r353,l1) costs: LO_REGS:9608,9608 HI_REGS:9608,9608 CALLER_SAVE_REGS:9608,9608 EVEN_REG:9608,9608 GENERAL_REGS:9608,9608 VFP_LO_REGS:2009,2009 ALL_REGS:7894,7894 MEM:7427,7427
  a162(r1052,l1) costs: GENERAL_REGS:128,128 VFP_D0_D7_REGS:1440,1440 VFP_LO_REGS:1440,1440 ALL_REGS:1024,1024 MEM:992,992
  a163(r283,l1) costs: GENERAL_REGS:64,64 VFP_D0_D7_REGS:1920,1920 VFP_LO_REGS:1920,1920 ALL_REGS:1440,1440 MEM:1280,1280
  a164(r1051,l1) costs: LO_REGS:128,128 HI_REGS:384,384 CALLER_SAVE_REGS:384,384 EVEN_REG:384,384 GENERAL_REGS:256,256 VFP_D0_D7_REGS:2880,2880 VFP_LO_REGS:2880,2880 ALL_REGS:1920,1920 MEM:1920,1920
  a165(r1050,l1) costs: GENERAL_REGS:128,128 VFP_D0_D7_REGS:2880,2880 VFP_LO_REGS:2880,2880 ALL_REGS:1920,1920 MEM:1920,1920
  a166(r1049,l1) costs: GENERAL_REGS:180,180 VFP_D0_D7_REGS:2025,2025 VFP_LO_REGS:2025,2025 ALL_REGS:1440,1440 MEM:1395,1395
  a167(r984,l1) costs: GENERAL_REGS:0,1780 VFP_D0_D7_REGS:1455,28155 VFP_LO_REGS:1455,28155 ALL_REGS:1455,14805 MEM:970,18770
  a168(r394,l1) costs: GENERAL_REGS:0,26700 VFP_D0_D7_REGS:1455,41505 VFP_LO_REGS:1455,41505 ALL_REGS:1455,54855 MEM:970,41020
  a169(r983,l1) costs: LO_REGS:0,0 HI_REGS:194,194 CALLER_SAVE_REGS:194,194 EVEN_REG:194,194 GENERAL_REGS:194,194 VFP_D0_D7_REGS:1455,19245 VFP_LO_REGS:1455,19245 ALL_REGS:1455,19245 MEM:970,12830
  a170(r982,l1) costs: LO_REGS:0,0 HI_REGS:194,194 CALLER_SAVE_REGS:194,194 EVEN_REG:194,194 GENERAL_REGS:194,194 VFP_D0_D7_REGS:1455,10335 VFP_LO_REGS:1455,10335 ALL_REGS:1455,10335 MEM:970,6890
  a171(r429,l1) costs: GENERAL_REGS:2910,2910 VFP_D0_D7_REGS:1455,14805 VFP_LO_REGS:1455,14805 ALL_REGS:2910,16260 MEM:2425,11325
  a172(r349,l1) costs: LO_REGS:7410,7410 HI_REGS:7410,7410 CALLER_SAVE_REGS:7410,7410 EVEN_REG:7410,7410 GENERAL_REGS:7410,7410 VFP_LO_REGS:3105,3105 ALL_REGS:7410,7410 MEM:5975,5975
  a173(r279,l1) costs: LO_REGS:1455,54855 HI_REGS:1455,54855 CALLER_SAVE_REGS:1455,54855 EVEN_REG:1455,54855 GENERAL_REGS:1455,54855 VFP_LO_REGS:0,13350 ALL_REGS:1455,54855 MEM:970,41020
  a174(r216,l1) costs: LO_REGS:1455,28095 HI_REGS:1455,28095 CALLER_SAVE_REGS:1455,28095 EVEN_REG:1455,28095 GENERAL_REGS:1455,28095 VFP_LO_REGS:0,0 ALL_REGS:1455,28095 MEM:970,18730
  a175(r364,l1) costs: LO_REGS:3105,3105 HI_REGS:3105,3105 CALLER_SAVE_REGS:3105,3105 EVEN_REG:3105,3105 GENERAL_REGS:3105,3105 VFP_LO_REGS:0,0 ALL_REGS:3105,3105 MEM:2070,2070
  a176(r347,l1) costs: LO_REGS:4755,4755 HI_REGS:4755,4755 CALLER_SAVE_REGS:4755,4755 EVEN_REG:4755,4755 GENERAL_REGS:4755,4755 VFP_LO_REGS:0,0 ALL_REGS:4755,4755 MEM:3170,3170
  a177(r173,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2460,29160 VFP_LO_REGS:2460,29160 ALL_REGS:2460,29160 MEM:1640,19440
  a178(r348,l1) costs: LO_REGS:9900,23250 HI_REGS:9900,23250 CALLER_SAVE_REGS:9900,23250 EVEN_REG:9900,23250 GENERAL_REGS:9900,23250 VFP_LO_REGS:0,0 ALL_REGS:9900,23250 MEM:6600,15500
  a179(r365,l1) costs: LO_REGS:2475,15825 HI_REGS:2475,15825 CALLER_SAVE_REGS:2475,15825 EVEN_REG:2475,15825 GENERAL_REGS:2475,15825 VFP_LO_REGS:0,0 ALL_REGS:2475,15825 MEM:1650,10550
  a180(r393,l1) costs: LO_REGS:1650,41700 HI_REGS:1650,41700 CALLER_SAVE_REGS:1650,41700 EVEN_REG:1650,41700 GENERAL_REGS:1650,41700 VFP_LO_REGS:0,0 ALL_REGS:1650,41700 MEM:1100,27800
  a181(r423,l1) costs: LO_REGS:2475,15825 HI_REGS:2475,15825 CALLER_SAVE_REGS:2475,15825 EVEN_REG:2475,15825 GENERAL_REGS:2475,15825 VFP_LO_REGS:0,0 ALL_REGS:2475,15825 MEM:1650,10550
  a182(r794,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:0,0
  a183(r1045,l1) costs: GENERAL_REGS:220,220 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3300,3300 MEM:3300,3300
  a184(r786,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:1650,1650 ALL_REGS:4950,4950 MEM:3850,3850
  a185(r787,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a186(r784,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a187(r785,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a188(r783,l1) costs: LO_REGS:390,390 HI_REGS:390,390 CALLER_SAVE_REGS:390,390 EVEN_REG:390,390 GENERAL_REGS:390,390 VFP_LO_REGS:0,0 ALL_REGS:390,390 MEM:260,260
  a189(r1044,l1) costs: LO_REGS:54,54 HI_REGS:162,162 CALLER_SAVE_REGS:162,162 EVEN_REG:162,162 GENERAL_REGS:108,108 VFP_D0_D7_REGS:1215,1215 VFP_LO_REGS:1215,1215 ALL_REGS:810,810 MEM:810,810
  a190(r181,l1) costs: GENERAL_REGS:888,888 VFP_D0_D7_REGS:15435,15435 VFP_LO_REGS:15435,15435 ALL_REGS:8775,8775 MEM:10290,10290
  a191(r1043,l1) costs: LO_REGS:110,110 HI_REGS:330,330 CALLER_SAVE_REGS:330,330 EVEN_REG:330,330 GENERAL_REGS:220,220 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:1650,1650 MEM:1650,1650
  a192(r776,l1) costs: GENERAL_REGS:1650,1650 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:4125,4125 MEM:3025,3025
  a193(r778,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a194(r777,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a195(r774,l1) costs: GENERAL_REGS:1650,1650 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:3300,3300 MEM:2475,2475
  a196(r773,l1) costs: LO_REGS:2475,2475 HI_REGS:2475,2475 CALLER_SAVE_REGS:2475,2475 EVEN_REG:2475,2475 GENERAL_REGS:2475,2475 VFP_LO_REGS:825,825 ALL_REGS:2475,2475 MEM:1925,1925
  a197(r366,l1) costs: LO_REGS:6600,6600 HI_REGS:6600,6600 CALLER_SAVE_REGS:6600,6600 EVEN_REG:6600,6600 GENERAL_REGS:6600,6600 VFP_LO_REGS:3300,3300 ALL_REGS:6600,6600 MEM:5500,5500
  a198(r398,l1) costs: LO_REGS:5153,43223 HI_REGS:5153,43223 CALLER_SAVE_REGS:5153,43223 EVEN_REG:5153,43223 GENERAL_REGS:5153,43223 VFP_LO_REGS:218,218 ALL_REGS:5153,43223 MEM:3508,28888
  a199(r772,l1) costs: LO_REGS:810,810 HI_REGS:810,810 CALLER_SAVE_REGS:810,810 EVEN_REG:810,810 GENERAL_REGS:810,810 VFP_LO_REGS:0,0 ALL_REGS:810,810 MEM:540,540
  a200(r1042,l1) costs: LO_REGS:110,110 HI_REGS:330,330 CALLER_SAVE_REGS:330,330 EVEN_REG:330,330 GENERAL_REGS:220,220 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:1650,1650 MEM:1650,1650
  a201(r767,l1) costs: GENERAL_REGS:1650,1650 VFP_D0_D7_REGS:3300,3300 VFP_LO_REGS:3300,3300 ALL_REGS:4125,4125 MEM:3025,3025
  a202(r769,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a203(r768,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a204(r765,l1) costs: GENERAL_REGS:1650,1650 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:3300,3300 MEM:2475,2475
  a205(r764,l1) costs: LO_REGS:2475,2475 HI_REGS:2475,2475 CALLER_SAVE_REGS:2475,2475 EVEN_REG:2475,2475 GENERAL_REGS:2475,2475 VFP_LO_REGS:825,825 ALL_REGS:2475,2475 MEM:1925,1925
  a206(r397,l1) costs: LO_REGS:6570,44640 HI_REGS:6570,44640 CALLER_SAVE_REGS:6570,44640 EVEN_REG:6570,44640 GENERAL_REGS:6570,44640 VFP_LO_REGS:54,54 ALL_REGS:6624,44694 MEM:4407,29787
  a207(r763,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a208(r227,l1) costs: LO_REGS:4950,4950 HI_REGS:5170,5170 CALLER_SAVE_REGS:5170,5170 EVEN_REG:5170,5170 GENERAL_REGS:5170,5170 VFP_D0_D7_REGS:6600,6600 VFP_LO_REGS:6600,6600 ALL_REGS:8250,8250 MEM:6600,6600
  a209(r748,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:4125,4125 VFP_LO_REGS:4125,4125 ALL_REGS:4125,4125 MEM:2750,2750
  a210(r752,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:0,0 ALL_REGS:4950,4950 MEM:3300,3300
  a211(r760,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_LO_REGS:0,0 ALL_REGS:1650,1650 MEM:1100,1100
  a212(r759,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_LO_REGS:0,0 ALL_REGS:1650,1650 MEM:1100,1100
  a213(r757,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_LO_REGS:0,0 ALL_REGS:1650,1650 MEM:1100,1100
  a214(r756,l1) costs: LO_REGS:2475,2475 HI_REGS:2475,2475 CALLER_SAVE_REGS:2475,2475 EVEN_REG:2475,2475 GENERAL_REGS:2475,2475 VFP_LO_REGS:825,825 ALL_REGS:2475,2475 MEM:1925,1925
  a215(r755,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_LO_REGS:0,0 ALL_REGS:1650,1650 MEM:1100,1100
  a216(r754,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_LO_REGS:0,0 ALL_REGS:1650,1650 MEM:1100,1100
  a217(r751,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a218(r750,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a219(r749,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a220(r747,l1) costs: LO_REGS:1650,1650 HI_REGS:1650,1650 CALLER_SAVE_REGS:1650,1650 EVEN_REG:1650,1650 GENERAL_REGS:1650,1650 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:3300,3300 MEM:2200,2200
  a221(r340,l1) costs: LO_REGS:9075,9075 HI_REGS:9075,9075 CALLER_SAVE_REGS:9075,9075 EVEN_REG:9075,9075 GENERAL_REGS:9075,9075 VFP_LO_REGS:440,440 ALL_REGS:7645,7645 MEM:6160,6160
  a222(r1041,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:220,220 ALL_REGS:3300,3300 MEM:3300,3300
  a223(r345,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2460,2460 VFP_LO_REGS:2460,2460 ALL_REGS:2460,2460 MEM:1640,1640
  a224(r362,l1) costs: LO_REGS:4125,4125 HI_REGS:4125,4125 CALLER_SAVE_REGS:4125,4125 EVEN_REG:4125,4125 GENERAL_REGS:4125,4125 VFP_LO_REGS:220,220 ALL_REGS:4345,4345 MEM:2860,2860
  a225(r402,l1) costs: LO_REGS:4345,42415 HI_REGS:4345,42415 CALLER_SAVE_REGS:4345,42415 EVEN_REG:4345,42415 GENERAL_REGS:4345,42415 VFP_LO_REGS:220,220 ALL_REGS:4345,42415 MEM:2970,28350
  a226(r403,l1) costs: LO_REGS:5775,43845 HI_REGS:5775,43845 CALLER_SAVE_REGS:5775,43845 EVEN_REG:5775,43845 GENERAL_REGS:5775,43845 VFP_LO_REGS:110,110 ALL_REGS:5885,43955 MEM:3905,29285
  a227(r1040,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a228(r1039,l1) costs: LO_REGS:1870,1870 HI_REGS:1870,1870 CALLER_SAVE_REGS:1870,1870 EVEN_REG:1870,1870 GENERAL_REGS:1870,1870 VFP_D0_D7_REGS:1870,1870 VFP_LO_REGS:1870,1870 ALL_REGS:3300,3300 MEM:4400,4400
  a229(r1038,l1) costs: LO_REGS:1870,1870 HI_REGS:1870,1870 CALLER_SAVE_REGS:1870,1870 EVEN_REG:1870,1870 GENERAL_REGS:1870,1870 VFP_D0_D7_REGS:1870,1870 VFP_LO_REGS:1870,1870 ALL_REGS:3300,3300 MEM:4400,4400
  a230(r743,l1) costs: LO_REGS:6600,6600 HI_REGS:6600,6600 CALLER_SAVE_REGS:6600,6600 EVEN_REG:6600,6600 GENERAL_REGS:6600,6600 VFP_LO_REGS:3300,3300 ALL_REGS:6600,6600 MEM:5500,5500
  a231(r221,l1) costs: LO_REGS:11550,11550 HI_REGS:11550,11550 CALLER_SAVE_REGS:11550,11550 EVEN_REG:11550,11550 GENERAL_REGS:11550,11550 VFP_LO_REGS:6600,6600 ALL_REGS:11550,11550 MEM:9900,9900
  a232(r222,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:0,0 ALL_REGS:4950,4950 MEM:3300,3300
  a233(r195,l1) costs: LO_REGS:8455,8455 HI_REGS:8455,8455 CALLER_SAVE_REGS:8455,8455 EVEN_REG:8455,8455 GENERAL_REGS:8455,8455 VFP_LO_REGS:220,220 ALL_REGS:8455,8455 MEM:5710,5710
  a234(r193,l1) costs: LO_REGS:8453,8453 HI_REGS:8453,8453 CALLER_SAVE_REGS:8453,8453 EVEN_REG:8453,8453 GENERAL_REGS:8453,8453 VFP_LO_REGS:218,218 ALL_REGS:8453,8453 MEM:5708,5708
  a235(r986,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,5580 VFP_LO_REGS:1650,5580 ALL_REGS:1650,5580 MEM:1100,3720
  a236(r420,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2310,27030 VFP_LO_REGS:2310,27030 ALL_REGS:2310,27030 MEM:1540,18020
  a237(r354,l1) costs: LO_REGS:1650,55050 HI_REGS:1650,55050 CALLER_SAVE_REGS:1650,55050 EVEN_REG:1650,55050 GENERAL_REGS:1650,55050 VFP_LO_REGS:0,0 ALL_REGS:1650,55050 MEM:1100,36700
  a238(r363,l1) costs: LO_REGS:1635,13995 HI_REGS:1635,13995 CALLER_SAVE_REGS:1635,13995 EVEN_REG:1635,13995 GENERAL_REGS:1635,13995 VFP_LO_REGS:0,0 ALL_REGS:1635,13995 MEM:1090,9330
  a239(r404,l1) costs: LO_REGS:6165,18525 HI_REGS:6165,18525 CALLER_SAVE_REGS:6165,18525 EVEN_REG:6165,18525 GENERAL_REGS:6165,18525 VFP_LO_REGS:825,825 ALL_REGS:6165,18525 MEM:4385,12625
  a240(r220,l1) costs: LO_REGS:0,0 HI_REGS:0,262 CALLER_SAVE_REGS:0,262 EVEN_REG:0,262 GENERAL_REGS:0,262 VFP_D0_D7_REGS:975,4905 VFP_LO_REGS:975,4905 ALL_REGS:975,4905 MEM:650,3270
  a241(r734,l1) costs: LO_REGS:864,864 HI_REGS:864,864 CALLER_SAVE_REGS:864,864 EVEN_REG:864,864 GENERAL_REGS:864,864 VFP_LO_REGS:54,54 ALL_REGS:864,864 MEM:594,594
  a242(r183,l1) costs: LO_REGS:6788,6788 HI_REGS:6788,6788 CALLER_SAVE_REGS:6788,6788 EVEN_REG:6788,6788 GENERAL_REGS:6788,6788 VFP_LO_REGS:218,218 ALL_REGS:6788,6788 MEM:4598,4598
  a243(r735,l1) costs: LO_REGS:405,405 HI_REGS:405,405 CALLER_SAVE_REGS:405,405 EVEN_REG:405,405 GENERAL_REGS:405,405 VFP_D0_D7_REGS:405,405 VFP_LO_REGS:405,405 ALL_REGS:810,810 MEM:540,540
  a244(r1037,l1) costs: GENERAL_REGS:108,108 VFP_D0_D7_REGS:1215,1215 VFP_LO_REGS:1215,1215 ALL_REGS:864,864 MEM:837,837
  a245(r729,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:810,810 VFP_LO_REGS:810,810 ALL_REGS:810,810 MEM:540,540
  a246(r727,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:810,810 VFP_LO_REGS:810,810 ALL_REGS:810,810 MEM:540,540
  a247(r721,l1) costs: LO_REGS:2624,2624 HI_REGS:2624,2624 CALLER_SAVE_REGS:2624,2624 EVEN_REG:2624,2624 GENERAL_REGS:2624,2624 VFP_LO_REGS:164,164 ALL_REGS:2624,2624 MEM:1804,1804
  a248(r720,l1) costs: LO_REGS:1230,1230 HI_REGS:1230,1230 CALLER_SAVE_REGS:1230,1230 EVEN_REG:1230,1230 GENERAL_REGS:1230,1230 VFP_D0_D7_REGS:1230,1230 VFP_LO_REGS:1230,1230 ALL_REGS:2460,2460 MEM:1640,1640
  a249(r716,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2460,2460 VFP_LO_REGS:2460,2460 ALL_REGS:2460,2460 MEM:1640,1640
  a250(r1036,l1) costs: LO_REGS:110,110 HI_REGS:330,330 CALLER_SAVE_REGS:330,330 EVEN_REG:330,330 GENERAL_REGS:220,220 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:1650,1650 MEM:1650,1650
  a251(r1035,l1) costs: LO_REGS:220,220 HI_REGS:660,660 CALLER_SAVE_REGS:660,660 EVEN_REG:660,660 GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3300,3300 MEM:3300,3300
  a252(r1034,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a253(r1033,l1) costs: LO_REGS:1870,1870 HI_REGS:1870,1870 CALLER_SAVE_REGS:1870,1870 EVEN_REG:1870,1870 GENERAL_REGS:1870,1870 VFP_D0_D7_REGS:1870,1870 VFP_LO_REGS:1870,1870 ALL_REGS:3300,3300 MEM:4400,4400
  a254(r1032,l1) costs: LO_REGS:1870,1870 HI_REGS:1870,1870 CALLER_SAVE_REGS:1870,1870 EVEN_REG:1870,1870 GENERAL_REGS:1870,1870 VFP_D0_D7_REGS:1870,1870 VFP_LO_REGS:1870,1870 ALL_REGS:3300,3300 MEM:4400,4400
  a255(r704,l1) costs: LO_REGS:6600,6600 HI_REGS:6600,6600 CALLER_SAVE_REGS:6600,6600 EVEN_REG:6600,6600 GENERAL_REGS:6600,6600 VFP_LO_REGS:3300,3300 ALL_REGS:6600,6600 MEM:5500,5500
  a256(r200,l1) costs: LO_REGS:11550,11550 HI_REGS:11550,11550 CALLER_SAVE_REGS:11550,11550 EVEN_REG:11550,11550 GENERAL_REGS:11550,11550 VFP_LO_REGS:6600,6600 ALL_REGS:11550,11550 MEM:9900,9900
  a257(r1072,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a258(r201,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:0,0 ALL_REGS:4950,4950 MEM:3300,3300
  a259(r1073,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a260(r988,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,5580 VFP_LO_REGS:1650,5580 ALL_REGS:1650,5580 MEM:1100,3720
  a261(r341,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2310,27030 VFP_LO_REGS:2310,27030 ALL_REGS:2310,27030 MEM:1540,18020
  a262(r703,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a263(r360,l1) costs: LO_REGS:4950,17310 HI_REGS:4950,17310 CALLER_SAVE_REGS:4950,17310 EVEN_REG:4950,17310 GENERAL_REGS:4950,17310 VFP_LO_REGS:825,825 ALL_REGS:4950,17310 MEM:3575,11815
  a264(r361,l1) costs: LO_REGS:1650,14010 HI_REGS:1650,14010 CALLER_SAVE_REGS:1650,14010 EVEN_REG:1650,14010 GENERAL_REGS:1650,14010 VFP_LO_REGS:0,0 ALL_REGS:1650,14010 MEM:1100,9340
  a265(r199,l1) costs: LO_REGS:0,0 HI_REGS:0,262 CALLER_SAVE_REGS:0,262 EVEN_REG:0,262 GENERAL_REGS:0,262 VFP_D0_D7_REGS:975,4905 VFP_LO_REGS:975,4905 ALL_REGS:975,4905 MEM:650,3270
  a266(r359,l1) costs: LO_REGS:5170,5170 HI_REGS:5170,5170 CALLER_SAVE_REGS:5170,5170 EVEN_REG:5170,5170 GENERAL_REGS:5170,5170 VFP_LO_REGS:220,220 ALL_REGS:5170,5170 MEM:3520,3520
  a267(r695,l1) costs: LO_REGS:1760,1760 HI_REGS:1760,1760 CALLER_SAVE_REGS:1760,1760 EVEN_REG:1760,1760 GENERAL_REGS:1760,1760 VFP_LO_REGS:110,110 ALL_REGS:1760,1760 MEM:1210,1210
  a268(r692,l1) costs: LO_REGS:825,825 HI_REGS:825,825 CALLER_SAVE_REGS:825,825 EVEN_REG:825,825 GENERAL_REGS:825,825 VFP_D0_D7_REGS:825,825 VFP_LO_REGS:825,825 ALL_REGS:1650,1650 MEM:1100,1100
  a269(r688,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a270(r682,l1) costs: LO_REGS:825,825 HI_REGS:825,825 CALLER_SAVE_REGS:825,825 EVEN_REG:825,825 GENERAL_REGS:825,825 VFP_D0_D7_REGS:825,825 VFP_LO_REGS:825,825 ALL_REGS:1650,1650 MEM:1100,1100
  a271(r681,l1) costs: LO_REGS:1760,1760 HI_REGS:1760,1760 CALLER_SAVE_REGS:1760,1760 EVEN_REG:1760,1760 GENERAL_REGS:1760,1760 VFP_LO_REGS:110,110 ALL_REGS:1760,1760 MEM:1210,1210
  a272(r1031,l1) costs: GENERAL_REGS:220,220 VFP_D0_D7_REGS:2475,2475 VFP_LO_REGS:2475,2475 ALL_REGS:1760,1760 MEM:1705,1705
  a273(r674,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a274(r672,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1650,1650 VFP_LO_REGS:1650,1650 ALL_REGS:1650,1650 MEM:1100,1100
  a275(r1030,l1) costs: LO_REGS:220,220 HI_REGS:660,660 CALLER_SAVE_REGS:660,660 EVEN_REG:660,660 GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3300,3300 MEM:3300,3300
  a276(r664,l1) costs: LO_REGS:3300,3300 HI_REGS:3300,3300 CALLER_SAVE_REGS:3300,3300 EVEN_REG:3300,3300 GENERAL_REGS:3300,3300 VFP_LO_REGS:0,0 ALL_REGS:3300,3300 MEM:2200,2200
  a277(r1029,l1) costs: LO_REGS:4950,4950 HI_REGS:4950,4950 CALLER_SAVE_REGS:4950,4950 EVEN_REG:4950,4950 GENERAL_REGS:4950,4950 VFP_LO_REGS:220,220 ALL_REGS:3300,3300 MEM:3300,3300
  a278(r1028,l1) costs: GENERAL_REGS:64,64 VFP_D0_D7_REGS:1440,1440 VFP_LO_REGS:1440,1440 ALL_REGS:960,960 MEM:960,960
  a279(r1027,l1) costs: GENERAL_REGS:128,128 VFP_D0_D7_REGS:1440,1440 VFP_LO_REGS:1440,1440 ALL_REGS:1024,1024 MEM:992,992
  a280(r1026,l1) costs: LO_REGS:128,128 HI_REGS:384,384 CALLER_SAVE_REGS:384,384 EVEN_REG:384,384 GENERAL_REGS:256,256 VFP_D0_D7_REGS:2880,2880 VFP_LO_REGS:2880,2880 ALL_REGS:1920,1920 MEM:1920,1920
  a281(r1025,l1) costs: GENERAL_REGS:128,128 VFP_D0_D7_REGS:2880,2880 VFP_LO_REGS:2880,2880 ALL_REGS:1920,1920 MEM:1920,1920
  a282(r1024,l1) costs: GENERAL_REGS:90,90 VFP_D0_D7_REGS:2025,2025 VFP_LO_REGS:2025,2025 ALL_REGS:1350,1350 MEM:1350,1350
  a283(r1023,l1) costs: GENERAL_REGS:180,180 VFP_D0_D7_REGS:2025,2025 VFP_LO_REGS:2025,2025 ALL_REGS:1440,1440 MEM:1395,1395
  a284(r1022,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3520,3520 MEM:3410,3410
  a285(r651,l1) costs: GENERAL_REGS:220,220 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3300,3300 MEM:3300,3300
  a286(r1021,l1) costs: GENERAL_REGS:440,440 VFP_D0_D7_REGS:6600,6600 VFP_LO_REGS:6600,6600 ALL_REGS:3300,3300 MEM:4400,4400
  a287(r1020,l1) costs: GENERAL_REGS:220,220 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:3300,3300 MEM:3300,3300
  a288(r339,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a289(r355,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a290(r356,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a291(r368,l6) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a292(r370,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a293(r372,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a294(r373,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a295(r374,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a296(r375,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a297(r389,l6) costs: GENERAL_REGS:28480,28480 VFP_D0_D7_REGS:93450,93450 VFP_LO_REGS:93450,93450 ALL_REGS:93450,93450 MEM:75650,75650
  a298(r463,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a299(r915,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a300(r967,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a301(r968,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a302(r969,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a303(r970,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a304(r971,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a305(r972,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a306(r979,l6) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a307(r987,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a308(r989,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a309(r990,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a310(r992,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a311(r993,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a312(r1068,l6) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a313(r957,l6) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a314(r1067,l6) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a315(r955,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a316(r951,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a317(r947,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a318(r954,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a319(r928,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:66750,66750 VFP_LO_REGS:66750,66750 ALL_REGS:66750,66750 MEM:44500,44500
  a320(r950,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a321(r457,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a322(r946,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a323(r452,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a324(r1066,l6) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a325(r941,l6) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a326(r1065,l6) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a327(r939,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a328(r935,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a329(r931,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a330(r938,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a331(r930,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a332(r934,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a333(r925,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a334(r924,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:26700,26700 MEM:17800,17800
  a335(r919,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:26700,26700 MEM:17800,17800
  a336(r923,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a337(r922,l6) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a338(r918,l6) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a339(r917,l6) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a340(r921,l6) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a341(r916,l6) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a342(r475,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:0,0 ALL_REGS:40050,40050 MEM:26700,26700
  a343(r914,l6) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a344(r913,l6) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a345(r339,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a346(r355,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a347(r356,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a348(r368,l5) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a349(r370,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a350(r372,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a351(r373,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a352(r374,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a353(r375,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a354(r389,l5) costs: GENERAL_REGS:28480,28480 VFP_D0_D7_REGS:93450,93450 VFP_LO_REGS:93450,93450 ALL_REGS:93450,93450 MEM:75650,75650
  a355(r463,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a356(r860,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a357(r967,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a358(r968,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a359(r969,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a360(r970,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a361(r971,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a362(r972,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a363(r981,l5) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a364(r987,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a365(r989,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a366(r990,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a367(r992,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a368(r993,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a369(r1064,l5) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a370(r908,l5) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a371(r1063,l5) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a372(r906,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a373(r901,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a374(r896,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a375(r380,l5) costs: LO_REGS:93450,93450 HI_REGS:93450,93450 CALLER_SAVE_REGS:93450,93450 EVEN_REG:93450,93450 GENERAL_REGS:93450,93450 VFP_LO_REGS:0,0 ALL_REGS:93450,93450 MEM:62300,62300
  a376(r905,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a377(r900,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a378(r895,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a379(r904,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a380(r873,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:66750,66750 VFP_LO_REGS:66750,66750 ALL_REGS:66750,66750 MEM:44500,44500
  a381(r899,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a382(r309,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a383(r894,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a384(r314,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a385(r1062,l5) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a386(r889,l5) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a387(r1061,l5) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a388(r887,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a389(r882,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a390(r877,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a391(r886,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a392(r885,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a393(r876,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a394(r875,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a395(r881,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a396(r880,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a397(r1060,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:1780,1780 ALL_REGS:26700,26700 MEM:26700,26700
  a398(r870,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a399(r869,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:26700,26700 MEM:17800,17800
  a400(r864,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:26700,26700 MEM:17800,17800
  a401(r868,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a402(r867,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a403(r863,l5) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a404(r862,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a405(r866,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a406(r861,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a407(r296,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:0,0 ALL_REGS:40050,40050 MEM:26700,26700
  a408(r859,l5) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a409(r858,l5) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a410(r173,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:26700,26700 MEM:17800,17800
  a411(r216,l4) costs: LO_REGS:26640,26640 HI_REGS:26640,26640 CALLER_SAVE_REGS:26640,26640 EVEN_REG:26640,26640 GENERAL_REGS:26640,26640 VFP_LO_REGS:0,0 ALL_REGS:26640,26640 MEM:17760,17760
  a412(r279,l4) costs: LO_REGS:53400,53400 HI_REGS:53400,53400 CALLER_SAVE_REGS:53400,53400 EVEN_REG:53400,53400 GENERAL_REGS:53400,53400 VFP_LO_REGS:13350,13350 ALL_REGS:53400,53400 MEM:40050,40050
  a413(r339,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a414(r346,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a415(r348,l4) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a416(r355,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a417(r356,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a418(r365,l4) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a419(r368,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:13350,13350 MEM:17800,17800
  a420(r389,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a421(r393,l4) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:0,0 ALL_REGS:40050,40050 MEM:26700,26700
  a422(r394,l4) costs: GENERAL_REGS:26700,26700 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:53400,53400 MEM:40050,40050
  a423(r423,l4) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_LO_REGS:0,0 ALL_REGS:13350,13350 MEM:8900,8900
  a424(r429,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:13350,13350 MEM:8900,8900
  a425(r463,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a426(r967,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a427(r970,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a428(r971,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a429(r972,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a430(r982,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:8880,8880 VFP_LO_REGS:8880,8880 ALL_REGS:8880,8880 MEM:5920,5920
  a431(r983,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:17790,17790 VFP_LO_REGS:17790,17790 ALL_REGS:17790,17790 MEM:11860,11860
  a432(r984,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:26700,26700 VFP_LO_REGS:26700,26700 ALL_REGS:13350,13350 MEM:17800,17800
  a433(r987,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a434(r989,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a435(r990,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a436(r992,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a437(r993,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a438(r1048,l4) costs: GENERAL_REGS:3560,3560 VFP_D0_D7_REGS:53400,53400 VFP_LO_REGS:53400,53400 ALL_REGS:26700,26700 MEM:35600,35600
  a439(r834,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a440(r833,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a441(r1047,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a442(r350,l4) costs: GENERAL_REGS:19540,19540 VFP_D0_D7_REGS:42255,42255 VFP_LO_REGS:42255,42255 ALL_REGS:37785,37785 MEM:37050,37050
  a443(r352,l4) costs: GENERAL_REGS:19540,19540 VFP_D0_D7_REGS:62280,62280 VFP_LO_REGS:62280,62280 ALL_REGS:57810,57810 MEM:50400,50400
  a444(r1046,l4) costs: GENERAL_REGS:1780,1780 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:26700,26700 MEM:26700,26700
  a445(r351,l4) costs: GENERAL_REGS:19540,19540 VFP_D0_D7_REGS:42255,42255 VFP_LO_REGS:42255,42255 ALL_REGS:37785,37785 MEM:37050,37050
  a446(r830,l4) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a447(r829,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a448(r824,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a449(r819,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a450(r828,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a451(r823,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a452(r818,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a453(r827,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a454(r822,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a455(r817,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a456(r821,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:22230,22230 VFP_LO_REGS:22230,22230 ALL_REGS:22230,22230 MEM:14820,14820
  a457(r801,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40020,40020 VFP_LO_REGS:40020,40020 ALL_REGS:40020,40020 MEM:26680,26680
  a458(r815,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a459(r810,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a460(r805,l4) costs: LO_REGS:13320,13320 HI_REGS:13320,13320 CALLER_SAVE_REGS:13320,13320 EVEN_REG:13320,13320 GENERAL_REGS:13320,13320 VFP_LO_REGS:4440,4440 ALL_REGS:13320,13320 MEM:10360,10360
  a461(r814,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a462(r809,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a463(r804,l4) costs: LO_REGS:8880,8880 HI_REGS:8880,8880 CALLER_SAVE_REGS:8880,8880 EVEN_REG:8880,8880 GENERAL_REGS:8880,8880 VFP_LO_REGS:0,0 ALL_REGS:8880,8880 MEM:5920,5920
  a464(r813,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a465(r808,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a466(r807,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:13320,13320 VFP_LO_REGS:13320,13320 ALL_REGS:13320,13320 MEM:8880,8880
  a467(r803,l4) costs: LO_REGS:4440,4440 HI_REGS:4440,4440 CALLER_SAVE_REGS:4440,4440 EVEN_REG:4440,4440 GENERAL_REGS:4440,4440 VFP_D0_D7_REGS:4440,4440 VFP_LO_REGS:4440,4440 ALL_REGS:8880,8880 MEM:5920,5920
  a468(r798,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:40050,40050 VFP_LO_REGS:40050,40050 ALL_REGS:40050,40050 MEM:26700,26700
  a469(r796,l4) costs: LO_REGS:13350,13350 HI_REGS:13350,13350 CALLER_SAVE_REGS:13350,13350 EVEN_REG:13350,13350 GENERAL_REGS:13350,13350 VFP_D0_D7_REGS:13350,13350 VFP_LO_REGS:13350,13350 ALL_REGS:26700,26700 MEM:17800,17800
  a470(r181,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a471(r193,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a472(r195,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a473(r339,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a474(r345,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a475(r346,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a476(r354,l3) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a477(r355,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a478(r356,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a479(r362,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a480(r363,l3) costs: LO_REGS:12360,12360 HI_REGS:12360,12360 CALLER_SAVE_REGS:12360,12360 EVEN_REG:12360,12360 GENERAL_REGS:12360,12360 VFP_LO_REGS:0,0 ALL_REGS:12360,12360 MEM:8240,8240
  a481(r397,l3) costs: LO_REGS:38070,38070 HI_REGS:38070,38070 CALLER_SAVE_REGS:38070,38070 EVEN_REG:38070,38070 GENERAL_REGS:38070,38070 VFP_LO_REGS:0,0 ALL_REGS:38070,38070 MEM:25380,25380
  a482(r398,l3) costs: LO_REGS:38070,38070 HI_REGS:38070,38070 CALLER_SAVE_REGS:38070,38070 EVEN_REG:38070,38070 GENERAL_REGS:38070,38070 VFP_LO_REGS:0,0 ALL_REGS:38070,38070 MEM:25380,25380
  a483(r402,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a484(r403,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a485(r404,l3) costs: LO_REGS:12360,12360 HI_REGS:12360,12360 CALLER_SAVE_REGS:12360,12360 EVEN_REG:12360,12360 GENERAL_REGS:12360,12360 VFP_LO_REGS:0,0 ALL_REGS:12360,12360 MEM:8240,8240
  a486(r418,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a487(r420,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:24720,24720 VFP_LO_REGS:24720,24720 ALL_REGS:24720,24720 MEM:16480,16480
  a488(r463,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a489(r967,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a490(r970,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a491(r971,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a492(r972,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a493(r986,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a494(r987,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a495(r989,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a496(r990,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a497(r992,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a498(r993,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a499(r220,l3) costs: LO_REGS:0,0 HI_REGS:262,262 CALLER_SAVE_REGS:262,262 EVEN_REG:262,262 GENERAL_REGS:262,262 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a500(r395,l3) costs: GENERAL_REGS:26700,26700 VFP_D0_D7_REGS:28664,28664 VFP_LO_REGS:28664,28664 ALL_REGS:42014,42014 MEM:32460,32460
  a501(r741,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:5894,5894 VFP_LO_REGS:5894,5894 ALL_REGS:5894,5894 MEM:3930,3930
  a502(r396,l3) costs: GENERAL_REGS:26700,26700 VFP_D0_D7_REGS:21210,21210 VFP_LO_REGS:21210,21210 ALL_REGS:34560,34560 MEM:27490,27490
  a503(r737,l3) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a504(r1077,l3) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a505(r736,l3) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a506(r1076,l3) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a507(r181,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a508(r183,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a509(r193,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a510(r195,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a511(r339,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a512(r341,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:24720,24720 VFP_LO_REGS:24720,24720 ALL_REGS:24720,24720 MEM:16480,16480
  a513(r346,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a514(r354,l2) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a515(r355,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a516(r356,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a517(r360,l2) costs: LO_REGS:12360,12360 HI_REGS:12360,12360 CALLER_SAVE_REGS:12360,12360 EVEN_REG:12360,12360 GENERAL_REGS:12360,12360 VFP_LO_REGS:0,0 ALL_REGS:12360,12360 MEM:8240,8240
  a518(r361,l2) costs: LO_REGS:12360,12360 HI_REGS:12360,12360 CALLER_SAVE_REGS:12360,12360 EVEN_REG:12360,12360 GENERAL_REGS:12360,12360 VFP_LO_REGS:0,0 ALL_REGS:12360,12360 MEM:8240,8240
  a519(r402,l2) costs: LO_REGS:38070,38070 HI_REGS:38070,38070 CALLER_SAVE_REGS:38070,38070 EVEN_REG:38070,38070 GENERAL_REGS:38070,38070 VFP_LO_REGS:0,0 ALL_REGS:38070,38070 MEM:25380,25380
  a520(r403,l2) costs: LO_REGS:38070,38070 HI_REGS:38070,38070 CALLER_SAVE_REGS:38070,38070 EVEN_REG:38070,38070 GENERAL_REGS:38070,38070 VFP_LO_REGS:0,0 ALL_REGS:38070,38070 MEM:25380,25380
  a521(r404,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a522(r416,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a523(r418,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a524(r463,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a525(r967,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a526(r970,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a527(r971,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a528(r972,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a529(r987,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a530(r988,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a531(r989,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a532(r990,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a533(r992,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a534(r993,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a535(r199,l2) costs: LO_REGS:0,0 HI_REGS:262,262 CALLER_SAVE_REGS:262,262 EVEN_REG:262,262 GENERAL_REGS:262,262 VFP_D0_D7_REGS:3930,3930 VFP_LO_REGS:3930,3930 ALL_REGS:3930,3930 MEM:2620,2620
  a536(r400,l2) costs: GENERAL_REGS:26700,26700 VFP_D0_D7_REGS:28664,28664 VFP_LO_REGS:28664,28664 ALL_REGS:42014,42014 MEM:32460,32460
  a537(r701,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:5894,5894 VFP_LO_REGS:5894,5894 ALL_REGS:5894,5894 MEM:3930,3930
  a538(r401,l2) costs: GENERAL_REGS:26700,26700 VFP_D0_D7_REGS:21210,21210 VFP_LO_REGS:21210,21210 ALL_REGS:34560,34560 MEM:27490,27490
  a539(r697,l2) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a540(r1075,l2) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800
  a541(r696,l2) costs: LO_REGS:40050,40050 HI_REGS:40050,40050 CALLER_SAVE_REGS:40050,40050 EVEN_REG:40050,40050 GENERAL_REGS:40050,40050 VFP_LO_REGS:13350,13350 ALL_REGS:40050,40050 MEM:31150,31150
  a542(r1074,l2) costs: LO_REGS:26700,26700 HI_REGS:26700,26700 CALLER_SAVE_REGS:26700,26700 EVEN_REG:26700,26700 GENERAL_REGS:26700,26700 VFP_LO_REGS:0,0 ALL_REGS:26700,26700 MEM:17800,17800

   Insn 1827(l0): point = 0
   Insn 1826(l0): point = 2
   Insn 2185(l0): point = 5
   Insn 1472(l0): point = 8
   Insn 1445(l0): point = 10
   Insn 632(l0): point = 12
   Insn 581(l0): point = 14
   Insn 12(l0): point = 16
   Insn 770(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 555(l0): point = 25
   Insn 545(l0): point = 28
   Insn 544(l0): point = 30
   Insn 543(l0): point = 32
   Insn 537(l0): point = 34
   Insn 536(l0): point = 36
   Insn 541(l0): point = 38
   Insn 533(l0): point = 40
   Insn 532(l0): point = 42
   Insn 531(l0): point = 44
   Insn 539(l0): point = 46
   Insn 538(l0): point = 48
   Insn 530(l0): point = 50
   Insn 535(l0): point = 52
   Insn 529(l0): point = 55
   Insn 528(l0): point = 58
   Insn 2137(l0): point = 61
   Insn 523(l0): point = 63
   Insn 522(l0): point = 65
   Insn 520(l0): point = 68
   Insn 519(l0): point = 70
   Insn 2058(l0): point = 72
   Insn 516(l0): point = 74
   Insn 515(l0): point = 76
   Insn 503(l0): point = 79
   Insn 501(l0): point = 81
   Insn 499(l0): point = 84
   Insn 500(l0): point = 86
   Insn 497(l0): point = 88
   Insn 2057(l0): point = 90
   Insn 496(l0): point = 92
   Insn 495(l0): point = 94
   Insn 2135(l0): point = 97
   Insn 489(l0): point = 99
   Insn 487(l0): point = 101
   Insn 2056(l0): point = 103
   Insn 486(l0): point = 105
   Insn 485(l0): point = 107
   Insn 483(l0): point = 110
   Insn 481(l0): point = 112
   Insn 479(l0): point = 114
   Insn 477(l0): point = 116
   Insn 476(l0): point = 118
   Insn 475(l0): point = 120
   Insn 473(l0): point = 122
   Insn 471(l0): point = 124
   Insn 468(l0): point = 126
   Insn 470(l0): point = 128
   Insn 467(l0): point = 130
   Insn 466(l0): point = 132
   Insn 461(l0): point = 135
   Insn 459(l0): point = 137
   Insn 457(l0): point = 140
   Insn 458(l0): point = 142
   Insn 455(l0): point = 144
   Insn 2055(l0): point = 146
   Insn 454(l0): point = 148
   Insn 453(l0): point = 150
   Insn 452(l0): point = 152
   Insn 2133(l0): point = 155
   Insn 445(l0): point = 157
   Insn 443(l0): point = 159
   Insn 2054(l0): point = 161
   Insn 442(l0): point = 163
   Insn 441(l0): point = 165
   Insn 440(l0): point = 167
   Insn 437(l0): point = 170
   Insn 435(l0): point = 172
   Insn 433(l0): point = 174
   Insn 431(l0): point = 176
   Insn 424(l0): point = 178
   Insn 423(l0): point = 180
   Insn 430(l0): point = 182
   Insn 429(l0): point = 184
   Insn 427(l0): point = 186
   Insn 421(l0): point = 188
   Insn 419(l0): point = 190
   Insn 420(l0): point = 192
   Insn 425(l0): point = 194
   Insn 2131(l0): point = 197
   Insn 413(l0): point = 199
   Insn 411(l0): point = 201
   Insn 409(l0): point = 203
   Insn 2053(l0): point = 205
   Insn 408(l0): point = 207
   Insn 406(l0): point = 209
   Insn 407(l0): point = 211
   Insn 2052(l0): point = 213
   Insn 405(l0): point = 215
   Insn 404(l0): point = 217
   Insn 403(l0): point = 219
   Insn 400(l0): point = 222
   Insn 399(l0): point = 224
   Insn 2051(l0): point = 226
   Insn 392(l0): point = 228
   Insn 391(l0): point = 230
   Insn 387(l0): point = 233
   Insn 385(l0): point = 235
   Insn 383(l0): point = 238
   Insn 384(l0): point = 240
   Insn 2050(l0): point = 242
   Insn 380(l0): point = 244
   Insn 379(l0): point = 246
   Insn 374(l0): point = 249
   Insn 372(l0): point = 251
   Insn 370(l0): point = 253
   Insn 368(l0): point = 255
   Insn 367(l0): point = 257
   Insn 366(l0): point = 259
   Insn 364(l0): point = 261
   Insn 362(l0): point = 263
   Insn 361(l0): point = 265
   Insn 359(l0): point = 267
   Insn 357(l0): point = 269
   Insn 358(l0): point = 271
   Insn 351(l0): point = 274
   Insn 349(l0): point = 276
   Insn 347(l0): point = 279
   Insn 348(l0): point = 281
   Insn 2049(l0): point = 283
   Insn 344(l0): point = 285
   Insn 343(l0): point = 287
   Insn 338(l0): point = 290
   Insn 336(l0): point = 292
   Insn 334(l0): point = 294
   Insn 332(l0): point = 296
   Insn 325(l0): point = 298
   Insn 324(l0): point = 300
   Insn 331(l0): point = 302
   Insn 330(l0): point = 304
   Insn 328(l0): point = 306
   Insn 322(l0): point = 308
   Insn 320(l0): point = 310
   Insn 326(l0): point = 312
   Insn 321(l0): point = 314
   Insn 313(l0): point = 317
   Insn 312(l0): point = 319
   Insn 2048(l0): point = 321
   Insn 305(l0): point = 323
   Insn 304(l0): point = 325
   Insn 1981(l0): point = 328
   Insn 2215(l0): point = 330
   Insn 2214(l0): point = 332
   Insn 5(l0): point = 335
   Insn 291(l0): point = 337
   Insn 2047(l0): point = 339
   Insn 290(l0): point = 341
   Insn 289(l0): point = 343
   Insn 2129(l0): point = 346
   Insn 4(l0): point = 348
   Insn 282(l0): point = 350
   Insn 2046(l0): point = 352
   Insn 281(l0): point = 354
   Insn 280(l0): point = 356
   Insn 275(l0): point = 359
   Insn 2217(l0): point = 361
   Insn 2216(l0): point = 363
   Insn 2045(l0): point = 365
   Insn 271(l0): point = 367
   Insn 270(l0): point = 369
   Insn 2126(l0): point = 372
   Insn 7(l0): point = 374
   Insn 6(l0): point = 376
   Insn 251(l0): point = 378
   Insn 243(l0): point = 381
   Insn 2044(l0): point = 383
   Insn 240(l0): point = 385
   Insn 238(l0): point = 387
   Insn 235(l0): point = 389
   Insn 234(l0): point = 391
   Insn 2123(l0): point = 394
   Insn 10(l0): point = 396
   Insn 9(l0): point = 398
   Insn 220(l0): point = 400
   Insn 219(l0): point = 402
   Insn 212(l0): point = 405
   Insn 2219(l0): point = 407
   Insn 2218(l0): point = 409
   Insn 210(l0): point = 411
   Insn 206(l0): point = 414
   Insn 204(l0): point = 416
   Insn 2043(l0): point = 418
   Insn 203(l0): point = 420
   Insn 200(l0): point = 422
   Insn 198(l0): point = 424
   Insn 196(l0): point = 426
   Insn 195(l0): point = 428
   Insn 2120(l0): point = 431
   Insn 188(l0): point = 433
   Insn 185(l0): point = 436
   Insn 184(l0): point = 438
   Insn 2042(l0): point = 440
   Insn 177(l0): point = 442
   Insn 176(l0): point = 444
   Insn 172(l0): point = 447
   Insn 2041(l0): point = 449
   Insn 170(l0): point = 451
   Insn 167(l0): point = 453
   Insn 165(l0): point = 455
   Insn 163(l0): point = 457
   Insn 162(l0): point = 459
   Insn 160(l0): point = 461
   Insn 2118(l0): point = 464
   Insn 1943(l0): point = 466
   Insn 157(l0): point = 469
   Insn 156(l0): point = 471
   Insn 2040(l0): point = 473
   Insn 149(l0): point = 475
   Insn 148(l0): point = 477
   Insn 2115(l0): point = 480
   Insn 142(l0): point = 482
   Insn 140(l0): point = 484
   Insn 2039(l0): point = 486
   Insn 139(l0): point = 488
   Insn 136(l0): point = 490
   Insn 134(l0): point = 492
   Insn 132(l0): point = 494
   Insn 131(l0): point = 496
   Insn 2113(l0): point = 499
   Insn 124(l0): point = 501
   Insn 121(l0): point = 504
   Insn 120(l0): point = 506
   Insn 2038(l0): point = 508
   Insn 113(l0): point = 510
   Insn 112(l0): point = 512
   Insn 108(l0): point = 515
   Insn 2037(l0): point = 517
   Insn 106(l0): point = 519
   Insn 103(l0): point = 521
   Insn 101(l0): point = 523
   Insn 99(l0): point = 525
   Insn 98(l0): point = 527
   Insn 96(l0): point = 529
   Insn 2111(l0): point = 532
   Insn 1942(l0): point = 534
   Insn 93(l0): point = 537
   Insn 92(l0): point = 539
   Insn 2036(l0): point = 541
   Insn 85(l0): point = 543
   Insn 84(l0): point = 545
   Insn 81(l0): point = 548
   Insn 80(l0): point = 550
   Insn 2035(l0): point = 552
   Insn 73(l0): point = 554
   Insn 69(l0): point = 556
   Insn 64(l0): point = 558
   Insn 72(l0): point = 560
   Insn 68(l0): point = 562
   Insn 63(l0): point = 564
   Insn 60(l0): point = 566
   Insn 40(l0): point = 568
   Insn 39(l0): point = 570
   Insn 67(l0): point = 572
   Insn 62(l0): point = 574
   Insn 1736(l1): point = 577
   Insn 1678(l1): point = 579
   Insn 2189(l1): point = 582
   Insn 1945(l1): point = 584
   Insn 1944(l1): point = 586
   Insn 2187(l1): point = 589
   Insn 1603(l1): point = 591
   Insn 1947(l1): point = 593
   Insn 1946(l1): point = 595
   Insn 1536(l1): point = 597
   Insn 1527(l1): point = 600
   Insn 1526(l1): point = 602
   Insn 1340(l1): point = 605
   Insn 30(l1): point = 607
   Insn 1304(l1): point = 609
   Insn 1276(l1): point = 611
   Insn 1247(l1): point = 613
   Insn 31(l1): point = 615
   Insn 1246(l1): point = 617
   Insn 2162(l1): point = 620
   Insn 960(l1): point = 622
   Insn 18(l1): point = 624
   Insn 2156(l1): point = 627
   Insn 921(l1): point = 629
   Insn 928(l1): point = 632
   Insn 920(l1): point = 634
   Insn 925(l1): point = 636
   Insn 924(l1): point = 638
   Insn 916(l1): point = 640
   Insn 2076(l1): point = 642
   Insn 915(l1): point = 644
   Insn 912(l1): point = 646
   Insn 910(l1): point = 648
   Insn 908(l1): point = 650
   Insn 907(l1): point = 652
   Insn 905(l1): point = 654
   Insn 903(l1): point = 656
   Insn 2154(l1): point = 659
   Insn 889(l1): point = 661
   Insn 888(l1): point = 664
   Insn 885(l1): point = 666
   Insn 884(l1): point = 668
   Insn 880(l1): point = 670
   Insn 894(l1): point = 672
   Insn 872(l1): point = 675
   Insn 2075(l1): point = 677
   Insn 869(l1): point = 679
   Insn 868(l1): point = 681
   Insn 867(l1): point = 683
   Insn 864(l1): point = 686
   Insn 2074(l1): point = 688
   Insn 861(l1): point = 690
   Insn 860(l1): point = 692
   Insn 859(l1): point = 694
   Insn 850(l1): point = 696
   Insn 2073(l1): point = 698
   Insn 849(l1): point = 700
   Insn 848(l1): point = 702
   Insn 2072(l1): point = 704
   Insn 846(l1): point = 706
   Insn 845(l1): point = 708
   Insn 2071(l1): point = 710
   Insn 843(l1): point = 712
   Insn 842(l1): point = 714
   Insn 2224(l1): point = 716
   Insn 840(l1): point = 718
   Insn 2225(l1): point = 720
   Insn 838(l1): point = 722
   Insn 839(l1): point = 724
   Insn 2151(l1): point = 727
   Insn 771(l1): point = 729
   Insn 15(l1): point = 731
   Insn 826(l1): point = 733
   Insn 825(l1): point = 736
   Insn 2149(l1): point = 739
   Insn 17(l1): point = 741
   Insn 2147(l1): point = 744
   Insn 782(l1): point = 746
   Insn 2145(l1): point = 749
   Insn 733(l1): point = 751
   Insn 732(l1): point = 754
   Insn 725(l1): point = 756
   Insn 724(l1): point = 758
   Insn 720(l1): point = 760
   Insn 16(l1): point = 762
   Insn 739(l1): point = 764
   Insn 731(l1): point = 766
   Insn 736(l1): point = 768
   Insn 729(l1): point = 770
   Insn 2143(l1): point = 773
   Insn 710(l1): point = 775
   Insn 707(l1): point = 777
   Insn 706(l1): point = 779
   Insn 703(l1): point = 781
   Insn 702(l1): point = 784
   Insn 701(l1): point = 786
   Insn 699(l1): point = 788
   Insn 694(l1): point = 790
   Insn 2070(l1): point = 792
   Insn 693(l1): point = 794
   Insn 690(l1): point = 796
   Insn 688(l1): point = 798
   Insn 686(l1): point = 800
   Insn 685(l1): point = 802
   Insn 683(l1): point = 804
   Insn 681(l1): point = 806
   Insn 712(l1): point = 808
   Insn 674(l1): point = 811
   Insn 2069(l1): point = 813
   Insn 671(l1): point = 815
   Insn 670(l1): point = 817
   Insn 669(l1): point = 819
   Insn 663(l1): point = 821
   Insn 662(l1): point = 824
   Insn 661(l1): point = 826
   Insn 2068(l1): point = 828
   Insn 660(l1): point = 830
   Insn 659(l1): point = 832
   Insn 654(l1): point = 835
   Insn 2067(l1): point = 837
   Insn 653(l1): point = 839
   Insn 649(l1): point = 841
   Insn 2066(l1): point = 843
   Insn 648(l1): point = 845
   Insn 645(l1): point = 847
   Insn 2006(l1): point = 849
   Insn 644(l1): point = 851
   Insn 637(l1): point = 854
   Insn 2065(l1): point = 856
   Insn 634(l1): point = 858
   Insn 2005(l1): point = 860
   Insn 630(l1): point = 862
   Insn 2064(l1): point = 864
   Insn 629(l1): point = 866
   Insn 2140(l1): point = 869
   Insn 622(l1): point = 871
   Insn 2063(l1): point = 873
   Insn 621(l1): point = 875
   Insn 617(l1): point = 877
   Insn 2062(l1): point = 879
   Insn 616(l1): point = 881
   Insn 612(l1): point = 883
   Insn 2007(l1): point = 885
   Insn 608(l1): point = 887
   Insn 601(l1): point = 890
   Insn 2209(l1): point = 892
   Insn 2208(l1): point = 894
   Insn 595(l1): point = 896
   Insn 2061(l1): point = 898
   Insn 594(l1): point = 900
   Insn 591(l1): point = 902
   Insn 590(l1): point = 904
   Insn 589(l1): point = 906
   Insn 2060(l1): point = 908
   Insn 587(l1): point = 910
   Insn 586(l1): point = 912
   Insn 584(l1): point = 914
   Insn 2059(l1): point = 916
   Insn 583(l1): point = 918
   Insn 2004(l1): point = 920
   Insn 579(l1): point = 922
   Insn 578(l1): point = 924
   Insn 2194(l1): point = 927
   Insn 1805(l1): point = 929
   Insn 1818(l1): point = 931
   Insn 2109(l1): point = 933
   Insn 1817(l1): point = 935
   Insn 1816(l1): point = 937
   Insn 2108(l1): point = 939
   Insn 1814(l1): point = 941
   Insn 1811(l1): point = 943
   Insn 2019(l1): point = 945
   Insn 1807(l1): point = 947
   Insn 1806(l1): point = 949
   Insn 1518(l1): point = 952
   Insn 1517(l1): point = 954
   Insn 1507(l1): point = 956
   Insn 1506(l1): point = 958
   Insn 1503(l1): point = 961
   Insn 1502(l1): point = 963
   Insn 1492(l1): point = 965
   Insn 2098(l1): point = 967
   Insn 1491(l1): point = 969
   Insn 1488(l1): point = 971
   Insn 2018(l1): point = 973
   Insn 1484(l1): point = 975
   Insn 1483(l1): point = 977
   Insn 1478(l1): point = 979
   Insn 2097(l1): point = 981
   Insn 1477(l1): point = 983
   Insn 1474(l1): point = 985
   Insn 2017(l1): point = 987
   Insn 1470(l1): point = 989
   Insn 1469(l1): point = 991
   Insn 1464(l1): point = 993
   Insn 2096(l1): point = 995
   Insn 1463(l1): point = 997
   Insn 1460(l1): point = 999
   Insn 2016(l1): point = 1001
   Insn 1456(l1): point = 1003
   Insn 1455(l1): point = 1005
   Insn 1451(l1): point = 1007
   Insn 2095(l1): point = 1009
   Insn 1450(l1): point = 1011
   Insn 1447(l1): point = 1013
   Insn 2015(l1): point = 1015
   Insn 1443(l1): point = 1017
   Insn 1439(l1): point = 1019
   Insn 1442(l1): point = 1021
   Insn 2094(l1): point = 1023
   Insn 1438(l1): point = 1025
   Insn 1437(l1): point = 1027
   Insn 1434(l1): point = 1029
   Insn 2093(l1): point = 1031
   Insn 1433(l1): point = 1033
   Insn 1429(l1): point = 1035
   Insn 1432(l1): point = 1037
   Insn 2092(l1): point = 1039
   Insn 1428(l1): point = 1041
   Insn 1427(l1): point = 1043
   Insn 1406(l1): point = 1046
   Insn 2090(l1): point = 1048
   Insn 1403(l1): point = 1050
   Insn 2012(l1): point = 1052
   Insn 1399(l1): point = 1054
   Insn 2089(l1): point = 1056
   Insn 1398(l1): point = 1058
   Insn 1397(l1): point = 1060
   Insn 1418(l1): point = 1063
   Insn 2091(l1): point = 1065
   Insn 1417(l1): point = 1067
   Insn 1414(l1): point = 1069
   Insn 2013(l1): point = 1071
   Insn 1413(l1): point = 1073
   Insn 2181(l1): point = 1076
   Insn 1389(l1): point = 1078
   Insn 2088(l1): point = 1080
   Insn 1388(l1): point = 1082
   Insn 1384(l1): point = 1084
   Insn 2014(l1): point = 1086
   Insn 1380(l1): point = 1088
   Insn 1379(l1): point = 1090
   Insn 2172(l1): point = 1093
   Insn 1240(l1): point = 1096
   Insn 2199(l1): point = 1098
   Insn 2198(l1): point = 1100
   Insn 1235(l1): point = 1102
   Insn 1234(l1): point = 1104
   Insn 1218(l1): point = 1107
   Insn 2201(l1): point = 1109
   Insn 2200(l1): point = 1111
   Insn 1206(l1): point = 1113
   Insn 2084(l1): point = 1115
   Insn 1205(l1): point = 1117
   Insn 1201(l1): point = 1119
   Insn 1199(l1): point = 1121
   Insn 1197(l1): point = 1123
   Insn 1196(l1): point = 1125
   Insn 1194(l1): point = 1127
   Insn 1193(l1): point = 1129
   Insn 1192(l1): point = 1131
   Insn 1191(l1): point = 1133
   Insn 1175(l1): point = 1136
   Insn 2083(l1): point = 1138
   Insn 1172(l1): point = 1140
   Insn 1170(l1): point = 1142
   Insn 1171(l1): point = 1144
   Insn 1182(l1): point = 1147
   Insn 1181(l1): point = 1149
   Insn 1135(l1): point = 1152
   Insn 2081(l1): point = 1154
   Insn 1132(l1): point = 1156
   Insn 2011(l1): point = 1158
   Insn 1126(l1): point = 1160
   Insn 1125(l1): point = 1162
   Insn 1124(l1): point = 1166
   Insn 1123(l1): point = 1168
   Insn 1122(l1): point = 1170
   Insn 1121(l1): point = 1172
   Insn 1131(l1): point = 1174
   Insn 1120(l1): point = 1176
   Insn 1164(l1): point = 1180
   Insn 2082(l1): point = 1182
   Insn 1161(l1): point = 1184
   Insn 1160(l1): point = 1186
   Insn 1159(l1): point = 1188
   Insn 1155(l1): point = 1190
   Insn 1154(l1): point = 1192
   Insn 1153(l1): point = 1196
   Insn 1152(l1): point = 1198
   Insn 1151(l1): point = 1200
   Insn 1150(l1): point = 1202
   Insn 1149(l1): point = 1204
   Insn 1117(l1): point = 1208
   Insn 2203(l1): point = 1210
   Insn 2202(l1): point = 1212
   Insn 1115(l1): point = 1214
   Insn 1110(l1): point = 1216
   Insn 26(l1): point = 1219
   Insn 28(l1): point = 1221
   Insn 1096(l1): point = 1223
   Insn 27(l1): point = 1225
   Insn 1094(l1): point = 1227
   Insn 1095(l1): point = 1229
   Insn 1093(l1): point = 1231
   Insn 2166(l1): point = 1234
   Insn 1082(l1): point = 1236
   Insn 1081(l1): point = 1238
   Insn 29(l1): point = 1240
   Insn 1080(l1): point = 1242
   Insn 1078(l1): point = 1245
   Insn 1079(l1): point = 1247
   Insn 1075(l1): point = 1250
   Insn 2205(l1): point = 1252
   Insn 2204(l1): point = 1254
   Insn 1068(l1): point = 1256
   Insn 1064(l1): point = 1259
   Insn 1062(l1): point = 1262
   Insn 1061(l1): point = 1264
   Insn 1060(l1): point = 1266
   Insn 1059(l1): point = 1268
   Insn 1073(l1): point = 1270
   Insn 1067(l1): point = 1272
   Insn 1063(l1): point = 1274
   Insn 1055(l1): point = 1276
   Insn 2080(l1): point = 1278
   Insn 1054(l1): point = 1280
   Insn 1053(l1): point = 1282
   Insn 20(l1): point = 1285
   Insn 2164(l1): point = 1288
   Insn 25(l1): point = 1290
   Insn 21(l1): point = 1292
   Insn 24(l1): point = 1294
   Insn 23(l1): point = 1296
   Insn 22(l1): point = 1298
   Insn 1043(l1): point = 1301
   Insn 2207(l1): point = 1303
   Insn 2206(l1): point = 1305
   Insn 1036(l1): point = 1307
   Insn 2079(l1): point = 1309
   Insn 1035(l1): point = 1311
   Insn 1034(l1): point = 1313
   Insn 2078(l1): point = 1315
   Insn 1032(l1): point = 1317
   Insn 1031(l1): point = 1319
   Insn 2077(l1): point = 1321
   Insn 1029(l1): point = 1323
   Insn 1028(l1): point = 1325
   Insn 1026(l1): point = 1327
   Insn 1024(l1): point = 1329
   Insn 1025(l1): point = 1331
   Insn 2158(l1): point = 1334
   Insn 971(l1): point = 1336
   Insn 2160(l1): point = 1339
   Insn 19(l1): point = 1341
   Insn 2168(l1): point = 1344
   Insn 1142(l1): point = 1346
   Insn 1141(l1): point = 1348
   Insn 2179(l1): point = 1351
   Insn 2192(l1): point = 1354
   Insn 1797(l6): point = 1357
   Insn 1796(l6): point = 1359
   Insn 1790(l6): point = 1361
   Insn 1789(l6): point = 1363
   Insn 1788(l6): point = 1365
   Insn 1787(l6): point = 1367
   Insn 2107(l6): point = 1369
   Insn 1785(l6): point = 1371
   Insn 1782(l6): point = 1373
   Insn 1993(l6): point = 1375
   Insn 1778(l6): point = 1377
   Insn 1792(l6): point = 1379
   Insn 1777(l6): point = 1381
   Insn 1775(l6): point = 1383
   Insn 2106(l6): point = 1385
   Insn 1773(l6): point = 1387
   Insn 1772(l6): point = 1389
   Insn 1771(l6): point = 1391
   Insn 1770(l6): point = 1393
   Insn 1768(l6): point = 1395
   Insn 1767(l6): point = 1397
   Insn 1764(l6): point = 1399
   Insn 1763(l6): point = 1401
   Insn 1760(l6): point = 1403
   Insn 1759(l6): point = 1405
   Insn 1746(l6): point = 1407
   Insn 1745(l6): point = 1409
   Insn 1744(l6): point = 1411
   Insn 1743(l6): point = 1413
   Insn 2105(l6): point = 1415
   Insn 1741(l6): point = 1417
   Insn 1738(l6): point = 1419
   Insn 1992(l6): point = 1421
   Insn 1734(l6): point = 1423
   Insn 1733(l6): point = 1425
   Insn 1732(l6): point = 1427
   Insn 2104(l6): point = 1429
   Insn 1730(l6): point = 1431
   Insn 1729(l6): point = 1433
   Insn 1728(l6): point = 1435
   Insn 1727(l6): point = 1437
   Insn 1725(l6): point = 1439
   Insn 1724(l6): point = 1441
   Insn 1717(l6): point = 1443
   Insn 1716(l6): point = 1445
   Insn 1721(l6): point = 1447
   Insn 1720(l6): point = 1449
   Insn 1708(l6): point = 1451
   Insn 1705(l6): point = 1453
   Insn 1697(l6): point = 1455
   Insn 1694(l6): point = 1457
   Insn 1693(l6): point = 1459
   Insn 1692(l6): point = 1461
   Insn 1688(l6): point = 1463
   Insn 1687(l6): point = 1465
   Insn 1691(l6): point = 1467
   Insn 1686(l6): point = 1469
   Insn 1690(l6): point = 1471
   Insn 1685(l6): point = 1474
   Insn 1680(l6): point = 1477
   Insn 1679(l6): point = 1479
   Insn 1677(l6): point = 1481
   Insn 1667(l5): point = 1484
   Insn 1666(l5): point = 1486
   Insn 1660(l5): point = 1488
   Insn 1659(l5): point = 1490
   Insn 1658(l5): point = 1492
   Insn 1657(l5): point = 1494
   Insn 2103(l5): point = 1496
   Insn 1655(l5): point = 1498
   Insn 1652(l5): point = 1500
   Insn 1996(l5): point = 1502
   Insn 1648(l5): point = 1504
   Insn 1662(l5): point = 1506
   Insn 1647(l5): point = 1508
   Insn 1645(l5): point = 1510
   Insn 2102(l5): point = 1512
   Insn 1643(l5): point = 1514
   Insn 1642(l5): point = 1516
   Insn 1641(l5): point = 1518
   Insn 1640(l5): point = 1520
   Insn 1638(l5): point = 1522
   Insn 1633(l5): point = 1524
   Insn 1628(l5): point = 1526
   Insn 1637(l5): point = 1528
   Insn 1636(l5): point = 1530
   Insn 1632(l5): point = 1532
   Insn 1631(l5): point = 1534
   Insn 1627(l5): point = 1536
   Insn 1626(l5): point = 1538
   Insn 1613(l5): point = 1540
   Insn 1612(l5): point = 1542
   Insn 1611(l5): point = 1544
   Insn 1610(l5): point = 1546
   Insn 2101(l5): point = 1548
   Insn 1608(l5): point = 1550
   Insn 1605(l5): point = 1552
   Insn 1995(l5): point = 1554
   Insn 1601(l5): point = 1556
   Insn 1600(l5): point = 1558
   Insn 1599(l5): point = 1560
   Insn 2100(l5): point = 1562
   Insn 1597(l5): point = 1564
   Insn 1596(l5): point = 1566
   Insn 1595(l5): point = 1568
   Insn 1594(l5): point = 1570
   Insn 1592(l5): point = 1572
   Insn 1591(l5): point = 1574
   Insn 1590(l5): point = 1576
   Insn 1582(l5): point = 1578
   Insn 1581(l5): point = 1580
   Insn 1580(l5): point = 1582
   Insn 1587(l5): point = 1584
   Insn 1586(l5): point = 1586
   Insn 1585(l5): point = 1588
   Insn 1572(l5): point = 1590
   Insn 1569(l5): point = 1592
   Insn 1564(l5): point = 1594
   Insn 2099(l5): point = 1596
   Insn 1563(l5): point = 1598
   Insn 1555(l5): point = 1600
   Insn 1552(l5): point = 1602
   Insn 1551(l5): point = 1604
   Insn 1550(l5): point = 1606
   Insn 1546(l5): point = 1608
   Insn 1545(l5): point = 1610
   Insn 1549(l5): point = 1612
   Insn 1544(l5): point = 1614
   Insn 1548(l5): point = 1616
   Insn 1543(l5): point = 1619
   Insn 1538(l5): point = 1622
   Insn 1537(l5): point = 1624
   Insn 1994(l5): point = 1626
   Insn 1535(l5): point = 1628
   Insn 1266(l4): point = 1631
   Insn 1265(l4): point = 1633
   Insn 1257(l4): point = 1635
   Insn 1254(l4): point = 1637
   Insn 1252(l4): point = 1639
   Insn 1371(l4): point = 1642
   Insn 2197(l4): point = 1644
   Insn 2196(l4): point = 1646
   Insn 1361(l4): point = 1648
   Insn 1368(l4): point = 1650
   Insn 1359(l4): point = 1652
   Insn 1358(l4): point = 1654
   Insn 1357(l4): point = 1656
   Insn 1356(l4): point = 1658
   Insn 2087(l4): point = 1660
   Insn 1354(l4): point = 1662
   Insn 1353(l4): point = 1664
   Insn 1352(l4): point = 1666
   Insn 2086(l4): point = 1668
   Insn 1350(l4): point = 1670
   Insn 1349(l4): point = 1672
   Insn 1348(l4): point = 1674
   Insn 1343(l4): point = 1676
   Insn 1347(l4): point = 1678
   Insn 2085(l4): point = 1680
   Insn 1342(l4): point = 1682
   Insn 1999(l4): point = 1684
   Insn 1338(l4): point = 1686
   Insn 1337(l4): point = 1688
   Insn 1364(l4): point = 1690
   Insn 1335(l4): point = 1692
   Insn 2174(l4): point = 1695
   Insn 34(l4): point = 1697
   Insn 33(l4): point = 1699
   Insn 1324(l4): point = 1702
   Insn 1316(l4): point = 1704
   Insn 1308(l4): point = 1706
   Insn 1323(l4): point = 1708
   Insn 1315(l4): point = 1710
   Insn 1307(l4): point = 1712
   Insn 1322(l4): point = 1714
   Insn 1314(l4): point = 1716
   Insn 1306(l4): point = 1718
   Insn 1321(l4): point = 1720
   Insn 1313(l4): point = 1722
   Insn 1305(l4): point = 1724
   Insn 1269(l4): point = 1727
   Insn 32(l4): point = 1729
   Insn 1268(l4): point = 1731
   Insn 1312(l4): point = 1733
   Insn 2176(l4): point = 1736
   Insn 1296(l4): point = 1738
   Insn 1288(l4): point = 1740
   Insn 1280(l4): point = 1742
   Insn 1295(l4): point = 1744
   Insn 1287(l4): point = 1746
   Insn 1279(l4): point = 1748
   Insn 1294(l4): point = 1750
   Insn 1286(l4): point = 1752
   Insn 1293(l4): point = 1754
   Insn 1285(l4): point = 1756
   Insn 1278(l4): point = 1758
   Insn 1277(l4): point = 1760
   Insn 1284(l4): point = 1762
   Insn 950(l3): point = 1765
   Insn 949(l3): point = 1767
   Insn 953(l3): point = 1769
   Insn 2229(l3): point = 1771
   Insn 941(l3): point = 1773
   Insn 2228(l3): point = 1775
   Insn 952(l3): point = 1777
   Insn 940(l3): point = 1779
   Insn 1000(l3): point = 1782
   Insn 999(l3): point = 1784
   Insn 987(l3): point = 1786
   Insn 984(l3): point = 1788
   Insn 957(l3): point = 1791
   Insn 956(l3): point = 1793
   Insn 962(l3): point = 1795
   Insn 966(l3): point = 1798
   Insn 964(l3): point = 1800
   Insn 761(l2): point = 1803
   Insn 760(l2): point = 1805
   Insn 764(l2): point = 1807
   Insn 2227(l2): point = 1809
   Insn 752(l2): point = 1811
   Insn 2226(l2): point = 1813
   Insn 763(l2): point = 1815
   Insn 751(l2): point = 1817
   Insn 811(l2): point = 1820
   Insn 810(l2): point = 1822
   Insn 798(l2): point = 1824
   Insn 795(l2): point = 1826
   Insn 768(l2): point = 1829
   Insn 767(l2): point = 1831
   Insn 773(l2): point = 1833
   Insn 777(l2): point = 1836
   Insn 775(l2): point = 1838
 a0(r993 [0]): [8..8]
 a0(r993 [1]): [8..8]
 a1(r992 [0]): [8..10]
 a1(r992 [1]): [8..10]
 a2(r990 [0]): [8..12]
 a2(r990 [1]): [8..12]
 a3(r989 [0]): [8..14]
 a3(r989 [1]): [8..14]
 a4(r463): [8..16]
 a5(r987): [8..18]
 a6(r339): [8..20]
 a7(r418): [8..22]
 a8(r355): [8..558]
 a9(r356): [8..556]
 a10(r416): [61..63] [8..44]
 a11(r967): [532..534] [480..529] [464..466] [8..461]
 a12(r970): [61..65] [8..50]
 a13(r971): [8..574]
 a14(r972): [8..572]
 a15(r171): [26..34]
 a16(r640): [26..38]
 a17(r630): [68..70] [26..60]
 a18(r642): [31..32]
 a19(r636): [35..36]
 a20(r357): [37..53]
 a21(r637): [39..48]
 a22(r169): [39..40]
 a23(r639): [39..46]
 a24(r634): [41..42]
 a25(r358): [43..56]
 a26(r410): [197..201] [155..157] [68..138] [54..60]
 a27(r632): [53..58]
 a28(r409): [197..209] [155..159] [68..144] [53..60]
 a29(r413): [197..199] [97..99] [68..82] [57..60]
 a30(r412): [197..203] [97..101] [68..88] [56..60]
 a31(r1019): [71..72]
 a32(r628): [83..86]
 a33(r627): [82..84]
 a34(r1018): [89..90]
 a35(r160): [155..167] [108..152] [95..96]
 a36(r1017): [102..103]
 a37(r624): [111..112]
 a38(r615): [113..118]
 a39(r622): [113..114]
 a40(r973): [254..310] [115..190]
 a41(r610): [115..124]
 a42(r621): [115..116]
 a43(r619): [119..120]
 a44(r616): [119..122]
 a45(r612): [123..130]
 a46(r614): [125..128]
 a47(r611): [125..126]
 a48(r609): [127..132]
 a49(r343): [394..396] [372..374] [222..328] [133..196]
 a50(r606): [139..142]
 a51(r605): [138..140]
 a52(r1016): [145..146]
 a53(r1015): [160..161]
 a54(r600): [171..172]
 a55(r591): [173..182]
 a56(r598): [173..174]
 a57(r585): [175..178]
 a58(r597): [175..176]
 a59(r589): [179..180]
 a60(r586): [179..188]
 a61(r595): [183..184]
 a62(r592): [183..186]
 a63(r590): [185..194]
 a64(r587): [187..192]
 a65(r342): [394..398] [372..376] [346..348] [222..335] [195..196]
 a66(r1014): [204..205]
 a67(r1013): [210..213]
 a68(r411): [212..219]
 a69(r1012): [225..226]
 a70(r154): [234..236]
 a71(r576): [237..240]
 a72(r575): [236..238]
 a73(r1011): [236..242]
 a74(r571): [250..251]
 a75(r562): [252..257]
 a76(r569): [252..253]
 a77(r557): [254..263]
 a78(r568): [254..255]
 a79(r566): [258..259]
 a80(r563): [258..261]
 a81(r559): [262..271]
 a82(r561): [264..265]
 a83(r558): [264..267]
 a84(r556): [266..269]
 a85(r146): [275..277]
 a86(r553): [278..281]
 a87(r552): [277..279]
 a88(r1010): [277..283]
 a89(r548): [291..292]
 a90(r539): [293..302]
 a91(r546): [293..294]
 a92(r533): [295..298]
 a93(r545): [295..296]
 a94(r537): [299..300]
 a95(r534): [299..308]
 a96(r543): [303..304]
 a97(r540): [303..306]
 a98(r538): [305..312]
 a99(r535): [307..314]
 a100(r1009): [320..321]
 a101(r408): [346..350] [333..337]
 a102(r1008): [338..339]
 a103(r125): [499..501] [480..484] [431..433] [405..416] [381..393] [357..371] [344..345]
 a104(r1007): [351..352]
 a105(r1006): [364..365]
 a106(r519): [405..411] [379..393]
 a107(r1005): [382..383]
 a108(r521): [401..402]
 a109(r1004): [417..418]
 a110(r1003): [439..440]
 a111(r1002): [448..449]
 a112(r1001): [472..473]
 a113(r1000): [485..486]
 a114(r999): [507..508]
 a115(r998): [516..517]
 a116(r997): [540..541]
 a117(r996): [551..552]
 a118(r483): [557..562]
 a119(r481): [559..564]
 a120(r339): [577..1356]
 a121(r355): [577..1356]
 a122(r356): [577..1356]
 a123(r416): [669..929] [639..658]
 a124(r418): [1275..1343] [620..931]
 a125(r463): [577..1356]
 a126(r967): [577..1356]
 a127(r970): [577..1356]
 a128(r971): [577..1356]
 a129(r972): [577..1356]
 a130(r987): [577..1356]
 a131(r989 [0]): [577..1356]
 a131(r989 [1]): [577..1356]
 a132(r990 [0]): [577..1356]
 a132(r990 [1]): [577..1356]
 a133(r992 [0]): [577..1356]
 a133(r992 [1]): [577..1356]
 a134(r993 [0]): [577..1356]
 a134(r993 [1]): [577..1356]
 a135(r1070): [932..933]
 a136(r1069): [938..939]
 a137(r979 [0]): [577..577]
 a137(r979 [1]): [577..577]
 a138(r915): [577..579]
 a139(r368): [1351..1353] [961..1113] [577..619]
 a140(r370): [961..1029] [577..604]
 a141(r372): [961..1007] [577..604]
 a142(r373): [961..993] [577..604]
 a143(r374): [961..979] [577..604]
 a144(r375): [961..965] [577..604]
 a145(r389): [1344..1353] [1234..1236] [961..1219] [577..619]
 a146(r968): [589..593] [577..584]
 a147(r969): [589..595] [577..586]
 a148(r981 [0]): [589..591]
 a148(r981 [1]): [589..591]
 a149(r860): [589..597]
 a150(r857): [957..958]
 a151(r1059): [966..967]
 a152(r1058): [980..981]
 a153(r1057): [994..995]
 a154(r371): [1006..1019]
 a155(r1056): [1008..1009]
 a156(r1055): [1020..1023]
 a157(r369): [1022..1035]
 a158(r346): [1028..1353] [890..896] [854..877] [605..841]
 a159(r1054): [1030..1031]
 a160(r1053): [1036..1039]
 a161(r353): [1091..1102] [1076..1078] [1038..1063]
 a162(r1052): [1064..1065]
 a163(r283 [0]): [1074..1075] [1046..1054]
 a163(r283 [1]): [1074..1075] [1046..1054]
 a164(r1051): [1047..1048]
 a165(r1050 [0]): [1055..1056]
 a165(r1050 [1]): [1055..1056]
 a166(r1049): [1079..1080]
 a167(r984 [0]): [605..605]
 a167(r984 [1]): [605..605]
 a168(r394): [605..607]
 a169(r983): [605..609]
 a170(r982): [605..611]
 a171(r429): [605..613]
 a172(r349): [1344..1350] [1180..1190] [1107..1160] [614..619]
 a173(r279): [605..615]
 a174(r216): [605..617]
 a175(r364): [1344..1350] [1107..1276] [618..619]
 a176(r347): [1344..1350] [1288..1290] [1107..1285] [618..619]
 a177(r173): [1344..1350] [1339..1341] [1301..1336] [1107..1292] [605..619]
 a178(r348): [1344..1350] [1232..1260] [1107..1221] [605..619]
 a179(r365): [1344..1350] [1107..1257] [605..619]
 a180(r393): [1344..1350] [1234..1240] [1107..1223] [605..619]
 a181(r423): [1344..1350] [1234..1243] [1107..1225] [605..619]
 a182(r794): [1103..1104]
 a183(r1045): [1114..1115]
 a184(r786): [1126..1127]
 a185(r787): [1128..1129]
 a186(r784): [1128..1131]
 a187(r785): [1132..1133]
 a188(r783): [1148..1149]
 a189(r1044): [1137..1138]
 a190(r181 [0]): [1175..1343] [1145..1146] [869..871] [852..862] [620..835]
 a190(r181 [1]): [1175..1343] [1145..1146] [869..871] [852..862] [620..835]
 a191(r1043): [1181..1182]
 a192(r776): [1191..1198]
 a193(r778): [1193..1196]
 a194(r777): [1197..1200]
 a195(r774): [1199..1202]
 a196(r773): [1203..1205]
 a197(r366): [1205..1216] [1177..1179]
 a198(r398): [1301..1343] [1205..1298] [659..662] [620..630]
 a199(r772): [1347..1348]
 a200(r1042): [1153..1154]
 a201(r767): [1161..1168]
 a202(r769): [1163..1166]
 a203(r768): [1167..1170]
 a204(r765): [1169..1172]
 a205(r764): [1173..1177]
 a206(r397): [1301..1343] [1208..1296] [1177..1179] [659..666] [620..640]
 a207(r763): [1213..1214]
 a208(r227): [1217..1268]
 a209(r748): [1250..1266] [1220..1233]
 a210(r752): [1250..1270] [1222..1233]
 a211(r760): [1224..1229]
 a212(r759): [1224..1227]
 a213(r757): [1228..1231]
 a214(r756): [1237..1238]
 a215(r755): [1244..1247]
 a216(r754): [1243..1245]
 a217(r751): [1257..1272]
 a218(r750): [1260..1274]
 a219(r749): [1260..1262]
 a220(r747): [1263..1264]
 a221(r340): [1301..1307] [1275..1294]
 a222(r1041): [1277..1278]
 a223(r345): [1293..1343] [744..746] [739..741] [620..726]
 a224(r362): [1295..1343] [620..696]
 a225(r402): [1297..1343] [773..782] [620..752]
 a226(r403): [1299..1343] [773..790] [620..756]
 a227(r1040): [1308..1309]
 a228(r1039 [0]): [1314..1315]
 a228(r1039 [1]): [1314..1315]
 a229(r1038 [0]): [1320..1321]
 a229(r1038 [1]): [1320..1321]
 a230(r743): [1326..1327]
 a231(r221): [1326..1329]
 a232(r222): [1328..1331]
 a233(r195): [1330..1343] [773..786] [620..766]
 a234(r193): [1332..1343] [773..788] [620..770]
 a235(r986): [620..622]
 a236(r420): [1342..1343] [620..624]
 a237(r354): [739..748] [620..734]
 a238(r363): [659..672] [620..632]
 a239(r404): [773..808] [659..762] [620..636]
 a240(r220): [1337..1338]
 a241(r734): [630..634]
 a242(r183): [662..826] [630..658]
 a243(r735): [637..638]
 a244(r1037): [641..642]
 a245(r729): [653..654]
 a246(r727): [655..656]
 a247(r721): [662..664]
 a248(r720): [667..668]
 a249(r716): [669..670]
 a250(r1036): [676..677]
 a251(r1035): [687..688]
 a252(r1034): [697..698]
 a253(r1033 [0]): [703..704]
 a253(r1033 [1]): [703..704]
 a254(r1032 [0]): [709..710]
 a254(r1032 [1]): [709..710]
 a255(r704): [715..718]
 a256(r200): [715..716]
 a257(r1072): [717..722]
 a258(r201): [719..720]
 a259(r1073): [721..724]
 a260(r988): [727..729]
 a261(r341): [742..743] [727..731]
 a262(r703): [734..736]
 a263(r360): [773..777] [749..768] [727..738]
 a264(r361): [773..775] [749..764] [727..738]
 a265(r199): [747..748]
 a266(r359): [776..822] [752..772]
 a267(r695): [752..754]
 a268(r692): [757..758]
 a269(r688): [759..760]
 a270(r682): [778..779]
 a271(r681): [782..784]
 a272(r1031): [791..792]
 a273(r674): [803..804]
 a274(r672): [805..806]
 a275(r1030): [812..813]
 a276(r664): [822..824]
 a277(r1029): [827..828]
 a278(r1028 [0]): [836..837]
 a278(r1028 [1]): [836..837]
 a279(r1027): [842..843]
 a280(r1026): [855..856]
 a281(r1025 [0]): [863..864]
 a281(r1025 [1]): [863..864]
 a282(r1024 [0]): [872..873]
 a282(r1024 [1]): [872..873]
 a283(r1023): [878..879]
 a284(r1022): [897..898]
 a285(r651 [0]): [905..914]
 a285(r651 [1]): [905..914]
 a286(r1021 [0]): [907..908]
 a286(r1021 [1]): [907..908]
 a287(r1020 [0]): [915..916]
 a287(r1020 [1]): [915..916]
 a288(r339): [1357..1483]
 a289(r355): [1357..1483]
 a290(r356): [1357..1483]
 a291(r368): [1357..1483]
 a292(r370): [1357..1483]
 a293(r372): [1357..1483]
 a294(r373): [1357..1483]
 a295(r374): [1357..1483]
 a296(r375): [1357..1483]
 a297(r389): [1357..1483]
 a298(r463): [1357..1483]
 a299(r915): [1357..1483]
 a300(r967): [1357..1483]
 a301(r968): [1357..1483]
 a302(r969): [1357..1483]
 a303(r970): [1357..1483]
 a304(r971): [1357..1483]
 a305(r972): [1357..1483]
 a306(r979 [0]): [1357..1483]
 a306(r979 [1]): [1357..1483]
 a307(r987): [1357..1483]
 a308(r989 [0]): [1357..1483]
 a308(r989 [1]): [1357..1483]
 a309(r990 [0]): [1357..1483]
 a309(r990 [1]): [1357..1483]
 a310(r992 [0]): [1357..1483]
 a310(r992 [1]): [1357..1483]
 a311(r993 [0]): [1357..1483]
 a311(r993 [1]): [1357..1483]
 a312(r1068): [1366..1369]
 a313(r957): [1368..1383]
 a314(r1067): [1384..1385]
 a315(r955): [1390..1395]
 a316(r951): [1392..1399]
 a317(r947): [1394..1403]
 a318(r954): [1396..1397]
 a319(r928): [1398..1455]
 a320(r950): [1400..1401]
 a321(r457): [1402..1453]
 a322(r946): [1404..1405]
 a323(r452): [1406..1451]
 a324(r1066): [1412..1415]
 a325(r941): [1414..1427]
 a326(r1065): [1428..1429]
 a327(r939): [1434..1439]
 a328(r935): [1436..1447]
 a329(r931): [1438..1443]
 a330(r938): [1440..1441]
 a331(r930): [1444..1445]
 a332(r934): [1448..1449]
 a333(r925): [1456..1457]
 a334(r924): [1458..1459]
 a335(r919): [1458..1463]
 a336(r923): [1460..1461]
 a337(r922): [1462..1467]
 a338(r918): [1464..1465]
 a339(r917): [1466..1469]
 a340(r921): [1468..1472]
 a341(r916): [1470..1475]
 a342(r475): [1472..1477]
 a343(r914): [1478..1479]
 a344(r913): [1480..1481]
 a345(r339): [1484..1630]
 a346(r355): [1484..1630]
 a347(r356): [1484..1630]
 a348(r368): [1484..1630]
 a349(r370): [1484..1630]
 a350(r372): [1484..1630]
 a351(r373): [1484..1630]
 a352(r374): [1484..1630]
 a353(r375): [1484..1630]
 a354(r389): [1484..1630]
 a355(r463): [1484..1630]
 a356(r860): [1484..1630]
 a357(r967): [1484..1630]
 a358(r968): [1484..1630]
 a359(r969): [1484..1630]
 a360(r970): [1484..1630]
 a361(r971): [1484..1630]
 a362(r972): [1484..1630]
 a363(r981 [0]): [1484..1630]
 a363(r981 [1]): [1484..1630]
 a364(r987): [1484..1630]
 a365(r989 [0]): [1484..1630]
 a365(r989 [1]): [1484..1630]
 a366(r990 [0]): [1484..1630]
 a366(r990 [1]): [1484..1630]
 a367(r992 [0]): [1484..1630]
 a367(r992 [1]): [1484..1630]
 a368(r993 [0]): [1484..1630]
 a368(r993 [1]): [1484..1630]
 a369(r1064): [1493..1496]
 a370(r908): [1495..1510]
 a371(r1063): [1511..1512]
 a372(r906): [1517..1522]
 a373(r901): [1519..1524]
 a374(r896): [1521..1526]
 a375(r380): [1523..1594]
 a376(r905): [1523..1528]
 a377(r900): [1525..1532]
 a378(r895): [1527..1536]
 a379(r904): [1529..1530]
 a380(r873): [1531..1600]
 a381(r899): [1533..1534]
 a382(r309): [1535..1592]
 a383(r894): [1537..1538]
 a384(r314): [1539..1590]
 a385(r1062): [1545..1548]
 a386(r889): [1547..1560]
 a387(r1061): [1561..1562]
 a388(r887): [1567..1572]
 a389(r882): [1569..1584]
 a390(r877): [1571..1578]
 a391(r886): [1573..1574]
 a392(r885): [1575..1576]
 a393(r876): [1579..1580]
 a394(r875): [1581..1582]
 a395(r881): [1585..1586]
 a396(r880): [1587..1588]
 a397(r1060): [1595..1596]
 a398(r870): [1601..1602]
 a399(r869): [1603..1604]
 a400(r864): [1603..1608]
 a401(r868): [1605..1606]
 a402(r867): [1607..1612]
 a403(r863): [1609..1610]
 a404(r862): [1611..1614]
 a405(r866): [1613..1617]
 a406(r861): [1615..1620]
 a407(r296): [1617..1622]
 a408(r859): [1623..1624]
 a409(r858): [1625..1628]
 a410(r173): [1631..1764]
 a411(r216): [1631..1764]
 a412(r279): [1693..1764] [1631..1650]
 a413(r339): [1631..1764]
 a414(r346): [1631..1764]
 a415(r348): [1631..1764]
 a416(r355): [1631..1764]
 a417(r356): [1631..1764]
 a418(r365): [1631..1764]
 a419(r368): [1631..1764]
 a420(r389): [1631..1764]
 a421(r393): [1631..1764]
 a422(r394): [1631..1764]
 a423(r423): [1631..1764]
 a424(r429): [1631..1764]
 a425(r463): [1631..1764]
 a426(r967): [1631..1764]
 a427(r970): [1631..1764]
 a428(r971): [1631..1764]
 a429(r972): [1631..1764]
 a430(r982): [1631..1764]
 a431(r983): [1631..1764]
 a432(r984 [0]): [1631..1764]
 a432(r984 [1]): [1631..1764]
 a433(r987): [1631..1764]
 a434(r989 [0]): [1631..1764]
 a434(r989 [1]): [1631..1764]
 a435(r990 [0]): [1631..1764]
 a435(r990 [1]): [1631..1764]
 a436(r992 [0]): [1631..1764]
 a436(r992 [1]): [1631..1764]
 a437(r993 [0]): [1631..1764]
 a437(r993 [1]): [1631..1764]
 a438(r1048): [1657..1660]
 a439(r834): [1659..1666]
 a440(r833 [0]): [1665..1676]
 a440(r833 [1]): [1665..1676]
 a441(r1047): [1667..1668]
 a442(r350): [1736..1742] [1702..1706] [1673..1697]
 a443(r352): [1736..1740] [1727..1729] [1675..1704]
 a444(r1046 [0]): [1677..1680]
 a444(r1046 [1]): [1677..1680]
 a445(r351): [1736..1738] [1702..1702] [1679..1699]
 a446(r830): [1689..1692]
 a447(r829): [1703..1708]
 a448(r824): [1705..1710]
 a449(r819): [1707..1712]
 a450(r828): [1709..1714]
 a451(r823): [1711..1716]
 a452(r818): [1713..1718]
 a453(r827): [1715..1720]
 a454(r822): [1717..1722]
 a455(r817): [1719..1724]
 a456(r821): [1721..1733]
 a457(r801): [1761..1764] [1725..1735] [1631..1635]
 a458(r815): [1739..1744]
 a459(r810): [1741..1746]
 a460(r805): [1743..1748]
 a461(r814): [1745..1750]
 a462(r809): [1747..1752]
 a463(r804): [1749..1758]
 a464(r813): [1751..1754]
 a465(r808): [1753..1756]
 a466(r807): [1755..1762]
 a467(r803): [1759..1760]
 a468(r798): [1636..1637]
 a469(r796): [1638..1639]
 a470(r181 [0]): [1765..1802]
 a470(r181 [1]): [1765..1802]
 a471(r193): [1765..1802]
 a472(r195): [1765..1802]
 a473(r339): [1765..1802]
 a474(r345): [1765..1802]
 a475(r346): [1765..1802]
 a476(r354): [1765..1802]
 a477(r355): [1765..1802]
 a478(r356): [1765..1802]
 a479(r362): [1765..1802]
 a480(r363): [1765..1802]
 a481(r397): [1765..1802]
 a482(r398): [1765..1802]
 a483(r402): [1765..1802]
 a484(r403): [1765..1802]
 a485(r404): [1765..1802]
 a486(r418): [1765..1802]
 a487(r420): [1765..1802]
 a488(r463): [1765..1802]
 a489(r967): [1765..1802]
 a490(r970): [1765..1802]
 a491(r971): [1765..1802]
 a492(r972): [1765..1802]
 a493(r986): [1765..1802]
 a494(r987): [1765..1802]
 a495(r989 [0]): [1765..1802]
 a495(r989 [1]): [1765..1802]
 a496(r990 [0]): [1765..1802]
 a496(r990 [1]): [1765..1802]
 a497(r992 [0]): [1765..1802]
 a497(r992 [1]): [1765..1802]
 a498(r993 [0]): [1765..1802]
 a498(r993 [1]): [1765..1802]
 a499(r220): [1798..1800]
 a500(r395): [1801..1802] [1791..1797] [1765..1773]
 a501(r741): [1801..1802] [1791..1795]
 a502(r396): [1794..1797] [1765..1769]
 a503(r737): [1770..1771]
 a504(r1077): [1772..1777]
 a505(r736): [1774..1775]
 a506(r1076): [1776..1779]
 a507(r181 [0]): [1803..1840]
 a507(r181 [1]): [1803..1840]
 a508(r183): [1803..1840]
 a509(r193): [1803..1840]
 a510(r195): [1803..1840]
 a511(r339): [1803..1840]
 a512(r341): [1803..1840]
 a513(r346): [1803..1840]
 a514(r354): [1803..1840]
 a515(r355): [1803..1840]
 a516(r356): [1803..1840]
 a517(r360): [1803..1840]
 a518(r361): [1803..1840]
 a519(r402): [1803..1840]
 a520(r403): [1803..1840]
 a521(r404): [1803..1840]
 a522(r416): [1803..1840]
 a523(r418): [1803..1840]
 a524(r463): [1803..1840]
 a525(r967): [1803..1840]
 a526(r970): [1803..1840]
 a527(r971): [1803..1840]
 a528(r972): [1803..1840]
 a529(r987): [1803..1840]
 a530(r988): [1803..1840]
 a531(r989 [0]): [1803..1840]
 a531(r989 [1]): [1803..1840]
 a532(r990 [0]): [1803..1840]
 a532(r990 [1]): [1803..1840]
 a533(r992 [0]): [1803..1840]
 a533(r992 [1]): [1803..1840]
 a534(r993 [0]): [1803..1840]
 a534(r993 [1]): [1803..1840]
 a535(r199): [1836..1838]
 a536(r400): [1839..1840] [1829..1835] [1803..1811]
 a537(r701): [1839..1840] [1829..1833]
 a538(r401): [1832..1835] [1803..1807]
 a539(r697): [1808..1809]
 a540(r1075): [1810..1815]
 a541(r696): [1812..1813]
 a542(r1074): [1814..1817]
Compressing live ranges: from 1841 to 641 - 34%
Ranges after the compression:
 a0(r993 [0]): [0..0]
 a0(r993 [1]): [0..0]
 a1(r992 [0]): [0..1]
 a1(r992 [1]): [0..1]
 a2(r990 [0]): [0..1]
 a2(r990 [1]): [0..1]
 a3(r989 [0]): [0..1]
 a3(r989 [1]): [0..1]
 a4(r463): [0..1]
 a5(r987): [0..1]
 a6(r339): [0..1]
 a7(r418): [0..1]
 a8(r355): [0..173]
 a9(r356): [0..171]
 a10(r416): [19..20] [0..13]
 a11(r967): [156..167] [0..153]
 a12(r970): [19..20] [0..13]
 a13(r971): [0..175]
 a14(r972): [0..175]
 a15(r171): [2..3]
 a16(r640): [2..7]
 a17(r630): [21..22] [2..18]
 a18(r642): [2..3]
 a19(r636): [4..5]
 a20(r357): [6..14]
 a21(r637): [8..13]
 a22(r169): [8..9]
 a23(r639): [8..13]
 a24(r634): [10..11]
 a25(r358): [12..16]
 a26(r410): [76..77] [56..57] [21..51] [15..18]
 a27(r632): [14..18]
 a28(r409): [76..79] [56..57] [21..53] [14..18]
 a29(r413): [76..77] [32..33] [21..25] [17..18]
 a30(r412): [76..77] [32..33] [21..27] [16..18]
 a31(r1019): [23..24]
 a32(r628): [26..27]
 a33(r627): [25..27]
 a34(r1018): [28..29]
 a35(r160): [36..59] [30..31]
 a36(r1017): [34..35]
 a37(r624): [36..37]
 a38(r615): [38..41]
 a39(r622): [38..39]
 a40(r973): [92..119] [40..73]
 a41(r610): [40..45]
 a42(r621): [40..41]
 a43(r619): [42..43]
 a44(r616): [42..43]
 a45(r612): [44..49]
 a46(r614): [46..49]
 a47(r611): [46..47]
 a48(r609): [48..49]
 a49(r343): [138..139] [134..135] [82..121] [50..75]
 a50(r606): [52..53]
 a51(r605): [51..53]
 a52(r1016): [54..55]
 a53(r1015): [58..59]
 a54(r600): [60..61]
 a55(r591): [62..67]
 a56(r598): [62..63]
 a57(r585): [64..65]
 a58(r597): [64..65]
 a59(r589): [66..67]
 a60(r586): [66..73]
 a61(r595): [68..69]
 a62(r592): [68..71]
 a63(r590): [70..73]
 a64(r587): [72..73]
 a65(r342): [138..139] [134..135] [128..129] [82..123] [74..75]
 a66(r1014): [78..79]
 a67(r1013): [80..81]
 a68(r411): [80..81]
 a69(r1012): [82..83]
 a70(r154): [84..85]
 a71(r576): [86..87]
 a72(r575): [85..87]
 a73(r1011): [85..87]
 a74(r571): [88..89]
 a75(r562): [90..93]
 a76(r569): [90..91]
 a77(r557): [92..97]
 a78(r568): [92..93]
 a79(r566): [94..95]
 a80(r563): [94..95]
 a81(r559): [96..101]
 a82(r561): [98..99]
 a83(r558): [98..101]
 a84(r556): [100..101]
 a85(r146): [102..103]
 a86(r553): [104..105]
 a87(r552): [103..105]
 a88(r1010): [103..105]
 a89(r548): [106..107]
 a90(r539): [108..113]
 a91(r546): [108..109]
 a92(r533): [110..111]
 a93(r545): [110..111]
 a94(r537): [112..113]
 a95(r534): [112..119]
 a96(r543): [114..115]
 a97(r540): [114..117]
 a98(r538): [116..119]
 a99(r535): [118..119]
 a100(r1009): [120..121]
 a101(r408): [128..129] [122..123]
 a102(r1008): [124..125]
 a103(r125): [160..161] [156..157] [146..147] [142..143] [136..137] [132..133] [126..127]
 a104(r1007): [130..131]
 a105(r1006): [132..133]
 a106(r519): [142..143] [136..137]
 a107(r1005): [136..137]
 a108(r521): [140..141]
 a109(r1004): [144..145]
 a110(r1003): [148..149]
 a111(r1002): [150..151]
 a112(r1001): [154..155]
 a113(r1000): [158..159]
 a114(r999): [162..163]
 a115(r998): [164..165]
 a116(r997): [168..169]
 a117(r996): [170..171]
 a118(r483): [172..175]
 a119(r481): [174..175]
 a120(r339): [176..429]
 a121(r355): [176..429]
 a122(r356): [176..429]
 a123(r416): [205..285] [192..199]
 a124(r418): [392..425] [186..285]
 a125(r463): [176..429]
 a126(r967): [176..429]
 a127(r970): [176..429]
 a128(r971): [176..429]
 a129(r972): [176..429]
 a130(r987): [176..429]
 a131(r989 [0]): [176..429]
 a131(r989 [1]): [176..429]
 a132(r990 [0]): [176..429]
 a132(r990 [1]): [176..429]
 a133(r992 [0]): [176..429]
 a133(r992 [1]): [176..429]
 a134(r993 [0]): [176..429]
 a134(r993 [1]): [176..429]
 a135(r1070): [286..287]
 a136(r1069): [288..289]
 a137(r979 [0]): [176..176]
 a137(r979 [1]): [176..176]
 a138(r915): [176..177]
 a139(r368): [428..429] [292..329] [176..185]
 a140(r370): [292..307] [176..179]
 a141(r372): [292..301] [176..179]
 a142(r373): [292..297] [176..179]
 a143(r374): [292..295] [176..179]
 a144(r375): [292..293] [176..179]
 a145(r389): [426..429] [379..380] [292..368] [176..185]
 a146(r968): [176..179]
 a147(r969): [176..179]
 a148(r981 [0]): [178..179]
 a148(r981 [1]): [178..179]
 a149(r860): [178..179]
 a150(r857): [290..291]
 a151(r1059): [294..295]
 a152(r1058): [296..297]
 a153(r1057): [298..299]
 a154(r371): [300..303]
 a155(r1056): [302..303]
 a156(r1055): [304..305]
 a157(r369): [304..309]
 a158(r346): [306..429] [278..279] [268..275] [180..265]
 a159(r1054): [308..309]
 a160(r1053): [310..311]
 a161(r353): [324..325] [320..321] [310..315]
 a162(r1052): [316..317]
 a163(r283 [0]): [318..319] [312..313]
 a163(r283 [1]): [318..319] [312..313]
 a164(r1051): [312..313]
 a165(r1050 [0]): [314..315]
 a165(r1050 [1]): [314..315]
 a166(r1049): [322..323]
 a167(r984 [0]): [180..180]
 a167(r984 [1]): [180..180]
 a168(r394): [180..181]
 a169(r983): [180..181]
 a170(r982): [180..181]
 a171(r429): [180..181]
 a172(r349): [426..427] [355..356] [328..345] [182..185]
 a173(r279): [180..183]
 a174(r216): [180..183]
 a175(r364): [426..427] [328..393] [184..185]
 a176(r347): [426..427] [328..397] [184..185]
 a177(r173): [426..427] [422..423] [404..419] [328..397] [180..185]
 a178(r348): [426..427] [377..388] [328..370] [180..185]
 a179(r365): [426..427] [328..387] [180..185]
 a180(r393): [426..427] [379..382] [328..372] [180..185]
 a181(r423): [426..427] [379..383] [328..374] [180..185]
 a182(r794): [326..327]
 a183(r1045): [330..331]
 a184(r786): [332..333]
 a185(r787): [334..335]
 a186(r784): [334..335]
 a187(r785): [336..337]
 a188(r783): [342..343]
 a189(r1044): [338..339]
 a190(r181 [0]): [352..425] [340..341] [272..273] [268..269] [186..263]
 a190(r181 [1]): [352..425] [340..341] [272..273] [268..269] [186..263]
 a191(r1043): [355..356]
 a192(r776): [357..360]
 a193(r778): [357..358]
 a194(r777): [359..362]
 a195(r774): [361..362]
 a196(r773): [363..364]
 a197(r366): [364..366] [353..354]
 a198(r398): [364..425] [200..201] [186..188]
 a199(r772): [426..427]
 a200(r1042): [344..345]
 a201(r767): [346..349]
 a202(r769): [346..347]
 a203(r768): [348..351]
 a204(r765): [350..351]
 a205(r764): [352..353]
 a206(r397): [404..425] [365..401] [353..354] [200..202] [186..193]
 a207(r763): [365..366]
 a208(r227): [367..391]
 a209(r748): [386..391] [369..378]
 a210(r752): [386..391] [371..378]
 a211(r760): [373..376]
 a212(r759): [373..374]
 a213(r757): [375..376]
 a214(r756): [381..382]
 a215(r755): [384..385]
 a216(r754): [383..385]
 a217(r751): [387..391]
 a218(r750): [388..391]
 a219(r749): [388..389]
 a220(r747): [390..391]
 a221(r340): [404..405] [392..399]
 a222(r1041): [394..395]
 a223(r345): [398..425] [233..234] [229..230] [186..224]
 a224(r362): [400..425] [186..210]
 a225(r402): [402..425] [244..250] [186..238]
 a226(r403): [404..425] [244..251] [186..239]
 a227(r1040): [406..407]
 a228(r1039 [0]): [408..409]
 a228(r1039 [1]): [408..409]
 a229(r1038 [0]): [410..411]
 a229(r1038 [1]): [410..411]
 a230(r743): [412..413]
 a231(r221): [412..415]
 a232(r222): [414..417]
 a233(r195): [416..425] [186..251]
 a234(r193): [418..425] [186..251]
 a235(r986): [186..187]
 a236(r420): [424..425] [186..187]
 a237(r354): [229..236] [186..227]
 a238(r363): [200..206] [186..189]
 a239(r404): [200..257] [186..189]
 a240(r220): [420..421]
 a241(r734): [188..189]
 a242(r183): [201..261] [188..199]
 a243(r735): [190..191]
 a244(r1037): [194..195]
 a245(r729): [196..197]
 a246(r727): [198..199]
 a247(r721): [201..202]
 a248(r720): [203..204]
 a249(r716): [205..206]
 a250(r1036): [207..208]
 a251(r1035): [209..210]
 a252(r1034): [211..212]
 a253(r1033 [0]): [213..214]
 a253(r1033 [1]): [213..214]
 a254(r1032 [0]): [215..216]
 a254(r1032 [1]): [215..216]
 a255(r704): [217..220]
 a256(r200): [217..218]
 a257(r1072): [219..224]
 a258(r201): [221..222]
 a259(r1073): [223..224]
 a260(r988): [225..226]
 a261(r341): [231..232] [225..226]
 a262(r703): [227..228]
 a263(r360): [237..247] [225..228]
 a264(r361): [237..245] [225..228]
 a265(r199): [235..236]
 a266(r359): [246..260] [238..243]
 a267(r695): [238..239]
 a268(r692): [240..241]
 a269(r688): [242..243]
 a270(r682): [248..249]
 a271(r681): [250..251]
 a272(r1031): [252..253]
 a273(r674): [254..255]
 a274(r672): [256..257]
 a275(r1030): [258..259]
 a276(r664): [260..261]
 a277(r1029): [262..263]
 a278(r1028 [0]): [264..265]
 a278(r1028 [1]): [264..265]
 a279(r1027): [266..267]
 a280(r1026): [268..269]
 a281(r1025 [0]): [270..271]
 a281(r1025 [1]): [270..271]
 a282(r1024 [0]): [274..275]
 a282(r1024 [1]): [274..275]
 a283(r1023): [276..277]
 a284(r1022): [280..281]
 a285(r651 [0]): [282..283]
 a285(r651 [1]): [282..283]
 a286(r1021 [0]): [282..283]
 a286(r1021 [1]): [282..283]
 a287(r1020 [0]): [284..285]
 a287(r1020 [1]): [284..285]
 a288(r339): [430..478]
 a289(r355): [430..478]
 a290(r356): [430..478]
 a291(r368): [430..478]
 a292(r370): [430..478]
 a293(r372): [430..478]
 a294(r373): [430..478]
 a295(r374): [430..478]
 a296(r375): [430..478]
 a297(r389): [430..478]
 a298(r463): [430..478]
 a299(r915): [430..478]
 a300(r967): [430..478]
 a301(r968): [430..478]
 a302(r969): [430..478]
 a303(r970): [430..478]
 a304(r971): [430..478]
 a305(r972): [430..478]
 a306(r979 [0]): [430..478]
 a306(r979 [1]): [430..478]
 a307(r987): [430..478]
 a308(r989 [0]): [430..478]
 a308(r989 [1]): [430..478]
 a309(r990 [0]): [430..478]
 a309(r990 [1]): [430..478]
 a310(r992 [0]): [430..478]
 a310(r992 [1]): [430..478]
 a311(r993 [0]): [430..478]
 a311(r993 [1]): [430..478]
 a312(r1068): [430..431]
 a313(r957): [430..431]
 a314(r1067): [432..433]
 a315(r955): [434..435]
 a316(r951): [434..439]
 a317(r947): [434..443]
 a318(r954): [436..437]
 a319(r928): [438..457]
 a320(r950): [440..441]
 a321(r457): [442..457]
 a322(r946): [444..445]
 a323(r452): [446..457]
 a324(r1066): [446..447]
 a325(r941): [446..447]
 a326(r1065): [448..449]
 a327(r939): [450..451]
 a328(r935): [450..455]
 a329(r931): [450..453]
 a330(r938): [452..453]
 a331(r930): [454..455]
 a332(r934): [456..457]
 a333(r925): [458..459]
 a334(r924): [460..461]
 a335(r919): [460..465]
 a336(r923): [462..463]
 a337(r922): [464..469]
 a338(r918): [466..467]
 a339(r917): [468..471]
 a340(r921): [470..473]
 a341(r916): [472..474]
 a342(r475): [473..474]
 a343(r914): [475..476]
 a344(r913): [477..478]
 a345(r339): [479..541]
 a346(r355): [479..541]
 a347(r356): [479..541]
 a348(r368): [479..541]
 a349(r370): [479..541]
 a350(r372): [479..541]
 a351(r373): [479..541]
 a352(r374): [479..541]
 a353(r375): [479..541]
 a354(r389): [479..541]
 a355(r463): [479..541]
 a356(r860): [479..541]
 a357(r967): [479..541]
 a358(r968): [479..541]
 a359(r969): [479..541]
 a360(r970): [479..541]
 a361(r971): [479..541]
 a362(r972): [479..541]
 a363(r981 [0]): [479..541]
 a363(r981 [1]): [479..541]
 a364(r987): [479..541]
 a365(r989 [0]): [479..541]
 a365(r989 [1]): [479..541]
 a366(r990 [0]): [479..541]
 a366(r990 [1]): [479..541]
 a367(r992 [0]): [479..541]
 a367(r992 [1]): [479..541]
 a368(r993 [0]): [479..541]
 a368(r993 [1]): [479..541]
 a369(r1064): [479..480]
 a370(r908): [479..480]
 a371(r1063): [481..482]
 a372(r906): [483..484]
 a373(r901): [483..486]
 a374(r896): [483..488]
 a375(r380): [485..518]
 a376(r905): [485..490]
 a377(r900): [487..494]
 a378(r895): [489..498]
 a379(r904): [491..492]
 a380(r873): [493..520]
 a381(r899): [495..496]
 a382(r309): [497..518]
 a383(r894): [499..500]
 a384(r314): [501..518]
 a385(r1062): [501..502]
 a386(r889): [501..502]
 a387(r1061): [503..504]
 a388(r887): [505..506]
 a389(r882): [505..514]
 a390(r877): [505..510]
 a391(r886): [507..508]
 a392(r885): [509..510]
 a393(r876): [511..512]
 a394(r875): [513..514]
 a395(r881): [515..516]
 a396(r880): [517..518]
 a397(r1060): [519..520]
 a398(r870): [521..522]
 a399(r869): [523..524]
 a400(r864): [523..528]
 a401(r868): [525..526]
 a402(r867): [527..532]
 a403(r863): [529..530]
 a404(r862): [531..534]
 a405(r866): [533..536]
 a406(r861): [535..537]
 a407(r296): [536..537]
 a408(r859): [538..539]
 a409(r858): [540..541]
 a410(r173): [542..608]
 a411(r216): [542..608]
 a412(r279): [560..608] [542..547]
 a413(r339): [542..608]
 a414(r346): [542..608]
 a415(r348): [542..608]
 a416(r355): [542..608]
 a417(r356): [542..608]
 a418(r365): [542..608]
 a419(r368): [542..608]
 a420(r389): [542..608]
 a421(r393): [542..608]
 a422(r394): [542..608]
 a423(r423): [542..608]
 a424(r429): [542..608]
 a425(r463): [542..608]
 a426(r967): [542..608]
 a427(r970): [542..608]
 a428(r971): [542..608]
 a429(r972): [542..608]
 a430(r982): [542..608]
 a431(r983): [542..608]
 a432(r984 [0]): [542..608]
 a432(r984 [1]): [542..608]
 a433(r987): [542..608]
 a434(r989 [0]): [542..608]
 a434(r989 [1]): [542..608]
 a435(r990 [0]): [542..608]
 a435(r990 [1]): [542..608]
 a436(r992 [0]): [542..608]
 a436(r992 [1]): [542..608]
 a437(r993 [0]): [542..608]
 a437(r993 [1]): [542..608]
 a438(r1048): [548..549]
 a439(r834): [548..551]
 a440(r833 [0]): [550..555]
 a440(r833 [1]): [550..555]
 a441(r1047): [552..553]
 a442(r350): [585..590] [554..566]
 a443(r352): [583..588] [554..564]
 a444(r1046 [0]): [556..557]
 a444(r1046 [1]): [556..557]
 a445(r351): [585..586] [556..562]
 a446(r830): [558..559]
 a447(r829): [563..568]
 a448(r824): [565..570]
 a449(r819): [567..572]
 a450(r828): [569..574]
 a451(r823): [571..576]
 a452(r818): [573..578]
 a453(r827): [575..580]
 a454(r822): [577..582]
 a455(r817): [579..582]
 a456(r821): [581..584]
 a457(r801): [607..608] [583..584] [542..543]
 a458(r815): [587..592]
 a459(r810): [589..594]
 a460(r805): [591..596]
 a461(r814): [593..598]
 a462(r809): [595..600]
 a463(r804): [597..604]
 a464(r813): [599..602]
 a465(r808): [601..604]
 a466(r807): [603..608]
 a467(r803): [605..606]
 a468(r798): [544..545]
 a469(r796): [546..547]
 a470(r181 [0]): [609..624]
 a470(r181 [1]): [609..624]
 a471(r193): [609..624]
 a472(r195): [609..624]
 a473(r339): [609..624]
 a474(r345): [609..624]
 a475(r346): [609..624]
 a476(r354): [609..624]
 a477(r355): [609..624]
 a478(r356): [609..624]
 a479(r362): [609..624]
 a480(r363): [609..624]
 a481(r397): [609..624]
 a482(r398): [609..624]
 a483(r402): [609..624]
 a484(r403): [609..624]
 a485(r404): [609..624]
 a486(r418): [609..624]
 a487(r420): [609..624]
 a488(r463): [609..624]
 a489(r967): [609..624]
 a490(r970): [609..624]
 a491(r971): [609..624]
 a492(r972): [609..624]
 a493(r986): [609..624]
 a494(r987): [609..624]
 a495(r989 [0]): [609..624]
 a495(r989 [1]): [609..624]
 a496(r990 [0]): [609..624]
 a496(r990 [1]): [609..624]
 a497(r992 [0]): [609..624]
 a497(r992 [1]): [609..624]
 a498(r993 [0]): [609..624]
 a498(r993 [1]): [609..624]
 a499(r220): [621..622]
 a500(r395): [623..624] [619..620] [609..614]
 a501(r741): [623..624] [619..620]
 a502(r396): [619..620] [609..610]
 a503(r737): [611..612]
 a504(r1077): [613..618]
 a505(r736): [615..616]
 a506(r1076): [617..618]
 a507(r181 [0]): [625..640]
 a507(r181 [1]): [625..640]
 a508(r183): [625..640]
 a509(r193): [625..640]
 a510(r195): [625..640]
 a511(r339): [625..640]
 a512(r341): [625..640]
 a513(r346): [625..640]
 a514(r354): [625..640]
 a515(r355): [625..640]
 a516(r356): [625..640]
 a517(r360): [625..640]
 a518(r361): [625..640]
 a519(r402): [625..640]
 a520(r403): [625..640]
 a521(r404): [625..640]
 a522(r416): [625..640]
 a523(r418): [625..640]
 a524(r463): [625..640]
 a525(r967): [625..640]
 a526(r970): [625..640]
 a527(r971): [625..640]
 a528(r972): [625..640]
 a529(r987): [625..640]
 a530(r988): [625..640]
 a531(r989 [0]): [625..640]
 a531(r989 [1]): [625..640]
 a532(r990 [0]): [625..640]
 a532(r990 [1]): [625..640]
 a533(r992 [0]): [625..640]
 a533(r992 [1]): [625..640]
 a534(r993 [0]): [625..640]
 a534(r993 [1]): [625..640]
 a535(r199): [637..638]
 a536(r400): [639..640] [635..636] [625..630]
 a537(r701): [639..640] [635..636]
 a538(r401): [635..636] [625..626]
 a539(r697): [627..628]
 a540(r1075): [629..634]
 a541(r696): [631..632]
 a542(r1074): [633..634]
    Creating cap  a543(r1070,l0: a135(r1070,l1))
    Creating cap  a544(r1069,l0: a136(r1069,l1))
    Creating cap  a545(r979,l0: a137(r979,l1))
    Creating cap  a546(r915,l0: a138(r915,l1))
    Creating cap  a547(r368,l0: a139(r368,l1))
    Creating cap  a548(r370,l0: a140(r370,l1))
    Creating cap  a549(r372,l0: a141(r372,l1))
    Creating cap  a550(r373,l0: a142(r373,l1))
    Creating cap  a551(r374,l0: a143(r374,l1))
    Creating cap  a552(r375,l0: a144(r375,l1))
    Creating cap  a553(r389,l0: a145(r389,l1))
    Creating cap  a554(r968,l0: a146(r968,l1))
    Creating cap  a555(r969,l0: a147(r969,l1))
    Creating cap  a556(r981,l0: a148(r981,l1))
    Creating cap  a557(r860,l0: a149(r860,l1))
    Creating cap  a558(r857,l0: a150(r857,l1))
    Creating cap  a559(r1059,l0: a151(r1059,l1))
    Creating cap  a560(r1058,l0: a152(r1058,l1))
    Creating cap  a561(r1057,l0: a153(r1057,l1))
    Creating cap  a562(r371,l0: a154(r371,l1))
    Creating cap  a563(r1056,l0: a155(r1056,l1))
    Creating cap  a564(r1055,l0: a156(r1055,l1))
    Creating cap  a565(r369,l0: a157(r369,l1))
    Creating cap  a566(r346,l0: a158(r346,l1))
    Creating cap  a567(r1054,l0: a159(r1054,l1))
    Creating cap  a568(r1053,l0: a160(r1053,l1))
    Creating cap  a569(r353,l0: a161(r353,l1))
    Creating cap  a570(r1052,l0: a162(r1052,l1))
    Creating cap  a571(r283,l0: a163(r283,l1))
    Creating cap  a572(r1051,l0: a164(r1051,l1))
    Creating cap  a573(r1050,l0: a165(r1050,l1))
    Creating cap  a574(r1049,l0: a166(r1049,l1))
    Creating cap  a575(r984,l0: a167(r984,l1))
    Creating cap  a576(r394,l0: a168(r394,l1))
    Creating cap  a577(r983,l0: a169(r983,l1))
    Creating cap  a578(r982,l0: a170(r982,l1))
    Creating cap  a579(r429,l0: a171(r429,l1))
    Creating cap  a580(r349,l0: a172(r349,l1))
    Creating cap  a581(r279,l0: a173(r279,l1))
    Creating cap  a582(r216,l0: a174(r216,l1))
    Creating cap  a583(r364,l0: a175(r364,l1))
    Creating cap  a584(r347,l0: a176(r347,l1))
    Creating cap  a585(r173,l0: a177(r173,l1))
    Creating cap  a586(r348,l0: a178(r348,l1))
    Creating cap  a587(r365,l0: a179(r365,l1))
    Creating cap  a588(r393,l0: a180(r393,l1))
    Creating cap  a589(r423,l0: a181(r423,l1))
    Creating cap  a590(r794,l0: a182(r794,l1))
    Creating cap  a591(r1045,l0: a183(r1045,l1))
    Creating cap  a592(r786,l0: a184(r786,l1))
    Creating cap  a593(r787,l0: a185(r787,l1))
    Creating cap  a594(r784,l0: a186(r784,l1))
    Creating cap  a595(r785,l0: a187(r785,l1))
    Creating cap  a596(r783,l0: a188(r783,l1))
    Creating cap  a597(r1044,l0: a189(r1044,l1))
    Creating cap  a598(r181,l0: a190(r181,l1))
    Creating cap  a599(r1043,l0: a191(r1043,l1))
    Creating cap  a600(r776,l0: a192(r776,l1))
    Creating cap  a601(r778,l0: a193(r778,l1))
    Creating cap  a602(r777,l0: a194(r777,l1))
    Creating cap  a603(r774,l0: a195(r774,l1))
    Creating cap  a604(r773,l0: a196(r773,l1))
    Creating cap  a605(r366,l0: a197(r366,l1))
    Creating cap  a606(r398,l0: a198(r398,l1))
    Creating cap  a607(r772,l0: a199(r772,l1))
    Creating cap  a608(r1042,l0: a200(r1042,l1))
    Creating cap  a609(r767,l0: a201(r767,l1))
    Creating cap  a610(r769,l0: a202(r769,l1))
    Creating cap  a611(r768,l0: a203(r768,l1))
    Creating cap  a612(r765,l0: a204(r765,l1))
    Creating cap  a613(r764,l0: a205(r764,l1))
    Creating cap  a614(r397,l0: a206(r397,l1))
    Creating cap  a615(r763,l0: a207(r763,l1))
    Creating cap  a616(r227,l0: a208(r227,l1))
    Creating cap  a617(r748,l0: a209(r748,l1))
    Creating cap  a618(r752,l0: a210(r752,l1))
    Creating cap  a619(r760,l0: a211(r760,l1))
    Creating cap  a620(r759,l0: a212(r759,l1))
    Creating cap  a621(r757,l0: a213(r757,l1))
    Creating cap  a622(r756,l0: a214(r756,l1))
    Creating cap  a623(r755,l0: a215(r755,l1))
    Creating cap  a624(r754,l0: a216(r754,l1))
    Creating cap  a625(r751,l0: a217(r751,l1))
    Creating cap  a626(r750,l0: a218(r750,l1))
    Creating cap  a627(r749,l0: a219(r749,l1))
    Creating cap  a628(r747,l0: a220(r747,l1))
    Creating cap  a629(r340,l0: a221(r340,l1))
    Creating cap  a630(r1041,l0: a222(r1041,l1))
    Creating cap  a631(r345,l0: a223(r345,l1))
    Creating cap  a632(r362,l0: a224(r362,l1))
    Creating cap  a633(r402,l0: a225(r402,l1))
    Creating cap  a634(r403,l0: a226(r403,l1))
    Creating cap  a635(r1040,l0: a227(r1040,l1))
    Creating cap  a636(r1039,l0: a228(r1039,l1))
    Creating cap  a637(r1038,l0: a229(r1038,l1))
    Creating cap  a638(r743,l0: a230(r743,l1))
    Creating cap  a639(r221,l0: a231(r221,l1))
    Creating cap  a640(r222,l0: a232(r222,l1))
    Creating cap  a641(r195,l0: a233(r195,l1))
    Creating cap  a642(r193,l0: a234(r193,l1))
    Creating cap  a643(r986,l0: a235(r986,l1))
    Creating cap  a644(r420,l0: a236(r420,l1))
    Creating cap  a645(r354,l0: a237(r354,l1))
    Creating cap  a646(r363,l0: a238(r363,l1))
    Creating cap  a647(r404,l0: a239(r404,l1))
    Creating cap  a648(r220,l0: a240(r220,l1))
    Creating cap  a649(r734,l0: a241(r734,l1))
    Creating cap  a650(r183,l0: a242(r183,l1))
    Creating cap  a651(r735,l0: a243(r735,l1))
    Creating cap  a652(r1037,l0: a244(r1037,l1))
    Creating cap  a653(r729,l0: a245(r729,l1))
    Creating cap  a654(r727,l0: a246(r727,l1))
    Creating cap  a655(r721,l0: a247(r721,l1))
    Creating cap  a656(r720,l0: a248(r720,l1))
    Creating cap  a657(r716,l0: a249(r716,l1))
    Creating cap  a658(r1036,l0: a250(r1036,l1))
    Creating cap  a659(r1035,l0: a251(r1035,l1))
    Creating cap  a660(r1034,l0: a252(r1034,l1))
    Creating cap  a661(r1033,l0: a253(r1033,l1))
    Creating cap  a662(r1032,l0: a254(r1032,l1))
    Creating cap  a663(r704,l0: a255(r704,l1))
    Creating cap  a664(r200,l0: a256(r200,l1))
    Creating cap  a665(r1072,l0: a257(r1072,l1))
    Creating cap  a666(r201,l0: a258(r201,l1))
    Creating cap  a667(r1073,l0: a259(r1073,l1))
    Creating cap  a668(r988,l0: a260(r988,l1))
    Creating cap  a669(r341,l0: a261(r341,l1))
    Creating cap  a670(r703,l0: a262(r703,l1))
    Creating cap  a671(r360,l0: a263(r360,l1))
    Creating cap  a672(r361,l0: a264(r361,l1))
    Creating cap  a673(r199,l0: a265(r199,l1))
    Creating cap  a674(r359,l0: a266(r359,l1))
    Creating cap  a675(r695,l0: a267(r695,l1))
    Creating cap  a676(r692,l0: a268(r692,l1))
    Creating cap  a677(r688,l0: a269(r688,l1))
    Creating cap  a678(r682,l0: a270(r682,l1))
    Creating cap  a679(r681,l0: a271(r681,l1))
    Creating cap  a680(r1031,l0: a272(r1031,l1))
    Creating cap  a681(r674,l0: a273(r674,l1))
    Creating cap  a682(r672,l0: a274(r672,l1))
    Creating cap  a683(r1030,l0: a275(r1030,l1))
    Creating cap  a684(r664,l0: a276(r664,l1))
    Creating cap  a685(r1029,l0: a277(r1029,l1))
    Creating cap  a686(r1028,l0: a278(r1028,l1))
    Creating cap  a687(r1027,l0: a279(r1027,l1))
    Creating cap  a688(r1026,l0: a280(r1026,l1))
    Creating cap  a689(r1025,l0: a281(r1025,l1))
    Creating cap  a690(r1024,l0: a282(r1024,l1))
    Creating cap  a691(r1023,l0: a283(r1023,l1))
    Creating cap  a692(r1022,l0: a284(r1022,l1))
    Creating cap  a693(r651,l0: a285(r651,l1))
    Creating cap  a694(r1021,l0: a286(r1021,l1))
    Creating cap  a695(r1020,l0: a287(r1020,l1))
    Creating cap  a696(r1068,l1: a312(r1068,l6))
    Creating cap  a697(r957,l1: a313(r957,l6))
    Creating cap  a698(r1067,l1: a314(r1067,l6))
    Creating cap  a699(r955,l1: a315(r955,l6))
    Creating cap  a700(r951,l1: a316(r951,l6))
    Creating cap  a701(r947,l1: a317(r947,l6))
    Creating cap  a702(r954,l1: a318(r954,l6))
    Creating cap  a703(r928,l1: a319(r928,l6))
    Creating cap  a704(r950,l1: a320(r950,l6))
    Creating cap  a705(r457,l1: a321(r457,l6))
    Creating cap  a706(r946,l1: a322(r946,l6))
    Creating cap  a707(r452,l1: a323(r452,l6))
    Creating cap  a708(r1066,l1: a324(r1066,l6))
    Creating cap  a709(r941,l1: a325(r941,l6))
    Creating cap  a710(r1065,l1: a326(r1065,l6))
    Creating cap  a711(r939,l1: a327(r939,l6))
    Creating cap  a712(r935,l1: a328(r935,l6))
    Creating cap  a713(r931,l1: a329(r931,l6))
    Creating cap  a714(r938,l1: a330(r938,l6))
    Creating cap  a715(r930,l1: a331(r930,l6))
    Creating cap  a716(r934,l1: a332(r934,l6))
    Creating cap  a717(r925,l1: a333(r925,l6))
    Creating cap  a718(r924,l1: a334(r924,l6))
    Creating cap  a719(r919,l1: a335(r919,l6))
    Creating cap  a720(r923,l1: a336(r923,l6))
    Creating cap  a721(r922,l1: a337(r922,l6))
    Creating cap  a722(r918,l1: a338(r918,l6))
    Creating cap  a723(r917,l1: a339(r917,l6))
    Creating cap  a724(r921,l1: a340(r921,l6))
    Creating cap  a725(r916,l1: a341(r916,l6))
    Creating cap  a726(r475,l1: a342(r475,l6))
    Creating cap  a727(r914,l1: a343(r914,l6))
    Creating cap  a728(r913,l1: a344(r913,l6))
    Creating cap  a729(r1064,l1: a369(r1064,l5))
    Creating cap  a730(r908,l1: a370(r908,l5))
    Creating cap  a731(r1063,l1: a371(r1063,l5))
    Creating cap  a732(r906,l1: a372(r906,l5))
    Creating cap  a733(r901,l1: a373(r901,l5))
    Creating cap  a734(r896,l1: a374(r896,l5))
    Creating cap  a735(r380,l1: a375(r380,l5))
    Creating cap  a736(r905,l1: a376(r905,l5))
    Creating cap  a737(r900,l1: a377(r900,l5))
    Creating cap  a738(r895,l1: a378(r895,l5))
    Creating cap  a739(r904,l1: a379(r904,l5))
    Creating cap  a740(r873,l1: a380(r873,l5))
    Creating cap  a741(r899,l1: a381(r899,l5))
    Creating cap  a742(r309,l1: a382(r309,l5))
    Creating cap  a743(r894,l1: a383(r894,l5))
    Creating cap  a744(r314,l1: a384(r314,l5))
    Creating cap  a745(r1062,l1: a385(r1062,l5))
    Creating cap  a746(r889,l1: a386(r889,l5))
    Creating cap  a747(r1061,l1: a387(r1061,l5))
    Creating cap  a748(r887,l1: a388(r887,l5))
    Creating cap  a749(r882,l1: a389(r882,l5))
    Creating cap  a750(r877,l1: a390(r877,l5))
    Creating cap  a751(r886,l1: a391(r886,l5))
    Creating cap  a752(r885,l1: a392(r885,l5))
    Creating cap  a753(r876,l1: a393(r876,l5))
    Creating cap  a754(r875,l1: a394(r875,l5))
    Creating cap  a755(r881,l1: a395(r881,l5))
    Creating cap  a756(r880,l1: a396(r880,l5))
    Creating cap  a757(r1060,l1: a397(r1060,l5))
    Creating cap  a758(r870,l1: a398(r870,l5))
    Creating cap  a759(r869,l1: a399(r869,l5))
    Creating cap  a760(r864,l1: a400(r864,l5))
    Creating cap  a761(r868,l1: a401(r868,l5))
    Creating cap  a762(r867,l1: a402(r867,l5))
    Creating cap  a763(r863,l1: a403(r863,l5))
    Creating cap  a764(r862,l1: a404(r862,l5))
    Creating cap  a765(r866,l1: a405(r866,l5))
    Creating cap  a766(r861,l1: a406(r861,l5))
    Creating cap  a767(r296,l1: a407(r296,l5))
    Creating cap  a768(r859,l1: a408(r859,l5))
    Creating cap  a769(r858,l1: a409(r858,l5))
    Creating cap  a770(r1048,l1: a438(r1048,l4))
    Creating cap  a771(r834,l1: a439(r834,l4))
    Creating cap  a772(r833,l1: a440(r833,l4))
    Creating cap  a773(r1047,l1: a441(r1047,l4))
    Creating cap  a774(r350,l1: a442(r350,l4))
    Creating cap  a775(r352,l1: a443(r352,l4))
    Creating cap  a776(r1046,l1: a444(r1046,l4))
    Creating cap  a777(r351,l1: a445(r351,l4))
    Creating cap  a778(r830,l1: a446(r830,l4))
    Creating cap  a779(r829,l1: a447(r829,l4))
    Creating cap  a780(r824,l1: a448(r824,l4))
    Creating cap  a781(r819,l1: a449(r819,l4))
    Creating cap  a782(r828,l1: a450(r828,l4))
    Creating cap  a783(r823,l1: a451(r823,l4))
    Creating cap  a784(r818,l1: a452(r818,l4))
    Creating cap  a785(r827,l1: a453(r827,l4))
    Creating cap  a786(r822,l1: a454(r822,l4))
    Creating cap  a787(r817,l1: a455(r817,l4))
    Creating cap  a788(r821,l1: a456(r821,l4))
    Creating cap  a789(r801,l1: a457(r801,l4))
    Creating cap  a790(r815,l1: a458(r815,l4))
    Creating cap  a791(r810,l1: a459(r810,l4))
    Creating cap  a792(r805,l1: a460(r805,l4))
    Creating cap  a793(r814,l1: a461(r814,l4))
    Creating cap  a794(r809,l1: a462(r809,l4))
    Creating cap  a795(r804,l1: a463(r804,l4))
    Creating cap  a796(r813,l1: a464(r813,l4))
    Creating cap  a797(r808,l1: a465(r808,l4))
    Creating cap  a798(r807,l1: a466(r807,l4))
    Creating cap  a799(r803,l1: a467(r803,l4))
    Creating cap  a800(r798,l1: a468(r798,l4))
    Creating cap  a801(r796,l1: a469(r796,l4))
    Creating cap  a802(r395,l1: a500(r395,l3))
    Creating cap  a803(r741,l1: a501(r741,l3))
    Creating cap  a804(r396,l1: a502(r396,l3))
    Creating cap  a805(r737,l1: a503(r737,l3))
    Creating cap  a806(r1077,l1: a504(r1077,l3))
    Creating cap  a807(r736,l1: a505(r736,l3))
    Creating cap  a808(r1076,l1: a506(r1076,l3))
    Creating cap  a809(r400,l1: a536(r400,l2))
    Creating cap  a810(r701,l1: a537(r701,l2))
    Creating cap  a811(r401,l1: a538(r401,l2))
    Creating cap  a812(r697,l1: a539(r697,l2))
    Creating cap  a813(r1075,l1: a540(r1075,l2))
    Creating cap  a814(r696,l1: a541(r696,l2))
    Creating cap  a815(r1074,l1: a542(r1074,l2))
    Creating cap  a816(r1068,l0: a696(r1068,l1: a312(r1068,l6)))
    Creating cap  a817(r957,l0: a697(r957,l1: a313(r957,l6)))
    Creating cap  a818(r1067,l0: a698(r1067,l1: a314(r1067,l6)))
    Creating cap  a819(r955,l0: a699(r955,l1: a315(r955,l6)))
    Creating cap  a820(r951,l0: a700(r951,l1: a316(r951,l6)))
    Creating cap  a821(r947,l0: a701(r947,l1: a317(r947,l6)))
    Creating cap  a822(r954,l0: a702(r954,l1: a318(r954,l6)))
    Creating cap  a823(r928,l0: a703(r928,l1: a319(r928,l6)))
    Creating cap  a824(r950,l0: a704(r950,l1: a320(r950,l6)))
    Creating cap  a825(r457,l0: a705(r457,l1: a321(r457,l6)))
    Creating cap  a826(r946,l0: a706(r946,l1: a322(r946,l6)))
    Creating cap  a827(r452,l0: a707(r452,l1: a323(r452,l6)))
    Creating cap  a828(r1066,l0: a708(r1066,l1: a324(r1066,l6)))
    Creating cap  a829(r941,l0: a709(r941,l1: a325(r941,l6)))
    Creating cap  a830(r1065,l0: a710(r1065,l1: a326(r1065,l6)))
    Creating cap  a831(r939,l0: a711(r939,l1: a327(r939,l6)))
    Creating cap  a832(r935,l0: a712(r935,l1: a328(r935,l6)))
    Creating cap  a833(r931,l0: a713(r931,l1: a329(r931,l6)))
    Creating cap  a834(r938,l0: a714(r938,l1: a330(r938,l6)))
    Creating cap  a835(r930,l0: a715(r930,l1: a331(r930,l6)))
    Creating cap  a836(r934,l0: a716(r934,l1: a332(r934,l6)))
    Creating cap  a837(r925,l0: a717(r925,l1: a333(r925,l6)))
    Creating cap  a838(r924,l0: a718(r924,l1: a334(r924,l6)))
    Creating cap  a839(r919,l0: a719(r919,l1: a335(r919,l6)))
    Creating cap  a840(r923,l0: a720(r923,l1: a336(r923,l6)))
    Creating cap  a841(r922,l0: a721(r922,l1: a337(r922,l6)))
    Creating cap  a842(r918,l0: a722(r918,l1: a338(r918,l6)))
    Creating cap  a843(r917,l0: a723(r917,l1: a339(r917,l6)))
    Creating cap  a844(r921,l0: a724(r921,l1: a340(r921,l6)))
    Creating cap  a845(r916,l0: a725(r916,l1: a341(r916,l6)))
    Creating cap  a846(r475,l0: a726(r475,l1: a342(r475,l6)))
    Creating cap  a847(r914,l0: a727(r914,l1: a343(r914,l6)))
    Creating cap  a848(r913,l0: a728(r913,l1: a344(r913,l6)))
    Creating cap  a849(r1064,l0: a729(r1064,l1: a369(r1064,l5)))
    Creating cap  a850(r908,l0: a730(r908,l1: a370(r908,l5)))
    Creating cap  a851(r1063,l0: a731(r1063,l1: a371(r1063,l5)))
    Creating cap  a852(r906,l0: a732(r906,l1: a372(r906,l5)))
    Creating cap  a853(r901,l0: a733(r901,l1: a373(r901,l5)))
    Creating cap  a854(r896,l0: a734(r896,l1: a374(r896,l5)))
    Creating cap  a855(r380,l0: a735(r380,l1: a375(r380,l5)))
    Creating cap  a856(r905,l0: a736(r905,l1: a376(r905,l5)))
    Creating cap  a857(r900,l0: a737(r900,l1: a377(r900,l5)))
    Creating cap  a858(r895,l0: a738(r895,l1: a378(r895,l5)))
    Creating cap  a859(r904,l0: a739(r904,l1: a379(r904,l5)))
    Creating cap  a860(r873,l0: a740(r873,l1: a380(r873,l5)))
    Creating cap  a861(r899,l0: a741(r899,l1: a381(r899,l5)))
    Creating cap  a862(r309,l0: a742(r309,l1: a382(r309,l5)))
    Creating cap  a863(r894,l0: a743(r894,l1: a383(r894,l5)))
    Creating cap  a864(r314,l0: a744(r314,l1: a384(r314,l5)))
    Creating cap  a865(r1062,l0: a745(r1062,l1: a385(r1062,l5)))
    Creating cap  a866(r889,l0: a746(r889,l1: a386(r889,l5)))
    Creating cap  a867(r1061,l0: a747(r1061,l1: a387(r1061,l5)))
    Creating cap  a868(r887,l0: a748(r887,l1: a388(r887,l5)))
    Creating cap  a869(r882,l0: a749(r882,l1: a389(r882,l5)))
    Creating cap  a870(r877,l0: a750(r877,l1: a390(r877,l5)))
    Creating cap  a871(r886,l0: a751(r886,l1: a391(r886,l5)))
    Creating cap  a872(r885,l0: a752(r885,l1: a392(r885,l5)))
    Creating cap  a873(r876,l0: a753(r876,l1: a393(r876,l5)))
    Creating cap  a874(r875,l0: a754(r875,l1: a394(r875,l5)))
    Creating cap  a875(r881,l0: a755(r881,l1: a395(r881,l5)))
    Creating cap  a876(r880,l0: a756(r880,l1: a396(r880,l5)))
    Creating cap  a877(r1060,l0: a757(r1060,l1: a397(r1060,l5)))
    Creating cap  a878(r870,l0: a758(r870,l1: a398(r870,l5)))
    Creating cap  a879(r869,l0: a759(r869,l1: a399(r869,l5)))
    Creating cap  a880(r864,l0: a760(r864,l1: a400(r864,l5)))
    Creating cap  a881(r868,l0: a761(r868,l1: a401(r868,l5)))
    Creating cap  a882(r867,l0: a762(r867,l1: a402(r867,l5)))
    Creating cap  a883(r863,l0: a763(r863,l1: a403(r863,l5)))
    Creating cap  a884(r862,l0: a764(r862,l1: a404(r862,l5)))
    Creating cap  a885(r866,l0: a765(r866,l1: a405(r866,l5)))
    Creating cap  a886(r861,l0: a766(r861,l1: a406(r861,l5)))
    Creating cap  a887(r296,l0: a767(r296,l1: a407(r296,l5)))
    Creating cap  a888(r859,l0: a768(r859,l1: a408(r859,l5)))
    Creating cap  a889(r858,l0: a769(r858,l1: a409(r858,l5)))
    Creating cap  a890(r1048,l0: a770(r1048,l1: a438(r1048,l4)))
    Creating cap  a891(r834,l0: a771(r834,l1: a439(r834,l4)))
    Creating cap  a892(r833,l0: a772(r833,l1: a440(r833,l4)))
    Creating cap  a893(r1047,l0: a773(r1047,l1: a441(r1047,l4)))
    Creating cap  a894(r350,l0: a774(r350,l1: a442(r350,l4)))
    Creating cap  a895(r352,l0: a775(r352,l1: a443(r352,l4)))
    Creating cap  a896(r1046,l0: a776(r1046,l1: a444(r1046,l4)))
    Creating cap  a897(r351,l0: a777(r351,l1: a445(r351,l4)))
    Creating cap  a898(r830,l0: a778(r830,l1: a446(r830,l4)))
    Creating cap  a899(r829,l0: a779(r829,l1: a447(r829,l4)))
    Creating cap  a900(r824,l0: a780(r824,l1: a448(r824,l4)))
    Creating cap  a901(r819,l0: a781(r819,l1: a449(r819,l4)))
    Creating cap  a902(r828,l0: a782(r828,l1: a450(r828,l4)))
    Creating cap  a903(r823,l0: a783(r823,l1: a451(r823,l4)))
    Creating cap  a904(r818,l0: a784(r818,l1: a452(r818,l4)))
    Creating cap  a905(r827,l0: a785(r827,l1: a453(r827,l4)))
    Creating cap  a906(r822,l0: a786(r822,l1: a454(r822,l4)))
    Creating cap  a907(r817,l0: a787(r817,l1: a455(r817,l4)))
    Creating cap  a908(r821,l0: a788(r821,l1: a456(r821,l4)))
    Creating cap  a909(r801,l0: a789(r801,l1: a457(r801,l4)))
    Creating cap  a910(r815,l0: a790(r815,l1: a458(r815,l4)))
    Creating cap  a911(r810,l0: a791(r810,l1: a459(r810,l4)))
    Creating cap  a912(r805,l0: a792(r805,l1: a460(r805,l4)))
    Creating cap  a913(r814,l0: a793(r814,l1: a461(r814,l4)))
    Creating cap  a914(r809,l0: a794(r809,l1: a462(r809,l4)))
    Creating cap  a915(r804,l0: a795(r804,l1: a463(r804,l4)))
    Creating cap  a916(r813,l0: a796(r813,l1: a464(r813,l4)))
    Creating cap  a917(r808,l0: a797(r808,l1: a465(r808,l4)))
    Creating cap  a918(r807,l0: a798(r807,l1: a466(r807,l4)))
    Creating cap  a919(r803,l0: a799(r803,l1: a467(r803,l4)))
    Creating cap  a920(r798,l0: a800(r798,l1: a468(r798,l4)))
    Creating cap  a921(r796,l0: a801(r796,l1: a469(r796,l4)))
    Creating cap  a922(r395,l0: a802(r395,l1: a500(r395,l3)))
    Creating cap  a923(r741,l0: a803(r741,l1: a501(r741,l3)))
    Creating cap  a924(r396,l0: a804(r396,l1: a502(r396,l3)))
    Creating cap  a925(r737,l0: a805(r737,l1: a503(r737,l3)))
    Creating cap  a926(r1077,l0: a806(r1077,l1: a504(r1077,l3)))
    Creating cap  a927(r736,l0: a807(r736,l1: a505(r736,l3)))
    Creating cap  a928(r1076,l0: a808(r1076,l1: a506(r1076,l3)))
    Creating cap  a929(r400,l0: a809(r400,l1: a536(r400,l2)))
    Creating cap  a930(r701,l0: a810(r701,l1: a537(r701,l2)))
    Creating cap  a931(r401,l0: a811(r401,l1: a538(r401,l2)))
    Creating cap  a932(r697,l0: a812(r697,l1: a539(r697,l2)))
    Creating cap  a933(r1075,l0: a813(r1075,l1: a540(r1075,l2)))
    Creating cap  a934(r696,l0: a814(r696,l1: a541(r696,l2)))
    Creating cap  a935(r1074,l0: a815(r1074,l1: a542(r1074,l2)))
+++Allocating 84960 bytes for conflict table (uncompressed size 128896)
;; a0(r993,l0) conflicts:
;;   subobject 0: a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:


;;   subobject 1: a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a557(r860,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a662(r1032,w0,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a690(r1024,w0,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a694(r1021,w0,l0) a695(r1020,w0,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a573(r1050,w0,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a637(r1038,w0,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:

;; a1(r992,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a557(r860,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a662(r1032,w0,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a690(r1024,w0,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a694(r1021,w0,l0) a695(r1020,w0,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a573(r1050,w0,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a637(r1038,w0,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:

;; a2(r990,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a557(r860,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a662(r1032,w0,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a690(r1024,w0,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a694(r1021,w0,l0) a695(r1020,w0,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a573(r1050,w0,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a637(r1038,w0,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:

;; a3(r989,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a557(r860,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a662(r1032,w0,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a690(r1024,w0,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a694(r1021,w0,l0) a695(r1020,w0,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a573(r1050,w0,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a637(r1038,w0,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs:

;; a4(r463,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a5(r987,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a6(r339,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a7(r418,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a558(r857,l0) a564(r1055,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a607(r772,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs:

;; a7(r418,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a629(r340,l0) a630(r1041,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs:

;; a8(r355,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a31(r1019,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a66(r1014,l0) a67(r1013,l0) a68(r411,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0) a102(r1008,l0) a104(r1007,l0) a105(r1006,l0) a107(r1005,l0) a106(r519,l0) a108(r521,l0) a109(r1004,l0) a110(r1003,l0) a111(r1002,l0) a112(r1001,l0) a113(r1000,l0) a114(r999,l0) a115(r998,l0) a116(r997,l0) a117(r996,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a9(r356,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a31(r1019,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a66(r1014,l0) a67(r1013,l0) a68(r411,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0) a102(r1008,l0) a104(r1007,l0) a105(r1006,l0) a107(r1005,l0) a106(r519,l0) a108(r521,l0) a109(r1004,l0) a110(r1003,l0) a111(r1002,l0) a112(r1001,l0) a113(r1000,l0) a114(r999,l0) a115(r998,l0) a116(r997,l0) a117(r996,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a10(r416,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a11(r967,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a31(r1019,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a66(r1014,l0) a67(r1013,l0) a68(r411,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0) a102(r1008,l0) a104(r1007,l0) a105(r1006,l0) a107(r1005,l0) a106(r519,l0) a108(r521,l0) a109(r1004,l0) a110(r1003,l0) a111(r1002,l0) a113(r1000,l0) a114(r999,l0) a115(r998,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a12(r970,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a13(r971,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a31(r1019,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a66(r1014,l0) a67(r1013,l0) a68(r411,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0) a102(r1008,l0) a104(r1007,l0) a105(r1006,l0) a107(r1005,l0) a106(r519,l0) a108(r521,l0) a109(r1004,l0) a110(r1003,l0) a111(r1002,l0) a112(r1001,l0) a113(r1000,l0) a114(r999,l0) a115(r998,l0) a116(r997,l0) a117(r996,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a14(r972,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0) a31(r1019,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a66(r1014,l0) a67(r1013,l0) a68(r411,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0) a102(r1008,l0) a104(r1007,l0) a105(r1006,l0) a107(r1005,l0) a106(r519,l0) a108(r521,l0) a109(r1004,l0) a110(r1003,l0) a111(r1002,l0) a112(r1001,l0) a113(r1000,l0) a114(r999,l0) a115(r998,l0) a116(r997,l0) a117(r996,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a668(r988,l0) a669(r341,l0) a673(r199,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a687(r1027,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a691(r1023,l0) a692(r1022,l0) a693(r651,w0,l0) a693(r651,w1,l0) a694(r1021,w0,l0) a694(r1021,w1,l0) a695(r1020,w0,l0) a695(r1020,w1,l0) a543(r1070,l0) a544(r1069,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0) a922(r395,l0) a923(r741,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a15(r171,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a18(r642,l0) a16(r640,l0) a17(r630,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r640,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a17(r630,l0) a19(r636,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r630,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a18(r642,l0) a16(r640,l0) a19(r636,l0) a22(r169,l0) a21(r637,l0) a23(r639,l0) a24(r634,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r642,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a15(r171,l0) a16(r640,l0) a17(r630,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r636,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a16(r640,l0) a17(r630,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r357,l0) conflicts: a24(r634,l0) a25(r358,l0) a27(r632,l0) a28(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r637,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a17(r630,l0) a22(r169,l0) a23(r639,l0) a24(r634,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r169,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a17(r630,l0) a21(r637,l0) a23(r639,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r639,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a17(r630,l0) a22(r169,l0) a21(r637,l0) a24(r634,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r634,l0) conflicts: a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a17(r630,l0) a20(r357,l0) a21(r637,l0) a23(r639,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r358,l0) conflicts: a20(r357,l0) a27(r632,l0) a28(r409,l0) a26(r410,l0) a30(r412,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r410,l0) conflicts: a25(r358,l0) a27(r632,l0) a28(r409,l0) a30(r412,l0) a29(r413,l0) a31(r1019,l0) a33(r627,l0) a32(r628,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a51(r605,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a27(r632,l0) conflicts: a20(r357,l0) a25(r358,l0) a28(r409,l0) a26(r410,l0) a30(r412,l0) a29(r413,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r409,l0) conflicts: a20(r357,l0) a25(r358,l0) a27(r632,l0) a26(r410,l0) a30(r412,l0) a29(r413,l0) a31(r1019,l0) a33(r627,l0) a32(r628,l0) a34(r1018,l0) a35(r160,l0) a36(r1017,l0) a51(r605,l0) a50(r606,l0) a66(r1014,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a29(r413,l0) conflicts: a27(r632,l0) a28(r409,l0) a26(r410,l0) a30(r412,l0) a31(r1019,l0) a33(r627,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r412,l0) conflicts: a25(r358,l0) a27(r632,l0) a28(r409,l0) a26(r410,l0) a29(r413,l0) a31(r1019,l0) a33(r627,l0) a32(r628,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r1019,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a28(r409,l0) a26(r410,l0) a30(r412,l0) a29(r413,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r628,l0) conflicts: a28(r409,l0) a26(r410,l0) a30(r412,l0) a33(r627,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r627,l0) conflicts: a28(r409,l0) a26(r410,l0) a30(r412,l0) a29(r413,l0) a32(r628,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r1018,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a28(r409,l0) a26(r410,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r160,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a28(r409,l0) a26(r410,l0) a37(r624,l0) a39(r622,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a51(r605,l0) a50(r606,l0) a52(r1016,l0) a53(r1015,l0)
;;     total conflict hard regs: 12 14 16
;;     conflict hard regs: 12 14 16

;; a36(r1017,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a28(r409,l0) a26(r410,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r624,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r615,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a39(r622,l0) a42(r621,l0) a41(r610,l0) a40(r973,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r622,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a38(r615,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r973,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a38(r615,l0) a42(r621,l0) a41(r610,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0) a49(r343,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a41(r610,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a38(r615,l0) a42(r621,l0) a40(r973,l0) a43(r619,l0) a44(r616,l0) a45(r612,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r621,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a38(r615,l0) a41(r610,l0) a40(r973,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r619,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a41(r610,l0) a40(r973,l0) a44(r616,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r616,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a41(r610,l0) a40(r973,l0) a43(r619,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r612,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a41(r610,l0) a40(r973,l0) a47(r611,l0) a46(r614,l0) a48(r609,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r614,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a45(r612,l0) a47(r611,l0) a48(r609,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r611,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a45(r612,l0) a46(r614,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r609,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a45(r612,l0) a46(r614,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r343,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a52(r1016,l0) a53(r1015,l0) a54(r600,l0) a56(r598,l0) a55(r591,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0) a65(r342,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a50(r606,l0) conflicts: a28(r409,l0) a35(r160,l0) a51(r605,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r605,l0) conflicts: a28(r409,l0) a26(r410,l0) a35(r160,l0) a50(r606,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r1016,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a49(r343,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r1015,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a35(r160,l0) a40(r973,l0) a49(r343,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r600,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r591,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a56(r598,l0) a57(r585,l0) a58(r597,l0) a59(r589,l0) a60(r586,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r598,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a55(r591,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r585,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a55(r591,l0) a58(r597,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r597,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a55(r591,l0) a57(r585,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r589,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a55(r591,l0) a60(r586,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r586,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a55(r591,l0) a59(r589,l0) a61(r595,l0) a62(r592,l0) a63(r590,l0) a64(r587,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r595,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a60(r586,l0) a62(r592,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r592,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a60(r586,l0) a61(r595,l0) a63(r590,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r590,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a60(r586,l0) a62(r592,l0) a64(r587,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r587,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a60(r586,l0) a63(r590,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r342,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a69(r1012,l0) a73(r1011,l0) a74(r571,l0) a76(r569,l0) a75(r562,l0) a78(r568,l0) a77(r557,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0) a88(r1010,l0) a89(r548,l0) a91(r546,l0) a90(r539,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0) a100(r1009,l0)
;;     total conflict hard regs: 0 12 14
;;     conflict hard regs: 0 12 14

;; a66(r1014,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a28(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r1013,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a68(r411,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a68(r411,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a67(r1013,l0)
;;     total conflict hard regs: 12 14 16
;;     conflict hard regs: 12 14 16

;; a69(r1012,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a49(r343,l0) a65(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r154,l0) conflicts: a72(r575,l0) a73(r1011,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r576,l0) conflicts: a72(r575,l0) a73(r1011,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r575,l0) conflicts: a70(r154,l0) a73(r1011,l0) a71(r576,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a73(r1011,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a49(r343,l0) a65(r342,l0) a70(r154,l0) a72(r575,l0) a71(r576,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a74(r571,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a49(r343,l0) a65(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r562,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a76(r569,l0) a78(r568,l0) a77(r557,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a76(r569,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a49(r343,l0) a65(r342,l0) a75(r562,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a77(r557,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a75(r562,l0) a78(r568,l0) a79(r566,l0) a80(r563,l0) a81(r559,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r568,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a75(r562,l0) a77(r557,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r566,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a77(r557,l0) a80(r563,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r563,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a77(r557,l0) a79(r566,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a81(r559,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a77(r557,l0) a82(r561,l0) a83(r558,l0) a84(r556,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r561,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a81(r559,l0) a83(r558,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r558,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a81(r559,l0) a82(r561,l0) a84(r556,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r556,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a81(r559,l0) a83(r558,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r146,l0) conflicts: a87(r552,l0) a88(r1010,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r553,l0) conflicts: a87(r552,l0) a88(r1010,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r552,l0) conflicts: a85(r146,l0) a88(r1010,l0) a86(r553,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r1010,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a85(r146,l0) a87(r552,l0) a86(r553,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r548,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a90(r539,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a91(r546,l0) a92(r533,l0) a93(r545,l0) a94(r537,l0) a95(r534,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a91(r546,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a90(r539,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r533,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a90(r539,l0) a93(r545,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r545,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a90(r539,l0) a92(r533,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r537,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a90(r539,l0) a95(r534,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r534,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a90(r539,l0) a94(r537,l0) a96(r543,l0) a97(r540,l0) a98(r538,l0) a99(r535,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r543,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a95(r534,l0) a97(r540,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r540,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a95(r534,l0) a96(r543,l0) a98(r538,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r538,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a95(r534,l0) a97(r540,l0) a99(r535,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r535,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a40(r973,l0) a49(r343,l0) a65(r342,l0) a95(r534,l0) a98(r538,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r1009,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a49(r343,l0) a65(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r408,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r1008,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r125,l0) conflicts: a105(r1006,l0) a107(r1005,l0) a106(r519,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a104(r1007,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r1006,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a103(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r519,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a103(r125,l0) a107(r1005,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a107(r1005,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0) a103(r125,l0) a106(r519,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r521,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r1004,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r1003,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r1002,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r1001,l0) conflicts: a8(r355,l0) a9(r356,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r1000,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a114(r999,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a115(r998,l0) conflicts: a8(r355,l0) a9(r356,l0) a11(r967,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r997,l0) conflicts: a8(r355,l0) a9(r356,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r996,l0) conflicts: a8(r355,l0) a9(r356,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r483,l0) conflicts: a119(r481,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a119(r481,l0) conflicts: a118(r483,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a120(r339,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a156(r1055,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a121(r355,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a122(r356,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a123(r416,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a124(r418,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a221(r340,l1) a222(r1041,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a125(r463,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a126(r967,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a127(r970,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a128(r971,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a129(r972,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a130(r987,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a260(r988,l1) a261(r341,l1) a265(r199,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a802(r395,l1) a803(r741,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a131(r989,l1) conflicts:
;;   subobject 0: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a137(r979,w0,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a148(r981,w0,l1) a149(r860,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a254(r1032,w0,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a282(r1024,w0,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a286(r1021,w0,l1) a287(r1020,w0,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w0,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a229(r1038,w0,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a132(r990,l1) conflicts:
;;   subobject 0: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a137(r979,w0,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a148(r981,w0,l1) a149(r860,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a254(r1032,w0,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a282(r1024,w0,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a286(r1021,w0,l1) a287(r1020,w0,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w0,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a229(r1038,w0,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a133(r992,l1) conflicts:
;;   subobject 0: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a137(r979,w0,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a134(r993,w0,l1) a148(r981,w0,l1) a149(r860,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a254(r1032,w0,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a282(r1024,w0,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a286(r1021,w0,l1) a287(r1020,w0,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w0,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a229(r1038,w0,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a134(r993,l1) conflicts:
;;   subobject 0: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a285(r651,w1,l1) a286(r1021,w0,l1) a286(r1021,w1,l1) a287(r1020,w0,l1) a287(r1020,w1,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a137(r979,w0,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a148(r981,w0,l1) a149(r860,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a254(r1032,w0,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a279(r1027,l1) a280(r1026,l1) a281(r1025,w0,l1) a282(r1024,w0,l1) a283(r1023,l1) a284(r1022,l1) a285(r651,w0,l1) a286(r1021,w0,l1) a287(r1020,w0,l1) a135(r1070,l1) a136(r1069,l1) a150(r857,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w0,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a229(r1038,w0,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a199(r772,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a135(r1070,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a136(r1069,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a137(r979,l1) conflicts:
;;   subobject 0: a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a138(r915,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a139(r368,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a156(r1055,l1) a157(r369,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a182(r794,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a140(r370,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a158(r346,l1) a156(r1055,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a141(r372,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a142(r373,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a143(r374,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a144(r375,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a699(r955,l1) a700(r951,l1) a701(r947,l1) a702(r954,l1) a704(r950,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a711(r939,l1) a713(r931,l1) a712(r935,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a720(r923,l1) a721(r922,l1) a722(r918,l1) a723(r917,l1) a724(r921,l1) a725(r916,l1) a726(r475,l1) a727(r914,l1) a728(r913,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a145(r389,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a190(r181,w0,l1) a190(r181,w1,l1) a151(r1059,l1) a152(r1058,l1) a153(r1057,l1) a154(r371,l1) a155(r1056,l1) a157(r369,l1) a159(r1054,l1) a164(r1051,l1) a163(r283,w1,l1) a163(r283,w0,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a162(r1052,l1) a166(r1049,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a146(r968,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a147(r969,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a696(r1068,l1) a697(r957,l1) a698(r1067,l1) a702(r954,l1) a703(r928,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1) a717(r925,l1) a718(r924,l1) a719(r919,l1) a720(r923,l1) a722(r918,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a763(r863,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a148(r981,l1) conflicts:
;;   subobject 0: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a149(r860,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs:


;;   subobject 1: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a149(r860,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a740(r873,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a758(r870,l1) a759(r869,l1) a760(r864,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs:

;; a149(r860,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a729(r1064,l1) a730(r908,l1) a731(r1063,l1) a732(r906,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1) a757(r1060,l1) a761(r868,l1) a762(r867,l1) a763(r863,l1) a764(r862,l1) a765(r866,l1) a766(r861,l1) a767(r296,l1) a768(r859,l1) a769(r858,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a150(r857,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r1059,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a152(r1058,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r1057,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r371,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a155(r1056,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a155(r1056,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a154(r371,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r1055,l1) conflicts: a140(r370,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r369,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a159(r1054,l1)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a158(r346,l1) conflicts: a140(r370,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a278(r1028,w0,l1) a278(r1028,w1,l1) a280(r1026,l1) a281(r1025,w0,l1) a281(r1025,w1,l1) a282(r1024,w0,l1) a282(r1024,w1,l1) a159(r1054,l1) a160(r1053,l1) a161(r353,l1) a164(r1051,l1) a165(r1050,w1,l1) a165(r1050,w0,l1) a182(r794,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a199(r772,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a159(r1054,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a157(r369,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r1053,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a161(r353,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a161(r353,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a160(r1053,l1) a164(r1051,l1) a165(r1050,w1,l1) a165(r1050,w0,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a162(r1052,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r283,l1) conflicts:
;;   subobject 0: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a164(r1051,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a164(r1051,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a164(r1051,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a161(r353,l1) a163(r283,w1,l1) a163(r283,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r1050,l1) conflicts:
;;   subobject 0: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a161(r353,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a161(r353,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a166(r1049,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r984,l1) conflicts:
;;   subobject 0: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a777(r351,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a168(r394,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a169(r983,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a170(r982,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a171(r429,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a177(r173,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a172(r349,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a191(r1043,l1) a199(r772,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a173(r279,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a801(r796,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a174(r216,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a175(r364,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a199(r772,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r347,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a198(r398,l1) a206(r397,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a199(r772,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a177(r173,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a189(r1044,l1) a200(r1042,l1) a202(r769,l1) a201(r767,l1) a203(r768,l1) a204(r765,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a208(r227,l1) a209(r748,l1) a220(r747,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a789(r801,l1) a800(r798,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a788(r821,l1) a796(r813,l1) a797(r808,l1) a798(r807,l1) a799(r803,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a178(r348,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a199(r772,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r365,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a199(r772,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a180(r393,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a214(r756,l1) a199(r772,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a181(r423,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a183(r1045,l1) a184(r786,l1) a185(r787,l1) a186(r784,l1) a187(r785,l1) a189(r1044,l1) a188(r783,l1) a200(r1042,l1) a204(r765,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a214(r756,l1) a216(r754,l1) a199(r772,l1) a801(r796,l1) a770(r1048,l1) a771(r834,l1) a772(r833,w0,l1) a772(r833,w1,l1) a773(r1047,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a778(r830,l1) a779(r829,l1) a780(r824,l1) a781(r819,l1) a782(r828,l1) a783(r823,l1) a784(r818,l1) a785(r827,l1) a786(r822,l1) a787(r817,l1) a790(r815,l1) a791(r810,l1) a792(r805,l1) a793(r814,l1) a794(r809,l1) a795(r804,l1) a796(r813,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a182(r794,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a183(r1045,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a184(r786,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a185(r787,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a186(r784,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a186(r784,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a185(r787,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a187(r785,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a188(r783,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a189(r1044,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a190(r181,l1) conflicts:
;;   subobject 0: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a280(r1026,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a247(r721,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a254(r1032,w0,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a265(r199,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a269(r688,l1) a270(r682,l1) a271(r681,l1) a272(r1031,l1) a273(r674,l1) a274(r672,l1) a275(r1030,l1) a276(r664,l1) a277(r1029,l1) a280(r1026,l1) a205(r764,l1) a197(r366,l1) a191(r1043,l1) a193(r778,l1) a192(r776,l1) a194(r777,l1) a195(r774,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a227(r1040,l1) a228(r1039,w0,l1) a229(r1038,w0,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a240(r220,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a803(r741,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1) a810(r701,l1)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a191(r1043,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1) a190(r181,w0,l1) a190(r181,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a192(r776,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a190(r181,w0,l1) a190(r181,w1,l1) a193(r778,l1) a194(r777,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a193(r778,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a190(r181,w0,l1) a190(r181,w1,l1) a192(r776,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a194(r777,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a190(r181,w0,l1) a190(r181,w1,l1) a192(r776,l1) a195(r774,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a195(r774,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a190(r181,w0,l1) a190(r181,w1,l1) a194(r777,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a196(r773,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a190(r181,w0,l1) a190(r181,w1,l1) a197(r366,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a197(r366,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a205(r764,l1) a196(r773,l1) a207(r763,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a198(r398,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a247(r721,l1) a197(r366,l1) a196(r773,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a199(r772,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a200(r1042,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a172(r349,l1) a175(r364,l1) a176(r347,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a201(r767,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a202(r769,l1) a203(r768,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a202(r769,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a201(r767,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a203(r768,l1) conflicts: a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a201(r767,l1) a204(r765,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a204(r765,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a203(r768,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a205(r764,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a197(r366,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a206(r397,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a205(r764,l1) a197(r366,l1) a207(r763,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1) a221(r340,l1) a222(r1041,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a207(r763,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a197(r366,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a208(r227,l1) conflicts: a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a209(r748,l1) a210(r752,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a214(r756,l1) a216(r754,l1) a215(r755,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a209(r748,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a220(r747,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a210(r752,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a212(r759,l1) a211(r760,l1) a213(r757,l1) a217(r751,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a211(r760,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a179(r365,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a212(r759,l1) a213(r757,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a212(r759,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a179(r365,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a211(r760,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a213(r757,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a179(r365,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a211(r760,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a214(r756,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a215(r755,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a216(r754,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a216(r754,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a181(r423,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a215(r755,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a217(r751,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a179(r365,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a219(r749,l1) a218(r750,l1) a220(r747,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a218(r750,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a217(r751,l1) a219(r749,l1) a220(r747,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a219(r749,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a178(r348,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a210(r752,l1) a217(r751,l1) a218(r750,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a220(r747,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a190(r181,w0,l1) a190(r181,w1,l1) a208(r227,l1) a209(r748,l1) a210(r752,l1) a217(r751,l1) a218(r750,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a221(r340,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a175(r364,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a222(r1041,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a222(r1041,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a158(r346,l1) a176(r347,l1) a198(r398,l1) a206(r397,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a221(r340,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a223(r345,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a243(r735,l1) a123(r416,l1) a244(r1037,l1) a245(r729,l1) a246(r727,l1) a248(r720,l1) a249(r716,l1) a250(r1036,l1) a251(r1035,l1) a252(r1034,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a227(r1040,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a240(r220,l1) a802(r395,l1) a803(r741,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a224(r362,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a221(r340,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a225(r402,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a270(r682,l1) a271(r681,l1) a221(r340,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a226(r403,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a270(r682,l1) a271(r681,l1) a221(r340,l1) a228(r1039,w0,l1) a228(r1039,w1,l1) a229(r1038,w0,l1) a229(r1038,w1,l1) a230(r743,l1) a231(r221,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a227(r1040,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a228(r1039,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a177(r173,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a229(r1038,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a177(r173,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a177(r173,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a230(r743,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a231(r221,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a231(r221,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a230(r743,l1) a232(r222,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a232(r222,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a231(r221,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a233(r195,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a232(r222,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a234(r193,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a235(r986,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a240(r220,l1) a802(r395,l1) a803(r741,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a236(r420,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a235(r986,l1) a190(r181,w0,l1) a190(r181,w1,l1) a240(r220,l1) a802(r395,l1) a803(r741,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a237(r354,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a238(r363,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a242(r183,l1) a247(r721,l1) a248(r720,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a239(r404,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a241(r734,l1) a242(r183,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a804(r396,l1) a802(r395,l1) a805(r737,l1) a806(r1077,l1) a807(r736,l1) a808(r1076,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a240(r220,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a241(r734,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a242(r183,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a241(r734,l1) a243(r735,l1) a247(r721,l1) a248(r720,l1) a250(r1036,l1) a251(r1035,l1) a253(r1033,w0,l1) a253(r1033,w1,l1) a254(r1032,w0,l1) a254(r1032,w1,l1) a256(r200,l1) a255(r704,l1) a257(r1072,l1) a258(r201,l1) a259(r1073,l1) a263(r360,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a275(r1030,l1) a276(r664,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a243(r735,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a242(r183,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a244(r1037,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a245(r729,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a246(r727,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a247(r721,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a248(r720,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a223(r345,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a249(r716,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a250(r1036,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a251(r1035,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a223(r345,l1) a224(r362,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a252(r1034,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a253(r1033,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a223(r345,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a223(r345,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a254(r1032,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a223(r345,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a223(r345,l1) a124(r418,l1) a190(r181,w0,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a255(r704,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a256(r200,l1) a257(r1072,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a256(r200,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a255(r704,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a257(r1072,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a255(r704,l1) a258(r201,l1) a259(r1073,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a258(r201,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a257(r1072,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a259(r1073,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a257(r1072,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a260(r988,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1) a261(r341,l1) a265(r199,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a261(r341,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1) a260(r988,l1) a265(r199,l1) a809(r400,l1) a810(r701,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a262(r703,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a263(r360,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a264(r361,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a264(r361,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a262(r703,l1) a267(r695,l1) a266(r359,l1) a268(r692,l1) a811(r401,l1) a809(r400,l1) a812(r697,l1) a813(r1075,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a265(r199,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1) a260(r988,l1) a261(r341,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a266(r359,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a267(r695,l1) a268(r692,l1) a270(r682,l1) a271(r681,l1) a275(r1030,l1) a276(r664,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a267(r695,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a268(r692,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1) a263(r360,l1) a264(r361,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a269(r688,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a270(r682,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a271(r681,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a239(r404,l1) a242(r183,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a272(r1031,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a273(r674,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a274(r672,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a275(r1030,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a242(r183,l1) a123(r416,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a276(r664,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a242(r183,l1) a266(r359,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a277(r1029,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a278(r1028,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a279(r1027,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a280(r1026,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a281(r1025,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a282(r1024,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a158(r346,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a283(r1023,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a284(r1022,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a285(r651,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a124(r418,l1) a123(r416,l1) a286(r1021,w0,l1) a286(r1021,w1,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a124(r418,l1) a123(r416,l1) a286(r1021,w0,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a286(r1021,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a124(r418,l1) a123(r416,l1) a285(r651,w0,l1) a285(r651,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a124(r418,l1) a123(r416,l1) a285(r651,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a287(r1020,l1) conflicts:
;;   subobject 0: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a124(r418,l1) a123(r416,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a288(r339,l6) conflicts: a312(r1068,l6) a313(r957,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a289(r355,l6) conflicts: a312(r1068,l6) a313(r957,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a290(r356,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a291(r368,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a292(r370,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a293(r372,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a292(r370,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a294(r373,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a295(r374,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a296(r375,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a297(r389,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a298(r463,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a299(r915,l6) conflicts: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a320(r950,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a300(r967,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a301(r968,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a302(r969,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a303(r970,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a304(r971,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a305(r972,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a306(r979,l6) conflicts:
;;   subobject 0: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a307(r987,l6) a308(r989,w0,l6) a309(r990,w0,l6) a310(r992,w0,l6) a311(r993,w0,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a307(r987,l6) conflicts: a312(r1068,l6) a313(r957,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a338(r918,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a308(r989,l6) conflicts:
;;   subobject 0: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a307(r987,l6) a309(r990,w0,l6) a310(r992,w0,l6) a311(r993,w0,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a309(r990,l6) conflicts:
;;   subobject 0: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a307(r987,l6) a308(r989,w0,l6) a310(r992,w0,l6) a311(r993,w0,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a310(r992,l6) conflicts:
;;   subobject 0: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a307(r987,l6) a308(r989,w0,l6) a309(r990,w0,l6) a311(r993,w0,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a311(r993,l6) conflicts:
;;   subobject 0: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a312(r1068,l6) a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a307(r987,l6) a308(r989,w0,l6) a309(r990,w0,l6) a310(r992,w0,l6) a314(r1067,l6) a315(r955,l6) a316(r951,l6) a317(r947,l6) a318(r954,l6) a319(r928,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a327(r939,l6) a329(r931,l6) a328(r935,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6) a333(r925,l6) a334(r924,l6) a335(r919,l6) a336(r923,l6) a337(r922,l6) a338(r918,l6) a339(r917,l6) a340(r921,l6) a341(r916,l6) a342(r475,l6) a343(r914,l6) a344(r913,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a312(r1068,l6) conflicts: a313(r957,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a313(r957,l6) conflicts: a312(r1068,l6) a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a314(r1067,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a315(r955,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a316(r951,l6) a317(r947,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a316(r951,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a315(r955,l6) a317(r947,l6) a318(r954,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a317(r947,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a315(r955,l6) a316(r951,l6) a318(r954,l6) a320(r950,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a318(r954,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a316(r951,l6) a317(r947,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a319(r928,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a320(r950,l6) a321(r457,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a320(r950,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a317(r947,l6) a319(r928,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a321(r457,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a322(r946,l6) a324(r1066,l6) a325(r941,l6) a323(r452,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a322(r946,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a323(r452,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a324(r1066,l6) a325(r941,l6) a326(r1065,l6) a330(r938,l6) a331(r930,l6) a332(r934,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a324(r1066,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a325(r941,l6) a323(r452,l6)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a325(r941,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a324(r1066,l6) a323(r452,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a326(r1065,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a323(r452,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a327(r939,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a329(r931,l6) a328(r935,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a328(r935,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a327(r939,l6) a329(r931,l6) a330(r938,l6) a331(r930,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a329(r931,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a327(r939,l6) a328(r935,l6) a330(r938,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a330(r938,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a323(r452,l6) a329(r931,l6) a328(r935,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a331(r930,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a323(r452,l6) a328(r935,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a332(r934,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a319(r928,l6) a321(r457,l6) a323(r452,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a333(r925,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a334(r924,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a335(r919,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a335(r919,l6) conflicts: a289(r355,l6) a290(r356,l6) a291(r368,l6) a297(r389,l6) a298(r463,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a334(r924,l6) a336(r923,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a336(r923,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a335(r919,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a337(r922,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a338(r918,l6) a339(r917,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a338(r918,l6) conflicts: a288(r339,l6) a289(r355,l6) a290(r356,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a297(r389,l6) a298(r463,l6) a299(r915,l6) a300(r967,l6) a301(r968,l6) a302(r969,l6) a303(r970,l6) a304(r971,l6) a305(r972,l6) a306(r979,w0,l6) a306(r979,w1,l6) a307(r987,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a337(r922,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a339(r917,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a337(r922,l6) a340(r921,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a340(r921,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a339(r917,l6) a341(r916,l6) a342(r475,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a341(r916,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a340(r921,l6) a342(r475,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a342(r475,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6) a340(r921,l6) a341(r916,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a343(r914,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a344(r913,l6) conflicts: a288(r339,l6) a291(r368,l6) a292(r370,l6) a293(r372,l6) a294(r373,l6) a295(r374,l6) a296(r375,l6) a299(r915,l6) a306(r979,w0,l6) a306(r979,w1,l6) a308(r989,w0,l6) a308(r989,w1,l6) a309(r990,w0,l6) a309(r990,w1,l6) a310(r992,w0,l6) a310(r992,w1,l6) a311(r993,w0,l6) a311(r993,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a345(r339,l5) conflicts: a369(r1064,l5) a370(r908,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a346(r355,l5) conflicts: a369(r1064,l5) a370(r908,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a347(r356,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a348(r368,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a349(r370,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a350(r372,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a349(r370,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a351(r373,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a352(r374,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a353(r375,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a354(r389,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a355(r463,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a356(r860,l5) conflicts: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a357(r967,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a358(r968,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a359(r969,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a360(r970,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a361(r971,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a362(r972,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a363(r981,l5) conflicts:
;;   subobject 0: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16


;;   subobject 1: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a364(r987,l5) a365(r989,w0,l5) a366(r990,w0,l5) a367(r992,w0,l5) a368(r993,w0,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a364(r987,l5) conflicts: a369(r1064,l5) a370(r908,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a403(r863,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a365(r989,l5) conflicts:
;;   subobject 0: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16


;;   subobject 1: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a364(r987,l5) a366(r990,w0,l5) a367(r992,w0,l5) a368(r993,w0,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a366(r990,l5) conflicts:
;;   subobject 0: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16


;;   subobject 1: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a364(r987,l5) a365(r989,w0,l5) a367(r992,w0,l5) a368(r993,w0,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a367(r992,l5) conflicts:
;;   subobject 0: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16


;;   subobject 1: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a364(r987,l5) a365(r989,w0,l5) a366(r990,w0,l5) a368(r993,w0,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a368(r993,l5) conflicts:
;;   subobject 0: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16


;;   subobject 1: a369(r1064,l5) a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a364(r987,l5) a365(r989,w0,l5) a366(r990,w0,l5) a367(r992,w0,l5) a371(r1063,l5) a372(r906,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a380(r873,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5) a397(r1060,l5) a398(r870,l5) a399(r869,l5) a400(r864,l5) a401(r868,l5) a402(r867,l5) a403(r863,l5) a404(r862,l5) a405(r866,l5) a406(r861,l5) a407(r296,l5) a408(r859,l5) a409(r858,l5)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a369(r1064,l5) conflicts: a370(r908,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a370(r908,l5) conflicts: a369(r1064,l5) a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a371(r1063,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a372(r906,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a373(r901,l5) a374(r896,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a373(r901,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a372(r906,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a374(r896,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a372(r906,l5) a373(r901,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a375(r380,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a373(r901,l5) a374(r896,l5) a376(r905,l5) a377(r900,l5) a378(r895,l5) a379(r904,l5) a381(r899,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a388(r887,l5) a390(r877,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5) a395(r881,l5) a396(r880,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a376(r905,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a373(r901,l5) a374(r896,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a377(r900,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a374(r896,l5) a376(r905,l5) a375(r380,l5) a378(r895,l5) a379(r904,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a378(r895,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a376(r905,l5) a375(r380,l5) a377(r900,l5) a379(r904,l5) a381(r899,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a379(r904,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a377(r900,l5) a378(r895,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a380(r873,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a381(r899,l5) a382(r309,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5) a397(r1060,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a381(r899,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a378(r895,l5) a380(r873,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a382(r309,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a380(r873,l5) a383(r894,l5) a385(r1062,l5) a386(r889,l5) a384(r314,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a383(r894,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a384(r314,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a380(r873,l5) a382(r309,l5) a385(r1062,l5) a386(r889,l5) a387(r1061,l5) a392(r885,l5) a394(r875,l5) a396(r880,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a385(r1062,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a386(r889,l5) a384(r314,l5)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a386(r889,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a385(r1062,l5) a384(r314,l5)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a387(r1061,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a384(r314,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a388(r887,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a390(r877,l5) a389(r882,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a389(r882,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a388(r887,l5) a390(r877,l5) a391(r886,l5) a392(r885,l5) a393(r876,l5) a394(r875,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a390(r877,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a388(r887,l5) a389(r882,l5) a391(r886,l5) a392(r885,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a391(r886,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a390(r877,l5) a389(r882,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a392(r885,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a384(r314,l5) a390(r877,l5) a389(r882,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a393(r876,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a389(r882,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a394(r875,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a384(r314,l5) a389(r882,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a395(r881,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a396(r880,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a375(r380,l5) a380(r873,l5) a382(r309,l5) a384(r314,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a397(r1060,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a380(r873,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a398(r870,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a399(r869,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a400(r864,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a400(r864,l5) conflicts: a346(r355,l5) a347(r356,l5) a348(r368,l5) a354(r389,l5) a355(r463,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a399(r869,l5) a401(r868,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a401(r868,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a400(r864,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a402(r867,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a403(r863,l5) a404(r862,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a403(r863,l5) conflicts: a345(r339,l5) a346(r355,l5) a347(r356,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a354(r389,l5) a355(r463,l5) a356(r860,l5) a357(r967,l5) a358(r968,l5) a359(r969,l5) a360(r970,l5) a361(r971,l5) a362(r972,l5) a363(r981,w0,l5) a363(r981,w1,l5) a364(r987,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a402(r867,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a404(r862,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a402(r867,l5) a405(r866,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a405(r866,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a404(r862,l5) a406(r861,l5) a407(r296,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a406(r861,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a405(r866,l5) a407(r296,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a407(r296,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5) a405(r866,l5) a406(r861,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a408(r859,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a409(r858,l5) conflicts: a345(r339,l5) a348(r368,l5) a349(r370,l5) a350(r372,l5) a351(r373,l5) a352(r374,l5) a353(r375,l5) a356(r860,l5) a363(r981,w0,l5) a363(r981,w1,l5) a365(r989,w0,l5) a365(r989,w1,l5) a366(r990,w0,l5) a366(r990,w1,l5) a367(r992,w0,l5) a367(r992,w1,l5) a368(r993,w0,l5) a368(r993,w1,l5)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a410(r173,l4) conflicts: a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a411(r216,l4) conflicts: a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a412(r279,l4) conflicts: a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a413(r339,l4) conflicts: a411(r216,l4) a412(r279,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a414(r346,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a415(r348,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a416(r355,l4) conflicts: a410(r173,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a417(r356,l4) conflicts: a410(r173,l4) a416(r355,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a418(r365,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a419(r368,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a420(r389,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a421(r393,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a422(r394,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a423(r423,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a424(r429,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a425(r463,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a426(r967,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a427(r970,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a428(r971,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a429(r972,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a430(r982,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a431(r983,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a432(r984,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a433(r987,l4) a434(r989,w0,l4) a435(r990,w0,l4) a436(r992,w0,l4) a437(r993,w0,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a433(r987,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a434(r989,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a435(r990,w0,l4) a436(r992,w0,l4) a437(r993,w0,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a435(r990,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a434(r989,w0,l4) a436(r992,w0,l4) a437(r993,w0,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a436(r992,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a434(r989,w0,l4) a435(r990,w0,l4) a437(r993,w0,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a437(r993,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a440(r833,w1,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a434(r989,w0,l4) a435(r990,w0,l4) a436(r992,w0,l4) a457(r801,l4) a468(r798,l4) a469(r796,l4) a438(r1048,l4) a439(r834,l4) a440(r833,w0,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a445(r351,l4) a446(r830,l4) a447(r829,l4) a448(r824,l4) a449(r819,l4) a450(r828,l4) a451(r823,l4) a452(r818,l4) a453(r827,l4) a454(r822,l4) a455(r817,l4) a456(r821,l4) a458(r815,l4) a459(r810,l4) a460(r805,l4) a461(r814,l4) a462(r809,l4) a463(r804,l4) a464(r813,l4) a465(r808,l4) a466(r807,l4) a467(r803,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a438(r1048,l4) conflicts: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a439(r834,l4)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a439(r834,l4) conflicts: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a438(r1048,l4) a440(r833,w0,l4) a440(r833,w1,l4)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a440(r833,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a439(r834,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a434(r989,w0,l4) a435(r990,w0,l4) a436(r992,w0,l4) a437(r993,w0,l4) a439(r834,l4) a441(r1047,l4) a443(r352,l4) a442(r350,l4)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a441(r1047,l4) conflicts: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a440(r833,w0,l4) a440(r833,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a442(r350,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a440(r833,w0,l4) a440(r833,w1,l4) a443(r352,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a443(r352,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a440(r833,w0,l4) a440(r833,w1,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4) a445(r351,l4) a456(r821,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a444(r1046,l4) conflicts:
;;   subobject 0: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a443(r352,l4) a442(r350,l4) a445(r351,l4)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a410(r173,l4) a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a433(r987,l4) a434(r989,w0,l4) a435(r990,w0,l4) a436(r992,w0,l4) a437(r993,w0,l4) a443(r352,l4) a442(r350,l4) a445(r351,l4)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a445(r351,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a443(r352,l4) a442(r350,l4) a444(r1046,w0,l4) a444(r1046,w1,l4)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a446(r830,l4) conflicts: a411(r216,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a447(r829,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a448(r824,l4) a449(r819,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a448(r824,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a447(r829,l4) a449(r819,l4) a450(r828,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a449(r819,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a447(r829,l4) a448(r824,l4) a450(r828,l4) a451(r823,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a450(r828,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a448(r824,l4) a449(r819,l4) a451(r823,l4) a452(r818,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a451(r823,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a449(r819,l4) a450(r828,l4) a452(r818,l4) a453(r827,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a452(r818,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a450(r828,l4) a451(r823,l4) a453(r827,l4) a454(r822,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a453(r827,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a451(r823,l4) a452(r818,l4) a454(r822,l4) a455(r817,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a454(r822,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a452(r818,l4) a453(r827,l4) a455(r817,l4) a456(r821,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a455(r817,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a453(r827,l4) a454(r822,l4) a456(r821,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a456(r821,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a443(r352,l4) a454(r822,l4) a455(r817,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a457(r801,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a443(r352,l4) a456(r821,l4) a466(r807,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a458(r815,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a459(r810,l4) a460(r805,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a459(r810,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a458(r815,l4) a460(r805,l4) a461(r814,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a460(r805,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a458(r815,l4) a459(r810,l4) a461(r814,l4) a462(r809,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a461(r814,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a459(r810,l4) a460(r805,l4) a462(r809,l4) a463(r804,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a462(r809,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a460(r805,l4) a461(r814,l4) a463(r804,l4) a464(r813,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a463(r804,l4) conflicts: a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a418(r365,l4) a419(r368,l4) a421(r393,l4) a423(r423,l4) a432(r984,w0,l4) a432(r984,w1,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a461(r814,l4) a462(r809,l4) a464(r813,l4) a465(r808,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a464(r813,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a462(r809,l4) a463(r804,l4) a465(r808,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a465(r808,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a463(r804,l4) a464(r813,l4) a466(r807,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a466(r807,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a457(r801,l4) a465(r808,l4) a467(r803,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a467(r803,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4) a466(r807,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a468(r798,l4) conflicts: a410(r173,l4) a416(r355,l4) a417(r356,l4) a419(r368,l4) a420(r389,l4) a422(r394,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a469(r796,l4) conflicts: a410(r173,l4) a411(r216,l4) a412(r279,l4) a413(r339,l4) a414(r346,l4) a415(r348,l4) a416(r355,l4) a417(r356,l4) a418(r365,l4) a419(r368,l4) a420(r389,l4) a421(r393,l4) a422(r394,l4) a423(r423,l4) a424(r429,l4) a425(r463,l4) a426(r967,l4) a427(r970,l4) a428(r971,l4) a429(r972,l4) a430(r982,l4) a431(r983,l4) a432(r984,w0,l4) a432(r984,w1,l4) a433(r987,l4) a434(r989,w0,l4) a434(r989,w1,l4) a435(r990,w0,l4) a435(r990,w1,l4) a436(r992,w0,l4) a436(r992,w1,l4) a437(r993,w0,l4) a437(r993,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a470(r181,l3) conflicts:
;;   subobject 0: a502(r396,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a502(r396,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a496(r990,w0,l3) a497(r992,w0,l3) a498(r993,w0,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a471(r193,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a472(r195,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a473(r339,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a474(r345,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a475(r346,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a476(r354,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a477(r355,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a478(r356,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a479(r362,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a480(r363,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a481(r397,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a482(r398,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a483(r402,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a484(r403,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a485(r404,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a486(r418,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a487(r420,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a488(r463,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a489(r967,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a490(r970,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a491(r971,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a492(r972,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a493(r986,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a494(r987,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a495(r989,l3) conflicts:
;;   subobject 0: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a502(r396,l3) a470(r181,w0,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a496(r990,w0,l3) a497(r992,w0,l3) a498(r993,w0,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a496(r990,l3) conflicts:
;;   subobject 0: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a502(r396,l3) a470(r181,w0,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a497(r992,w0,l3) a498(r993,w0,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a497(r992,l3) conflicts:
;;   subobject 0: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a502(r396,l3) a470(r181,w0,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a496(r990,w0,l3) a498(r993,w0,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a498(r993,l3) conflicts:
;;   subobject 0: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a502(r396,l3) a470(r181,w0,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a496(r990,w0,l3) a497(r992,w0,l3) a500(r395,l3) a503(r737,l3) a504(r1077,l3) a505(r736,l3) a506(r1076,l3) a501(r741,l3) a499(r220,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a499(r220,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a500(r395,l3) conflicts: a502(r396,l3) a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a474(r345,l3) a475(r346,l3) a476(r354,l3) a477(r355,l3) a478(r356,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a503(r737,l3) a504(r1077,l3) a501(r741,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a501(r741,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a474(r345,l3) a477(r355,l3) a478(r356,l3) a487(r420,l3) a488(r463,l3) a489(r967,l3) a490(r970,l3) a491(r971,l3) a492(r972,l3) a493(r986,l3) a494(r987,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a502(r396,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a503(r737,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a504(r1077,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a500(r395,l3) a505(r736,l3) a506(r1076,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a505(r736,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a504(r1077,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a506(r1076,l3) conflicts: a470(r181,w0,l3) a470(r181,w1,l3) a471(r193,l3) a472(r195,l3) a473(r339,l3) a475(r346,l3) a476(r354,l3) a479(r362,l3) a480(r363,l3) a481(r397,l3) a482(r398,l3) a483(r402,l3) a484(r403,l3) a485(r404,l3) a486(r418,l3) a495(r989,w0,l3) a495(r989,w1,l3) a496(r990,w0,l3) a496(r990,w1,l3) a497(r992,w0,l3) a497(r992,w1,l3) a498(r993,w0,l3) a498(r993,w1,l3) a504(r1077,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a507(r181,l2) conflicts:
;;   subobject 0: a538(r401,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a538(r401,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a532(r990,w0,l2) a533(r992,w0,l2) a534(r993,w0,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a508(r183,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a509(r193,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a510(r195,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a511(r339,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a512(r341,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a513(r346,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a514(r354,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a515(r355,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a516(r356,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a517(r360,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a518(r361,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a519(r402,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a520(r403,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a521(r404,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a522(r416,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a523(r418,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a524(r463,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a525(r967,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a526(r970,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a527(r971,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a528(r972,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a529(r987,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a530(r988,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a531(r989,l2) conflicts:
;;   subobject 0: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a538(r401,l2) a507(r181,w0,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a532(r990,w0,l2) a533(r992,w0,l2) a534(r993,w0,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a532(r990,l2) conflicts:
;;   subobject 0: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a538(r401,l2) a507(r181,w0,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a533(r992,w0,l2) a534(r993,w0,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a533(r992,l2) conflicts:
;;   subobject 0: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a538(r401,l2) a507(r181,w0,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a532(r990,w0,l2) a534(r993,w0,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a534(r993,l2) conflicts:
;;   subobject 0: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a538(r401,l2) a507(r181,w0,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a532(r990,w0,l2) a533(r992,w0,l2) a536(r400,l2) a539(r697,l2) a540(r1075,l2) a541(r696,l2) a542(r1074,l2) a537(r701,l2) a535(r199,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a535(r199,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a536(r400,l2) conflicts: a538(r401,l2) a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a512(r341,l2) a513(r346,l2) a514(r354,l2) a515(r355,l2) a516(r356,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a522(r416,l2) a523(r418,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a539(r697,l2) a540(r1075,l2) a537(r701,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a537(r701,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a512(r341,l2) a515(r355,l2) a516(r356,l2) a522(r416,l2) a524(r463,l2) a525(r967,l2) a526(r970,l2) a527(r971,l2) a528(r972,l2) a529(r987,l2) a530(r988,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a538(r401,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a539(r697,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a540(r1075,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a536(r400,l2) a541(r696,l2) a542(r1074,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a541(r696,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a540(r1075,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a542(r1074,l2) conflicts: a507(r181,w0,l2) a507(r181,w1,l2) a508(r183,l2) a509(r193,l2) a510(r195,l2) a511(r339,l2) a513(r346,l2) a514(r354,l2) a517(r360,l2) a518(r361,l2) a519(r402,l2) a520(r403,l2) a521(r404,l2) a523(r418,l2) a531(r989,w0,l2) a531(r989,w1,l2) a532(r990,w0,l2) a532(r990,w1,l2) a533(r992,w0,l2) a533(r992,w1,l2) a534(r993,w0,l2) a534(r993,w1,l2) a540(r1075,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a543(r1070,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a544(r1069,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a545(r979,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a546(r915,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a547(r368,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a564(r1055,l0) a565(r369,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a590(r794,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs: 0-3 12 14 16

;; a548(r370,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a566(r346,l0) a564(r1055,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a549(r372,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a550(r373,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a551(r374,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a552(r375,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a819(r955,l0) a820(r951,l0) a821(r947,l0) a822(r954,l0) a824(r950,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a831(r939,l0) a833(r931,l0) a832(r935,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a840(r923,l0) a841(r922,l0) a842(r918,l0) a843(r917,l0) a844(r921,l0) a845(r916,l0) a846(r475,l0) a847(r914,l0) a848(r913,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a553(r389,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a598(r181,w0,l0) a598(r181,w1,l0) a559(r1059,l0) a560(r1058,l0) a561(r1057,l0) a562(r371,l0) a563(r1056,l0) a565(r369,l0) a567(r1054,l0) a572(r1051,l0) a571(r283,w0,l0) a571(r283,w1,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a570(r1052,l0) a574(r1049,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a554(r968,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a555(r969,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a816(r1068,l0) a817(r957,l0) a818(r1067,l0) a822(r954,l0) a823(r928,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0) a837(r925,l0) a838(r924,l0) a839(r919,l0) a840(r923,l0) a842(r918,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a883(r863,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a556(r981,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a557(r860,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a557(r860,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a860(r873,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a878(r870,l0) a879(r869,l0) a880(r864,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 0-3 12 14 16
;;     conflict hard regs:

;; a557(r860,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a849(r1064,l0) a850(r908,l0) a851(r1063,l0) a852(r906,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0) a877(r1060,l0) a881(r868,l0) a882(r867,l0) a883(r863,l0) a884(r862,l0) a885(r866,l0) a886(r861,l0) a887(r296,l0) a888(r859,l0) a889(r858,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs:

;; a558(r857,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a559(r1059,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a560(r1058,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a561(r1057,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a562(r371,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a563(r1056,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a563(r1056,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a562(r371,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a564(r1055,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a547(r368,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a565(r369,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a567(r1054,l0)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a566(r346,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a548(r370,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a686(r1028,w0,l0) a686(r1028,w1,l0) a688(r1026,l0) a689(r1025,w0,l0) a689(r1025,w1,l0) a690(r1024,w0,l0) a690(r1024,w1,l0) a567(r1054,l0) a568(r1053,l0) a569(r353,l0) a572(r1051,l0) a573(r1050,w0,l0) a573(r1050,w1,l0) a590(r794,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a607(r772,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a567(r1054,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a566(r346,l0) a565(r369,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a568(r1053,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a566(r346,l0) a569(r353,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a569(r353,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a566(r346,l0) a568(r1053,l0) a572(r1051,l0) a573(r1050,w0,l0) a573(r1050,w1,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a570(r1052,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a571(r283,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a572(r1051,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a572(r1051,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a572(r1051,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a566(r346,l0) a569(r353,l0) a571(r283,w0,l0) a571(r283,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a573(r1050,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a566(r346,l0) a569(r353,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a566(r346,l0) a569(r353,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a574(r1049,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a575(r984,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a897(r351,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a576(r394,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a577(r983,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a578(r982,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a579(r429,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a585(r173,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a580(r349,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a599(r1043,l0) a607(r772,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a581(r279,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a921(r796,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a582(r216,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a583(r364,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a547(r368,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a607(r772,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a584(r347,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a547(r368,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a607(r772,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a585(r173,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a597(r1044,l0) a608(r1042,l0) a610(r769,l0) a609(r767,l0) a611(r768,l0) a612(r765,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a616(r227,l0) a617(r748,l0) a628(r747,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a909(r801,l0) a920(r798,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a908(r821,l0) a916(r813,l0) a917(r808,l0) a918(r807,l0) a919(r803,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a586(r348,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a607(r772,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a587(r365,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a607(r772,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a588(r393,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a622(r756,l0) a607(r772,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a589(r423,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a591(r1045,l0) a592(r786,l0) a593(r787,l0) a594(r784,l0) a595(r785,l0) a597(r1044,l0) a596(r783,l0) a608(r1042,l0) a612(r765,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a622(r756,l0) a624(r754,l0) a607(r772,l0) a921(r796,l0) a890(r1048,l0) a891(r834,l0) a892(r833,w0,l0) a892(r833,w1,l0) a893(r1047,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a898(r830,l0) a899(r829,l0) a900(r824,l0) a901(r819,l0) a902(r828,l0) a903(r823,l0) a904(r818,l0) a905(r827,l0) a906(r822,l0) a907(r817,l0) a910(r815,l0) a911(r810,l0) a912(r805,l0) a913(r814,l0) a914(r809,l0) a915(r804,l0) a916(r813,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a590(r794,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a591(r1045,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a592(r786,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a593(r787,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a594(r784,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a594(r784,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a593(r787,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a595(r785,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a596(r783,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a597(r1044,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a598(r181,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a688(r1026,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a655(r721,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a662(r1032,w0,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a673(r199,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a677(r688,l0) a678(r682,l0) a679(r681,l0) a680(r1031,l0) a681(r674,l0) a682(r672,l0) a683(r1030,l0) a684(r664,l0) a685(r1029,l0) a688(r1026,l0) a613(r764,l0) a605(r366,l0) a599(r1043,l0) a601(r778,l0) a600(r776,l0) a602(r777,l0) a603(r774,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a635(r1040,l0) a636(r1039,w0,l0) a637(r1038,w0,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a648(r220,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a923(r741,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0) a930(r701,l0)
;;     total conflict hard regs: 0-3 12 14 16-17
;;     conflict hard regs: 0-3 12 14 16-17

;; a599(r1043,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a600(r776,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a598(r181,w0,l0) a598(r181,w1,l0) a601(r778,l0) a602(r777,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a601(r778,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a598(r181,w0,l0) a598(r181,w1,l0) a600(r776,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a602(r777,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a598(r181,w0,l0) a598(r181,w1,l0) a600(r776,l0) a603(r774,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a603(r774,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a598(r181,w0,l0) a598(r181,w1,l0) a602(r777,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a604(r773,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a598(r181,w0,l0) a598(r181,w1,l0) a605(r366,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a605(r366,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a613(r764,l0) a604(r773,l0) a615(r763,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a606(r398,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a655(r721,l0) a605(r366,l0) a604(r773,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a607(r772,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a608(r1042,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a580(r349,l0) a583(r364,l0) a584(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a609(r767,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a610(r769,l0) a611(r768,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a610(r769,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a609(r767,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a611(r768,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a609(r767,l0) a612(r765,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a612(r765,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a611(r768,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a613(r764,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a605(r366,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a614(r397,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a613(r764,l0) a605(r366,l0) a615(r763,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0) a629(r340,l0) a630(r1041,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a615(r763,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a605(r366,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a616(r227,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a553(r389,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a617(r748,l0) a618(r752,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a622(r756,l0) a624(r754,l0) a623(r755,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a617(r748,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a628(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a618(r752,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a620(r759,l0) a619(r760,l0) a621(r757,l0) a625(r751,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a619(r760,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a587(r365,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a620(r759,l0) a621(r757,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a620(r759,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a587(r365,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a619(r760,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a621(r757,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a587(r365,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a619(r760,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a622(r756,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a623(r755,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a624(r754,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a624(r754,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a589(r423,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a623(r755,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a625(r751,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a587(r365,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a627(r749,l0) a626(r750,l0) a628(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a626(r750,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a625(r751,l0) a627(r749,l0) a628(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a627(r749,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a586(r348,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a618(r752,l0) a625(r751,l0) a626(r750,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a628(r747,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a616(r227,l0) a617(r748,l0) a618(r752,l0) a625(r751,l0) a626(r750,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a629(r340,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a583(r364,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a630(r1041,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a630(r1041,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a584(r347,l0) a606(r398,l0) a614(r397,l0) a598(r181,w0,l0) a598(r181,w1,l0) a629(r340,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a631(r345,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a651(r735,l0) a652(r1037,l0) a653(r729,l0) a654(r727,l0) a656(r720,l0) a657(r716,l0) a658(r1036,l0) a659(r1035,l0) a660(r1034,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a635(r1040,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a648(r220,l0) a922(r395,l0) a923(r741,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a632(r362,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a629(r340,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a633(r402,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a678(r682,l0) a679(r681,l0) a629(r340,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a634(r403,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a678(r682,l0) a679(r681,l0) a629(r340,l0) a636(r1039,w0,l0) a636(r1039,w1,l0) a637(r1038,w0,l0) a637(r1038,w1,l0) a638(r743,l0) a639(r221,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a635(r1040,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a636(r1039,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a637(r1038,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a585(r173,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a638(r743,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a639(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a639(r221,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a638(r743,l0) a640(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a640(r222,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a639(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a641(r195,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a640(r222,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a642(r193,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a643(r986,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a648(r220,l0) a922(r395,l0) a923(r741,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a644(r420,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a643(r986,l0) a598(r181,w0,l0) a598(r181,w1,l0) a648(r220,l0) a922(r395,l0) a923(r741,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a645(r354,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a646(r363,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a650(r183,l0) a655(r721,l0) a656(r720,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a647(r404,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a649(r734,l0) a650(r183,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a924(r396,l0) a922(r395,l0) a925(r737,l0) a926(r1077,l0) a927(r736,l0) a928(r1076,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a648(r220,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a649(r734,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a650(r183,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a649(r734,l0) a651(r735,l0) a655(r721,l0) a656(r720,l0) a658(r1036,l0) a659(r1035,l0) a661(r1033,w0,l0) a661(r1033,w1,l0) a662(r1032,w0,l0) a662(r1032,w1,l0) a664(r200,l0) a663(r704,l0) a665(r1072,l0) a666(r201,l0) a667(r1073,l0) a671(r360,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a683(r1030,l0) a684(r664,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a651(r735,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a652(r1037,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a653(r729,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a654(r727,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a655(r721,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a656(r720,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a657(r716,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a658(r1036,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a659(r1035,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a632(r362,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a660(r1034,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a661(r1033,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a662(r1032,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a631(r345,l0) a598(r181,w0,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a663(r704,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a664(r200,l0) a665(r1072,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a664(r200,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a663(r704,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a665(r1072,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a663(r704,l0) a666(r201,l0) a667(r1073,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a666(r201,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a665(r1072,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a667(r1073,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a665(r1072,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a668(r988,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0) a669(r341,l0) a673(r199,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a669(r341,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0) a668(r988,l0) a673(r199,l0) a929(r400,l0) a930(r701,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a670(r703,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a671(r360,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a672(r361,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a672(r361,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a670(r703,l0) a675(r695,l0) a674(r359,l0) a676(r692,l0) a931(r401,l0) a929(r400,l0) a932(r697,l0) a933(r1075,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a673(r199,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0) a668(r988,l0) a669(r341,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a674(r359,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a675(r695,l0) a676(r692,l0) a678(r682,l0) a679(r681,l0) a683(r1030,l0) a684(r664,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a675(r695,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a676(r692,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a677(r688,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a678(r682,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a650(r183,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a679(r681,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a647(r404,l0) a650(r183,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a680(r1031,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a681(r674,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a682(r672,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a683(r1030,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a650(r183,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a684(r664,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a650(r183,l0) a674(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a685(r1029,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a686(r1028,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a687(r1027,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a688(r1026,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a689(r1025,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a690(r1024,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a691(r1023,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a692(r1022,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a693(r651,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a694(r1021,w0,l0) a694(r1021,w1,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a694(r1021,w0,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a694(r1021,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a693(r651,w0,l0) a693(r651,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a693(r651,w0,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a695(r1020,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a696(r1068,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a697(r957,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a697(r957,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a696(r1068,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a698(r1067,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a699(r955,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a700(r951,l1) a701(r947,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a700(r951,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a699(r955,l1) a701(r947,l1) a702(r954,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a701(r947,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a699(r955,l1) a700(r951,l1) a702(r954,l1) a704(r950,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a702(r954,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a700(r951,l1) a701(r947,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a703(r928,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a704(r950,l1) a705(r457,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a704(r950,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a701(r947,l1) a703(r928,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a705(r457,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a706(r946,l1) a708(r1066,l1) a709(r941,l1) a707(r452,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a706(r946,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a707(r452,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a708(r1066,l1) a709(r941,l1) a710(r1065,l1) a714(r938,l1) a715(r930,l1) a716(r934,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a708(r1066,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a709(r941,l1) a707(r452,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a709(r941,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a708(r1066,l1) a707(r452,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a710(r1065,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a707(r452,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a711(r939,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a713(r931,l1) a712(r935,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a712(r935,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a711(r939,l1) a713(r931,l1) a714(r938,l1) a715(r930,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a713(r931,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a711(r939,l1) a712(r935,l1) a714(r938,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a714(r938,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a707(r452,l1) a713(r931,l1) a712(r935,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a715(r930,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a707(r452,l1) a712(r935,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a716(r934,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a703(r928,l1) a705(r457,l1) a707(r452,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a717(r925,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a718(r924,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a719(r919,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a719(r919,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a718(r924,l1) a720(r923,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a720(r923,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a719(r919,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a721(r922,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a722(r918,l1) a723(r917,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a722(r918,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a721(r922,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a723(r917,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a721(r922,l1) a724(r921,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a724(r921,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a723(r917,l1) a725(r916,l1) a726(r475,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a725(r916,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a724(r921,l1) a726(r475,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a726(r475,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a724(r921,l1) a725(r916,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a727(r914,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a728(r913,l1) conflicts: a137(r979,w0,l1) a137(r979,w1,l1) a138(r915,l1) a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a729(r1064,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a730(r908,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a730(r908,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a729(r1064,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a731(r1063,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a732(r906,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a733(r901,l1) a734(r896,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a733(r901,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a732(r906,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a734(r896,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a732(r906,l1) a733(r901,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a735(r380,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a733(r901,l1) a734(r896,l1) a736(r905,l1) a737(r900,l1) a738(r895,l1) a739(r904,l1) a741(r899,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a748(r887,l1) a750(r877,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1) a755(r881,l1) a756(r880,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a736(r905,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a733(r901,l1) a734(r896,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a737(r900,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a734(r896,l1) a736(r905,l1) a735(r380,l1) a738(r895,l1) a739(r904,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a738(r895,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a736(r905,l1) a735(r380,l1) a737(r900,l1) a739(r904,l1) a741(r899,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a739(r904,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a737(r900,l1) a738(r895,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a740(r873,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a741(r899,l1) a742(r309,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1) a757(r1060,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a741(r899,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a738(r895,l1) a740(r873,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a742(r309,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a740(r873,l1) a743(r894,l1) a745(r1062,l1) a746(r889,l1) a744(r314,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a743(r894,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a744(r314,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a740(r873,l1) a742(r309,l1) a745(r1062,l1) a746(r889,l1) a747(r1061,l1) a752(r885,l1) a754(r875,l1) a756(r880,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a745(r1062,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a746(r889,l1) a744(r314,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a746(r889,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a745(r1062,l1) a744(r314,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a747(r1061,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a744(r314,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a748(r887,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a750(r877,l1) a749(r882,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a749(r882,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a748(r887,l1) a750(r877,l1) a751(r886,l1) a752(r885,l1) a753(r876,l1) a754(r875,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a750(r877,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a748(r887,l1) a749(r882,l1) a751(r886,l1) a752(r885,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a751(r886,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a750(r877,l1) a749(r882,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a752(r885,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a744(r314,l1) a750(r877,l1) a749(r882,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a753(r876,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a749(r882,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a754(r875,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a744(r314,l1) a749(r882,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a755(r881,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a756(r880,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a735(r380,l1) a740(r873,l1) a742(r309,l1) a744(r314,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a757(r1060,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a740(r873,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a758(r870,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a759(r869,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a760(r864,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a760(r864,l1) conflicts: a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a759(r869,l1) a761(r868,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a761(r868,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a760(r864,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a762(r867,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a763(r863,l1) a764(r862,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a763(r863,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a146(r968,l1) a147(r969,l1) a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a762(r867,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a764(r862,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a762(r867,l1) a765(r866,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a765(r866,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a764(r862,l1) a766(r861,l1) a767(r296,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a766(r861,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a765(r866,l1) a767(r296,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a767(r296,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1) a765(r866,l1) a766(r861,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a768(r859,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a769(r858,l1) conflicts: a140(r370,l1) a141(r372,l1) a142(r373,l1) a143(r374,l1) a144(r375,l1) a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a148(r981,w0,l1) a148(r981,w1,l1) a149(r860,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a770(r1048,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a771(r834,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a771(r834,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a770(r1048,l1) a772(r833,w0,l1) a772(r833,w1,l1)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a772(r833,l1) conflicts:
;;   subobject 0: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a771(r834,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a771(r834,l1) a773(r1047,l1) a775(r352,l1) a774(r350,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a773(r1047,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a772(r833,w0,l1) a772(r833,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a774(r350,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a772(r833,w0,l1) a772(r833,w1,l1) a775(r352,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a775(r352,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a772(r833,w0,l1) a772(r833,w1,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1) a777(r351,l1) a788(r821,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a776(r1046,l1) conflicts:
;;   subobject 0: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a775(r352,l1) a774(r350,l1) a777(r351,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a132(r990,w0,l1) a133(r992,w0,l1) a134(r993,w0,l1) a167(r984,w0,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a775(r352,l1) a774(r350,l1) a777(r351,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a777(r351,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a775(r352,l1) a774(r350,l1) a776(r1046,w0,l1) a776(r1046,w1,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a778(r830,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a779(r829,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a780(r824,l1) a781(r819,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a780(r824,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a779(r829,l1) a781(r819,l1) a782(r828,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a781(r819,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a779(r829,l1) a780(r824,l1) a782(r828,l1) a783(r823,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a782(r828,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a780(r824,l1) a781(r819,l1) a783(r823,l1) a784(r818,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a783(r823,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a781(r819,l1) a782(r828,l1) a784(r818,l1) a785(r827,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a784(r818,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a782(r828,l1) a783(r823,l1) a785(r827,l1) a786(r822,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a785(r827,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a783(r823,l1) a784(r818,l1) a786(r822,l1) a787(r817,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a786(r822,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a784(r818,l1) a785(r827,l1) a787(r817,l1) a788(r821,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a787(r817,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a785(r827,l1) a786(r822,l1) a788(r821,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a788(r821,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a775(r352,l1) a786(r822,l1) a787(r817,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a789(r801,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a775(r352,l1) a788(r821,l1) a798(r807,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a790(r815,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a791(r810,l1) a792(r805,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a791(r810,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a790(r815,l1) a792(r805,l1) a793(r814,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a792(r805,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a790(r815,l1) a791(r810,l1) a793(r814,l1) a794(r809,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a793(r814,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a791(r810,l1) a792(r805,l1) a794(r809,l1) a795(r804,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a794(r809,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a792(r805,l1) a793(r814,l1) a795(r804,l1) a796(r813,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a795(r804,l1) conflicts: a139(r368,l1) a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a173(r279,l1) a174(r216,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a793(r814,l1) a794(r809,l1) a796(r813,l1) a797(r808,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a796(r813,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a794(r809,l1) a795(r804,l1) a797(r808,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a797(r808,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a795(r804,l1) a796(r813,l1) a798(r807,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a798(r807,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1) a789(r801,l1) a797(r808,l1) a799(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a799(r803,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1) a798(r807,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a800(r798,l1) conflicts: a139(r368,l1) a145(r389,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a177(r173,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a801(r796,l1) conflicts: a139(r368,l1) a145(r389,l1) a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a167(r984,w0,l1) a167(r984,w1,l1) a168(r394,l1) a169(r983,l1) a170(r982,l1) a171(r429,l1) a173(r279,l1) a174(r216,l1) a177(r173,l1) a178(r348,l1) a179(r365,l1) a180(r393,l1) a181(r423,l1) a158(r346,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a802(r395,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a223(r345,l1) a224(r362,l1) a235(r986,l1) a236(r420,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a804(r396,l1) a805(r737,l1) a806(r1077,l1) a803(r741,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a803(r741,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a223(r345,l1) a235(r986,l1) a236(r420,l1) a190(r181,w0,l1) a190(r181,w1,l1) a802(r395,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a804(r396,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a802(r395,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a805(r737,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a802(r395,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a806(r1077,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a802(r395,l1) a807(r736,l1) a808(r1076,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a807(r736,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a806(r1077,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a808(r1076,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a198(r398,l1) a206(r397,l1) a224(r362,l1) a238(r363,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a806(r1077,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a809(r400,l1) conflicts: a120(r339,l1) a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a123(r416,l1) a260(r988,l1) a261(r341,l1) a263(r360,l1) a264(r361,l1) a811(r401,l1) a812(r697,l1) a813(r1075,l1) a810(r701,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a810(r701,l1) conflicts: a121(r355,l1) a122(r356,l1) a125(r463,l1) a126(r967,l1) a127(r970,l1) a128(r971,l1) a129(r972,l1) a130(r987,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a190(r181,w0,l1) a190(r181,w1,l1) a123(r416,l1) a260(r988,l1) a261(r341,l1) a809(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a811(r401,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a809(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a812(r697,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a809(r400,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a813(r1075,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a809(r400,l1) a814(r696,l1) a815(r1074,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a814(r696,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a813(r1075,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a815(r1074,l1) conflicts: a120(r339,l1) a131(r989,w0,l1) a131(r989,w1,l1) a132(r990,w0,l1) a132(r990,w1,l1) a133(r992,w0,l1) a133(r992,w1,l1) a134(r993,w0,l1) a134(r993,w1,l1) a158(r346,l1) a124(r418,l1) a190(r181,w0,l1) a190(r181,w1,l1) a225(r402,l1) a226(r403,l1) a233(r195,l1) a234(r193,l1) a237(r354,l1) a239(r404,l1) a242(r183,l1) a263(r360,l1) a264(r361,l1) a813(r1075,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a816(r1068,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a817(r957,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a817(r957,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a816(r1068,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a818(r1067,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a819(r955,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a820(r951,l0) a821(r947,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a820(r951,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a819(r955,l0) a821(r947,l0) a822(r954,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a821(r947,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a819(r955,l0) a820(r951,l0) a822(r954,l0) a824(r950,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a822(r954,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a820(r951,l0) a821(r947,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a823(r928,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a824(r950,l0) a825(r457,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a824(r950,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a821(r947,l0) a823(r928,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a825(r457,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a826(r946,l0) a828(r1066,l0) a829(r941,l0) a827(r452,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a826(r946,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a827(r452,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a828(r1066,l0) a829(r941,l0) a830(r1065,l0) a834(r938,l0) a835(r930,l0) a836(r934,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a828(r1066,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a829(r941,l0) a827(r452,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a829(r941,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a828(r1066,l0) a827(r452,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a830(r1065,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a827(r452,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a831(r939,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a833(r931,l0) a832(r935,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a832(r935,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a831(r939,l0) a833(r931,l0) a834(r938,l0) a835(r930,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a833(r931,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a831(r939,l0) a832(r935,l0) a834(r938,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a834(r938,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a827(r452,l0) a833(r931,l0) a832(r935,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a835(r930,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a827(r452,l0) a832(r935,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a836(r934,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a823(r928,l0) a825(r457,l0) a827(r452,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a837(r925,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a838(r924,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a839(r919,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a839(r919,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a838(r924,l0) a840(r923,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a840(r923,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a839(r919,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a841(r922,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a842(r918,l0) a843(r917,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a842(r918,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a841(r922,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a843(r917,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a841(r922,l0) a844(r921,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a844(r921,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a843(r917,l0) a845(r916,l0) a846(r475,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a845(r916,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a844(r921,l0) a846(r475,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a846(r475,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a844(r921,l0) a845(r916,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a847(r914,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a848(r913,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a545(r979,w0,l0) a545(r979,w1,l0) a546(r915,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a849(r1064,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a850(r908,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a850(r908,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a849(r1064,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a851(r1063,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a852(r906,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a853(r901,l0) a854(r896,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a853(r901,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a852(r906,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a854(r896,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a852(r906,l0) a853(r901,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a855(r380,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a853(r901,l0) a854(r896,l0) a856(r905,l0) a857(r900,l0) a858(r895,l0) a859(r904,l0) a861(r899,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a868(r887,l0) a870(r877,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0) a875(r881,l0) a876(r880,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a856(r905,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a853(r901,l0) a854(r896,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a857(r900,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a854(r896,l0) a856(r905,l0) a855(r380,l0) a858(r895,l0) a859(r904,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a858(r895,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a856(r905,l0) a855(r380,l0) a857(r900,l0) a859(r904,l0) a861(r899,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a859(r904,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a857(r900,l0) a858(r895,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a860(r873,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a861(r899,l0) a862(r309,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0) a877(r1060,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a861(r899,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a858(r895,l0) a860(r873,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a862(r309,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a860(r873,l0) a863(r894,l0) a865(r1062,l0) a866(r889,l0) a864(r314,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a863(r894,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a864(r314,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a860(r873,l0) a862(r309,l0) a865(r1062,l0) a866(r889,l0) a867(r1061,l0) a872(r885,l0) a874(r875,l0) a876(r880,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a865(r1062,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a866(r889,l0) a864(r314,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a866(r889,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a865(r1062,l0) a864(r314,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a867(r1061,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a864(r314,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a868(r887,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a870(r877,l0) a869(r882,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a869(r882,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a868(r887,l0) a870(r877,l0) a871(r886,l0) a872(r885,l0) a873(r876,l0) a874(r875,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a870(r877,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a868(r887,l0) a869(r882,l0) a871(r886,l0) a872(r885,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a871(r886,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a870(r877,l0) a869(r882,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a872(r885,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a864(r314,l0) a870(r877,l0) a869(r882,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a873(r876,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a869(r882,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a874(r875,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a864(r314,l0) a869(r882,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a875(r881,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a876(r880,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a855(r380,l0) a860(r873,l0) a862(r309,l0) a864(r314,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a877(r1060,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a860(r873,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a878(r870,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a879(r869,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a880(r864,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a880(r864,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a879(r869,l0) a881(r868,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a881(r868,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a880(r864,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a882(r867,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a883(r863,l0) a884(r862,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a883(r863,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a554(r968,l0) a555(r969,l0) a547(r368,l0) a553(r389,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a882(r867,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a884(r862,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a882(r867,l0) a885(r866,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a885(r866,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a884(r862,l0) a886(r861,l0) a887(r296,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a886(r861,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a885(r866,l0) a887(r296,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a887(r296,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0) a885(r866,l0) a886(r861,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a888(r859,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a889(r858,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a548(r370,l0) a549(r372,l0) a550(r373,l0) a551(r374,l0) a552(r375,l0) a547(r368,l0) a556(r981,w0,l0) a556(r981,w1,l0) a557(r860,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a890(r1048,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a891(r834,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a891(r834,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a890(r1048,l0) a892(r833,w0,l0) a892(r833,w1,l0)
;;     total conflict hard regs: 0-1 12 14
;;     conflict hard regs: 0-1 12 14

;; a892(r833,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a891(r834,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a891(r834,l0) a893(r1047,l0) a895(r352,l0) a894(r350,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a893(r1047,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a892(r833,w0,l0) a892(r833,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a894(r350,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a892(r833,w0,l0) a892(r833,w1,l0) a895(r352,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a895(r352,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a892(r833,w0,l0) a892(r833,w1,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0) a897(r351,l0) a908(r821,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a896(r1046,l0) conflicts:
;;   subobject 0: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a895(r352,l0) a894(r350,l0) a897(r351,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2


;;   subobject 1: a0(r993,w0,l0) a1(r992,w0,l0) a2(r990,w0,l0) a3(r989,w0,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a895(r352,l0) a894(r350,l0) a897(r351,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a897(r351,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a895(r352,l0) a894(r350,l0) a896(r1046,w0,l0) a896(r1046,w1,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a898(r830,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a899(r829,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a900(r824,l0) a901(r819,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a900(r824,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a899(r829,l0) a901(r819,l0) a902(r828,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a901(r819,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a899(r829,l0) a900(r824,l0) a902(r828,l0) a903(r823,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a902(r828,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a900(r824,l0) a901(r819,l0) a903(r823,l0) a904(r818,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a903(r823,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a901(r819,l0) a902(r828,l0) a904(r818,l0) a905(r827,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a904(r818,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a902(r828,l0) a903(r823,l0) a905(r827,l0) a906(r822,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a905(r827,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a903(r823,l0) a904(r818,l0) a906(r822,l0) a907(r817,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a906(r822,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a904(r818,l0) a905(r827,l0) a907(r817,l0) a908(r821,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a907(r817,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a905(r827,l0) a906(r822,l0) a908(r821,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a908(r821,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a895(r352,l0) a906(r822,l0) a907(r817,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a909(r801,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a895(r352,l0) a908(r821,l0) a918(r807,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a910(r815,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a911(r810,l0) a912(r805,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a911(r810,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a910(r815,l0) a912(r805,l0) a913(r814,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a912(r805,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a910(r815,l0) a911(r810,l0) a913(r814,l0) a914(r809,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a913(r814,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a911(r810,l0) a912(r805,l0) a914(r809,l0) a915(r804,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a914(r809,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a912(r805,l0) a913(r814,l0) a915(r804,l0) a916(r813,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a915(r804,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a547(r368,l0) a575(r984,w0,l0) a575(r984,w1,l0) a581(r279,l0) a582(r216,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a913(r814,l0) a914(r809,l0) a916(r813,l0) a917(r808,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a916(r813,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a914(r809,l0) a915(r804,l0) a917(r808,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a917(r808,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a915(r804,l0) a916(r813,l0) a918(r807,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a918(r807,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0) a909(r801,l0) a917(r808,l0) a919(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a919(r803,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0) a918(r807,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a920(r798,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a585(r173,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a921(r796,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a547(r368,l0) a553(r389,l0) a575(r984,w0,l0) a575(r984,w1,l0) a576(r394,l0) a577(r983,l0) a578(r982,l0) a579(r429,l0) a581(r279,l0) a582(r216,l0) a585(r173,l0) a586(r348,l0) a587(r365,l0) a588(r393,l0) a589(r423,l0) a566(r346,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a922(r395,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a631(r345,l0) a632(r362,l0) a643(r986,l0) a644(r420,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a924(r396,l0) a925(r737,l0) a926(r1077,l0) a923(r741,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a923(r741,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a631(r345,l0) a643(r986,l0) a644(r420,l0) a598(r181,w0,l0) a598(r181,w1,l0) a922(r395,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a924(r396,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a922(r395,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a925(r737,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a922(r395,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a926(r1077,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a922(r395,l0) a927(r736,l0) a928(r1076,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a927(r736,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a926(r1077,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a928(r1076,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a606(r398,l0) a614(r397,l0) a632(r362,l0) a646(r363,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a926(r1077,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a929(r400,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a6(r339,l0) a7(r418,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a668(r988,l0) a669(r341,l0) a671(r360,l0) a672(r361,l0) a931(r401,l0) a932(r697,l0) a933(r1075,l0) a930(r701,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a930(r701,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a4(r463,l0) a5(r987,l0) a8(r355,l0) a9(r356,l0) a10(r416,l0) a11(r967,l0) a12(r970,l0) a13(r971,l0) a14(r972,l0) a598(r181,w0,l0) a598(r181,w1,l0) a668(r988,l0) a669(r341,l0) a929(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a931(r401,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a929(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a932(r697,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a929(r400,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a933(r1075,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a929(r400,l0) a934(r696,l0) a935(r1074,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a934(r696,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a933(r1075,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a935(r1074,l0) conflicts: a0(r993,w0,l0) a0(r993,w1,l0) a1(r992,w0,l0) a1(r992,w1,l0) a2(r990,w0,l0) a2(r990,w1,l0) a3(r989,w0,l0) a3(r989,w1,l0) a6(r339,l0) a7(r418,l0) a566(r346,l0) a598(r181,w0,l0) a598(r181,w1,l0) a633(r402,l0) a634(r403,l0) a641(r195,l0) a642(r193,l0) a645(r354,l0) a647(r404,l0) a650(r183,l0) a671(r360,l0) a672(r361,l0) a933(r1075,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a25(r358)<->a29(r413)@6:constraint
  cp1:a20(r357)<->a26(r410)@6:constraint
  cp2:a24(r634)<->a25(r358)@1:shuffle
  cp3:a22(r169)<->a24(r634)@1:shuffle
  cp4:a16(r640)<->a21(r637)@1:shuffle
  cp5:a16(r640)<->a22(r169)@1:shuffle
  cp6:a16(r640)<->a23(r639)@1:shuffle
  cp7:a19(r636)<->a20(r357)@1:shuffle
  cp8:a15(r171)<->a19(r636)@1:shuffle
  cp9:a17(r630)<->a31(r1019)@13:move
  cp10:a30(r412)<->a34(r1018)@3:move
  cp11:a29(r413)<->a32(r628)@3:constraint
  cp12:a30(r412)<->a36(r1017)@3:move
  cp13:a48(r609)<->a49(r343)@1:shuffle
  cp14:a47(r611)<->a48(r609)@1:shuffle
  cp15:a41(r610)<->a46(r614)@1:shuffle
  cp16:a41(r610)<->a47(r611)@1:shuffle
  cp17:a44(r616)<->a45(r612)@1:shuffle
  cp18:a38(r615)<->a43(r619)@1:shuffle
  cp19:a38(r615)<->a44(r616)@1:shuffle
  cp20:a39(r622)<->a40(r973)@1:shuffle
  cp21:a39(r622)<->a41(r610)@1:shuffle
  cp22:a39(r622)<->a42(r621)@1:shuffle
  cp23:a28(r409)<->a52(r1016)@3:move
  cp24:a26(r410)<->a50(r606)@3:constraint
  cp25:a28(r409)<->a53(r1015)@3:move
  cp26:a63(r590)<->a65(r342)@1:shuffle
  cp27:a62(r592)<->a64(r587)@1:shuffle
  cp28:a61(r595)<->a63(r590)@1:shuffle
  cp29:a55(r591)<->a61(r595)@1:shuffle
  cp30:a55(r591)<->a62(r592)@1:shuffle
  cp31:a57(r585)<->a59(r589)@1:shuffle
  cp32:a57(r585)<->a60(r586)@1:shuffle
  cp33:a56(r598)<->a57(r585)@1:shuffle
  cp34:a56(r598)<->a58(r597)@1:shuffle
  cp35:a28(r409)<->a67(r1013)@6:move
  cp36:a30(r412)<->a66(r1014)@6:move
  cp37:a70(r154)<->a71(r576)@3:constraint
  cp38:a82(r561)<->a84(r556)@1:shuffle
  cp39:a77(r557)<->a82(r561)@1:shuffle
  cp40:a77(r557)<->a83(r558)@1:shuffle
  cp41:a80(r563)<->a81(r559)@1:shuffle
  cp42:a75(r562)<->a79(r566)@1:shuffle
  cp43:a75(r562)<->a80(r563)@1:shuffle
  cp44:a40(r973)<->a76(r569)@1:shuffle
  cp45:a76(r569)<->a77(r557)@1:shuffle
  cp46:a76(r569)<->a78(r568)@1:shuffle
  cp47:a85(r146)<->a86(r553)@3:constraint
  cp48:a97(r540)<->a99(r535)@1:shuffle
  cp49:a96(r543)<->a98(r538)@1:shuffle
  cp50:a90(r539)<->a96(r543)@1:shuffle
  cp51:a90(r539)<->a97(r540)@1:shuffle
  cp52:a92(r533)<->a94(r537)@1:shuffle
  cp53:a92(r533)<->a95(r534)@1:shuffle
  cp54:a91(r546)<->a92(r533)@1:shuffle
  cp55:a91(r546)<->a93(r545)@1:shuffle
  cp56:a101(r408)<->a102(r1008)@1:move
  cp57:a101(r408)<->a104(r1007)@5:move
  cp58:a103(r125)<->a109(r1004)@3:move
  cp59:a103(r125)<->a113(r1000)@3:move
  cp60:a8(r355)<->a119(r481)@1:shuffle
  cp61:a9(r356)<->a118(r483)@1:shuffle
  cp62:a124(r418)<->a135(r1070)@97:move
  cp63:a157(r369)<->a160(r1053)@110:move
  cp64:a140(r370)<->a159(r1054)@110:move
  cp65:a154(r371)<->a156(r1055)@110:move
  cp66:a141(r372)<->a155(r1056)@110:move
  cp67:a142(r373)<->a153(r1057)@110:move
  cp68:a143(r374)<->a152(r1058)@110:move
  cp69:a144(r375)<->a151(r1059)@110:move
  cp70:a161(r353)<->a162(r1052)@32:move
  cp71:a163(r283)<->a165(r1050)@64:move
  cp72:a161(r353)<->a166(r1049)@45:move
  cp73:a174(r216)<->a176(r347)@12:shuffle
  cp74:a174(r216)<->a175(r364)@12:shuffle
  cp75:a171(r429)<->a172(r349)@12:shuffle
  cp76:a161(r353)<->a182(r794)@13:shuffle
  cp77:a186(r784)<->a187(r785)@13:shuffle
  cp78:a184(r786)<->a186(r784)@13:shuffle
  cp79:a184(r786)<->a185(r787)@13:shuffle
  cp80:a139(r368)<->a183(r1045)@110:move
  cp81:a195(r774)<->a196(r773)@6:shuffle
  cp82:a192(r776)<->a195(r774)@6:shuffle
  cp83:a193(r778)<->a194(r777)@6:shuffle
  cp84:a172(r349)<->a192(r776)@6:shuffle
  cp85:a204(r765)<->a205(r764)@6:shuffle
  cp86:a201(r767)<->a204(r765)@6:shuffle
  cp87:a202(r769)<->a203(r768)@6:shuffle
  cp88:a172(r349)<->a201(r767)@6:shuffle
  cp89:a197(r366)<->a208(r227)@110:constraint
  cp90:a178(r348)<->a213(r757)@6:shuffle
  cp91:a212(r759)<->a213(r757)@6:shuffle
  cp92:a180(r393)<->a212(r759)@6:shuffle
  cp93:a180(r393)<->a211(r760)@6:shuffle
  cp94:a145(r389)<->a209(r748)@55:move
  cp95:a181(r423)<->a215(r755)@55:constraint
  cp96:a145(r389)<->a214(r756)@6:shuffle
  cp97:a175(r364)<->a222(r1041)@110:move
  cp98:a218(r750)<->a221(r340)@13:shuffle
  cp99:a124(r418)<->a218(r750)@13:shuffle
  cp100:a219(r749)<->a220(r747)@13:shuffle
  cp101:a232(r222)<->a234(r193)@13:shuffle
  cp102:a231(r221)<->a233(r195)@13:shuffle
  cp103:a230(r743)<->a232(r222)@26:shuffle
  cp104:a221(r340)<->a227(r1040)@110:move
  cp105:a177(r173)<->a236(r420)@44:move
  cp106:a177(r173)<->a240(r220)@65:move
  cp107:a245(r729)<->a246(r727)@3:shuffle
  cp108:a206(r397)<->a244(r1037)@27:move
  cp109:a123(r416)<->a243(r735)@3:shuffle
  cp110:a239(r404)<->a243(r735)@3:shuffle
  cp111:a123(r416)<->a248(r720)@20:shuffle
  cp112:a248(r720)<->a249(r716)@10:shuffle
  cp113:a206(r397)<->a248(r720)@10:shuffle
  cp114:a258(r201)<->a259(r1073)@110:move
  cp115:a255(r704)<->a258(r201)@26:shuffle
  cp116:a256(r200)<->a257(r1072)@110:move
  cp117:a224(r362)<->a252(r1034)@110:move
  cp118:a223(r345)<->a261(r341)@44:move
  cp119:a223(r345)<->a265(r199)@65:move
  cp120:a268(r692)<->a269(r688)@6:shuffle
  cp121:a226(r403)<->a268(r692)@6:shuffle
  cp122:a273(r674)<->a274(r672)@6:shuffle
  cp123:a226(r403)<->a272(r1031)@55:move
  cp124:a263(r360)<->a270(r682)@6:shuffle
  cp125:a242(r183)<->a277(r1029)@110:move
  cp126:a158(r346)<->a279(r1027)@32:move
  cp127:a190(r181)<->a278(r1028)@32:move
  cp128:a190(r181)<->a281(r1025)@64:move
  cp129:a158(r346)<->a283(r1023)@45:move
  cp130:a190(r181)<->a282(r1024)@45:move
  cp131:a285(r651)<->a287(r1020)@110:move
  cp132:a158(r346)<->a284(r1022)@110:move
  cp133:a343(r914)<->a344(r913)@111:shuffle
  cp134:a342(r475)<->a343(r914)@111:shuffle
  cp135:a339(r917)<->a341(r916)@111:shuffle
  cp136:a337(r922)<->a340(r921)@111:shuffle
  cp137:a338(r918)<->a339(r917)@111:shuffle
  cp138:a335(r919)<->a338(r918)@111:shuffle
  cp139:a336(r923)<->a337(r922)@111:shuffle
  cp140:a334(r924)<->a336(r923)@111:shuffle
  cp141:a333(r925)<->a334(r924)@111:shuffle
  cp142:a333(r925)<->a335(r919)@111:shuffle
  cp143:a319(r928)<->a333(r925)@222:shuffle
  cp144:a328(r935)<->a332(r934)@111:shuffle
  cp145:a329(r931)<->a331(r930)@111:shuffle
  cp146:a327(r939)<->a330(r938)@111:shuffle
  cp147:a325(r941)<->a326(r1065)@111:shuffle
  cp148:a317(r947)<->a322(r946)@111:shuffle
  cp149:a316(r951)<->a320(r950)@111:shuffle
  cp150:a315(r955)<->a318(r954)@111:shuffle
  cp151:a313(r957)<->a314(r1067)@111:shuffle
  cp152:a408(r859)<->a409(r858)@111:shuffle
  cp153:a407(r296)<->a408(r859)@111:shuffle
  cp154:a404(r862)<->a406(r861)@111:shuffle
  cp155:a402(r867)<->a405(r866)@111:shuffle
  cp156:a403(r863)<->a404(r862)@111:shuffle
  cp157:a400(r864)<->a403(r863)@111:shuffle
  cp158:a401(r868)<->a402(r867)@111:shuffle
  cp159:a399(r869)<->a401(r868)@111:shuffle
  cp160:a398(r870)<->a399(r869)@111:shuffle
  cp161:a398(r870)<->a400(r864)@111:shuffle
  cp162:a380(r873)<->a398(r870)@222:shuffle
  cp163:a375(r380)<->a397(r1060)@890:move
  cp164:a395(r881)<->a396(r880)@111:shuffle
  cp165:a389(r882)<->a395(r881)@111:shuffle
  cp166:a393(r876)<->a394(r875)@111:shuffle
  cp167:a390(r877)<->a393(r876)@111:shuffle
  cp168:a391(r886)<->a392(r885)@111:shuffle
  cp169:a388(r887)<->a391(r886)@111:shuffle
  cp170:a386(r889)<->a387(r1061)@111:shuffle
  cp171:a378(r895)<->a383(r894)@111:shuffle
  cp172:a377(r900)<->a381(r899)@111:shuffle
  cp173:a376(r905)<->a379(r904)@111:shuffle
  cp174:a374(r896)<->a378(r895)@111:shuffle
  cp175:a373(r901)<->a377(r900)@111:shuffle
  cp176:a372(r906)<->a376(r905)@111:shuffle
  cp177:a372(r906)<->a375(r380)@111:shuffle
  cp178:a370(r908)<->a371(r1063)@111:shuffle
  cp179:a412(r279)<->a446(r830)@111:shuffle
  cp180:a440(r833)<->a444(r1046)@890:move
  cp181:a439(r834)<->a441(r1047)@111:shuffle
  cp182:a452(r818)<->a455(r817)@37:shuffle
  cp183:a451(r823)<->a454(r822)@37:shuffle
  cp184:a450(r828)<->a453(r827)@37:shuffle
  cp185:a449(r819)<->a452(r818)@37:shuffle
  cp186:a448(r824)<->a451(r823)@37:shuffle
  cp187:a447(r829)<->a450(r828)@37:shuffle
  cp188:a442(r350)<->a449(r819)@37:shuffle
  cp189:a443(r352)<->a448(r824)@37:shuffle
  cp190:a445(r351)<->a447(r829)@37:shuffle
  cp191:a463(r804)<->a467(r803)@37:shuffle
  cp192:a462(r809)<->a465(r808)@37:shuffle
  cp193:a461(r814)<->a464(r813)@37:shuffle
  cp194:a460(r805)<->a463(r804)@37:shuffle
  cp195:a459(r810)<->a462(r809)@37:shuffle
  cp196:a458(r815)<->a461(r814)@37:shuffle
  cp197:a442(r350)<->a460(r805)@37:shuffle
  cp198:a443(r352)<->a459(r810)@37:shuffle
  cp199:a445(r351)<->a458(r815)@37:shuffle
  cp200:a468(r798)<->a469(r796)@111:shuffle
  cp201:a457(r801)<->a468(r798)@222:shuffle
  cp202:a505(r736)<->a506(r1076)@890:move
  cp203:a500(r395)<->a505(r736)@111:shuffle
  cp204:a503(r737)<->a504(r1077)@890:move
  cp205:a502(r396)<->a503(r737)@111:shuffle
  cp206:a541(r696)<->a542(r1074)@890:move
  cp207:a536(r400)<->a541(r696)@111:shuffle
  cp208:a539(r697)<->a540(r1075)@890:move
  cp209:a538(r401)<->a539(r697)@111:shuffle
  cp210:a7(r418)<->a543(r1070)@97:move
  cp211:a565(r369)<->a568(r1053)@110:move
  cp212:a548(r370)<->a567(r1054)@110:move
  cp213:a562(r371)<->a564(r1055)@110:move
  cp214:a549(r372)<->a563(r1056)@110:move
  cp215:a550(r373)<->a561(r1057)@110:move
  cp216:a551(r374)<->a560(r1058)@110:move
  cp217:a552(r375)<->a559(r1059)@110:move
  cp218:a569(r353)<->a570(r1052)@32:move
  cp219:a571(r283)<->a573(r1050)@64:move
  cp220:a569(r353)<->a574(r1049)@45:move
  cp221:a582(r216)<->a584(r347)@12:shuffle
  cp222:a582(r216)<->a583(r364)@12:shuffle
  cp223:a579(r429)<->a580(r349)@12:shuffle
  cp224:a569(r353)<->a590(r794)@13:shuffle
  cp225:a594(r784)<->a595(r785)@13:shuffle
  cp226:a592(r786)<->a594(r784)@13:shuffle
  cp227:a592(r786)<->a593(r787)@13:shuffle
  cp228:a547(r368)<->a591(r1045)@110:move
  cp229:a603(r774)<->a604(r773)@6:shuffle
  cp230:a600(r776)<->a603(r774)@6:shuffle
  cp231:a601(r778)<->a602(r777)@6:shuffle
  cp232:a580(r349)<->a600(r776)@6:shuffle
  cp233:a612(r765)<->a613(r764)@6:shuffle
  cp234:a609(r767)<->a612(r765)@6:shuffle
  cp235:a610(r769)<->a611(r768)@6:shuffle
  cp236:a580(r349)<->a609(r767)@6:shuffle
  cp237:a605(r366)<->a616(r227)@110:constraint
  cp238:a586(r348)<->a621(r757)@6:shuffle
  cp239:a620(r759)<->a621(r757)@6:shuffle
  cp240:a588(r393)<->a620(r759)@6:shuffle
  cp241:a588(r393)<->a619(r760)@6:shuffle
  cp242:a553(r389)<->a617(r748)@55:move
  cp243:a589(r423)<->a623(r755)@55:constraint
  cp244:a553(r389)<->a622(r756)@6:shuffle
  cp245:a583(r364)<->a630(r1041)@110:move
  cp246:a626(r750)<->a629(r340)@13:shuffle
  cp247:a7(r418)<->a626(r750)@13:shuffle
  cp248:a627(r749)<->a628(r747)@13:shuffle
  cp249:a640(r222)<->a642(r193)@13:shuffle
  cp250:a639(r221)<->a641(r195)@13:shuffle
  cp251:a638(r743)<->a640(r222)@26:shuffle
  cp252:a629(r340)<->a635(r1040)@110:move
  cp253:a585(r173)<->a644(r420)@44:move
  cp254:a585(r173)<->a648(r220)@65:move
  cp255:a653(r729)<->a654(r727)@3:shuffle
  cp256:a614(r397)<->a652(r1037)@27:move
  cp257:a10(r416)<->a651(r735)@3:shuffle
  cp258:a647(r404)<->a651(r735)@3:shuffle
  cp259:a10(r416)<->a656(r720)@20:shuffle
  cp260:a656(r720)<->a657(r716)@10:shuffle
  cp261:a614(r397)<->a656(r720)@10:shuffle
  cp262:a666(r201)<->a667(r1073)@110:move
  cp263:a663(r704)<->a666(r201)@26:shuffle
  cp264:a664(r200)<->a665(r1072)@110:move
  cp265:a632(r362)<->a660(r1034)@110:move
  cp266:a631(r345)<->a669(r341)@44:move
  cp267:a631(r345)<->a673(r199)@65:move
  cp268:a676(r692)<->a677(r688)@6:shuffle
  cp269:a634(r403)<->a676(r692)@6:shuffle
  cp270:a681(r674)<->a682(r672)@6:shuffle
  cp271:a634(r403)<->a680(r1031)@55:move
  cp272:a671(r360)<->a678(r682)@6:shuffle
  cp273:a650(r183)<->a685(r1029)@110:move
  cp274:a566(r346)<->a687(r1027)@32:move
  cp275:a598(r181)<->a686(r1028)@32:move
  cp276:a598(r181)<->a689(r1025)@64:move
  cp277:a566(r346)<->a691(r1023)@45:move
  cp278:a598(r181)<->a690(r1024)@45:move
  cp279:a693(r651)<->a695(r1020)@110:move
  cp280:a566(r346)<->a692(r1022)@110:move
  cp281:a727(r914)<->a728(r913)@111:shuffle
  cp282:a726(r475)<->a727(r914)@111:shuffle
  cp283:a723(r917)<->a725(r916)@111:shuffle
  cp284:a721(r922)<->a724(r921)@111:shuffle
  cp285:a722(r918)<->a723(r917)@111:shuffle
  cp286:a719(r919)<->a722(r918)@111:shuffle
  cp287:a720(r923)<->a721(r922)@111:shuffle
  cp288:a718(r924)<->a720(r923)@111:shuffle
  cp289:a717(r925)<->a718(r924)@111:shuffle
  cp290:a717(r925)<->a719(r919)@111:shuffle
  cp291:a703(r928)<->a717(r925)@222:shuffle
  cp292:a712(r935)<->a716(r934)@111:shuffle
  cp293:a713(r931)<->a715(r930)@111:shuffle
  cp294:a711(r939)<->a714(r938)@111:shuffle
  cp295:a709(r941)<->a710(r1065)@111:shuffle
  cp296:a701(r947)<->a706(r946)@111:shuffle
  cp297:a700(r951)<->a704(r950)@111:shuffle
  cp298:a699(r955)<->a702(r954)@111:shuffle
  cp299:a697(r957)<->a698(r1067)@111:shuffle
  cp300:a768(r859)<->a769(r858)@111:shuffle
  cp301:a767(r296)<->a768(r859)@111:shuffle
  cp302:a764(r862)<->a766(r861)@111:shuffle
  cp303:a762(r867)<->a765(r866)@111:shuffle
  cp304:a763(r863)<->a764(r862)@111:shuffle
  cp305:a760(r864)<->a763(r863)@111:shuffle
  cp306:a761(r868)<->a762(r867)@111:shuffle
  cp307:a759(r869)<->a761(r868)@111:shuffle
  cp308:a758(r870)<->a759(r869)@111:shuffle
  cp309:a758(r870)<->a760(r864)@111:shuffle
  cp310:a740(r873)<->a758(r870)@222:shuffle
  cp311:a735(r380)<->a757(r1060)@890:move
  cp312:a755(r881)<->a756(r880)@111:shuffle
  cp313:a749(r882)<->a755(r881)@111:shuffle
  cp314:a753(r876)<->a754(r875)@111:shuffle
  cp315:a750(r877)<->a753(r876)@111:shuffle
  cp316:a751(r886)<->a752(r885)@111:shuffle
  cp317:a748(r887)<->a751(r886)@111:shuffle
  cp318:a746(r889)<->a747(r1061)@111:shuffle
  cp319:a738(r895)<->a743(r894)@111:shuffle
  cp320:a737(r900)<->a741(r899)@111:shuffle
  cp321:a736(r905)<->a739(r904)@111:shuffle
  cp322:a734(r896)<->a738(r895)@111:shuffle
  cp323:a733(r901)<->a737(r900)@111:shuffle
  cp324:a732(r906)<->a736(r905)@111:shuffle
  cp325:a732(r906)<->a735(r380)@111:shuffle
  cp326:a730(r908)<->a731(r1063)@111:shuffle
  cp327:a173(r279)<->a778(r830)@111:shuffle
  cp328:a772(r833)<->a776(r1046)@890:move
  cp329:a771(r834)<->a773(r1047)@111:shuffle
  cp330:a784(r818)<->a787(r817)@37:shuffle
  cp331:a783(r823)<->a786(r822)@37:shuffle
  cp332:a782(r828)<->a785(r827)@37:shuffle
  cp333:a781(r819)<->a784(r818)@37:shuffle
  cp334:a780(r824)<->a783(r823)@37:shuffle
  cp335:a779(r829)<->a782(r828)@37:shuffle
  cp336:a774(r350)<->a781(r819)@37:shuffle
  cp337:a775(r352)<->a780(r824)@37:shuffle
  cp338:a777(r351)<->a779(r829)@37:shuffle
  cp339:a795(r804)<->a799(r803)@37:shuffle
  cp340:a794(r809)<->a797(r808)@37:shuffle
  cp341:a793(r814)<->a796(r813)@37:shuffle
  cp342:a792(r805)<->a795(r804)@37:shuffle
  cp343:a791(r810)<->a794(r809)@37:shuffle
  cp344:a790(r815)<->a793(r814)@37:shuffle
  cp345:a774(r350)<->a792(r805)@37:shuffle
  cp346:a775(r352)<->a791(r810)@37:shuffle
  cp347:a777(r351)<->a790(r815)@37:shuffle
  cp348:a800(r798)<->a801(r796)@111:shuffle
  cp349:a789(r801)<->a800(r798)@222:shuffle
  cp350:a807(r736)<->a808(r1076)@890:move
  cp351:a802(r395)<->a807(r736)@111:shuffle
  cp352:a805(r737)<->a806(r1077)@890:move
  cp353:a804(r396)<->a805(r737)@111:shuffle
  cp354:a814(r696)<->a815(r1074)@890:move
  cp355:a809(r400)<->a814(r696)@111:shuffle
  cp356:a812(r697)<->a813(r1075)@890:move
  cp357:a811(r401)<->a812(r697)@111:shuffle
  cp358:a847(r914)<->a848(r913)@111:shuffle
  cp359:a846(r475)<->a847(r914)@111:shuffle
  cp360:a843(r917)<->a845(r916)@111:shuffle
  cp361:a841(r922)<->a844(r921)@111:shuffle
  cp362:a842(r918)<->a843(r917)@111:shuffle
  cp363:a839(r919)<->a842(r918)@111:shuffle
  cp364:a840(r923)<->a841(r922)@111:shuffle
  cp365:a838(r924)<->a840(r923)@111:shuffle
  cp366:a837(r925)<->a838(r924)@111:shuffle
  cp367:a837(r925)<->a839(r919)@111:shuffle
  cp368:a823(r928)<->a837(r925)@222:shuffle
  cp369:a832(r935)<->a836(r934)@111:shuffle
  cp370:a833(r931)<->a835(r930)@111:shuffle
  cp371:a831(r939)<->a834(r938)@111:shuffle
  cp372:a829(r941)<->a830(r1065)@111:shuffle
  cp373:a821(r947)<->a826(r946)@111:shuffle
  cp374:a820(r951)<->a824(r950)@111:shuffle
  cp375:a819(r955)<->a822(r954)@111:shuffle
  cp376:a817(r957)<->a818(r1067)@111:shuffle
  cp377:a888(r859)<->a889(r858)@111:shuffle
  cp378:a887(r296)<->a888(r859)@111:shuffle
  cp379:a884(r862)<->a886(r861)@111:shuffle
  cp380:a882(r867)<->a885(r866)@111:shuffle
  cp381:a883(r863)<->a884(r862)@111:shuffle
  cp382:a880(r864)<->a883(r863)@111:shuffle
  cp383:a881(r868)<->a882(r867)@111:shuffle
  cp384:a879(r869)<->a881(r868)@111:shuffle
  cp385:a878(r870)<->a879(r869)@111:shuffle
  cp386:a878(r870)<->a880(r864)@111:shuffle
  cp387:a860(r873)<->a878(r870)@222:shuffle
  cp388:a855(r380)<->a877(r1060)@890:move
  cp389:a875(r881)<->a876(r880)@111:shuffle
  cp390:a869(r882)<->a875(r881)@111:shuffle
  cp391:a873(r876)<->a874(r875)@111:shuffle
  cp392:a870(r877)<->a873(r876)@111:shuffle
  cp393:a871(r886)<->a872(r885)@111:shuffle
  cp394:a868(r887)<->a871(r886)@111:shuffle
  cp395:a866(r889)<->a867(r1061)@111:shuffle
  cp396:a858(r895)<->a863(r894)@111:shuffle
  cp397:a857(r900)<->a861(r899)@111:shuffle
  cp398:a856(r905)<->a859(r904)@111:shuffle
  cp399:a854(r896)<->a858(r895)@111:shuffle
  cp400:a853(r901)<->a857(r900)@111:shuffle
  cp401:a852(r906)<->a856(r905)@111:shuffle
  cp402:a852(r906)<->a855(r380)@111:shuffle
  cp403:a850(r908)<->a851(r1063)@111:shuffle
  cp404:a581(r279)<->a898(r830)@111:shuffle
  cp405:a892(r833)<->a896(r1046)@890:move
  cp406:a891(r834)<->a893(r1047)@111:shuffle
  cp407:a904(r818)<->a907(r817)@37:shuffle
  cp408:a903(r823)<->a906(r822)@37:shuffle
  cp409:a902(r828)<->a905(r827)@37:shuffle
  cp410:a901(r819)<->a904(r818)@37:shuffle
  cp411:a900(r824)<->a903(r823)@37:shuffle
  cp412:a899(r829)<->a902(r828)@37:shuffle
  cp413:a894(r350)<->a901(r819)@37:shuffle
  cp414:a895(r352)<->a900(r824)@37:shuffle
  cp415:a897(r351)<->a899(r829)@37:shuffle
  cp416:a915(r804)<->a919(r803)@37:shuffle
  cp417:a914(r809)<->a917(r808)@37:shuffle
  cp418:a913(r814)<->a916(r813)@37:shuffle
  cp419:a912(r805)<->a915(r804)@37:shuffle
  cp420:a911(r810)<->a914(r809)@37:shuffle
  cp421:a910(r815)<->a913(r814)@37:shuffle
  cp422:a894(r350)<->a912(r805)@37:shuffle
  cp423:a895(r352)<->a911(r810)@37:shuffle
  cp424:a897(r351)<->a910(r815)@37:shuffle
  cp425:a920(r798)<->a921(r796)@111:shuffle
  cp426:a909(r801)<->a920(r798)@222:shuffle
  cp427:a927(r736)<->a928(r1076)@890:move
  cp428:a922(r395)<->a927(r736)@111:shuffle
  cp429:a925(r737)<->a926(r1077)@890:move
  cp430:a924(r396)<->a925(r737)@111:shuffle
  cp431:a934(r696)<->a935(r1074)@890:move
  cp432:a929(r400)<->a934(r696)@111:shuffle
  cp433:a932(r697)<->a933(r1075)@890:move
  cp434:a931(r401)<->a932(r697)@111:shuffle
  pref0:a31(r1019)<-hr0@26
  pref1:a35(r160)<-hr16@18
  pref2:a34(r1018)<-hr16@6
  pref3:a36(r1017)<-hr16@6
  pref4:a52(r1016)<-hr16@6
  pref5:a53(r1015)<-hr16@6
  pref6:a68(r411)<-hr16@18
  pref7:a67(r1013)<-hr16@12
  pref8:a66(r1014)<-hr16@12
  pref9:a69(r1012)<-hr0@26
  pref10:a73(r1011)<-hr16@6
  pref11:a88(r1010)<-hr16@6
  pref12:a100(r1009)<-hr0@26
  pref13:a103(r125)<-hr16@17
  pref14:a102(r1008)<-hr16@2
  pref15:a104(r1007)<-hr16@10
  pref16:a105(r1006)<-hr16@10
  pref17:a107(r1005)<-hr0@16
  pref18:a109(r1004)<-hr0@6
  pref19:a110(r1003)<-hr0@12
  pref20:a111(r1002)<-hr0@6
  pref21:a112(r1001)<-hr0@12
  pref22:a113(r1000)<-hr0@6
  pref23:a114(r999)<-hr0@12
  pref24:a115(r998)<-hr0@6
  pref25:a116(r997)<-hr0@12
  pref26:a117(r996)<-hr0@26
  pref27:a131(r989)<-hr2@207
  pref28:a3(r989)<-hr2@207
  pref29:a136(r1069)<-hr0@194
  pref30:a136(r1069)<-hr16@194
  pref31:a135(r1070)<-hr16@194
  pref32:a158(r346)<-hr16@440
  pref33:a160(r1053)<-hr16@220
  pref34:a161(r353)<-hr16@220
  pref35:a159(r1054)<-hr16@220
  pref36:a156(r1055)<-hr16@220
  pref37:a157(r369)<-hr0@220
  pref38:a133(r992)<-hr2@220
  pref39:a1(r992)<-hr2@220
  pref40:a155(r1056)<-hr0@220
  pref41:a154(r371)<-hr0@220
  pref42:a153(r1057)<-hr0@220
  pref43:a134(r993)<-hr2@220
  pref44:a0(r993)<-hr2@220
  pref45:a152(r1058)<-hr0@220
  pref46:a151(r1059)<-hr0@220
  pref47:a163(r283)<-hr0@64
  pref48:a132(r990)<-hr2@337
  pref49:a2(r990)<-hr2@337
  pref50:a162(r1052)<-hr0@64
  pref51:a165(r1050)<-hr0@64
  pref52:a164(r1051)<-hr0@128
  pref53:a166(r1049)<-hr0@90
  pref54:a183(r1045)<-hr0@220
  pref55:a190(r181)<-hr0@558
  pref56:a189(r1044)<-hr0@54
  pref57:a191(r1043)<-hr0@110
  pref58:a200(r1042)<-hr0@110
  pref59:a221(r340)<-hr16@110
  pref60:a222(r1041)<-hr16@220
  pref61:a229(r1038)<-hr0@220
  pref62:a229(r1038)<-hr16@220
  pref63:a228(r1039)<-hr16@220
  pref64:a228(r1039)<-hr0@220
  pref65:a227(r1040)<-hr0@220
  pref66:a244(r1037)<-hr0@54
  pref67:a250(r1036)<-hr0@110
  pref68:a254(r1032)<-hr0@220
  pref69:a254(r1032)<-hr16@220
  pref70:a253(r1033)<-hr16@220
  pref71:a253(r1033)<-hr0@220
  pref72:a252(r1034)<-hr0@220
  pref73:a251(r1035)<-hr0@220
  pref74:a272(r1031)<-hr0@110
  pref75:a277(r1029)<-hr16@220
  pref76:a275(r1030)<-hr0@220
  pref77:a279(r1027)<-hr0@32
  pref78:a278(r1028)<-hr0@64
  pref79:a281(r1025)<-hr0@64
  pref80:a280(r1026)<-hr0@128
  pref81:a283(r1023)<-hr0@45
  pref82:a282(r1024)<-hr0@90
  pref83:a287(r1020)<-hr0@220
  pref84:a286(r1021)<-hr0@220
  pref85:a286(r1021)<-hr2@220
  pref86:a285(r651)<-hr0@220
  pref87:a284(r1022)<-hr0@110
  pref88:a326(r1065)<-hr0@1780
  pref89:a297(r389)<-hr0@890
  pref90:a145(r389)<-hr0@1780
  pref91:a306(r979)<-hr2@1780
  pref92:a137(r979)<-hr2@1780
  pref93:a324(r1066)<-hr0@1780
  pref94:a325(r941)<-hr2@1780
  pref95:a324(r1066)<-hr1@1780
  pref96:a291(r368)<-hr0@1780
  pref97:a139(r368)<-hr0@4450
  pref98:a314(r1067)<-hr0@1780
  pref99:a312(r1068)<-hr0@1780
  pref100:a313(r957)<-hr2@1780
  pref101:a312(r1068)<-hr1@1780
  pref102:a397(r1060)<-hr16@1780
  pref103:a387(r1061)<-hr0@1780
  pref104:a354(r389)<-hr0@890
  pref105:a363(r981)<-hr2@1780
  pref106:a148(r981)<-hr2@1780
  pref107:a385(r1062)<-hr0@1780
  pref108:a386(r889)<-hr2@1780
  pref109:a385(r1062)<-hr1@1780
  pref110:a348(r368)<-hr0@1780
  pref111:a371(r1063)<-hr0@1780
  pref112:a369(r1064)<-hr0@1780
  pref113:a370(r908)<-hr2@1780
  pref114:a369(r1064)<-hr1@1780
  pref115:a432(r984)<-hr2@890
  pref116:a167(r984)<-hr2@890
  pref117:a444(r1046)<-hr0@1780
  pref118:a445(r351)<-hr2@1780
  pref119:a443(r352)<-hr1@1780
  pref120:a442(r350)<-hr0@1780
  pref121:a441(r1047)<-hr0@1780
  pref122:a440(r833)<-hr0@1780
  pref123:a438(r1048)<-hr0@1780
  pref124:a439(r834)<-hr2@1780
  pref125:a438(r1048)<-hr1@1780
  pref126:a419(r368)<-hr0@890
  pref127:a544(r1069)<-hr0@97
  pref128:a544(r1069)<-hr16@97
  pref129:a543(r1070)<-hr16@97
  pref130:a568(r1053)<-hr16@110
  pref131:a569(r353)<-hr16@110
  pref132:a567(r1054)<-hr16@110
  pref133:a566(r346)<-hr16@110
  pref134:a564(r1055)<-hr16@110
  pref135:a565(r369)<-hr0@110
  pref136:a563(r1056)<-hr0@110
  pref137:a562(r371)<-hr0@110
  pref138:a561(r1057)<-hr0@110
  pref139:a560(r1058)<-hr0@110
  pref140:a559(r1059)<-hr0@110
  pref141:a571(r283)<-hr0@32
  pref142:a570(r1052)<-hr0@32
  pref143:a572(r1051)<-hr0@64
  pref144:a574(r1049)<-hr0@45
  pref145:a591(r1045)<-hr0@110
  pref146:a598(r181)<-hr0@114
  pref147:a597(r1044)<-hr0@27
  pref148:a599(r1043)<-hr0@55
  pref149:a608(r1042)<-hr0@55
  pref150:a630(r1041)<-hr16@110
  pref151:a637(r1038)<-hr0@110
  pref152:a637(r1038)<-hr16@110
  pref153:a636(r1039)<-hr16@110
  pref154:a636(r1039)<-hr0@110
  pref155:a635(r1040)<-hr0@110
  pref156:a245(r729)<-hr0@3
  pref157:a653(r729)<-hr0@3
  pref158:a652(r1037)<-hr0@27
  pref159:a658(r1036)<-hr0@55
  pref160:a662(r1032)<-hr0@110
  pref161:a662(r1032)<-hr16@110
  pref162:a661(r1033)<-hr16@110
  pref163:a661(r1033)<-hr0@110
  pref164:a660(r1034)<-hr0@110
  pref165:a659(r1035)<-hr0@110
  pref166:a273(r674)<-hr0@6
  pref167:a681(r674)<-hr0@6
  pref168:a680(r1031)<-hr0@55
  pref169:a685(r1029)<-hr16@110
  pref170:a683(r1030)<-hr0@110
  pref171:a686(r1028)<-hr0@32
  pref172:a688(r1026)<-hr0@64
  pref173:a690(r1024)<-hr0@45
  pref174:a695(r1020)<-hr0@110
  pref175:a694(r1021)<-hr0@110
  pref176:a694(r1021)<-hr2@110
  pref177:a693(r651)<-hr0@110
  pref178:a710(r1065)<-hr0@890
  pref179:a830(r1065)<-hr0@890
  pref180:a708(r1066)<-hr0@890
  pref181:a828(r1066)<-hr0@890
  pref182:a709(r941)<-hr2@890
  pref183:a829(r941)<-hr2@890
  pref184:a708(r1066)<-hr1@890
  pref185:a828(r1066)<-hr1@890
  pref186:a698(r1067)<-hr0@890
  pref187:a818(r1067)<-hr0@890
  pref188:a696(r1068)<-hr0@890
  pref189:a816(r1068)<-hr0@890
  pref190:a697(r957)<-hr2@890
  pref191:a817(r957)<-hr2@890
  pref192:a696(r1068)<-hr1@890
  pref193:a816(r1068)<-hr1@890
  pref194:a757(r1060)<-hr16@890
  pref195:a877(r1060)<-hr16@890
  pref196:a747(r1061)<-hr0@890
  pref197:a867(r1061)<-hr0@890
  pref198:a745(r1062)<-hr0@890
  pref199:a865(r1062)<-hr0@890
  pref200:a746(r889)<-hr2@890
  pref201:a866(r889)<-hr2@890
  pref202:a745(r1062)<-hr1@890
  pref203:a865(r1062)<-hr1@890
  pref204:a731(r1063)<-hr0@890
  pref205:a851(r1063)<-hr0@890
  pref206:a729(r1064)<-hr0@890
  pref207:a849(r1064)<-hr0@890
  pref208:a730(r908)<-hr2@890
  pref209:a850(r908)<-hr2@890
  pref210:a729(r1064)<-hr1@890
  pref211:a849(r1064)<-hr1@890
  pref212:a776(r1046)<-hr0@890
  pref213:a896(r1046)<-hr0@890
  pref214:a777(r351)<-hr2@890
  pref215:a897(r351)<-hr2@890
  pref216:a775(r352)<-hr1@890
  pref217:a895(r352)<-hr1@890
  pref218:a774(r350)<-hr0@890
  pref219:a894(r350)<-hr0@890
  pref220:a773(r1047)<-hr0@890
  pref221:a893(r1047)<-hr0@890
  pref222:a772(r833)<-hr0@890
  pref223:a892(r833)<-hr0@890
  pref224:a770(r1048)<-hr0@890
  pref225:a890(r1048)<-hr0@890
  pref226:a771(r834)<-hr2@890
  pref227:a891(r834)<-hr2@890
  pref228:a770(r1048)<-hr1@890
  pref229:a890(r1048)<-hr1@890
  regions=7, blocks=104, points=641
    allocnos=936 (big 71), copies=435, conflicts=570, ranges=719

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 103 94 40(->41:l1) 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r993 1r992 2r990 3r989 4r463 5r987 6r339 7r418 8r355 9r356 10r416 11r967 12r970 13r971 14r972 15r171 16r640 17r630 18r642 19r636 20r357 21r637 22r169 23r639 24r634 25r358 26r410 27r632 28r409 29r413 30r412 31r1019 32r628 33r627 34r1018 35r160 36r1017 37r624 38r615 39r622 40r973 41r610 42r621 43r619 44r616 45r612 46r614 47r611 48r609 49r343 50r606 51r605 52r1016 53r1015 54r600 55r591 56r598 57r585 58r597 59r589 60r586 61r595 62r592 63r590 64r587 65r342 66r1014 67r1013 68r411 69r1012 70r154 71r576 72r575 73r1011 74r571 75r562 76r569 77r557 78r568 79r566 80r563 81r559 82r561 83r558 84r556 85r146 86r553 87r552 88r1010 89r548 90r539 91r546 92r533 93r545 94r537 95r534 96r543 97r540 98r538 99r535 100r1009 101r408 102r1008 103r125 104r1007 105r1006 106r519 107r1005 108r521 109r1004 110r1003 111r1002 112r1001 113r1000 114r999 115r998 116r997 117r996 118r483 119r481 543r1070 544r1069 545r979 546r915 547r368 548r370 549r372 550r373 551r374 552r375 553r389 554r968 555r969 556r981 557r860 558r857 559r1059 560r1058 561r1057 562r371 563r1056 564r1055 565r369 566r346 567r1054 568r1053 569r353 570r1052 571r283 572r1051 573r1050 574r1049 575r984 576r394 577r983 578r982 579r429 580r349 581r279 582r216 583r364 584r347 585r173 586r348 587r365 588r393 589r423 590r794 591r1045 592r786 593r787 594r784 595r785 596r783 597r1044 598r181 599r1043 600r776 601r778 602r777 603r774 604r773 605r366 606r398 607r772 608r1042 609r767 610r769 611r768 612r765 613r764 614r397 615r763 616r227 617r748 618r752 619r760 620r759 621r757 622r756 623r755 624r754 625r751 626r750 627r749 628r747 629r340 630r1041 631r345 632r362 633r402 634r403 635r1040 636r1039 637r1038 638r743 639r221 640r222 641r195 642r193 643r986 644r420 645r354 646r363 647r404 648r220 649r734 650r183 651r735 652r1037 653r729 654r727 655r721 656r720 657r716 658r1036 659r1035 660r1034 661r1033 662r1032 663r704 664r200 665r1072 666r201 667r1073 668r988 669r341 670r703 671r360 672r361 673r199 674r359 675r695 676r692 677r688 678r682 679r681 680r1031 681r674 682r672 683r1030 684r664 685r1029 686r1028 687r1027 688r1026 689r1025 690r1024 691r1023 692r1022 693r651 694r1021 695r1020 816r1068 817r957 818r1067 819r955 820r951 821r947 822r954 823r928 824r950 825r457 826r946 827r452 828r1066 829r941 830r1065 831r939 832r935 833r931 834r938 835r930 836r934 837r925 838r924 839r919 840r923 841r922 842r918 843r917 844r921 845r916 846r475 847r914 848r913 849r1064 850r908 851r1063 852r906 853r901 854r896 855r380 856r905 857r900 858r895 859r904 860r873 861r899 862r309 863r894 864r314 865r1062 866r889 867r1061 868r887 869r882 870r877 871r886 872r885 873r876 874r875 875r881 876r880 877r1060 878r870 879r869 880r864 881r868 882r867 883r863 884r862 885r866 886r861 887r296 888r859 889r858 890r1048 891r834 892r833 893r1047 894r350 895r352 896r1046 897r351 898r830 899r829 900r824 901r819 902r828 903r823 904r818 905r827 906r822 907r817 908r821 909r801 910r815 911r810 912r805 913r814 914r809 915r804 916r813 917r808 918r807 919r803 920r798 921r796 922r395 923r741 924r396 925r737 926r1077 927r736 928r1076 929r400 930r701 931r401 932r697 933r1075 934r696 935r1074
    modified regnos
    border:
    Pressure: GENERAL_REGS=34 VFP_LO_REGS=15
 Removing pref44:hr2@220
 Removing pref39:hr2@220
 Removing pref49:hr2@337
 Removing pref28:hr2@207
 Removing pref1:hr16@18
 Removing pref7:hr16@12
 Removing pref6:hr16@18
 Removing pref13:hr16@17
 Removing pref137:hr0@110
 Removing pref133:hr16@110
 Removing pref130:hr16@110
 Removing pref131:hr16@110
 Removing pref141:hr0@32
 Removing pref146:hr0@114
 Removing pref177:hr0@110
 Removing pref191:hr2@890
 Removing pref183:hr2@890
 Removing pref209:hr2@890
 Removing pref201:hr2@890
 Removing pref223:hr0@890
 Removing pref219:hr0@890
 Removing pref217:hr1@890
 Removing pref215:hr2@890
    Hard reg set forest:
      0:( 0-12 14 16-47)@193142
        1:( 0-12 14)@1221430
          2:( 0-1 3-12 14)@587400
            3:( 0-1 3-12)@186092
              4:( 3-11)@143720
                5:( 4-11)@1787042
                  6:( 4-10)@202484
        7:( 16-47)@2031112
          8:( 17-47)@309908
            9:( 18-47)@350376
              10:( 32-47)@367476
      Allocno a0r993 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a1r992 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a2r990 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a3r989 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a4r463 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a5r987 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a6r339 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a7r418 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a8r355 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a9r356 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a10r416 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a11r967 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a12r970 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a13r971 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a14r972 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a15r171 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a16r640 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a17r630 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a18r642 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a19r636 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a20r357 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a21r637 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a22r169 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a23r639 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a24r634 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a25r358 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a26r410 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a27r632 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a28r409 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a29r413 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a30r412 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a31r1019 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a32r628 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a33r627 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a34r1018 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a35r160 of ALL_REGS(46) has 31 avail. regs  17-47, node:  17-47 (confl regs =  12-16 48-106)
      Allocno a36r1017 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a37r624 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a38r615 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a39r622 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a40r973 of GENERAL_REGS(14) has 12 avail. regs  0-11, ^node:  0-12 14 (confl regs =  12-106)
      Allocno a41r610 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a42r621 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a43r619 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a44r616 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a45r612 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a46r614 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a47r611 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a48r609 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a49r343 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0 12-106)
      Allocno a50r606 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a51r605 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a52r1016 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a53r1015 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a54r600 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a55r591 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a56r598 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a57r585 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a58r597 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a59r589 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a60r586 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a61r595 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a62r592 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a63r590 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a64r587 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a65r342 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0 12-106)
      Allocno a66r1014 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a67r1013 of ALL_REGS(46) has 31 avail. regs  17-47, node:  17-47 (confl regs =  13 15-16 48-106)
      Allocno a68r411 of ALL_REGS(46) has 31 avail. regs  17-47, node:  17-47 (confl regs =  12-16 48-106)
      Allocno a69r1012 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a70r154 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a71r576 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a72r575 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a73r1011 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a74r571 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a75r562 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a76r569 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a77r557 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a78r568 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a79r566 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a80r563 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a81r559 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a82r561 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a83r558 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a84r556 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a85r146 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a86r553 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a87r552 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a88r1010 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a89r548 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a90r539 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a91r546 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a92r533 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a93r545 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a94r537 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a95r534 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a96r543 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a97r540 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a98r538 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a99r535 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a100r1009 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a101r408 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a102r1008 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a103r125 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a104r1007 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a105r1006 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a106r519 of ALL_REGS(46) has 40 avail. regs  4-11 16-47, ^node:  0-12 14 16-47 (confl regs =  0-3 12-15 48-106)
      Allocno a107r1005 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a108r521 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a109r1004 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a110r1003 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a111r1002 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a112r1001 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a113r1000 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a114r999 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a115r998 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a116r997 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a117r996 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a118r483 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a119r481 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a543r1070 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a544r1069 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a545r979 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a546r915 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a547r368 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-16 48-106)
      Allocno a548r370 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a549r372 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a550r373 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a551r374 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a552r375 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a553r389 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a554r968 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a555r969 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a556r981 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-16 48-106),  obj 1 (confl regs =  0-3 12-16 48-106)
      Allocno a557r860 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a558r857 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a559r1059 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a560r1058 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a561r1057 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a562r371 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a563r1056 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a564r1055 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a565r369 of GENERAL_REGS(14) has 12 avail. regs  0-11, ^node:  0-12 14 (confl regs =  12-106)
      Allocno a566r346 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a567r1054 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a568r1053 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a569r353 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a570r1052 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a571r283 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-106),  obj 1 (confl regs =  0-3 12-106)
      Allocno a572r1051 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a573r1050 of ALL_REGS(46) has 11 avail. regs  2-12, ^node:  0-12 14 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a574r1049 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a575r984 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a576r394 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a577r983 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a578r982 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a579r429 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a580r349 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a581r279 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a582r216 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a583r364 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a584r347 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a585r173 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a586r348 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a587r365 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a588r393 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a589r423 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a590r794 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a591r1045 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a592r786 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a593r787 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a594r784 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a595r785 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a596r783 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a597r1044 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a598r181 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a599r1043 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a600r776 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a601r778 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a602r777 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a603r774 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a604r773 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a605r366 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a606r398 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a607r772 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a608r1042 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a609r767 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a610r769 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a611r768 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a612r765 of ALL_REGS(46) has 44 avail. regs  2-12 14 16-47, ^node:  0-12 14 16-47 (confl regs =  0-1 13 15 48-106)
      Allocno a613r764 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a614r397 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a615r763 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a616r227 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a617r748 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a618r752 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a619r760 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a620r759 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a621r757 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a622r756 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a623r755 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a624r754 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a625r751 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a626r750 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a627r749 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a628r747 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a629r340 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a630r1041 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a631r345 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a632r362 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a633r402 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a634r403 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a635r1040 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a636r1039 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a637r1038 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a638r743 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a639r221 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a640r222 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a641r195 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a642r193 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a643r986 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a644r420 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a645r354 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a646r363 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a647r404 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a648r220 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a649r734 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a650r183 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a651r735 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a652r1037 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a653r729 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a654r727 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a655r721 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a656r720 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a657r716 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a658r1036 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a659r1035 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a660r1034 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a661r1033 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a662r1032 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a663r704 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a664r200 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a665r1072 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a666r201 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a667r1073 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a668r988 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a669r341 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a670r703 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a671r360 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a672r361 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a673r199 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a674r359 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a675r695 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a676r692 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a677r688 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a678r682 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a679r681 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a680r1031 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a681r674 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a682r672 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a683r1030 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a684r664 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a685r1029 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a686r1028 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a687r1027 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a688r1026 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a689r1025 of ALL_REGS(46) has 11 avail. regs  2-12, ^node:  0-12 14 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a690r1024 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a691r1023 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a692r1022 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a693r651 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a694r1021 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a695r1020 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a816r1068 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a817r957 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a818r1067 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a819r955 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a820r951 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a821r947 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a822r954 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a823r928 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a824r950 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a825r457 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a826r946 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a827r452 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a828r1066 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a829r941 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a830r1065 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a831r939 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a832r935 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a833r931 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a834r938 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a835r930 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a836r934 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a837r925 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a838r924 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a839r919 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a840r923 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a841r922 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a842r918 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a843r917 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a844r921 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a845r916 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a846r475 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a847r914 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a848r913 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a849r1064 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a850r908 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a851r1063 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a852r906 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a853r901 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a854r896 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a855r380 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a856r905 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a857r900 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a858r895 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a859r904 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a860r873 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a861r899 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a862r309 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a863r894 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a864r314 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a865r1062 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a866r889 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a867r1061 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a868r887 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a869r882 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a870r877 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a871r886 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a872r885 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a873r876 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a874r875 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a875r881 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a876r880 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a877r1060 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a878r870 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a879r869 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a880r864 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a881r868 of ALL_REGS(46) has 45 avail. regs  0-12 14 17-47, ^node:  0-12 14 16-47 (confl regs =  13 15-16 48-106)
      Allocno a882r867 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a883r863 of ALL_REGS(46) has 45 avail. regs  0-12 14 17-47, ^node:  0-12 14 16-47 (confl regs =  13 15-16 48-106)
      Allocno a884r862 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a885r866 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a886r861 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a887r296 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a888r859 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a889r858 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a890r1048 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a891r834 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a892r833 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a893r1047 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a894r350 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a895r352 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a896r1046 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a897r351 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a898r830 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a899r829 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a900r824 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a901r819 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a902r828 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a903r823 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a904r818 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a905r827 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a906r822 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a907r817 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a908r821 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a909r801 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a910r815 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a911r810 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a912r805 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a913r814 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a914r809 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a915r804 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a916r813 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a917r808 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a918r807 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a919r803 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a920r798 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a921r796 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a922r395 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a923r741 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a924r396 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a925r737 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a926r1077 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a927r736 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a928r1076 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a929r400 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a930r701 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a931r401 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a932r697 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a933r1075 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a934r696 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a935r1074 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Forming thread by copy 388:a855r380-a877r1060 (freq=890):
        Result (freq=8010): a855r380(6230) a877r1060(1780)
      Forming thread by copy 427:a927r736-a928r1076 (freq=890):
        Result (freq=3560): a927r736(1780) a928r1076(1780)
      Forming thread by copy 429:a925r737-a926r1077 (freq=890):
        Result (freq=3560): a925r737(1780) a926r1077(1780)
      Forming thread by copy 431:a934r696-a935r1074 (freq=890):
        Result (freq=3560): a934r696(1780) a935r1074(1780)
      Forming thread by copy 433:a932r697-a933r1075 (freq=890):
        Result (freq=3560): a932r697(1780) a933r1075(1780)
      Forming thread by copy 426:a909r801-a920r798 (freq=222):
        Result (freq=5338): a909r801(2668) a920r798(2670)
      Forming thread by copy 358:a847r914-a848r913 (freq=111):
        Result (freq=3560): a847r914(1780) a848r913(1780)
      Forming thread by copy 359:a846r475-a847r914 (freq=111):
        Result (freq=6230): a846r475(2670) a847r914(1780) a848r913(1780)
      Forming thread by copy 360:a843r917-a845r916 (freq=111):
        Result (freq=3560): a843r917(1780) a845r916(1780)
      Forming thread by copy 361:a841r922-a844r921 (freq=111):
        Result (freq=3560): a841r922(1780) a844r921(1780)
      Forming thread by copy 362:a842r918-a843r917 (freq=111):
        Result (freq=5340): a842r918(1780) a843r917(1780) a845r916(1780)
      Forming thread by copy 363:a839r919-a842r918 (freq=111):
        Result (freq=7120): a839r919(1780) a842r918(1780) a843r917(1780) a845r916(1780)
      Forming thread by copy 364:a840r923-a841r922 (freq=111):
        Result (freq=5340): a840r923(1780) a841r922(1780) a844r921(1780)
      Forming thread by copy 365:a838r924-a840r923 (freq=111):
        Result (freq=7120): a838r924(1780) a840r923(1780) a841r922(1780) a844r921(1780)
      Forming thread by copy 366:a837r925-a838r924 (freq=111):
        Result (freq=9790): a837r925(2670) a838r924(1780) a840r923(1780) a841r922(1780) a844r921(1780)
      Forming thread by copy 369:a832r935-a836r934 (freq=111):
        Result (freq=3560): a832r935(1780) a836r934(1780)
      Forming thread by copy 370:a833r931-a835r930 (freq=111):
        Result (freq=3560): a833r931(1780) a835r930(1780)
      Forming thread by copy 371:a831r939-a834r938 (freq=111):
        Result (freq=3560): a831r939(1780) a834r938(1780)
      Forming thread by copy 373:a821r947-a826r946 (freq=111):
        Result (freq=3560): a821r947(1780) a826r946(1780)
      Forming thread by copy 374:a820r951-a824r950 (freq=111):
        Result (freq=3560): a820r951(1780) a824r950(1780)
      Forming thread by copy 375:a819r955-a822r954 (freq=111):
        Result (freq=3560): a819r955(1780) a822r954(1780)
      Forming thread by copy 377:a888r859-a889r858 (freq=111):
        Result (freq=3560): a888r859(1780) a889r858(1780)
      Forming thread by copy 378:a887r296-a888r859 (freq=111):
        Result (freq=6230): a887r296(2670) a888r859(1780) a889r858(1780)
      Forming thread by copy 379:a884r862-a886r861 (freq=111):
        Result (freq=3560): a884r862(1780) a886r861(1780)
      Forming thread by copy 380:a882r867-a885r866 (freq=111):
        Result (freq=3560): a882r867(1780) a885r866(1780)
      Forming thread by copy 381:a883r863-a884r862 (freq=111):
        Result (freq=5340): a883r863(1780) a884r862(1780) a886r861(1780)
      Forming thread by copy 382:a880r864-a883r863 (freq=111):
        Result (freq=7120): a880r864(1780) a883r863(1780) a884r862(1780) a886r861(1780)
      Forming thread by copy 383:a881r868-a882r867 (freq=111):
        Result (freq=5340): a881r868(1780) a882r867(1780) a885r866(1780)
      Forming thread by copy 384:a879r869-a881r868 (freq=111):
        Result (freq=7120): a879r869(1780) a881r868(1780) a882r867(1780) a885r866(1780)
      Forming thread by copy 385:a878r870-a879r869 (freq=111):
        Result (freq=9790): a878r870(2670) a879r869(1780) a881r868(1780) a882r867(1780) a885r866(1780)
      Forming thread by copy 389:a875r881-a876r880 (freq=111):
        Result (freq=3560): a875r881(1780) a876r880(1780)
      Forming thread by copy 390:a869r882-a875r881 (freq=111):
        Result (freq=5340): a869r882(1780) a875r881(1780) a876r880(1780)
      Forming thread by copy 391:a873r876-a874r875 (freq=111):
        Result (freq=3560): a873r876(1780) a874r875(1780)
      Forming thread by copy 392:a870r877-a873r876 (freq=111):
        Result (freq=5340): a870r877(1780) a873r876(1780) a874r875(1780)
      Forming thread by copy 393:a871r886-a872r885 (freq=111):
        Result (freq=3560): a871r886(1780) a872r885(1780)
      Forming thread by copy 394:a868r887-a871r886 (freq=111):
        Result (freq=5340): a868r887(1780) a871r886(1780) a872r885(1780)
      Forming thread by copy 396:a858r895-a863r894 (freq=111):
        Result (freq=3560): a858r895(1780) a863r894(1780)
      Forming thread by copy 397:a857r900-a861r899 (freq=111):
        Result (freq=3560): a857r900(1780) a861r899(1780)
      Forming thread by copy 398:a856r905-a859r904 (freq=111):
        Result (freq=3560): a856r905(1780) a859r904(1780)
      Forming thread by copy 399:a854r896-a858r895 (freq=111):
        Result (freq=5340): a854r896(1780) a858r895(1780) a863r894(1780)
      Forming thread by copy 400:a853r901-a857r900 (freq=111):
        Result (freq=5340): a853r901(1780) a857r900(1780) a861r899(1780)
      Forming thread by copy 401:a852r906-a856r905 (freq=111):
        Result (freq=5340): a852r906(1780) a856r905(1780) a859r904(1780)
      Forming thread by copy 404:a581r279-a898r830 (freq=111):
        Result (freq=4547): a581r279(2767) a898r830(1780)
      Forming thread by copy 406:a891r834-a893r1047 (freq=111):
        Result (freq=3560): a891r834(1780) a893r1047(1780)
      Forming thread by copy 425:a920r798-a921r796 (freq=111):
        Result (freq=7118): a909r801(2668) a921r796(1780) a920r798(2670)
      Forming thread by copy 428:a922r395-a927r736 (freq=111):
        Result (freq=5471): a922r395(1911) a927r736(1780) a928r1076(1780)
      Forming thread by copy 430:a924r396-a925r737 (freq=111):
        Result (freq=4974): a924r396(1414) a925r737(1780) a926r1077(1780)
      Forming thread by copy 432:a929r400-a934r696 (freq=111):
        Result (freq=5471): a929r400(1911) a934r696(1780) a935r1074(1780)
      Forming thread by copy 434:a931r401-a932r697 (freq=111):
        Result (freq=4974): a931r401(1414) a932r697(1780) a933r1075(1780)
      Forming thread by copy 211:a565r369-a568r1053 (freq=110):
        Result (freq=440): a565r369(220) a568r1053(220)
      Forming thread by copy 237:a605r366-a616r227 (freq=110):
        Result (freq=550): a605r366(220) a616r227(330)
      Forming thread by copy 252:a629r340-a635r1040 (freq=110):
        Result (freq=715): a629r340(495) a635r1040(220)
      Forming thread by copy 262:a666r201-a667r1073 (freq=110):
        Result (freq=550): a666r201(330) a667r1073(220)
      Forming thread by copy 264:a664r200-a665r1072 (freq=110):
        Result (freq=550): a664r200(330) a665r1072(220)
      Forming thread by copy 220:a569r353-a574r1049 (freq=45):
        Result (freq=606): a569r353(516) a574r1049(90)
      Forming thread by copy 407:a904r818-a907r817 (freq=37):
        Result (freq=1184): a904r818(592) a907r817(592)
      Forming thread by copy 408:a903r823-a906r822 (freq=37):
        Result (freq=1184): a903r823(592) a906r822(592)
      Forming thread by copy 409:a902r828-a905r827 (freq=37):
        Result (freq=1184): a902r828(592) a905r827(592)
      Forming thread by copy 410:a901r819-a904r818 (freq=37):
        Result (freq=1776): a901r819(592) a904r818(592) a907r817(592)
      Forming thread by copy 411:a900r824-a903r823 (freq=37):
        Result (freq=1776): a900r824(592) a903r823(592) a906r822(592)
      Forming thread by copy 412:a899r829-a902r828 (freq=37):
        Result (freq=1776): a899r829(592) a902r828(592) a905r827(592)
      Forming thread by copy 416:a915r804-a919r803 (freq=37):
        Result (freq=1184): a915r804(592) a919r803(592)
      Forming thread by copy 417:a914r809-a917r808 (freq=37):
        Result (freq=1184): a914r809(592) a917r808(592)
      Forming thread by copy 418:a913r814-a916r813 (freq=37):
        Result (freq=1184): a913r814(592) a916r813(592)
      Forming thread by copy 419:a912r805-a915r804 (freq=37):
        Result (freq=1776): a912r805(592) a915r804(592) a919r803(592)
      Forming thread by copy 420:a911r810-a914r809 (freq=37):
        Result (freq=1776): a911r810(592) a914r809(592) a917r808(592)
      Forming thread by copy 421:a910r815-a913r814 (freq=37):
        Result (freq=1776): a910r815(592) a913r814(592) a916r813(592)
      Forming thread by copy 218:a569r353-a570r1052 (freq=32):
        Result (freq=670): a569r353(516) a570r1052(64) a574r1049(90)
      Forming thread by copy 251:a638r743-a640r222 (freq=26):
        Result (freq=550): a638r743(220) a640r222(330)
      Forming thread by copy 263:a663r704-a666r201 (freq=26):
        Result (freq=770): a663r704(220) a666r201(330) a667r1073(220)
      Forming thread by copy 224:a569r353-a590r794 (freq=13):
        Result (freq=890): a569r353(516) a590r794(220) a570r1052(64) a574r1049(90)
      Forming thread by copy 225:a594r784-a595r785 (freq=13):
        Result (freq=440): a594r784(220) a595r785(220)
      Forming thread by copy 226:a592r786-a594r784 (freq=13):
        Result (freq=660): a592r786(220) a594r784(220) a595r785(220)
      Forming thread by copy 246:a626r750-a629r340 (freq=13):
        Result (freq=935): a626r750(220) a629r340(495) a635r1040(220)
      Forming thread by copy 248:a627r749-a628r747 (freq=13):
        Result (freq=440): a627r749(220) a628r747(220)
      Forming thread by copy 249:a640r222-a642r193 (freq=13):
        Result (freq=1099): a638r743(220) a642r193(549) a640r222(330)
      Forming thread by copy 250:a639r221-a641r195 (freq=13):
        Result (freq=879): a639r221(330) a641r195(549)
      Forming thread by copy 221:a582r216-a584r347 (freq=12):
        Result (freq=2190): a582r216(1873) a584r347(317)
      Forming thread by copy 260:a656r720-a657r716 (freq=10):
        Result (freq=328): a656r720(164) a657r716(164)
      Forming thread by copy 0:a25r358-a29r413 (freq=6):
        Result (freq=33): a25r358(12) a29r413(21)
      Forming thread by copy 1:a20r357-a26r410 (freq=6):
        Result (freq=33): a20r357(12) a26r410(21)
      Forming thread by copy 35:a28r409-a67r1013 (freq=6):
        Result (freq=33): a28r409(21) a67r1013(12)
      Forming thread by copy 36:a30r412-a66r1014 (freq=6):
        Result (freq=33): a30r412(21) a66r1014(12)
      Forming thread by copy 229:a603r774-a604r773 (freq=6):
        Result (freq=330): a603r774(220) a604r773(110)
      Forming thread by copy 230:a600r776-a603r774 (freq=6):
        Result (freq=550): a600r776(220) a603r774(220) a604r773(110)
      Forming thread by copy 231:a601r778-a602r777 (freq=6):
        Result (freq=220): a601r778(110) a602r777(110)
      Forming thread by copy 233:a612r765-a613r764 (freq=6):
        Result (freq=330): a612r765(220) a613r764(110)
      Forming thread by copy 234:a609r767-a612r765 (freq=6):
        Result (freq=550): a609r767(220) a612r765(220) a613r764(110)
      Forming thread by copy 235:a610r769-a611r768 (freq=6):
        Result (freq=220): a610r769(110) a611r768(110)
      Forming thread by copy 239:a620r759-a621r757 (freq=6):
        Result (freq=220): a620r759(110) a621r757(110)
      Forming thread by copy 268:a676r692-a677r688 (freq=6):
        Result (freq=220): a676r692(110) a677r688(110)
      Forming thread by copy 270:a681r674-a682r672 (freq=6):
        Result (freq=220): a681r674(110) a682r672(110)
      Forming thread by copy 272:a671r360-a678r682 (freq=6):
        Result (freq=1209): a671r360(1099) a678r682(110)
      Forming thread by copy 57:a101r408-a104r1007 (freq=5):
        Result (freq=21): a101r408(11) a104r1007(10)
      Forming thread by copy 10:a30r412-a34r1018 (freq=3):
        Result (freq=39): a30r412(21) a34r1018(6) a66r1014(12)
      Forming thread by copy 11:a29r413-a32r628 (freq=3):
        Result (freq=39): a25r358(12) a32r628(6) a29r413(21)
      Forming thread by copy 12:a30r412-a36r1017 (freq=3):
        Result (freq=45): a30r412(21) a36r1017(6) a34r1018(6) a66r1014(12)
      Forming thread by copy 23:a28r409-a52r1016 (freq=3):
        Result (freq=39): a28r409(21) a52r1016(6) a67r1013(12)
      Forming thread by copy 24:a26r410-a50r606 (freq=3):
        Result (freq=39): a20r357(12) a50r606(6) a26r410(21)
      Forming thread by copy 25:a28r409-a53r1015 (freq=3):
        Result (freq=45): a28r409(21) a53r1015(6) a52r1016(6) a67r1013(12)
      Forming thread by copy 37:a70r154-a71r576 (freq=3):
        Result (freq=12): a70r154(6) a71r576(6)
      Forming thread by copy 47:a85r146-a86r553 (freq=3):
        Result (freq=12): a85r146(6) a86r553(6)
      Forming thread by copy 58:a103r125-a109r1004 (freq=3):
        Result (freq=56): a103r125(50) a109r1004(6)
      Forming thread by copy 59:a103r125-a113r1000 (freq=3):
        Result (freq=62): a103r125(50) a113r1000(6) a109r1004(6)
      Forming thread by copy 255:a653r729-a654r727 (freq=3):
        Result (freq=108): a653r729(54) a654r727(54)
      Forming thread by copy 2:a24r634-a25r358 (freq=1):
        Result (freq=51): a24r634(12) a25r358(12) a32r628(6) a29r413(21)
      Forming thread by copy 3:a22r169-a24r634 (freq=1):
        Result (freq=63): a22r169(12) a24r634(12) a25r358(12) a32r628(6) a29r413(21)
      Forming thread by copy 4:a16r640-a21r637 (freq=1):
        Result (freq=26): a16r640(14) a21r637(12)
      Forming thread by copy 7:a19r636-a20r357 (freq=1):
        Result (freq=51): a19r636(12) a20r357(12) a50r606(6) a26r410(21)
      Forming thread by copy 8:a15r171-a19r636 (freq=1):
        Result (freq=65): a15r171(14) a19r636(12) a20r357(12) a50r606(6) a26r410(21)
      Forming thread by copy 13:a48r609-a49r343 (freq=1):
        Result (freq=44): a48r609(18) a49r343(26)
      Forming thread by copy 14:a47r611-a48r609 (freq=1):
        Result (freq=56): a47r611(12) a48r609(18) a49r343(26)
      Forming thread by copy 15:a41r610-a46r614 (freq=1):
        Result (freq=24): a41r610(12) a46r614(12)
      Forming thread by copy 17:a44r616-a45r612 (freq=1):
        Result (freq=30): a44r616(12) a45r612(18)
      Forming thread by copy 18:a38r615-a43r619 (freq=1):
        Result (freq=24): a38r615(12) a43r619(12)
      Forming thread by copy 20:a39r622-a40r973 (freq=1):
        Result (freq=48): a39r622(12) a40r973(36)
      Forming thread by copy 26:a63r590-a65r342 (freq=1):
        Result (freq=49): a63r590(18) a65r342(31)
      Forming thread by copy 27:a62r592-a64r587 (freq=1):
        Result (freq=30): a62r592(12) a64r587(18)
      Forming thread by copy 28:a61r595-a63r590 (freq=1):
        Result (freq=61): a61r595(12) a63r590(18) a65r342(31)
      Forming thread by copy 29:a55r591-a61r595 (freq=1):
        Result (freq=73): a55r591(12) a61r595(12) a63r590(18) a65r342(31)
      Forming thread by copy 31:a57r585-a59r589 (freq=1):
        Result (freq=24): a57r585(12) a59r589(12)
      Forming thread by copy 33:a56r598-a57r585 (freq=1):
        Result (freq=36): a56r598(12) a57r585(12) a59r589(12)
      Forming thread by copy 38:a82r561-a84r556 (freq=1):
        Result (freq=30): a82r561(12) a84r556(18)
      Forming thread by copy 39:a77r557-a82r561 (freq=1):
        Result (freq=42): a77r557(12) a82r561(12) a84r556(18)
      Forming thread by copy 41:a80r563-a81r559 (freq=1):
        Result (freq=30): a80r563(12) a81r559(18)
      Forming thread by copy 42:a75r562-a79r566 (freq=1):
        Result (freq=24): a75r562(12) a79r566(12)
      Forming thread by copy 45:a76r569-a77r557 (freq=1):
        Result (freq=54): a76r569(12) a77r557(12) a82r561(12) a84r556(18)
      Forming thread by copy 48:a97r540-a99r535 (freq=1):
        Result (freq=30): a97r540(12) a99r535(18)
      Forming thread by copy 49:a96r543-a98r538 (freq=1):
        Result (freq=30): a96r543(12) a98r538(18)
      Forming thread by copy 50:a90r539-a96r543 (freq=1):
        Result (freq=42): a90r539(12) a96r543(12) a98r538(18)
      Forming thread by copy 52:a92r533-a94r537 (freq=1):
        Result (freq=24): a92r533(12) a94r537(12)
      Forming thread by copy 54:a91r546-a92r533 (freq=1):
        Result (freq=36): a91r546(12) a92r533(12) a94r537(12)
      Forming thread by copy 56:a101r408-a102r1008 (freq=1):
        Result (freq=23): a101r408(11) a102r1008(2) a104r1007(10)
      Pushing a115(r998,l0)(cost 0)
      Pushing a111(r1002,l0)(cost 0)
      Pushing a88(r1010,l0)(cost 0)
      Pushing a87(r552,l0)(cost 0)
      Pushing a73(r1011,l0)(cost 0)
      Pushing a72(r575,l0)(cost 0)
      Pushing a51(r605,l0)(cost 0)
      Pushing a33(r627,l0)(cost 0)
      Pushing a108(r521,l0)(cost 0)
      Pushing a105(r1006,l0)(cost 0)
      Pushing a116(r997,l0)(cost 0)
      Pushing a114(r999,l0)(cost 0)
      Pushing a112(r1001,l0)(cost 0)
      Pushing a110(r1003,l0)(cost 0)
      Pushing a93(r545,l0)(cost 0)
      Pushing a89(r548,l0)(cost 0)
      Pushing a86(r553,l0)(cost 0)
      Pushing a85(r146,l0)(cost 0)
      Pushing a83(r558,l0)(cost 0)
      Pushing a78(r568,l0)(cost 0)
      Pushing a74(r571,l0)(cost 0)
      Pushing a71(r576,l0)(cost 0)
      Pushing a70(r154,l0)(cost 0)
      Pushing a60(r586,l0)(cost 0)
      Pushing a58(r597,l0)(cost 0)
      Pushing a54(r600,l0)(cost 0)
      Pushing a42(r621,l0)(cost 0)
      Pushing a37(r624,l0)(cost 0)
      Pushing a23(r639,l0)(cost 0)
      Pushing a18(r642,l0)(cost 0)
      Forming thread by copy 9:a17r630-a31r1019 (freq=13):
        Result (freq=54): a17r630(28) a31r1019(26)
        Making a17(r630,l0) colorable
      Pushing a107(r1005,l0)(cost 0)
      Pushing a106(r519,l0)(cost 0)
      Pushing a68(r411,l0)(cost 0)
      Pushing a35(r160,l0)(cost 0)
      Pushing a27(r632,l0)(cost 0)
      Pushing a102(r1008,l0)(cost 0)
      Pushing a104(r1007,l0)(cost 0)
      Pushing a101(r408,l0)(cost 0)
      Pushing a79(r566,l0)(cost 0)
      Pushing a75(r562,l0)(cost 0)
      Pushing a46(r614,l0)(cost 0)
      Pushing a41(r610,l0)(cost 0)
      Pushing a43(r619,l0)(cost 0)
      Pushing a38(r615,l0)(cost 0)
      Pushing a596(r783,l0: a188(r783,l1))(cost 0)
      Forming thread by copy 232:a580r349-a600r776 (freq=6):
        Result (freq=837): a580r349(287) a600r776(220) a603r774(220) a604r773(110)
      Forming thread by copy 236:a580r349-a609r767 (freq=6):
        Result (freq=1387): a580r349(287) a609r767(220) a612r765(220) a613r764(110) a600r776(220) a603r774(220) a604r773(110)
        Making a580(r349,l0: a172(r349,l1)) colorable
      Pushing a119(r481,l0)(cost 0)
      Pushing a118(r483,l0)(cost 0)
      Pushing a117(r996,l0)(cost 0)
      Pushing a100(r1009,l0)(cost 0)
      Pushing a69(r1012,l0)(cost 0)
      Pushing a31(r1019,l0)(cost 0)
      Pushing a21(r637,l0)(cost 0)
      Pushing a16(r640,l0)(cost 0)
      Pushing a97(r540,l0)(cost 0)
        Making a95(r534,l0) colorable
      Pushing a95(r534,l0)(cost 120)
      Pushing a99(r535,l0)(cost 0)
      Pushing a80(r563,l0)(cost 0)
      Pushing a81(r559,l0)(cost 0)
      Pushing a62(r592,l0)(cost 0)
      Pushing a64(r587,l0)(cost 0)
      Pushing a44(r616,l0)(cost 0)
      Pushing a45(r612,l0)(cost 0)
      Pushing a94(r537,l0)(cost 0)
      Pushing a92(r533,l0)(cost 0)
      Pushing a91(r546,l0)(cost 0)
      Pushing a59(r589,l0)(cost 0)
      Pushing a57(r585,l0)(cost 0)
      Pushing a56(r598,l0)(cost 0)
      Pushing a96(r543,l0)(cost 0)
      Pushing a90(r539,l0)(cost 0)
      Pushing a98(r538,l0)(cost 0)
      Pushing a36(r1017,l0)(cost 0)
      Pushing a34(r1018,l0)(cost 0)
      Pushing a66(r1014,l0)(cost 0)
      Pushing a30(r412,l0)(cost 0)
      Pushing a53(r1015,l0)(cost 0)
      Pushing a52(r1016,l0)(cost 0)
      Pushing a67(r1013,l0)(cost 0)
      Pushing a28(r409,l0)(cost 0)
      Pushing a39(r622,l0)(cost 0)
      Pushing a652(r1037,l0: a244(r1037,l1))(cost 0)
      Pushing a651(r735,l0: a243(r735,l1))(cost 0)
      Pushing a649(r734,l0: a241(r734,l1))(cost 0)
      Pushing a607(r772,l0: a199(r772,l1))(cost 0)
      Pushing a597(r1044,l0: a189(r1044,l1))(cost 0)
      Pushing a82(r561,l0)(cost 0)
      Pushing a77(r557,l0)(cost 0)
      Pushing a76(r569,l0)(cost 0)
      Pushing a84(r556,l0)(cost 0)
        Making a65(r342,l0) colorable
      Pushing a17(r630,l0)(cost 254)
      Pushing a47(r611,l0)(cost 0)
        Making a40(r973,l0) colorable
      Pushing a40(r973,l0)(cost 360)
      Pushing a48(r609,l0)(cost 0)
      Pushing a113(r1000,l0)(cost 0)
      Pushing a109(r1004,l0)(cost 0)
      Pushing a103(r125,l0)(cost 0)
      Pushing a32(r628,l0)(cost 0)
      Pushing a24(r634,l0)(cost 0)
      Pushing a25(r358,l0)(cost 0)
      Pushing a22(r169,l0)(cost 0)
      Pushing a29(r413,l0)(cost 0)
      Pushing a687(r1027,l0: a279(r1027,l1))(cost 0)
      Pushing a686(r1028,l0: a278(r1028,l1))(cost 0)
      Pushing a50(r606,l0)(cost 0)
      Pushing a19(r636,l0)(cost 0)
      Pushing a20(r357,l0)(cost 0)
      Pushing a15(r171,l0)(cost 0)
      Pushing a26(r410,l0)(cost 0)
      Pushing a61(r595,l0)(cost 0)
      Pushing a55(r591,l0)(cost 0)
        Making a49(r343,l0) colorable
      Pushing a49(r343,l0)(cost 260)
      Pushing a63(r590,l0)(cost 0)
      Pushing a65(r342,l0)(cost 310)
      Pushing a691(r1023,l0: a283(r1023,l1))(cost 0)
      Pushing a690(r1024,l0: a282(r1024,l1))(cost 0)
      Pushing a654(r727,l0: a246(r727,l1))(cost 0)
      Pushing a653(r729,l0: a245(r729,l1))(cost 0)
      Pushing a680(r1031,l0: a272(r1031,l1))(cost 0)
      Pushing a679(r681,l0: a271(r681,l1))(cost 0)
      Pushing a675(r695,l0: a267(r695,l1))(cost 0)
      Pushing a658(r1036,l0: a250(r1036,l1))(cost 0)
      Pushing a624(r754,l0: a216(r754,l1))(cost 0)
      Pushing a623(r755,l0: a215(r755,l1))(cost 0)
      Pushing a622(r756,l0: a214(r756,l1))(cost 0)
      Pushing a619(r760,l0: a211(r760,l1))(cost 0)
      Pushing a608(r1042,l0: a200(r1042,l1))(cost 0)
      Pushing a599(r1043,l0: a191(r1043,l1))(cost 0)
      Pushing a689(r1025,l0: a281(r1025,l1))(cost 0)
      Pushing a688(r1026,l0: a280(r1026,l1))(cost 0)
      Pushing a573(r1050,l0: a165(r1050,l1))(cost 0)
      Pushing a572(r1051,l0: a164(r1051,l1))(cost 0)
      Pushing a655(r721,l0: a247(r721,l1))(cost 0)
      Pushing a544(r1069,l0: a136(r1069,l1))(cost 0)
      Pushing a543(r1070,l0: a135(r1070,l1))(cost 0)
      Pushing a695(r1020,l0: a287(r1020,l1))(cost 0)
      Pushing a694(r1021,l0: a286(r1021,l1))(cost 0)
      Pushing a692(r1022,l0: a284(r1022,l1))(cost 0)
      Pushing a685(r1029,l0: a277(r1029,l1))(cost 0)
      Pushing a684(r664,l0: a276(r664,l1))(cost 0)
      Pushing a683(r1030,l0: a275(r1030,l1))(cost 0)
      Pushing a682(r672,l0: a274(r672,l1))(cost 0)
      Pushing a681(r674,l0: a273(r674,l1))(cost 0)
      Pushing a676(r692,l0: a268(r692,l1))(cost 0)
      Pushing a677(r688,l0: a269(r688,l1))(cost 0)
      Pushing a670(r703,l0: a262(r703,l1))(cost 0)
      Pushing a662(r1032,l0: a254(r1032,l1))(cost 0)
      Pushing a661(r1033,l0: a253(r1033,l1))(cost 0)
      Pushing a660(r1034,l0: a252(r1034,l1))(cost 0)
      Pushing a659(r1035,l0: a251(r1035,l1))(cost 0)
      Pushing a637(r1038,l0: a229(r1038,l1))(cost 0)
      Pushing a636(r1039,l0: a228(r1039,l1))(cost 0)
      Pushing a630(r1041,l0: a222(r1041,l1))(cost 0)
      Pushing a625(r751,l0: a217(r751,l1))(cost 0)
      Pushing a621(r757,l0: a213(r757,l1))(cost 0)
      Pushing a620(r759,l0: a212(r759,l1))(cost 0)
      Pushing a615(r763,l0: a207(r763,l1))(cost 0)
      Pushing a611(r768,l0: a203(r768,l1))(cost 0)
      Pushing a610(r769,l0: a202(r769,l1))(cost 0)
      Pushing a602(r777,l0: a194(r777,l1))(cost 0)
      Pushing a601(r778,l0: a193(r778,l1))(cost 0)
      Pushing a593(r787,l0: a185(r787,l1))(cost 0)
      Pushing a591(r1045,l0: a183(r1045,l1))(cost 0)
      Pushing a567(r1054,l0: a159(r1054,l1))(cost 0)
      Pushing a564(r1055,l0: a156(r1055,l1))(cost 0)
      Pushing a563(r1056,l0: a155(r1056,l1))(cost 0)
      Pushing a561(r1057,l0: a153(r1057,l1))(cost 0)
      Pushing a560(r1058,l0: a152(r1058,l1))(cost 0)
      Pushing a559(r1059,l0: a151(r1059,l1))(cost 0)
      Pushing a558(r857,l0: a150(r857,l1))(cost 0)
      Pushing a617(r748,l0: a209(r748,l1))(cost 0)
      Pushing a673(r199,l0: a265(r199,l1))(cost 0)
      Pushing a648(r220,l0: a240(r220,l1))(cost 0)
      Pushing a656(r720,l0: a248(r720,l1))(cost 0)
      Pushing a657(r716,l0: a249(r716,l1))(cost 0)
      Pushing a674(r359,l0: a266(r359,l1))(cost 0)
      Pushing a618(r752,l0: a210(r752,l1))(cost 0)
      Pushing a668(r988,l0: a260(r988,l1))(cost 0)
      Pushing a643(r986,l0: a235(r986,l1))(cost 0)
      Pushing a930(r701,l0: a810(r701,l1: a537(r701,l2)))(cost 0)
      Pushing a923(r741,l0: a803(r741,l1: a501(r741,l3)))(cost 0)
      Pushing a628(r747,l0: a220(r747,l1))(cost 0)
      Pushing a627(r749,l0: a219(r749,l1))(cost 0)
      Pushing a568(r1053,l0: a160(r1053,l1))(cost 0)
      Pushing a565(r369,l0: a157(r369,l1))(cost 0)
      Pushing a665(r1072,l0: a257(r1072,l1))(cost 0)
      Pushing a664(r200,l0: a256(r200,l1))(cost 0)
      Pushing a613(r764,l0: a205(r764,l1))(cost 0)
      Pushing a612(r765,l0: a204(r765,l1))(cost 0)
      Pushing a609(r767,l0: a201(r767,l1))(cost 0)
      Pushing a605(r366,l0: a197(r366,l1))(cost 0)
      Pushing a616(r227,l0: a208(r227,l1))(cost 0)
      Pushing a604(r773,l0: a196(r773,l1))(cost 0)
      Pushing a603(r774,l0: a195(r774,l1))(cost 0)
      Pushing a600(r776,l0: a192(r776,l1))(cost 0)
      Pushing a595(r785,l0: a187(r785,l1))(cost 0)
      Forming thread by copy 245:a583r364-a630r1041 (freq=110):
        Result (freq=427): a583r364(207) a630r1041(220)
        Making a583(r364,l0: a175(r364,l1)) colorable
        Making a584(r347,l0: a176(r347,l1)) colorable
      Pushing a583(r364,l0: a175(r364,l1))(cost 2070)
        Making a606(r398,l0: a198(r398,l1)) colorable
      Forming thread by copy 256:a614r397-a652r1037 (freq=27):
        Result (freq=3030): a614r397(2976) a652r1037(54)
      Forming thread by copy 261:a614r397-a656r720 (freq=10):
        Result (freq=3358): a614r397(2976) a656r720(164) a657r716(164) a652r1037(54)
        Making a614(r397,l0: a206(r397,l1)) colorable
      Pushing a594(r784,l0: a186(r784,l1))(cost 0)
      Pushing a592(r786,l0: a184(r786,l1))(cost 0)
      Forming thread by copy 240:a588r393-a620r759 (freq=6):
        Result (freq=3000): a588r393(2780) a620r759(110) a621r757(110)
        Making a588(r393,l0: a180(r393,l1)) colorable
      Pushing a667(r1073,l0: a259(r1073,l1))(cost 0)
        Making a645(r354,l0: a237(r354,l1)) colorable
      Pushing a663(r704,l0: a255(r704,l1))(cost 0)
        Making a642(r193,l0: a234(r193,l1)) colorable
      Forming thread by copy 258:a647r404-a651r735 (freq=3):
        Result (freq=1234): a647r404(1180) a651r735(54)
        Making a647(r404,l0: a239(r404,l1)) colorable
      Pushing a666(r201,l0: a258(r201,l1))(cost 0)
        Making a641(r195,l0: a233(r195,l1)) colorable
      Pushing a639(r221,l0: a231(r221,l1))(cost 0)
      Pushing a641(r195,l0: a233(r195,l1))(cost 5490)
      Pushing a918(r807,l0: a798(r807,l1: a466(r807,l4)))(cost 0)
      Pushing a570(r1052,l0: a162(r1052,l1))(cost 0)
      Pushing a574(r1049,l0: a166(r1049,l1))(cost 0)
      Pushing a590(r794,l0: a182(r794,l1))(cost 0)
      Pushing a569(r353,l0: a161(r353,l1))(cost 0)
      Pushing a646(r363,l0: a238(r363,l1))(cost 0)
        Making a633(r402,l0: a225(r402,l1)) colorable
      Forming thread by copy 271:a634r403-a680r1031 (freq=55):
        Result (freq=3033): a634r403(2923) a680r1031(110)
      Forming thread by copy 269:a634r403-a676r692 (freq=6):
        Result (freq=3253): a634r403(2923) a676r692(110) a677r688(110) a680r1031(110)
        Making a634(r403,l0: a226(r403,l1)) colorable
      Pushing a672(r361,l0: a264(r361,l1))(cost 0)
      Pushing a626(r750,l0: a218(r750,l1))(cost 0)
      Pushing a635(r1040,l0: a227(r1040,l1))(cost 0)
      Pushing a629(r340,l0: a221(r340,l1))(cost 0)
      Pushing a638(r743,l0: a230(r743,l1))(cost 0)
      Pushing a640(r222,l0: a232(r222,l1))(cost 0)
      Pushing a642(r193,l0: a234(r193,l1))(cost 5490)
      Pushing a678(r682,l0: a270(r682,l1))(cost 0)
      Pushing a671(r360,l0: a263(r360,l1))(cost 0)
      Pushing a647(r404,l0: a239(r404,l1))(cost 11800)
      Forming thread by copy 265:a632r362-a660r1034 (freq=110):
        Result (freq=495): a632r362(275) a660r1034(220)
        Making a632(r362,l0: a224(r362,l1)) colorable
      Forming thread by copy 273:a650r183-a685r1029 (freq=110):
        Result (freq=658): a650r183(438) a685r1029(220)
        Making a650(r183,l0: a242(r183,l1)) colorable
      Pushing a632(r362,l0: a224(r362,l1))(cost 2640)
      Pushing a650(r183,l0: a242(r183,l1))(cost 4380)
      Pushing a580(r349,l0: a172(r349,l1))(cost 2870)
      Pushing a908(r821,l0: a788(r821,l1: a456(r821,l4)))(cost 0)
      Pushing a919(r803,l0: a799(r803,l1: a467(r803,l4)))(cost 0)
      Pushing a915(r804,l0: a795(r804,l1: a463(r804,l4)))(cost 0)
      Pushing a912(r805,l0: a792(r805,l1: a460(r805,l4)))(cost 0)
      Pushing a917(r808,l0: a797(r808,l1: a465(r808,l4)))(cost 0)
      Pushing a914(r809,l0: a794(r809,l1: a462(r809,l4)))(cost 0)
      Pushing a911(r810,l0: a791(r810,l1: a459(r810,l4)))(cost 0)
      Pushing a916(r813,l0: a796(r813,l1: a464(r813,l4)))(cost 0)
      Pushing a913(r814,l0: a793(r814,l1: a461(r814,l4)))(cost 0)
      Pushing a910(r815,l0: a790(r815,l1: a458(r815,l4)))(cost 0)
      Pushing a907(r817,l0: a787(r817,l1: a455(r817,l4)))(cost 0)
      Pushing a904(r818,l0: a784(r818,l1: a452(r818,l4)))(cost 0)
      Pushing a901(r819,l0: a781(r819,l1: a449(r819,l4)))(cost 0)
      Pushing a906(r822,l0: a786(r822,l1: a454(r822,l4)))(cost 0)
      Pushing a903(r823,l0: a783(r823,l1: a451(r823,l4)))(cost 0)
      Pushing a900(r824,l0: a780(r824,l1: a448(r824,l4)))(cost 0)
        Making a586(r348,l0: a178(r348,l1)) colorable
        Making a587(r365,l0: a179(r365,l1)) colorable
      Forming thread by copy 243:a589r423-a623r755 (freq=55):
        Result (freq=1165): a589r423(1055) a623r755(110)
        Making a589(r423,l0: a181(r423,l1)) colorable
      Pushing a587(r365,l0: a179(r365,l1))(cost 10550)
      Pushing a589(r423,l0: a181(r423,l1))(cost 10550)
      Pushing a586(r348,l0: a178(r348,l1))(cost 15500)
      Pushing a905(r827,l0: a785(r827,l1: a453(r827,l4)))(cost 0)
      Pushing a902(r828,l0: a782(r828,l1: a450(r828,l4)))(cost 0)
      Pushing a899(r829,l0: a779(r829,l1: a447(r829,l4)))(cost 0)
      Pushing a896(r1046,l0: a776(r1046,l1: a444(r1046,l4)))(cost 0)
      Pushing a890(r1048,l0: a770(r1048,l1: a438(r1048,l4)))(cost 0)
      Pushing a867(r1061,l0: a747(r1061,l1: a387(r1061,l5)))(cost 0)
      Pushing a865(r1062,l0: a745(r1062,l1: a385(r1062,l5)))(cost 0)
      Pushing a851(r1063,l0: a731(r1063,l1: a371(r1063,l5)))(cost 0)
      Pushing a849(r1064,l0: a729(r1064,l1: a369(r1064,l5)))(cost 0)
      Pushing a830(r1065,l0: a710(r1065,l1: a326(r1065,l6)))(cost 0)
      Pushing a828(r1066,l0: a708(r1066,l1: a324(r1066,l6)))(cost 0)
      Pushing a818(r1067,l0: a698(r1067,l1: a314(r1067,l6)))(cost 0)
      Pushing a816(r1068,l0: a696(r1068,l1: a312(r1068,l6)))(cost 0)
      Pushing a584(r347,l0: a176(r347,l1))(cost 3170)
      Pushing a582(r216,l0: a174(r216,l1))(cost 0)
      Pushing a669(r341,l0: a261(r341,l1))(cost 0)
      Pushing a644(r420,l0: a236(r420,l1))(cost 0)
      Pushing a633(r402,l0: a225(r402,l1))(cost 28130)
      Pushing a606(r398,l0: a198(r398,l1))(cost 28670)
      Pushing a588(r393,l0: a180(r393,l1))(cost 27800)
      Pushing a634(r403,l0: a226(r403,l1))(cost 29175)
      Pushing a614(r397,l0: a206(r397,l1))(cost 29733)
      Forming thread by copy 210:a7r418-a543r1070 (freq=97):
        Result (freq=414): a7r418(220) a543r1070(194)
      Forming thread by copy 247:a7r418-a626r750 (freq=13):
        Result (freq=1349): a7r418(220) a626r750(220) a629r340(495) a635r1040(220) a543r1070(194)
        Making a7(r418,l0) colorable
      Pushing a7(r418,l0)(cost 2200)
      Pushing a893(r1047,l0: a773(r1047,l1: a441(r1047,l4)))(cost 0)
      Pushing a891(r834,l0: a771(r834,l1: a439(r834,l4)))(cost 0)
      Pushing a835(r930,l0: a715(r930,l1: a331(r930,l6)))(cost 0)
      Pushing a833(r931,l0: a713(r931,l1: a329(r931,l6)))(cost 0)
      Pushing a836(r934,l0: a716(r934,l1: a332(r934,l6)))(cost 0)
      Pushing a832(r935,l0: a712(r935,l1: a328(r935,l6)))(cost 0)
      Pushing a834(r938,l0: a714(r938,l1: a330(r938,l6)))(cost 0)
      Pushing a831(r939,l0: a711(r939,l1: a327(r939,l6)))(cost 0)
      Pushing a826(r946,l0: a706(r946,l1: a322(r946,l6)))(cost 0)
      Pushing a821(r947,l0: a701(r947,l1: a317(r947,l6)))(cost 0)
      Pushing a824(r950,l0: a704(r950,l1: a320(r950,l6)))(cost 0)
      Pushing a820(r951,l0: a700(r951,l1: a316(r951,l6)))(cost 0)
      Pushing a822(r954,l0: a702(r954,l1: a318(r954,l6)))(cost 0)
      Pushing a819(r955,l0: a699(r955,l1: a315(r955,l6)))(cost 0)
        Making a546(r915,l0: a138(r915,l1)) colorable
      Pushing a546(r915,l0: a138(r915,l1))(cost 9870)
      Pushing a645(r354,l0: a237(r354,l1))(cost 36700)
      Pushing a898(r830,l0: a778(r830,l1: a446(r830,l4)))(cost 0)
      Pushing a581(r279,l0: a173(r279,l1))(cost 0)
      Forming thread by copy 280:a566r346-a692r1022 (freq=110):
        Result (freq=957): a566r346(737) a692r1022(220)
      Forming thread by copy 277:a566r346-a691r1023 (freq=45):
        Result (freq=1047): a566r346(737) a691r1023(90) a692r1022(220)
      Forming thread by copy 274:a566r346-a687r1027 (freq=32):
        Result (freq=1111): a566r346(737) a687r1027(64) a691r1023(90) a692r1022(220)
        Making a566(r346,l0: a158(r346,l1)) colorable
      Pushing a566(r346,l0: a158(r346,l1))(cost 10703)
      Pushing a931(r401,l0: a811(r401,l1: a538(r401,l2)))(cost 0)
      Pushing a933(r1075,l0: a813(r1075,l1: a540(r1075,l2)))(cost 0)
      Pushing a932(r697,l0: a812(r697,l1: a539(r697,l2)))(cost 0)
      Pushing a924(r396,l0: a804(r396,l1: a502(r396,l3)))(cost 0)
      Pushing a926(r1077,l0: a806(r1077,l1: a504(r1077,l3)))(cost 0)
      Pushing a925(r737,l0: a805(r737,l1: a503(r737,l3)))(cost 0)
      Pushing a874(r875,l0: a754(r875,l1: a394(r875,l5)))(cost 0)
      Pushing a873(r876,l0: a753(r876,l1: a393(r876,l5)))(cost 0)
      Pushing a870(r877,l0: a750(r877,l1: a390(r877,l5)))(cost 0)
      Pushing a876(r880,l0: a756(r880,l1: a396(r880,l5)))(cost 0)
      Pushing a875(r881,l0: a755(r881,l1: a395(r881,l5)))(cost 0)
      Pushing a869(r882,l0: a749(r882,l1: a389(r882,l5)))(cost 0)
      Pushing a872(r885,l0: a752(r885,l1: a392(r885,l5)))(cost 0)
      Pushing a871(r886,l0: a751(r886,l1: a391(r886,l5)))(cost 0)
      Pushing a868(r887,l0: a748(r887,l1: a388(r887,l5)))(cost 0)
      Pushing a863(r894,l0: a743(r894,l1: a383(r894,l5)))(cost 0)
      Pushing a858(r895,l0: a738(r895,l1: a378(r895,l5)))(cost 0)
      Pushing a854(r896,l0: a734(r896,l1: a374(r896,l5)))(cost 0)
      Pushing a861(r899,l0: a741(r899,l1: a381(r899,l5)))(cost 0)
      Pushing a857(r900,l0: a737(r900,l1: a377(r900,l5)))(cost 0)
      Pushing a853(r901,l0: a733(r901,l1: a373(r901,l5)))(cost 0)
      Pushing a859(r904,l0: a739(r904,l1: a379(r904,l5)))(cost 0)
      Pushing a856(r905,l0: a736(r905,l1: a376(r905,l5)))(cost 0)
      Pushing a852(r906,l0: a732(r906,l1: a372(r906,l5)))(cost 0)
      Pushing a935(r1074,l0: a815(r1074,l1: a542(r1074,l2)))(cost 0)
      Pushing a934(r696,l0: a814(r696,l1: a541(r696,l2)))(cost 0)
      Pushing a929(r400,l0: a809(r400,l1: a536(r400,l2)))(cost 0)
      Pushing a928(r1076,l0: a808(r1076,l1: a506(r1076,l3)))(cost 0)
      Pushing a927(r736,l0: a807(r736,l1: a505(r736,l3)))(cost 0)
      Pushing a922(r395,l0: a802(r395,l1: a500(r395,l3)))(cost 0)
      Pushing a889(r858,l0: a769(r858,l1: a409(r858,l5)))(cost 0)
      Pushing a888(r859,l0: a768(r859,l1: a408(r859,l5)))(cost 0)
        Making a557(r860,l0: a149(r860,l1)) colorable
      Pushing a557(r860,l0: a149(r860,l1))(cost 9870)
      Pushing a887(r296,l0: a767(r296,l1: a407(r296,l5)))(cost 0)
      Pushing a848(r913,l0: a728(r913,l1: a344(r913,l6)))(cost 0)
      Pushing a847(r914,l0: a727(r914,l1: a343(r914,l6)))(cost 0)
      Pushing a846(r475,l0: a726(r475,l1: a342(r475,l6)))(cost 0)
      Pushing a921(r796,l0: a801(r796,l1: a469(r796,l4)))(cost 0)
      Pushing a909(r801,l0: a789(r801,l1: a457(r801,l4)))(cost 0)
      Pushing a920(r798,l0: a800(r798,l1: a468(r798,l4)))(cost 0)
      Pushing a883(r863,l0: a763(r863,l1: a403(r863,l5)))(cost 0)
      Pushing a886(r861,l0: a766(r861,l1: a406(r861,l5)))(cost 0)
      Pushing a884(r862,l0: a764(r862,l1: a404(r862,l5)))(cost 0)
      Pushing a880(r864,l0: a760(r864,l1: a400(r864,l5)))(cost 0)
      Pushing a842(r918,l0: a722(r918,l1: a338(r918,l6)))(cost 0)
        Making a6(r339,l0) colorable
      Forming thread by copy 212:a548r370-a567r1054 (freq=110):
        Result (freq=2110): a548r370(1890) a567r1054(220)
        Making a548(r370,l0: a140(r370,l1)) colorable
      Forming thread by copy 214:a549r372-a563r1056 (freq=110):
        Result (freq=2110): a549r372(1890) a563r1056(220)
        Making a549(r372,l0: a141(r372,l1)) colorable
      Forming thread by copy 215:a550r373-a561r1057 (freq=110):
        Result (freq=2110): a550r373(1890) a561r1057(220)
        Making a550(r373,l0: a142(r373,l1)) colorable
      Forming thread by copy 216:a551r374-a560r1058 (freq=110):
        Result (freq=2110): a551r374(1890) a560r1058(220)
        Making a551(r374,l0: a143(r374,l1)) colorable
      Forming thread by copy 217:a552r375-a559r1059 (freq=110):
        Result (freq=2110): a552r375(1890) a559r1059(220)
        Making a552(r375,l0: a144(r375,l1)) colorable
      Pushing a6(r339,l0)(cost 4465)
      Pushing a552(r375,l0: a144(r375,l1))(cost 18790)
      Pushing a551(r374,l0: a143(r374,l1))(cost 18790)
      Pushing a550(r373,l0: a142(r373,l1))(cost 18790)
      Pushing a549(r372,l0: a141(r372,l1))(cost 18790)
      Pushing a548(r370,l0: a140(r370,l1))(cost 18900)
      Pushing a845(r916,l0: a725(r916,l1: a341(r916,l6)))(cost 0)
      Pushing a843(r917,l0: a723(r917,l1: a339(r917,l6)))(cost 0)
      Pushing a839(r919,l0: a719(r919,l1: a335(r919,l6)))(cost 0)
      Pushing a877(r1060,l0: a757(r1060,l1: a397(r1060,l5)))(cost 0)
      Pushing a855(r380,l0: a735(r380,l1: a375(r380,l5)))(cost 0)
      Pushing a881(r868,l0: a761(r868,l1: a401(r868,l5)))(cost 0)
      Pushing a885(r866,l0: a765(r866,l1: a405(r866,l5)))(cost 0)
      Pushing a882(r867,l0: a762(r867,l1: a402(r867,l5)))(cost 0)
      Pushing a879(r869,l0: a759(r869,l1: a399(r869,l5)))(cost 0)
      Pushing a878(r870,l0: a758(r870,l1: a398(r870,l5)))(cost 0)
      Pushing a840(r923,l0: a720(r923,l1: a336(r923,l6)))(cost 0)
      Pushing a844(r921,l0: a724(r921,l1: a340(r921,l6)))(cost 0)
      Pushing a841(r922,l0: a721(r922,l1: a337(r922,l6)))(cost 0)
      Pushing a838(r924,l0: a718(r924,l1: a334(r924,l6)))(cost 0)
      Pushing a837(r925,l0: a717(r925,l1: a333(r925,l6)))(cost 0)
      Pushing a3(r989,l0)(potential spill: pri=0, cost=3856)
      Pushing a0(r993,l0)(potential spill: pri=0, cost=4090)
      Pushing a1(r992,l0)(potential spill: pri=0, cost=4090)
      Pushing a8(r355,l0)(potential spill: pri=1, cost=1925)
      Pushing a12(r970,l0)(potential spill: pri=1, cost=2310)
      Pushing a4(r463,l0)(potential spill: pri=1, cost=2330)
      Pushing a9(r356,l0)(potential spill: pri=1, cost=2495)
      Pushing a2(r990,l0)(potential spill: pri=1, cost=6196)
      Forming thread by copy 213:a562r371-a564r1055 (freq=110):
        Result (freq=440): a562r371(220) a564r1055(220)
        Making a562(r371,l0: a154(r371,l1)) colorable
      Pushing a562(r371,l0: a154(r371,l1))(cost 3410)
      Pushing a13(r971,l0)(potential spill: pri=2, cost=2860)
      Forming thread by copy 267:a631r345-a673r199 (freq=65):
        Result (freq=491): a631r345(164) a673r199(327)
      Forming thread by copy 266:a631r345-a669r341 (freq=44):
        Result (freq=3117): a631r345(164) a669r341(2626) a673r199(327)
        Making a631(r345,l0: a223(r345,l1)) colorable
      Pushing a631(r345,l0: a223(r345,l1))(cost 1640)
      Forming thread by copy 259:a10r416-a656r720 (freq=20):
        Result (freq=4246): a10r416(888) a614r397(2976) a656r720(164) a657r716(164) a652r1037(54)
        Making a10(r416,l0) colorable
      Pushing a10(r416,l0)(cost 7230)
      Forming thread by copy 279:a693r651-a695r1020 (freq=110):
        Result (freq=440): a693r651(220) a695r1020(220)
        Making a693(r651,l0: a285(r651,l1)) colorable
      Pushing a693(r651,l0: a285(r651,l1))(cost 6380)
      Pushing a14(r972,l0)(potential spill: pri=2, cost=2860)
      Pushing a11(r967,l0)(potential spill: pri=3, cost=3990)
      Forming thread by copy 276:a598r181-a689r1025 (freq=64):
        Result (freq=713): a598r181(585) a689r1025(128)
      Forming thread by copy 278:a598r181-a690r1024 (freq=45):
        Result (freq=803): a598r181(585) a690r1024(90) a689r1025(128)
      Forming thread by copy 275:a598r181-a686r1028 (freq=32):
        Result (freq=867): a598r181(585) a686r1028(64) a690r1024(90) a689r1025(128)
        Making a598(r181,l0: a190(r181,l1)) colorable
      Forming thread by copy 219:a571r283-a573r1050 (freq=64):
        Result (freq=224): a571r283(96) a573r1050(128)
        Making a571(r283,l0: a163(r283,l1)) colorable
      Forming thread by copy 376:a817r957-a818r1067 (freq=111):
        Result (freq=3560): a817r957(1780) a818r1067(1780)
        Making a817(r957,l0: a697(r957,l1: a313(r957,l6))) colorable
      Forming thread by copy 403:a850r908-a851r1063 (freq=111):
        Result (freq=3560): a850r908(1780) a851r1063(1780)
        Making a850(r908,l0: a730(r908,l1: a370(r908,l5))) colorable
      Pushing a571(r283,l0: a163(r283,l1))(cost 1344)
      Pushing a598(r181,l0: a190(r181,l1))(cost 17772)
      Pushing a850(r908,l0: a730(r908,l1: a370(r908,l5)))(cost 51620)
      Pushing a817(r957,l0: a697(r957,l1: a313(r957,l6)))(cost 51620)
      Pushing a5(r987,l0)(potential spill: pri=4, cost=5370)
      Pushing a578(r982,l0: a170(r982,l1))(potential spill: pri=6890, cost=6890)
      Pushing a579(r429,l0: a171(r429,l1))(potential spill: pri=8415, cost=8415)
      Pushing a577(r983,l0: a169(r983,l1))(potential spill: pri=12830, cost=12830)
      Pushing a576(r394,l0: a168(r394,l1))(potential spill: pri=14320, cost=14320)
      Forming thread by copy 415:a897r351-a899r829 (freq=37):
        Result (freq=3703): a897r351(1927) a899r829(592) a902r828(592) a905r827(592)
      Forming thread by copy 424:a897r351-a910r815 (freq=37):
        Result (freq=5479): a897r351(1927) a910r815(592) a913r814(592) a916r813(592) a899r829(592) a902r828(592) a905r827(592)
        Making a897(r351,l0: a777(r351,l1: a445(r351,l4))) colorable
      Pushing a897(r351,l0: a777(r351,l1: a445(r351,l4)))(cost 21070)
      Pushing a575(r984,l0: a167(r984,l1))(potential spill: pri=16990, cost=16990)
      Forming thread by copy 254:a585r173-a648r220 (freq=65):
        Result (freq=2271): a585r173(1944) a648r220(327)
      Forming thread by copy 253:a585r173-a644r420 (freq=44):
        Result (freq=4897): a585r173(1944) a644r420(2626) a648r220(327)
        Making a585(r173,l0: a177(r173,l1)) colorable
      Forming thread by copy 414:a895r352-a900r824 (freq=37):
        Result (freq=5038): a895r352(3262) a900r824(592) a903r823(592) a906r822(592)
      Forming thread by copy 423:a895r352-a911r810 (freq=37):
        Result (freq=6814): a895r352(3262) a911r810(592) a914r809(592) a917r808(592) a900r824(592) a903r823(592) a906r822(592)
        Making a895(r352,l0: a775(r352,l1: a443(r352,l4))) colorable
      Forming thread by copy 413:a894r350-a901r819 (freq=37):
        Result (freq=3703): a894r350(1927) a901r819(592) a904r818(592) a907r817(592)
      Forming thread by copy 422:a894r350-a912r805 (freq=37):
        Result (freq=5479): a894r350(1927) a912r805(592) a915r804(592) a919r803(592) a901r819(592) a904r818(592) a907r817(592)
        Making a894(r350,l0: a774(r350,l1: a442(r350,l4))) colorable
      Pushing a585(r173,l0: a177(r173,l1))(cost 19440)
      Pushing a894(r350,l0: a774(r350,l1: a442(r350,l4)))(cost 21070)
      Forming thread by copy 405:a892r833-a896r1046 (freq=890):
        Result (freq=3560): a892r833(1780) a896r1046(1780)
        Making a892(r833,l0: a772(r833,l1: a440(r833,l4))) colorable
      Pushing a892(r833,l0: a772(r833,l1: a440(r833,l4)))(cost 51620)
      Pushing a895(r352,l0: a775(r352,l1: a443(r352,l4)))(cost 34420)
      Pushing a545(r979,l0: a137(r979,l1))(potential spill: pri=33010, cost=33010)
      Forming thread by copy 368:a823r928-a837r925 (freq=222):
        Result (freq=14240): a823r928(4450) a837r925(2670) a838r924(1780) a840r923(1780) a841r922(1780) a844r921(1780)
        Making a823(r928,l0: a703(r928,l1: a319(r928,l6))) colorable
        Making a825(r457,l0: a705(r457,l1: a321(r457,l6))) colorable
      Forming thread by copy 372:a829r941-a830r1065 (freq=111):
        Result (freq=3560): a829r941(1780) a830r1065(1780)
        Making a829(r941,l0: a709(r941,l1: a325(r941,l6))) colorable
        Making a827(r452,l0: a707(r452,l1: a323(r452,l6))) colorable
      Pushing a827(r452,l0: a707(r452,l1: a323(r452,l6)))(cost 26700)
      Pushing a825(r457,l0: a705(r457,l1: a321(r457,l6)))(cost 26700)
      Pushing a829(r941,l0: a709(r941,l1: a325(r941,l6)))(cost 51620)
      Pushing a823(r928,l0: a703(r928,l1: a319(r928,l6)))(cost 44500)
      Pushing a556(r981,l0: a148(r981,l1))(potential spill: pri=33010, cost=33010)
        Making a554(r968,l0: a146(r968,l1)) colorable
        Making a555(r969,l0: a147(r969,l1)) colorable
      Forming thread by copy 228:a547r368-a591r1045 (freq=110):
        Result (freq=4780): a547r368(4560) a591r1045(220)
        Making a547(r368,l0: a139(r368,l1)) colorable
      Forming thread by copy 242:a553r389-a617r748 (freq=55):
        Result (freq=11272): a553r389(10997) a617r748(275)
      Forming thread by copy 244:a553r389-a622r756 (freq=6):
        Result (freq=11382): a553r389(10997) a622r756(110) a617r748(275)
        Making a553(r389,l0: a145(r389,l1)) colorable
      Forming thread by copy 387:a860r873-a878r870 (freq=222):
        Result (freq=14240): a860r873(4450) a878r870(2670) a879r869(1780) a881r868(1780) a882r867(1780) a885r866(1780)
        Making a860(r873,l0: a740(r873,l1: a380(r873,l5))) colorable
        Making a862(r309,l0: a742(r309,l1: a382(r309,l5))) colorable
      Forming thread by copy 395:a866r889-a867r1061 (freq=111):
        Result (freq=3560): a866r889(1780) a867r1061(1780)
        Making a866(r889,l0: a746(r889,l1: a386(r889,l5))) colorable
        Making a864(r314,l0: a744(r314,l1: a384(r314,l5))) colorable
      Pushing a864(r314,l0: a744(r314,l1: a384(r314,l5)))(cost 26700)
      Pushing a862(r309,l0: a742(r309,l1: a382(r309,l5)))(cost 26700)
      Pushing a866(r889,l0: a746(r889,l1: a386(r889,l5)))(cost 51620)
      Pushing a547(r368,l0: a139(r368,l1))(cost 81200)
      Pushing a555(r969,l0: a147(r969,l1))(cost 55340)
      Pushing a554(r968,l0: a146(r968,l1))(cost 55340)
      Pushing a553(r389,l0: a145(r389,l1))(cost 98335)
      Pushing a860(r873,l0: a740(r873,l1: a380(r873,l5)))(cost 44500)
      Popping a860(r873,l0: a740(r873,l1: a380(r873,l5)))  -- assign reg 4
      Popping a553(r389,l0: a145(r389,l1))  -- assign reg 5
      Popping a554(r968,l0: a146(r968,l1))  -- assign reg 6
      Popping a555(r969,l0: a147(r969,l1))  -- assign reg 7
      Popping a547(r368,l0: a139(r368,l1))  -- assign reg 8
      Popping a866(r889,l0: a746(r889,l1: a386(r889,l5)))  -- assign reg 9
      Popping a862(r309,l0: a742(r309,l1: a382(r309,l5)))  -- assign reg 10
      Popping a864(r314,l0: a744(r314,l1: a384(r314,l5)))  -- assign reg 11
      Popping a556(r981,l0: a148(r981,l1))  -- spill
      Popping a823(r928,l0: a703(r928,l1: a319(r928,l6)))  -- assign reg 4
      Popping a829(r941,l0: a709(r941,l1: a325(r941,l6)))  -- assign reg 9
      Popping a825(r457,l0: a705(r457,l1: a321(r457,l6)))  -- assign reg 10
      Popping a827(r452,l0: a707(r452,l1: a323(r452,l6)))  -- assign reg 11
      Popping a545(r979,l0: a137(r979,l1))  -- spill
      Popping a895(r352,l0: a775(r352,l1: a443(r352,l4)))  -- assign reg 4
      Popping a892(r833,l0: a772(r833,l1: a440(r833,l4)))  -- assign reg 6
      Popping a894(r350,l0: a774(r350,l1: a442(r350,l4)))  -- assign reg 9
      Popping a585(r173,l0: a177(r173,l1))  -- assign reg 10
      Popping a575(r984,l0: a167(r984,l1))  -- spill
      Popping a897(r351,l0: a777(r351,l1: a445(r351,l4)))  -- assign reg 7
      Popping a576(r394,l0: a168(r394,l1))  -- assign reg 11
      Popping a577(r983,l0: a169(r983,l1))  -- spill
      Popping a579(r429,l0: a171(r429,l1))  -- spill
      Popping a578(r982,l0: a170(r982,l1))  -- spill
      Popping a5(r987,l0)  -- spill
      Popping a817(r957,l0: a697(r957,l1: a313(r957,l6)))  -- assign reg 4
      Popping a850(r908,l0: a730(r908,l1: a370(r908,l5)))  -- assign reg 4
      Popping a598(r181,l0: a190(r181,l1))  -- assign reg 6
      Popping a571(r283,l0: a163(r283,l1))  -- assign reg 6
      Popping a11(r967,l0)  -- spill
      Popping a14(r972,l0)  -- spill
      Popping a693(r651,l0: a285(r651,l1))  -- assign reg 4
      Popping a10(r416,l0)  -- assign reg 8
      Popping a631(r345,l0: a223(r345,l1))  -- assign reg 4
      Popping a13(r971,l0)  -- spill
      Popping a562(r371,l0: a154(r371,l1))  -- assign reg 4
      Popping a2(r990,l0)  -- spill
      Popping a9(r356,l0)  -- spill
      Popping a4(r463,l0)  -- spill
      Popping a12(r970,l0)  -- spill
      Popping a8(r355,l0)  -- spill
      Popping a1(r992,l0)  -- spill
      Popping a0(r993,l0)  -- spill
      Popping a3(r989,l0)  -- spill
      Popping a837(r925,l0: a717(r925,l1: a333(r925,l6)))  -- assign reg 4
      Popping a838(r924,l0: a718(r924,l1: a334(r924,l6)))  -- assign reg 4
      Popping a841(r922,l0: a721(r922,l1: a337(r922,l6)))  -- assign reg 31
      Popping a844(r921,l0: a724(r921,l1: a340(r921,l6)))  -- assign reg 31
      Popping a840(r923,l0: a720(r923,l1: a336(r923,l6)))  -- assign reg 4
      Popping a878(r870,l0: a758(r870,l1: a398(r870,l5)))  -- assign reg 4
      Popping a879(r869,l0: a759(r869,l1: a399(r869,l5)))  -- assign reg 4
      Popping a882(r867,l0: a762(r867,l1: a402(r867,l5)))  -- assign reg 31
      Popping a885(r866,l0: a765(r866,l1: a405(r866,l5)))  -- assign reg 31
      Popping a881(r868,l0: a761(r868,l1: a401(r868,l5)))  -- assign reg 4
      Popping a855(r380,l0: a735(r380,l1: a375(r380,l5)))  -- assign reg 32
      Popping a877(r1060,l0: a757(r1060,l1: a397(r1060,l5)))  -- assign reg 16
      Popping a839(r919,l0: a719(r919,l1: a335(r919,l6)))  -- assign reg 3
      Popping a843(r917,l0: a723(r917,l1: a339(r917,l6)))  -- assign reg 30
      Popping a845(r916,l0: a725(r916,l1: a341(r916,l6)))  -- assign reg 30
      Popping a548(r370,l0: a140(r370,l1))  -- assign reg 33
      Popping a549(r372,l0: a141(r372,l1))  -- assign reg 34
      Popping a550(r373,l0: a142(r373,l1))  -- assign reg 35
      Popping a551(r374,l0: a143(r374,l1))  -- assign reg 36
      Popping a552(r375,l0: a144(r375,l1))  -- assign reg 37
      Popping a6(r339,l0)  -- assign reg 38
      Popping a842(r918,l0: a722(r918,l1: a338(r918,l6)))  -- assign reg 4
      Popping a880(r864,l0: a760(r864,l1: a400(r864,l5)))  -- assign reg 3
      Popping a884(r862,l0: a764(r862,l1: a404(r862,l5)))  -- assign reg 30
      Popping a886(r861,l0: a766(r861,l1: a406(r861,l5)))  -- assign reg 30
      Popping a883(r863,l0: a763(r863,l1: a403(r863,l5)))  -- assign reg 4
      Popping a920(r798,l0: a800(r798,l1: a468(r798,l4)))  -- assign reg 3
      Popping a909(r801,l0: a789(r801,l1: a457(r801,l4)))  -- assign reg 3
      Popping a921(r796,l0: a801(r796,l1: a469(r796,l4)))  -- assign reg 3
      Popping a846(r475,l0: a726(r475,l1: a342(r475,l6)))  -- assign reg 29
      Popping a847(r914,l0: a727(r914,l1: a343(r914,l6)))  -- assign reg 29
      Popping a848(r913,l0: a728(r913,l1: a344(r913,l6)))  -- assign reg 29
      Popping a887(r296,l0: a767(r296,l1: a407(r296,l5)))  -- assign reg 29
      Popping a557(r860,l0: a149(r860,l1))  -- assign reg 39
      Popping a888(r859,l0: a768(r859,l1: a408(r859,l5)))  -- assign reg 29
      Popping a889(r858,l0: a769(r858,l1: a409(r858,l5)))  -- assign reg 29
      Popping a922(r395,l0: a802(r395,l1: a500(r395,l3)))  -- assign reg 3
      Popping a927(r736,l0: a807(r736,l1: a505(r736,l3)))  -- assign reg 31
      Popping a928(r1076,l0: a808(r1076,l1: a506(r1076,l3)))  -- assign reg 31
      Popping a929(r400,l0: a809(r400,l1: a536(r400,l2)))  -- assign reg 3
      Popping a934(r696,l0: a814(r696,l1: a541(r696,l2)))  -- assign reg 31
      Popping a935(r1074,l0: a815(r1074,l1: a542(r1074,l2)))  -- assign reg 31
      Popping a852(r906,l0: a732(r906,l1: a372(r906,l5)))  -- assign reg 32
      Popping a856(r905,l0: a736(r905,l1: a376(r905,l5)))  -- assign reg 16
      Popping a859(r904,l0: a739(r904,l1: a379(r904,l5)))  -- assign reg 16
      Popping a853(r901,l0: a733(r901,l1: a373(r901,l5)))  -- assign reg 31
      Popping a857(r900,l0: a737(r900,l1: a377(r900,l5)))  -- assign reg 31
      Popping a861(r899,l0: a741(r899,l1: a381(r899,l5)))  -- assign reg 31
      Popping a854(r896,l0: a734(r896,l1: a374(r896,l5)))  -- assign reg 30
      Popping a858(r895,l0: a738(r895,l1: a378(r895,l5)))  -- assign reg 30
      Popping a863(r894,l0: a743(r894,l1: a383(r894,l5)))  -- assign reg 30
      Popping a868(r887,l0: a748(r887,l1: a388(r887,l5)))  -- assign reg 31
      Popping a871(r886,l0: a751(r886,l1: a391(r886,l5)))  -- assign reg 31
      Popping a872(r885,l0: a752(r885,l1: a392(r885,l5)))  -- assign reg 31
      Popping a869(r882,l0: a749(r882,l1: a389(r882,l5)))  -- assign reg 30
      Popping a875(r881,l0: a755(r881,l1: a395(r881,l5)))  -- assign reg 30
      Popping a876(r880,l0: a756(r880,l1: a396(r880,l5)))  -- assign reg 30
      Popping a870(r877,l0: a750(r877,l1: a390(r877,l5)))  -- assign reg 29
      Popping a873(r876,l0: a753(r876,l1: a393(r876,l5)))  -- assign reg 29
      Popping a874(r875,l0: a754(r875,l1: a394(r875,l5)))  -- assign reg 29
      Popping a925(r737,l0: a805(r737,l1: a503(r737,l3)))  -- assign reg 31
      Popping a926(r1077,l0: a806(r1077,l1: a504(r1077,l3)))  -- assign reg 30
      Popping a924(r396,l0: a804(r396,l1: a502(r396,l3)))  -- assign reg 31
      Popping a932(r697,l0: a812(r697,l1: a539(r697,l2)))  -- assign reg 31
      Popping a933(r1075,l0: a813(r1075,l1: a540(r1075,l2)))  -- assign reg 30
      Popping a931(r401,l0: a811(r401,l1: a538(r401,l2)))  -- assign reg 31
      Popping a566(r346,l0: a158(r346,l1))  -- assign reg 32
      Popping a581(r279,l0: a173(r279,l1))  -- assign reg 31
      Popping a898(r830,l0: a778(r830,l1: a446(r830,l4)))  -- assign reg 31
      Popping a645(r354,l0: a237(r354,l1))  -- assign reg 33
      Popping a546(r915,l0: a138(r915,l1))  -- assign reg 32
      Popping a819(r955,l0: a699(r955,l1: a315(r955,l6)))  -- assign reg 31
      Popping a822(r954,l0: a702(r954,l1: a318(r954,l6)))  -- assign reg 31
      Popping a820(r951,l0: a700(r951,l1: a316(r951,l6)))  -- assign reg 30
      Popping a824(r950,l0: a704(r950,l1: a320(r950,l6)))  -- assign reg 30
      Popping a821(r947,l0: a701(r947,l1: a317(r947,l6)))  -- assign reg 29
      Popping a826(r946,l0: a706(r946,l1: a322(r946,l6)))  -- assign reg 29
      Popping a831(r939,l0: a711(r939,l1: a327(r939,l6)))  -- assign reg 31
      Popping a834(r938,l0: a714(r938,l1: a330(r938,l6)))  -- assign reg 31
      Popping a832(r935,l0: a712(r935,l1: a328(r935,l6)))  -- assign reg 30
      Popping a836(r934,l0: a716(r934,l1: a332(r934,l6)))  -- assign reg 30
      Popping a833(r931,l0: a713(r931,l1: a329(r931,l6)))  -- assign reg 29
      Popping a835(r930,l0: a715(r930,l1: a331(r930,l6)))  -- assign reg 29
      Popping a891(r834,l0: a771(r834,l1: a439(r834,l4)))  -- assign reg 2
      Popping a893(r1047,l0: a773(r1047,l1: a441(r1047,l4)))  -- assign reg 0
      Popping a7(r418,l0)  -- assign reg 34
      Popping a614(r397,l0: a206(r397,l1))  -- assign reg 35
      Popping a634(r403,l0: a226(r403,l1))  -- assign reg 36
      Popping a588(r393,l0: a180(r393,l1))  -- assign reg 33
      Popping a606(r398,l0: a198(r398,l1))  -- assign reg 37
      Popping a633(r402,l0: a225(r402,l1))  -- assign reg 39
      Popping a644(r420,l0: a236(r420,l1))  -- assign reg 2
      Popping a669(r341,l0: a261(r341,l1))  -- assign reg 2
      Popping a582(r216,l0: a174(r216,l1))  -- assign reg 34
      Popping a584(r347,l0: a176(r347,l1))  -- assign reg 36
      Popping a816(r1068,l0: a696(r1068,l1: a312(r1068,l6)))  -- assign reg 1
      Popping a818(r1067,l0: a698(r1067,l1: a314(r1067,l6)))  -- assign reg 0
      Popping a828(r1066,l0: a708(r1066,l1: a324(r1066,l6)))  -- assign reg 1
      Popping a830(r1065,l0: a710(r1065,l1: a326(r1065,l6)))  -- assign reg 0
      Popping a849(r1064,l0: a729(r1064,l1: a369(r1064,l5)))  -- assign reg 1
      Popping a851(r1063,l0: a731(r1063,l1: a371(r1063,l5)))  -- assign reg 0
      Popping a865(r1062,l0: a745(r1062,l1: a385(r1062,l5)))  -- assign reg 1
      Popping a867(r1061,l0: a747(r1061,l1: a387(r1061,l5)))  -- assign reg 0
      Popping a890(r1048,l0: a770(r1048,l1: a438(r1048,l4)))  -- assign reg 1
      Popping a896(r1046,l0: a776(r1046,l1: a444(r1046,l4)))  -- assign reg 0
      Popping a899(r829,l0: a779(r829,l1: a447(r829,l4)))  -- assign reg 30
      Popping a902(r828,l0: a782(r828,l1: a450(r828,l4)))  -- assign reg 30
      Popping a905(r827,l0: a785(r827,l1: a453(r827,l4)))  -- assign reg 30
      Popping a586(r348,l0: a178(r348,l1))  -- assign reg 39
      Popping a589(r423,l0: a181(r423,l1))  -- assign reg 40
      Popping a587(r365,l0: a179(r365,l1))  -- assign reg 41
      Popping a900(r824,l0: a780(r824,l1: a448(r824,l4)))  -- assign reg 29
      Popping a903(r823,l0: a783(r823,l1: a451(r823,l4)))  -- assign reg 29
      Popping a906(r822,l0: a786(r822,l1: a454(r822,l4)))  -- assign reg 29
      Popping a901(r819,l0: a781(r819,l1: a449(r819,l4)))  -- assign reg 28
      Popping a904(r818,l0: a784(r818,l1: a452(r818,l4)))  -- assign reg 28
      Popping a907(r817,l0: a787(r817,l1: a455(r817,l4)))  -- assign reg 28
      Popping a910(r815,l0: a790(r815,l1: a458(r815,l4)))  -- assign reg 30
      Popping a913(r814,l0: a793(r814,l1: a461(r814,l4)))  -- assign reg 30
      Popping a916(r813,l0: a796(r813,l1: a464(r813,l4)))  -- assign reg 30
      Popping a911(r810,l0: a791(r810,l1: a459(r810,l4)))  -- assign reg 29
      Popping a914(r809,l0: a794(r809,l1: a462(r809,l4)))  -- assign reg 29
      Popping a917(r808,l0: a797(r808,l1: a465(r808,l4)))  -- assign reg 29
      Popping a912(r805,l0: a792(r805,l1: a460(r805,l4)))  -- assign reg 28
      Popping a915(r804,l0: a795(r804,l1: a463(r804,l4)))  -- assign reg 28
      Popping a919(r803,l0: a799(r803,l1: a467(r803,l4)))  -- assign reg 28
      Popping a908(r821,l0: a788(r821,l1: a456(r821,l4)))  -- assign reg 2
      Popping a580(r349,l0: a172(r349,l1))  -- assign reg 35
      Popping a650(r183,l0: a242(r183,l1))  -- assign reg 40
      Popping a632(r362,l0: a224(r362,l1))  -- assign reg 41
      Popping a647(r404,l0: a239(r404,l1))  -- assign reg 42
      Popping a671(r360,l0: a263(r360,l1))  -- assign reg 29
      Popping a678(r682,l0: a270(r682,l1))  -- assign reg 29
      Popping a642(r193,l0: a234(r193,l1))  -- assign reg 43
      Popping a640(r222,l0: a232(r222,l1))  -- assign reg 43
      Popping a638(r743,l0: a230(r743,l1))  -- assign reg 43
      Popping a629(r340,l0: a221(r340,l1))  -- assign reg 33
      Popping a635(r1040,l0: a227(r1040,l1))  -- assign reg 0
      Popping a626(r750,l0: a218(r750,l1))  -- assign reg 33
      Popping a672(r361,l0: a264(r361,l1))  -- assign reg 28
      Popping a646(r363,l0: a238(r363,l1))  -- assign reg 29
      Popping a569(r353,l0: a161(r353,l1))  -- assign reg 33
      Popping a590(r794,l0: a182(r794,l1))  -- assign reg 33
      Popping a574(r1049,l0: a166(r1049,l1))  -- assign reg 0
      Popping a570(r1052,l0: a162(r1052,l1))  -- assign reg 0
      Popping a918(r807,l0: a798(r807,l1: a466(r807,l4)))  -- assign reg 2
      Popping a641(r195,l0: a233(r195,l1))  -- assign reg 44
      Popping a639(r221,l0: a231(r221,l1))  -- assign reg 44
      Popping a666(r201,l0: a258(r201,l1))  -- assign reg 31
      Popping a663(r704,l0: a255(r704,l1))  -- assign reg 31
      Popping a667(r1073,l0: a259(r1073,l1))  -- assign reg 31
      Popping a592(r786,l0: a184(r786,l1))  -- assign reg 31
      Popping a594(r784,l0: a186(r784,l1))  -- assign reg 31
      Popping a583(r364,l0: a175(r364,l1))  -- assign reg 42
      Popping a595(r785,l0: a187(r785,l1))  -- assign reg 31
      Popping a600(r776,l0: a192(r776,l1))  -- assign reg 3
      Popping a603(r774,l0: a195(r774,l1))  -- assign reg 3
      Popping a604(r773,l0: a196(r773,l1))  -- assign reg 31
      Popping a616(r227,l0: a208(r227,l1))  -- assign reg 3
      Popping a605(r366,l0: a197(r366,l1))  -- assign reg 30
      Popping a609(r767,l0: a201(r767,l1))  -- assign reg 3
      Popping a612(r765,l0: a204(r765,l1))  -- assign reg 3
      Popping a613(r764,l0: a205(r764,l1))  -- assign reg 31
      Popping a664(r200,l0: a256(r200,l1))  -- assign reg 30
      Popping a665(r1072,l0: a257(r1072,l1))  -- assign reg 30
      Popping a565(r369,l0: a157(r369,l1))  -- assign reg 4
      Popping a568(r1053,l0: a160(r1053,l1))  -- assign reg 31
      Popping a627(r749,l0: a219(r749,l1))  -- assign reg 31
      Popping a628(r747,l0: a220(r747,l1))  -- assign reg 31
      Popping a923(r741,l0: a803(r741,l1: a501(r741,l3)))  -- assign reg 1
      Popping a930(r701,l0: a810(r701,l1: a537(r701,l2)))  -- assign reg 1
      Popping a643(r986,l0: a235(r986,l1))  -- assign reg 0
      Popping a668(r988,l0: a260(r988,l1))  -- assign reg 0
      Popping a618(r752,l0: a210(r752,l1))  -- assign reg 30
      Popping a674(r359,l0: a266(r359,l1))  -- assign reg 33
      Popping a657(r716,l0: a249(r716,l1))  -- assign reg 3
      Popping a656(r720,l0: a248(r720,l1))  -- assign reg 8
      Popping a648(r220,l0: a240(r220,l1))  -- assign reg 3
      Popping a673(r199,l0: a265(r199,l1))  -- assign reg 4
      Popping a617(r748,l0: a209(r748,l1))  -- assign reg 5
      Popping a558(r857,l0: a150(r857,l1))  -- assign reg 31
      Popping a559(r1059,l0: a151(r1059,l1))  -- assign reg 0
      Popping a560(r1058,l0: a152(r1058,l1))  -- assign reg 0
      Popping a561(r1057,l0: a153(r1057,l1))  -- assign reg 0
      Popping a563(r1056,l0: a155(r1056,l1))  -- assign reg 0
      Popping a564(r1055,l0: a156(r1055,l1))  -- assign reg 16
      Popping a567(r1054,l0: a159(r1054,l1))  -- assign reg 16
      Popping a591(r1045,l0: a183(r1045,l1))  -- assign reg 0
      Popping a593(r787,l0: a185(r787,l1))  -- assign reg 30
      Popping a601(r778,l0: a193(r778,l1))  -- assign reg 2
      Popping a602(r777,l0: a194(r777,l1))  -- assign reg 2
      Popping a610(r769,l0: a202(r769,l1))  -- assign reg 2
      Popping a611(r768,l0: a203(r768,l1))  -- assign reg 2
      Popping a615(r763,l0: a207(r763,l1))  -- assign reg 31
      Popping a620(r759,l0: a212(r759,l1))  -- assign reg 33
      Popping a621(r757,l0: a213(r757,l1))  -- assign reg 33
      Popping a625(r751,l0: a217(r751,l1))  -- assign reg 29
      Popping a630(r1041,l0: a222(r1041,l1))  -- assign reg 16
      Popping a636(r1039,l0: a228(r1039,l1))  -- assign reg 0
      Popping a637(r1038,l0: a229(r1038,l1))  -- assign reg 0
      Popping a659(r1035,l0: a251(r1035,l1))  -- assign reg 0
      Popping a660(r1034,l0: a252(r1034,l1))  -- assign reg 0
      Popping a661(r1033,l0: a253(r1033,l1))  -- assign reg 0
      Popping a662(r1032,l0: a254(r1032,l1))  -- assign reg 0
      Popping a670(r703,l0: a262(r703,l1))  -- assign reg 31
      Popping a677(r688,l0: a269(r688,l1))  -- assign reg 3
      Popping a676(r692,l0: a268(r692,l1))  -- assign reg 3
      Popping a681(r674,l0: a273(r674,l1))  -- assign reg 0
      Popping a682(r672,l0: a274(r672,l1))  -- assign reg 0
      Popping a683(r1030,l0: a275(r1030,l1))  -- assign reg 0
      Popping a684(r664,l0: a276(r664,l1))  -- assign reg 31
      Popping a685(r1029,l0: a277(r1029,l1))  -- assign reg 16
      Popping a692(r1022,l0: a284(r1022,l1))  -- assign reg 0
      Popping a694(r1021,l0: a286(r1021,l1))  -- assign reg 2
      Popping a695(r1020,l0: a287(r1020,l1))  -- assign reg 0
      Popping a543(r1070,l0: a135(r1070,l1))  -- assign reg 16
      Popping a544(r1069,l0: a136(r1069,l1))  -- assign reg 0
      Popping a655(r721,l0: a247(r721,l1))  -- assign reg 31
      Popping a572(r1051,l0: a164(r1051,l1))  -- assign reg 0
      Popping a573(r1050,l0: a165(r1050,l1))  -- assign reg 6
      Popping a688(r1026,l0: a280(r1026,l1))  -- assign reg 0
      Popping a689(r1025,l0: a281(r1025,l1))  -- assign reg 6
      Popping a599(r1043,l0: a191(r1043,l1))  -- assign reg 0
      Popping a608(r1042,l0: a200(r1042,l1))  -- assign reg 0
      Popping a619(r760,l0: a211(r760,l1))  -- assign reg 31
      Popping a622(r756,l0: a214(r756,l1))  -- assign reg 31
      Popping a623(r755,l0: a215(r755,l1))  -- assign reg 40
      Popping a624(r754,l0: a216(r754,l1))  -- assign reg 31
      Popping a658(r1036,l0: a250(r1036,l1))  -- assign reg 0
      Popping a675(r695,l0: a267(r695,l1))  -- assign reg 31
      Popping a679(r681,l0: a271(r681,l1))  -- assign reg 31
      Popping a680(r1031,l0: a272(r1031,l1))  -- assign reg 0
      Popping a653(r729,l0: a245(r729,l1))  -- assign reg 0
      Popping a654(r727,l0: a246(r727,l1))  -- assign reg 0
      Popping a690(r1024,l0: a282(r1024,l1))  -- assign reg 0
      Popping a691(r1023,l0: a283(r1023,l1))  -- assign reg 0
      Popping a65(r342,l0)  -- assign reg 4
      Popping a63(r590,l0)  -- assign reg 4
      Popping a49(r343,l0)  -- assign reg 5
      Popping a55(r591,l0)  -- assign reg 3
      Popping a61(r595,l0)  -- assign reg 4
      Popping a26(r410,l0)  -- assign reg 32
      Popping a15(r171,l0)  -- assign reg 3
      Popping a20(r357,l0)  -- assign reg 32
      Popping a19(r636,l0)  -- assign reg 32
      Popping a50(r606,l0)  -- assign reg 32
      Popping a686(r1028,l0: a278(r1028,l1))  -- assign reg 0
      Popping a687(r1027,l0: a279(r1027,l1))  -- assign reg 0
      Popping a29(r413,l0)  -- assign reg 33
      Popping a22(r169,l0)  -- assign reg 3
      Popping a25(r358,l0)  -- assign reg 33
      Popping a24(r634,l0)  -- assign reg 33
      Popping a32(r628,l0)  -- assign reg 33
      Popping a103(r125,l0)  -- assign reg 32
      Popping a109(r1004,l0)  -- assign reg 0
      Popping a113(r1000,l0)  -- assign reg 0
      Popping a48(r609,l0)  -- assign reg 5
      Popping a40(r973,l0)  -- assign reg 6
      Popping a47(r611,l0)  -- assign reg 5
      Popping a17(r630,l0)  -- assign reg 0
      Popping a84(r556,l0)  -- assign reg 3
      Popping a76(r569,l0)  -- assign reg 6
      Popping a77(r557,l0)  -- assign reg 3
      Popping a82(r561,l0)  -- assign reg 3
      Popping a597(r1044,l0: a189(r1044,l1))  -- assign reg 0
      Popping a607(r772,l0: a199(r772,l1))  -- assign reg 31
      Popping a649(r734,l0: a241(r734,l1))  -- assign reg 31
      Popping a651(r735,l0: a243(r735,l1))  -- assign reg 8
      Popping a652(r1037,l0: a244(r1037,l1))  -- assign reg 0
      Popping a39(r622,l0)  -- assign reg 6
      Popping a28(r409,l0)  -- assign reg 34
      Popping a67(r1013,l0)  -- assign reg 34
      Popping a52(r1016,l0)  -- assign reg 16
      Popping a53(r1015,l0)  -- assign reg 16
      Popping a30(r412,l0)  -- assign reg 35
      Popping a66(r1014,l0)  -- assign reg 16
      Popping a34(r1018,l0)  -- assign reg 16
      Popping a36(r1017,l0)  -- assign reg 16
      Popping a98(r538,l0)  -- assign reg 3
      Popping a90(r539,l0)  -- assign reg 3
      Popping a96(r543,l0)  -- assign reg 3
      Popping a56(r598,l0)  -- assign reg 2
      Popping a57(r585,l0)  -- assign reg 2
      Popping a59(r589,l0)  -- assign reg 2
      Popping a91(r546,l0)  -- assign reg 2
      Popping a92(r533,l0)  -- assign reg 2
      Popping a94(r537,l0)  -- assign reg 2
      Popping a45(r612,l0)  -- assign reg 3
      Popping a44(r616,l0)  -- assign reg 3
      Popping a64(r587,l0)  -- assign reg 3
      Popping a62(r592,l0)  -- assign reg 3
      Popping a81(r559,l0)  -- assign reg 2
      Popping a80(r563,l0)  -- assign reg 2
      Popping a99(r535,l0)  -- assign reg 2
      Popping a95(r534,l0)  -- assign reg 1
      Popping a97(r540,l0)  -- assign reg 2
      Popping a16(r640,l0)  -- assign reg 2
      Popping a21(r637,l0)  -- assign reg 2
      Popping a31(r1019,l0)  -- assign reg 0
      Popping a69(r1012,l0)  -- assign reg 0
      Popping a100(r1009,l0)  -- assign reg 0
      Popping a117(r996,l0)  -- assign reg 0
      Popping a118(r483,l0)  -- assign reg 31
      Popping a119(r481,l0)  -- assign reg 30
      Popping a596(r783,l0: a188(r783,l1))  -- assign reg 31
      Popping a38(r615,l0)  -- assign reg 3
      Popping a43(r619,l0)  -- assign reg 2
      Popping a41(r610,l0)  -- assign reg 5
      Popping a46(r614,l0)  -- assign reg 2
      Popping a75(r562,l0)  -- assign reg 2
      Popping a79(r566,l0)  -- assign reg 1
      Popping a101(r408,l0)  -- assign reg 16
      Popping a104(r1007,l0)  -- assign reg 16
      Popping a102(r1008,l0)  -- assign reg 16
      Popping a27(r632,l0)  -- assign reg 31
      Popping a35(r160,l0)  -- assign reg 33
      Popping a68(r411,l0)  -- assign reg 32
      Popping a106(r519,l0)  -- assign reg 4
      Popping a107(r1005,l0)  -- assign reg 0
      Popping a18(r642,l0)  -- assign reg 1
      Popping a23(r639,l0)  -- assign reg 1
      Popping a37(r624,l0)  -- assign reg 3
      Popping a42(r621,l0)  -- assign reg 2
      Popping a54(r600,l0)  -- assign reg 3
      Popping a58(r597,l0)  -- assign reg 1
      Popping a60(r586,l0)  -- assign reg 1
      Popping a70(r154,l0)  -- assign reg 31
      Popping a71(r576,l0)  -- assign reg 31
      Popping a74(r571,l0)  -- assign reg 3
      Popping a78(r568,l0)  -- assign reg 1
      Popping a83(r558,l0)  -- assign reg 1
      Popping a85(r146,l0)  -- assign reg 31
      Popping a86(r553,l0)  -- assign reg 31
      Popping a89(r548,l0)  -- assign reg 3
      Popping a93(r545,l0)  -- assign reg 1
      Popping a110(r1003,l0)  -- assign reg 0
      Popping a112(r1001,l0)  -- assign reg 0
      Popping a114(r999,l0)  -- assign reg 0
      Popping a116(r997,l0)  -- assign reg 0
      Popping a105(r1006,l0)  -- assign reg 16
      Popping a108(r521,l0)  -- assign reg 3
      Popping a33(r627,l0)  -- assign reg 31
      Popping a51(r605,l0)  -- assign reg 31
      Popping a72(r575,l0)  -- assign reg 30
      Popping a73(r1011,l0)  -- assign reg 16
      Popping a87(r552,l0)  -- assign reg 30
      Popping a88(r1010,l0)  -- assign reg 16
      Popping a111(r1002,l0)  -- assign reg 0
      Popping a115(r998,l0)  -- assign reg 0
Assigning 36 to a582r216

  Loop 1 (parent 0, header bb41, depth 1)
    bbs: 102 101 99(->100:l6) 97 96(->98:l5) 95 93(->94:l0) 92 91 90 89 88 81(->82:l4) 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65(->59:l3) 64 62 58 57 56 55 54(->48:l2) 53 51 47 46 45 44 43 42 41
    all: 120r339 121r355 122r356 123r416 124r418 125r463 126r967 127r970 128r971 129r972 130r987 131r989 132r990 133r992 134r993 135r1070 136r1069 137r979 138r915 139r368 140r370 141r372 142r373 143r374 144r375 145r389 146r968 147r969 148r981 149r860 150r857 151r1059 152r1058 153r1057 154r371 155r1056 156r1055 157r369 158r346 159r1054 160r1053 161r353 162r1052 163r283 164r1051 165r1050 166r1049 167r984 168r394 169r983 170r982 171r429 172r349 173r279 174r216 175r364 176r347 177r173 178r348 179r365 180r393 181r423 182r794 183r1045 184r786 185r787 186r784 187r785 188r783 189r1044 190r181 191r1043 192r776 193r778 194r777 195r774 196r773 197r366 198r398 199r772 200r1042 201r767 202r769 203r768 204r765 205r764 206r397 207r763 208r227 209r748 210r752 211r760 212r759 213r757 214r756 215r755 216r754 217r751 218r750 219r749 220r747 221r340 222r1041 223r345 224r362 225r402 226r403 227r1040 228r1039 229r1038 230r743 231r221 232r222 233r195 234r193 235r986 236r420 237r354 238r363 239r404 240r220 241r734 242r183 243r735 244r1037 245r729 246r727 247r721 248r720 249r716 250r1036 251r1035 252r1034 253r1033 254r1032 255r704 256r200 257r1072 258r201 259r1073 260r988 261r341 262r703 263r360 264r361 265r199 266r359 267r695 268r692 269r688 270r682 271r681 272r1031 273r674 274r672 275r1030 276r664 277r1029 278r1028 279r1027 280r1026 281r1025 282r1024 283r1023 284r1022 285r651 286r1021 287r1020 696r1068 697r957 698r1067 699r955 700r951 701r947 702r954 703r928 704r950 705r457 706r946 707r452 708r1066 709r941 710r1065 711r939 712r935 713r931 714r938 715r930 716r934 717r925 718r924 719r919 720r923 721r922 722r918 723r917 724r921 725r916 726r475 727r914 728r913 729r1064 730r908 731r1063 732r906 733r901 734r896 735r380 736r905 737r900 738r895 739r904 740r873 741r899 742r309 743r894 744r314 745r1062 746r889 747r1061 748r887 749r882 750r877 751r886 752r885 753r876 754r875 755r881 756r880 757r1060 758r870 759r869 760r864 761r868 762r867 763r863 764r862 765r866 766r861 767r296 768r859 769r858 770r1048 771r834 772r833 773r1047 774r350 775r352 776r1046 777r351 778r830 779r829 780r824 781r819 782r828 783r823 784r818 785r827 786r822 787r817 788r821 789r801 790r815 791r810 792r805 793r814 794r809 795r804 796r813 797r808 798r807 799r803 800r798 801r796 802r395 803r741 804r396 805r737 806r1077 807r736 808r1076 809r400 810r701 811r401 812r697 813r1075 814r696 815r1074
    modified regnos: 173 181 183 193 195 199 200 201 216 220 221 222 227 279 283 296 309 314 339 340 341 345 346 347 348 349 350 351 352 353 354 359 360 361 362 363 364 365 366 368 369 370 371 372 373 374 375 380 389 393 394 395 396 397 398 400 401 402 403 404 416 418 420 423 429 452 457 463 475 651 664 672 674 681 682 688 692 695 696 697 701 703 704 716 720 721 727 729 734 735 736 737 741 743 747 748 749 750 751 752 754 755 756 757 759 760 763 764 765 767 768 769 772 773 774 776 777 778 783 784 785 786 787 794 796 798 801 803 804 805 807 808 809 810 813 814 815 817 818 819 821 822 823 824 827 828 829 830 833 834 857 858 859 860 861 862 863 864 866 867 868 869 870 873 875 876 877 880 881 882 885 886 887 889 894 895 896 899 900 901 904 905 906 908 913 914 915 916 917 918 919 921 922 923 924 925 928 930 931 934 935 938 939 941 946 947 950 951 954 955 957 968 969 979 981 982 983 984 986 988 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1072 1073 1074 1075 1076 1077
    border: 120r339 121r355 122r356 123r416 124r418 125r463 126r967 127r970 128r971 129r972 130r987 131r989 132r990 133r992 134r993
    Pressure: GENERAL_REGS=34 VFP_LO_REGS=15
 Removing pref92:hr2@1780
 Removing pref97:hr0@4450
 Removing pref90:hr0@1780
 Removing pref106:hr2@1780
 Removing pref41:hr0@220
 Removing pref47:hr0@64
 Removing pref51:hr0@64
 Removing pref116:hr2@890
 Removing pref55:hr0@558
 Removing pref79:hr0@64
 Removing pref86:hr0@220
 Removing pref190:hr2@890
 Removing pref182:hr2@890
 Removing pref208:hr2@890
 Removing pref200:hr2@890
 Removing pref222:hr0@890
 Removing pref218:hr0@890
 Removing pref216:hr1@890
 Removing pref214:hr2@890
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14 16-37 39-47)@10282
          2:( 16-32 40-47)@103240
          3:( 0-12 14)@1260815
            4:( 0-1 3-12 14)@587400
              5:( 0-1 3-12)@192538
                6:( 3-11)@143000
                  7:( 4-11)@1759772
                    8:( 4-10)@166020
      Allocno a121r355 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a122r356 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a123r416 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a125r463 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a126r967 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a127r970 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a135r1070 of ALL_REGS(46) has 31 avail. regs  16-37 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a136r1069 of ALL_REGS(46) has 45 avail. regs  0-12 14 16-37 39-47, node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a137r979 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a139r368 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-16 48-106)
      Allocno a145r389 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a146r968 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a147r969 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a148r981 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-16 48-106),  obj 1 (confl regs =  0-3 12-16 48-106)
      Allocno a151r1059 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a152r1058 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a153r1057 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a154r371 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a155r1056 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a157r369 of GENERAL_REGS(14) has 12 avail. regs  0-11, ^node:  0-12 14 (confl regs =  12-106)
      Allocno a159r1054 of ALL_REGS(46) has 30 avail. regs  16-31 33-37 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a162r1052 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a163r283 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-106),  obj 1 (confl regs =  0-3 12-106)
      Allocno a164r1051 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a165r1050 of ALL_REGS(46) has 11 avail. regs  2-12, ^node:  0-12 14 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a166r1049 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a167r984 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a168r394 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a169r983 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a170r982 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a171r429 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a177r173 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a183r1045 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a189r1044 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a190r181 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-17 48-106),  obj 1 (confl regs =  0-3 12-17 48-106)
      Allocno a191r1043 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a192r776 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a193r778 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a194r777 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a195r774 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-31 34-35 37 43-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a200r1042 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a201r767 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a202r769 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a203r768 of GENERAL_REGS(14) has 12 avail. regs  2-12 14, ^node:  0-12 14 (confl regs =  0-1 13 15-106)
      Allocno a204r765 of ALL_REGS(46) has 36 avail. regs  2-12 14 16-31 34-35 37 43-47, ^node:  0-12 14 16-37 39-47 (confl regs =  0-1 13 15 48-106)
      Allocno a208r227 of ALL_REGS(46) has 33 avail. regs  0-12 14 16-28 34 43-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a209r748 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a220r747 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-28 31 34 39-41 43-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a222r1041 of ALL_REGS(46) has 25 avail. regs  16-31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a223r345 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a227r1040 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a228r1039 of ALL_REGS(46) has 37 avail. regs  0-12 16-31 33 40 42-47, ^node:  0-12 14 16-37 39-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a229r1038 of ALL_REGS(46) has 37 avail. regs  0-12 16-31 33 40 42-47, ^node:  0-12 14 16-37 39-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a235r986 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a236r420 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a240r220 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a243r735 of ALL_REGS(46) has 35 avail. regs  0-12 14 16-31 37 42 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a244r1037 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a245r729 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a246r727 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a248r720 of ALL_REGS(46) has 34 avail. regs  0-12 14 16-28 30-31 35 37 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a249r716 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a250r1036 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a251r1035 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a252r1034 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a253r1033 of ALL_REGS(46) has 35 avail. regs  0-12 16-31 35 37 41 45-47, ^node:  0-12 14 16-37 39-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a254r1032 of ALL_REGS(46) has 35 avail. regs  0-12 16-31 35 37 41 45-47, ^node:  0-12 14 16-37 39-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a260r988 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a261r341 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a265r199 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a268r692 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-27 30-31 35-37 39 41 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a269r688 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a270r682 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-31 35 37 41 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a272r1031 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a273r674 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a274r672 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a275r1030 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a277r1029 of ALL_REGS(46) has 29 avail. regs  16-31 33 35-37 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a278r1028 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a279r1027 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a280r1026 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a281r1025 of ALL_REGS(46) has 11 avail. regs  2-12, ^node:  0-12 14 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a282r1024 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a283r1023 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a284r1022 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a285r651 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a286r1021 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a287r1020 of ALL_REGS(46) has 13 avail. regs  0-12, ^node:  0-12 14 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a696r1068 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a697r957 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a698r1067 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a702r954 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-28 31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a703r928 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a704r950 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-28 30-31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a705r457 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a706r946 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a707r452 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a708r1066 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a709r941 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a710r1065 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a714r938 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-28 31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a715r930 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-29 31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a716r934 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a717r925 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a718r924 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a719r919 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a720r923 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a722r918 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 39-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a729r1064 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a730r908 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a731r1063 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a739r904 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-29 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a740r873 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a741r899 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-29 31 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a742r309 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a743r894 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-31 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a744r314 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a745r1062 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a746r889 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a747r1061 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a752r885 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-28 31 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a754r875 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-29 31 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a756r880 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-31 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a757r1060 of ALL_REGS(46) has 25 avail. regs  16-32 40-47, node:  16-32 40-47 (confl regs =  13 15 48-106)
      Allocno a758r870 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a759r869 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a760r864 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a761r868 of ALL_REGS(46) has 38 avail. regs  0-12 14 17-32 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15-16 48-106)
      Allocno a763r863 of ALL_REGS(46) has 37 avail. regs  0-12 14 17-30 32 40-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15-16 48-106)
      Allocno a770r1048 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a771r834 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a772r833 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a773r1047 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a774r350 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a775r352 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a776r1046 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a777r351 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a785r827 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-27 30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a786r822 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-27 29-30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a787r817 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a788r821 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a789r801 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a796r813 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-27 30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a797r808 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-27 29-30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a798r807 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a799r803 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a800r798 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a801r796 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a802r395 of ALL_REGS(46) has 31 avail. regs  0-12 14 16-28 40 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a803r741 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a809r400 of ALL_REGS(46) has 32 avail. regs  0-12 14 16-27 35 37 41 45-47, ^node:  0-12 14 16-37 39-47 (confl regs =  13 15 48-106)
      Allocno a810r701 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Forming thread by copy 349:a789r801-a800r798 (freq=222):
        Result (freq=5338): a789r801(2668) a800r798(2670)
      Forming thread by copy 285:a722r918-a723r917 (freq=111):
        Result (freq=3560): a722r918(1780) a723r917(1780)
      Forming thread by copy 286:a719r919-a722r918 (freq=111):
        Result (freq=5340): a719r919(1780) a722r918(1780) a723r917(1780)
      Forming thread by copy 287:a720r923-a721r922 (freq=111):
        Result (freq=3560): a720r923(1780) a721r922(1780)
      Forming thread by copy 288:a718r924-a720r923 (freq=111):
        Result (freq=5340): a718r924(1780) a720r923(1780) a721r922(1780)
      Forming thread by copy 289:a717r925-a718r924 (freq=111):
        Result (freq=8010): a717r925(2670) a718r924(1780) a720r923(1780) a721r922(1780)
      Forming thread by copy 304:a763r863-a764r862 (freq=111):
        Result (freq=3560): a763r863(1780) a764r862(1780)
      Forming thread by copy 305:a760r864-a763r863 (freq=111):
        Result (freq=5340): a760r864(1780) a763r863(1780) a764r862(1780)
      Forming thread by copy 306:a761r868-a762r867 (freq=111):
        Result (freq=3560): a761r868(1780) a762r867(1780)
      Forming thread by copy 307:a759r869-a761r868 (freq=111):
        Result (freq=5340): a759r869(1780) a761r868(1780) a762r867(1780)
      Forming thread by copy 308:a758r870-a759r869 (freq=111):
        Result (freq=8010): a758r870(2670) a759r869(1780) a761r868(1780) a762r867(1780)
      Forming thread by copy 329:a771r834-a773r1047 (freq=111):
        Result (freq=3560): a771r834(1780) a773r1047(1780)
      Forming thread by copy 348:a800r798-a801r796 (freq=111):
        Result (freq=7118): a789r801(2668) a801r796(1780) a800r798(2670)
      Forming thread by copy 351:a802r395-a807r736 (freq=111):
        Result (freq=3691): a802r395(1911) a807r736(1780)
      Forming thread by copy 355:a809r400-a814r696 (freq=111):
        Result (freq=3691): a809r400(1911) a814r696(1780)
      Forming thread by copy 63:a157r369-a160r1053 (freq=110):
        Result (freq=440): a157r369(220) a160r1053(220)
      Forming thread by copy 112:a248r720-a249r716 (freq=10):
        Result (freq=328): a248r720(164) a249r716(164)
      Forming thread by copy 81:a195r774-a196r773 (freq=6):
        Result (freq=330): a195r774(220) a196r773(110)
      Forming thread by copy 82:a192r776-a195r774 (freq=6):
        Result (freq=550): a192r776(220) a195r774(220) a196r773(110)
      Forming thread by copy 83:a193r778-a194r777 (freq=6):
        Result (freq=220): a193r778(110) a194r777(110)
      Forming thread by copy 85:a204r765-a205r764 (freq=6):
        Result (freq=330): a204r765(220) a205r764(110)
      Forming thread by copy 86:a201r767-a204r765 (freq=6):
        Result (freq=550): a201r767(220) a204r765(220) a205r764(110)
      Forming thread by copy 87:a202r769-a203r768 (freq=6):
        Result (freq=220): a202r769(110) a203r768(110)
      Forming thread by copy 120:a268r692-a269r688 (freq=6):
        Result (freq=220): a268r692(110) a269r688(110)
      Forming thread by copy 122:a273r674-a274r672 (freq=6):
        Result (freq=220): a273r674(110) a274r672(110)
      Forming thread by copy 107:a245r729-a246r727 (freq=3):
        Result (freq=108): a245r729(54) a246r727(54)
      Pushing a244(r1037,l1)(cost 0)
      Pushing a243(r735,l1)(cost 0)
      Pushing a189(r1044,l1)(cost 0)
      Pushing a279(r1027,l1)(cost 0)
      Pushing a278(r1028,l1)(cost 0)
      Pushing a162(r1052,l1)(cost 0)
      Pushing a283(r1023,l1)(cost 0)
      Pushing a282(r1024,l1)(cost 0)
      Pushing a166(r1049,l1)(cost 0)
      Pushing a246(r727,l1)(cost 0)
      Pushing a245(r729,l1)(cost 0)
      Pushing a272(r1031,l1)(cost 0)
      Pushing a270(r682,l1)(cost 0)
      Pushing a250(r1036,l1)(cost 0)
      Pushing a200(r1042,l1)(cost 0)
      Pushing a191(r1043,l1)(cost 0)
      Pushing a281(r1025,l1)(cost 0)
      Pushing a280(r1026,l1)(cost 0)
      Pushing a165(r1050,l1)(cost 0)
      Pushing a164(r1051,l1)(cost 0)
      Pushing a136(r1069,l1)(cost 0)
      Pushing a135(r1070,l1)(cost 0)
      Pushing a287(r1020,l1)(cost 0)
      Pushing a286(r1021,l1)(cost 0)
      Pushing a284(r1022,l1)(cost 0)
      Pushing a277(r1029,l1)(cost 0)
      Pushing a275(r1030,l1)(cost 0)
      Pushing a274(r672,l1)(cost 0)
      Pushing a273(r674,l1)(cost 0)
      Pushing a268(r692,l1)(cost 0)
      Pushing a269(r688,l1)(cost 0)
      Pushing a254(r1032,l1)(cost 0)
      Pushing a253(r1033,l1)(cost 0)
      Pushing a252(r1034,l1)(cost 0)
      Pushing a251(r1035,l1)(cost 0)
      Pushing a229(r1038,l1)(cost 0)
      Pushing a228(r1039,l1)(cost 0)
      Pushing a227(r1040,l1)(cost 0)
      Pushing a222(r1041,l1)(cost 0)
      Pushing a220(r747,l1)(cost 0)
      Pushing a203(r768,l1)(cost 0)
      Pushing a202(r769,l1)(cost 0)
      Pushing a194(r777,l1)(cost 0)
      Pushing a193(r778,l1)(cost 0)
      Pushing a183(r1045,l1)(cost 0)
      Pushing a159(r1054,l1)(cost 0)
      Pushing a155(r1056,l1)(cost 0)
      Forming thread by copy 65:a154r371-a156r1055 (freq=110):
        Result (freq=440): a154r371(220) a156r1055(220)
        Making a154(r371,l1) colorable
      Pushing a153(r1057,l1)(cost 0)
      Pushing a152(r1058,l1)(cost 0)
      Pushing a151(r1059,l1)(cost 0)
      Pushing a209(r748,l1)(cost 0)
      Pushing a265(r199,l1)(cost 0)
      Pushing a240(r220,l1)(cost 0)
      Pushing a248(r720,l1)(cost 0)
      Pushing a249(r716,l1)(cost 0)
      Pushing a208(r227,l1)(cost 0)
      Pushing a260(r988,l1)(cost 0)
      Pushing a235(r986,l1)(cost 0)
      Pushing a810(r701,l1: a537(r701,l2))(cost 0)
      Pushing a803(r741,l1: a501(r741,l3))(cost 0)
      Pushing a157(r369,l1)(cost 0)
      Pushing a154(r371,l1)(cost 3410)
      Pushing a204(r765,l1)(cost 0)
      Pushing a201(r767,l1)(cost 0)
      Pushing a195(r774,l1)(cost 0)
      Pushing a192(r776,l1)(cost 0)
      Pushing a799(r803,l1: a467(r803,l4))(cost 0)
      Pushing a797(r808,l1: a465(r808,l4))(cost 0)
      Pushing a796(r813,l1: a464(r813,l4))(cost 0)
      Pushing a787(r817,l1: a455(r817,l4))(cost 0)
      Pushing a786(r822,l1: a454(r822,l4))(cost 0)
      Pushing a785(r827,l1: a453(r827,l4))(cost 0)
      Pushing a798(r807,l1: a466(r807,l4))(cost 0)
      Pushing a788(r821,l1: a456(r821,l4))(cost 0)
      Pushing a776(r1046,l1: a444(r1046,l4))(cost 0)
      Pushing a770(r1048,l1: a438(r1048,l4))(cost 0)
      Pushing a757(r1060,l1: a397(r1060,l5))(cost 0)
      Pushing a756(r880,l1: a396(r880,l5))(cost 0)
      Pushing a754(r875,l1: a394(r875,l5))(cost 0)
      Pushing a752(r885,l1: a392(r885,l5))(cost 0)
      Pushing a747(r1061,l1: a387(r1061,l5))(cost 0)
      Pushing a745(r1062,l1: a385(r1062,l5))(cost 0)
      Pushing a743(r894,l1: a383(r894,l5))(cost 0)
      Pushing a741(r899,l1: a381(r899,l5))(cost 0)
      Pushing a739(r904,l1: a379(r904,l5))(cost 0)
      Pushing a731(r1063,l1: a371(r1063,l5))(cost 0)
      Pushing a729(r1064,l1: a369(r1064,l5))(cost 0)
      Pushing a716(r934,l1: a332(r934,l6))(cost 0)
      Pushing a715(r930,l1: a331(r930,l6))(cost 0)
      Pushing a714(r938,l1: a330(r938,l6))(cost 0)
      Pushing a710(r1065,l1: a326(r1065,l6))(cost 0)
      Pushing a708(r1066,l1: a324(r1066,l6))(cost 0)
      Pushing a706(r946,l1: a322(r946,l6))(cost 0)
      Pushing a704(r950,l1: a320(r950,l6))(cost 0)
      Pushing a702(r954,l1: a318(r954,l6))(cost 0)
      Pushing a698(r1067,l1: a314(r1067,l6))(cost 0)
      Pushing a696(r1068,l1: a312(r1068,l6))(cost 0)
      Pushing a261(r341,l1)(cost 0)
      Pushing a236(r420,l1)(cost 0)
      Pushing a773(r1047,l1: a441(r1047,l4))(cost 0)
      Pushing a771(r834,l1: a439(r834,l4))(cost 0)
      Pushing a809(r400,l1: a536(r400,l2))(cost 0)
      Pushing a802(r395,l1: a500(r395,l3))(cost 0)
      Pushing a763(r863,l1: a403(r863,l5))(cost 0)
      Pushing a760(r864,l1: a400(r864,l5))(cost 0)
      Pushing a722(r918,l1: a338(r918,l6))(cost 0)
      Pushing a719(r919,l1: a335(r919,l6))(cost 0)
      Pushing a801(r796,l1: a469(r796,l4))(cost 0)
      Pushing a789(r801,l1: a457(r801,l4))(cost 0)
      Pushing a800(r798,l1: a468(r798,l4))(cost 0)
      Pushing a761(r868,l1: a401(r868,l5))(cost 0)
      Pushing a759(r869,l1: a399(r869,l5))(cost 0)
      Pushing a758(r870,l1: a398(r870,l5))(cost 0)
      Pushing a720(r923,l1: a336(r923,l6))(cost 0)
      Pushing a718(r924,l1: a334(r924,l6))(cost 0)
      Pushing a717(r925,l1: a333(r925,l6))(cost 0)
      Pushing a121(r355,l1)(potential spill: pri=1, cost=1350)
      Pushing a127(r970,l1)(potential spill: pri=1, cost=1790)
      Forming thread by copy 119:a223r345-a265r199 (freq=65):
        Result (freq=491): a223r345(164) a265r199(327)
      Forming thread by copy 118:a223r345-a261r341 (freq=44):
        Result (freq=3117): a223r345(164) a261r341(2626) a265r199(327)
        Making a223(r345,l1) colorable
      Pushing a223(r345,l1)(cost 1640)
      Forming thread by copy 109:a123r416-a243r735 (freq=3):
        Result (freq=918): a123r416(864) a243r735(54)
        Making a123(r416,l1) colorable
      Pushing a123(r416,l1)(cost 7242)
      Forming thread by copy 131:a285r651-a287r1020 (freq=110):
        Result (freq=440): a285r651(220) a287r1020(220)
        Making a285(r651,l1) colorable
      Pushing a285(r651,l1)(cost 6380)
      Pushing a122(r356,l1)(potential spill: pri=1, cost=1920)
      Pushing a125(r463,l1)(potential spill: pri=1, cost=1920)
      Forming thread by copy 128:a190r181-a281r1025 (freq=64):
        Result (freq=713): a190r181(585) a281r1025(128)
      Forming thread by copy 130:a190r181-a282r1024 (freq=45):
        Result (freq=803): a190r181(585) a282r1024(90) a281r1025(128)
      Forming thread by copy 127:a190r181-a278r1028 (freq=32):
        Result (freq=867): a190r181(585) a278r1028(64) a282r1024(90) a281r1025(128)
        Making a190(r181,l1) colorable
      Forming thread by copy 71:a163r283-a165r1050 (freq=64):
        Result (freq=224): a163r283(96) a165r1050(128)
        Making a163(r283,l1) colorable
      Forming thread by copy 299:a697r957-a698r1067 (freq=111):
        Result (freq=3560): a697r957(1780) a698r1067(1780)
        Making a697(r957,l1: a313(r957,l6)) colorable
      Forming thread by copy 326:a730r908-a731r1063 (freq=111):
        Result (freq=3560): a730r908(1780) a731r1063(1780)
        Making a730(r908,l1: a370(r908,l5)) colorable
      Pushing a163(r283,l1)(cost 1344)
      Pushing a190(r181,l1)(cost 17772)
      Pushing a730(r908,l1: a370(r908,l5))(cost 51620)
      Pushing a697(r957,l1: a313(r957,l6))(cost 51620)
      Pushing a126(r967,l1)(potential spill: pri=2, cost=3020)
      Pushing a167(r984,l1)(potential spill: pri=31, cost=16990)
      Pushing a170(r982,l1)(potential spill: pri=48, cost=6890)
      Pushing a177(r173,l1)(potential spill: pri=50, cost=19440)
      Forming thread by copy 338:a777r351-a779r829 (freq=37):
        Result (freq=2519): a777r351(1927) a779r829(592)
      Forming thread by copy 347:a777r351-a790r815 (freq=37):
        Result (freq=3111): a777r351(1927) a790r815(592) a779r829(592)
        Making a777(r351,l1: a445(r351,l4)) colorable
      Pushing a777(r351,l1: a445(r351,l4))(cost 21070)
      Pushing a148(r981,l1)(potential spill: pri=54, cost=33010)
      Forming thread by copy 310:a740r873-a758r870 (freq=222):
        Result (freq=12460): a740r873(4450) a758r870(2670) a759r869(1780) a761r868(1780) a762r867(1780)
        Making a740(r873,l1: a380(r873,l5)) colorable
        Making a742(r309,l1: a382(r309,l5)) colorable
      Forming thread by copy 318:a746r889-a747r1061 (freq=111):
        Result (freq=3560): a746r889(1780) a747r1061(1780)
        Making a746(r889,l1: a386(r889,l5)) colorable
        Making a744(r314,l1: a384(r314,l5)) colorable
      Pushing a744(r314,l1: a384(r314,l5))(cost 26700)
      Pushing a742(r309,l1: a382(r309,l5))(cost 26700)
      Pushing a746(r889,l1: a386(r889,l5))(cost 51620)
      Pushing a740(r873,l1: a380(r873,l5))(cost 44500)
      Pushing a171(r429,l1)(potential spill: pri=58, cost=8415)
        Making a168(r394,l1) colorable
        Making a169(r983,l1) colorable
      Forming thread by copy 337:a775r352-a780r824 (freq=37):
        Result (freq=3854): a775r352(3262) a780r824(592)
      Forming thread by copy 346:a775r352-a791r810 (freq=37):
        Result (freq=4446): a775r352(3262) a791r810(592) a780r824(592)
        Making a775(r352,l1: a443(r352,l4)) colorable
      Forming thread by copy 336:a774r350-a781r819 (freq=37):
        Result (freq=2519): a774r350(1927) a781r819(592)
      Forming thread by copy 345:a774r350-a792r805 (freq=37):
        Result (freq=3111): a774r350(1927) a792r805(592) a781r819(592)
        Making a774(r350,l1: a442(r350,l4)) colorable
      Pushing a169(r983,l1)(cost 12830)
      Pushing a168(r394,l1)(cost 14320)
      Pushing a774(r350,l1: a442(r350,l4))(cost 21070)
      Forming thread by copy 328:a772r833-a776r1046 (freq=890):
        Result (freq=3560): a772r833(1780) a776r1046(1780)
        Making a772(r833,l1: a440(r833,l4)) colorable
      Pushing a772(r833,l1: a440(r833,l4))(cost 51620)
      Pushing a775(r352,l1: a443(r352,l4))(cost 34420)
      Pushing a137(r979,l1)(potential spill: pri=64, cost=33010)
        Making a146(r968,l1) colorable
        Making a147(r969,l1) colorable
      Forming thread by copy 80:a139r368-a183r1045 (freq=110):
        Result (freq=4780): a139r368(4560) a183r1045(220)
        Making a139(r368,l1) colorable
      Forming thread by copy 94:a145r389-a209r748 (freq=55):
        Result (freq=11272): a145r389(10997) a209r748(275)
      Forming thread by copy 96:a145r389-a214r756 (freq=6):
        Result (freq=11382): a145r389(10997) a214r756(110) a209r748(275)
        Making a145(r389,l1) colorable
      Forming thread by copy 291:a703r928-a717r925 (freq=222):
        Result (freq=12460): a703r928(4450) a717r925(2670) a718r924(1780) a720r923(1780) a721r922(1780)
        Making a703(r928,l1: a319(r928,l6)) colorable
        Making a705(r457,l1: a321(r457,l6)) colorable
      Forming thread by copy 295:a709r941-a710r1065 (freq=111):
        Result (freq=3560): a709r941(1780) a710r1065(1780)
        Making a709(r941,l1: a325(r941,l6)) colorable
        Making a707(r452,l1: a323(r452,l6)) colorable
      Pushing a707(r452,l1: a323(r452,l6))(cost 26700)
      Pushing a705(r457,l1: a321(r457,l6))(cost 26700)
      Pushing a709(r941,l1: a325(r941,l6))(cost 51620)
      Pushing a139(r368,l1)(cost 81200)
      Pushing a147(r969,l1)(cost 55340)
      Pushing a146(r968,l1)(cost 55340)
      Pushing a145(r389,l1)(cost 98335)
      Pushing a703(r928,l1: a319(r928,l6))(cost 44500)
      Popping a703(r928,l1: a319(r928,l6))  -- assign reg 4
      Popping a145(r389,l1)  -- assign reg 5
      Popping a146(r968,l1)  -- assign reg 6
      Popping a147(r969,l1)  -- assign reg 7
      Popping a139(r368,l1)  -- assign reg 8
      Popping a709(r941,l1: a325(r941,l6))  -- assign reg 9
      Popping a705(r457,l1: a321(r457,l6))  -- assign reg 10
      Popping a707(r452,l1: a323(r452,l6))  -- assign reg 11
      Popping a137(r979,l1)  -- spill
      Popping a775(r352,l1: a443(r352,l4))  -- assign reg 4
      Popping a772(r833,l1: a440(r833,l4))  -- assign reg 6
      Popping a774(r350,l1: a442(r350,l4))  -- assign reg 9
      Popping a168(r394,l1)  -- assign reg 10
      Popping a169(r983,l1)  -- assign reg 11
      Popping a171(r429,l1)  -- spill
      Popping a740(r873,l1: a380(r873,l5))  -- assign reg 4
      Popping a746(r889,l1: a386(r889,l5))  -- assign reg 9
      Popping a742(r309,l1: a382(r309,l5))  -- assign reg 10
      Popping a744(r314,l1: a384(r314,l5))  -- assign reg 11
      Popping a148(r981,l1)  -- spill
      Popping a777(r351,l1: a445(r351,l4))  -- assign reg 7
      Popping a177(r173,l1)  -- spill
      Popping a170(r982,l1)  -- spill
      Popping a167(r984,l1)  -- spill
      Popping a126(r967,l1)  -- spill
      Popping a697(r957,l1: a313(r957,l6))  -- assign reg 4
      Popping a730(r908,l1: a370(r908,l5))  -- assign reg 4
      Popping a190(r181,l1)  -- assign reg 6
      Popping a163(r283,l1)  -- assign reg 6
      Popping a125(r463,l1)  -- spill
      Popping a122(r356,l1)  -- spill
      Popping a285(r651,l1)  -- assign reg 4
      Popping a123(r416,l1)  -- assign reg 8
      Popping a223(r345,l1)  -- assign reg 4
      Popping a127(r970,l1)  -- spill
      Popping a121(r355,l1)  -- spill
      Popping a717(r925,l1: a333(r925,l6))  -- assign reg 4
      Popping a718(r924,l1: a334(r924,l6))  -- assign reg 4
      Popping a720(r923,l1: a336(r923,l6))  -- assign reg 4
      Popping a758(r870,l1: a398(r870,l5))  -- assign reg 4
      Popping a759(r869,l1: a399(r869,l5))  -- assign reg 4
      Popping a761(r868,l1: a401(r868,l5))  -- assign reg 4
      Popping a800(r798,l1: a468(r798,l4))  -- assign reg 3
      Popping a789(r801,l1: a457(r801,l4))  -- assign reg 3
      Popping a801(r796,l1: a469(r796,l4))  -- assign reg 3
      Popping a719(r919,l1: a335(r919,l6))  -- assign reg 3
      Popping a722(r918,l1: a338(r918,l6))  -- assign reg 4
      Popping a760(r864,l1: a400(r864,l5))  -- assign reg 3
      Popping a763(r863,l1: a403(r863,l5))  -- assign reg 4
      Popping a802(r395,l1: a500(r395,l3))  -- assign reg 3
      Popping a809(r400,l1: a536(r400,l2))  -- assign reg 3
      Popping a771(r834,l1: a439(r834,l4))  -- assign reg 2
      Popping a773(r1047,l1: a441(r1047,l4))  -- assign reg 0
      Popping a236(r420,l1)  -- assign reg 2
      Popping a261(r341,l1)  -- assign reg 2
      Popping a696(r1068,l1: a312(r1068,l6))  -- assign reg 1
      Popping a698(r1067,l1: a314(r1067,l6))  -- assign reg 0
      Popping a702(r954,l1: a318(r954,l6))  -- assign reg 31
      Popping a704(r950,l1: a320(r950,l6))  -- assign reg 30
      Popping a706(r946,l1: a322(r946,l6))  -- assign reg 29
      Popping a708(r1066,l1: a324(r1066,l6))  -- assign reg 1
      Popping a710(r1065,l1: a326(r1065,l6))  -- assign reg 0
      Popping a714(r938,l1: a330(r938,l6))  -- assign reg 31
      Popping a715(r930,l1: a331(r930,l6))  -- assign reg 29
      Popping a716(r934,l1: a332(r934,l6))  -- assign reg 30
      Popping a729(r1064,l1: a369(r1064,l5))  -- assign reg 1
      Popping a731(r1063,l1: a371(r1063,l5))  -- assign reg 0
      Popping a739(r904,l1: a379(r904,l5))  -- assign reg 16
      Popping a741(r899,l1: a381(r899,l5))  -- assign reg 31
      Popping a743(r894,l1: a383(r894,l5))  -- assign reg 30
      Popping a745(r1062,l1: a385(r1062,l5))  -- assign reg 1
      Popping a747(r1061,l1: a387(r1061,l5))  -- assign reg 0
      Popping a752(r885,l1: a392(r885,l5))  -- assign reg 31
      Popping a754(r875,l1: a394(r875,l5))  -- assign reg 29
      Popping a756(r880,l1: a396(r880,l5))  -- assign reg 30
      Popping a757(r1060,l1: a397(r1060,l5))  -- assign reg 16
      Popping a770(r1048,l1: a438(r1048,l4))  -- assign reg 1
      Popping a776(r1046,l1: a444(r1046,l4))  -- assign reg 0
      Popping a788(r821,l1: a456(r821,l4))  -- assign reg 2
      Popping a798(r807,l1: a466(r807,l4))  -- assign reg 2
      Popping a785(r827,l1: a453(r827,l4))  -- assign reg 30
      Popping a786(r822,l1: a454(r822,l4))  -- assign reg 29
      Popping a787(r817,l1: a455(r817,l4))  -- assign reg 28
      Popping a796(r813,l1: a464(r813,l4))  -- assign reg 30
      Popping a797(r808,l1: a465(r808,l4))  -- assign reg 29
      Popping a799(r803,l1: a467(r803,l4))  -- assign reg 28
      Popping a192(r776,l1)  -- assign reg 3
      Popping a195(r774,l1)  -- assign reg 3
      Popping a201(r767,l1)  -- assign reg 3
      Popping a204(r765,l1)  -- assign reg 3
      Popping a154(r371,l1)  -- assign reg 4
      Popping a157(r369,l1)  -- assign reg 4
      Popping a803(r741,l1: a501(r741,l3))  -- assign reg 1
      Popping a810(r701,l1: a537(r701,l2))  -- assign reg 1
      Popping a235(r986,l1)  -- assign reg 0
      Popping a260(r988,l1)  -- assign reg 0
      Popping a208(r227,l1)  -- assign reg 3
      Popping a249(r716,l1)  -- assign reg 3
      Popping a248(r720,l1)  -- assign reg 8
      Popping a240(r220,l1)  -- assign reg 3
      Popping a265(r199,l1)  -- assign reg 4
      Popping a209(r748,l1)  -- assign reg 5
      Popping a151(r1059,l1)  -- assign reg 0
      Popping a152(r1058,l1)  -- assign reg 0
      Popping a153(r1057,l1)  -- assign reg 0
      Popping a155(r1056,l1)  -- assign reg 0
      Popping a159(r1054,l1)  -- assign reg 16
      Popping a183(r1045,l1)  -- assign reg 0
      Popping a193(r778,l1)  -- assign reg 2
      Popping a194(r777,l1)  -- assign reg 2
      Popping a202(r769,l1)  -- assign reg 2
      Popping a203(r768,l1)  -- assign reg 2
      Popping a220(r747,l1)  -- assign reg 31
      Popping a222(r1041,l1)  -- assign reg 16
      Popping a227(r1040,l1)  -- assign reg 0
      Popping a228(r1039,l1)  -- assign reg 0
      Popping a229(r1038,l1)  -- assign reg 0
      Popping a251(r1035,l1)  -- assign reg 0
      Popping a252(r1034,l1)  -- assign reg 0
      Popping a253(r1033,l1)  -- assign reg 0
      Popping a254(r1032,l1)  -- assign reg 0
      Popping a269(r688,l1)  -- assign reg 3
      Popping a268(r692,l1)  -- assign reg 3
      Popping a273(r674,l1)  -- assign reg 0
      Popping a274(r672,l1)  -- assign reg 0
      Popping a275(r1030,l1)  -- assign reg 0
      Popping a277(r1029,l1)  -- assign reg 16
      Popping a284(r1022,l1)  -- assign reg 0
      Popping a286(r1021,l1)  -- assign reg 2
      Popping a287(r1020,l1)  -- assign reg 0
      Popping a135(r1070,l1)  -- assign reg 16
      Popping a136(r1069,l1)  -- assign reg 0
      Popping a164(r1051,l1)  -- assign reg 0
      Popping a165(r1050,l1)  -- assign reg 6
      Popping a280(r1026,l1)  -- assign reg 0
      Popping a281(r1025,l1)  -- assign reg 6
      Popping a191(r1043,l1)  -- assign reg 0
      Popping a200(r1042,l1)  -- assign reg 0
      Popping a250(r1036,l1)  -- assign reg 0
      Popping a270(r682,l1)  -- assign reg 29
      Popping a272(r1031,l1)  -- assign reg 0
      Popping a245(r729,l1)  -- assign reg 0
      Popping a246(r727,l1)  -- assign reg 0
      Popping a166(r1049,l1)  -- assign reg 0
      Popping a282(r1024,l1)  -- assign reg 0
      Popping a283(r1023,l1)  -- assign reg 0
      Popping a162(r1052,l1)  -- assign reg 0
      Popping a278(r1028,l1)  -- assign reg 0
      Popping a279(r1027,l1)  -- assign reg 0
      Popping a189(r1044,l1)  -- assign reg 0
      Popping a243(r735,l1)  -- assign reg 8
      Popping a244(r1037,l1)  -- assign reg 0
Spilling a169r983 for a177r173
Assigning 11 to a177r173
       a169(r983,l1)  -- assign memory

  Loop 6 (parent 1, header bb100, depth 2)
    bbs: 100(->101:l1)
    all: 288r339 289r355 290r356 291r368 292r370 293r372 294r373 295r374 296r375 297r389 298r463 299r915 300r967 301r968 302r969 303r970 304r971 305r972 306r979 307r987 308r989 309r990 310r992 311r993 312r1068 313r957 314r1067 315r955 316r951 317r947 318r954 319r928 320r950 321r457 322r946 323r452 324r1066 325r941 326r1065 327r939 328r935 329r931 330r938 331r930 332r934 333r925 334r924 335r919 336r923 337r922 338r918 339r917 340r921 341r916 342r475 343r914 344r913
    modified regnos: 389 452 457 475 913 914 916 917 918 919 921 922 923 924 925 928 930 931 934 935 938 939 941 946 947 950 951 954 955 957 1065 1066 1067 1068
    border: 288r339 289r355 290r356 291r368 292r370 293r372 294r373 295r374 296r375 297r389 298r463 299r915 300r967 301r968 302r969 303r970 304r971 305r972 306r979 307r987 308r989 309r990 310r992 311r993
    Pressure: GENERAL_REGS=32 VFP_LO_REGS=10
 Removing pref96:hr0@1780
 Removing pref89:hr0@890
 Removing pref100:hr2@1780
 Removing pref94:hr2@1780
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14 16-31 39-47)@26700
          2:( 0-12 14 16-29 31 39-47)@8900
            3:( 0-12 14 16-28 31 39-47)@22250
              4:( 0-12 14)@331080
                5:( 0-1 3-12 14)@234960
                  6:( 4-11)@667500
      Spill a289(r355,l6)
      Spill a290(r356,l6)
      Spill a298(r463,l6)
      Spill a300(r967,l6)
      Spill a303(r970,l6)
      Allocno a291r368 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a297r389 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a301r968 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a302r969 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a312r1068 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a313r957 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a314r1067 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a318r954 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-28 31 39-47, node:  0-12 14 16-28 31 39-47 (confl regs =  13 15 48-106)
      Allocno a319r928 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a320r950 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-28 30-31 39-47, ^node:  0-12 14 16-31 39-47 (confl regs =  13 15 48-106)
      Allocno a321r457 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a322r946 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, node:  0-12 14 16-31 39-47 (confl regs =  13 15 48-106)
      Allocno a323r452 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a324r1066 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a325r941 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a326r1065 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a330r938 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-28 31 39-47, node:  0-12 14 16-28 31 39-47 (confl regs =  13 15 48-106)
      Allocno a331r930 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-29 31 39-47, node:  0-12 14 16-29 31 39-47 (confl regs =  13 15 48-106)
      Allocno a332r934 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, node:  0-12 14 16-31 39-47 (confl regs =  13 15 48-106)
      Allocno a333r925 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a334r924 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a335r919 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a336r923 of ALL_REGS(46) has 39 avail. regs  0-12 14 16-31 39-47, node:  0-12 14 16-31 39-47 (confl regs =  13 15 48-106)
      Allocno a338r918 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 39-47, ^node:  0-12 14 16-31 39-47 (confl regs =  13 15 48-106)
      Forming thread by copy 137:a338r918-a339r917 (freq=111):
        Result (freq=3560): a338r918(1780) a339r917(1780)
      Forming thread by copy 138:a335r919-a338r918 (freq=111):
        Result (freq=5340): a335r919(1780) a338r918(1780) a339r917(1780)
      Forming thread by copy 139:a336r923-a337r922 (freq=111):
        Result (freq=3560): a336r923(1780) a337r922(1780)
      Forming thread by copy 140:a334r924-a336r923 (freq=111):
        Result (freq=5340): a334r924(1780) a336r923(1780) a337r922(1780)
      Forming thread by copy 141:a333r925-a334r924 (freq=111):
        Result (freq=8010): a333r925(2670) a334r924(1780) a336r923(1780) a337r922(1780)
      Forming thread by copy 151:a313r957-a314r1067 (freq=111):
        Result (freq=3560): a313r957(1780) a314r1067(1780)
      Pushing a332(r934,l6)(cost 0)
      Pushing a331(r930,l6)(cost 0)
      Pushing a330(r938,l6)(cost 0)
      Pushing a326(r1065,l6)(cost 0)
      Pushing a324(r1066,l6)(cost 0)
      Forming thread by copy 147:a325r941-a326r1065 (freq=111):
        Result (freq=3560): a325r941(1780) a326r1065(1780)
        Making a325(r941,l6) colorable
        Making a323(r452,l6) colorable
      Pushing a322(r946,l6)(cost 0)
        Making a321(r457,l6) colorable
      Pushing a320(r950,l6)(cost 0)
      Forming thread by copy 143:a319r928-a333r925 (freq=222):
        Result (freq=12460): a319r928(4450) a333r925(2670) a334r924(1780) a336r923(1780) a337r922(1780)
        Making a319(r928,l6) colorable
      Pushing a318(r954,l6)(cost 0)
      Pushing a312(r1068,l6)(cost 0)
      Pushing a323(r452,l6)(cost 26700)
      Pushing a321(r457,l6)(cost 26700)
      Pushing a325(r941,l6)(cost 51620)
      Pushing a314(r1067,l6)(cost 0)
      Pushing a313(r957,l6)(cost 0)
      Pushing a338(r918,l6)(cost 0)
      Pushing a335(r919,l6)(cost 0)
        Making a291(r368,l6) colorable
        Making a297(r389,l6) colorable
        Making a301(r968,l6) colorable
        Making a302(r969,l6) colorable
      Pushing a291(r368,l6)(cost 34000)
      Pushing a302(r969,l6)(cost 28660)
      Pushing a301(r968,l6)(cost 28660)
      Pushing a297(r389,l6)(cost 49130)
      Pushing a336(r923,l6)(cost 0)
      Pushing a334(r924,l6)(cost 0)
      Pushing a333(r925,l6)(cost 0)
      Pushing a319(r928,l6)(cost 44500)
      Popping a319(r928,l6)  -- assign reg 4
      Popping a333(r925,l6)  -- assign reg 4
      Popping a334(r924,l6)  -- assign reg 4
      Popping a336(r923,l6)  -- assign reg 4
      Popping a297(r389,l6)  -- assign reg 5
      Popping a301(r968,l6)  -- assign reg 6
      Popping a302(r969,l6)  -- assign reg 7
      Popping a291(r368,l6)  -- assign reg 8
      Popping a335(r919,l6)  -- assign reg 3
      Popping a338(r918,l6)  -- assign reg 4
      Popping a313(r957,l6)  -- assign reg 4
      Popping a314(r1067,l6)  -- assign reg 0
      Popping a325(r941,l6)  -- assign reg 9
      Popping a321(r457,l6)  -- assign reg 10
      Popping a323(r452,l6)  -- assign reg 11
      Popping a312(r1068,l6)  -- assign reg 1
      Popping a318(r954,l6)  -- assign reg 31
      Popping a320(r950,l6)  -- assign reg 30
      Popping a322(r946,l6)  -- assign reg 29
      Popping a324(r1066,l6)  -- assign reg 1
      Popping a326(r1065,l6)  -- assign reg 0
      Popping a330(r938,l6)  -- assign reg 31
      Popping a331(r930,l6)  -- assign reg 29
      Popping a332(r934,l6)  -- assign reg 30

  Loop 5 (parent 1, header bb98, depth 2)
    bbs: 98(->99:l1)
    all: 345r339 346r355 347r356 348r368 349r370 350r372 351r373 352r374 353r375 354r389 355r463 356r860 357r967 358r968 359r969 360r970 361r971 362r972 363r981 364r987 365r989 366r990 367r992 368r993 369r1064 370r908 371r1063 372r906 373r901 374r896 375r380 376r905 377r900 378r895 379r904 380r873 381r899 382r309 383r894 384r314 385r1062 386r889 387r1061 388r887 389r882 390r877 391r886 392r885 393r876 394r875 395r881 396r880 397r1060 398r870 399r869 400r864 401r868 402r867 403r863 404r862 405r866 406r861 407r296 408r859 409r858
    modified regnos: 296 309 314 380 389 858 859 861 862 863 864 866 867 868 869 870 873 875 876 877 880 881 882 885 886 887 889 894 895 896 899 900 901 904 905 906 908 1060 1061 1062 1063 1064
    border: 345r339 346r355 347r356 348r368 349r370 350r372 351r373 352r374 353r375 354r389 355r463 356r860 357r967 358r968 359r969 360r970 361r971 362r972 363r981 364r987 365r989 366r990 367r992 368r993
    Pressure: GENERAL_REGS=32 VFP_LO_REGS=11
 Removing pref110:hr0@1780
 Removing pref104:hr0@890
 Removing pref113:hr2@1780
 Removing pref108:hr2@1780
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 16-32 40-47)@103240
        2:( 0-12 14)@331080
          3:( 0-1 3-12 14)@234960
            4:( 4-11)@667500
      Spill a346(r355,l5)
      Spill a347(r356,l5)
      Spill a355(r463,l5)
      Spill a357(r967,l5)
      Spill a360(r970,l5)
      Allocno a348r368 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-16 48-106)
      Allocno a354r389 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a358r968 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a359r969 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a369r1064 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a370r908 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a371r1063 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a379r904 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-29 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a380r873 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a381r899 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-29 31 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a382r309 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a383r894 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-31 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a384r314 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a385r1062 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a386r889 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a387r1061 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a392r885 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-28 31 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a394r875 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-29 31 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a396r880 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-31 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a397r1060 of ALL_REGS(46) has 25 avail. regs  16-32 40-47, node:  16-32 40-47 (confl regs =  13 15 48-106)
      Allocno a398r870 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a399r869 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a400r864 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a401r868 of ALL_REGS(46) has 38 avail. regs  0-12 14 17-32 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15-16 48-106)
      Allocno a403r863 of ALL_REGS(46) has 37 avail. regs  0-12 14 17-30 32 40-47, ^node:  0-12 14 16-47 (confl regs =  13 15-16 48-106)
      Forming thread by copy 156:a403r863-a404r862 (freq=111):
        Result (freq=3560): a403r863(1780) a404r862(1780)
      Forming thread by copy 157:a400r864-a403r863 (freq=111):
        Result (freq=5340): a400r864(1780) a403r863(1780) a404r862(1780)
      Forming thread by copy 158:a401r868-a402r867 (freq=111):
        Result (freq=3560): a401r868(1780) a402r867(1780)
      Forming thread by copy 159:a399r869-a401r868 (freq=111):
        Result (freq=5340): a399r869(1780) a401r868(1780) a402r867(1780)
      Forming thread by copy 160:a398r870-a399r869 (freq=111):
        Result (freq=8010): a398r870(2670) a399r869(1780) a401r868(1780) a402r867(1780)
      Forming thread by copy 178:a370r908-a371r1063 (freq=111):
        Result (freq=3560): a370r908(1780) a371r1063(1780)
      Pushing a397(r1060,l5)(cost 0)
      Pushing a396(r880,l5)(cost 0)
      Pushing a394(r875,l5)(cost 0)
      Pushing a392(r885,l5)(cost 0)
      Pushing a387(r1061,l5)(cost 0)
      Pushing a385(r1062,l5)(cost 0)
      Forming thread by copy 170:a386r889-a387r1061 (freq=111):
        Result (freq=3560): a386r889(1780) a387r1061(1780)
        Making a386(r889,l5) colorable
        Making a384(r314,l5) colorable
      Pushing a383(r894,l5)(cost 0)
        Making a382(r309,l5) colorable
      Pushing a381(r899,l5)(cost 0)
      Forming thread by copy 162:a380r873-a398r870 (freq=222):
        Result (freq=12460): a380r873(4450) a398r870(2670) a399r869(1780) a401r868(1780) a402r867(1780)
        Making a380(r873,l5) colorable
      Pushing a379(r904,l5)(cost 0)
      Pushing a369(r1064,l5)(cost 0)
      Pushing a384(r314,l5)(cost 26700)
      Pushing a382(r309,l5)(cost 26700)
      Pushing a386(r889,l5)(cost 51620)
      Pushing a371(r1063,l5)(cost 0)
      Pushing a370(r908,l5)(cost 0)
      Pushing a403(r863,l5)(cost 0)
      Pushing a400(r864,l5)(cost 0)
        Making a348(r368,l5) colorable
        Making a354(r389,l5) colorable
        Making a358(r968,l5) colorable
        Making a359(r969,l5) colorable
      Pushing a348(r368,l5)(cost 35920)
      Pushing a359(r969,l5)(cost 30580)
      Pushing a358(r968,l5)(cost 30580)
      Pushing a354(r389,l5)(cost 51050)
      Pushing a401(r868,l5)(cost 0)
      Pushing a399(r869,l5)(cost 0)
      Pushing a398(r870,l5)(cost 0)
      Pushing a380(r873,l5)(cost 44500)
      Popping a380(r873,l5)  -- assign reg 4
      Popping a398(r870,l5)  -- assign reg 4
      Popping a399(r869,l5)  -- assign reg 4
      Popping a401(r868,l5)  -- assign reg 4
      Popping a354(r389,l5)  -- assign reg 5
      Popping a358(r968,l5)  -- assign reg 6
      Popping a359(r969,l5)  -- assign reg 7
      Popping a348(r368,l5)  -- assign reg 8
      Popping a400(r864,l5)  -- assign reg 3
      Popping a403(r863,l5)  -- assign reg 4
      Popping a370(r908,l5)  -- assign reg 4
      Popping a371(r1063,l5)  -- assign reg 0
      Popping a386(r889,l5)  -- assign reg 9
      Popping a382(r309,l5)  -- assign reg 10
      Popping a384(r314,l5)  -- assign reg 11
      Popping a369(r1064,l5)  -- assign reg 1
      Popping a379(r904,l5)  -- assign reg 16
      Popping a381(r899,l5)  -- assign reg 31
      Popping a383(r894,l5)  -- assign reg 30
      Popping a385(r1062,l5)  -- assign reg 1
      Popping a387(r1061,l5)  -- assign reg 0
      Popping a392(r885,l5)  -- assign reg 31
      Popping a394(r875,l5)  -- assign reg 29
      Popping a396(r880,l5)  -- assign reg 30
      Popping a397(r1060,l5)  -- assign reg 16

  Loop 4 (parent 1, header bb82, depth 2)
    bbs: 87(->88:l1) 86 85 84 83 82
    all: 410r173 411r216 412r279 413r339 414r346 415r348 416r355 417r356 418r365 419r368 420r389 421r393 422r394 423r423 424r429 425r463 426r967 427r970 428r971 429r972 430r982 431r983 432r984 433r987 434r989 435r990 436r992 437r993 438r1048 439r834 440r833 441r1047 442r350 443r352 444r1046 445r351 446r830 447r829 448r824 449r819 450r828 451r823 452r818 453r827 454r822 455r817 456r821 457r801 458r815 459r810 460r805 461r814 462r809 463r804 464r813 465r808 466r807 467r803 468r798 469r796
    modified regnos: 279 350 351 352 393 394 796 798 801 803 804 805 807 808 809 810 813 814 815 817 818 819 821 822 823 824 827 828 829 830 833 834 1046 1047 1048
    border: 410r173 411r216 412r279 413r339 414r346 415r348 416r355 417r356 418r365 419r368 420r389 421r393 422r394 423r423 424r429 425r463 426r967 427r970 428r971 429r972 430r982 431r983 432r984 433r987 434r989 435r990 436r992 437r993
    Pressure: GENERAL_REGS=34 VFP_LO_REGS=11
 Removing pref126:hr0@890
 Removing pref122:hr0@1780
 Removing pref120:hr0@1780
 Removing pref119:hr1@1780
 Removing pref118:hr2@1780
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-12 14 16-30 34-35 37 42-47)@14820
          2:( 0-12 14 16-27 29-30 34-35 37 42-47)@5920
            3:( 0-12 14 16-27 30 34-35 37 42-47)@5920
              4:( 0-12 14)@257400
                5:( 0-1 3-12 14)@117480
                  6:( 0-1 3-12)@103240
                    7:( 3-11)@137060
                      8:( 4-11)@265260
      Spill a416(r355,l4)
      Spill a417(r356,l4)
      Spill a425(r463,l4)
      Spill a426(r967,l4)
      Spill a427(r970,l4)
      Allocno a410r173 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a419r368 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-15 48-106)
      Allocno a420r389 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a422r394 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a424r429 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a438r1048 of ALL_REGS(46) has 13 avail. regs  0-1 3-12 14, node:  0-1 3-12 14 (confl regs =  2 13 15 48-106)
      Allocno a439r834 of ALL_REGS(46) has 10 avail. regs  2-11, ^node:  0-12 14 (confl regs =  0-1 12-15 48-106)
      Allocno a440r833 of ALL_REGS(46) has 9 avail. regs  3-11, node:  3-11 obj 0 (confl regs =  0-2 12-15 48-106),  obj 1 (confl regs =  0-2 12-15 48-106)
      Allocno a441r1047 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a442r350 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a443r352 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a444r1046 of ALL_REGS(46) has 12 avail. regs  0-1 3-12, node:  0-1 3-12 obj 0 (confl regs =  2 13 15 48-106),  obj 1 (confl regs =  2 13 15 48-106)
      Allocno a445r351 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a453r827 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-27 30 34-35 37 42-47, node:  0-12 14 16-27 30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a454r822 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-27 29-30 34-35 37 42-47, node:  0-12 14 16-27 29-30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a455r817 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, node:  0-12 14 16-30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a456r821 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a457r801 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a464r813 of ALL_REGS(46) has 36 avail. regs  0-12 14 16-27 30 34-35 37 42-47, node:  0-12 14 16-27 30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a465r808 of ALL_REGS(46) has 37 avail. regs  0-12 14 16-27 29-30 34-35 37 42-47, node:  0-12 14 16-27 29-30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a466r807 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a467r803 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, node:  0-12 14 16-30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Allocno a468r798 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a469r796 of ALL_REGS(46) has 38 avail. regs  0-12 14 16-30 34-35 37 42-47, node:  0-12 14 16-30 34-35 37 42-47 (confl regs =  13 15 48-106)
      Forming thread by copy 201:a457r801-a468r798 (freq=222):
        Result (freq=5338): a457r801(2668) a468r798(2670)
      Forming thread by copy 181:a439r834-a441r1047 (freq=111):
        Result (freq=3560): a439r834(1780) a441r1047(1780)
      Forming thread by copy 200:a468r798-a469r796 (freq=111):
        Result (freq=7118): a457r801(2668) a469r796(1780) a468r798(2670)
      Pushing a467(r803,l4)(cost 0)
      Pushing a465(r808,l4)(cost 0)
      Pushing a464(r813,l4)(cost 0)
      Pushing a455(r817,l4)(cost 0)
      Pushing a454(r822,l4)(cost 0)
      Pushing a453(r827,l4)(cost 0)
      Pushing a466(r807,l4)(cost 0)
      Pushing a456(r821,l4)(cost 0)
      Pushing a444(r1046,l4)(cost 0)
      Forming thread by copy 190:a445r351-a447r829 (freq=37):
        Result (freq=2519): a445r351(1927) a447r829(592)
      Forming thread by copy 199:a445r351-a458r815 (freq=37):
        Result (freq=3111): a445r351(1927) a458r815(592) a447r829(592)
        Making a445(r351,l4) colorable
      Pushing a438(r1048,l4)(cost 0)
      Pushing a445(r351,l4)(cost 21070)
      Pushing a441(r1047,l4)(cost 0)
      Pushing a439(r834,l4)(cost 0)
      Pushing a469(r796,l4)(cost 0)
      Pushing a457(r801,l4)(cost 0)
      Pushing a468(r798,l4)(cost 0)
      Pushing a420(r389,l4)(potential spill: pri=28, cost=3880)
        Making a410(r173,l4) colorable
        Making a419(r368,l4) colorable
        Making a422(r394,l4) colorable
        Making a424(r429,l4) colorable
      Forming thread by copy 189:a443r352-a448r824 (freq=37):
        Result (freq=3854): a443r352(3262) a448r824(592)
      Forming thread by copy 198:a443r352-a459r810 (freq=37):
        Result (freq=4446): a443r352(3262) a459r810(592) a448r824(592)
        Making a443(r352,l4) colorable
      Forming thread by copy 188:a442r350-a449r819 (freq=37):
        Result (freq=2519): a442r350(1927) a449r819(592)
      Forming thread by copy 197:a442r350-a460r805 (freq=37):
        Result (freq=3111): a442r350(1927) a460r805(592) a449r819(592)
        Making a442(r350,l4) colorable
      Pushing a424(r429,l4)(cost 6940)
      Pushing a419(r368,l4)(cost 19900)
      Pushing a410(r173,l4)(cost 19760)
      Forming thread by copy 180:a440r833-a444r1046 (freq=890):
        Result (freq=3560): a440r833(1780) a444r1046(1780)
        Making a440(r833,l4) colorable
      Pushing a422(r394,l4)(cost 15310)
      Pushing a442(r350,l4)(cost 21070)
      Pushing a440(r833,l4)(cost 51620)
      Pushing a443(r352,l4)(cost 34420)
      Popping a443(r352,l4)  -- assign reg 4
      Popping a440(r833,l4)  -- assign reg 6
      Popping a442(r350,l4)  -- assign reg 5
      Popping a422(r394,l4)  -- assign reg 10
      Popping a410(r173,l4)  -- assign reg 11
      Popping a419(r368,l4)  -- assign reg 8
      Popping a424(r429,l4)  -- assign reg 9
      Popping a420(r389,l4)  -- spill
      Popping a468(r798,l4)  -- assign reg 3
      Popping a457(r801,l4)  -- assign reg 3
      Popping a469(r796,l4)  -- assign reg 3
      Popping a439(r834,l4)  -- assign reg 2
      Popping a441(r1047,l4)  -- assign reg 0
      Popping a445(r351,l4)  -- assign reg 7
      Popping a438(r1048,l4)  -- assign reg 1
      Popping a444(r1046,l4)  -- assign reg 0
      Popping a456(r821,l4)  -- assign reg 2
      Popping a466(r807,l4)  -- assign reg 2
      Popping a453(r827,l4)  -- assign reg 30
      Popping a454(r822,l4)  -- assign reg 29
      Popping a455(r817,l4)  -- assign reg 28
      Popping a464(r813,l4)  -- assign reg 30
      Popping a465(r808,l4)  -- assign reg 29
      Popping a467(r803,l4)  -- assign reg 28

  Loop 3 (parent 1, header bb59, depth 2)
    bbs: 63(->64:l1) 61(->62:l1) 60 59
    all: 470r181 471r193 472r195 473r339 474r345 475r346 476r354 477r355 478r356 479r362 480r363 481r397 482r398 483r402 484r403 485r404 486r418 487r420 488r463 489r967 490r970 491r971 492r972 493r986 494r987 495r989 496r990 497r992 498r993 499r220 500r395 501r741 502r396 503r737 504r1077 505r736 506r1076
    modified regnos: 220 395 396 397 398 420 736 737 741 1076 1077
    border: 470r181 471r193 472r195 473r339 474r345 475r346 476r354 477r355 478r356 479r362 480r363 481r397 482r398 483r402 484r403 485r404 486r418 487r420 488r463 489r967 490r970 491r971 492r972 493r986 494r987 495r989 496r990 497r992 498r993 499r220
    Pressure: GENERAL_REGS=23 VFP_LO_REGS=15
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 1-5 7-12 14 16-28 40 45-47)@11520
          2:( 1-5 7-12 14)@46060
      Spill a477(r355,l3)
      Spill a478(r356,l3)
      Spill a488(r463,l3)
      Spill a489(r967,l3)
      Spill a490(r970,l3)
      Allocno a474r345 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a487r420 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a499r220 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a500r395 of ALL_REGS(46) has 29 avail. regs  1-5 7-12 14 16-28 40 45-47, node:  1-5 7-12 14 16-28 40 45-47 (confl regs =  13 15 48-106)
      Allocno a501r741 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Forming thread by copy 203:a500r395-a505r736 (freq=111):
        Result (freq=3691): a500r395(1911) a505r736(1780)
      Pushing a474(r345,l3)(cost 0)
      Pushing a499(r220,l3)(cost 0)
      Pushing a501(r741,l3)(cost 0)
      Pushing a487(r420,l3)(cost 0)
      Pushing a500(r395,l3)(cost 0)
      Popping a500(r395,l3)  -- assign reg 3
      Popping a487(r420,l3)  -- assign reg 2
      Popping a501(r741,l3)  -- assign reg 1
      Popping a499(r220,l3)  -- assign reg 3
      Popping a474(r345,l3)  -- assign reg 4

  Loop 2 (parent 1, header bb48, depth 2)
    bbs: 52(->53:l1) 50(->51:l1) 49 48
    all: 507r181 508r183 509r193 510r195 511r339 512r341 513r346 514r354 515r355 516r356 517r360 518r361 519r402 520r403 521r404 522r416 523r418 524r463 525r967 526r970 527r971 528r972 529r987 530r988 531r989 532r990 533r992 534r993 535r199 536r400 537r701 538r401 539r697 540r1075 541r696 542r1074
    modified regnos: 199 341 400 401 402 403 696 697 701 1074 1075
    border: 507r181 508r183 509r193 510r195 511r339 512r341 513r346 514r354 515r355 516r356 517r360 518r361 519r402 520r403 521r404 522r416 523r418 524r463 525r967 526r970 527r971 528r972 529r987 530r988 531r989 532r990 533r992 534r993 535r199
    Pressure: GENERAL_REGS=23 VFP_LO_REGS=14
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 1-5 7-12 14 16-27 35 37 41 45-47)@11520
          2:( 1-5 7-12 14)@46060
      Spill a515(r355,l2)
      Spill a516(r356,l2)
      Spill a524(r463,l2)
      Spill a525(r967,l2)
      Spill a526(r970,l2)
      Allocno a512r341 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a522r416 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a535r199 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Allocno a536r400 of ALL_REGS(46) has 30 avail. regs  1-5 7-12 14 16-27 35 37 41 45-47, node:  1-5 7-12 14 16-27 35 37 41 45-47 (confl regs =  13 15 48-106)
      Allocno a537r701 of GENERAL_REGS(14) has 12 avail. regs  1-5 7-12 14, node:  1-5 7-12 14 (confl regs =  13 15-106)
      Forming thread by copy 207:a536r400-a541r696 (freq=111):
        Result (freq=3691): a536r400(1911) a541r696(1780)
      Pushing a522(r416,l2)(cost 0)
      Pushing a535(r199,l2)(cost 0)
      Pushing a537(r701,l2)(cost 0)
      Pushing a512(r341,l2)(cost 0)
      Pushing a536(r400,l2)(cost 0)
      Popping a536(r400,l2)  -- assign reg 3
      Popping a512(r341,l2)  -- assign reg 2
      Popping a537(r701,l2)  -- assign reg 1
      Popping a535(r199,l2)  -- assign reg 4
      Popping a522(r416,l2)  -- assign reg 8
Disposition:
  103:r125 l0    32   85:r146 l0    31   70:r154 l0    31   35:r160 l0    33
   22:r169 l0     3   15:r171 l0     3  410:r173 l4    11  177:r173 l1    11
  507:r181 l2     6  470:r181 l3     6  190:r181 l1     6  508:r183 l2    40
  242:r183 l1    40  509:r193 l2    43  471:r193 l3    43  234:r193 l1    43
  510:r195 l2    44  472:r195 l3    44  233:r195 l1    44  535:r199 l2     4
  265:r199 l1     4  256:r200 l1    30  258:r201 l1    31  411:r216 l4    36
  174:r216 l1    36  499:r220 l3     3  240:r220 l1     3  231:r221 l1    44
  232:r222 l1    43  208:r227 l1     3  412:r279 l4    31  173:r279 l1    31
  163:r283 l1     6  407:r296 l5    29  382:r309 l5    10  384:r314 l5    11
  511:r339 l2    38  473:r339 l3    38  413:r339 l4    38  345:r339 l5    38
  288:r339 l6    38  120:r339 l1    38    6:r339 l0    38  221:r340 l1    33
  512:r341 l2     2  261:r341 l1     2   65:r342 l0     4   49:r343 l0     5
  474:r345 l3     4  223:r345 l1     4  513:r346 l2    32  475:r346 l3    32
  414:r346 l4    32  158:r346 l1    32  176:r347 l1    36  415:r348 l4    39
  178:r348 l1    39  172:r349 l1    35  442:r350 l4     5  445:r351 l4     7
  443:r352 l4     4  161:r353 l1    33  514:r354 l2    33  476:r354 l3    33
  237:r354 l1    33  515:r355 l2   mem  477:r355 l3   mem  416:r355 l4   mem
  346:r355 l5   mem  289:r355 l6   mem  121:r355 l1   mem    8:r355 l0   mem
  516:r356 l2   mem  478:r356 l3   mem  417:r356 l4   mem  347:r356 l5   mem
  290:r356 l6   mem  122:r356 l1   mem    9:r356 l0   mem   20:r357 l0    32
   25:r358 l0    33  266:r359 l1    33  517:r360 l2    29  263:r360 l1    29
  518:r361 l2    28  264:r361 l1    28  479:r362 l3    41  224:r362 l1    41
  480:r363 l3    29  238:r363 l1    29  175:r364 l1    42  418:r365 l4    41
  179:r365 l1    41  197:r366 l1    30  419:r368 l4     8  348:r368 l5     8
  291:r368 l6     8  139:r368 l1     8  157:r369 l1     4  349:r370 l5    33
  292:r370 l6    33  140:r370 l1    33  154:r371 l1     4  350:r372 l5    34
  293:r372 l6    34  141:r372 l1    34  351:r373 l5    35  294:r373 l6    35
  142:r373 l1    35  352:r374 l5    36  295:r374 l6    36  143:r374 l1    36
  353:r375 l5    37  296:r375 l6    37  144:r375 l1    37  375:r380 l5    32
  420:r389 l4   mem  354:r389 l5     5  297:r389 l6     5  145:r389 l1     5
  421:r393 l4    33  180:r393 l1    33  422:r394 l4    10  168:r394 l1    10
  500:r395 l3     3  502:r396 l3    31  481:r397 l3    35  206:r397 l1    35
  482:r398 l3    37  198:r398 l1    37  536:r400 l2     3  538:r401 l2    31
  519:r402 l2    39  483:r402 l3    39  225:r402 l1    39  520:r403 l2    36
  484:r403 l3    36  226:r403 l1    36  521:r404 l2    42  485:r404 l3    42
  239:r404 l1    42  101:r408 l0    16   28:r409 l0    34   26:r410 l0    32
   68:r411 l0    32   30:r412 l0    35   29:r413 l0    33  522:r416 l2     8
  123:r416 l1     8   10:r416 l0     8  523:r418 l2    34  486:r418 l3    34
  124:r418 l1    34    7:r418 l0    34  487:r420 l3     2  236:r420 l1     2
  423:r423 l4    40  181:r423 l1    40  424:r429 l4     9  171:r429 l1   mem
  323:r452 l6    11  321:r457 l6    10  524:r463 l2   mem  488:r463 l3   mem
  425:r463 l4   mem  355:r463 l5   mem  298:r463 l6   mem  125:r463 l1   mem
    4:r463 l0   mem  342:r475 l6    29  119:r481 l0    30  118:r483 l0    31
  106:r519 l0     4  108:r521 l0     3   92:r533 l0     2   95:r534 l0     1
   99:r535 l0     2   94:r537 l0     2   98:r538 l0     3   90:r539 l0     3
   97:r540 l0     2   96:r543 l0     3   93:r545 l0     1   91:r546 l0     2
   89:r548 l0     3   87:r552 l0    30   86:r553 l0    31   84:r556 l0     3
   77:r557 l0     3   83:r558 l0     1   81:r559 l0     2   82:r561 l0     3
   75:r562 l0     2   80:r563 l0     2   79:r566 l0     1   78:r568 l0     1
   76:r569 l0     6   74:r571 l0     3   72:r575 l0    30   71:r576 l0    31
   57:r585 l0     2   60:r586 l0     1   64:r587 l0     3   59:r589 l0     2
   63:r590 l0     4   55:r591 l0     3   62:r592 l0     3   61:r595 l0     4
   58:r597 l0     1   56:r598 l0     2   54:r600 l0     3   51:r605 l0    31
   50:r606 l0    32   48:r609 l0     5   41:r610 l0     5   47:r611 l0     5
   45:r612 l0     3   46:r614 l0     2   38:r615 l0     3   44:r616 l0     3
   43:r619 l0     2   42:r621 l0     2   39:r622 l0     6   37:r624 l0     3
   33:r627 l0    31   32:r628 l0    33   17:r630 l0     0   27:r632 l0    31
   24:r634 l0    33   19:r636 l0    32   21:r637 l0     2   23:r639 l0     1
   16:r640 l0     2   18:r642 l0     1  285:r651 l1     4  276:r664 l1    31
  274:r672 l1     0  273:r674 l1     0  271:r681 l1    31  270:r682 l1    29
  269:r688 l1     3  268:r692 l1     3  267:r695 l1    31  541:r696 l2    31
  539:r697 l2    31  537:r701 l2     1  262:r703 l1    31  255:r704 l1    31
  249:r716 l1     3  248:r720 l1     8  247:r721 l1    31  246:r727 l1     0
  245:r729 l1     0  241:r734 l1    31  243:r735 l1     8  505:r736 l3    31
  503:r737 l3    31  501:r741 l3     1  230:r743 l1    43  220:r747 l1    31
  209:r748 l1     5  219:r749 l1    31  218:r750 l1    33  217:r751 l1    29
  210:r752 l1    30  216:r754 l1    31  215:r755 l1    40  214:r756 l1    31
  213:r757 l1    33  212:r759 l1    33  211:r760 l1    31  207:r763 l1    31
  205:r764 l1    31  204:r765 l1     3  201:r767 l1     3  203:r768 l1     2
  202:r769 l1     2  199:r772 l1    31  196:r773 l1    31  195:r774 l1     3
  192:r776 l1     3  194:r777 l1     2  193:r778 l1     2  188:r783 l1    31
  186:r784 l1    31  187:r785 l1    31  184:r786 l1    31  185:r787 l1    30
  182:r794 l1    33  469:r796 l4     3  468:r798 l4     3  457:r801 l4     3
  467:r803 l4    28  463:r804 l4    28  460:r805 l4    28  466:r807 l4     2
  465:r808 l4    29  462:r809 l4    29  459:r810 l4    29  464:r813 l4    30
  461:r814 l4    30  458:r815 l4    30  455:r817 l4    28  452:r818 l4    28
  449:r819 l4    28  456:r821 l4     2  454:r822 l4    29  451:r823 l4    29
  448:r824 l4    29  453:r827 l4    30  450:r828 l4    30  447:r829 l4    30
  446:r830 l4    31  440:r833 l4     6  439:r834 l4     2  150:r857 l1    31
  409:r858 l5    29  408:r859 l5    29  356:r860 l5    39  149:r860 l1    39
  406:r861 l5    30  404:r862 l5    30  403:r863 l5     4  400:r864 l5     3
  405:r866 l5    31  402:r867 l5    31  401:r868 l5     4  399:r869 l5     4
  398:r870 l5     4  380:r873 l5     4  394:r875 l5    29  393:r876 l5    29
  390:r877 l5    29  396:r880 l5    30  395:r881 l5    30  389:r882 l5    30
  392:r885 l5    31  391:r886 l5    31  388:r887 l5    31  386:r889 l5     9
  383:r894 l5    30  378:r895 l5    30  374:r896 l5    30  381:r899 l5    31
  377:r900 l5    31  373:r901 l5    31  379:r904 l5    16  376:r905 l5    16
  372:r906 l5    32  370:r908 l5     4  344:r913 l6    29  343:r914 l6    29
  299:r915 l6    32  138:r915 l1    32  341:r916 l6    30  339:r917 l6    30
  338:r918 l6     4  335:r919 l6     3  340:r921 l6    31  337:r922 l6    31
  336:r923 l6     4  334:r924 l6     4  333:r925 l6     4  319:r928 l6     4
  331:r930 l6    29  329:r931 l6    29  332:r934 l6    30  328:r935 l6    30
  330:r938 l6    31  327:r939 l6    31  325:r941 l6     9  322:r946 l6    29
  317:r947 l6    29  320:r950 l6    30  316:r951 l6    30  318:r954 l6    31
  315:r955 l6    31  313:r957 l6     4  525:r967 l2   mem  489:r967 l3   mem
  426:r967 l4   mem  357:r967 l5   mem  300:r967 l6   mem  126:r967 l1   mem
   11:r967 l0   mem  358:r968 l5     6  301:r968 l6     6  146:r968 l1     6
  359:r969 l5     7  302:r969 l6     7  147:r969 l1     7  526:r970 l2   mem
  490:r970 l3   mem  427:r970 l4   mem  360:r970 l5   mem  303:r970 l6   mem
  127:r970 l1   mem   12:r970 l0   mem  527:r971 l2   mem  491:r971 l3   mem
  428:r971 l4   mem  361:r971 l5   mem  304:r971 l6   mem  128:r971 l1   mem
   13:r971 l0   mem  528:r972 l2   mem  492:r972 l3   mem  429:r972 l4   mem
  362:r972 l5   mem  305:r972 l6   mem  129:r972 l1   mem   14:r972 l0   mem
   40:r973 l0     6  306:r979 l6   mem  137:r979 l1   mem  363:r981 l5   mem
  148:r981 l1   mem  430:r982 l4   mem  170:r982 l1   mem  431:r983 l4   mem
  169:r983 l1   mem  432:r984 l4   mem  167:r984 l1   mem  493:r986 l3     0
  235:r986 l1     0  529:r987 l2   mem  494:r987 l3   mem  433:r987 l4   mem
  364:r987 l5   mem  307:r987 l6   mem  130:r987 l1   mem    5:r987 l0   mem
  530:r988 l2     0  260:r988 l1     0  531:r989 l2   mem  495:r989 l3   mem
  434:r989 l4   mem  365:r989 l5   mem  308:r989 l6   mem  131:r989 l1   mem
    3:r989 l0   mem  532:r990 l2   mem  496:r990 l3   mem  435:r990 l4   mem
  366:r990 l5   mem  309:r990 l6   mem  132:r990 l1   mem    2:r990 l0   mem
  533:r992 l2   mem  497:r992 l3   mem  436:r992 l4   mem  367:r992 l5   mem
  310:r992 l6   mem  133:r992 l1   mem    1:r992 l0   mem  534:r993 l2   mem
  498:r993 l3   mem  437:r993 l4   mem  368:r993 l5   mem  311:r993 l6   mem
  134:r993 l1   mem    0:r993 l0   mem  117:r996 l0     0  116:r997 l0     0
  115:r998 l0     0  114:r999 l0     0  113:r1000l0     0  112:r1001l0     0
  111:r1002l0     0  110:r1003l0     0  109:r1004l0     0  107:r1005l0     0
  105:r1006l0    16  104:r1007l0    16  102:r1008l0    16  100:r1009l0     0
   88:r1010l0    16   73:r1011l0    16   69:r1012l0     0   67:r1013l0    34
   66:r1014l0    16   53:r1015l0    16   52:r1016l0    16   36:r1017l0    16
   34:r1018l0    16   31:r1019l0     0  287:r1020l1     0  286:r1021l1     2
  284:r1022l1     0  283:r1023l1     0  282:r1024l1     0  281:r1025l1     6
  280:r1026l1     0  279:r1027l1     0  278:r1028l1     0  277:r1029l1    16
  275:r1030l1     0  272:r1031l1     0  254:r1032l1     0  253:r1033l1     0
  252:r1034l1     0  251:r1035l1     0  250:r1036l1     0  244:r1037l1     0
  229:r1038l1     0  228:r1039l1     0  227:r1040l1     0  222:r1041l1    16
  200:r1042l1     0  191:r1043l1     0  189:r1044l1     0  183:r1045l1     0
  444:r1046l4     0  441:r1047l4     0  438:r1048l4     1  166:r1049l1     0
  165:r1050l1     6  164:r1051l1     0  162:r1052l1     0  160:r1053l1    31
  159:r1054l1    16  156:r1055l1    16  155:r1056l1     0  153:r1057l1     0
  152:r1058l1     0  151:r1059l1     0  397:r1060l5    16  387:r1061l5     0
  385:r1062l5     1  371:r1063l5     0  369:r1064l5     1  326:r1065l6     0
  324:r1066l6     1  314:r1067l6     0  312:r1068l6     1  136:r1069l1     0
  135:r1070l1    16  257:r1072l1    30  259:r1073l1    31  542:r1074l2    31
  540:r1075l2    30  506:r1076l3    31  504:r1077l3    30
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb41)
  8 vs parent 8:      Creating newreg=1078 from oldreg=416
rescanning insn with uid = 1805.
rescanning insn with uid = 903.
rescanning insn with uid = 905.
rescanning insn with uid = 924.
rescanning insn with uid = 880.
rescanning insn with uid = 884.
rescanning insn with uid = 736.
rescanning insn with uid = 720.
rescanning insn with uid = 724.
rescanning insn with uid = 1890.
rescanning insn with uid = 712.
rescanning insn with uid = 681.
rescanning insn with uid = 683.
rescanning insn with uid = 706.
rescanning insn with uid = 1889.
      Changing RTL for loop 6 (header bb100)
  8 vs parent 8:      Creating newreg=1079 from oldreg=368
  5 vs parent 5:      Creating newreg=1080 from oldreg=389
  6 vs parent 6:      Creating newreg=1081 from oldreg=968
  7 vs parent 7:      Creating newreg=1082 from oldreg=969
rescanning insn with uid = 1671.
rescanning insn with uid = 1675.
rescanning insn with uid = 1677.
rescanning insn with uid = 1711.
rescanning insn with uid = 1713.
rescanning insn with uid = 1720.
rescanning insn with uid = 1716.
rescanning insn with uid = 1724.
rescanning insn with uid = 1733.
rescanning insn with uid = 1745.
rescanning insn with uid = 1754.
rescanning insn with uid = 1756.
rescanning insn with uid = 1759.
rescanning insn with uid = 1763.
rescanning insn with uid = 1767.
rescanning insn with uid = 1777.
rescanning insn with uid = 1792.
rescanning insn with uid = 1789.
rescanning insn with uid = 1793.
rescanning insn with uid = 1796.
      Changing RTL for loop 5 (header bb98)
  8 vs parent 8:      Creating newreg=1083 from oldreg=368
  5 vs parent 5:      Creating newreg=1084 from oldreg=389
  6 vs parent 6:      Creating newreg=1085 from oldreg=968
  7 vs parent 7:      Creating newreg=1086 from oldreg=969
rescanning insn with uid = 1529.
rescanning insn with uid = 1533.
rescanning insn with uid = 1535.
rescanning insn with uid = 1575.
rescanning insn with uid = 1577.
rescanning insn with uid = 1585.
rescanning insn with uid = 1580.
rescanning insn with uid = 1590.
rescanning insn with uid = 1600.
rescanning insn with uid = 1612.
rescanning insn with uid = 1621.
rescanning insn with uid = 1623.
rescanning insn with uid = 1626.
rescanning insn with uid = 1631.
rescanning insn with uid = 1636.
rescanning insn with uid = 1647.
rescanning insn with uid = 1662.
rescanning insn with uid = 1659.
rescanning insn with uid = 1663.
rescanning insn with uid = 1666.
      Changing RTL for loop 4 (header bb82)
  11 vs parent 11:      Creating newreg=1087 from oldreg=173
  8 vs parent 8:      Creating newreg=1088 from oldreg=368
  -1 vs parent 5:      Creating newreg=1089 from oldreg=389
  10 vs parent 10:      Creating newreg=1090 from oldreg=394
  9 vs parent -1:      Creating newreg=1091 from oldreg=429
rescanning insn with uid = 1364.
rescanning insn with uid = 1358.
rescanning insn with uid = 1368.
rescanning insn with uid = 1365.
rescanning insn with uid = 1268.
rescanning insn with uid = 1249.
rescanning insn with uid = 1254.
rescanning insn with uid = 1265.
      Changing RTL for loop 3 (header bb59)
  6 vs parent 6:      Creating newreg=1092 from oldreg=181
  4 vs parent 4:      Creating newreg=1093 from oldreg=345
  2 vs parent 2:      Creating newreg=1094 from oldreg=420
  3 vs parent 3:      Creating newreg=1095 from oldreg=220
rescanning insn with uid = 999.
rescanning insn with uid = 964.
rescanning insn with uid = 966.
      Changing RTL for loop 2 (header bb48)
  6 vs parent 6:      Creating newreg=1096 from oldreg=181
  2 vs parent 2:      Creating newreg=1097 from oldreg=341
  8 vs parent 8:      Creating newreg=1098 from oldreg=1078
  4 vs parent 4:      Creating newreg=1099 from oldreg=199
rescanning insn with uid = 810.
rescanning insn with uid = 775.
rescanning insn with uid = 777.
scanning new insn with uid = 2230.
scanning new insn with uid = 2231.
scanning new insn with uid = 2232.
scanning new insn with uid = 2233.
scanning new insn with uid = 2234.
scanning new insn with uid = 2235.
scanning new insn with uid = 2236.
scanning new insn with uid = 2240.
scanning new insn with uid = 2241.
scanning new insn with uid = 2242.
scanning new insn with uid = 2243.
scanning new insn with uid = 2244.
scanning new insn with uid = 2245.
scanning new insn with uid = 2249.
scanning new insn with uid = 2250.
scanning new insn with uid = 2251.
scanning new insn with uid = 2252.
scanning new insn with uid = 2253.
scanning new insn with uid = 2254.
scanning new insn with uid = 2255.
scanning new insn with uid = 2264.
scanning new insn with uid = 2265.
scanning new insn with uid = 2266.
scanning new insn with uid = 2267.
    Adding cp435:a10r416-a123r1078
    Adding range [642..642] to allocno a10r416
    Adding range [643..643] to allocno a123r1078
    Adding range [642..643] to live through  allocno a6r339
    Adding range [642..643] to live through  allocno a8r355
    Adding range [642..643] to live through  allocno a9r356
    Adding range [642..643] to live through  allocno a7r418
    Adding range [642..643] to live through  allocno a4r463
    Adding range [642..643] to live through  allocno a11r967
    Adding range [642..643] to live through  allocno a12r970
    Adding range [642..643] to live through  allocno a13r971
    Adding range [642..643] to live through  allocno a14r972
    Adding range [642..643] to live through  allocno a5r987
    Adding range [642..643] to live through  allocno a3r989
    Adding range [642..643] to live through  allocno a2r990
    Adding range [642..643] to live through  allocno a1r992
    Adding range [642..643] to live through  allocno a0r993
    Adding cp436:a190r181-a507r1096
    Adding range [645..645] to allocno a507r1096
    Adding range [645..645] to allocno a507r1096
    Adding cp437:a265r199-a535r1099
    Adding range [645..647] to allocno a535r1099
    Adding cp438:a123r1078-a522r1098
    Adding range [645..649] to allocno a522r1098
    Adding range [646..650] to allocno a190r181
    Adding range [646..650] to allocno a190r181
    Adding range [648..650] to allocno a265r199
    Adding range [650..650] to allocno a123r1078
    Adding range [645..650] to live through  allocno a242r183
    Adding range [645..650] to live through  allocno a234r193
    Adding range [645..650] to live through  allocno a233r195
    Adding range [645..650] to live through  allocno a120r339
    Adding range [645..650] to live through  allocno a158r346
    Adding range [645..650] to live through  allocno a237r354
    Adding range [645..650] to live through  allocno a121r355
    Adding range [645..650] to live through  allocno a122r356
    Adding range [645..650] to live through  allocno a225r402
    Adding range [645..650] to live through  allocno a226r403
    Adding range [645..650] to live through  allocno a239r404
    Adding range [645..650] to live through  allocno a124r418
    Adding range [645..650] to live through  allocno a125r463
    Adding range [645..650] to live through  allocno a126r967
    Adding range [645..650] to live through  allocno a127r970
    Adding range [645..650] to live through  allocno a128r971
    Adding range [645..650] to live through  allocno a129r972
    Adding range [645..650] to live through  allocno a130r987
    Adding range [645..650] to live through  allocno a131r989
    Adding range [645..650] to live through  allocno a132r990
    Adding range [645..650] to live through  allocno a133r992
    Adding range [645..650] to live through  allocno a134r993
    Adding cp439:a190r181-a507r1096
    Adding range [652..652] to allocno a507r1096
    Adding range [652..652] to allocno a507r1096
    Adding cp440:a261r341-a512r1097
    Adding range [652..654] to allocno a512r1097
    Adding cp441:a123r1078-a522r1098
    Adding range [652..656] to allocno a522r1098
    Adding range [653..657] to allocno a190r181
    Adding range [653..657] to allocno a190r181
    Adding range [655..657] to allocno a261r341
    Adding range [657..657] to allocno a123r1078
    Adding range [652..657] to live through  allocno a242r183
    Adding range [652..657] to live through  allocno a234r193
    Adding range [652..657] to live through  allocno a233r195
    Adding range [652..657] to live through  allocno a120r339
    Adding range [652..657] to live through  allocno a158r346
    Adding range [652..657] to live through  allocno a237r354
    Adding range [652..657] to live through  allocno a121r355
    Adding range [652..657] to live through  allocno a122r356
    Adding range [652..657] to live through  allocno a225r402
    Adding range [652..657] to live through  allocno a226r403
    Adding range [652..657] to live through  allocno a239r404
    Adding range [652..657] to live through  allocno a124r418
    Adding range [652..657] to live through  allocno a125r463
    Adding range [652..657] to live through  allocno a126r967
    Adding range [652..657] to live through  allocno a127r970
    Adding range [652..657] to live through  allocno a128r971
    Adding range [652..657] to live through  allocno a129r972
    Adding range [652..657] to live through  allocno a130r987
    Adding range [652..657] to live through  allocno a131r989
    Adding range [652..657] to live through  allocno a132r990
    Adding range [652..657] to live through  allocno a133r992
    Adding range [652..657] to live through  allocno a134r993
    Adding cp442:a190r181-a507r1096
    Adding range [659..659] to allocno a190r181
    Adding range [659..659] to allocno a190r181
    Adding cp443:a261r341-a512r1097
    Adding range [659..661] to allocno a261r341
    Adding cp444:a123r1078-a522r1098
    Adding range [659..663] to allocno a123r1078
    Adding range [660..664] to allocno a507r1096
    Adding range [660..664] to allocno a507r1096
    Adding range [662..664] to allocno a512r1097
    Adding range [664..664] to allocno a522r1098
    Adding range [659..664] to live through  allocno a242r183
    Adding range [659..664] to live through  allocno a234r193
    Adding range [659..664] to live through  allocno a233r195
    Adding range [659..664] to live through  allocno a120r339
    Adding range [659..664] to live through  allocno a158r346
    Adding range [659..664] to live through  allocno a237r354
    Adding range [659..664] to live through  allocno a121r355
    Adding range [659..664] to live through  allocno a122r356
    Adding range [659..664] to live through  allocno a263r360
    Adding range [659..664] to live through  allocno a264r361
    Adding range [659..664] to live through  allocno a225r402
    Adding range [659..664] to live through  allocno a226r403
    Adding range [659..664] to live through  allocno a239r404
    Adding range [659..664] to live through  allocno a124r418
    Adding range [659..664] to live through  allocno a125r463
    Adding range [659..664] to live through  allocno a126r967
    Adding range [659..664] to live through  allocno a127r970
    Adding range [659..664] to live through  allocno a128r971
    Adding range [659..664] to live through  allocno a129r972
    Adding range [659..664] to live through  allocno a130r987
    Adding range [659..664] to live through  allocno a260r988
    Adding range [659..664] to live through  allocno a131r989
    Adding range [659..664] to live through  allocno a132r990
    Adding range [659..664] to live through  allocno a133r992
    Adding range [659..664] to live through  allocno a134r993
    Adding cp445:a190r181-a470r1092
    Adding range [666..666] to allocno a470r1092
    Adding range [666..666] to allocno a470r1092
    Adding cp446:a240r220-a499r1095
    Adding range [666..668] to allocno a499r1095
    Adding cp447:a223r345-a474r1093
    Adding range [666..670] to allocno a474r1093
    Adding range [667..671] to allocno a190r181
    Adding range [667..671] to allocno a190r181
    Adding range [669..671] to allocno a240r220
    Adding range [671..671] to allocno a223r345
    Adding range [666..671] to live through  allocno a234r193
    Adding range [666..671] to live through  allocno a233r195
    Adding range [666..671] to live through  allocno a120r339
    Adding range [666..671] to live through  allocno a158r346
    Adding range [666..671] to live through  allocno a121r355
    Adding range [666..671] to live through  allocno a122r356
    Adding range [666..671] to live through  allocno a224r362
    Adding range [666..671] to live through  allocno a206r397
    Adding range [666..671] to live through  allocno a198r398
    Adding range [666..671] to live through  allocno a225r402
    Adding range [666..671] to live through  allocno a226r403
    Adding range [666..671] to live through  allocno a124r418
    Adding range [666..671] to live through  allocno a125r463
    Adding range [666..671] to live through  allocno a126r967
    Adding range [666..671] to live through  allocno a127r970
    Adding range [666..671] to live through  allocno a128r971
    Adding range [666..671] to live through  allocno a129r972
    Adding range [666..671] to live through  allocno a130r987
    Adding range [666..671] to live through  allocno a131r989
    Adding range [666..671] to live through  allocno a132r990
    Adding range [666..671] to live through  allocno a133r992
    Adding range [666..671] to live through  allocno a134r993
    Adding cp448:a190r181-a470r1092
    Adding range [673..673] to allocno a470r1092
    Adding range [673..673] to allocno a470r1092
    Adding cp449:a223r345-a474r1093
    Adding range [673..675] to allocno a474r1093
    Adding cp450:a236r420-a487r1094
    Adding range [673..677] to allocno a487r1094
    Adding range [674..678] to allocno a190r181
    Adding range [674..678] to allocno a190r181
    Adding range [676..678] to allocno a223r345
    Adding range [678..678] to allocno a236r420
    Adding range [673..678] to live through  allocno a234r193
    Adding range [673..678] to live through  allocno a233r195
    Adding range [673..678] to live through  allocno a120r339
    Adding range [673..678] to live through  allocno a158r346
    Adding range [673..678] to live through  allocno a121r355
    Adding range [673..678] to live through  allocno a122r356
    Adding range [673..678] to live through  allocno a224r362
    Adding range [673..678] to live through  allocno a206r397
    Adding range [673..678] to live through  allocno a198r398
    Adding range [673..678] to live through  allocno a225r402
    Adding range [673..678] to live through  allocno a226r403
    Adding range [673..678] to live through  allocno a124r418
    Adding range [673..678] to live through  allocno a125r463
    Adding range [673..678] to live through  allocno a126r967
    Adding range [673..678] to live through  allocno a127r970
    Adding range [673..678] to live through  allocno a128r971
    Adding range [673..678] to live through  allocno a129r972
    Adding range [673..678] to live through  allocno a130r987
    Adding range [673..678] to live through  allocno a131r989
    Adding range [673..678] to live through  allocno a132r990
    Adding range [673..678] to live through  allocno a133r992
    Adding range [673..678] to live through  allocno a134r993
    Adding cp451:a190r181-a470r1092
    Adding range [680..680] to allocno a190r181
    Adding range [680..680] to allocno a190r181
    Adding cp452:a223r345-a474r1093
    Adding range [680..682] to allocno a223r345
    Adding cp453:a236r420-a487r1094
    Adding range [680..684] to allocno a236r420
    Adding range [681..685] to allocno a470r1092
    Adding range [681..685] to allocno a470r1092
    Adding range [683..685] to allocno a474r1093
    Adding range [685..685] to allocno a487r1094
    Adding range [680..685] to live through  allocno a234r193
    Adding range [680..685] to live through  allocno a233r195
    Adding range [680..685] to live through  allocno a120r339
    Adding range [680..685] to live through  allocno a158r346
    Adding range [680..685] to live through  allocno a237r354
    Adding range [680..685] to live through  allocno a121r355
    Adding range [680..685] to live through  allocno a122r356
    Adding range [680..685] to live through  allocno a224r362
    Adding range [680..685] to live through  allocno a238r363
    Adding range [680..685] to live through  allocno a206r397
    Adding range [680..685] to live through  allocno a198r398
    Adding range [680..685] to live through  allocno a225r402
    Adding range [680..685] to live through  allocno a226r403
    Adding range [680..685] to live through  allocno a239r404
    Adding range [680..685] to live through  allocno a124r418
    Adding range [680..685] to live through  allocno a125r463
    Adding range [680..685] to live through  allocno a126r967
    Adding range [680..685] to live through  allocno a127r970
    Adding range [680..685] to live through  allocno a128r971
    Adding range [680..685] to live through  allocno a129r972
    Adding range [680..685] to live through  allocno a235r986
    Adding range [680..685] to live through  allocno a130r987
    Adding range [680..685] to live through  allocno a131r989
    Adding range [680..685] to live through  allocno a132r990
    Adding range [680..685] to live through  allocno a133r992
    Adding range [680..685] to live through  allocno a134r993
    Adding cp454:a177r173-a410r1087
    Adding range [687..687] to allocno a177r173
    Adding cp455:a139r368-a419r1088
    Adding range [687..689] to allocno a139r368
    Adding cp456:a145r389-a420r1089
    Adding range [687..691] to allocno a145r389
    Adding cp457:a168r394-a422r1090
    Adding range [687..693] to allocno a168r394
    Adding cp458:a171r429-a424r1091
    Adding range [687..695] to allocno a171r429
    Adding range [688..696] to allocno a410r1087
    Adding range [690..696] to allocno a419r1088
    Adding range [692..696] to allocno a420r1089
    Adding range [694..696] to allocno a422r1090
    Adding range [696..696] to allocno a424r1091
    Adding range [687..696] to live through  allocno a174r216
    Adding range [687..696] to live through  allocno a173r279
    Adding range [687..696] to live through  allocno a120r339
    Adding range [687..696] to live through  allocno a158r346
    Adding range [687..696] to live through  allocno a178r348
    Adding range [687..696] to live through  allocno a121r355
    Adding range [687..696] to live through  allocno a122r356
    Adding range [687..696] to live through  allocno a179r365
    Adding range [687..696] to live through  allocno a180r393
    Adding range [687..696] to live through  allocno a181r423
    Adding range [687..696] to live through  allocno a125r463
    Adding range [687..696] to live through  allocno a126r967
    Adding range [687..696] to live through  allocno a127r970
    Adding range [687..696] to live through  allocno a128r971
    Adding range [687..696] to live through  allocno a129r972
    Adding range [687..696] to live through  allocno a170r982
    Adding range [687..696] to live through  allocno a169r983
    Adding range [687..696] to live through  allocno a167r984
    Adding range [687..696] to live through  allocno a130r987
    Adding range [687..696] to live through  allocno a131r989
    Adding range [687..696] to live through  allocno a132r990
    Adding range [687..696] to live through  allocno a133r992
    Adding range [687..696] to live through  allocno a134r993
    Adding cp459:a139r368-a419r1088
    Adding range [698..698] to allocno a419r1088
    Adding cp460:a145r389-a420r1089
    Adding range [698..700] to allocno a420r1089
    Adding range [699..701] to allocno a139r368
    Adding range [701..701] to allocno a145r389
    Adding range [698..701] to live through  allocno a120r339
    Adding range [698..701] to live through  allocno a158r346
    Adding range [698..701] to live through  allocno a121r355
    Adding range [698..701] to live through  allocno a122r356
    Adding range [698..701] to live through  allocno a125r463
    Adding range [698..701] to live through  allocno a126r967
    Adding range [698..701] to live through  allocno a127r970
    Adding range [698..701] to live through  allocno a128r971
    Adding range [698..701] to live through  allocno a129r972
    Adding range [698..701] to live through  allocno a130r987
    Adding range [698..701] to live through  allocno a131r989
    Adding range [698..701] to live through  allocno a132r990
    Adding range [698..701] to live through  allocno a133r992
    Adding range [698..701] to live through  allocno a134r993
    Adding cp461:a139r368-a348r1083
    Adding range [703..703] to allocno a139r368
    Adding cp462:a145r389-a354r1084
    Adding range [703..705] to allocno a145r389
    Adding cp463:a146r968-a358r1085
    Adding range [703..707] to allocno a146r968
    Adding cp464:a147r969-a359r1086
    Adding range [703..709] to allocno a147r969
    Adding range [704..710] to allocno a348r1083
    Adding range [706..710] to allocno a354r1084
    Adding range [708..710] to allocno a358r1085
    Adding range [710..710] to allocno a359r1086
    Adding range [703..710] to live through  allocno a120r339
    Adding range [703..710] to live through  allocno a121r355
    Adding range [703..710] to live through  allocno a122r356
    Adding range [703..710] to live through  allocno a140r370
    Adding range [703..710] to live through  allocno a141r372
    Adding range [703..710] to live through  allocno a142r373
    Adding range [703..710] to live through  allocno a143r374
    Adding range [703..710] to live through  allocno a144r375
    Adding range [703..710] to live through  allocno a125r463
    Adding range [703..710] to live through  allocno a149r860
    Adding range [703..710] to live through  allocno a126r967
    Adding range [703..710] to live through  allocno a127r970
    Adding range [703..710] to live through  allocno a128r971
    Adding range [703..710] to live through  allocno a129r972
    Adding range [703..710] to live through  allocno a148r981
    Adding range [703..710] to live through  allocno a130r987
    Adding range [703..710] to live through  allocno a131r989
    Adding range [703..710] to live through  allocno a132r990
    Adding range [703..710] to live through  allocno a133r992
    Adding range [703..710] to live through  allocno a134r993
    Adding cp465:a139r368-a348r1083
    Adding range [712..712] to allocno a348r1083
    Adding cp466:a145r389-a354r1084
    Adding range [712..714] to allocno a354r1084
    Adding cp467:a146r968-a358r1085
    Adding range [712..716] to allocno a358r1085
    Adding cp468:a147r969-a359r1086
    Adding range [712..718] to allocno a359r1086
    Adding range [713..719] to allocno a139r368
    Adding range [715..719] to allocno a145r389
    Adding range [717..719] to allocno a146r968
    Adding range [719..719] to allocno a147r969
    Adding range [712..719] to live through  allocno a345r339
    Adding range [712..719] to live through  allocno a346r355
    Adding range [712..719] to live through  allocno a347r356
    Adding range [712..719] to live through  allocno a349r370
    Adding range [712..719] to live through  allocno a350r372
    Adding range [712..719] to live through  allocno a351r373
    Adding range [712..719] to live through  allocno a352r374
    Adding range [712..719] to live through  allocno a353r375
    Adding range [712..719] to live through  allocno a355r463
    Adding range [712..719] to live through  allocno a357r967
    Adding range [712..719] to live through  allocno a360r970
    Adding range [712..719] to live through  allocno a361r971
    Adding range [712..719] to live through  allocno a362r972
    Adding range [712..719] to live through  allocno a364r987
    Adding range [712..719] to live through  allocno a365r989
    Adding range [712..719] to live through  allocno a366r990
    Adding range [712..719] to live through  allocno a367r992
    Adding range [712..719] to live through  allocno a368r993
    Adding cp469:a139r368-a291r1079
    Adding range [721..721] to allocno a139r368
    Adding cp470:a145r389-a297r1080
    Adding range [721..723] to allocno a145r389
    Adding cp471:a146r968-a301r1081
    Adding range [721..725] to allocno a146r968
    Adding cp472:a147r969-a302r1082
    Adding range [721..727] to allocno a147r969
    Adding range [722..728] to allocno a291r1079
    Adding range [724..728] to allocno a297r1080
    Adding range [726..728] to allocno a301r1081
    Adding range [728..728] to allocno a302r1082
    Adding range [721..728] to live through  allocno a120r339
    Adding range [721..728] to live through  allocno a121r355
    Adding range [721..728] to live through  allocno a122r356
    Adding range [721..728] to live through  allocno a140r370
    Adding range [721..728] to live through  allocno a141r372
    Adding range [721..728] to live through  allocno a142r373
    Adding range [721..728] to live through  allocno a143r374
    Adding range [721..728] to live through  allocno a144r375
    Adding range [721..728] to live through  allocno a125r463
    Adding range [721..728] to live through  allocno a138r915
    Adding range [721..728] to live through  allocno a126r967
    Adding range [721..728] to live through  allocno a127r970
    Adding range [721..728] to live through  allocno a128r971
    Adding range [721..728] to live through  allocno a129r972
    Adding range [721..728] to live through  allocno a137r979
    Adding range [721..728] to live through  allocno a130r987
    Adding range [721..728] to live through  allocno a131r989
    Adding range [721..728] to live through  allocno a132r990
    Adding range [721..728] to live through  allocno a133r992
    Adding range [721..728] to live through  allocno a134r993
scanning new insn with uid = 2237.
scanning new insn with uid = 2238.
scanning new insn with uid = 2239.
scanning new insn with uid = 2246.
scanning new insn with uid = 2247.
scanning new insn with uid = 2248.
scanning new insn with uid = 2256.
scanning new insn with uid = 2257.
scanning new insn with uid = 2258.
scanning new insn with uid = 2259.
changing bb of uid 2268
  unscanned insn
scanning new insn with uid = 2260.
scanning new insn with uid = 2261.
scanning new insn with uid = 2262.
scanning new insn with uid = 2263.
    New r1078: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1079: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r1080: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1081: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1082: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1083: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r1084: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1085: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1086: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1087: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1088: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r1089: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1090: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1091: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1092: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r1093: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1094: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1095: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1096: setting preferred GENERAL_REGS, alternative ALL_REGS
    New r1097: setting preferred GENERAL_REGS, alternative NO_REGS
    New r1098: setting preferred LO_REGS, alternative GENERAL_REGS
    New r1099: setting preferred LO_REGS, alternative GENERAL_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 105 n_edges 150 count 186 (  1.8)
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 104 99 100 101 102 103
;;
;; Loop 1
;;  header 41, latch 102
;;  depth 1, outer 0
;;  nodes: 41 102 93 92 101 100 99 104 97 95 98 96 90 91 89 80 79 78 88 87 84 86 85 82 81 83 76 77 73 75 74 72 71 70 69 68 67 66 62 64 63 60 59 61 65 57 58 56 55 51 53 52 49 48 50 54 46 47 45 43 44 42
;;
;; Loop 6
;;  header 100, latch 100
;;  depth 2, outer 1
;;  nodes: 100
;;
;; Loop 5
;;  header 98, latch 98
;;  depth 2, outer 1
;;  nodes: 98
;;
;; Loop 4
;;  header 82, latch 87
;;  depth 2, outer 1
;;  nodes: 82 87 84 86 85 83
;;
;; Loop 3
;;  header 59, latch 63
;;  depth 2, outer 1
;;  nodes: 59 63 60 61
;;
;; Loop 2
;;  header 48, latch 52
;;  depth 2, outer 1
;;  nodes: 48 52 49 50
;; 2 succs { 3 9 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 15 }
;; 8 succs { 15 }
;; 9 succs { 11 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 23 }
;; 17 succs { 18 19 }
;; 18 succs { 23 }
;; 19 succs { 20 21 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 28 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 30 29 }
;; 29 succs { 36 }
;; 30 succs { 32 31 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 35 34 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 38 37 }
;; 37 succs { 40 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 54 }
;; 47 succs { 54 }
;; 48 succs { 49 52 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 55 }
;; 52 succs { 48 53 }
;; 53 succs { 55 }
;; 54 succs { 48 }
;; 55 succs { 57 56 }
;; 56 succs { 57 58 }
;; 57 succs { 65 }
;; 58 succs { 65 }
;; 59 succs { 60 63 }
;; 60 succs { 61 63 }
;; 61 succs { 62 63 }
;; 62 succs { 66 }
;; 63 succs { 59 64 }
;; 64 succs { 66 }
;; 65 succs { 59 }
;; 66 succs { 68 67 }
;; 67 succs { 69 }
;; 68 succs { 69 }
;; 69 succs { 71 70 }
;; 70 succs { 72 }
;; 71 succs { 72 }
;; 72 succs { 73 75 }
;; 73 succs { 74 78 }
;; 74 succs { 78 }
;; 75 succs { 76 78 }
;; 76 succs { 77 78 }
;; 77 succs { 78 }
;; 78 succs { 81 79 }
;; 79 succs { 80 90 }
;; 80 succs { 89 }
;; 81 succs { 82 }
;; 82 succs { 83 85 }
;; 83 succs { 84 86 }
;; 84 succs { 87 }
;; 85 succs { 87 }
;; 86 succs { 87 }
;; 87 succs { 82 88 }
;; 88 succs { 79 }
;; 89 succs { 92 }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 95 93 }
;; 93 succs { 102 94 }
;; 94 succs { 103 }
;; 95 succs { 97 96 }
;; 96 succs { 98 }
;; 97 succs { 99 }
;; 98 succs { 98 104 }
;; 104 succs { 99 }
;; 99 succs { 100 }
;; 100 succs { 100 101 }
;; 101 succs { 93 }
;; 102 succs { 41 }
;; 103 succs { 1 }
+++Costs: overall 2003402, reg 1553812, mem 449590, ld 1940, st 970, move 17757
+++       move loops 0, new jumps 3


drawMap

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={182d,159u} r1={199d,75u} r2={168d,42u} r3={158d,32u} r7={1d,104u} r12={250d} r13={1d,229u} r14={126d} r15={125d} r16={146d,40u} r17={130d,4u} r18={126d} r19={126d} r20={126d} r21={126d} r22={126d} r23={126d} r24={126d} r25={126d} r26={126d} r27={126d} r28={126d} r29={126d} r30={126d} r31={126d} r48={125d} r49={125d} r50={125d} r51={125d} r52={125d} r53={125d} r54={125d} r55={125d} r56={125d} r57={125d} r58={125d} r59={125d} r60={125d} r61={125d} r62={125d} r63={125d} r64={125d} r65={125d} r66={125d} r67={125d} r68={125d} r69={125d} r70={125d} r71={125d} r72={125d} r73={125d} r74={125d} r75={125d} r76={125d} r77={125d} r78={125d} r79={125d} r80={125d} r81={125d} r82={125d} r83={125d} r84={125d} r85={125d} r86={125d} r87={125d} r88={125d} r89={125d} r90={125d} r91={125d} r92={125d} r93={125d} r94={125d} r95={125d} r96={125d} r97={125d} r98={125d} r99={125d} r100={174d,33u} r101={135d,10u} r102={1d,104u} r103={1d,103u} r104={125d} r105={125d} r106={125d} r125={4d,7u} r146={1d,1u} r154={1d,1u} r160={2d,4u} r169={1d,1u} r171={1d,2u} r173={3d,3u} r181={7d,9u} r183={1d,8u,1e} r193={2d,6u} r195={2d,6u} r199={1d,1u} r200={1d,2u} r201={1d,2u} r216={1d,6u} r220={1d,1u} r221={1d,2u} r222={1d,2u} r227={1d,2u,1e} r279={2d,3u} r283={1d,1u} r296={1d,4u} r309={1d,4u,2e} r314={1d,4u,2e} r339={2d,8u,1e} r340={2d,5u} r341={2d,2u} r342={4d,4u} r343={3d,3u} r345={4d,3u} r346={3d,9u,3e} r347={2d,3u} r348={2d,7u,2e} r349={4d,8u} r350={3d,4u} r351={3d,4u} r352={3d,6u} r353={3d,8u,1e} r354={1d,6u} r355={1d,11u,2e} r356={1d,11u,2e} r357={1d,1u} r358={1d,1u} r359={1d,7u} r360={2d,6u} r361={2d,1u} r362={1d,3u} r363={2d,1u} r364={1d,2u} r365={1d,3u} r366={1d,3u} r368={3d,9u} r369={1d,2u} r370={1d,3u} r371={1d,2u} r372={1d,5u} r373={1d,5u} r374={1d,5u} r375={1d,5u} r380={1d,13u} r389={4d,5u} r393={3d,5u} r394={1d,1u} r395={1d,4u} r396={1d,2u} r397={4d,15u} r398={4d,14u} r400={1d,4u} r401={1d,2u} r402={3d,12u} r403={3d,15u} r404={3d,4u,1e} r408={2d,1u} r409={3d,3u,2e} r410={3d,3u,1e} r411={1d,2u} r412={3d,3u,2e} r413={3d,3u,1e} r416={2d,3u} r418={2d,1u} r420={2d,2u} r423={2d,3u} r429={1d,1u} r452={1d,4u,2e} r457={1d,4u,2e} r463={2d,2u} r475={1d,4u} r481={1d,1u} r483={1d,1u} r519={1d,1u} r521={1d,1u} r533={1d,1u} r534={1d,1u} r535={1d,2u} r537={1d,1u} r538={1d,2u,1e} r539={1d,1u} r540={1d,1u} r543={1d,1u} r545={1d,1u} r546={1d,1u} r548={1d,1u} r552={1d,1u} r553={1d,1u} r556={1d,2u,1e} r557={1d,1u} r558={1d,1u} r559={1d,2u} r561={1d,1u} r562={1d,1u} r563={1d,1u} r566={1d,1u} r568={1d,1u} r569={1d,1u} r571={1d,1u} r575={1d,1u} r576={1d,1u} r585={1d,1u} r586={1d,1u} r587={1d,2u} r589={1d,1u} r590={1d,2u,1e} r591={1d,1u} r592={1d,1u} r595={1d,1u} r597={1d,1u} r598={1d,1u} r600={1d,1u} r605={1d,1u} r606={1d,1u,1e} r609={1d,2u,1e} r610={1d,1u} r611={1d,1u} r612={1d,2u} r614={1d,1u} r615={1d,1u} r616={1d,1u} r619={1d,1u} r621={1d,1u} r622={1d,1u} r624={1d,1u} r627={1d,1u} r628={1d,1u,1e} r630={1d,2u} r632={1d,2u} r634={1d,1u} r636={1d,1u} r637={1d,1u} r639={1d,1u} r640={1d,2u} r642={1d,1u} r651={1d,1u} r664={1d,1u} r672={1d,1u} r674={1d,1u} r681={1d,1u} r682={1d,2u} r688={1d,1u} r692={1d,1u} r695={1d,1u} r696={1d,1u} r697={1d,1u} r701={1d,2u} r703={1d,1u} r704={1d,1u} r716={1d,1u} r720={1d,1u} r721={1d,1u} r727={1d,1u} r729={1d,1u} r734={1d,1u} r735={1d,2u} r736={1d,1u} r737={1d,1u} r741={1d,2u} r743={1d,1u} r747={1d,1u} r748={1d,2u} r749={1d,2u} r750={1d,2u} r751={1d,1u} r752={1d,3u} r754={1d,1u} r755={1d,1u} r756={1d,1u} r757={1d,1u} r759={1d,1u,1e} r760={1d,1u} r763={1d,1u} r764={1d,1u} r765={1d,3u} r767={2d,2u} r768={1d,1u} r769={1d,1u} r772={1d,1u} r773={1d,1u} r774={1d,3u} r776={2d,2u} r777={1d,1u} r778={1d,1u} r783={1d,1u} r784={1d,1u,1e} r785={1d,1u} r786={1d,1u} r787={1d,1u} r794={1d,1u} r796={1d,1u} r798={1d,2u} r801={1d,5u,4e} r803={1d,1u} r804={1d,1u} r805={1d,1u} r807={1d,2u} r808={1d,1u} r809={1d,1u} r810={1d,1u} r813={1d,1u} r814={1d,1u} r815={1d,1u} r817={1d,1u} r818={1d,1u} r819={1d,1u} r821={1d,2u} r822={1d,1u} r823={1d,1u} r824={1d,1u} r827={1d,1u} r828={1d,1u} r829={1d,1u} r830={1d,1u} r833={1d,2u} r834={1d,1u} r857={1d,1u} r858={1d,1u,1e} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,2u} r873={1d,7u,2e} r875={1d,1u} r876={1d,1u} r877={1d,1u} r880={1d,1u} r881={1d,1u} r882={1d,1u} r885={1d,1u} r886={1d,1u} r887={1d,1u} r889={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r899={1d,1u} r900={1d,1u} r901={1d,1u} r904={1d,1u} r905={1d,1u} r906={1d,1u} r908={1d,1u} r913={1d,1u,1e} r914={1d,1u} r915={1d,1u} r916={1d,1u} r917={1d,1u} r918={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r925={1d,2u} r928={1d,7u,2e} r930={1d,1u} r931={1d,1u} r934={1d,1u} r935={1d,1u} r938={1d,1u} r939={1d,1u} r941={1d,1u} r946={1d,1u} r947={1d,1u} r950={1d,1u} r951={1d,1u} r954={1d,1u} r955={1d,1u} r957={1d,1u} r967={4d,19u,3e} r968={3d,2u} r969={3d,2u} r970={2d,4u} r971={1d,10u,4e} r972={1d,10u,4e} r973={2d,4u} r979={1d,2u} r981={1d,2u} r982={1d,2u} r983={1d,2u} r984={1d,1u} r986={1d,1u} r987={1d,2u} r988={1d,1u} r989={1d,2u} r990={1d,7u} r992={1d,2u} r993={1d,2u} r996={1d,1u} r997={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1001={1d,1u} r1002={1d,1u} r1003={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1008={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1012={1d,1u} r1013={1d,1u} r1014={1d,1u} r1015={1d,1u} r1016={1d,1u} r1017={1d,1u} r1018={1d,1u} r1019={1d,1u} r1020={1d,1u} r1021={1d,1u} r1022={1d,1u} r1023={1d,1u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1027={1d,1u} r1028={1d,1u} r1029={1d,1u} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,1u} r1034={1d,1u} r1035={1d,1u} r1036={1d,1u} r1037={1d,1u} r1038={1d,1u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1042={1d,1u} r1043={1d,1u} r1044={1d,1u} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,1u} r1049={1d,1u} r1050={1d,1u} r1051={1d,1u} r1052={1d,1u} r1053={1d,1u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1057={1d,1u} r1058={1d,1u} r1059={1d,1u} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,1u} r1064={1d,1u} r1065={1d,1u} r1066={1d,1u} r1067={1d,1u} r1068={1d,1u} r1069={1d,1u} r1070={1d,1u} r1072={1d,1u} r1073={1d,1u} r1074={1d,1u} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={4d,17u} r1079={1d,2u} r1080={2d,12u} r1081={1d,3u} r1082={1d,3u} r1083={1d,3u} r1084={2d,13u} r1085={1d,4u} r1086={1d,4u} r1087={1d,2u} r1088={1d,2u} r1089={1d,1u} r1090={2d,4u} r1091={1d,1u} r1092={1d,2u} r1093={1d,2u} r1094={2d,3u} r1095={1d,2u} r1096={1d,2u} r1097={2d,3u} r1098={1d,2u} r1099={1d,2u} 
;;    total ref usage 12823{10947d,1819u,57e} in 1406{1281 regular + 125 call} insns.
(note 1 0 35 NOTE_INSN_DELETED)
(note 35 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 35 74 2 NOTE_INSN_FUNCTION_BEG)
(note 74 3 37 2 NOTE_INSN_DELETED)
(debug_insn 37 74 62 2 (debug_marker) "../System/ray_funkcije.c":72:2 -1
     (nil))
(insn 62 37 67 2 (set (reg/f:SI 971)
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":79:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)
        (nil)))
(insn 67 62 39 2 (set (reg/f:SI 972)
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":80:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)
        (nil)))
(insn 39 67 40 2 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/ray_funkcije.c":72:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 40 39 41 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 0000000005e0e800 TIMUT_stopwatch_set_time_mark>) [0 TIMUT_stopwatch_set_time_mark S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":72:2 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_set_time_mark") [flags 0x41]  <function_decl 0000000005e0e800 TIMUT_stopwatch_set_time_mark>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 41 40 42 2 (debug_marker) "../System/ray_funkcije.c":73:2 -1
     (nil))
(debug_insn 42 41 43 2 (var_location:SF dx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:8 -1
     (nil))
(debug_insn 43 42 44 2 (var_location:SF dy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:16 -1
     (nil))
(debug_insn 44 43 45 2 (var_location:SF d1 (const_double:SF 1.0e+4 [0x0.9c4p+14])) "../System/ray_funkcije.c":73:24 -1
     (nil))
(debug_insn 45 44 46 2 (var_location:SF d2 (const_double:SF 1.0e+4 [0x0.9c4p+14])) "../System/ray_funkcije.c":73:36 -1
     (nil))
(debug_insn 46 45 47 2 (var_location:SF rvx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:48 -1
     (nil))
(debug_insn 47 46 48 2 (var_location:SF rvy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:57 -1
     (nil))
(debug_insn 48 47 49 2 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":73:66 -1
     (nil))
(debug_insn 49 48 50 2 (var_location:SF newAngle (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:4 -1
     (nil))
(debug_insn 50 49 51 2 (var_location:SF rhx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:18 -1
     (nil))
(debug_insn 51 50 52 2 (var_location:SF rhy (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:27 -1
     (nil))
(debug_insn 52 51 53 2 (var_location:SF d (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:36 -1
     (nil))
(debug_insn 53 52 54 2 (var_location:SF rx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:43 -1
     (nil))
(debug_insn 54 53 55 2 (var_location:SF ry (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":74:51 -1
     (nil))
(debug_insn 55 54 56 2 (debug_marker) "../System/ray_funkcije.c":75:2 -1
     (nil))
(debug_insn 56 55 57 2 (var_location:SI wx (const_int 0 [0])) "../System/ray_funkcije.c":75:6 -1
     (nil))
(debug_insn 57 56 58 2 (var_location:SI wy (const_int 0 [0])) "../System/ray_funkcije.c":75:14 -1
     (nil))
(debug_insn 58 57 59 2 (debug_marker) "../System/ray_funkcije.c":76:2 -1
     (nil))
(debug_insn 59 58 60 2 (debug_marker) "../System/ray_funkcije.c":77:2 -1
     (nil))
(call_insn 60 59 61 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000006cc2300 KBD_scan>) [0 KBD_scan S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":77:2 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_scan") [flags 0x41]  <function_decl 0000000006cc2300 KBD_scan>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 61 60 63 2 (debug_marker) "../System/ray_funkcije.c":79:2 -1
     (nil))
(insn 63 61 68 2 (set (reg:SF 481 [ px ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":79:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 68 63 72 2 (set (reg:SF 483 [ py ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":80:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 72 68 64 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":83:6 728 {*thumb2_movsi_vfp}
     (nil))
(insn 64 72 65 2 (set (reg/v:SI 355 [ ipx ])
        (fix:SI (fix:SF (reg:SF 481 [ px ])))) "../System/ray_funkcije.c":79:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 481 [ px ])
        (nil)))
(debug_insn 65 64 66 2 (var_location:SI ipx (reg/v:SI 355 [ ipx ])) "../System/ray_funkcije.c":79:6 -1
     (nil))
(debug_insn 66 65 69 2 (debug_marker) "../System/ray_funkcije.c":80:2 -1
     (nil))
(insn 69 66 70 2 (set (reg/v:SI 356 [ ipy ])
        (fix:SI (fix:SF (reg:SF 483 [ py ])))) "../System/ray_funkcije.c":80:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 483 [ py ])
        (nil)))
(debug_insn 70 69 71 2 (var_location:SI ipy (reg/v:SI 356 [ ipy ])) "../System/ray_funkcije.c":80:6 -1
     (nil))
(debug_insn 71 70 73 2 (debug_marker) "../System/ray_funkcije.c":83:2 -1
     (nil))
(call_insn 73 71 2035 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":83:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2035 73 80 2 (set (reg:SI 996)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":83:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 80 2035 81 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 996)
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":83:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 996)
        (nil)))
(jump_insn 81 80 82 2 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "../System/ray_funkcije.c":83:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 145)
(note 82 81 86 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 86 82 83 3 NOTE_INSN_DELETED)
(debug_insn 83 86 84 3 (debug_marker) "../System/ray_funkcije.c":84:3 -1
     (nil))
(insn 84 83 85 3 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":84:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 85 84 2036 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":84:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2036 85 92 3 (set (reg:SI 997)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":84:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 92 2036 93 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 997)
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":84:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 997)
        (nil)))
(jump_insn 93 92 1957 3 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2110)
            (pc))) "../System/ray_funkcije.c":84:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 2110)
(note 1957 93 1942 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 1942 1957 2111 4 (set (reg/f:SI 967)
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(jump_insn 2111 1942 2112 4 (set (pc)
        (label_ref 109)) 284 {*arm_jump}
     (nil)
 -> 109)
(barrier 2112 2111 2110)
(code_label 2110 2112 94 5 115 (nil) [1 uses])
(note 94 2110 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 107 94 95 5 NOTE_INSN_DELETED)
(debug_insn 95 107 96 5 (debug_marker) "../System/ray_funkcije.c":85:4 -1
     (nil))
(insn 96 95 98 5 (set (reg/f:SI 967)
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) "../System/ray_funkcije.c":85:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 98 96 99 5 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":85:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 99 98 101 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 101 99 103 5 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":85:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 103 101 106 5 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 106 103 2037 5 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":85:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2037 106 108 5 (set (reg:SF 998)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":85:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
            (nil))))
(insn 108 2037 109 5 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 998)) "../System/ray_funkcije.c":85:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 998)
        (nil)))
(code_label 109 108 110 6 22 (nil) [1 uses])
(note 110 109 114 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 114 110 111 6 NOTE_INSN_DELETED)
(debug_insn 111 114 112 6 (debug_marker) "../System/ray_funkcije.c":86:3 -1
     (nil))
(insn 112 111 113 6 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":86:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 113 112 2038 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":86:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2038 113 120 6 (set (reg:SI 999)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":86:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 120 2038 121 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 999)
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":86:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 999)
        (nil)))
(jump_insn 121 120 122 6 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "../System/ray_funkcije.c":86:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 127)
(note 122 121 124 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 124 122 2113 7 (set (reg:SF 125 [ _13 ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":94:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(jump_insn 2113 124 2114 7 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2114 2113 127)
(code_label 127 2114 128 8 23 (nil) [1 uses])
(note 128 127 129 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 129 128 131 8 (debug_marker) "../System/ray_funkcije.c":87:4 -1
     (nil))
(insn 131 129 132 8 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 132 131 134 8 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 134 132 136 8 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":87:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 136 134 139 8 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 139 136 2039 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":87:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2039 139 140 8 (set (reg:SF 1000)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 140 2039 142 8 (set (reg:SF 125 [ _13 ])
        (reg:SF 1000)) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1000)
        (nil)))
(insn 142 140 2115 8 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":87:10 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 2115 142 2116 8 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2116 2115 145)
(code_label 145 2116 146 9 21 (nil) [1 uses])
(note 146 145 150 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 150 146 147 9 NOTE_INSN_DELETED)
(debug_insn 147 150 148 9 (debug_marker) "../System/ray_funkcije.c":89:3 -1
     (nil))
(insn 148 147 149 9 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":89:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 149 148 2040 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":89:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2040 149 156 9 (set (reg:SI 1001)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":89:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 156 2040 157 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1001)
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":89:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 1001)
        (nil)))
(jump_insn 157 156 1959 9 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2117)
            (pc))) "../System/ray_funkcije.c":89:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 2117)
(note 1959 157 1943 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 1943 1959 2118 10 (set (reg/f:SI 967)
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(jump_insn 2118 1943 2119 10 (set (pc)
        (label_ref 173)) 284 {*arm_jump}
     (nil)
 -> 173)
(barrier 2119 2118 2117)
(code_label 2117 2119 158 11 116 (nil) [1 uses])
(note 158 2117 171 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 171 158 159 11 NOTE_INSN_DELETED)
(debug_insn 159 171 160 11 (debug_marker) "../System/ray_funkcije.c":90:4 -1
     (nil))
(insn 160 159 162 11 (set (reg/f:SI 967)
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) "../System/ray_funkcije.c":90:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 162 160 163 11 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":90:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 163 162 165 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 165 163 167 11 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":90:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 167 165 170 11 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 170 167 2041 11 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":90:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2041 170 172 11 (set (reg:SF 1002)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":90:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
            (nil))))
(insn 172 2041 173 11 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 1002)) "../System/ray_funkcije.c":90:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1002)
        (nil)))
(code_label 173 172 174 12 25 (nil) [1 uses])
(note 174 173 178 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 178 174 175 12 NOTE_INSN_DELETED)
(debug_insn 175 178 176 12 (debug_marker) "../System/ray_funkcije.c":91:3 -1
     (nil))
(insn 176 175 177 12 (set (reg:SI 0 r0)
        (const_int 0 [0])) "../System/ray_funkcije.c":91:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 177 176 2042 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":91:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2042 177 184 12 (set (reg:SI 1003)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":91:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 184 2042 185 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1003)
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":91:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 1003)
        (nil)))
(jump_insn 185 184 186 12 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) "../System/ray_funkcije.c":91:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 191)
(note 186 185 188 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 188 186 2120 13 (set (reg:SF 125 [ _13 ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":94:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(jump_insn 2120 188 2121 13 (set (pc)
        (label_ref 207)) 284 {*arm_jump}
     (nil)
 -> 207)
(barrier 2121 2120 191)
(code_label 191 2121 192 14 26 (nil) [1 uses])
(note 192 191 193 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 193 192 195 14 (debug_marker) "../System/ray_funkcije.c":92:4 -1
     (nil))
(insn 195 193 196 14 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 196 195 198 14 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 198 196 200 14 (set (reg:DF 2 r2)
        (const_double:DF 8.00000000000000016653345369377348106354475021362e-2 [0x0.a3d70a3d70a3d8p-3])) "../System/ray_funkcije.c":92:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 200 198 203 14 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 203 200 2043 14 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":92:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2043 203 204 14 (set (reg:SF 1004)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 204 2043 206 14 (set (reg:SF 125 [ _13 ])
        (reg:SF 1004)) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1004)
        (nil)))
(insn 206 204 207 14 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":92:10 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 207 206 208 15 24 (nil) [3 uses])
(note 208 207 209 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 209 208 210 15 (debug_marker) "../System/ray_funkcije.c":94:2 -1
     (nil))
(insn 210 209 2218 15 (set (reg:SF 519)
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":94:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2218 210 2219 15 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 125 [ _13 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":94:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2219 2218 212 15 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":94:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 212 2219 216 15 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2122)
            (pc))) "../System/ray_funkcije.c":94:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 2122)
(note 216 212 217 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 217 216 219 16 (debug_marker) "../System/ray_funkcije.c":95:3 -1
     (nil))
(insn 219 217 220 16 (set (reg:SF 521)
        (const_double:SF 6.28318023681640625e+0 [0x0.c90fdp+3])) "../System/ray_funkcije.c":95:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.28318023681640625e+0 [0x0.c90fdp+3])
        (nil)))
(insn 220 219 221 16 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 521)) "../System/ray_funkcije.c":95:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 521)
        (nil)))
(debug_insn 221 220 222 16 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 222 221 223 16 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 223 222 224 16 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 224 223 225 16 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 225 224 226 16 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 226 225 227 16 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(debug_insn 227 226 228 16 (var_location:SI fCheckX (const_int 5 [0x5])) -1
     (nil))
(debug_insn 228 227 9 16 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 9 228 10 16 (set (reg/v:SI 342 [ fCheckX ])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(insn 10 9 2123 16 (set (reg/v:SI 343 [ fCheckY ])
        (const_int -5 [0xfffffffffffffffb])) "../System/ray_funkcije.c":107:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -5 [0xfffffffffffffffb])
        (nil)))
(jump_insn 2123 10 2124 16 (set (pc)
        (label_ref 300)) 284 {*arm_jump}
     (nil)
 -> 300)
(barrier 2124 2123 2122)
(code_label 2122 2124 232 17 117 (nil) [1 uses])
(note 232 2122 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 241 232 242 17 NOTE_INSN_DELETED)
(note 242 241 233 17 NOTE_INSN_DELETED)
(debug_insn 233 242 234 17 (debug_marker) "../System/ray_funkcije.c":96:7 -1
     (nil))
(insn 234 233 235 17 (set (reg:SF 0 r0)
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":96:17 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 235 234 238 17 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":96:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 238 235 240 17 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":96:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 240 238 2044 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":96:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2044 240 243 17 (set (reg:SI 1005)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":96:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 243 2044 247 17 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1005)
                        (const_int 0 [0]))
                    (label_ref:SI 2125)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":96:10 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1005)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 2125)
(note 247 243 248 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 248 247 251 18 (debug_marker) "../System/ray_funkcije.c":97:3 -1
     (nil))
(insn 251 248 252 18 (set (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (reg:SF 519)) "../System/ray_funkcije.c":97:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 519)
        (nil)))
(debug_insn 252 251 253 18 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 253 252 254 18 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 254 253 255 18 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 255 254 256 18 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 256 255 257 18 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 257 256 258 18 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(debug_insn 258 257 259 18 (var_location:SI fCheckX (const_int 5 [0x5])) -1
     (nil))
(debug_insn 259 258 6 18 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 6 259 7 18 (set (reg/v:SI 342 [ fCheckX ])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(insn 7 6 2126 18 (set (reg/v:SI 343 [ fCheckY ])
        (reg/v:SI 342 [ fCheckX ])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))
(jump_insn 2126 7 2127 18 (set (pc)
        (label_ref 300)) 284 {*arm_jump}
     (nil)
 -> 300)
(barrier 2127 2126 2125)
(code_label 2125 2127 263 19 118 (nil) [1 uses])
(note 263 2125 272 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 272 263 264 19 NOTE_INSN_DELETED)
(debug_insn 264 272 265 19 (debug_marker) "../System/ray_funkcije.c":100:2 -1
     (nil))
(debug_insn 265 264 266 19 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":100:6 -1
     (nil))
(debug_insn 266 265 267 19 (debug_marker) "../System/ray_funkcije.c":101:2 -1
     (nil))
(debug_insn 267 266 268 19 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":101:6 -1
     (nil))
(debug_insn 268 267 269 19 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":101:19 -1
     (nil))
(debug_insn 269 268 270 19 (debug_marker) "../System/ray_funkcije.c":102:2 -1
     (nil))
(insn 270 269 271 19 (set (reg:SF 16 s0)
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":102:6 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 271 270 2045 19 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":102:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2045 271 2216 19 (set (reg:SF 1006)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":102:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 2216 2045 2217 19 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 1006)
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":102:5 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 1006)
        (nil)))
(insn 2217 2216 275 19 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":102:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 275 2217 279 19 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2128)
            (pc))) "../System/ray_funkcije.c":102:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2128)
(note 279 275 280 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 20 (set (reg:SF 16 s0)
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 125 [ _13 ])
        (nil)))
(call_insn/u 281 280 2046 20 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":106:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2046 281 282 20 (set (reg:SF 1007)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 282 2046 4 20 (set (reg:SF 408 [ _739 ])
        (reg:SF 1007)) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1007)
        (nil)))
(insn 4 282 2129 20 (set (reg/v:SI 342 [ fCheckX ])
        (const_int -5 [0xfffffffffffffffb])) "../System/ray_funkcije.c":103:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int -5 [0xfffffffffffffffb])
        (nil)))
(jump_insn 2129 4 2130 20 (set (pc)
        (label_ref 292)) 284 {*arm_jump}
     (nil)
 -> 292)
(barrier 2130 2129 2128)
(code_label 2128 2130 286 21 119 (nil) [1 uses])
(note 286 2128 287 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 287 286 288 21 (debug_marker) "../System/ray_funkcije.c":105:3 -1
     (nil))
(debug_insn 288 287 289 21 (var_location:SI fCheckX (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 -1
     (nil))
(insn 289 288 290 21 (set (reg:SF 16 s0)
        (reg:SF 125 [ _13 ])) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 125 [ _13 ])
        (nil)))
(call_insn/u 290 289 2047 21 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":106:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2047 290 291 21 (set (reg:SF 1008)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 291 2047 5 21 (set (reg:SF 408 [ _739 ])
        (reg:SF 1008)) "../System/ray_funkcije.c":106:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1008)
        (nil)))
(insn 5 291 292 21 (set (reg/v:SI 342 [ fCheckX ])
        (const_int 5 [0x5])) "../System/ray_funkcije.c":105:11 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 292 5 293 22 34 (nil) [1 uses])
(note 293 292 294 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 294 293 295 22 (var_location:SI fCheckX (reg/v:SI 342 [ fCheckX ])) -1
     (nil))
(debug_insn 295 294 2214 22 (debug_marker) "../System/ray_funkcije.c":106:2 -1
     (nil))
(insn 2214 295 2215 22 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 408 [ _739 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":109:11 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 408 [ _739 ])
        (nil)))
(insn 2215 2214 1981 22 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":109:11 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(insn 1981 2215 300 22 (set (reg/v:SI 343 [ fCheckY ])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":109:11 986 {*thumb2_movsicc_insn}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (nil)))
(code_label 300 1981 301 23 29 (nil) [2 uses])
(note 301 300 306 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(note 306 301 302 23 NOTE_INSN_DELETED)
(debug_insn 302 306 303 23 (var_location:SI fCheckY (reg/v:SI 343 [ fCheckY ])) -1
     (nil))
(debug_insn 303 302 304 23 (debug_marker) "../System/ray_funkcije.c":111:2 -1
     (nil))
(insn 304 303 305 23 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":111:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 305 304 2048 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":111:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2048 305 312 23 (set (reg:SI 1009)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":111:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 312 2048 313 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1009)
            (const_int 60 [0x3c]))) "../System/ray_funkcije.c":111:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 1009)
        (nil)))
(jump_insn 313 312 318 23 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 388)
            (pc))) "../System/ray_funkcije.c":111:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 388)
(note 318 313 323 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 323 318 329 24 NOTE_INSN_DELETED)
(note 329 323 333 24 NOTE_INSN_DELETED)
(note 333 329 337 24 NOTE_INSN_DELETED)
(note 337 333 319 24 NOTE_INSN_DELETED)
(debug_insn 319 337 321 24 (debug_marker) "../System/ray_funkcije.c":112:3 -1
     (nil))
(insn 321 319 326 24 (set (reg:SI 535)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":112:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 326 321 320 24 (set (reg:SI 538)
        (plus:SI (reg/v:SI 355 [ ipx ])
            (reg/v:SI 342 [ fCheckX ]))) "../System/ray_funkcije.c":112:26 7 {*arm_addsi3}
     (nil))
(insn 320 326 322 24 (set (reg/f:SI 973)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":112:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 322 320 328 24 (parallel [
            (set (reg:SI 534)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                            (sign_extend:DI (reg:SI 535)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":112:15 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 328 322 330 24 (parallel [
            (set (reg:SI 540)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 538))
                            (sign_extend:DI (reg:SI 535)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":112:37 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 535)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 538))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 330 328 331 24 (set (reg:SI 543)
        (ashiftrt:SI (reg:SI 538)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":112:37 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 538)
        (nil)))
(insn 331 330 324 24 (set (reg:SI 539)
        (minus:SI (ashiftrt:SI (reg:SI 540)
                (const_int 2 [0x2]))
            (reg:SI 543))) "../System/ray_funkcije.c":112:37 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 543)
        (expr_list:REG_DEAD (reg:SI 540)
            (nil))))
(insn 324 331 325 24 (set (reg:SI 537)
        (ashiftrt:SI (reg/v:SI 356 [ ipy ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":112:15 147 {*arm_shiftsi3}
     (nil))
(insn 325 324 332 24 (set (reg:SI 533)
        (minus:SI (ashiftrt:SI (reg:SI 534)
                (const_int 2 [0x2]))
            (reg:SI 537))) "../System/ray_funkcije.c":112:15 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 537)
        (expr_list:REG_DEAD (reg:SI 534)
            (nil))))
(insn 332 325 334 24 (set (reg:SI 545)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":112:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 334 332 336 24 (set (reg:SI 546)
        (plus:SI (mult:SI (reg:SI 545)
                (reg:SI 533))
            (reg/f:SI 973))) "../System/ray_funkcije.c":112:20 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 545)
        (expr_list:REG_DEAD (reg:SI 533)
            (nil))))
(insn 336 334 338 24 (set (reg:SI 548 [ map[_32][_34] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 546)
                    (reg:SI 539)) [0 map[_32][_34]+0 S1 A8]))) "../System/ray_funkcije.c":112:6 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 546)
        (expr_list:REG_DEAD (reg:SI 539)
            (nil))))
(jump_insn 338 336 339 24 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 548 [ map[_32][_34] ])
                        (const_int 0 [0]))
                    (label_ref 352)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":112:6 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 548 [ map[_32][_34] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 352)
(note 339 338 342 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 342 339 345 25 NOTE_INSN_DELETED)
(note 345 342 340 25 NOTE_INSN_DELETED)
(debug_insn 340 345 343 25 (debug_marker) "../System/ray_funkcije.c":113:4 -1
     (nil))
(insn 343 340 344 25 (set (reg:SF 16 s0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":113:25 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 344 343 2049 25 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":113:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2049 344 348 25 (set (reg:SF 1010)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":113:25 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 348 2049 347 25 (set (reg:SF 553 [ px ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 347 348 349 25 (set (reg:SF 552)
        (const_double:SF 2.0e+0 [0x0.8p+2])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 349 347 351 25 (set (reg:SF 146 [ _40 ])
        (fma:SF (reg:SF 1010)
            (reg:SF 552)
            (reg:SF 553 [ px ]))) "../System/ray_funkcije.c":113:7 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 1010)
        (expr_list:REG_DEAD (reg:SF 553 [ px ])
            (expr_list:REG_DEAD (reg:SF 552)
                (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
                    (nil))))))
(insn 351 349 352 25 (set (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (reg:SF 146 [ _40 ])) "../System/ray_funkcije.c":113:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 146 [ _40 ])
        (nil)))
(code_label 352 351 353 26 37 (nil) [1 uses])
(note 353 352 360 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 360 353 365 26 NOTE_INSN_DELETED)
(note 365 360 369 26 NOTE_INSN_DELETED)
(note 369 365 373 26 NOTE_INSN_DELETED)
(note 373 369 354 26 NOTE_INSN_DELETED)
(debug_insn 354 373 358 26 (debug_marker) "../System/ray_funkcije.c":114:3 -1
     (nil))
(insn 358 354 357 26 (set (reg:SI 559)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":114:27 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 357 358 359 26 (set (reg:SI 556)
        (plus:SI (reg/v:SI 343 [ fCheckY ])
            (reg/v:SI 356 [ ipy ]))) "../System/ray_funkcije.c":114:16 7 {*arm_addsi3}
     (nil))
(insn 359 357 361 26 (parallel [
            (set (reg:SI 558)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 556))
                            (sign_extend:DI (reg:SI 559)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":114:27 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 556))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 361 359 362 26 (set (reg:SI 561)
        (ashiftrt:SI (reg:SI 556)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":114:27 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 556)
        (nil)))
(insn 362 361 364 26 (set (reg:SI 557)
        (minus:SI (ashiftrt:SI (reg:SI 558)
                (const_int 2 [0x2]))
            (reg:SI 561))) "../System/ray_funkcije.c":114:27 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 561)
        (expr_list:REG_DEAD (reg:SI 558)
            (nil))))
(insn 364 362 366 26 (parallel [
            (set (reg:SI 563)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                            (sign_extend:DI (reg:SI 559)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":114:37 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 559)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 366 364 367 26 (set (reg:SI 566)
        (ashiftrt:SI (reg/v:SI 355 [ ipx ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":114:37 147 {*arm_shiftsi3}
     (nil))
(insn 367 366 368 26 (set (reg:SI 562)
        (minus:SI (ashiftrt:SI (reg:SI 563)
                (const_int 2 [0x2]))
            (reg:SI 566))) "../System/ray_funkcije.c":114:37 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 566)
        (expr_list:REG_DEAD (reg:SI 563)
            (nil))))
(insn 368 367 370 26 (set (reg:SI 568)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":114:32 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 370 368 372 26 (set (reg:SI 569)
        (plus:SI (mult:SI (reg:SI 568)
                (reg:SI 557))
            (reg/f:SI 973))) "../System/ray_funkcije.c":114:32 57 {*mla}
     (expr_list:REG_DEAD (reg/f:SI 973)
        (expr_list:REG_DEAD (reg:SI 568)
            (expr_list:REG_DEAD (reg:SI 557)
                (nil)))))
(insn 372 370 374 26 (set (reg:SI 571 [ map[_42][_43] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 569)
                    (reg:SI 562)) [0 map[_42][_43]+0 S1 A8]))) "../System/ray_funkcije.c":114:6 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 569)
        (expr_list:REG_DEAD (reg:SI 562)
            (nil))))
(jump_insn 374 372 375 26 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 571 [ map[_42][_43] ])
                        (const_int 0 [0]))
                    (label_ref:SI 388)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":114:6 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 571 [ map[_42][_43] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 388)
(note 375 374 378 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 378 375 381 27 NOTE_INSN_DELETED)
(note 381 378 376 27 NOTE_INSN_DELETED)
(debug_insn 376 381 379 27 (debug_marker) "../System/ray_funkcije.c":115:4 -1
     (nil))
(insn 379 376 380 27 (set (reg:SF 16 s0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":115:25 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 380 379 2050 27 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":115:25 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2050 380 384 27 (set (reg:SF 1011)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":115:25 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 384 2050 383 27 (set (reg:SF 576 [ py ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 383 384 385 27 (set (reg:SF 575)
        (const_double:SF 2.0e+0 [0x0.8p+2])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 385 383 387 27 (set (reg:SF 154 [ _49 ])
        (fma:SF (reg:SF 1011)
            (reg:SF 575)
            (reg:SF 576 [ py ]))) "../System/ray_funkcije.c":115:7 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 1011)
        (expr_list:REG_DEAD (reg:SF 576 [ py ])
            (expr_list:REG_DEAD (reg:SF 575)
                (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
                    (nil))))))
(insn 387 385 388 27 (set (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (reg:SF 154 [ _49 ])) "../System/ray_funkcije.c":115:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 154 [ _49 ])
        (nil)))
(code_label 388 387 389 28 36 (nil) [2 uses])
(note 389 388 393 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(note 393 389 390 28 NOTE_INSN_DELETED)
(debug_insn 390 393 391 28 (debug_marker) "../System/ray_funkcije.c":117:2 -1
     (nil))
(insn 391 390 392 28 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":117:6 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 392 391 2051 28 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>) [0 JOY_get_axis_position S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":117:6 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("JOY_get_axis_position") [flags 0x41]  <function_decl 0000000006d64100 JOY_get_axis_position>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2051 392 399 28 (set (reg:SI 1012)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":117:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 399 2051 400 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 1012)
            (const_int 39 [0x27]))) "../System/ray_funkcije.c":117:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 1012)
        (nil)))
(jump_insn 400 399 401 28 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 416)
            (pc))) "../System/ray_funkcije.c":117:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 416)
(note 401 400 403 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 403 401 404 29 (set (reg:SF 411 [ pretmp_748 ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 404 403 405 29 (set (reg:SF 16 s0)
        (reg:SF 411 [ pretmp_748 ])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 405 404 2052 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2052 405 407 29 (set (reg:SF 1013)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 407 2052 406 29 (set (reg:SF 16 s0)
        (reg:SF 411 [ pretmp_748 ])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 411 [ pretmp_748 ])
        (nil)))
(insn 406 407 408 29 (set (reg:SF 409 [ prephitmp_745 ])
        (reg:SF 1013)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1013)
        (nil)))
(call_insn/u 408 406 2053 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2053 408 409 29 (set (reg:SF 1014)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 409 2053 411 29 (set (reg:SF 412 [ _752 ])
        (reg:SF 1014)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1014)
        (nil)))
(insn 411 409 413 29 (set (reg:SF 410 [ prephitmp_747 ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":127:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 413 411 2131 29 (set (reg:SF 413 [ pretmp_757 ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":128:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(jump_insn 2131 413 2132 29 (set (pc)
        (label_ref 504)) 284 {*arm_jump}
     (nil)
 -> 504)
(barrier 2132 2131 416)
(code_label 416 2132 417 30 39 (nil) [1 uses])
(note 417 416 422 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 422 417 428 30 NOTE_INSN_DELETED)
(note 428 422 432 30 NOTE_INSN_DELETED)
(note 432 428 436 30 NOTE_INSN_DELETED)
(note 436 432 418 30 NOTE_INSN_DELETED)
(debug_insn 418 436 425 30 (debug_marker) "../System/ray_funkcije.c":118:3 -1
     (nil))
(insn 425 418 420 30 (set (reg:SI 590)
        (minus:SI (reg/v:SI 355 [ ipx ])
            (reg/v:SI 342 [ fCheckX ]))) "../System/ray_funkcije.c":118:26 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 342 [ fCheckX ])
        (nil)))
(insn 420 425 419 30 (set (reg:SI 587)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":118:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 419 420 421 30 (set (reg/f:SI 973)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":118:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 421 419 427 30 (parallel [
            (set (reg:SI 586)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                            (sign_extend:DI (reg:SI 587)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":118:15 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 356 [ ipy ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 427 421 429 30 (parallel [
            (set (reg:SI 592)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 590))
                            (sign_extend:DI (reg:SI 587)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":118:37 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 587)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 590))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 429 427 430 30 (set (reg:SI 595)
        (ashiftrt:SI (reg:SI 590)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":118:37 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 590)
        (nil)))
(insn 430 429 423 30 (set (reg:SI 591)
        (minus:SI (ashiftrt:SI (reg:SI 592)
                (const_int 2 [0x2]))
            (reg:SI 595))) "../System/ray_funkcije.c":118:37 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 595)
        (expr_list:REG_DEAD (reg:SI 592)
            (nil))))
(insn 423 430 424 30 (set (reg:SI 589)
        (ashiftrt:SI (reg/v:SI 356 [ ipy ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":118:15 147 {*arm_shiftsi3}
     (nil))
(insn 424 423 431 30 (set (reg:SI 585)
        (minus:SI (ashiftrt:SI (reg:SI 586)
                (const_int 2 [0x2]))
            (reg:SI 589))) "../System/ray_funkcije.c":118:15 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 589)
        (expr_list:REG_DEAD (reg:SI 586)
            (nil))))
(insn 431 424 433 30 (set (reg:SI 597)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":118:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 433 431 435 30 (set (reg:SI 598)
        (plus:SI (mult:SI (reg:SI 597)
                (reg:SI 585))
            (reg/f:SI 973))) "../System/ray_funkcije.c":118:20 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 597)
        (expr_list:REG_DEAD (reg:SI 585)
            (nil))))
(insn 435 433 437 30 (set (reg:SI 600 [ map[_51][_53] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 598)
                    (reg:SI 591)) [0 map[_51][_53]+0 S1 A8]))) "../System/ray_funkcije.c":118:6 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 598)
        (expr_list:REG_DEAD (reg:SI 591)
            (nil))))
(jump_insn 437 435 438 30 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 600 [ map[_51][_53] ])
                        (const_int 0 [0]))
                    (label_ref 448)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":118:6 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 600 [ map[_51][_53] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 448)
(note 438 437 440 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 440 438 441 31 (set (reg:SF 160 [ angle.18_55 ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 441 440 442 31 (set (reg:SF 16 s0)
        (reg:SF 160 [ angle.18_55 ])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 442 441 2054 31 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2054 442 443 31 (set (reg:SF 1015)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 443 2054 445 31 (set (reg:SF 409 [ prephitmp_745 ])
        (reg:SF 1015)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1015)
        (nil)))
(insn 445 443 2133 31 (set (reg:SF 410 [ prephitmp_747 ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":127:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(jump_insn 2133 445 2134 31 (set (pc)
        (label_ref 462)) 284 {*arm_jump}
     (nil)
 -> 462)
(barrier 2134 2133 448)
(code_label 448 2134 449 32 41 (nil) [1 uses])
(note 449 448 450 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(debug_insn 450 449 452 32 (debug_marker) "../System/ray_funkcije.c":119:4 -1
     (nil))
(insn 452 450 453 32 (set (reg:SF 160 [ angle.18_55 ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(insn 453 452 454 32 (set (reg:SF 16 s0)
        (reg:SF 160 [ angle.18_55 ])) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 454 453 2055 32 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":119:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2055 454 455 32 (set (reg:SF 1016)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 455 2055 458 32 (set (reg:SF 409 [ prephitmp_745 ])
        (reg:SF 1016)) "../System/ray_funkcije.c":119:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1016)
        (nil)))
(insn 458 455 457 32 (set (reg:SF 606 [ px ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
            (nil))))
(insn 457 458 459 32 (set (reg:SF 605)
        (const_double:SF -2.0e+0 [-0x0.8p+2])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF -2.0e+0 [-0x0.8p+2])
        (nil)))
(insn 459 457 461 32 (set (reg:SF 410 [ prephitmp_747 ])
        (fma:SF (reg:SF 409 [ prephitmp_745 ])
            (reg:SF 605)
            (reg:SF 606 [ px ]))) "../System/ray_funkcije.c":119:7 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 606 [ px ])
        (expr_list:REG_DEAD (reg:SF 605)
            (expr_list:REG_EQUAL (fma:SF (reg:SF 409 [ prephitmp_745 ])
                    (const_double:SF -2.0e+0 [-0x0.8p+2])
                    (reg:SF 606 [ px ]))
                (nil)))))
(insn 461 459 462 32 (set (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])
        (reg:SF 410 [ prephitmp_747 ])) "../System/ray_funkcije.c":119:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 462 461 463 33 42 (nil) [1 uses])
(note 463 462 469 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(note 469 463 474 33 NOTE_INSN_DELETED)
(note 474 469 478 33 NOTE_INSN_DELETED)
(note 478 474 482 33 NOTE_INSN_DELETED)
(note 482 478 464 33 NOTE_INSN_DELETED)
(debug_insn 464 482 466 33 (debug_marker) "../System/ray_funkcije.c":120:3 -1
     (nil))
(insn 466 464 467 33 (set (reg:SI 609)
        (minus:SI (reg/v:SI 356 [ ipy ])
            (reg/v:SI 343 [ fCheckY ]))) "../System/ray_funkcije.c":120:16 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg/v:SI 343 [ fCheckY ])
        (nil)))
(insn 467 466 470 33 (set (reg:SI 612)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":120:27 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 470 467 468 33 (set (reg:SI 614)
        (ashiftrt:SI (reg:SI 609)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":120:27 147 {*arm_shiftsi3}
     (nil))
(insn 468 470 471 33 (parallel [
            (set (reg:SI 611)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 609))
                            (sign_extend:DI (reg:SI 612)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":120:27 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 609)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 609))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 471 468 473 33 (set (reg:SI 610)
        (minus:SI (ashiftrt:SI (reg:SI 611)
                (const_int 2 [0x2]))
            (reg:SI 614))) "../System/ray_funkcije.c":120:27 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 614)
        (expr_list:REG_DEAD (reg:SI 611)
            (nil))))
(insn 473 471 475 33 (parallel [
            (set (reg:SI 616)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                            (sign_extend:DI (reg:SI 612)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":120:37 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 612)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg/v:SI 355 [ ipx ]))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 475 473 476 33 (set (reg:SI 619)
        (ashiftrt:SI (reg/v:SI 355 [ ipx ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":120:37 147 {*arm_shiftsi3}
     (nil))
(insn 476 475 477 33 (set (reg:SI 615)
        (minus:SI (ashiftrt:SI (reg:SI 616)
                (const_int 2 [0x2]))
            (reg:SI 619))) "../System/ray_funkcije.c":120:37 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 619)
        (expr_list:REG_DEAD (reg:SI 616)
            (nil))))
(insn 477 476 479 33 (set (reg:SI 621)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":120:32 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 479 477 481 33 (set (reg:SI 622)
        (plus:SI (mult:SI (reg:SI 621)
                (reg:SI 610))
            (reg/f:SI 973))) "../System/ray_funkcije.c":120:32 57 {*mla}
     (expr_list:REG_DEAD (reg/f:SI 973)
        (expr_list:REG_DEAD (reg:SI 621)
            (expr_list:REG_DEAD (reg:SI 610)
                (nil)))))
(insn 481 479 483 33 (set (reg:SI 624 [ map[_61][_62] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 622)
                    (reg:SI 615)) [0 map[_61][_62]+0 S1 A8]))) "../System/ray_funkcije.c":120:6 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 622)
        (expr_list:REG_DEAD (reg:SI 615)
            (nil))))
(jump_insn 483 481 484 33 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 624 [ map[_61][_62] ])
                        (const_int 0 [0]))
                    (label_ref 492)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":120:6 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 624 [ map[_61][_62] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 492)
(note 484 483 485 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 34 (set (reg:SF 16 s0)
        (reg:SF 160 [ angle.18_55 ])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 160 [ angle.18_55 ])
        (nil)))
(call_insn/u 486 485 2056 34 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2056 486 487 34 (set (reg:SF 1017)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 487 2056 489 34 (set (reg:SF 412 [ _752 ])
        (reg:SF 1017)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1017)
        (nil)))
(insn 489 487 2135 34 (set (reg:SF 413 [ pretmp_757 ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":128:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(jump_insn 2135 489 2136 34 (set (pc)
        (label_ref 504)) 284 {*arm_jump}
     (nil)
 -> 504)
(barrier 2136 2135 492)
(code_label 492 2136 493 35 43 (nil) [1 uses])
(note 493 492 494 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 494 493 495 35 (debug_marker) "../System/ray_funkcije.c":121:4 -1
     (nil))
(insn 495 494 496 35 (set (reg:SF 16 s0)
        (reg:SF 160 [ angle.18_55 ])) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 160 [ angle.18_55 ])
        (nil)))
(call_insn/u 496 495 2057 35 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":121:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2057 496 497 35 (set (reg:SF 1018)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 497 2057 500 35 (set (reg:SF 412 [ _752 ])
        (reg:SF 1018)) "../System/ray_funkcije.c":121:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1018)
        (nil)))
(insn 500 497 499 35 (set (reg:SF 628 [ py ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
            (nil))))
(insn 499 500 501 35 (set (reg:SF 627)
        (const_double:SF -2.0e+0 [-0x0.8p+2])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF -2.0e+0 [-0x0.8p+2])
        (nil)))
(insn 501 499 503 35 (set (reg:SF 413 [ pretmp_757 ])
        (fma:SF (reg:SF 412 [ _752 ])
            (reg:SF 627)
            (reg:SF 628 [ py ]))) "../System/ray_funkcije.c":121:7 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 628 [ py ])
        (expr_list:REG_DEAD (reg:SF 627)
            (expr_list:REG_EQUAL (fma:SF (reg:SF 412 [ _752 ])
                    (const_double:SF -2.0e+0 [-0x0.8p+2])
                    (reg:SF 628 [ py ]))
                (nil)))))
(insn 503 501 504 35 (set (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])
        (reg:SF 413 [ pretmp_757 ])) "../System/ray_funkcije.c":121:7 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 504 503 505 36 40 (nil) [2 uses])
(note 505 504 517 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 517 505 506 36 NOTE_INSN_DELETED)
(debug_insn 506 517 507 36 (debug_marker) "../System/ray_funkcije.c":126:2 -1
     (nil))
(debug_insn 507 506 508 36 (var_location:SF roka (const_double:SF 6.0e+0 [0x0.cp+3])) "../System/ray_funkcije.c":126:8 -1
     (nil))
(debug_insn 508 507 509 36 (debug_marker) "../System/ray_funkcije.c":127:2 -1
     (nil))
(debug_insn 509 508 510 36 (var_location:SF D#13 (mult:SF (reg:SF 409 [ prephitmp_745 ])
        (const_double:SF 6.0e+0 [0x0.cp+3]))) "../System/ray_funkcije.c":127:29 -1
     (nil))
(debug_insn 510 509 511 36 (var_location:SF rokaPosX (plus:SF (debug_expr:SF D#13)
        (reg:SF 410 [ prephitmp_747 ]))) "../System/ray_funkcije.c":127:8 -1
     (nil))
(debug_insn 511 510 512 36 (debug_marker) "../System/ray_funkcije.c":128:2 -1
     (nil))
(debug_insn 512 511 513 36 (var_location:SF D#12 (mult:SF (reg:SF 412 [ _752 ])
        (const_double:SF 6.0e+0 [0x0.cp+3]))) "../System/ray_funkcije.c":128:29 -1
     (nil))
(debug_insn 513 512 514 36 (var_location:SF rokaPosY (plus:SF (debug_expr:SF D#12)
        (reg:SF 413 [ pretmp_757 ]))) "../System/ray_funkcije.c":128:8 -1
     (nil))
(debug_insn 514 513 515 36 (debug_marker) "../System/ray_funkcije.c":129:2 -1
     (nil))
(insn 515 514 516 36 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":129:7 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 516 515 2058 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000006cc2500 KBD_get_button_state>) [0 KBD_get_button_state S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":129:7 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("KBD_get_button_state") [flags 0x41]  <function_decl 0000000006cc2500 KBD_get_button_state>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 2058 516 519 36 (set (reg:SI 1019)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":129:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 519 2058 520 36 (set (reg:SI 630)
        (reg:SI 1019)) "../System/ray_funkcije.c":129:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1019)
        (nil)))
(jump_insn 520 519 521 36 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 630)
                        (const_int 0 [0]))
                    (label_ref 526)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":129:5 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 526)
(note 521 520 522 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 37 (set (reg/f:SI 970)
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 523 522 2137 37 (set (reg:SI 416 [ pretmp_766 ])
        (mem/c:SI (reg/f:SI 970) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(jump_insn 2137 523 2138 37 (set (pc)
        (label_ref 556)) 284 {*arm_jump}
     (nil)
 -> 556)
(barrier 2138 2137 526)
(code_label 526 2138 527 38 44 (nil) [1 uses])
(note 527 526 540 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(note 540 527 528 38 NOTE_INSN_DELETED)
(insn 528 540 529 38 (set (reg:SF 632)
        (const_double:SF 6.0e+0 [0x0.cp+3])) "../System/ray_funkcije.c":128:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 529 528 535 38 (set (reg/v:SF 358 [ rokaPosY ])
        (fma:SF (reg:SF 412 [ _752 ])
            (reg:SF 632)
            (reg:SF 413 [ pretmp_757 ]))) "../System/ray_funkcije.c":128:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 413 [ pretmp_757 ])
        (expr_list:REG_DEAD (reg:SF 412 [ _752 ])
            (expr_list:REG_EQUAL (fma:SF (reg:SF 412 [ _752 ])
                    (const_double:SF 6.0e+0 [0x0.cp+3])
                    (reg:SF 413 [ pretmp_757 ]))
                (nil)))))
(insn 535 529 530 38 (set (reg/v:SF 357 [ rokaPosX ])
        (fma:SF (reg:SF 409 [ prephitmp_745 ])
            (reg:SF 632)
            (reg:SF 410 [ prephitmp_747 ]))) "../System/ray_funkcije.c":127:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 632)
        (expr_list:REG_DEAD (reg:SF 410 [ prephitmp_747 ])
            (expr_list:REG_DEAD (reg:SF 409 [ prephitmp_745 ])
                (expr_list:REG_EQUAL (fma:SF (reg:SF 409 [ prephitmp_745 ])
                        (const_double:SF 6.0e+0 [0x0.cp+3])
                        (reg:SF 410 [ prephitmp_747 ]))
                    (nil))))))
(insn 530 535 538 38 (set (reg/f:SI 970)
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 538 530 539 38 (set (reg/f:SI 637)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":130:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 539 538 531 38 (set (reg:SI 639)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":130:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 531 539 532 38 (set (reg:SI 416 [ pretmp_766 ])
        (mem/c:SI (reg/f:SI 970) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":130:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(insn 532 531 533 38 (set (reg:SI 634)
        (fix:SI (fix:SF (reg/v:SF 358 [ rokaPosY ])))) "../System/ray_funkcije.c":130:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SF 358 [ rokaPosY ])
        (nil)))
(insn 533 532 541 38 (set (reg:SI 169 [ _80 ])
        (div:SI (reg:SI 634)
            (reg:SI 416 [ pretmp_766 ]))) "../System/ray_funkcije.c":130:26 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 634)
        (nil)))
(insn 541 533 536 38 (set (reg:SI 640)
        (plus:SI (mult:SI (reg:SI 639)
                (reg:SI 169 [ _80 ]))
            (reg/f:SI 637))) "../System/ray_funkcije.c":130:38 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 639)
        (expr_list:REG_DEAD (reg/f:SI 637)
            (expr_list:REG_DEAD (reg:SI 169 [ _80 ])
                (nil)))))
(insn 536 541 537 38 (set (reg:SI 636)
        (fix:SI (fix:SF (reg/v:SF 357 [ rokaPosX ])))) "../System/ray_funkcije.c":130:39 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SF 357 [ rokaPosX ])
        (nil)))
(insn 537 536 543 38 (set (reg:SI 171 [ _83 ])
        (div:SI (reg:SI 636)
            (reg:SI 416 [ pretmp_766 ]))) "../System/ray_funkcije.c":130:54 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 636)
        (nil)))
(insn 543 537 544 38 (set (reg:SI 642 [ map[_80][_83] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 640)
                    (reg:SI 171 [ _83 ])) [0 map[_80][_83]+0 S1 A8]))) "../System/ray_funkcije.c":130:4 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 544 543 545 38 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 642 [ map[_80][_83] ])
            (const_int 3 [0x3]))) "../System/ray_funkcije.c":130:4 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 642 [ map[_80][_83] ])
        (nil)))
(jump_insn 545 544 546 38 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 556)
            (pc))) "../System/ray_funkcije.c":130:4 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 556)
(note 546 545 547 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(debug_insn 547 546 555 39 (debug_marker) "../System/ray_funkcije.c":131:3 -1
     (nil))
(insn 555 547 556 39 (set (mem:QI (plus:SI (reg:SI 640)
                (reg:SI 171 [ _83 ])) [0 map[_80][_83]+0 S1 A8])
        (subreg:QI (reg:SI 630) 0)) "../System/ray_funkcije.c":131:63 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 640)
        (expr_list:REG_DEAD (reg:SI 630)
            (expr_list:REG_DEAD (reg:SI 171 [ _83 ])
                (nil)))))
(code_label 556 555 557 40 45 (nil) [2 uses])
(note 557 556 558 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(debug_insn 558 557 559 40 (var_location:SF z (const_double:SF -3.0e+1 [-0x0.fp+5])) -1
     (nil))
(debug_insn 559 558 560 40 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 560 559 561 40 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 561 560 562 40 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 562 561 563 40 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 563 562 564 40 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 564 563 565 40 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 565 564 13 40 (debug_marker) "../System/ray_funkcije.c":133:22 -1
     (nil))
(insn 13 565 14 40 (set (reg:SF 418 [ _769 ])
        (const_double:SF 8.66025447845458984375e-1 [0x0.ddb3d8p+0])) "../System/ray_funkcije.c":109:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 8.66025447845458984375e-1 [0x0.ddb3d8p+0])
        (nil)))
(insn 14 13 770 40 (set (reg/v:SF 339 [ z ])
        (const_double:SF -3.0e+1 [-0x0.fp+5])) "../System/ray_funkcije.c":109:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF -3.0e+1 [-0x0.fp+5])
        (nil)))
(insn 770 14 12 40 (set (reg/f:SI 987)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":165:80 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 12 770 581 40 (set (reg:SI 463 [ ivtmp_891 ])
        (const_int 60 [0x3c])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 60 [0x3c])
        (nil)))
(insn 581 12 632 40 (set (reg:DF 989)
        (const_double:DF 1.74532899999999997764366099772814777679741382599e-2 [0x0.8efa33b83e4a68p-5])) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 1.74532899999999997764366099772814777679741382599e-2 [0x0.8efa33b83e4a68p-5])
        (nil)))
(insn 632 581 1445 40 (set (reg:DF 990)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":138:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])
        (nil)))
(insn 1445 632 1472 40 (set (reg:DF 992)
        (const_double:DF 1.84751999999999998181010596454143524169921875e+3 [0x0.e6f0a3d70a3d7p+11])) "../System/ray_funkcije.c":322:33 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 1.84751999999999998181010596454143524169921875e+3 [0x0.e6f0a3d70a3d7p+11])
        (nil)))
(insn 1472 1445 2230 40 (set (reg:DF 993)
        (const_double:DF 3.33333333333333348136306995002087205648422241211e+0 [0x0.d5555555555558p+2])) "../System/ray_funkcije.c":324:21 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 3.33333333333333348136306995002087205648422241211e+0 [0x0.d5555555555558p+2])
        (nil)))
(insn 2230 1472 1819 40 (set (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (reg:SI 416 [ pretmp_766 ])) "../System/ray_funkcije.c":324:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 416 [ pretmp_766 ])
        (nil)))
(code_label 1819 2230 566 41 88 (nil) [1 uses])
(note 566 1819 588 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(note 588 566 567 41 NOTE_INSN_DELETED)
(debug_insn 567 588 568 41 (var_location:SF z (reg/v:SF 339 [ z ])) -1
     (nil))
(debug_insn 568 567 569 41 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 569 568 570 41 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 570 569 571 41 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 571 570 572 41 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 572 571 573 41 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 573 572 574 41 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 574 573 575 41 (debug_marker) "../System/ray_funkcije.c":134:3 -1
     (nil))
(debug_insn 575 574 576 41 (var_location:SI vmt (const_int 0 [0])) "../System/ray_funkcije.c":134:7 -1
     (nil))
(debug_insn 576 575 577 41 (var_location:SI hmt (const_int 0 [0])) "../System/ray_funkcije.c":134:16 -1
     (nil))
(debug_insn 577 576 578 41 (debug_marker) "../System/ray_funkcije.c":135:3 -1
     (nil))
(insn 578 577 579 41 (set (reg:SF 0 r0)
        (reg/v:SF 339 [ z ])) "../System/ray_funkcije.c":135:22 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 579 578 2004 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2004 579 583 41 (set (reg:DF 2 r2)
        (reg:DF 989)) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 583 2004 2059 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2059 583 584 41 (set (reg:DF 1020)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 584 2059 586 41 (set (reg:DF 651)
        (reg:DF 1020)) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1020)
        (nil)))
(insn 586 584 587 41 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":135:31 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
        (nil)))
(call_insn/u 587 586 2060 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:31 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2060 587 589 41 (set (reg:DF 1021)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":135:31 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 589 2060 590 41 (set (reg:DF 2 r2)
        (reg:DF 1021)) "../System/ray_funkcije.c":135:31 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1021)
        (nil)))
(insn 590 589 591 41 (set (reg:DF 0 r0)
        (reg:DF 651)) "../System/ray_funkcije.c":135:31 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 651)
        (nil)))
(call_insn/u 591 590 594 41 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:31 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 594 591 2061 41 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2061 594 595 41 (set (reg:SF 1022)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":135:9 737 {*thumb2_movsf_vfp}
     (nil))
(insn 595 2061 597 41 (set (reg/v:SF 346 [ newAngle ])
        (reg:SF 1022)) "../System/ray_funkcije.c":135:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1022)
        (nil)))
(debug_insn 597 595 598 41 (var_location:SF newAngle (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":135:9 -1
     (nil))
(debug_insn 598 597 2208 41 (debug_marker) "../System/ray_funkcije.c":136:3 -1
     (nil))
(insn 2208 598 2209 41 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 346 [ newAngle ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":136:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2209 2208 601 41 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":136:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 601 2209 605 41 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2139)
            (pc))) "../System/ray_funkcije.c":136:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 2139)
(note 605 601 606 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 606 605 608 42 (debug_marker) "../System/ray_funkcije.c":137:4 -1
     (nil))
(call_insn/u 608 606 2007 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2007 608 612 42 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":137:13 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 612 2007 616 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 616 612 2062 42 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":137:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2062 616 617 42 (set (reg:SF 1023)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":137:13 737 {*thumb2_movsf_vfp}
     (nil))
(insn 617 2062 619 42 (set (reg/v:SF 346 [ newAngle ])
        (reg:SF 1023)) "../System/ray_funkcije.c":137:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1023)
        (nil)))
(debug_insn 619 617 621 42 (var_location:SF newAngle (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":137:13 -1
     (nil))
(call_insn/u 621 619 2063 42 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2063 621 622 42 (set (reg:DF 1024)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 622 2063 2140 42 (set (reg:DF 181 [ _95 ])
        (reg:DF 1024)) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1024)
        (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 346 [ newAngle ]))
            (nil))))
(jump_insn 2140 622 2141 42 (set (pc)
        (label_ref 655)) 284 {*arm_jump}
     (nil)
 -> 655)
(barrier 2141 2140 2139)
(code_label 2139 2141 626 43 120 (nil) [1 uses])
(note 626 2139 635 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(note 635 626 636 43 NOTE_INSN_DELETED)
(note 636 635 627 43 NOTE_INSN_DELETED)
(debug_insn 627 636 629 43 (debug_marker) "../System/ray_funkcije.c":138:8 -1
     (nil))
(call_insn/u 629 627 2064 43 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":138:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2064 629 630 43 (set (reg:DF 1025)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":138:21 739 {*thumb2_movdf_vfp}
     (nil))
(insn 630 2064 2005 43 (set (reg:DF 181 [ _95 ])
        (reg:DF 1025)) "../System/ray_funkcije.c":138:21 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1025)
        (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 346 [ newAngle ]))
            (nil))))
(insn 2005 630 634 43 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":138:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 634 2005 2065 43 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":138:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2065 634 637 43 (set (reg:SI 1026)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":138:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 637 2065 641 43 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1026)
                        (const_int 0 [0]))
                    (label_ref:SI 655)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":138:11 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1026)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 655)
(note 641 637 642 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 642 641 644 44 (debug_marker) "../System/ray_funkcije.c":139:4 -1
     (nil))
(insn 644 642 2006 44 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":139:13 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 181 [ _95 ])
        (nil)))
(insn 2006 644 645 44 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":139:13 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 645 2006 648 44 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":139:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 648 645 2066 44 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":139:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2066 648 649 44 (set (reg:SF 1027)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":139:13 737 {*thumb2_movsf_vfp}
     (nil))
(insn 649 2066 651 44 (set (reg/v:SF 346 [ newAngle ])
        (reg:SF 1027)) "../System/ray_funkcije.c":139:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1027)
        (nil)))
(debug_insn 651 649 653 44 (var_location:SF newAngle (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":139:13 -1
     (nil))
(call_insn/u 653 651 2067 44 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2067 653 654 44 (set (reg:DF 1028)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 654 2067 655 44 (set (reg:DF 181 [ _95 ])
        (reg:DF 1028)) "../System/ray_funkcije.c":144:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1028)
        (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 346 [ newAngle ]))
            (nil))))
(code_label 655 654 656 45 48 (nil) [2 uses])
(note 656 655 672 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(note 672 656 673 45 NOTE_INSN_DELETED)
(note 673 672 657 45 NOTE_INSN_DELETED)
(debug_insn 657 673 658 45 (var_location:SF newAngle (reg/v:SF 346 [ newAngle ])) -1
     (nil))
(debug_insn 658 657 659 45 (debug_marker) "../System/ray_funkcije.c":142:3 -1
     (nil))
(insn 659 658 660 45 (set (reg:SF 16 s0)
        (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":142:20 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 660 659 2068 45 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("tanf") [flags 0x41]  <function_decl 0000000005b14c00 tanf>) [0 __builtin_tanf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":142:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("tanf") [flags 0x41]  <function_decl 0000000005b14c00 tanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2068 660 661 45 (set (reg:SF 1029)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":142:20 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 661 2068 662 45 (set (reg:SF 183 [ _97 ])
        (reg:SF 1029)) "../System/ray_funkcije.c":142:20 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1029)
        (nil)))
(insn 662 661 663 45 (set (reg:SF 664)
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":142:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 663 662 664 45 (set (reg/v:SF 359 [ aTan ])
        (div:SF (reg:SF 664)
            (reg:SF 183 [ _97 ]))) "../System/ray_funkcije.c":142:9 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 664)
        (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
                (reg:SF 183 [ _97 ]))
            (nil))))
(debug_insn 664 663 665 45 (var_location:SF aTan (reg/v:SF 359 [ aTan ])) "../System/ray_funkcije.c":142:9 -1
     (nil))
(debug_insn 665 664 666 45 (debug_marker) "../System/ray_funkcije.c":143:3 -1
     (nil))
(debug_insn 666 665 667 45 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":143:7 -1
     (nil))
(debug_insn 667 666 669 45 (debug_marker) "../System/ray_funkcije.c":144:3 -1
     (nil))
(insn 669 667 670 45 (set (reg:DF 2 r2)
        (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])) "../System/ray_funkcije.c":144:6 739 {*thumb2_movdf_vfp}
     (nil))
(insn 670 669 671 45 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":144:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 671 670 2069 45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":144:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2069 671 674 45 (set (reg:SI 1030)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":144:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 674 2069 678 45 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1030)
                        (const_int 0 [0]))
                    (label_ref:SI 2142)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":144:6 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1030)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 2142)
(note 678 674 682 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(note 682 678 684 46 NOTE_INSN_DELETED)
(note 684 682 679 46 NOTE_INSN_DELETED)
(debug_insn 679 684 712 46 (debug_marker) "../System/ray_funkcije.c":145:4 -1
     (nil))
(insn 712 679 681 46 (set (reg/v:SF 404 [ dx ])
        (float:SF (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":152:7 809 {*floatsisf2_vfp}
     (nil))
(insn 681 712 683 46 (set (reg:SI 672)
        (div:SI (reg/v:SI 356 [ ipy ])
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":145:21 162 {divsi3}
     (nil))
(insn 683 681 685 46 (set (reg:SI 674)
        (minus:SI (reg/v:SI 356 [ ipy ])
            (mult:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416])
                (reg:SI 672)))) "../System/ray_funkcije.c":145:21 58 {*mls}
     (expr_list:REG_DEAD (reg:SI 672)
        (nil)))
(insn 685 683 686 46 (set (reg:SI 0 r0)
        (minus:SI (reg/v:SI 356 [ ipy ])
            (reg:SI 674))) "../System/ray_funkcije.c":145:34 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 674)
        (nil)))
(call_insn/u 686 685 688 46 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 688 686 690 46 (set (reg:DF 2 r2)
        (const_double:DF 1.00000000000000004792173602385929598312941379845e-4 [0x0.d1b71758e21968p-13])) "../System/ray_funkcije.c":145:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 690 688 693 46 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:34 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 693 690 2070 46 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":145:8 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2070 693 694 46 (set (reg:SF 1031)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":145:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 694 2070 696 46 (set (reg/v:SF 403 [ rvy ])
        (reg:SF 1031)) "../System/ray_funkcije.c":145:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1031)
        (nil)))
(debug_insn 696 694 697 46 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) "../System/ray_funkcije.c":145:8 -1
     (nil))
(debug_insn 697 696 699 46 (debug_marker) "../System/ray_funkcije.c":146:4 -1
     (nil))
(insn 699 697 701 46 (set (reg:SF 193 [ py.37_114 ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":146:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 701 699 702 46 (set (reg:SF 195 [ px.38_117 ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":146:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 702 701 703 46 (set (reg:SF 681)
        (minus:SF (reg/v:SF 403 [ rvy ])
            (reg:SF 193 [ py.37_114 ]))) "../System/ray_funkcije.c":146:21 761 {*subsf3_vfp}
     (nil))
(insn 703 702 704 46 (set (reg/v:SF 402 [ rvx ])
        (fma:SF (reg:SF 681)
            (reg/v:SF 359 [ aTan ])
            (reg:SF 195 [ px.38_117 ]))) "../System/ray_funkcije.c":146:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 681)
        (nil)))
(debug_insn 704 703 705 46 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) "../System/ray_funkcije.c":146:8 -1
     (nil))
(debug_insn 705 704 706 46 (debug_marker) "../System/ray_funkcije.c":147:4 -1
     (nil))
(insn 706 705 1891 46 (set (reg:SI 682)
        (neg:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":147:9 164 {*arm_negsi2}
     (nil))
(debug_insn 1891 706 707 46 (var_location:SF D#31 (float:SF (reg:SI 682))) -1
     (nil))
(insn 707 1891 708 46 (set (reg/v:SF 360 [ dy ])
        (float:SF (reg:SI 682))) "../System/ray_funkcije.c":147:7 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 682)
        (nil)))
(debug_insn 708 707 709 46 (var_location:SF dy (debug_expr:SF D#31)) "../System/ray_funkcije.c":147:7 -1
     (nil))
(debug_insn 709 708 1893 46 (debug_marker) "../System/ray_funkcije.c":148:4 -1
     (nil))
(debug_insn 1893 709 710 46 (var_location:SF D#32 (mult:SF (reg/v:SF 359 [ aTan ])
        (reg/v:SF 360 [ dy ]))) -1
     (nil))
(insn 710 1893 711 46 (set (reg/v:SF 361 [ dx ])
        (mult:SF (reg/v:SF 359 [ aTan ])
            (reg/v:SF 360 [ dy ]))) "../System/ray_funkcije.c":148:7 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg/v:SF 359 [ aTan ])
        (nil)))
(debug_insn 711 710 1889 46 (var_location:SF dx (debug_expr:SF D#32)) "../System/ray_funkcije.c":148:7 -1
     (nil))
(debug_insn 1889 711 2143 46 (var_location:SF D#30 (float:SF (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) -1
     (nil))
(jump_insn 2143 1889 2144 46 (set (pc)
        (label_ref 815)) 284 {*arm_jump}
     (nil)
 -> 815)
(barrier 2144 2143 2142)
(code_label 2142 2144 716 47 121 (nil) [1 uses])
(note 716 2142 721 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(note 721 716 722 47 NOTE_INSN_DELETED)
(note 722 721 723 47 NOTE_INSN_DELETED)
(note 723 722 717 47 NOTE_INSN_DELETED)
(debug_insn 717 723 718 47 (debug_marker) "../System/ray_funkcije.c":149:10 -1
     (nil))
(debug_insn 718 717 729 47 (debug_marker) "../System/ray_funkcije.c":150:4 -1
     (nil))
(insn 729 718 736 47 (set (reg:SF 193 [ py.37_114 ])
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":151:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 736 729 731 47 (set (reg/v:SF 360 [ dy ])
        (float:SF (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":152:7 809 {*floatsisf2_vfp}
     (nil))
(insn 731 736 739 47 (set (reg:SF 195 [ px.38_117 ])
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":151:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 739 731 16 47 (set (reg/v:SF 361 [ dx ])
        (mult:SF (reg/v:SF 359 [ aTan ])
            (reg/v:SF 360 [ dy ]))) "../System/ray_funkcije.c":153:7 767 {*mulsf3_vfp}
     (nil))
(insn 16 739 720 47 (set (reg/v:SF 404 [ dx ])
        (reg/v:SF 360 [ dy ])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 720 16 724 47 (set (reg:SI 688)
        (div:SI (reg/v:SI 356 [ ipy ])
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":150:21 162 {divsi3}
     (nil))
(insn 724 720 725 47 (set (reg:SI 692)
        (plus:SI (mult:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416])
                (reg:SI 688))
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":150:34 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 688)
        (nil)))
(insn 725 724 726 47 (set (reg/v:SF 403 [ rvy ])
        (float:SF (reg:SI 692))) "../System/ray_funkcije.c":150:8 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 692)
        (nil)))
(debug_insn 726 725 727 47 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) "../System/ray_funkcije.c":150:8 -1
     (nil))
(debug_insn 727 726 732 47 (debug_marker) "../System/ray_funkcije.c":151:4 -1
     (nil))
(insn 732 727 2220 47 (set (reg:SF 695)
        (minus:SF (reg/v:SF 403 [ rvy ])
            (reg:SF 193 [ py.37_114 ]))) "../System/ray_funkcije.c":151:21 761 {*subsf3_vfp}
     (nil))
(debug_insn 2220 732 733 47 (var_location:SF D#37 (reg/v:SF 359 [ aTan ])) -1
     (nil))
(insn 733 2220 734 47 (set (reg/v:SF 402 [ rvx ])
        (fma:SF (reg:SF 695)
            (reg/v:SF 359 [ aTan ])
            (reg:SF 195 [ px.38_117 ]))) "../System/ray_funkcije.c":151:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 695)
        (expr_list:REG_DEAD (reg/v:SF 359 [ aTan ])
            (nil))))
(debug_insn 734 733 735 47 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) "../System/ray_funkcije.c":151:8 -1
     (nil))
(debug_insn 735 734 1890 47 (debug_marker) "../System/ray_funkcije.c":152:4 -1
     (nil))
(debug_insn 1890 735 737 47 (var_location:SF D#31 (float:SF (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) -1
     (nil))
(debug_insn 737 1890 738 47 (var_location:SF dy (debug_expr:SF D#31)) "../System/ray_funkcije.c":152:7 -1
     (nil))
(debug_insn 738 737 1892 47 (debug_marker) "../System/ray_funkcije.c":153:4 -1
     (nil))
(debug_insn 1892 738 740 47 (var_location:SF D#32 (mult:SF (debug_expr:SF D#37)
        (reg/v:SF 360 [ dy ]))) -1
     (nil))
(debug_insn 740 1892 1888 47 (var_location:SF dx (debug_expr:SF D#32)) "../System/ray_funkcije.c":153:7 -1
     (nil))
(debug_insn 1888 740 2145 47 (var_location:SF D#30 (debug_expr:SF D#31)) -1
     (nil))
(jump_insn 2145 1888 2146 47 (set (pc)
        (label_ref 815)) 284 {*arm_jump}
     (nil)
 -> 815)
(barrier 2146 2145 809)
(code_label 809 2146 743 48 55 (nil) [2 uses])
(note 743 809 744 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(debug_insn 744 743 745 48 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 745 744 746 48 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 746 745 747 48 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) -1
     (nil))
(debug_insn 747 746 748 48 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) -1
     (nil))
(debug_insn 748 747 749 48 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 749 748 750 48 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 750 749 2021 48 (debug_marker) "../System/ray_funkcije.c":163:4 -1
     (nil))
(debug_insn 2021 750 794 48 (var_location:SF D#36 (reg:SF 354 [ reciptmp_327 ])) -1
     (nil))
(debug_insn 794 2021 751 48 (debug_marker) "../System/ray_funkcije.c":169:5 -1
     (nil))
(insn 751 794 763 48 (set (reg:SF 1074 [696])
        (mult:SF (reg:SF 354 [ reciptmp_327 ])
            (reg/v:SF 402 [ rvx ]))) "../System/ray_funkcije.c":163:13 767 {*mulsf3_vfp}
     (nil))
(insn 763 751 2226 48 (set (reg:SF 1075 [697])
        (mult:SF (reg:SF 354 [ reciptmp_327 ])
            (reg/v:SF 403 [ rvy ]))) "../System/ray_funkcije.c":164:13 767 {*mulsf3_vfp}
     (nil))
(insn 2226 763 752 48 (set (reg:SF 696)
        (reg:SF 1074 [696])) "../System/ray_funkcije.c":163:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1074 [696])
        (nil)))
(insn 752 2226 753 48 (set (reg/v:SI 400 [ wx ])
        (fix:SI (fix:SF (reg:SF 696)))) "../System/ray_funkcije.c":163:7 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 696)
        (nil)))
(debug_insn 753 752 754 48 (var_location:SI wx (reg/v:SI 400 [ wx ])) "../System/ray_funkcije.c":163:7 -1
     (nil))
(debug_insn 754 753 755 48 (debug_marker) "../System/ray_funkcije.c":164:4 -1
     (nil))
(debug_insn 755 754 756 48 (var_location:SF D#11 (mult:SF (debug_expr:SF D#36)
        (reg/v:SF 403 [ rvy ]))) "../System/ray_funkcije.c":164:13 -1
     (nil))
(debug_insn 756 755 757 48 (var_location:SI wy (fix:SI (debug_expr:SF D#11))) "../System/ray_funkcije.c":164:7 -1
     (nil))
(debug_insn 757 756 2227 48 (debug_marker) "../System/ray_funkcije.c":165:4 -1
     (nil))
(insn 2227 757 764 48 (set (reg:SF 697)
        (reg:SF 1075 [697])) "../System/ray_funkcije.c":164:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1075 [697])
        (nil)))
(insn 764 2227 760 48 (set (reg/v:SI 401 [ wy ])
        (fix:SI (fix:SF (reg:SF 697)))) "../System/ray_funkcije.c":164:7 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 697)
        (nil)))
(insn 760 764 761 48 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 400 [ wx ])
            (const_int 49 [0x31]))) "../System/ray_funkcije.c":165:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 761 760 762 48 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) "../System/ray_funkcije.c":165:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 792)
(note 762 761 773 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 773 762 1895 49 (set (reg:SI 701)
        (plus:SI (mult:SI (reg:SI 988)
                (reg/v:SI 401 [ wy ]))
            (reg/f:SI 987))) "../System/ray_funkcije.c":165:80 57 {*mla}
     (nil))
(debug_insn 1895 773 767 49 (var_location:SI D#34 (zero_extend:SI (mem:QI (plus:SI (reg:SI 701)
                (reg/v:SI 400 [ wx ])) [0 map[wy_446][wx_445]+0 S1 A8]))) -1
     (nil))
(insn 767 1895 768 49 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 401 [ wy ])
            (const_int 24 [0x18]))) "../System/ray_funkcije.c":165:45 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 401 [ wy ])
        (nil)))
(jump_insn 768 767 769 49 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) "../System/ray_funkcije.c":165:45 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 792)
(note 769 768 772 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(note 772 769 776 50 NOTE_INSN_DELETED)
(note 776 772 775 50 NOTE_INSN_DELETED)
(insn 775 776 777 50 (set (reg:SI 1099 [orig:199 _125 ] [199])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 701)
                    (reg/v:SI 400 [ wx ])) [0 map[wy_446][wx_445]+0 S1 A8]))) "../System/ray_funkcije.c":165:80 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 701)
        (expr_list:REG_DEAD (reg/v:SI 400 [ wx ])
            (nil))))
(jump_insn 777 775 778 50 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1099 [orig:199 _125 ] [199])
                        (const_int 0 [0]))
                    (label_ref:SI 792)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":165:64 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 792)
(note 778 777 2231 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 2231 778 2232 51 (set (reg:DF 181 [ _95 ])
        (reg:DF 1096 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":167:9 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1096 [orig:181 _95 ] [181])
        (nil)))
(insn 2232 2231 2233 51 (set (reg:SI 199 [ _125 ])
        (reg:SI 1099 [orig:199 _125 ] [199])) "../System/ray_funkcije.c":167:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1099 [orig:199 _125 ] [199])
        (nil)))
(insn 2233 2232 779 51 (set (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (reg:SI 1098 [orig:416 pretmp_766 ] [416])) "../System/ray_funkcije.c":167:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1098 [orig:416 pretmp_766 ] [416])
        (nil)))
(debug_insn 779 2233 780 51 (debug_marker) "../System/ray_funkcije.c":166:5 -1
     (nil))
(debug_insn 780 779 781 51 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":166:9 -1
     (nil))
(debug_insn 781 780 782 51 (debug_marker) "../System/ray_funkcije.c":167:5 -1
     (nil))
(insn 782 781 783 51 (set (reg/v:SI 345 [ vmt ])
        (reg:SI 199 [ _125 ])) "../System/ray_funkcije.c":167:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 199 [ _125 ])
        (nil)))
(debug_insn 783 782 784 51 (var_location:SI vmt (debug_expr:SI D#34)) -1
     (nil))
(debug_insn 784 783 785 51 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) -1
     (nil))
(debug_insn 785 784 786 51 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) -1
     (nil))
(debug_insn 786 785 787 51 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) -1
     (nil))
(debug_insn 787 786 788 51 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 788 787 789 51 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 789 788 2147 51 (debug_marker) "../System/ray_funkcije.c":162:9 -1
     (nil))
(jump_insn 2147 789 2148 51 (set (pc)
        (label_ref 829)) 284 {*arm_jump}
     (nil)
 -> 829)
(barrier 2148 2147 792)
(code_label 792 2148 793 52 53 (nil) [3 uses])
(note 793 792 808 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(note 808 793 795 52 NOTE_INSN_DELETED)
(insn 795 808 796 52 (set (reg/v:SF 402 [ rvx ])
        (plus:SF (reg/v:SF 402 [ rvx ])
            (reg/v:SF 361 [ dx ]))) "../System/ray_funkcije.c":169:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 796 795 797 52 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) "../System/ray_funkcije.c":169:9 -1
     (nil))
(debug_insn 797 796 798 52 (debug_marker) "../System/ray_funkcije.c":170:5 -1
     (nil))
(insn 798 797 799 52 (set (reg/v:SF 403 [ rvy ])
        (plus:SF (reg/v:SF 403 [ rvy ])
            (reg/v:SF 360 [ dy ]))) "../System/ray_funkcije.c":170:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 799 798 800 52 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) "../System/ray_funkcije.c":170:9 -1
     (nil))
(debug_insn 800 799 801 52 (debug_marker) "../System/ray_funkcije.c":171:5 -1
     (nil))
(debug_insn 801 800 802 52 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 802 801 803 52 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 803 802 804 52 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) -1
     (nil))
(debug_insn 804 803 805 52 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) -1
     (nil))
(debug_insn 805 804 806 52 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 806 805 807 52 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 807 806 810 52 (debug_marker) "../System/ray_funkcije.c":162:9 -1
     (nil))
(insn 810 807 811 52 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 1097 [orig:341 ivtmp_296 ] [341])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 1097 [orig:341 ivtmp_296 ] [341])
                (plus:SI (reg:SI 1097 [orig:341 ivtmp_296 ] [341])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":162:9 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 811 810 814 52 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 809)
            (pc))) "../System/ray_funkcije.c":162:9 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
        (int_list:REG_BR_PROB 1015959148 (nil)))
 -> 809)
(note 814 811 2234 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 2234 814 2235 53 (set (reg:DF 181 [ _95 ])
        (reg:DF 1096 [orig:181 _95 ] [181])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1096 [orig:181 _95 ] [181])
        (nil)))
(insn 2235 2234 2236 53 (set (reg:SI 341 [ ivtmp_296 ])
        (reg:SI 1097 [orig:341 ivtmp_296 ] [341])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1097 [orig:341 ivtmp_296 ] [341])
        (nil)))
(insn 2236 2235 17 53 (set (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (reg:SI 1098 [orig:416 pretmp_766 ] [416])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1098 [orig:416 pretmp_766 ] [416])
        (nil)))
(insn 17 2236 2149 53 (set (reg/v:SI 345 [ vmt ])
        (reg:SI 341 [ ivtmp_296 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 341 [ ivtmp_296 ])
        (expr_list:REG_EQUAL (const_int 0 [0])
            (nil))))
(jump_insn 2149 17 2150 53 (set (pc)
        (label_ref 829)) 284 {*arm_jump}
     (nil)
 -> 829)
(barrier 2150 2149 815)
(code_label 815 2150 816 54 52 (nil) [2 uses])
(note 816 815 817 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(debug_insn 817 816 818 54 (var_location:SI vmt (const_int 0 [0])) -1
     (nil))
(debug_insn 818 817 819 54 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 819 818 820 54 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) -1
     (nil))
(debug_insn 820 819 821 54 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) -1
     (nil))
(debug_insn 821 820 822 54 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 822 821 823 54 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 823 822 824 54 (debug_marker) "../System/ray_funkcije.c":162:9 -1
     (nil))
(debug_insn 824 823 825 54 (var_location:SI D#9 (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":163:13 -1
     (nil))
(insn 825 824 826 54 (set (reg:SF 703)
        (const_double:SF 1.0e+0 [0x0.8p+1])) 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 826 825 15 54 (set (reg:SF 354 [ reciptmp_327 ])
        (div:SF (reg:SF 703)
            (reg/v:SF 404 [ dx ]))) 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 703)
        (expr_list:REG_EQUAL (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
                (reg/v:SF 404 [ dx ]))
            (nil))))
(insn 15 826 771 54 (set (reg:SI 341 [ ivtmp_296 ])
        (const_int 15 [0xf])) "../System/ray_funkcije.c":109:11 728 {*thumb2_movsi_vfp}
     (nil))
(insn 771 15 2237 54 (set (reg:SI 988)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":165:80 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 2237 771 2238 54 (set (reg:DF 1096 [orig:181 _95 ] [181])
        (reg:DF 181 [ _95 ])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 181 [ _95 ])
        (nil)))
(insn 2238 2237 2239 54 (set (reg:SI 1097 [orig:341 ivtmp_296 ] [341])
        (reg:SI 341 [ ivtmp_296 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 341 [ ivtmp_296 ])
        (nil)))
(insn 2239 2238 2151 54 (set (reg:SI 1098 [orig:416 pretmp_766 ] [416])
        (reg:SI 1078 [orig:416 pretmp_766 ] [416])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (nil)))
(jump_insn 2151 2239 2152 54 (set (pc)
        (label_ref 809)) 284 {*arm_jump}
     (nil)
 -> 809)
(barrier 2152 2151 829)
(code_label 829 2152 830 55 54 (nil) [2 uses])
(note 830 829 841 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(note 841 830 844 55 NOTE_INSN_DELETED)
(note 844 841 847 55 NOTE_INSN_DELETED)
(note 847 844 862 55 NOTE_INSN_DELETED)
(note 862 847 863 55 NOTE_INSN_DELETED)
(note 863 862 831 55 NOTE_INSN_DELETED)
(debug_insn 831 863 832 55 (var_location:SI vmt (reg/v:SI 345 [ vmt ])) -1
     (nil))
(debug_insn 832 831 833 55 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 833 832 834 55 (var_location:SF rvy (reg/v:SF 403 [ rvy ])) -1
     (nil))
(debug_insn 834 833 835 55 (var_location:SF rvx (reg/v:SF 402 [ rvx ])) -1
     (nil))
(debug_insn 835 834 836 55 (var_location:SF dy (debug_expr:SF D#31)) -1
     (nil))
(debug_insn 836 835 837 55 (var_location:SF dx (debug_expr:SF D#32)) -1
     (nil))
(debug_insn 837 836 839 55 (debug_marker) "../System/ray_funkcije.c":175:3 -1
     (nil))
(insn 839 837 838 55 (set (reg:SF 1073 [orig:201 _130 ] [201])
        (minus:SF (reg:SF 193 [ py.37_114 ])
            (reg/v:SF 403 [ rvy ]))) "../System/ray_funkcije.c":175:43 761 {*subsf3_vfp}
     (nil))
(insn 838 839 2225 55 (set (reg:SF 1072 [orig:200 _127 ] [200])
        (minus:SF (reg:SF 195 [ px.38_117 ])
            (reg/v:SF 402 [ rvx ]))) "../System/ray_funkcije.c":175:17 761 {*subsf3_vfp}
     (nil))
(insn 2225 838 840 55 (set (reg:SF 201 [ _130 ])
        (reg:SF 1073 [orig:201 _130 ] [201])) "../System/ray_funkcije.c":175:50 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1073 [orig:201 _130 ] [201])
        (nil)))
(insn 840 2225 2224 55 (set (reg:SF 704)
        (mult:SF (reg:SF 201 [ _130 ])
            (reg:SF 201 [ _130 ]))) "../System/ray_funkcije.c":175:50 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 201 [ _130 ])
        (nil)))
(insn 2224 840 842 55 (set (reg:SF 200 [ _127 ])
        (reg:SF 1072 [orig:200 _127 ] [200])) "../System/ray_funkcije.c":175:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1072 [orig:200 _127 ] [200])
        (nil)))
(insn 842 2224 843 55 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 200 [ _127 ])
            (reg:SF 200 [ _127 ])
            (reg:SF 704))) "../System/ray_funkcije.c":175:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 704)
        (expr_list:REG_DEAD (reg:SF 200 [ _127 ])
            (nil))))
(call_insn/u 843 842 2071 55 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2071 843 845 55 (set (reg:DF 1032)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":175:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 845 2071 846 55 (set (reg:DF 16 s0)
        (reg:DF 1032)) "../System/ray_funkcije.c":175:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1032)
        (nil)))
(call_insn/u 846 845 2072 55 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>) [0 __builtin_sqrt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 2072 846 848 55 (set (reg:DF 1033)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":175:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 848 2072 849 55 (set (reg:DF 0 r0)
        (reg:DF 1033)) "../System/ray_funkcije.c":175:6 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1033)
        (nil)))
(call_insn/u 849 848 2073 55 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":175:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2073 849 850 55 (set (reg:SF 1034)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":175:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 850 2073 852 55 (set (reg/v:SF 362 [ d1 ])
        (reg:SF 1034)) "../System/ray_funkcije.c":175:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1034)
        (nil)))
(debug_insn 852 850 853 55 (var_location:SF d1 (reg/v:SF 362 [ d1 ])) "../System/ray_funkcije.c":175:6 -1
     (nil))
(debug_insn 853 852 854 55 (debug_marker) "../System/ray_funkcije.c":179:3 -1
     (nil))
(debug_insn 854 853 855 55 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":179:7 -1
     (nil))
(debug_insn 855 854 856 55 (debug_marker) "../System/ray_funkcije.c":180:3 -1
     (nil))
(debug_insn 856 855 857 55 (var_location:SF nTan (reg:SF 183 [ _97 ])) "../System/ray_funkcije.c":180:16 -1
     (nil))
(debug_insn 857 856 859 55 (debug_marker) "../System/ray_funkcije.c":181:3 -1
     (nil))
(insn 859 857 860 55 (set (reg:DF 2 r2)
        (const_double:DF 4.71238499999999937983830022858455777168273925781e+0 [0x0.96cbdba0a5269p+3])) "../System/ray_funkcije.c":181:6 739 {*thumb2_movdf_vfp}
     (nil))
(insn 860 859 861 55 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":181:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 861 860 2074 55 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":181:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpge") [flags 0x41]  <function_decl 0000000005c75c00 __aeabi_dcmpge>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2074 861 864 55 (set (reg:SI 1035)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":181:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 864 2074 865 55 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 1035)
                        (const_int 0 [0]))
                    (label_ref 876)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":181:6 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 1035)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 876)
(note 865 864 870 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(note 870 865 871 56 NOTE_INSN_DELETED)
(note 871 870 867 56 NOTE_INSN_DELETED)
(insn 867 871 868 56 (set (reg:DF 2 r2)
        (const_double:DF 1.57079499999999994130917002621572464704513549805e+0 [0x0.c90fcf80dc337p+1])) "../System/ray_funkcije.c":181:34 739 {*thumb2_movdf_vfp}
     (nil))
(insn 868 867 869 56 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":181:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 869 868 2075 56 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":181:34 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2075 869 872 56 (set (reg:SI 1036)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":181:34 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 872 2075 876 56 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1036)
                        (const_int 0 [0]))
                    (label_ref:SI 2153)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":181:34 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1036)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 2153)
(code_label 876 872 877 57 56 (nil) [1 uses])
(note 877 876 881 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(note 881 877 882 57 NOTE_INSN_DELETED)
(note 882 881 883 57 NOTE_INSN_DELETED)
(note 883 882 878 57 NOTE_INSN_DELETED)
(debug_insn 878 883 894 57 (debug_marker) "../System/ray_funkcije.c":182:4 -1
     (nil))
(insn 894 878 880 57 (set (reg/v:SF 363 [ dy ])
        (mult:SF (reg:SF 183 [ _97 ])
            (reg/v:SF 404 [ dx ]))) "../System/ray_funkcije.c":185:7 767 {*mulsf3_vfp}
     (nil))
(insn 880 894 884 57 (set (reg:SI 716)
        (div:SI (reg/v:SI 355 [ ipx ])
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":182:21 162 {divsi3}
     (nil))
(insn 884 880 885 57 (set (reg:SI 720)
        (plus:SI (mult:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416])
                (reg:SI 716))
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":182:34 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (expr_list:REG_DEAD (reg:SI 716)
            (nil))))
(insn 885 884 886 57 (set (reg/v:SF 397 [ rx ])
        (float:SF (reg:SI 720))) "../System/ray_funkcije.c":182:8 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 720)
        (nil)))
(debug_insn 886 885 887 57 (var_location:SF rhx (reg/v:SF 397 [ rx ])) "../System/ray_funkcije.c":182:8 -1
     (nil))
(debug_insn 887 886 888 57 (debug_marker) "../System/ray_funkcije.c":183:4 -1
     (nil))
(insn 888 887 2221 57 (set (reg:SF 721)
        (minus:SF (reg/v:SF 397 [ rx ])
            (reg:SF 195 [ px.38_117 ]))) "../System/ray_funkcije.c":183:21 761 {*subsf3_vfp}
     (nil))
(debug_insn 2221 888 889 57 (var_location:SF D#38 (reg:SF 183 [ _97 ])) -1
     (nil))
(insn 889 2221 890 57 (set (reg/v:SF 398 [ ry ])
        (fma:SF (reg:SF 183 [ _97 ])
            (reg:SF 721)
            (reg:SF 193 [ py.37_114 ]))) "../System/ray_funkcije.c":183:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 721)
        (expr_list:REG_DEAD (reg:SF 183 [ _97 ])
            (nil))))
(debug_insn 890 889 891 57 (var_location:SF rhy (reg/v:SF 398 [ ry ])) "../System/ray_funkcije.c":183:8 -1
     (nil))
(debug_insn 891 890 892 57 (debug_marker) "../System/ray_funkcije.c":184:4 -1
     (nil))
(debug_insn 892 891 893 57 (var_location:SF dx (float:SF (debug_expr:SI D#9))) "../System/ray_funkcije.c":184:7 -1
     (nil))
(debug_insn 893 892 1886 57 (debug_marker) "../System/ray_funkcije.c":185:4 -1
     (nil))
(debug_insn 1886 893 895 57 (var_location:SF D#29 (mult:SF (debug_expr:SF D#38)
        (debug_expr:SF D#30))) -1
     (nil))
(debug_insn 895 1886 2154 57 (var_location:SF dy (debug_expr:SF D#29)) "../System/ray_funkcije.c":185:7 -1
     (nil))
(jump_insn 2154 895 2155 57 (set (pc)
        (label_ref 1004)) "../System/ray_funkcije.c":185:7 284 {*arm_jump}
     (nil)
 -> 1004)
(barrier 2155 2154 2153)
(code_label 2153 2155 899 58 122 (nil) [1 uses])
(note 899 2153 904 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(note 904 899 906 58 NOTE_INSN_DELETED)
(note 906 904 900 58 NOTE_INSN_DELETED)
(debug_insn 900 906 901 58 (debug_marker) "../System/ray_funkcije.c":186:10 -1
     (nil))
(debug_insn 901 900 903 58 (debug_marker) "../System/ray_funkcije.c":187:4 -1
     (nil))
(insn 903 901 905 58 (set (reg:SI 727)
        (div:SI (reg/v:SI 355 [ ipx ])
            (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":187:21 162 {divsi3}
     (nil))
(insn 905 903 907 58 (set (reg:SI 729)
        (minus:SI (reg/v:SI 355 [ ipx ])
            (mult:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416])
                (reg:SI 727)))) "../System/ray_funkcije.c":187:21 58 {*mls}
     (expr_list:REG_DEAD (reg:SI 727)
        (nil)))
(insn 907 905 908 58 (set (reg:SI 0 r0)
        (minus:SI (reg/v:SI 355 [ ipx ])
            (reg:SI 729))) "../System/ray_funkcije.c":187:34 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 729)
        (nil)))
(call_insn/u 908 907 910 58 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:34 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 910 908 912 58 (set (reg:DF 2 r2)
        (const_double:DF 1.00000000000000004792173602385929598312941379845e-4 [0x0.d1b71758e21968p-13])) "../System/ray_funkcije.c":187:34 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 912 910 915 58 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:34 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 915 912 2076 58 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":187:8 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2076 915 916 58 (set (reg:SF 1037)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":187:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 916 2076 918 58 (set (reg/v:SF 397 [ rx ])
        (reg:SF 1037)) "../System/ray_funkcije.c":187:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1037)
        (nil)))
(debug_insn 918 916 919 58 (var_location:SF rhx (reg/v:SF 397 [ rx ])) "../System/ray_funkcije.c":187:8 -1
     (nil))
(debug_insn 919 918 924 58 (debug_marker) "../System/ray_funkcije.c":188:4 -1
     (nil))
(insn 924 919 2223 58 (set (reg:SI 735)
        (neg:SI (reg:SI 1078 [orig:416 pretmp_766 ] [416]))) "../System/ray_funkcije.c":189:9 164 {*arm_negsi2}
     (expr_list:REG_DEAD (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (nil)))
(debug_insn 2223 924 925 58 (var_location:SI D#40 (reg:SI 735)) -1
     (nil))
(insn 925 2223 920 58 (set (reg/v:SF 404 [ dx ])
        (float:SF (reg:SI 735))) "../System/ray_funkcije.c":189:7 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 735)
        (nil)))
(insn 920 925 928 58 (set (reg:SF 734)
        (minus:SF (reg/v:SF 397 [ rx ])
            (reg:SF 195 [ px.38_117 ]))) "../System/ray_funkcije.c":188:21 761 {*subsf3_vfp}
     (nil))
(insn 928 920 2222 58 (set (reg/v:SF 363 [ dy ])
        (mult:SF (reg:SF 183 [ _97 ])
            (reg/v:SF 404 [ dx ]))) "../System/ray_funkcije.c":190:7 767 {*mulsf3_vfp}
     (nil))
(debug_insn 2222 928 921 58 (var_location:SF D#39 (reg:SF 183 [ _97 ])) -1
     (nil))
(insn 921 2222 922 58 (set (reg/v:SF 398 [ ry ])
        (fma:SF (reg:SF 183 [ _97 ])
            (reg:SF 734)
            (reg:SF 193 [ py.37_114 ]))) "../System/ray_funkcije.c":188:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 734)
        (expr_list:REG_DEAD (reg:SF 183 [ _97 ])
            (nil))))
(debug_insn 922 921 923 58 (var_location:SF rhy (reg/v:SF 398 [ ry ])) "../System/ray_funkcije.c":188:8 -1
     (nil))
(debug_insn 923 922 1887 58 (debug_marker) "../System/ray_funkcije.c":189:4 -1
     (nil))
(debug_insn 1887 923 926 58 (var_location:SF D#30 (float:SF (debug_expr:SI D#40))) -1
     (nil))
(debug_insn 926 1887 927 58 (var_location:SF dx (debug_expr:SF D#30)) "../System/ray_funkcije.c":189:7 -1
     (nil))
(debug_insn 927 926 1885 58 (debug_marker) "../System/ray_funkcije.c":190:4 -1
     (nil))
(debug_insn 1885 927 929 58 (var_location:SF D#29 (mult:SF (debug_expr:SF D#39)
        (debug_expr:SF D#30))) -1
     (nil))
(debug_insn 929 1885 2156 58 (var_location:SF dy (debug_expr:SF D#29)) "../System/ray_funkcije.c":190:7 -1
     (nil))
(jump_insn 2156 929 2157 58 (set (pc)
        (label_ref 1004)) "../System/ray_funkcije.c":190:7 284 {*arm_jump}
     (nil)
 -> 1004)
(barrier 2157 2156 998)
(code_label 998 2157 932 59 62 (nil) [2 uses])
(note 932 998 933 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(debug_insn 933 932 934 59 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 934 933 935 59 (var_location:SF rhy (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 935 934 936 59 (var_location:SF rhx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 936 935 937 59 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 937 936 938 59 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 938 937 939 59 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 939 938 2020 59 (debug_marker) "../System/ray_funkcije.c":197:4 -1
     (nil))
(debug_insn 2020 939 983 59 (var_location:SF D#35 (reg:SF 354 [ reciptmp_327 ])) -1
     (nil))
(debug_insn 983 2020 940 59 (debug_marker) "../System/ray_funkcije.c":204:5 -1
     (nil))
(insn 940 983 952 59 (set (reg:SF 1076 [736])
        (mult:SF (reg:SF 354 [ reciptmp_327 ])
            (reg/v:SF 397 [ rx ]))) "../System/ray_funkcije.c":197:13 767 {*mulsf3_vfp}
     (nil))
(insn 952 940 2228 59 (set (reg:SF 1077 [737])
        (mult:SF (reg:SF 354 [ reciptmp_327 ])
            (reg/v:SF 398 [ ry ]))) "../System/ray_funkcije.c":198:13 767 {*mulsf3_vfp}
     (nil))
(insn 2228 952 941 59 (set (reg:SF 736)
        (reg:SF 1076 [736])) "../System/ray_funkcije.c":197:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1076 [736])
        (nil)))
(insn 941 2228 942 59 (set (reg/v:SI 395 [ wx ])
        (fix:SI (fix:SF (reg:SF 736)))) "../System/ray_funkcije.c":197:7 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 736)
        (nil)))
(debug_insn 942 941 943 59 (var_location:SI wx (reg/v:SI 395 [ wx ])) "../System/ray_funkcije.c":197:7 -1
     (nil))
(debug_insn 943 942 944 59 (debug_marker) "../System/ray_funkcije.c":198:4 -1
     (nil))
(debug_insn 944 943 945 59 (var_location:SF D#10 (mult:SF (debug_expr:SF D#35)
        (reg/v:SF 398 [ ry ]))) "../System/ray_funkcije.c":198:13 -1
     (nil))
(debug_insn 945 944 946 59 (var_location:SI wy (fix:SI (debug_expr:SF D#10))) "../System/ray_funkcije.c":198:7 -1
     (nil))
(debug_insn 946 945 2229 59 (debug_marker) "../System/ray_funkcije.c":199:4 -1
     (nil))
(insn 2229 946 953 59 (set (reg:SF 737)
        (reg:SF 1077 [737])) "../System/ray_funkcije.c":198:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1077 [737])
        (nil)))
(insn 953 2229 949 59 (set (reg/v:SI 396 [ wy ])
        (fix:SI (fix:SF (reg:SF 737)))) "../System/ray_funkcije.c":198:7 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 737)
        (nil)))
(insn 949 953 950 59 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 395 [ wx ])
            (const_int 49 [0x31]))) "../System/ray_funkcije.c":199:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 950 949 951 59 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 981)
            (pc))) "../System/ray_funkcije.c":199:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 981)
(note 951 950 962 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 962 951 1894 60 (set (reg:SI 741)
        (plus:SI (mult:SI (reg:SI 986)
                (reg/v:SI 396 [ wy ]))
            (reg/f:SI 987))) "../System/ray_funkcije.c":200:16 57 {*mla}
     (nil))
(debug_insn 1894 962 956 60 (var_location:SI D#33 (zero_extend:SI (mem:QI (plus:SI (reg:SI 741)
                (reg/v:SI 395 [ wx ])) [0 map[wy_440][wx_439]+0 S1 A8]))) -1
     (nil))
(insn 956 1894 957 60 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 396 [ wy ])
            (const_int 24 [0x18]))) "../System/ray_funkcije.c":199:45 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 396 [ wy ])
        (nil)))
(jump_insn 957 956 958 60 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 981)
            (pc))) "../System/ray_funkcije.c":199:45 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 981)
(note 958 957 961 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 961 958 965 61 NOTE_INSN_DELETED)
(note 965 961 964 61 NOTE_INSN_DELETED)
(insn 964 965 966 61 (set (reg:SI 1095 [orig:220 _156 ] [220])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 741)
                    (reg/v:SI 395 [ wx ])) [0 map[wy_440][wx_439]+0 S1 A8]))) "../System/ray_funkcije.c":200:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 741)
        (expr_list:REG_DEAD (reg/v:SI 395 [ wx ])
            (nil))))
(jump_insn 966 964 967 61 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1095 [orig:220 _156 ] [220])
                        (const_int 0 [0]))
                    (label_ref:SI 981)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":200:6 1024 {*thumb2_cbz}
     (expr_list:REG_UNUSED (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 981)
(note 967 966 2240 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 2240 967 2241 62 (set (reg:DF 181 [ _95 ])
        (reg:DF 1092 [orig:181 _95 ] [181])) "../System/ray_funkcije.c":202:9 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1092 [orig:181 _95 ] [181])
        (nil)))
(insn 2241 2240 2242 62 (set (reg:SI 220 [ _156 ])
        (reg:SI 1095 [orig:220 _156 ] [220])) "../System/ray_funkcije.c":202:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1095 [orig:220 _156 ] [220])
        (nil)))
(insn 2242 2241 968 62 (set (reg/v:SI 345 [ vmt ])
        (reg/v:SI 1093 [orig:345 vmt ] [345])) "../System/ray_funkcije.c":202:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1093 [orig:345 vmt ] [345])
        (nil)))
(debug_insn 968 2242 969 62 (debug_marker) "../System/ray_funkcije.c":201:5 -1
     (nil))
(debug_insn 969 968 970 62 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":201:9 -1
     (nil))
(debug_insn 970 969 971 62 (debug_marker) "../System/ray_funkcije.c":202:5 -1
     (nil))
(insn 971 970 972 62 (set (reg/v:SI 173 [ hmt ])
        (reg:SI 220 [ _156 ])) "../System/ray_funkcije.c":202:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 220 [ _156 ])
        (nil)))
(debug_insn 972 971 973 62 (var_location:SI hmt (debug_expr:SI D#33)) -1
     (nil))
(debug_insn 973 972 974 62 (var_location:SF rhy (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 974 973 975 62 (var_location:SF rhx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 975 974 976 62 (var_location:SF dof (const_double:SF 1.5e+1 [0x0.fp+4])) -1
     (nil))
(debug_insn 976 975 977 62 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 977 976 978 62 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 978 977 2158 62 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(jump_insn 2158 978 2159 62 (set (pc)
        (label_ref 1015)) 284 {*arm_jump}
     (nil)
 -> 1015)
(barrier 2159 2158 981)
(code_label 981 2159 982 63 60 (nil) [3 uses])
(note 982 981 997 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(note 997 982 984 63 NOTE_INSN_DELETED)
(insn 984 997 985 63 (set (reg/v:SF 397 [ rx ])
        (plus:SF (reg/v:SF 397 [ rx ])
            (reg/v:SF 404 [ dx ]))) "../System/ray_funkcije.c":204:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 985 984 986 63 (var_location:SF rhx (reg/v:SF 397 [ rx ])) "../System/ray_funkcije.c":204:9 -1
     (nil))
(debug_insn 986 985 987 63 (debug_marker) "../System/ray_funkcije.c":205:5 -1
     (nil))
(insn 987 986 988 63 (set (reg/v:SF 398 [ ry ])
        (plus:SF (reg/v:SF 398 [ ry ])
            (reg/v:SF 363 [ dy ]))) "../System/ray_funkcije.c":205:9 758 {*addsf3_vfp}
     (nil))
(debug_insn 988 987 989 63 (var_location:SF rhy (reg/v:SF 398 [ ry ])) "../System/ray_funkcije.c":205:9 -1
     (nil))
(debug_insn 989 988 990 63 (debug_marker) "../System/ray_funkcije.c":206:5 -1
     (nil))
(debug_insn 990 989 991 63 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 991 990 992 63 (var_location:SF rhy (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 992 991 993 63 (var_location:SF rhx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 993 992 994 63 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 994 993 995 63 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 995 994 996 63 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 996 995 999 63 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(insn 999 996 1000 63 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 1094 [orig:420 ivtmp_821 ] [420])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 1094 [orig:420 ivtmp_821 ] [420])
                (plus:SI (reg:SI 1094 [orig:420 ivtmp_821 ] [420])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":196:9 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 1000 999 1003 63 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 998)
            (pc))) "../System/ray_funkcije.c":196:9 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
        (int_list:REG_BR_PROB 1015959156 (nil)))
 -> 998)
(note 1003 1000 2243 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 2243 1003 2244 64 (set (reg:DF 181 [ _95 ])
        (reg:DF 1092 [orig:181 _95 ] [181])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1092 [orig:181 _95 ] [181])
        (nil)))
(insn 2244 2243 2245 64 (set (reg/v:SI 345 [ vmt ])
        (reg/v:SI 1093 [orig:345 vmt ] [345])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1093 [orig:345 vmt ] [345])
        (nil)))
(insn 2245 2244 19 64 (set (reg:SI 420 [ ivtmp_821 ])
        (reg:SI 1094 [orig:420 ivtmp_821 ] [420])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1094 [orig:420 ivtmp_821 ] [420])
        (nil)))
(insn 19 2245 2160 64 (set (reg/v:SI 173 [ hmt ])
        (reg:SI 420 [ ivtmp_821 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 420 [ ivtmp_821 ])
        (expr_list:REG_EQUAL (const_int 0 [0])
            (nil))))
(jump_insn 2160 19 2161 64 (set (pc)
        (label_ref 1015)) 284 {*arm_jump}
     (nil)
 -> 1015)
(barrier 2161 2160 1004)
(code_label 1004 2161 1005 65 59 (nil) [2 uses])
(note 1005 1004 1006 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1006 1005 1007 65 (var_location:SI hmt (const_int 0 [0])) -1
     (nil))
(debug_insn 1007 1006 1008 65 (var_location:SF rhy (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 1008 1007 1009 65 (var_location:SF rhx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 1009 1008 1010 65 (var_location:SF dof (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1010 1009 1011 65 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 1011 1010 1012 65 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 1012 1011 18 65 (debug_marker) "../System/ray_funkcije.c":196:9 -1
     (nil))
(insn 18 1012 960 65 (set (reg:SI 420 [ ivtmp_821 ])
        (const_int 15 [0xf])) 728 {*thumb2_movsi_vfp}
     (nil))
(insn 960 18 2246 65 (set (reg:SI 986)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":200:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 2246 960 2247 65 (set (reg:DF 1092 [orig:181 _95 ] [181])
        (reg:DF 181 [ _95 ])) 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 181 [ _95 ])
        (nil)))
(insn 2247 2246 2248 65 (set (reg/v:SI 1093 [orig:345 vmt ] [345])
        (reg/v:SI 345 [ vmt ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 345 [ vmt ])
        (nil)))
(insn 2248 2247 2162 65 (set (reg:SI 1094 [orig:420 ivtmp_821 ] [420])
        (reg:SI 420 [ ivtmp_821 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 420 [ ivtmp_821 ])
        (nil)))
(jump_insn 2162 2248 2163 65 (set (pc)
        (label_ref 998)) 284 {*arm_jump}
     (nil)
 -> 998)
(barrier 2163 2162 1015)
(code_label 1015 2163 1016 66 61 (nil) [2 uses])
(note 1016 1015 1027 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(note 1027 1016 1030 66 NOTE_INSN_DELETED)
(note 1030 1027 1033 66 NOTE_INSN_DELETED)
(note 1033 1030 1017 66 NOTE_INSN_DELETED)
(debug_insn 1017 1033 1018 66 (var_location:SI hmt (reg/v:SI 173 [ hmt ])) -1
     (nil))
(debug_insn 1018 1017 1019 66 (var_location:SF rhy (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 1019 1018 1020 66 (var_location:SF rhx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 1020 1019 1021 66 (var_location:SF dof (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1021 1020 1022 66 (var_location:SF dy (debug_expr:SF D#29)) -1
     (nil))
(debug_insn 1022 1021 1023 66 (var_location:SF dx (debug_expr:SF D#30)) -1
     (nil))
(debug_insn 1023 1022 1025 66 (debug_marker) "../System/ray_funkcije.c":209:3 -1
     (nil))
(insn 1025 1023 1024 66 (set (reg:SF 222 [ _159 ])
        (minus:SF (reg:SF 193 [ py.37_114 ])
            (reg/v:SF 398 [ ry ]))) "../System/ray_funkcije.c":209:43 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 193 [ py.37_114 ])
        (nil)))
(insn 1024 1025 1026 66 (set (reg:SF 221 [ _157 ])
        (minus:SF (reg:SF 195 [ px.38_117 ])
            (reg/v:SF 397 [ rx ]))) "../System/ray_funkcije.c":209:17 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 195 [ px.38_117 ])
        (nil)))
(insn 1026 1024 1028 66 (set (reg:SF 743)
        (mult:SF (reg:SF 222 [ _159 ])
            (reg:SF 222 [ _159 ]))) "../System/ray_funkcije.c":209:50 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 222 [ _159 ])
        (nil)))
(insn 1028 1026 1029 66 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 221 [ _157 ])
            (reg:SF 221 [ _157 ])
            (reg:SF 743))) "../System/ray_funkcije.c":209:8 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 743)
        (expr_list:REG_DEAD (reg:SF 221 [ _157 ])
            (nil))))
(call_insn/u 1029 1028 2077 66 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2077 1029 1031 66 (set (reg:DF 1038)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":209:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1031 2077 1032 66 (set (reg:DF 16 s0)
        (reg:DF 1038)) "../System/ray_funkcije.c":209:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1038)
        (nil)))
(call_insn/u 1032 1031 2078 66 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>) [0 __builtin_sqrt S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrt") [flags 0x41]  <function_decl 0000000005b10e00 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 2078 1032 1034 66 (set (reg:DF 1039)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":209:8 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 1034 2078 1035 66 (set (reg:DF 0 r0)
        (reg:DF 1039)) "../System/ray_funkcije.c":209:6 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1039)
        (nil)))
(call_insn/u 1035 1034 2079 66 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":209:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2079 1035 1036 66 (set (reg:SF 1040)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":209:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1036 2079 1038 66 (set (reg/v:SF 340 [ d2 ])
        (reg:SF 1040)) "../System/ray_funkcije.c":209:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1040)
        (nil)))
(debug_insn 1038 1036 1039 66 (var_location:SF d2 (reg/v:SF 340 [ d2 ])) "../System/ray_funkcije.c":209:6 -1
     (nil))
(debug_insn 1039 1038 1040 66 (debug_marker) "../System/ray_funkcije.c":213:3 -1
     (nil))
(debug_insn 1040 1039 1041 66 (var_location:SF shade (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":213:9 -1
     (nil))
(debug_insn 1041 1040 2206 66 (debug_marker) "../System/ray_funkcije.c":215:3 -1
     (nil))
(insn 2206 1041 2207 66 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 362 [ d1 ])
            (reg/v:SF 340 [ d2 ]))) "../System/ray_funkcije.c":215:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2207 2206 1043 66 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":215:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1043 2207 1044 66 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1850)
            (pc))) "../System/ray_funkcije.c":215:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1850)
(note 1044 1043 22 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 22 1044 23 67 (set (reg/v:SF 398 [ ry ])
        (reg/v:SF 403 [ rvy ])) "../System/ray_funkcije.c":215:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 403 [ rvy ])
        (nil)))
(insn 23 22 24 67 (set (reg/v:SF 397 [ rx ])
        (reg/v:SF 402 [ rvx ])) "../System/ray_funkcije.c":215:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 402 [ rvx ])
        (nil)))
(insn 24 23 21 67 (set (reg/v:SF 340 [ d2 ])
        (reg/v:SF 362 [ d1 ])) "../System/ray_funkcije.c":225:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 362 [ d1 ])
        (nil)))
(insn 21 24 25 67 (set (reg/v:SI 173 [ hmt ])
        (reg/v:SI 345 [ vmt ])) "../System/ray_funkcije.c":215:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 345 [ vmt ])
        (nil)))
(insn 25 21 2164 67 (set (reg/v:SF 347 [ shade ])
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":213:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(jump_insn 2164 25 2165 67 (set (pc)
        (label_ref 1045)) 284 {*arm_jump}
     (nil)
 -> 1045)
(barrier 2165 2164 1850)
(code_label 1850 2165 1849 68 90 (nil) [1 uses])
(note 1849 1850 20 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 20 1849 1045 68 (set (reg/v:SF 347 [ shade ])
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":219:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(code_label 1045 20 1046 69 63 (nil) [1 uses])
(note 1046 1045 1047 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1047 1046 1048 69 (var_location:SF shade (reg/v:SF 347 [ shade ])) -1
     (nil))
(debug_insn 1048 1047 1049 69 (var_location:SI hmt (reg/v:SI 173 [ hmt ])) -1
     (nil))
(debug_insn 1049 1048 1050 69 (var_location:SF ry (reg/v:SF 398 [ ry ])) -1
     (nil))
(debug_insn 1050 1049 1051 69 (var_location:SF rx (reg/v:SF 397 [ rx ])) -1
     (nil))
(debug_insn 1051 1050 1052 69 (var_location:SF d (reg/v:SF 340 [ d2 ])) -1
     (nil))
(debug_insn 1052 1051 1053 69 (debug_marker) "../System/ray_funkcije.c":230:3 -1
     (nil))
(insn 1053 1052 1054 69 (set (reg:SF 16 s0)
        (reg/v:SF 340 [ d2 ])) "../System/ray_funkcije.c":230:9 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 1054 1053 2080 69 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":230:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2080 1054 1055 69 (set (reg:SF 1041)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":230:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1055 2080 1056 69 (set (reg/v:SF 364 [ vis ])
        (reg:SF 1041)) "../System/ray_funkcije.c":230:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1041)
        (nil)))
(debug_insn 1056 1055 1057 69 (var_location:SF vis (reg/v:SF 364 [ vis ])) "../System/ray_funkcije.c":230:9 -1
     (nil))
(debug_insn 1057 1056 1063 69 (debug_marker) "../System/ray_funkcije.c":232:3 -1
     (nil))
(insn 1063 1057 1067 69 (set (reg:SF 750)
        (mult:SF (reg/v:SF 340 [ d2 ])
            (reg:SF 418 [ _769 ]))) "../System/ray_funkcije.c":232:40 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 418 [ _769 ])
        (expr_list:REG_DEAD (reg/v:SF 340 [ d2 ])
            (nil))))
(insn 1067 1063 1073 69 (set (reg:SF 751)
        (const_double:SF 3.2e+1 [0x0.8p+6])) "../System/ray_funkcije.c":233:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.2e+1 [0x0.8p+6])
        (nil)))
(insn 1073 1067 1059 69 (set (reg:SF 752)
        (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/ray_funkcije.c":235:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 1059 1073 1060 69 (set (reg:SI 227 [ Blocksize.63_164 ])
        (mem/c:SI (reg/f:SI 970) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(insn 1060 1059 1061 69 (set (reg:SI 748)
        (const_int 100 [0x64])) "../System/ray_funkcije.c":232:28 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 100 [0x64])
        (nil)))
(insn 1061 1060 1062 69 (set (reg:SI 747)
        (mult:SI (reg:SI 748)
            (reg:SI 227 [ Blocksize.63_164 ]))) "../System/ray_funkcije.c":232:28 56 {*mul}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 227 [ Blocksize.63_164 ])
            (const_int 100 [0x64]))
        (nil)))
(insn 1062 1061 1884 69 (set (reg:SF 749)
        (float:SF (reg:SI 747))) "../System/ray_funkcije.c":232:35 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 747)
        (nil)))
(debug_insn 1884 1062 1064 69 (var_location:SF D#28 (div:SF (reg:SF 749)
        (reg:SF 750))) -1
     (nil))
(insn 1064 1884 1065 69 (set (reg/v:SF 348 [ lineH ])
        (div:SF (reg:SF 749)
            (reg:SF 750))) "../System/ray_funkcije.c":232:9 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 750)
        (expr_list:REG_DEAD (reg:SF 749)
            (nil))))
(debug_insn 1065 1064 1066 69 (var_location:SF lineH (debug_expr:SF D#28)) "../System/ray_funkcije.c":232:9 -1
     (nil))
(debug_insn 1066 1065 1068 69 (debug_marker) "../System/ray_funkcije.c":233:3 -1
     (nil))
(insn 1068 1066 1069 69 (set (reg/v:SF 365 [ ty_step ])
        (div:SF (reg:SF 751)
            (reg/v:SF 348 [ lineH ]))) "../System/ray_funkcije.c":233:9 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 751)
        (expr_list:REG_EQUAL (div:SF (const_double:SF 3.2e+1 [0x0.8p+6])
                (reg/v:SF 348 [ lineH ]))
            (nil))))
(debug_insn 1069 1068 1070 69 (var_location:SF ty_step (reg/v:SF 365 [ ty_step ])) "../System/ray_funkcije.c":233:9 -1
     (nil))
(debug_insn 1070 1069 1071 69 (debug_marker) "../System/ray_funkcije.c":234:3 -1
     (nil))
(debug_insn 1071 1070 1072 69 (var_location:SF ty_offset (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":234:9 -1
     (nil))
(debug_insn 1072 1071 2204 69 (debug_marker) "../System/ray_funkcije.c":235:3 -1
     (nil))
(insn 2204 1072 2205 69 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 348 [ lineH ])
            (reg:SF 752))) "../System/ray_funkcije.c":235:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2205 2204 1075 69 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":235:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1075 2205 1076 69 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1085)
            (pc))) "../System/ray_funkcije.c":235:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1085)
(note 1076 1075 1077 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(note 1077 1076 1079 70 NOTE_INSN_DELETED)
(insn 1079 1077 1078 70 (set (reg:SF 755)
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":239:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1078 1079 1080 70 (set (reg:SF 754)
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":239:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1080 1078 29 70 (set (reg:SF 423 [ _835 ])
        (fma:SF (neg:SF (reg/v:SF 348 [ lineH ]))
            (reg:SF 754)
            (reg:SF 755))) "../System/ray_funkcije.c":239:9 791 {*fmsubsf4}
     (expr_list:REG_DEAD (reg:SF 755)
        (expr_list:REG_DEAD (reg:SF 754)
            (nil))))
(insn 29 1080 1081 70 (set (reg/v:SF 393 [ ty ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":327:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1081 29 1082 70 (set (reg:SF 756)
        (plus:SF (reg/v:SF 348 [ lineH ])
            (reg:SF 423 [ _835 ]))) "../System/ray_funkcije.c":327:24 758 {*addsf3_vfp}
     (nil))
(insn 1082 1081 2166 70 (set (reg/v:SI 389 [ y ])
        (fix:SI (fix:SF (reg:SF 756)))) "../System/ray_funkcije.c":327:12 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 756)
        (nil)))
(jump_insn 2166 1082 2167 70 (set (pc)
        (label_ref 1097)) 284 {*arm_jump}
     (nil)
 -> 1097)
(barrier 2167 2166 1085)
(code_label 1085 2167 1086 71 64 (nil) [1 uses])
(note 1086 1085 1087 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1087 1086 1088 71 (debug_marker) "../System/ray_funkcije.c":236:4 -1
     (nil))
(debug_insn 1088 1087 1089 71 (var_location:SF D#14 (minus:SF (debug_expr:SF D#28)
        (const_double:SF 1.0e+2 [0x0.c8p+7]))) "../System/ray_funkcije.c":236:23 -1
     (nil))
(debug_insn 1089 1088 1090 71 (var_location:SF ty_offset (mult:SF (debug_expr:SF D#14)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":236:14 -1
     (nil))
(debug_insn 1090 1089 1091 71 (debug_marker) "../System/ray_funkcije.c":237:4 -1
     (nil))
(debug_insn 1091 1090 1093 71 (var_location:SF lineH (const_double:SF 1.0e+2 [0x0.c8p+7])) "../System/ray_funkcije.c":237:10 -1
     (nil))
(insn 1093 1091 1095 71 (set (reg:SF 757)
        (minus:SF (reg/v:SF 348 [ lineH ])
            (reg:SF 752))) "../System/ray_funkcije.c":236:23 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg/v:SF 348 [ lineH ])
        (expr_list:REG_EQUAL (minus:SF (reg/v:SF 348 [ lineH ])
                (const_double:SF 1.0e+2 [0x0.c8p+7]))
            (nil))))
(insn 1095 1093 1094 71 (set (reg:SF 760)
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":240:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1094 1095 27 71 (set (reg:SF 759)
        (mult:SF (reg:SF 757)
            (reg/v:SF 365 [ ty_step ]))) "../System/ray_funkcije.c":240:9 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 757)
        (nil)))
(insn 27 1094 1883 71 (set (reg:SF 423 [ _835 ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":240:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 1883 27 1096 71 (var_location:SF D#28 (const_double:SF 1.0e+2 [0x0.c8p+7])) -1
     (nil))
(insn 1096 1883 28 71 (set (reg/v:SF 393 [ ty ])
        (mult:SF (reg:SF 759)
            (reg:SF 760))) "../System/ray_funkcije.c":240:9 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 760)
        (expr_list:REG_DEAD (reg:SF 759)
            (expr_list:REG_EQUAL (mult:SF (reg:SF 759)
                    (const_double:SF 5.0e-1 [0x0.8p+0]))
                (nil)))))
(insn 28 1096 26 71 (set (reg/v:SF 348 [ lineH ])
        (reg:SF 752)) "../System/ray_funkcije.c":237:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 752)
        (expr_list:REG_EQUAL (const_double:SF 1.0e+2 [0x0.c8p+7])
            (nil))))
(insn 26 28 1097 71 (set (reg/v:SI 389 [ y ])
        (reg:SI 748)) "../System/ray_funkcije.c":240:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 748)
        (expr_list:REG_EQUAL (const_int 100 [0x64])
            (nil))))
(code_label 1097 26 1098 72 65 (nil) [1 uses])
(note 1098 1097 1108 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(note 1108 1098 1109 72 NOTE_INSN_DELETED)
(note 1109 1108 1099 72 NOTE_INSN_DELETED)
(debug_insn 1099 1109 1100 72 (var_location:SF ty_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1100 1099 1101 72 (var_location:SF lineH (debug_expr:SF D#28)) -1
     (nil))
(debug_insn 1101 1100 1102 72 (debug_marker) "../System/ray_funkcije.c":239:3 -1
     (nil))
(debug_insn 1102 1101 1103 72 (var_location:SF D#8 (mult:SF (debug_expr:SF D#28)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":239:30 -1
     (nil))
(debug_insn 1103 1102 1104 72 (var_location:SF D#7 (minus:SF (const_double:SF 5.0e+1 [0x0.c8p+6])
        (debug_expr:SF D#8))) "../System/ray_funkcije.c":239:9 -1
     (nil))
(debug_insn 1104 1103 1105 72 (var_location:SF lineOff (debug_expr:SF D#7)) "../System/ray_funkcije.c":239:9 -1
     (nil))
(debug_insn 1105 1104 1106 72 (debug_marker) "../System/ray_funkcije.c":240:3 -1
     (nil))
(debug_insn 1106 1105 1107 72 (var_location:SF ty (debug_expr:SF D#6)) "../System/ray_funkcije.c":240:9 -1
     (nil))
(debug_insn 1107 1106 1110 72 (debug_marker) "../System/ray_funkcije.c":241:3 -1
     (nil))
(insn 1110 1107 1111 72 (set (reg/v:SF 366 [ scale ])
        (mult:SF (float:SF (reg:SI 227 [ Blocksize.63_164 ]))
            (const_double:SF 3.125e-2 [0x0.8p-4]))) "../System/ray_funkcije.c":241:9 832 {*combine_vcvt_f32_s32}
     (expr_list:REG_DEAD (reg:SI 227 [ Blocksize.63_164 ])
        (nil)))
(debug_insn 1111 1110 1112 72 (var_location:SF scale (reg/v:SF 366 [ scale ])) "../System/ray_funkcije.c":241:9 -1
     (nil))
(debug_insn 1112 1111 1113 72 (debug_marker) "../System/ray_funkcije.c":242:3 -1
     (nil))
(debug_insn 1113 1112 1114 72 (var_location:SF tx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":242:9 -1
     (nil))
(debug_insn 1114 1113 1115 72 (debug_marker) "../System/ray_funkcije.c":243:3 -1
     (nil))
(insn 1115 1114 2202 72 (set (reg:SF 763)
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":243:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2202 1115 2203 72 (set (reg:CCFP 101 vfpcc)
        (compare:CCFP (reg/v:SF 347 [ shade ])
            (reg:SF 763))) "../System/ray_funkcije.c":243:6 827 {*cmpsf_vfp}
     (expr_list:REG_DEAD (reg:SF 763)
        (nil)))
(insn 2203 2202 1117 72 (set (reg:CCFP 100 cc)
        (reg:CCFP 101 vfpcc)) "../System/ray_funkcije.c":243:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFP 101 vfpcc)
        (nil)))
(jump_insn 1117 2203 1118 72 (set (pc)
        (if_then_else (ne (reg:CCFP 100 cc)
                (const_int 0 [0]))
            (label_ref 1146)
            (pc))) "../System/ray_funkcije.c":243:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFP 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1146)
(note 1118 1117 1133 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(note 1133 1118 1134 73 NOTE_INSN_DELETED)
(note 1134 1133 1119 73 NOTE_INSN_DELETED)
(debug_insn 1119 1134 1120 73 (debug_marker) "../System/ray_funkcije.c":244:4 -1
     (nil))
(insn 1120 1119 1131 73 (set (reg:SF 764)
        (div:SF (reg/v:SF 397 [ rx ])
            (reg/v:SF 366 [ scale ]))) "../System/ray_funkcije.c":244:19 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg/v:SF 397 [ rx ])
        (expr_list:REG_DEAD (reg/v:SF 366 [ scale ])
            (nil))))
(insn 1131 1120 1121 73 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":245:7 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 181 [ _95 ])
        (nil)))
(insn 1121 1131 1122 73 (set (reg:SI 765)
        (fix:SI (fix:SF (reg:SF 764)))) "../System/ray_funkcije.c":244:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 764)
        (nil)))
(insn 1122 1121 1123 73 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 765))
                    (const_int 0 [0])))
            (set (reg:SI 768)
                (minus:SI (const_int 0 [0])
                    (reg:SI 765)))
        ]) "../System/ray_funkcije.c":244:28 46 {subsi3_compare0}
     (nil))
(insn 1123 1122 1124 73 (set (reg:SI 767)
        (and:SI (reg:SI 765)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":244:28 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 765)
        (nil)))
(insn 1124 1123 1125 73 (set (reg:SI 769)
        (and:SI (reg:SI 768)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":244:28 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 768)
        (nil)))
(insn 1125 1124 1126 73 (set (reg:SI 767)
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 769))
            (reg:SI 767))) "../System/ray_funkcije.c":244:28 371 {*if_neg_move}
     (expr_list:REG_DEAD (reg:SI 769)
        (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
            (nil))))
(insn 1126 1125 1127 73 (set (reg/v:SF 349 [ tx ])
        (float:SF (reg:SI 767))) "../System/ray_funkcije.c":244:7 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 767)
        (nil)))
(debug_insn 1127 1126 1128 73 (var_location:SF tx (reg/v:SF 349 [ tx ])) "../System/ray_funkcije.c":244:7 -1
     (nil))
(debug_insn 1128 1127 2011 73 (debug_marker) "../System/ray_funkcije.c":245:4 -1
     (nil))
(insn 2011 1128 1132 73 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":245:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1132 2011 2081 73 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":245:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2081 1132 1135 73 (set (reg:SI 1042)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":245:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 1135 2081 1139 73 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1042)
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":245:7 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1042)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1184)
(note 1139 1135 1140 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1140 1139 1141 74 (debug_marker) "../System/ray_funkcije.c":246:5 -1
     (nil))
(insn 1141 1140 1142 74 (set (reg:SF 772)
        (const_double:SF 3.1e+1 [0x0.f8p+5])) "../System/ray_funkcije.c":246:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.1e+1 [0x0.f8p+5])
        (nil)))
(insn 1142 1141 1143 74 (set (reg/v:SF 349 [ tx ])
        (minus:SF (reg:SF 772)
            (reg/v:SF 349 [ tx ]))) "../System/ray_funkcije.c":246:8 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 772)
        (nil)))
(debug_insn 1143 1142 2168 74 (var_location:SF tx (reg/v:SF 349 [ tx ])) "../System/ray_funkcije.c":246:8 -1
     (nil))
(jump_insn 2168 1143 2169 74 (set (pc)
        (label_ref 1184)) 284 {*arm_jump}
     (nil)
 -> 1184)
(barrier 2169 2168 1146)
(code_label 1146 2169 1147 75 66 (nil) [1 uses])
(note 1147 1146 1162 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(note 1162 1147 1163 75 NOTE_INSN_DELETED)
(note 1163 1162 1148 75 NOTE_INSN_DELETED)
(debug_insn 1148 1163 1149 75 (debug_marker) "../System/ray_funkcije.c":248:4 -1
     (nil))
(insn 1149 1148 1150 75 (set (reg:SF 773)
        (div:SF (reg/v:SF 398 [ ry ])
            (reg/v:SF 366 [ scale ]))) "../System/ray_funkcije.c":248:19 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg/v:SF 398 [ ry ])
        (expr_list:REG_DEAD (reg/v:SF 366 [ scale ])
            (nil))))
(insn 1150 1149 1151 75 (set (reg:SI 774)
        (fix:SI (fix:SF (reg:SF 773)))) "../System/ray_funkcije.c":248:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 773)
        (nil)))
(insn 1151 1150 1152 75 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (minus:SI (const_int 0 [0])
                        (reg:SI 774))
                    (const_int 0 [0])))
            (set (reg:SI 777)
                (minus:SI (const_int 0 [0])
                    (reg:SI 774)))
        ]) "../System/ray_funkcije.c":248:28 46 {subsi3_compare0}
     (nil))
(insn 1152 1151 1153 75 (set (reg:SI 776)
        (and:SI (reg:SI 774)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":248:28 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 774)
        (nil)))
(insn 1153 1152 1154 75 (set (reg:SI 778)
        (and:SI (reg:SI 777)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":248:28 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 777)
        (nil)))
(insn 1154 1153 1155 75 (set (reg:SI 776)
        (if_then_else:SI (ge:SI (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (neg:SI (reg:SI 778))
            (reg:SI 776))) "../System/ray_funkcije.c":248:28 371 {*if_neg_move}
     (expr_list:REG_DEAD (reg:SI 778)
        (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
            (nil))))
(insn 1155 1154 1156 75 (set (reg/v:SF 349 [ tx ])
        (float:SF (reg:SI 776))) "../System/ray_funkcije.c":248:7 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 776)
        (nil)))
(debug_insn 1156 1155 1157 75 (var_location:SF tx (reg/v:SF 349 [ tx ])) "../System/ray_funkcije.c":248:7 -1
     (nil))
(debug_insn 1157 1156 1159 75 (debug_marker) "../System/ray_funkcije.c":249:4 -1
     (nil))
(insn 1159 1157 1160 75 (set (reg:DF 2 r2)
        (const_double:DF 1.57079499999999994130917002621572464704513549805e+0 [0x0.c90fcf80dc337p+1])) "../System/ray_funkcije.c":249:7 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1160 1159 1161 75 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":249:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1161 1160 2082 75 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":249:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2082 1161 1164 75 (set (reg:SI 1043)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":249:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 1164 2082 1168 75 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1043)
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":249:7 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1043)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1184)
(note 1168 1164 1173 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(note 1173 1168 1174 76 NOTE_INSN_DELETED)
(note 1174 1173 1171 76 NOTE_INSN_DELETED)
(insn 1171 1174 1170 76 (set (reg:DF 0 r0)
        (reg:DF 181 [ _95 ])) "../System/ray_funkcije.c":249:26 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 181 [ _95 ])
        (nil)))
(insn 1170 1171 1172 76 (set (reg:DF 2 r2)
        (const_double:DF 4.71238499999999937983830022858455777168273925781e+0 [0x0.96cbdba0a5269p+3])) "../System/ray_funkcije.c":249:26 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1172 1170 2083 76 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":249:26 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2083 1172 1175 76 (set (reg:SI 1044)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":249:26 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 1175 2083 1179 76 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1044)
                        (const_int 0 [0]))
                    (label_ref:SI 1184)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":249:26 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1044)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1184)
(note 1179 1175 1180 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1180 1179 1181 77 (debug_marker) "../System/ray_funkcije.c":250:5 -1
     (nil))
(insn 1181 1180 1182 77 (set (reg:SF 783)
        (const_double:SF 3.1e+1 [0x0.f8p+5])) "../System/ray_funkcije.c":250:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.1e+1 [0x0.f8p+5])
        (nil)))
(insn 1182 1181 1183 77 (set (reg/v:SF 349 [ tx ])
        (minus:SF (reg:SF 783)
            (reg/v:SF 349 [ tx ]))) "../System/ray_funkcije.c":250:8 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 783)
        (nil)))
(debug_insn 1183 1182 1184 77 (var_location:SF tx (reg/v:SF 349 [ tx ])) "../System/ray_funkcije.c":250:8 -1
     (nil))
(code_label 1184 1183 1185 78 67 (nil) [4 uses])
(note 1185 1184 1195 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(note 1195 1185 1186 78 NOTE_INSN_DELETED)
(debug_insn 1186 1195 1187 78 (var_location:SF tx (reg/v:SF 349 [ tx ])) -1
     (nil))
(debug_insn 1187 1186 1188 78 (debug_marker) "../System/ray_funkcije.c":255:3 -1
     (nil))
(debug_insn 1188 1187 1189 78 (var_location:SI wallx (fix:SI (mult:SF (plus:SF (reg/v:SF 339 [ z ])
                (const_double:SF 3.0e+1 [0x0.fp+5]))
            (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])))) "../System/ray_funkcije.c":255:7 -1
     (nil))
(debug_insn 1189 1188 1190 78 (debug_marker) "../System/ray_funkcije.c":256:3 -1
     (nil))
(debug_insn 1190 1189 1191 78 (var_location:SI D#15 (fix:SI (mult:SF (plus:SF (reg/v:SF 339 [ z ])
                (const_double:SF 3.0e+1 [0x0.fp+5]))
            (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])))) "../System/ray_funkcije.c":255:7 -1
     (nil))
(insn 1191 1190 1192 78 (set (reg:SF 785)
        (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":255:22 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 3.0e+1 [0x0.fp+5])
        (nil)))
(insn 1192 1191 1193 78 (set (reg:SF 784)
        (plus:SF (reg/v:SF 339 [ z ])
            (reg:SF 785))) "../System/ray_funkcije.c":255:22 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 785)
        (expr_list:REG_EQUAL (plus:SF (reg/v:SF 339 [ z ])
                (const_double:SF 3.0e+1 [0x0.fp+5]))
            (nil))))
(insn 1193 1192 1194 78 (set (reg:SF 787)
        (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])) "../System/ray_funkcije.c":255:47 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1])
        (nil)))
(insn 1194 1193 1196 78 (set (reg:SF 786)
        (mult:SF (reg:SF 784)
            (reg:SF 787))) "../System/ray_funkcije.c":255:47 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 787)
        (expr_list:REG_DEAD (reg:SF 784)
            (expr_list:REG_EQUAL (mult:SF (reg:SF 784)
                    (const_double:SF 1.6666667461395263671875e+0 [0x0.d55556p+1]))
                (nil)))))
(insn 1196 1194 1197 78 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 786)))) "../System/ray_funkcije.c":256:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 786)
        (nil)))
(call_insn/u 1197 1196 1199 78 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1199 1197 1201 78 (set (reg:DF 2 r2)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":256:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1201 1199 1205 78 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1205 1201 2084 78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":256:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2084 1205 1206 78 (set (reg:SI 1045)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":256:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1206 2084 1208 78 (set (reg/v:SI 368 [ wallx ])
        (reg:SI 1045)) "../System/ray_funkcije.c":256:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1045)
        (nil)))
(debug_insn 1208 1206 1209 78 (var_location:SI wallx (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":256:9 -1
     (nil))
(debug_insn 1209 1208 1210 78 (debug_marker) "../System/ray_funkcije.c":257:3 -1
     (nil))
(debug_insn 1210 1209 1211 78 (var_location:SI wallx (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":257:9 -1
     (nil))
(debug_insn 1211 1210 1212 78 (debug_marker) "../System/ray_funkcije.c":259:3 -1
     (nil))
(debug_insn 1212 1211 1213 78 (debug_marker) "../System/ray_funkcije.c":259:8 -1
     (nil))
(debug_insn 1213 1212 1214 78 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 1214 1213 1215 78 (var_location:SF ty (debug_expr:SF D#6)) -1
     (nil))
(debug_insn 1215 1214 2200 78 (debug_marker) "../System/ray_funkcije.c":259:19 -1
     (nil))
(insn 2200 1215 2201 78 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 348 [ lineH ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":259:3 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2201 2200 1218 78 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":259:3 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1218 2201 1372 78 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1244)
            (pc))) "../System/ray_funkcije.c":259:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1244)
(code_label 1372 1218 1219 79 78 (nil) [1 uses])
(note 1219 1372 1220 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1220 1219 1221 79 (debug_marker) "../System/ray_funkcije.c":297:3 -1
     (nil))
(debug_insn 1221 1220 1222 79 (var_location:SI stropx (debug_expr:SI D#15)) "../System/ray_funkcije.c":297:7 -1
     (nil))
(debug_insn 1222 1221 1223 79 (debug_marker) "../System/ray_funkcije.c":298:3 -1
     (nil))
(debug_insn 1223 1222 1224 79 (var_location:SI stropx (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":298:10 -1
     (nil))
(debug_insn 1224 1223 1225 79 (debug_marker) "../System/ray_funkcije.c":299:3 -1
     (nil))
(debug_insn 1225 1224 1226 79 (var_location:SI stropx (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":299:10 -1
     (nil))
(debug_insn 1226 1225 1227 79 (debug_marker) "../System/ray_funkcije.c":300:3 -1
     (nil))
(debug_insn 1227 1226 1228 79 (var_location:SI tlax (debug_expr:SI D#15)) "../System/ray_funkcije.c":300:7 -1
     (nil))
(debug_insn 1228 1227 1229 79 (debug_marker) "../System/ray_funkcije.c":301:3 -1
     (nil))
(debug_insn 1229 1228 1230 79 (var_location:SI tlax (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":301:8 -1
     (nil))
(debug_insn 1230 1229 1231 79 (debug_marker) "../System/ray_funkcije.c":302:3 -1
     (nil))
(debug_insn 1231 1230 1232 79 (var_location:SI tlax (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":302:8 -1
     (nil))
(debug_insn 1232 1231 1234 79 (debug_marker) "../System/ray_funkcije.c":303:3 -1
     (nil))
(insn 1234 1232 1235 79 (set (reg:SF 794 [ angle ])
        (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":303:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 967) [1 angle+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
            (nil))))
(insn 1235 1234 1236 79 (set (reg/v:SF 353 [ floorAngle ])
        (minus:SF (reg:SF 794 [ angle ])
            (reg/v:SF 346 [ newAngle ]))) "../System/ray_funkcije.c":303:9 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 794 [ angle ])
        (nil)))
(debug_insn 1236 1235 1237 79 (var_location:SF floorAngle (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":303:9 -1
     (nil))
(debug_insn 1237 1236 2198 79 (debug_marker) "../System/ray_funkcije.c":304:3 -1
     (nil))
(insn 2198 1237 2199 79 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 353 [ floorAngle ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":304:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2199 2198 1240 79 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":304:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1240 2199 2171 79 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 2170)
            (pc))) "../System/ray_funkcije.c":304:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 2170)
(note 2171 1240 2172 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2172 2171 2173 80 (set (pc)
        (label_ref 1376)) 284 {*arm_jump}
     (nil)
 -> 1376)
(barrier 2173 2172 1244)
(code_label 1244 2173 1245 81 71 (nil) [1 uses])
(note 1245 1244 1246 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1246 1245 31 81 (set (reg:SF 216 [ _151 ])
        (mult:SF (reg/v:SF 347 [ shade ])
            (reg/v:SF 364 [ vis ]))) 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg/v:SF 364 [ vis ])
        (expr_list:REG_DEAD (reg/v:SF 347 [ shade ])
            (nil))))
(insn 31 1246 1247 81 (set (reg:SF 279 [ _226 ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":259:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1247 31 1276 81 (set (reg:SI 429 [ _849 ])
        (fix:SI (fix:SF (reg/v:SF 349 [ tx ])))) "../System/ray_funkcije.c":261:33 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SF 349 [ tx ])
        (nil)))
(insn 1276 1247 1304 81 (set (reg/f:SI 982)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) "../System/ray_funkcije.c":266:22 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1304 1276 30 81 (set (reg/f:SI 983)
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) "../System/ray_funkcije.c":271:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)
        (nil)))
(insn 30 1304 1340 81 (set (reg/v:SI 394 [ j ])
        (const_int 0 [0])) "../System/ray_funkcije.c":259:12 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1340 30 2249 81 (set (reg:DF 984)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])
        (nil)))
(insn 2249 1340 2250 81 (set (reg/v:SI 1087 [orig:173 hmt ] [173])
        (reg/v:SI 173 [ hmt ])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 173 [ hmt ])
        (nil)))
(insn 2250 2249 2251 81 (set (reg/v:SI 1088 [orig:368 wallx ] [368])
        (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 368 [ wallx ])
        (nil)))
(insn 2251 2250 2252 81 (set (reg/v:SI 1089 [orig:389 y ] [389])
        (reg/v:SI 389 [ y ])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 389 [ y ])
        (nil)))
(insn 2252 2251 2253 81 (set (reg/v:SI 1090 [orig:394 j ] [394])
        (reg/v:SI 394 [ j ])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 394 [ j ])
        (nil)))
(insn 2253 2252 1369 81 (set (reg:SI 1091 [orig:429 _849 ] [429])
        (reg:SI 429 [ _849 ])) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 429 [ _849 ])
        (nil)))
(code_label 1369 2253 1248 82 77 (nil) [1 uses])
(note 1248 1369 1253 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(note 1253 1248 1256 82 NOTE_INSN_DELETED)
(note 1256 1253 1249 82 NOTE_INSN_DELETED)
(debug_insn 1249 1256 1250 82 (var_location:SI j (reg/v:SI 1090 [orig:394 j ] [394])) -1
     (nil))
(debug_insn 1250 1249 1251 82 (var_location:SF ty (reg/v:SF 393 [ ty ])) -1
     (nil))
(debug_insn 1251 1250 1252 82 (debug_marker) "../System/ray_funkcije.c":261:4 -1
     (nil))
(insn 1252 1251 1254 82 (set (reg:SI 796)
        (fix:SI (fix:SF (reg/v:SF 393 [ ty ])))) "../System/ray_funkcije.c":261:17 805 {*truncsisf2_vfp}
     (nil))
(insn 1254 1252 1257 82 (set (reg:SI 798)
        (plus:SI (ashift:SI (reg:SI 796)
                (const_int 5 [0x5]))
            (reg:SI 1091 [orig:429 _849 ] [429]))) "../System/ray_funkcije.c":261:31 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 796)
        (nil)))
(insn 1257 1254 1259 82 (set (reg:SI 801)
        (plus:SI (ashift:SI (reg:SI 798)
                (const_int 1 [0x1]))
            (reg:SI 798))) "../System/ray_funkcije.c":261:8 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 798)
        (nil)))
(debug_insn 1259 1257 1260 82 (var_location:SI pixel (reg:SI 801)) "../System/ray_funkcije.c":261:8 -1
     (nil))
(debug_insn 1260 1259 1261 82 (debug_marker) "../System/ray_funkcije.c":263:4 -1
     (nil))
(debug_insn 1261 1260 1262 82 (var_location:SI red (const_int 0 [0])) "../System/ray_funkcije.c":263:8 -1
     (nil))
(debug_insn 1262 1261 1263 82 (var_location:SI blue (const_int 0 [0])) "../System/ray_funkcije.c":263:17 -1
     (nil))
(debug_insn 1263 1262 1264 82 (var_location:SI green (const_int 0 [0])) "../System/ray_funkcije.c":263:27 -1
     (nil))
(debug_insn 1264 1263 1265 82 (debug_marker) "../System/ray_funkcije.c":264:4 -1
     (nil))
(insn 1265 1264 1266 82 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 1087 [orig:173 hmt ] [173])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":264:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1266 1265 1267 82 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) "../System/ray_funkcije.c":264:4 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 357913950 (nil)))
 -> 1273)
(note 1267 1266 1303 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1303 1267 1312 83 (debug_marker) "../System/ray_funkcije.c":271:5 -1
     (nil))
(insn 1312 1303 1268 83 (set (reg/f:SI 821)
        (plus:SI (reg/f:SI 983)
            (reg:SI 801))) "../System/ray_funkcije.c":272:19 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 801)
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))
        (nil)))
(insn 1268 1312 32 83 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 1087 [orig:173 hmt ] [173])
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":264:4 268 {*arm_cmpsi_insn}
     (nil))
(insn 32 1268 1269 83 (set (reg/v:SI 352 [ green ])
        (const_int 0 [0])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 1269 32 1272 83 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1301)
            (pc))) "../System/ray_funkcije.c":264:4 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 536870918 (nil)))
 -> 1301)
(note 1272 1269 33 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 33 1272 34 84 (set (reg/v:SI 351 [ blue ])
        (reg/v:SI 352 [ green ])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 34 33 2174 84 (set (reg/v:SI 350 [ red ])
        (reg/v:SI 352 [ green ])) "../System/ray_funkcije.c":264:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 2174 34 2175 84 (set (pc)
        (label_ref 1327)) 284 {*arm_jump}
     (nil)
 -> 1327)
(barrier 2175 2174 1273)
(code_label 1273 2175 1274 85 74 (nil) [1 uses])
(note 1274 1273 1275 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1275 1274 1284 85 (debug_marker) "../System/ray_funkcije.c":266:5 -1
     (nil))
(insn 1284 1275 1277 85 (set (reg/f:SI 807)
        (plus:SI (reg/f:SI 982)
            (reg:SI 801))) "../System/ray_funkcije.c":267:24 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 801)
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
        (nil)))
(insn 1277 1284 1278 85 (set (reg:SI 803 [ t_brickWall[pixel_426] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 982)
                    (reg:SI 801)) [0 t_brickWall[pixel_426]+0 S1 A8]))) "../System/ray_funkcije.c":266:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 801)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 801)
                        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 t_brickWall[pixel_426]+0 S1 A8]))
            (nil))))
(insn 1278 1277 1285 85 (set (reg:SF 804)
        (float:SF (reg:SI 803 [ t_brickWall[pixel_426] ]))) "../System/ray_funkcije.c":266:34 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 803 [ t_brickWall[pixel_426] ])
        (nil)))
(insn 1285 1278 1293 85 (set (reg:SI 808 [ t_brickWall[_192] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 807)
                    (const_int 1 [0x1])) [0 t_brickWall[_192]+0 S1 A8]))) "../System/ray_funkcije.c":267:24 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1293 1285 1286 85 (set (reg:SI 813 [ t_brickWall[_198] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 807)
                    (const_int 2 [0x2])) [0 t_brickWall[_198]+0 S1 A8]))) "../System/ray_funkcije.c":268:23 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 807)
        (nil)))
(insn 1286 1293 1294 85 (set (reg:SF 809)
        (float:SF (reg:SI 808 [ t_brickWall[_192] ]))) "../System/ray_funkcije.c":267:36 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 808 [ t_brickWall[_192] ])
        (nil)))
(insn 1294 1286 1279 85 (set (reg:SF 814)
        (float:SF (reg:SI 813 [ t_brickWall[_198] ]))) "../System/ray_funkcije.c":268:35 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 813 [ t_brickWall[_198] ])
        (nil)))
(insn 1279 1294 1287 85 (set (reg:SF 805)
        (mult:SF (reg:SF 804)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":266:42 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 804)
        (nil)))
(insn 1287 1279 1295 85 (set (reg:SF 810)
        (mult:SF (reg:SF 809)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":267:44 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 809)
        (nil)))
(insn 1295 1287 1280 85 (set (reg:SF 815)
        (mult:SF (reg:SF 814)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":268:43 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 814)
        (nil)))
(insn 1280 1295 1281 85 (set (reg/v:SI 350 [ red ])
        (fix:SI (fix:SF (reg:SF 805)))) "../System/ray_funkcije.c":266:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 805)
        (nil)))
(debug_insn 1281 1280 1282 85 (var_location:SI red (reg/v:SI 350 [ red ])) "../System/ray_funkcije.c":266:9 -1
     (nil))
(debug_insn 1282 1281 1288 85 (debug_marker) "../System/ray_funkcije.c":267:5 -1
     (nil))
(insn 1288 1282 1289 85 (set (reg/v:SI 352 [ green ])
        (fix:SI (fix:SF (reg:SF 810)))) "../System/ray_funkcije.c":267:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 810)
        (nil)))
(debug_insn 1289 1288 1290 85 (var_location:SI green (reg/v:SI 352 [ green ])) "../System/ray_funkcije.c":267:11 -1
     (nil))
(debug_insn 1290 1289 1296 85 (debug_marker) "../System/ray_funkcije.c":268:5 -1
     (nil))
(insn 1296 1290 1297 85 (set (reg/v:SI 351 [ blue ])
        (fix:SI (fix:SF (reg:SF 815)))) "../System/ray_funkcije.c":268:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 815)
        (nil)))
(debug_insn 1297 1296 1298 85 (var_location:SI blue (reg/v:SI 351 [ blue ])) "../System/ray_funkcije.c":268:10 -1
     (nil))
(debug_insn 1298 1297 2176 85 (debug_marker) "../System/ray_funkcije.c":269:5 -1
     (nil))
(jump_insn 2176 1298 2177 85 (set (pc)
        (label_ref 1327)) "../System/ray_funkcije.c":269:5 284 {*arm_jump}
     (nil)
 -> 1327)
(barrier 2177 2176 1301)
(code_label 1301 2177 1302 86 75 (nil) [1 uses])
(note 1302 1301 1305 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1305 1302 1313 86 (set (reg:SI 817 [ t_wall[pixel_426] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 983)
                    (reg:SI 801)) [0 t_wall[pixel_426]+0 S1 A8]))) "../System/ray_funkcije.c":271:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 801)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 801)
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_426]+0 S1 A8]))
            (nil))))
(insn 1313 1305 1321 86 (set (reg:SI 822 [ t_wall[_209] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 821)
                    (const_int 1 [0x1])) [0 t_wall[_209]+0 S1 A8]))) "../System/ray_funkcije.c":272:19 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1321 1313 1306 86 (set (reg:SI 827 [ t_wall[_215] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 821)
                    (const_int 2 [0x2])) [0 t_wall[_215]+0 S1 A8]))) "../System/ray_funkcije.c":273:18 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 821)
        (nil)))
(insn 1306 1321 1314 86 (set (reg:SF 818)
        (float:SF (reg:SI 817 [ t_wall[pixel_426] ]))) "../System/ray_funkcije.c":271:29 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 817 [ t_wall[pixel_426] ])
        (nil)))
(insn 1314 1306 1322 86 (set (reg:SF 823)
        (float:SF (reg:SI 822 [ t_wall[_209] ]))) "../System/ray_funkcije.c":272:31 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 822 [ t_wall[_209] ])
        (nil)))
(insn 1322 1314 1307 86 (set (reg:SF 828)
        (float:SF (reg:SI 827 [ t_wall[_215] ]))) "../System/ray_funkcije.c":273:30 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 827 [ t_wall[_215] ])
        (nil)))
(insn 1307 1322 1315 86 (set (reg:SF 819)
        (mult:SF (reg:SF 818)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":271:37 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 818)
        (nil)))
(insn 1315 1307 1323 86 (set (reg:SF 824)
        (mult:SF (reg:SF 823)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":272:39 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 823)
        (nil)))
(insn 1323 1315 1308 86 (set (reg:SF 829)
        (mult:SF (reg:SF 828)
            (reg:SF 216 [ _151 ]))) "../System/ray_funkcije.c":273:38 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 828)
        (nil)))
(insn 1308 1323 1309 86 (set (reg/v:SI 350 [ red ])
        (fix:SI (fix:SF (reg:SF 819)))) "../System/ray_funkcije.c":271:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 819)
        (nil)))
(debug_insn 1309 1308 1310 86 (var_location:SI red (reg/v:SI 350 [ red ])) "../System/ray_funkcije.c":271:9 -1
     (nil))
(debug_insn 1310 1309 1316 86 (debug_marker) "../System/ray_funkcije.c":272:5 -1
     (nil))
(insn 1316 1310 1317 86 (set (reg/v:SI 352 [ green ])
        (fix:SI (fix:SF (reg:SF 824)))) "../System/ray_funkcije.c":272:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 824)
        (nil)))
(debug_insn 1317 1316 1318 86 (var_location:SI green (reg/v:SI 352 [ green ])) "../System/ray_funkcije.c":272:11 -1
     (nil))
(debug_insn 1318 1317 1324 86 (debug_marker) "../System/ray_funkcije.c":273:5 -1
     (nil))
(insn 1324 1318 1325 86 (set (reg/v:SI 351 [ blue ])
        (fix:SI (fix:SF (reg:SF 829)))) "../System/ray_funkcije.c":273:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 829)
        (nil)))
(debug_insn 1325 1324 1326 86 (var_location:SI blue (reg/v:SI 351 [ blue ])) "../System/ray_funkcije.c":273:10 -1
     (nil))
(debug_insn 1326 1325 1327 86 (debug_marker) "../System/ray_funkcije.c":274:5 -1
     (nil))
(code_label 1327 1326 1328 87 76 (nil) [2 uses])
(note 1328 1327 1336 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(note 1336 1328 1351 87 NOTE_INSN_DELETED)
(note 1351 1336 1355 87 NOTE_INSN_DELETED)
(note 1355 1351 1329 87 NOTE_INSN_DELETED)
(debug_insn 1329 1355 1330 87 (var_location:SI green (reg/v:SI 352 [ green ])) -1
     (nil))
(debug_insn 1330 1329 1331 87 (var_location:SI blue (reg/v:SI 351 [ blue ])) -1
     (nil))
(debug_insn 1331 1330 1332 87 (var_location:SI red (reg/v:SI 350 [ red ])) -1
     (nil))
(debug_insn 1332 1331 1333 87 (debug_marker) "../System/ray_funkcije.c":284:4 -1
     (nil))
(debug_insn 1333 1332 1334 87 (var_location:SI wally (fix:SI (plus:SF (reg:SF 279 [ _226 ])
            (reg:SF 423 [ _835 ])))) "../System/ray_funkcije.c":284:8 -1
     (nil))
(debug_insn 1334 1333 1335 87 (debug_marker) "../System/ray_funkcije.c":285:4 -1
     (nil))
(insn 1335 1334 1364 87 (set (reg:SF 830)
        (plus:SF (reg:SF 279 [ _226 ])
            (reg:SF 423 [ _835 ]))) "../System/ray_funkcije.c":284:24 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 279 [ _226 ])
        (nil)))
(insn 1364 1335 1337 87 (set (reg/v:SI 1090 [orig:394 j ] [394])
        (plus:SI (reg/v:SI 1090 [orig:394 j ] [394])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":259:31 7 {*arm_addsi3}
     (nil))
(insn 1337 1364 1338 87 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 830)))) "../System/ray_funkcije.c":285:10 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 830)
        (nil)))
(call_insn/u 1338 1337 1999 87 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1999 1338 1342 87 (set (reg:DF 2 r2)
        (reg:DF 984)) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1342 1999 2085 87 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2085 1342 1347 87 (set (reg:DF 1046)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1347 2085 1343 87 (set (reg:SI 2 r2)
        (reg/v:SI 351 [ blue ])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 351 [ blue ])
        (nil)))
(insn 1343 1347 1345 87 (set (reg:DF 833)
        (reg:DF 1046)) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1046)
        (nil)))
(debug_insn 1345 1343 1346 87 (var_location:SI wally (fix:SI (reg:DF 833))) "../System/ray_funkcije.c":285:10 -1
     (nil))
(debug_insn 1346 1345 1348 87 (debug_marker) "../System/ray_funkcije.c":287:4 -1
     (nil))
(insn 1348 1346 1349 87 (set (reg:SI 1 r1)
        (reg/v:SI 352 [ green ])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 352 [ green ])
        (nil)))
(insn 1349 1348 1350 87 (set (reg:SI 0 r0)
        (reg/v:SI 350 [ red ])) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 350 [ red ])
        (nil)))
(call_insn 1350 1349 2086 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":288:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 2086 1350 1352 87 (set (reg:SI 1047)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":288:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1352 2086 1353 87 (set (reg:SI 834 [ _224 ])
        (zero_extend:SI (subreg:HI (reg:SI 1047) 0))) "../System/ray_funkcije.c":287:4 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 1047)
        (nil)))
(insn 1353 1352 1354 87 (set (reg:DF 0 r0)
        (reg:DF 833)) "../System/ray_funkcije.c":285:10 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 833)
        (nil)))
(call_insn/u 1354 1353 2087 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":285:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2087 1354 1356 87 (set (reg:SI 1048)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":285:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1356 2087 1357 87 (set (reg:SI 2 r2)
        (reg:SI 834 [ _224 ])) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 834 [ _224 ])
        (nil)))
(insn 1357 1356 1358 87 (set (reg:SI 1 r1)
        (reg:SI 1048)) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1048)
        (nil)))
(insn 1358 1357 1359 87 (set (reg:SI 0 r0)
        (reg/v:SI 1088 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":287:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1359 1358 1360 87 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":287:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1360 1359 1368 87 (debug_marker) "../System/ray_funkcije.c":289:4 -1
     (nil))
(insn 1368 1360 1361 87 (set (reg:SF 279 [ _226 ])
        (float:SF (reg/v:SI 1090 [orig:394 j ] [394]))) "../System/ray_funkcije.c":259:21 809 {*floatsisf2_vfp}
     (nil))
(insn 1361 1368 1362 87 (set (reg/v:SF 393 [ ty ])
        (plus:SF (reg/v:SF 393 [ ty ])
            (reg/v:SF 365 [ ty_step ]))) "../System/ray_funkcije.c":289:7 758 {*addsf3_vfp}
     (nil))
(debug_insn 1362 1361 1363 87 (var_location:SF ty (reg/v:SF 393 [ ty ])) "../System/ray_funkcije.c":289:7 -1
     (nil))
(debug_insn 1363 1362 1365 87 (debug_marker) "../System/ray_funkcije.c":259:30 -1
     (nil))
(debug_insn 1365 1363 1366 87 (var_location:SI j (reg/v:SI 1090 [orig:394 j ] [394])) -1
     (nil))
(debug_insn 1366 1365 1367 87 (var_location:SF ty (reg/v:SF 393 [ ty ])) -1
     (nil))
(debug_insn 1367 1366 2196 87 (debug_marker) "../System/ray_funkcije.c":259:19 -1
     (nil))
(insn 2196 1367 2197 87 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 279 [ _226 ])
            (reg/v:SF 348 [ lineH ]))) "../System/ray_funkcije.c":259:3 828 {*cmpsf_trap_vfp}
     (nil))
(insn 2197 2196 1371 87 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":259:3 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1371 2197 2178 87 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1369)
            (pc))) "../System/ray_funkcije.c":259:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1369)
(note 2178 1371 2254 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 2254 2178 2255 88 (set (reg/v:SI 368 [ wallx ])
        (reg/v:SI 1088 [orig:368 wallx ] [368])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1088 [orig:368 wallx ] [368])
        (nil)))
(insn 2255 2254 2179 88 (set (reg/v:SI 389 [ y ])
        (reg/v:SI 1089 [orig:389 y ] [389])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1089 [orig:389 y ] [389])
        (nil)))
(jump_insn 2179 2255 2180 88 (set (pc)
        (label_ref 1372)) 284 {*arm_jump}
     (nil)
 -> 1372)
(barrier 2180 2179 1376)
(code_label 1376 2180 1377 89 72 (nil) [1 uses])
(note 1377 1376 1378 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1378 1377 1379 89 (debug_marker) "../System/ray_funkcije.c":305:4 -1
     (nil))
(insn 1379 1378 1380 89 (set (reg:SF 0 r0)
        (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":305:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 353 [ floorAngle ])
        (nil)))
(call_insn/u 1380 1379 2014 89 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2014 1380 1384 89 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":305:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1384 2014 1388 89 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1388 1384 2088 89 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":305:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2088 1388 1389 89 (set (reg:SF 1049)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":305:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1389 2088 1391 89 (set (reg/v:SF 353 [ floorAngle ])
        (reg:SF 1049)) "../System/ray_funkcije.c":305:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1049)
        (nil)))
(debug_insn 1391 1389 2181 89 (var_location:SF floorAngle (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":305:15 -1
     (nil))
(jump_insn 2181 1391 2182 89 (set (pc)
        (label_ref 1421)) 284 {*arm_jump}
     (nil)
 -> 1421)
(barrier 2182 2181 2170)
(code_label 2170 2182 1395 90 123 (nil) [1 uses])
(note 1395 2170 1404 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(note 1404 1395 1405 90 NOTE_INSN_DELETED)
(note 1405 1404 1396 90 NOTE_INSN_DELETED)
(debug_insn 1396 1405 1397 90 (debug_marker) "../System/ray_funkcije.c":306:8 -1
     (nil))
(insn 1397 1396 1398 90 (set (reg:SF 0 r0)
        (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":306:23 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1398 1397 2089 90 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":306:23 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2089 1398 1399 90 (set (reg:DF 1050)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":306:23 739 {*thumb2_movdf_vfp}
     (nil))
(insn 1399 2089 2012 90 (set (reg:DF 283 [ _230 ])
        (reg:DF 1050)) "../System/ray_funkcije.c":306:23 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 1050)
        (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 353 [ floorAngle ]))
            (nil))))
(insn 2012 1399 1403 90 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":306:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1403 2012 2090 90 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":306:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 2090 1403 1406 90 (set (reg:SI 1051)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":306:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 1406 2090 1410 90 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 1051)
                        (const_int 0 [0]))
                    (label_ref:SI 1421)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":306:11 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 1051)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1421)
(note 1410 1406 1411 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1411 1410 1413 91 (debug_marker) "../System/ray_funkcije.c":307:4 -1
     (nil))
(insn 1413 1411 2013 91 (set (reg:DF 0 r0)
        (reg:DF 283 [ _230 ])) "../System/ray_funkcije.c":307:15 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 283 [ _230 ])
        (nil)))
(insn 2013 1413 1414 91 (set (reg:DF 2 r2)
        (reg:DF 990)) "../System/ray_funkcije.c":307:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1414 2013 1417 91 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":307:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1417 1414 2091 91 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":307:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2091 1417 1418 91 (set (reg:SF 1052)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":307:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1418 2091 1420 91 (set (reg/v:SF 353 [ floorAngle ])
        (reg:SF 1052)) "../System/ray_funkcije.c":307:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1052)
        (nil)))
(debug_insn 1420 1418 1421 91 (var_location:SF floorAngle (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":307:15 -1
     (nil))
(code_label 1421 1420 1422 92 79 (nil) [2 uses])
(note 1422 1421 1423 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1423 1422 1424 92 (var_location:SF floorAngle (reg/v:SF 353 [ floorAngle ])) -1
     (nil))
(debug_insn 1424 1423 1425 92 (debug_marker) "../System/ray_funkcije.c":309:3 -1
     (nil))
(debug_insn 1425 1424 1426 92 (debug_marker) "../System/ray_funkcije.c":310:3 -1
     (nil))
(debug_insn 1426 1425 1427 92 (debug_marker) "../System/ray_funkcije.c":318:3 -1
     (nil))
(insn 1427 1426 1428 92 (set (reg:SF 16 s0)
        (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1428 1427 2092 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":318:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2092 1428 1432 92 (set (reg:SF 1053)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1432 2092 1429 92 (set (reg:SF 16 s0)
        (reg/v:SF 353 [ floorAngle ])) "../System/ray_funkcije.c":319:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 353 [ floorAngle ])
        (nil)))
(insn 1429 1432 1430 92 (set (reg/v:SF 369 [ cosNew ])
        (reg:SF 1053)) "../System/ray_funkcije.c":318:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1053)
        (nil)))
(debug_insn 1430 1429 1431 92 (var_location:SF cosNew (reg/v:SF 369 [ cosNew ])) "../System/ray_funkcije.c":318:12 -1
     (nil))
(debug_insn 1431 1430 1433 92 (debug_marker) "../System/ray_funkcije.c":319:3 -1
     (nil))
(call_insn/u 1433 1431 2093 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":319:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2093 1433 1434 92 (set (reg:SF 1054)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":319:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1434 2093 1435 92 (set (reg/v:SF 370 [ cosFloor ])
        (reg:SF 1054)) "../System/ray_funkcije.c":319:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1054)
        (nil)))
(debug_insn 1435 1434 1436 92 (var_location:SF cosFloor (reg/v:SF 370 [ cosFloor ])) "../System/ray_funkcije.c":319:14 -1
     (nil))
(debug_insn 1436 1435 1437 92 (debug_marker) "../System/ray_funkcije.c":320:3 -1
     (nil))
(insn 1437 1436 1438 92 (set (reg:SF 16 s0)
        (reg/v:SF 346 [ newAngle ])) "../System/ray_funkcije.c":320:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 346 [ newAngle ])
        (nil)))
(call_insn/u 1438 1437 2094 92 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":320:12 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2094 1438 1442 92 (set (reg:SF 1055)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":320:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1442 2094 1439 92 (set (reg:SF 0 r0)
        (reg/v:SF 369 [ cosNew ])) "../System/ray_funkcije.c":322:18 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 369 [ cosNew ])
        (nil)))
(insn 1439 1442 1440 92 (set (reg/v:SF 371 [ sinNew ])
        (reg:SF 1055)) "../System/ray_funkcije.c":320:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1055)
        (nil)))
(debug_insn 1440 1439 1441 92 (var_location:SF sinNew (reg/v:SF 371 [ sinNew ])) "../System/ray_funkcije.c":320:12 -1
     (nil))
(debug_insn 1441 1440 1443 92 (debug_marker) "../System/ray_funkcije.c":322:3 -1
     (nil))
(call_insn/u 1443 1441 2015 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2015 1443 1447 92 (set (reg:DF 2 r2)
        (reg:DF 992)) "../System/ray_funkcije.c":322:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1447 2015 1450 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:33 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1450 1447 2095 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":322:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2095 1450 1451 92 (set (reg:SF 1056)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":322:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1451 2095 1453 92 (set (reg/v:SF 372 [ tmptx2 ])
        (reg:SF 1056)) "../System/ray_funkcije.c":322:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1056)
        (nil)))
(debug_insn 1453 1451 1454 92 (var_location:SF tmptx2 (reg/v:SF 372 [ tmptx2 ])) "../System/ray_funkcije.c":322:9 -1
     (nil))
(debug_insn 1454 1453 1455 92 (debug_marker) "../System/ray_funkcije.c":323:3 -1
     (nil))
(insn 1455 1454 1456 92 (set (reg:SF 0 r0)
        (reg/v:SF 371 [ sinNew ])) "../System/ray_funkcije.c":323:18 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 371 [ sinNew ])
        (nil)))
(call_insn/u 1456 1455 2016 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2016 1456 1460 92 (set (reg:DF 2 r2)
        (reg:DF 992)) "../System/ray_funkcije.c":323:33 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1460 2016 1463 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:33 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1463 1460 2096 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":323:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2096 1463 1464 92 (set (reg:SF 1057)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":323:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1464 2096 1466 92 (set (reg/v:SF 373 [ tmpty2 ])
        (reg:SF 1057)) "../System/ray_funkcije.c":323:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1057)
        (nil)))
(debug_insn 1466 1464 1467 92 (var_location:SF tmpty2 (reg/v:SF 373 [ tmpty2 ])) "../System/ray_funkcije.c":323:9 -1
     (nil))
(debug_insn 1467 1466 1469 92 (debug_marker) "../System/ray_funkcije.c":324:3 -1
     (nil))
(insn 1469 1467 1470 92 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 971) [1 px+0 S4 A32])) "../System/ray_funkcije.c":324:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(call_insn/u 1470 1469 2017 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2017 1470 1474 92 (set (reg:DF 2 r2)
        (reg:DF 993)) "../System/ray_funkcije.c":324:21 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1474 2017 1477 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:21 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1477 1474 2097 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":324:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2097 1477 1478 92 (set (reg:SF 1058)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":324:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1478 2097 1480 92 (set (reg/v:SF 374 [ tmptx1 ])
        (reg:SF 1058)) "../System/ray_funkcije.c":324:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1058)
        (nil)))
(debug_insn 1480 1478 1481 92 (var_location:SF tmptx1 (reg/v:SF 374 [ tmptx1 ])) "../System/ray_funkcije.c":324:9 -1
     (nil))
(debug_insn 1481 1480 1483 92 (debug_marker) "../System/ray_funkcije.c":325:3 -1
     (nil))
(insn 1483 1481 1484 92 (set (reg:SF 0 r0)
        (mem/c:SF (reg/f:SI 972) [1 py+0 S4 A32])) "../System/ray_funkcije.c":325:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(call_insn/u 1484 1483 2018 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2018 1484 1488 92 (set (reg:DF 2 r2)
        (reg:DF 993)) "../System/ray_funkcije.c":325:21 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1488 2018 1491 92 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:21 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1491 1488 2098 92 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":325:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2098 1491 1492 92 (set (reg:SF 1059)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":325:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1492 2098 1494 92 (set (reg/v:SF 375 [ tmpty1 ])
        (reg:SF 1059)) "../System/ray_funkcije.c":325:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1059)
        (nil)))
(debug_insn 1494 1492 1495 92 (var_location:SF tmpty1 (reg/v:SF 375 [ tmpty1 ])) "../System/ray_funkcije.c":325:9 -1
     (nil))
(debug_insn 1495 1494 1496 92 (debug_marker) "../System/ray_funkcije.c":327:3 -1
     (nil))
(debug_insn 1496 1495 1497 92 (debug_marker) "../System/ray_funkcije.c":327:8 -1
     (nil))
(debug_insn 1497 1496 1498 92 (var_location:SF D#5 (plus:SF (debug_expr:SF D#28)
        (debug_expr:SF D#7))) "../System/ray_funkcije.c":327:24 -1
     (nil))
(debug_insn 1498 1497 1499 92 (var_location:SI y (fix:SI (debug_expr:SF D#5))) -1
     (nil))
(debug_insn 1499 1498 1502 92 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1502 1499 1503 92 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 389 [ y ])
            (const_int 99 [0x63]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1503 1502 1798 92 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1522)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1522)
(code_label 1798 1503 1504 93 87 (nil) [1 uses])
(note 1504 1798 1516 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(note 1516 1504 1505 93 NOTE_INSN_DELETED)
(debug_insn 1505 1516 1506 93 (debug_marker) "../System/ray_funkcije.c":133:30 -1
     (nil))
(insn 1506 1505 1507 93 (set (reg:SF 857)
        (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":133:32 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1507 1506 1508 93 (set (reg/v:SF 339 [ z ])
        (plus:SF (reg/v:SF 339 [ z ])
            (reg:SF 857))) "../System/ray_funkcije.c":133:32 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 857)
        (nil)))
(debug_insn 1508 1507 1509 93 (var_location:SF z (reg/v:SF 339 [ z ])) -1
     (nil))
(debug_insn 1509 1508 1510 93 (var_location:SF rhy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1510 1509 1511 93 (var_location:SF rhx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1511 1510 1512 93 (var_location:SF rvy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1512 1511 1513 93 (var_location:SF rvx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1513 1512 1514 93 (var_location:SF dy (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1514 1513 1515 93 (var_location:SF dx (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1515 1514 1517 93 (debug_marker) "../System/ray_funkcije.c":133:22 -1
     (nil))
(insn 1517 1515 1518 93 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (plus:SI (reg:SI 463 [ ivtmp_891 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg:SI 463 [ ivtmp_891 ])
                (plus:SI (reg:SI 463 [ ivtmp_891 ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) "../System/ray_funkcije.c":133:2 1019 {thumb2_addsi3_compare0}
     (nil))
(jump_insn 1518 1517 2183 93 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref 1802)
            (pc))) "../System/ray_funkcije.c":133:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1802)
(note 2183 1518 2185 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2185 2183 2186 94 (set (pc)
        (label_ref 2184)) 284 {*arm_jump}
     (nil)
 -> 2184)
(barrier 2186 2185 1522)
(code_label 1522 2186 1523 95 81 (nil) [1 uses])
(note 1523 1522 1526 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1526 1523 1527 95 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 389 [ y ])
            (const_int 62 [0x3e]))) 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1527 1526 1963 95 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1962)
            (pc))) 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1073741831 (nil)))
 -> 1962)
(note 1963 1527 1536 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1536 1963 1946 96 (set (reg:SF 860)
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":329:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1946 1536 1947 96 (set (reg/f:SI 969)
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)
        (nil)))
(insn 1947 1946 1603 96 (set (reg/f:SI 968)
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)
        (nil)))
(insn 1603 1947 2256 96 (set (reg:DF 981)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])
        (nil)))
(insn 2256 1603 2257 96 (set (reg/v:SI 1083 [orig:368 wallx ] [368])
        (reg/v:SI 368 [ wallx ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 368 [ wallx ])
        (nil)))
(insn 2257 2256 2258 96 (set (reg/v:SI 1084 [orig:389 y ] [389])
        (reg/v:SI 389 [ y ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 389 [ y ])
        (nil)))
(insn 2258 2257 2259 96 (set (reg/f:SI 1085 [968])
        (reg/f:SI 968)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 968)
        (nil)))
(insn 2259 2258 2187 96 (set (reg/f:SI 1086 [969])
        (reg/f:SI 969)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 969)
        (nil)))
(jump_insn 2187 2259 2188 96 (set (pc)
        (label_ref 1665)) 284 {*arm_jump}
     (nil)
 -> 1665)
(barrier 2188 2187 1962)
(code_label 1962 2188 1961 97 105 (nil) [1 uses])
(note 1961 1962 1944 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1944 1961 1945 97 (set (reg/f:SI 969)
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)
        (nil)))
(insn 1945 1944 2189 97 (set (reg/f:SI 968)
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)
        (nil)))
(jump_insn 2189 1945 2190 97 (set (pc)
        (label_ref 1668)) 284 {*arm_jump}
     (nil)
 -> 1668)
(barrier 2190 2189 1665)
(code_label 1665 2190 1528 98 85 (nil) [2 uses])
(note 1528 1665 1547 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(note 1547 1528 1554 98 NOTE_INSN_DELETED)
(note 1554 1547 1583 98 NOTE_INSN_DELETED)
(note 1583 1554 1588 98 NOTE_INSN_DELETED)
(note 1588 1583 1593 98 NOTE_INSN_DELETED)
(note 1593 1588 1598 98 NOTE_INSN_DELETED)
(note 1598 1593 1609 98 NOTE_INSN_DELETED)
(note 1609 1598 1629 98 NOTE_INSN_DELETED)
(note 1629 1609 1634 98 NOTE_INSN_DELETED)
(note 1634 1629 1639 98 NOTE_INSN_DELETED)
(note 1639 1634 1644 98 NOTE_INSN_DELETED)
(note 1644 1639 1646 98 NOTE_INSN_DELETED)
(note 1646 1644 1656 98 NOTE_INSN_DELETED)
(note 1656 1646 1529 98 NOTE_INSN_DELETED)
(debug_insn 1529 1656 1530 98 (var_location:SI y (reg/v:SI 1084 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1530 1529 1531 98 (debug_marker) "../System/ray_funkcije.c":328:4 -1
     (nil))
(debug_insn 1531 1530 1532 98 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":328:8 -1
     (nil))
(debug_insn 1532 1531 1533 98 (debug_marker) "../System/ray_funkcije.c":329:4 -1
     (nil))
(debug_insn 1533 1532 1534 98 (var_location:SF dy (minus:SF (float:SF (reg/v:SI 1084 [orig:389 y ] [389]))
        (const_double:SF 5.0e+1 [0x0.c8p+6]))) "../System/ray_funkcije.c":329:10 -1
     (nil))
(debug_insn 1534 1533 1535 98 (debug_marker) "../System/ray_funkcije.c":343:4 -1
     (nil))
(insn 1535 1534 1994 98 (set (reg:SF 858)
        (float:SF (reg/v:SI 1084 [orig:389 y ] [389]))) "../System/ray_funkcije.c":329:17 809 {*floatsisf2_vfp}
     (nil))
(insn 1994 1535 1537 98 (set (reg:SF 16 s0)
        (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":349:11 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1537 1994 1538 98 (set (reg:SF 859 [ dy ])
        (minus:SF (reg:SF 858)
            (reg:SF 860))) "../System/ray_funkcije.c":329:10 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 858)
        (expr_list:REG_EQUAL (minus:SF (reg:SF 858)
                (const_double:SF 5.0e+1 [0x0.c8p+6]))
            (nil))))
(insn 1538 1537 1539 98 (set (reg:SF 296 [ _244 ])
        (mult:SF (reg:SF 859 [ dy ])
            (reg/v:SF 370 [ cosFloor ]))) "../System/ray_funkcije.c":343:30 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 859 [ dy ])
        (nil)))
(debug_insn 1539 1538 1540 98 (var_location:SF tx (plus:SF (div:SF (reg/v:SF 372 [ tmptx2 ])
            (reg:SF 296 [ _244 ]))
        (reg/v:SF 374 [ tmptx1 ]))) "../System/ray_funkcije.c":343:7 -1
     (nil))
(debug_insn 1540 1539 1541 98 (debug_marker) "../System/ray_funkcije.c":344:4 -1
     (nil))
(debug_insn 1541 1540 1542 98 (var_location:SF ty (plus:SF (div:SF (reg/v:SF 373 [ tmpty2 ])
            (reg:SF 296 [ _244 ]))
        (reg/v:SF 375 [ tmpty1 ]))) "../System/ray_funkcije.c":344:7 -1
     (nil))
(debug_insn 1542 1541 1543 98 (debug_marker) "../System/ray_funkcije.c":345:4 -1
     (nil))
(insn 1543 1542 1548 98 (set (reg:SF 861)
        (div:SF (reg/v:SF 373 [ tmpty2 ])
            (reg:SF 296 [ _244 ]))) "../System/ray_funkcije.c":344:30 764 {*divsf3_vfp}
     (nil))
(insn 1548 1543 1544 98 (set (reg:SF 866)
        (div:SF (reg/v:SF 372 [ tmptx2 ])
            (reg:SF 296 [ _244 ]))) "../System/ray_funkcije.c":343:30 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 296 [ _244 ])
        (nil)))
(insn 1544 1548 1549 98 (set (reg:SF 862 [ ty ])
        (plus:SF (reg:SF 861)
            (reg/v:SF 375 [ tmpty1 ]))) "../System/ray_funkcije.c":344:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 861)
        (nil)))
(insn 1549 1544 1545 98 (set (reg:SF 867 [ tx ])
        (plus:SF (reg:SF 866)
            (reg/v:SF 374 [ tmptx1 ]))) "../System/ray_funkcije.c":343:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 866)
        (nil)))
(insn 1545 1549 1546 98 (set (reg:SI 863)
        (fix:SI (fix:SF (reg:SF 862 [ ty ])))) "../System/ray_funkcije.c":345:18 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 862 [ ty ])
        (nil)))
(insn 1546 1545 1550 98 (set (reg:SI 864)
        (and:SI (reg:SI 863)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:29 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 863)
        (nil)))
(insn 1550 1546 1551 98 (set (reg:SI 868)
        (fix:SI (fix:SF (reg:SF 867 [ tx ])))) "../System/ray_funkcije.c":345:43 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 867 [ tx ])
        (nil)))
(insn 1551 1550 1552 98 (set (reg:SI 869)
        (and:SI (reg:SI 868)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:54 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 868)
        (nil)))
(insn 1552 1551 1555 98 (set (reg:SI 870)
        (plus:SI (ashift:SI (reg:SI 864)
                (const_int 5 [0x5]))
            (reg:SI 869))) "../System/ray_funkcije.c":345:40 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 869)
        (expr_list:REG_DEAD (reg:SI 864)
            (nil))))
(insn 1555 1552 1557 98 (set (reg:SI 873)
        (plus:SI (ashift:SI (reg:SI 870)
                (const_int 1 [0x1]))
            (reg:SI 870))) "../System/ray_funkcije.c":345:8 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 870)
        (nil)))
(debug_insn 1557 1555 1558 98 (var_location:SI pixel (reg:SI 873)) "../System/ray_funkcije.c":345:8 -1
     (nil))
(debug_insn 1558 1557 1559 98 (debug_marker) "../System/ray_funkcije.c":347:4 -1
     (nil))
(debug_insn 1559 1558 1560 98 (debug_marker) "../System/ray_funkcije.c":348:5 -1
     (nil))
(debug_insn 1560 1559 1561 98 (var_location:SF dist (const_double:SF 3.0e+1 [0x0.fp+5])) "../System/ray_funkcije.c":348:11 -1
     (nil))
(debug_insn 1561 1560 1563 98 (debug_marker) "../System/ray_funkcije.c":349:5 -1
     (nil))
(call_insn 1563 1561 2099 98 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":349:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2099 1563 1564 98 (set (reg:SF 1060)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":349:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1564 2099 1565 98 (set (reg/v:SF 380 [ vis ])
        (reg:SF 1060)) "../System/ray_funkcije.c":349:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1060)
        (nil)))
(debug_insn 1565 1564 1566 98 (var_location:SF vis (reg/v:SF 380 [ vis ])) -1
     (nil))
(debug_insn 1566 1565 1829 98 (debug_marker) "../System/ray_funkcije.c":352:4 -1
     (nil))
(debug_insn 1829 1566 1567 98 (var_location:QI D#16 (mem/u:QI (plus:SI (reg:SI 873)
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_409]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1567 1829 1568 98 (var_location:SI red (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#16)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":352:8 -1
     (nil))
(debug_insn 1568 1567 1569 98 (debug_marker) "../System/ray_funkcije.c":353:4 -1
     (nil))
(insn 1569 1568 1830 98 (set (reg:SI 309 [ _257 ])
        (plus:SI (reg:SI 873)
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":353:30 7 {*arm_addsi3}
     (nil))
(debug_insn 1830 1569 1570 98 (var_location:QI D#17 (mem/u:QI (plus:SI (reg:SI 309 [ _257 ])
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_257]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1570 1830 1571 98 (var_location:SI green (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#17)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":353:8 -1
     (nil))
(debug_insn 1571 1570 1572 98 (debug_marker) "../System/ray_funkcije.c":354:4 -1
     (nil))
(insn 1572 1571 1831 98 (set (reg:SI 314 [ _262 ])
        (plus:SI (reg:SI 873)
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":354:29 7 {*arm_addsi3}
     (nil))
(debug_insn 1831 1572 1573 98 (var_location:QI D#18 (mem/u:QI (plus:SI (reg:SI 314 [ _262 ])
            (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_262]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1573 1831 1574 98 (var_location:SI blue (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#18)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":354:8 -1
     (nil))
(debug_insn 1574 1573 1575 98 (debug_marker) "../System/ray_funkcije.c":356:4 -1
     (nil))
(debug_insn 1575 1574 1576 98 (var_location:SI tlay (reg/v:SI 1084 [orig:389 y ] [389])) "../System/ray_funkcije.c":356:8 -1
     (nil))
(debug_insn 1576 1575 1577 98 (debug_marker) "../System/ray_funkcije.c":357:4 -1
     (nil))
(debug_insn 1577 1576 1578 98 (var_location:SI tlay (fix:SI (mult:DF (float:DF (reg/v:SI 1084 [orig:389 y ] [389]))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":357:9 -1
     (nil))
(debug_insn 1578 1577 1585 98 (debug_marker) "../System/ray_funkcije.c":359:4 -1
     (nil))
(insn 1585 1578 1586 98 (set (reg:SI 880 [ t_floor[_257] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1085 [968])
                    (reg:SI 309 [ _257 ])) [0 t_floor[_257]+0 S1 A8]))) "../System/ray_funkcije.c":353:23 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 309 [ _257 ])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_257]+0 S1 A8]))
        (nil)))
(insn 1586 1585 1587 98 (set (reg:SF 881)
        (float:SF (reg:SI 880 [ t_floor[_257] ]))) "../System/ray_funkcije.c":353:35 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 880 [ t_floor[_257] ])
        (nil)))
(insn 1587 1586 1580 98 (set (reg:SF 882)
        (mult:SF (reg:SF 881)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":353:35 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 881)
        (nil)))
(insn 1580 1587 1581 98 (set (reg:SI 875 [ t_floor[_262] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1085 [968])
                    (reg:SI 314 [ _262 ])) [0 t_floor[_262]+0 S1 A8]))) "../System/ray_funkcije.c":354:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 314 [ _262 ])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_262]+0 S1 A8]))
        (nil)))
(insn 1581 1580 1582 98 (set (reg:SF 876)
        (float:SF (reg:SI 875 [ t_floor[_262] ]))) "../System/ray_funkcije.c":354:34 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 875 [ t_floor[_262] ])
        (nil)))
(insn 1582 1581 1590 98 (set (reg:SF 877)
        (mult:SF (reg:SF 876)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":354:34 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 876)
        (nil)))
(insn 1590 1582 1591 98 (set (reg:SI 885 [ t_floor[pixel_409] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1085 [968])
                    (reg:SI 873)) [0 t_floor[pixel_409]+0 S1 A8]))) "../System/ray_funkcije.c":352:21 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 873)
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_409]+0 S1 A8]))
        (nil)))
(insn 1591 1590 1592 98 (set (reg:SF 886)
        (float:SF (reg:SI 885 [ t_floor[pixel_409] ]))) "../System/ray_funkcije.c":352:33 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 885 [ t_floor[pixel_409] ])
        (nil)))
(insn 1592 1591 1594 98 (set (reg:SF 887)
        (mult:SF (reg:SF 886)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":352:33 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 886)
        (nil)))
(insn 1594 1592 1595 98 (set (reg:SI 2 r2)
        (fix:SI (fix:SF (reg:SF 877)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 877)
        (nil)))
(insn 1595 1594 1596 98 (set (reg:SI 1 r1)
        (fix:SI (fix:SF (reg:SF 882)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 882)
        (nil)))
(insn 1596 1595 1597 98 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 887)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 887)
        (nil)))
(call_insn 1597 1596 2100 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":360:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 2100 1597 1599 98 (set (reg:SI 1061)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1599 2100 1600 98 (set (reg:SI 889 [ _269 ])
        (zero_extend:SI (subreg:HI (reg:SI 1061) 0))) "../System/ray_funkcije.c":359:4 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 1061)
        (nil)))
(insn 1600 1599 1601 98 (set (reg:SI 0 r0)
        (reg/v:SI 1084 [orig:389 y ] [389])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1601 1600 1995 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1995 1601 1605 98 (set (reg:DF 2 r2)
        (reg:DF 981)) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1605 1995 1608 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1608 1605 2101 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2101 1608 1610 98 (set (reg:SI 1062)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1610 2101 1611 98 (set (reg:SI 2 r2)
        (reg:SI 889 [ _269 ])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 889 [ _269 ])
        (nil)))
(insn 1611 1610 1612 98 (set (reg:SI 1 r1)
        (reg:SI 1062)) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1062)
        (nil)))
(insn 1612 1611 1613 98 (set (reg:SI 0 r0)
        (reg/v:SI 1083 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1613 1612 1614 98 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":359:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1614 1613 1832 98 (debug_marker) "../System/ray_funkcije.c":363:4 -1
     (nil))
(debug_insn 1832 1614 1615 98 (var_location:QI D#19 (mem/u:QI (plus:SI (reg:SI 873)
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_409]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1615 1832 1616 98 (var_location:SI red (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#19)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":363:8 -1
     (nil))
(debug_insn 1616 1615 1833 98 (debug_marker) "../System/ray_funkcije.c":364:4 -1
     (nil))
(debug_insn 1833 1616 1617 98 (var_location:QI D#20 (mem/u:QI (plus:SI (reg:SI 309 [ _257 ])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_257]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1617 1833 1618 98 (var_location:SI green (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#20)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":364:10 -1
     (nil))
(debug_insn 1618 1617 1834 98 (debug_marker) "../System/ray_funkcije.c":365:4 -1
     (nil))
(debug_insn 1834 1618 1619 98 (var_location:QI D#21 (mem/u:QI (plus:SI (reg:SI 314 [ _262 ])
            (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_262]+0 S1 A8])) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1619 1834 1620 98 (var_location:SI blue (fix:SI (mult:SF (float:SF (zero_extend:SI (debug_expr:QI D#21)))
            (reg/v:SF 380 [ vis ])))) "../System/ray_funkcije.c":365:9 -1
     (nil))
(debug_insn 1620 1619 1621 98 (debug_marker) "../System/ray_funkcije.c":367:4 -1
     (nil))
(debug_insn 1621 1620 1622 98 (var_location:SI stropy (minus:SI (const_int 100 [0x64])
        (reg/v:SI 1084 [orig:389 y ] [389]))) "../System/ray_funkcije.c":367:8 -1
     (nil))
(debug_insn 1622 1621 1623 98 (debug_marker) "../System/ray_funkcije.c":368:4 -1
     (nil))
(debug_insn 1623 1622 1624 98 (var_location:SI stropy (fix:SI (mult:DF (float:DF (minus:SI (const_int 100 [0x64])
                    (reg/v:SI 1084 [orig:389 y ] [389])))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":368:11 -1
     (nil))
(debug_insn 1624 1623 1626 98 (debug_marker) "../System/ray_funkcije.c":370:4 -1
     (nil))
(insn 1626 1624 1627 98 (set (reg:SI 894 [ t_wall[_262] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1086 [969])
                    (reg:SI 314 [ _262 ])) [0 t_wall[_262]+0 S1 A8]))) "../System/ray_funkcije.c":365:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 314 [ _262 ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 314 [ _262 ])
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_262]+0 S1 A8]))
            (nil))))
(insn 1627 1626 1631 98 (set (reg:SF 895)
        (float:SF (reg:SI 894 [ t_wall[_262] ]))) "../System/ray_funkcije.c":365:29 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 894 [ t_wall[_262] ])
        (nil)))
(insn 1631 1627 1632 98 (set (reg:SI 899 [ t_wall[_257] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1086 [969])
                    (reg:SI 309 [ _257 ])) [0 t_wall[_257]+0 S1 A8]))) "../System/ray_funkcije.c":364:18 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 309 [ _257 ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 309 [ _257 ])
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_257]+0 S1 A8]))
            (nil))))
(insn 1632 1631 1636 98 (set (reg:SF 900)
        (float:SF (reg:SI 899 [ t_wall[_257] ]))) "../System/ray_funkcije.c":364:30 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 899 [ t_wall[_257] ])
        (nil)))
(insn 1636 1632 1637 98 (set (reg:SI 904 [ t_wall[pixel_409] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1086 [969])
                    (reg:SI 873)) [0 t_wall[pixel_409]+0 S1 A8]))) "../System/ray_funkcije.c":363:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 873)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 873)
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_409]+0 S1 A8]))
            (nil))))
(insn 1637 1636 1628 98 (set (reg:SF 905)
        (float:SF (reg:SI 904 [ t_wall[pixel_409] ]))) "../System/ray_funkcije.c":363:28 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 904 [ t_wall[pixel_409] ])
        (nil)))
(insn 1628 1637 1633 98 (set (reg:SF 896)
        (mult:SF (reg:SF 895)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":365:29 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 895)
        (nil)))
(insn 1633 1628 1638 98 (set (reg:SF 901)
        (mult:SF (reg:SF 900)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":364:30 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 900)
        (nil)))
(insn 1638 1633 1640 98 (set (reg:SF 906)
        (mult:SF (reg:SF 905)
            (reg/v:SF 380 [ vis ]))) "../System/ray_funkcije.c":363:28 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 905)
        (expr_list:REG_DEAD (reg/v:SF 380 [ vis ])
            (nil))))
(insn 1640 1638 1641 98 (set (reg:SI 2 r2)
        (fix:SI (fix:SF (reg:SF 896)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 896)
        (nil)))
(insn 1641 1640 1642 98 (set (reg:SI 1 r1)
        (fix:SI (fix:SF (reg:SF 901)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 901)
        (nil)))
(insn 1642 1641 1643 98 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 906)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 906)
        (nil)))
(call_insn 1643 1642 2102 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":371:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 2102 1643 1645 98 (set (reg:SI 1063)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1645 2102 1647 98 (set (reg:SI 908 [ _285 ])
        (zero_extend:SI (subreg:HI (reg:SI 1063) 0))) "../System/ray_funkcije.c":370:4 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 1063)
        (nil)))
(insn 1647 1645 1662 98 (set (reg:SI 0 r0)
        (minus:SI (const_int 100 [0x64])
            (reg/v:SI 1084 [orig:389 y ] [389]))) "../System/ray_funkcije.c":368:11 45 {*arm_subsi3_insn}
     (nil))
(insn 1662 1647 1648 98 (set (reg/v:SI 1084 [orig:389 y ] [389])
        (plus:SI (reg/v:SI 1084 [orig:389 y ] [389])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":327:46 7 {*arm_addsi3}
     (nil))
(call_insn/u 1648 1662 1996 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1996 1648 1652 98 (set (reg:DF 2 r2)
        (reg:DF 981)) "../System/ray_funkcije.c":368:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1652 1996 1655 98 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1655 1652 2103 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2103 1655 1657 98 (set (reg:SI 1064)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":368:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1657 2103 1658 98 (set (reg:SI 2 r2)
        (reg:SI 908 [ _285 ])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 908 [ _285 ])
        (nil)))
(insn 1658 1657 1659 98 (set (reg:SI 1 r1)
        (reg:SI 1064)) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1064)
        (nil)))
(insn 1659 1658 1660 98 (set (reg:SI 0 r0)
        (reg/v:SI 1083 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1660 1659 1661 98 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":370:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1661 1660 1663 98 (debug_marker) "../System/ray_funkcije.c":327:45 -1
     (nil))
(debug_insn 1663 1661 1664 98 (var_location:SI y (reg/v:SI 1084 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1664 1663 1666 98 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1666 1664 1667 98 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 1084 [orig:389 y ] [389])
            (const_int 63 [0x3f]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1667 1666 2268 98 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1665)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1665)
(note 2268 1667 2260 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 2260 2268 2261 104 (set (reg/v:SI 368 [ wallx ])
        (reg/v:SI 1083 [orig:368 wallx ] [368])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1083 [orig:368 wallx ] [368])
        (nil)))
(insn 2261 2260 2262 104 (set (reg/v:SI 389 [ y ])
        (reg/v:SI 1084 [orig:389 y ] [389])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 1084 [orig:389 y ] [389])
        (nil)))
(insn 2262 2261 2263 104 (set (reg/f:SI 968)
        (reg/f:SI 1085 [968])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 1085 [968])
        (nil)))
(insn 2263 2262 1668 104 (set (reg/f:SI 969)
        (reg/f:SI 1086 [969])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 1086 [969])
        (nil)))
(code_label 1668 2263 1669 99 84 (nil) [1 uses])
(note 1669 1668 1678 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1678 1669 1736 99 (set (reg:SF 915)
        (const_double:SF 5.0e+1 [0x0.c8p+6])) "../System/ray_funkcije.c":329:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1736 1678 2264 99 (set (reg:DF 979)
        (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])
        (nil)))
(insn 2264 1736 2265 99 (set (reg/v:SI 1079 [orig:368 wallx ] [368])
        (reg/v:SI 368 [ wallx ])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 368 [ wallx ])
        (nil)))
(insn 2265 2264 2266 99 (set (reg/v:SI 1080 [orig:389 y ] [389])
        (reg/v:SI 389 [ y ])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 389 [ y ])
        (nil)))
(insn 2266 2265 2267 99 (set (reg/f:SI 1081 [968])
        (reg/f:SI 968)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 968)
        (nil)))
(insn 2267 2266 1795 99 (set (reg/f:SI 1082 [969])
        (reg/f:SI 969)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 969)
        (nil)))
(code_label 1795 2267 1670 100 86 (nil) [1 uses])
(note 1670 1795 1689 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(note 1689 1670 1696 100 NOTE_INSN_DELETED)
(note 1696 1689 1718 100 NOTE_INSN_DELETED)
(note 1718 1696 1722 100 NOTE_INSN_DELETED)
(note 1722 1718 1726 100 NOTE_INSN_DELETED)
(note 1726 1722 1731 100 NOTE_INSN_DELETED)
(note 1731 1726 1742 100 NOTE_INSN_DELETED)
(note 1742 1731 1761 100 NOTE_INSN_DELETED)
(note 1761 1742 1765 100 NOTE_INSN_DELETED)
(note 1765 1761 1769 100 NOTE_INSN_DELETED)
(note 1769 1765 1774 100 NOTE_INSN_DELETED)
(note 1774 1769 1776 100 NOTE_INSN_DELETED)
(note 1776 1774 1786 100 NOTE_INSN_DELETED)
(note 1786 1776 1671 100 NOTE_INSN_DELETED)
(debug_insn 1671 1786 1672 100 (var_location:SI y (reg/v:SI 1080 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1672 1671 1673 100 (debug_marker) "../System/ray_funkcije.c":328:4 -1
     (nil))
(debug_insn 1673 1672 1674 100 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) "../System/ray_funkcije.c":328:8 -1
     (nil))
(debug_insn 1674 1673 1675 100 (debug_marker) "../System/ray_funkcije.c":329:4 -1
     (nil))
(debug_insn 1675 1674 1676 100 (var_location:SF dy (minus:SF (float:SF (reg/v:SI 1080 [orig:389 y ] [389]))
        (const_double:SF 5.0e+1 [0x0.c8p+6]))) "../System/ray_funkcije.c":329:10 -1
     (nil))
(debug_insn 1676 1675 1677 100 (debug_marker) "../System/ray_funkcije.c":343:4 -1
     (nil))
(insn 1677 1676 1679 100 (set (reg:SF 913)
        (float:SF (reg/v:SI 1080 [orig:389 y ] [389]))) "../System/ray_funkcije.c":329:17 809 {*floatsisf2_vfp}
     (nil))
(insn 1679 1677 1680 100 (set (reg:SF 914 [ dy ])
        (minus:SF (reg:SF 913)
            (reg:SF 915))) "../System/ray_funkcije.c":329:10 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 913)
        (expr_list:REG_EQUAL (minus:SF (reg:SF 913)
                (const_double:SF 5.0e+1 [0x0.c8p+6]))
            (nil))))
(insn 1680 1679 1681 100 (set (reg:SF 475 [ _906 ])
        (mult:SF (reg:SF 914 [ dy ])
            (reg/v:SF 370 [ cosFloor ]))) "../System/ray_funkcije.c":343:30 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 914 [ dy ])
        (nil)))
(debug_insn 1681 1680 1682 100 (var_location:SF tx (plus:SF (div:SF (reg/v:SF 372 [ tmptx2 ])
            (reg:SF 475 [ _906 ]))
        (reg/v:SF 374 [ tmptx1 ]))) "../System/ray_funkcije.c":343:7 -1
     (nil))
(debug_insn 1682 1681 1683 100 (debug_marker) "../System/ray_funkcije.c":344:4 -1
     (nil))
(debug_insn 1683 1682 1684 100 (var_location:SF ty (plus:SF (div:SF (reg/v:SF 373 [ tmpty2 ])
            (reg:SF 475 [ _906 ]))
        (reg/v:SF 375 [ tmpty1 ]))) "../System/ray_funkcije.c":344:7 -1
     (nil))
(debug_insn 1684 1683 1685 100 (debug_marker) "../System/ray_funkcije.c":345:4 -1
     (nil))
(insn 1685 1684 1690 100 (set (reg:SF 916)
        (div:SF (reg/v:SF 373 [ tmpty2 ])
            (reg:SF 475 [ _906 ]))) "../System/ray_funkcije.c":344:30 764 {*divsf3_vfp}
     (nil))
(insn 1690 1685 1686 100 (set (reg:SF 921)
        (div:SF (reg/v:SF 372 [ tmptx2 ])
            (reg:SF 475 [ _906 ]))) "../System/ray_funkcije.c":343:30 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 475 [ _906 ])
        (nil)))
(insn 1686 1690 1691 100 (set (reg:SF 917 [ ty ])
        (plus:SF (reg:SF 916)
            (reg/v:SF 375 [ tmpty1 ]))) "../System/ray_funkcije.c":344:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 916)
        (nil)))
(insn 1691 1686 1687 100 (set (reg:SF 922 [ tx ])
        (plus:SF (reg:SF 921)
            (reg/v:SF 374 [ tmptx1 ]))) "../System/ray_funkcije.c":343:7 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 921)
        (nil)))
(insn 1687 1691 1688 100 (set (reg:SI 918)
        (fix:SI (fix:SF (reg:SF 917 [ ty ])))) "../System/ray_funkcije.c":345:18 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 917 [ ty ])
        (nil)))
(insn 1688 1687 1692 100 (set (reg:SI 919)
        (and:SI (reg:SI 918)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:29 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 918)
        (nil)))
(insn 1692 1688 1693 100 (set (reg:SI 923)
        (fix:SI (fix:SF (reg:SF 922 [ tx ])))) "../System/ray_funkcije.c":345:43 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 922 [ tx ])
        (nil)))
(insn 1693 1692 1694 100 (set (reg:SI 924)
        (and:SI (reg:SI 923)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":345:54 90 {*arm_andsi3_insn}
     (expr_list:REG_DEAD (reg:SI 923)
        (nil)))
(insn 1694 1693 1697 100 (set (reg:SI 925)
        (plus:SI (ashift:SI (reg:SI 919)
                (const_int 5 [0x5]))
            (reg:SI 924))) "../System/ray_funkcije.c":345:40 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 924)
        (expr_list:REG_DEAD (reg:SI 919)
            (nil))))
(insn 1697 1694 1699 100 (set (reg:SI 928)
        (plus:SI (ashift:SI (reg:SI 925)
                (const_int 1 [0x1]))
            (reg:SI 925))) "../System/ray_funkcije.c":345:8 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 925)
        (nil)))
(debug_insn 1699 1697 1700 100 (var_location:SI pixel (reg:SI 928)) "../System/ray_funkcije.c":345:8 -1
     (nil))
(debug_insn 1700 1699 1701 100 (debug_marker) "../System/ray_funkcije.c":347:4 -1
     (nil))
(debug_insn 1701 1700 1702 100 (var_location:SF vis (const_double:SF 1.0e+0 [0x0.8p+1])) -1
     (nil))
(debug_insn 1702 1701 1835 100 (debug_marker) "../System/ray_funkcije.c":352:4 -1
     (nil))
(debug_insn 1835 1702 1703 100 (var_location:SI D#22 (plus:SI (reg:SI 928)
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1703 1835 1704 100 (var_location:SI red (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#22) [0 t_floor[pixel_895]+0 S1 A8]))))) "../System/ray_funkcije.c":352:8 -1
     (nil))
(debug_insn 1704 1703 1705 100 (debug_marker) "../System/ray_funkcije.c":353:4 -1
     (nil))
(insn 1705 1704 1836 100 (set (reg:SI 457 [ _885 ])
        (plus:SI (reg:SI 928)
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":353:30 7 {*arm_addsi3}
     (nil))
(debug_insn 1836 1705 1706 100 (var_location:SI D#23 (plus:SI (reg:SI 457 [ _885 ])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1706 1836 1707 100 (var_location:SI green (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#23) [0 t_floor[_885]+0 S1 A8]))))) "../System/ray_funkcije.c":353:8 -1
     (nil))
(debug_insn 1707 1706 1708 100 (debug_marker) "../System/ray_funkcije.c":354:4 -1
     (nil))
(insn 1708 1707 1837 100 (set (reg:SI 452 [ _879 ])
        (plus:SI (reg:SI 928)
            (const_int 2 [0x2]))) "../System/ray_funkcije.c":354:29 7 {*arm_addsi3}
     (nil))
(debug_insn 1837 1708 1709 100 (var_location:SI D#24 (plus:SI (reg:SI 452 [ _879 ])
        (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1709 1837 1710 100 (var_location:SI blue (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#24) [0 t_floor[_879]+0 S1 A8]))))) "../System/ray_funkcije.c":354:8 -1
     (nil))
(debug_insn 1710 1709 1711 100 (debug_marker) "../System/ray_funkcije.c":356:4 -1
     (nil))
(debug_insn 1711 1710 1712 100 (var_location:SI tlay (reg/v:SI 1080 [orig:389 y ] [389])) "../System/ray_funkcije.c":356:8 -1
     (nil))
(debug_insn 1712 1711 1713 100 (debug_marker) "../System/ray_funkcije.c":357:4 -1
     (nil))
(debug_insn 1713 1712 1714 100 (var_location:SI tlay (fix:SI (mult:DF (float:DF (reg/v:SI 1080 [orig:389 y ] [389]))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":357:9 -1
     (nil))
(debug_insn 1714 1713 1720 100 (debug_marker) "../System/ray_funkcije.c":359:4 -1
     (nil))
(insn 1720 1714 1721 100 (set (reg:SI 934 [ t_floor[_885] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1081 [968])
                    (reg:SI 457 [ _885 ])) [0 t_floor[_885]+0 S1 A8]))) "../System/ray_funkcije.c":353:23 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 457 [ _885 ])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_885]+0 S1 A8]))
        (nil)))
(insn 1721 1720 1716 100 (set (reg:SF 935)
        (float:SF (reg:SI 934 [ t_floor[_885] ]))) "../System/ray_funkcije.c":353:35 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 934 [ t_floor[_885] ])
        (nil)))
(insn 1716 1721 1717 100 (set (reg:SI 930 [ t_floor[_879] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1081 [968])
                    (reg:SI 452 [ _879 ])) [0 t_floor[_879]+0 S1 A8]))) "../System/ray_funkcije.c":354:22 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 452 [ _879 ])
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[_879]+0 S1 A8]))
        (nil)))
(insn 1717 1716 1724 100 (set (reg:SF 931)
        (float:SF (reg:SI 930 [ t_floor[_879] ]))) "../System/ray_funkcije.c":354:34 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 930 [ t_floor[_879] ])
        (nil)))
(insn 1724 1717 1725 100 (set (reg:SI 938 [ t_floor[pixel_895] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1081 [968])
                    (reg:SI 928)) [0 t_floor[pixel_895]+0 S1 A8]))) "../System/ray_funkcije.c":352:21 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 928)
                    (symbol_ref:SI ("t_floor") [flags 0xc0]  <var_decl 0000000005e47240 t_floor>)) [0 t_floor[pixel_895]+0 S1 A8]))
        (nil)))
(insn 1725 1724 1727 100 (set (reg:SF 939)
        (float:SF (reg:SI 938 [ t_floor[pixel_895] ]))) "../System/ray_funkcije.c":352:33 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 938 [ t_floor[pixel_895] ])
        (nil)))
(insn 1727 1725 1728 100 (set (reg:SI 2 r2)
        (fix:SI (fix:SF (reg:SF 931)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 931)
        (nil)))
(insn 1728 1727 1729 100 (set (reg:SI 1 r1)
        (fix:SI (fix:SF (reg:SF 935)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 935)
        (nil)))
(insn 1729 1728 1730 100 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 939)))) "../System/ray_funkcije.c":360:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 939)
        (nil)))
(call_insn 1730 1729 2104 100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":360:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 2104 1730 1732 100 (set (reg:SI 1065)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":360:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1732 2104 1733 100 (set (reg:SI 941 [ _869 ])
        (zero_extend:SI (subreg:HI (reg:SI 1065) 0))) "../System/ray_funkcije.c":359:4 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 1065)
        (nil)))
(insn 1733 1732 1734 100 (set (reg:SI 0 r0)
        (reg/v:SI 1080 [orig:389 y ] [389])) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/u 1734 1733 1992 100 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1992 1734 1738 100 (set (reg:DF 2 r2)
        (reg:DF 979)) "../System/ray_funkcije.c":357:9 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1738 1992 1741 100 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1741 1738 2105 100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":357:9 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2105 1741 1743 100 (set (reg:SI 1066)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":357:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1743 2105 1744 100 (set (reg:SI 2 r2)
        (reg:SI 941 [ _869 ])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 941 [ _869 ])
        (nil)))
(insn 1744 1743 1745 100 (set (reg:SI 1 r1)
        (reg:SI 1066)) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1066)
        (nil)))
(insn 1745 1744 1746 100 (set (reg:SI 0 r0)
        (reg/v:SI 1079 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":359:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1746 1745 1747 100 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":359:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1747 1746 1838 100 (debug_marker) "../System/ray_funkcije.c":363:4 -1
     (nil))
(debug_insn 1838 1747 1748 100 (var_location:SI D#25 (plus:SI (reg:SI 928)
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1748 1838 1749 100 (var_location:SI red (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#25) [0 t_wall[pixel_895]+0 S1 A8]))))) "../System/ray_funkcije.c":363:8 -1
     (nil))
(debug_insn 1749 1748 1839 100 (debug_marker) "../System/ray_funkcije.c":364:4 -1
     (nil))
(debug_insn 1839 1749 1750 100 (var_location:SI D#26 (plus:SI (reg:SI 457 [ _885 ])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1750 1839 1751 100 (var_location:SI green (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#26) [0 t_wall[_885]+0 S1 A8]))))) "../System/ray_funkcije.c":364:10 -1
     (nil))
(debug_insn 1751 1750 1840 100 (debug_marker) "../System/ray_funkcije.c":365:4 -1
     (nil))
(debug_insn 1840 1751 1752 100 (var_location:SI D#27 (plus:SI (reg:SI 452 [ _879 ])
        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>))) "../System/ray_funkcije.c":375:2 -1
     (nil))
(debug_insn 1752 1840 1753 100 (var_location:SI blue (fix:SI (float:SF (zero_extend:SI (mem/u:QI (debug_expr:SI D#27) [0 t_wall[_879]+0 S1 A8]))))) "../System/ray_funkcije.c":365:9 -1
     (nil))
(debug_insn 1753 1752 1754 100 (debug_marker) "../System/ray_funkcije.c":367:4 -1
     (nil))
(debug_insn 1754 1753 1755 100 (var_location:SI stropy (minus:SI (const_int 100 [0x64])
        (reg/v:SI 1080 [orig:389 y ] [389]))) "../System/ray_funkcije.c":367:8 -1
     (nil))
(debug_insn 1755 1754 1756 100 (debug_marker) "../System/ray_funkcije.c":368:4 -1
     (nil))
(debug_insn 1756 1755 1757 100 (var_location:SI stropy (fix:SI (mult:DF (float:DF (minus:SI (const_int 100 [0x64])
                    (reg/v:SI 1080 [orig:389 y ] [389])))
            (const_double:DF 2.39999999999999991118215802998747676610946655273e+0 [0x0.99999999999998p+2])))) "../System/ray_funkcije.c":368:11 -1
     (nil))
(debug_insn 1757 1756 1759 100 (debug_marker) "../System/ray_funkcije.c":370:4 -1
     (nil))
(insn 1759 1757 1760 100 (set (reg:SI 946 [ t_wall[_879] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1082 [969])
                    (reg:SI 452 [ _879 ])) [0 t_wall[_879]+0 S1 A8]))) "../System/ray_funkcije.c":365:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 452 [ _879 ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 452 [ _879 ])
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_879]+0 S1 A8]))
            (nil))))
(insn 1760 1759 1763 100 (set (reg:SF 947)
        (float:SF (reg:SI 946 [ t_wall[_879] ]))) "../System/ray_funkcije.c":365:29 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 946 [ t_wall[_879] ])
        (nil)))
(insn 1763 1760 1764 100 (set (reg:SI 950 [ t_wall[_885] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1082 [969])
                    (reg:SI 457 [ _885 ])) [0 t_wall[_885]+0 S1 A8]))) "../System/ray_funkcije.c":364:18 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 457 [ _885 ])
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 457 [ _885 ])
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[_885]+0 S1 A8]))
            (nil))))
(insn 1764 1763 1767 100 (set (reg:SF 951)
        (float:SF (reg:SI 950 [ t_wall[_885] ]))) "../System/ray_funkcije.c":364:30 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 950 [ t_wall[_885] ])
        (nil)))
(insn 1767 1764 1768 100 (set (reg:SI 954 [ t_wall[pixel_895] ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1082 [969])
                    (reg:SI 928)) [0 t_wall[pixel_895]+0 S1 A8]))) "../System/ray_funkcije.c":363:16 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 928)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 928)
                        (symbol_ref:SI ("t_wall") [flags 0xc0]  <var_decl 0000000005e472d0 t_wall>)) [0 t_wall[pixel_895]+0 S1 A8]))
            (nil))))
(insn 1768 1767 1770 100 (set (reg:SF 955)
        (float:SF (reg:SI 954 [ t_wall[pixel_895] ]))) "../System/ray_funkcije.c":363:28 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 954 [ t_wall[pixel_895] ])
        (nil)))
(insn 1770 1768 1771 100 (set (reg:SI 2 r2)
        (fix:SI (fix:SF (reg:SF 947)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 947)
        (nil)))
(insn 1771 1770 1772 100 (set (reg:SI 1 r1)
        (fix:SI (fix:SF (reg:SF 951)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 951)
        (nil)))
(insn 1772 1771 1773 100 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 955)))) "../System/ray_funkcije.c":371:6 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 955)
        (nil)))
(call_insn 1773 1772 2106 100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":371:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 2106 1773 1775 100 (set (reg:SI 1067)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":371:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1775 2106 1777 100 (set (reg:SI 957 [ _832 ])
        (zero_extend:SI (subreg:HI (reg:SI 1067) 0))) "../System/ray_funkcije.c":370:4 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 1067)
        (nil)))
(insn 1777 1775 1792 100 (set (reg:SI 0 r0)
        (minus:SI (const_int 100 [0x64])
            (reg/v:SI 1080 [orig:389 y ] [389]))) "../System/ray_funkcije.c":368:11 45 {*arm_subsi3_insn}
     (nil))
(insn 1792 1777 1778 100 (set (reg/v:SI 1080 [orig:389 y ] [389])
        (plus:SI (reg/v:SI 1080 [orig:389 y ] [389])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":327:46 7 {*arm_addsi3}
     (nil))
(call_insn/u 1778 1792 1993 100 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_i2d") [flags 0x41]  <function_decl 0000000005c78300 __aeabi_i2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 1993 1778 1782 100 (set (reg:DF 2 r2)
        (reg:DF 979)) "../System/ray_funkcije.c":368:11 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1782 1993 1785 100 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1785 1782 2107 100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":368:11 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2iz") [flags 0x41]  <function_decl 0000000005c77a00 __aeabi_d2iz>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2107 1785 1787 100 (set (reg:SI 1068)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":368:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 1787 2107 1788 100 (set (reg:SI 2 r2)
        (reg:SI 957 [ _832 ])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 957 [ _832 ])
        (nil)))
(insn 1788 1787 1789 100 (set (reg:SI 1 r1)
        (reg:SI 1068)) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 1068)
        (nil)))
(insn 1789 1788 1790 100 (set (reg:SI 0 r0)
        (reg/v:SI 1079 [orig:368 wallx ] [368])) "../System/ray_funkcije.c":370:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1790 1789 1791 100 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>) [0 narisi_velik_kvadrat_stene S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":370:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat_stene") [flags 0x41]  <function_decl 0000000005e4c000 narisi_velik_kvadrat_stene>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(debug_insn 1791 1790 1793 100 (debug_marker) "../System/ray_funkcije.c":327:45 -1
     (nil))
(debug_insn 1793 1791 1794 100 (var_location:SI y (reg/v:SI 1080 [orig:389 y ] [389])) -1
     (nil))
(debug_insn 1794 1793 1796 100 (debug_marker) "../System/ray_funkcije.c":327:33 -1
     (nil))
(insn 1796 1794 1797 100 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 1080 [orig:389 y ] [389])
            (const_int 100 [0x64]))) "../System/ray_funkcije.c":327:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1797 1796 2191 100 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1795)
            (pc))) "../System/ray_funkcije.c":327:3 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1795)
(note 2191 1797 2192 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2192 2191 2193 101 (set (pc)
        (label_ref 1798)) 284 {*arm_jump}
     (nil)
 -> 1798)
(barrier 2193 2192 1802)
(code_label 1802 2193 1803 102 82 (nil) [1 uses])
(note 1803 1802 1815 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(note 1815 1803 1806 102 NOTE_INSN_DELETED)
(insn 1806 1815 1807 102 (set (reg:SF 0 r0)
        (reg/v:SF 339 [ z ])) "../System/ray_funkcije.c":135:22 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1807 1806 2019 102 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 2019 1807 1811 102 (set (reg:DF 2 r2)
        (reg:DF 989)) "../System/ray_funkcije.c":135:22 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1811 2019 1814 102 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":135:22 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1814 1811 2108 102 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":232:42 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 2108 1814 1816 102 (set (reg:SF 1069)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1816 2108 1817 102 (set (reg:SF 16 s0)
        (reg:SF 1069)) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1069)
        (nil)))
(call_insn/u 1817 1816 2109 102 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":232:42 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 2109 1817 1818 102 (set (reg:SF 1070)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1818 2109 1805 102 (set (reg:SF 418 [ _769 ])
        (reg:SF 1070)) "../System/ray_funkcije.c":232:42 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 1070)
        (nil)))
(insn 1805 1818 2194 102 (set (reg:SI 1078 [orig:416 pretmp_766 ] [416])
        (mem/c:SI (reg/f:SI 970) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":145:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
        (nil)))
(jump_insn 2194 1805 2195 102 (set (pc)
        (label_ref 1819)) 284 {*arm_jump}
     (nil)
 -> 1819)
(barrier 2195 2194 2184)
(code_label 2184 2195 1823 103 124 (nil) [1 uses])
(note 1823 2184 1824 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1824 1823 1826 103 (debug_marker) "../System/ray_funkcije.c":375:2 -1
     (nil))
(insn 1826 1824 1827 103 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) "../System/ray_funkcije.c":375:2 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1827 1826 1828 103 (parallel [
            (call (mem:SI (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 0000000005e0e900 TIMUT_stopwatch_update>) [0 TIMUT_stopwatch_update S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":375:2 292 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("TIMUT_stopwatch_update") [flags 0x41]  <function_decl 0000000005e0e900 TIMUT_stopwatch_update>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(barrier 1828 1827 0)

;; Function drawSprites (drawSprites, funcdef_no=358, decl_uid=5814, cgraph_uid=362, symbol_order=370)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 102 n_edges 152 count 226 (  2.2)
scanning new insn with uid = 1839.
rescanning insn with uid = 1225.
verify found no changes in insn with uid = 1839.
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
;;
;; Loop 1
;;  header 17, latch 92
;;  depth 1, outer 0
;;  nodes: 17 92 91 90 89 87 86 85 80 81 84 83 82 72 79 21 44 20 97 40 39 38 37 36 35 32 33 34 30 29 28 26 27 22 25 24 23 31 19 18 43 78 77 74 73 71 70 66 69 99 98 63 62 61 60 57 58 59 50 49 48 47 67 64 68 46 45 42 96 41 56 54 52 55 53 51 101 100 65 76 75
;;
;; Loop 6
;;  header 74, latch 78
;;  depth 2, outer 1
;;  nodes: 74 78 77 76 75
;;
;; Loop 4
;;  header 65, latch 65
;;  depth 2, outer 1
;;  nodes: 65
;;
;; Loop 3
;;  header 67, latch 98
;;  depth 2, outer 1
;;  nodes: 67 98 63 62 61 60 57 58 59 50 49 48 47 64 68 56 54 52 55 53 51 101 100
;;
;; Loop 5
;;  header 48, latch 62
;;  depth 3, outer 3
;;  nodes: 48 62 61 60 57 58 59 50 49 56 54 52 55 53 51 101 100
;;
;; Loop 2
;;  header 24, latch 25
;;  depth 2, outer 1
;;  nodes: 24 25
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 9 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 11 }
;; 7 succs { 10 }
;; 8 succs { 6 }
;; 9 succs { 5 }
;; 10 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 13 16 }
;; 13 succs { 15 }
;; 14 succs { 12 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 80 }
;; 21 succs { 22 80 }
;; 22 succs { 23 27 }
;; 23 succs { 24 }
;; 24 succs { 28 25 }
;; 25 succs { 24 26 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 33 30 }
;; 30 succs { 34 31 }
;; 31 succs { 35 32 }
;; 32 succs { 36 }
;; 33 succs { 36 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 43 }
;; 39 succs { 40 43 }
;; 40 succs { 41 97 }
;; 41 succs { 42 96 }
;; 42 succs { 45 }
;; 43 succs { 45 44 }
;; 44 succs { 80 }
;; 45 succs { 46 70 }
;; 46 succs { 67 }
;; 47 succs { 48 }
;; 48 succs { 51 49 }
;; 49 succs { 100 50 }
;; 50 succs { 62 }
;; 51 succs { 53 52 }
;; 52 succs { 57 }
;; 53 succs { 55 54 }
;; 54 succs { 57 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 62 }
;; 58 succs { 59 62 }
;; 59 succs { 60 62 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 48 63 }
;; 63 succs { 98 }
;; 64 succs { 47 65 }
;; 65 succs { 65 66 }
;; 66 succs { 71 }
;; 67 succs { 47 68 }
;; 68 succs { 64 69 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 73 72 }
;; 72 succs { 80 }
;; 73 succs { 74 }
;; 74 succs { 78 75 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 }
;; 78 succs { 74 79 }
;; 79 succs { 80 }
;; 80 succs { 81 86 }
;; 81 succs { 82 86 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 1 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 17 }
;; 93 succs { 94 95 }
;; 94 succs { 1 }
;; 95 succs { 1 }
;; 96 succs { 45 }
;; 97 succs { 80 }
;; 98 succs { 67 99 }
;; 99 succs { 71 }
;; 100 succs { 56 101 }
;; 101 succs { 52 }
Adding REG_EQUIV to insn 1680 for source of insn 1316
Adding REG_EQUIV to insn 1350 for source of insn 1351
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 746 uninteresting (no unique first use)
Reg 745 uninteresting (no unique first use)
Ignoring reg 346, has equiv memory
Reg 313: local to bb 2 def dominates all uses has unique first use
Ignoring reg 344, has equiv memory
Reg 347: local to bb 2 def dominates all uses has unique first use
Reg 318 uninteresting
Reg 780 uninteresting
Reg 781 uninteresting
Reg 782: local to bb 2 def dominates all uses has unique first use
Ignoring reg 353, has equiv memory
Ignoring reg 351, has equiv memory
Reg 329: local to bb 2 def dominates all uses has unique first use
Reg 323: local to bb 2 def dominates all uses has unique first use
Reg 354: local to bb 2 def dominates all uses has unique first use
Reg 307: local to bb 2 def dominates all uses has unique first use
Reg 783 uninteresting
Reg 784 uninteresting
Reg 785: local to bb 2 def dominates all uses has unique first use
Ignoring reg 360, has equiv memory
Ignoring reg 358, has equiv memory
Reg 337: local to bb 2 def dominates all uses has unique first use
Reg 325: local to bb 2 def dominates all uses has unique first use
Reg 361: local to bb 2 def dominates all uses has unique first use
Reg 334: local to bb 2 def dominates all uses has unique first use
Reg 786 uninteresting
Reg 787 uninteresting
Reg 788: local to bb 2 def dominates all uses has unique first use
Reg 372 uninteresting
Reg 373: local to bb 2 def dominates all uses has unique first use
Reg 367 uninteresting
Reg 368: local to bb 2 def dominates all uses has unique first use
Reg 116: local to bb 2 def dominates all uses has unique first use
Reg 114: local to bb 2 def dominates all uses has unique first use
Reg 374: local to bb 2 def dominates all uses has unique first use
Reg 294: def dominates all uses has unique first use
Reg 789 uninteresting
Reg 790 uninteresting
Reg 791: local to bb 2 def dominates all uses has unique first use
Reg 379: local to bb 2 def dominates all uses has unique first use
Reg 121 uninteresting
Reg 382: local to bb 3 def dominates all uses has unique first use
Ignoring reg 403, has equiv memory
Ignoring reg 405, has equiv memory
Ignoring reg 408, has equiv memory
Ignoring reg 409, has equiv memory
Reg 412: local to bb 8 def dominates all uses has unique first use
Reg 434: local to bb 9 def dominates all uses has unique first use
Reg 456: local to bb 10 def dominates all uses has unique first use
Ignoring reg 478, has equiv memory
Ignoring reg 479, has equiv memory
Ignoring reg 482, has equiv memory
Ignoring reg 483, has equiv memory
Reg 486: local to bb 14 def dominates all uses has unique first use
Reg 508: local to bb 15 def dominates all uses has unique first use
Reg 777: def dominates all uses has unique first use
Reg 739: def dominates all uses has unique first use
Reg 774 uninteresting (no unique first use)
Reg 775: def dominates all uses has unique first use
Reg 776: def dominates all uses has unique first use
Reg 261: local to bb 17 def dominates all uses has unique first use
Ignoring reg 529, has equiv memory
Reg 530: local to bb 17 def dominates all uses has unique first use
Reg 528 uninteresting
Reg 792 uninteresting
Reg 793 uninteresting
Reg 532: local to bb 17 def dominates all uses has unique first use
Reg 535: local to bb 17 def dominates all uses has unique first use
Reg 533: local to bb 17 def dominates all uses has unique first use
Reg 536: local to bb 17 def dominates all uses has unique first use
Reg 534 uninteresting
Reg 794 uninteresting
Reg 795 uninteresting
Ignoring reg 541, has equiv memory
Reg 796: local to bb 19 def dominates all uses has unique first use
Reg 263: def dominates all uses has unique first use
Reg 797 uninteresting
Reg 138 uninteresting (no unique first use)
Reg 798 uninteresting
Reg 799 uninteresting
Reg 550: local to bb 21 def dominates all uses has unique first use
Reg 547 uninteresting
Reg 139 uninteresting
Reg 548 uninteresting
Reg 549 uninteresting
Reg 800 uninteresting
Reg 142: def dominates all uses has unique first use
Reg 801 uninteresting
Reg 147: def dominates all uses has unique first use
Reg 143: def dominates all uses has unique first use
Reg 148: def dominates all uses has unique first use
Reg 560: def dominates all uses has unique first use
Reg 144: local to bb 24 def dominates all uses has unique first use
Reg 149: local to bb 24 def dominates all uses has unique first use
Reg 564 uninteresting
Reg 554 uninteresting
Reg 146 uninteresting
Reg 561: local to bb 24 def dominates all uses has unique first use
Reg 556 uninteresting
Reg 558 uninteresting
Reg 563 uninteresting
Reg 155 uninteresting
Reg 802 uninteresting
Reg 803 uninteresting
Reg 568 uninteresting
Reg 569 uninteresting
Reg 571 uninteresting
Reg 158: def dominates all uses has unique first use
Reg 804 uninteresting
Reg 805 uninteresting
Reg 806 uninteresting
Reg 580 uninteresting
Reg 581 uninteresting
Reg 168: def dominates all uses has unique first use
Reg 807: local to bb 38 def dominates all uses has unique first use
Reg 585: local to bb 38 def dominates all uses has unique first use
Reg 583: local to bb 38 def dominates all uses has unique first use
Reg 808 uninteresting
Reg 809 uninteresting
Reg 267: def dominates all uses has unique first use
Reg 592: def dominates all uses has unique first use
Reg 589 uninteresting
Reg 590 uninteresting
Reg 593 uninteresting
Ignoring reg 595, has equiv memory
Reg 597 uninteresting
Reg 600: local to bb 45 def dominates all uses has unique first use
Reg 602: local to bb 45 def dominates all uses has unique first use
Reg 266 uninteresting (no unique first use)
Reg 603 uninteresting
Reg 810 uninteresting
Reg 268: def dominates all uses has unique first use
Reg 769: def dominates all uses has unique first use
Reg 770 uninteresting (no unique first use)
Reg 771: def dominates all uses has unique first use
Reg 606: local to bb 47 def dominates all uses has unique first use
Reg 193 uninteresting
Reg 764: def dominates all uses has unique first use
Reg 303: def dominates all uses has unique first use
Reg 743: def dominates all uses has unique first use
Reg 608 uninteresting
Reg 609 uninteresting
Reg 615: local to bb 48 def dominates all uses has unique first use
Reg 273 uninteresting (no unique first use)
Reg 274 uninteresting (no unique first use)
Reg 275 uninteresting (no unique first use)
Reg 622 uninteresting
Reg 625 uninteresting
Reg 626 uninteresting
Reg 627 uninteresting
Reg 191 uninteresting
Reg 632: local to bb 61 def dominates all uses has unique first use
Reg 633: local to bb 61 def dominates all uses has unique first use
Reg 186 uninteresting
Reg 638: local to bb 61 def dominates all uses has unique first use
Reg 189 uninteresting
Reg 635: local to bb 61 def dominates all uses has unique first use
Reg 640 uninteresting
Reg 642: local to bb 61 def dominates all uses has unique first use
Reg 811 uninteresting
Reg 653 uninteresting
Reg 654: local to bb 73 def dominates all uses has unique first use
Reg 650 uninteresting
Reg 652: local to bb 73 def dominates all uses has unique first use
Reg 270: def dominates all uses has unique first use
Reg 269: def dominates all uses has unique first use
Reg 761 uninteresting
Reg 762: def dominates all uses has unique first use
Reg 656 uninteresting
Reg 327 uninteresting
Ignoring reg 662, has equiv memory
Reg 663: def dominates all uses has unique first use
Reg 657 uninteresting
Reg 659 uninteresting
Reg 661 uninteresting
Reg 669 uninteresting
Reg 674 uninteresting
Ignoring reg 676, has equiv memory
Reg 677 uninteresting
Reg 678 uninteresting
Reg 812 uninteresting
Reg 215 uninteresting
Reg 813: local to bb 82 def dominates all uses has unique first use
Reg 216 uninteresting
Reg 253: local to bb 82 def dominates all uses has unique first use
Reg 814 uninteresting
Reg 217: def dominates all uses has unique first use
Reg 218: def dominates all uses has unique first use
Reg 221: def dominates all uses has unique first use
Reg 686: local to bb 82 def dominates all uses has unique first use
Reg 685: local to bb 82 def dominates all uses has unique first use
Reg 692: local to bb 82 def dominates all uses has unique first use
Reg 695 uninteresting
Reg 691 uninteresting
Reg 696: local to bb 82 def dominates all uses has unique first use
Reg 688 uninteresting
Reg 684 uninteresting
Reg 689: local to bb 82 def dominates all uses has unique first use
Reg 698 uninteresting
Reg 699 uninteresting
Reg 701: local to bb 82 def dominates all uses has unique first use
Reg 254: def dominates all uses has unique first use
Reg 815 uninteresting
Reg 703: local to bb 83 def dominates all uses has unique first use
Reg 816 uninteresting
Reg 817 uninteresting
Reg 230 uninteresting
Reg 710: local to bb 84 def dominates all uses has unique first use
Reg 712: local to bb 84 def dominates all uses has unique first use
Reg 709 uninteresting
Reg 708: local to bb 84 def dominates all uses has unique first use
Reg 715: local to bb 84 def dominates all uses has unique first use
Reg 718 uninteresting
Reg 714: local to bb 84 def dominates all uses has unique first use
Reg 713: local to bb 84 def dominates all uses has unique first use
Reg 719: local to bb 84 def dominates all uses has unique first use
Reg 721 uninteresting
Reg 722 uninteresting
Reg 724 uninteresting
Reg 818 uninteresting
Reg 726: local to bb 85 def dominates all uses has unique first use
Reg 819 uninteresting
Ignoring reg 820, has equiv memory
Reg 731 uninteresting
Reg 732 uninteresting
Reg 242 uninteresting
Ignoring reg 733, has equiv memory
Reg 736 uninteresting
Reg 737 uninteresting
Examining insn 119, def for 114
  all ok
Examining insn 125, def for 116
  all ok
Reg 142 not local to one basic block
Reg 143 not local to one basic block
Examining insn 611, def for 144
  all ok
Reg 147 not local to one basic block
Reg 148 not local to one basic block
Examining insn 614, def for 149
  all ok
Reg 158 not local to one basic block
Reg 168 not local to one basic block
Reg 217 not local to one basic block
Reg 218 not local to one basic block
Reg 221 not local to one basic block
Found def insn 1592 for 253 to be not moveable
Reg 254 not local to one basic block
Found def insn 483 for 261 to be not moveable
Reg 263 not local to one basic block
Reg 267 not local to one basic block
Reg 268 not local to one basic block
Reg 269 not local to one basic block
Reg 270 not local to one basic block
Reg 294 not local to one basic block
Reg 303 not local to one basic block
Examining insn 58, def for 307
  all ok
Examining insn 47, def for 313
  found unusable input reg 346.
Examining insn 68, def for 323
  found unusable input reg 351.
Examining insn 92, def for 325
  found unusable input reg 358.
Examining insn 71, def for 329
  found unusable input reg 353.
Examining insn 82, def for 334
  all ok
Examining insn 95, def for 337
  found unusable input reg 360.
Examining insn 48, def for 347
  all ok
Examining insn 72, def for 354
  all ok
Examining insn 96, def for 361
  all ok
Found def insn 118 for 368 to be not moveable
Found def insn 124 for 373 to be not moveable
Examining insn 126, def for 374
  all ok
Ignoring reg 379 with equiv init insn
Ignoring reg 382 with equiv init insn
Ignoring reg 412 with equiv init insn
Ignoring reg 434 with equiv init insn
Ignoring reg 456 with equiv init insn
Ignoring reg 486 with equiv init insn
Ignoring reg 508 with equiv init insn
Examining insn 501, def for 530
  all ok
Examining insn 511, def for 532
  all ok
Examining insn 512, def for 533
  all ok
Examining insn 514, def for 535
  all ok
Examining insn 515, def for 536
  all ok
Ignoring reg 550 with equiv init insn
Reg 560 not local to one basic block
Examining insn 620, def for 561
  all ok
Examining insn 738, def for 583
  all ok
Ignoring reg 585 with equiv init insn
Reg 592 not local to one basic block
Examining insn 812, def for 600
  all ok
Ignoring reg 602 with equiv init insn
Examining insn 849, def for 606
  all ok and transp
      Creating newreg=823 from oldreg=606
rescanning insn with uid = 849.
scanning new insn with uid = 1840.
Examining insn 871, def for 615
  all ok
Examining insn 966, def for 632
  all ok
Examining insn 968, def for 633
  all ok
Examining insn 970, def for 635
  all ok
Examining insn 973, def for 638
  all ok
Examining insn 977, def for 642
  all ok
Examining insn 1082, def for 652
  all ok
Examining insn 1087, def for 654
  all ok
Reg 663 not local to one basic block
Examining insn 1229, def for 685
  all ok
Ignoring reg 686 with equiv init insn
Examining insn 1233, def for 689
  all ok
Examining insn 1236, def for 692
  all ok
Examining insn 1240, def for 696
  all ok
Found def insn 1245 for 701 to be not moveable
Examining insn 1256, def for 703
  all ok
Examining insn 1282, def for 708
  all ok
Ignoring reg 710 with equiv init insn
Examining insn 1281, def for 712
  all ok
Examining insn 1283, def for 713
  all ok
Examining insn 1288, def for 714
  all ok
Examining insn 1285, def for 715
  all ok
Examining insn 1289, def for 719
  all ok
Examining insn 1305, def for 726
  all ok
Reg 739 not local to one basic block
Reg 743 not local to one basic block
Reg 762 not local to one basic block
Reg 764 not local to one basic block
Reg 769 not local to one basic block
Reg 771 not local to one basic block
Reg 775 not local to one basic block
Reg 776 not local to one basic block
Reg 777 not local to one basic block
Found def insn 1642 for 782 to be not moveable
Found def insn 1645 for 785 to be not moveable
Found def insn 1648 for 788 to be not moveable
Found def insn 1651 for 791 to be not moveable
Found def insn 1656 for 796 to be not moveable
Found def insn 1667 for 807 to be not moveable
Found def insn 1673 for 813 to be not moveable
    New r823: setting preferred VFP_LO_REGS, alternative NO_REGS
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
;;
;; Loop 1
;;  header 17, latch 92
;;  depth 1, outer 0
;;  nodes: 17 92 91 90 89 87 86 85 80 81 84 83 82 72 79 21 44 20 97 40 39 38 37 36 35 32 33 34 30 29 28 26 27 22 25 24 23 31 19 18 43 78 77 74 73 71 70 66 69 99 98 63 62 61 60 57 58 59 50 49 48 47 67 64 68 46 45 42 96 41 56 54 52 55 53 51 101 100 65 76 75
;;
;; Loop 6
;;  header 74, latch 78
;;  depth 2, outer 1
;;  nodes: 74 78 77 76 75
;;
;; Loop 4
;;  header 65, latch 65
;;  depth 2, outer 1
;;  nodes: 65
;;
;; Loop 3
;;  header 67, latch 98
;;  depth 2, outer 1
;;  nodes: 67 98 63 62 61 60 57 58 59 50 49 48 47 64 68 56 54 52 55 53 51 101 100
;;
;; Loop 5
;;  header 48, latch 62
;;  depth 3, outer 3
;;  nodes: 48 62 61 60 57 58 59 50 49 56 54 52 55 53 51 101 100
;;
;; Loop 2
;;  header 24, latch 25
;;  depth 2, outer 1
;;  nodes: 24 25
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 9 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 11 }
;; 7 succs { 10 }
;; 8 succs { 6 }
;; 9 succs { 5 }
;; 10 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 13 16 }
;; 13 succs { 15 }
;; 14 succs { 12 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 80 }
;; 21 succs { 22 80 }
;; 22 succs { 23 27 }
;; 23 succs { 24 }
;; 24 succs { 28 25 }
;; 25 succs { 24 26 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 33 30 }
;; 30 succs { 34 31 }
;; 31 succs { 35 32 }
;; 32 succs { 36 }
;; 33 succs { 36 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 43 }
;; 39 succs { 40 43 }
;; 40 succs { 41 97 }
;; 41 succs { 42 96 }
;; 42 succs { 45 }
;; 43 succs { 45 44 }
;; 44 succs { 80 }
;; 45 succs { 46 70 }
;; 46 succs { 67 }
;; 47 succs { 48 }
;; 48 succs { 51 49 }
;; 49 succs { 100 50 }
;; 50 succs { 62 }
;; 51 succs { 53 52 }
;; 52 succs { 57 }
;; 53 succs { 55 54 }
;; 54 succs { 57 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 62 }
;; 58 succs { 59 62 }
;; 59 succs { 60 62 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 48 63 }
;; 63 succs { 98 }
;; 64 succs { 47 65 }
;; 65 succs { 65 66 }
;; 66 succs { 71 }
;; 67 succs { 47 68 }
;; 68 succs { 64 69 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 73 72 }
;; 72 succs { 80 }
;; 73 succs { 74 }
;; 74 succs { 78 75 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 }
;; 78 succs { 74 79 }
;; 79 succs { 80 }
;; 80 succs { 81 86 }
;; 81 succs { 82 86 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 1 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 17 }
;; 93 succs { 94 95 }
;; 94 succs { 1 }
;; 95 succs { 1 }
;; 96 succs { 45 }
;; 97 succs { 80 }
;; 98 succs { 67 99 }
;; 99 succs { 71 }
;; 100 succs { 56 101 }
;; 101 succs { 52 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 102 n_edges 152 count 226 (  2.2)
init_insns for 344: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 346: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 351: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 353: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 358: (insn_list:REG_DEP_TRUE 91 (nil))
init_insns for 360: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 367: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 372: (insn_list:REG_DEP_TRUE 123 (nil))
init_insns for 379: (insn_list:REG_DEP_TRUE 140 (nil))
init_insns for 382: (insn_list:REG_DEP_TRUE 159 (nil))
init_insns for 403: (insn_list:REG_DEP_TRUE 200 (nil))
init_insns for 405: (insn_list:REG_DEP_TRUE 209 (nil))
init_insns for 408: (insn_list:REG_DEP_TRUE 225 (nil))
init_insns for 409: (insn_list:REG_DEP_TRUE 226 (nil))
init_insns for 412: (insn_list:REG_DEP_TRUE 237 (nil))
init_insns for 434: (insn_list:REG_DEP_TRUE 279 (nil))
init_insns for 456: (insn_list:REG_DEP_TRUE 321 (nil))
init_insns for 478: (insn_list:REG_DEP_TRUE 363 (nil))
init_insns for 479: (insn_list:REG_DEP_TRUE 364 (nil))
init_insns for 482: (insn_list:REG_DEP_TRUE 380 (nil))
init_insns for 483: (insn_list:REG_DEP_TRUE 381 (nil))
init_insns for 486: (insn_list:REG_DEP_TRUE 392 (nil))
init_insns for 508: (insn_list:REG_DEP_TRUE 434 (nil))
init_insns for 529: (insn_list:REG_DEP_TRUE 499 (nil))
init_insns for 541: (insn_list:REG_DEP_TRUE 542 (nil))
init_insns for 547: (insn_list:REG_DEP_TRUE 578 (nil))
init_insns for 550: (insn_list:REG_DEP_TRUE 582 (nil))
init_insns for 560: (insn_list:REG_DEP_TRUE 618 (nil))
init_insns for 568: (insn_list:REG_DEP_TRUE 666 (nil))
init_insns for 569: (insn_list:REG_DEP_TRUE 670 (nil))
init_insns for 571: (insn_list:REG_DEP_TRUE 679 (nil))
init_insns for 585: (insn_list:REG_DEP_TRUE 739 (nil))
init_insns for 589: (insn_list:REG_DEP_TRUE 754 (nil))
init_insns for 590: (insn_list:REG_DEP_TRUE 762 (nil))
init_insns for 592: (insn_list:REG_DEP_TRUE 766 (nil))
init_insns for 595: (insn_list:REG_DEP_TRUE 786 (nil))
init_insns for 597: (insn_list:REG_DEP_TRUE 801 (nil))
init_insns for 602: (insn_list:REG_DEP_TRUE 813 (nil))
init_insns for 603: (insn_list:REG_DEP_TRUE 817 (nil))
init_insns for 653: (insn_list:REG_DEP_TRUE 1081 (nil))
init_insns for 662: (insn_list:REG_DEP_TRUE 1113 (nil))
init_insns for 663: (insn_list:REG_DEP_TRUE 1121 (nil))
init_insns for 676: (insn_list:REG_DEP_TRUE 1144 (nil))
init_insns for 678: (insn_list:REG_DEP_TRUE 1174 (nil))
init_insns for 686: (insn_list:REG_DEP_TRUE 1228 (nil))
init_insns for 698: (insn_list:REG_DEP_TRUE 1241 (nil))
init_insns for 710: (insn_list:REG_DEP_TRUE 1278 (nil))
init_insns for 721: (insn_list:REG_DEP_TRUE 1290 (nil))
init_insns for 731: (insn_list:REG_DEP_TRUE 1321 (nil))
init_insns for 733: (insn_list:REG_DEP_TRUE 1351 (nil))
init_insns for 736: (insn_list:REG_DEP_TRUE 1399 (nil))
init_insns for 737: (insn_list:REG_DEP_TRUE 1408 (nil))
init_insns for 739: (insn_list:REG_DEP_TRUE 1557 (nil))
init_insns for 740: (insn_list:REG_DEP_TRUE 1556 (nil))
init_insns for 743: (insn_list:REG_DEP_TRUE 1561 (nil))
init_insns for 745: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 746: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 747: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 761: (insn_list:REG_DEP_TRUE 1139 (nil))
init_insns for 769: (insn_list:REG_DEP_TRUE 906 (nil))
init_insns for 770: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 771: (insn_list:REG_DEP_TRUE 912 (nil))
init_insns for 774: (insn_list:REG_DEP_TRUE 526 (nil))
init_insns for 775: (insn_list:REG_DEP_TRUE 559 (nil))
init_insns for 776: (insn_list:REG_DEP_TRUE 657 (nil))
init_insns for 777: (insn_list:REG_DEP_TRUE 937 (nil))
init_insns for 820: (insn_list:REG_DEP_TRUE 1316 (nil))
Reg 382 has equivalence, initial gains 108
Reg 412 has equivalence, initial gains 60
Reg 434 has equivalence, initial gains 80
Reg 456 has equivalence, initial gains 108
Reg 486 has equivalence, initial gains 80
Reg 508 has equivalence, initial gains 108

Pass 1 for finding pseudo/allocno costs

    r823: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a319 (r823,l3) best NO_REGS, allocno NO_REGS
    r820: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r819: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r818: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r817: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r816: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r815: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r814: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r813: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r812: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r811: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r810: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r809: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r808: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r807: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r806: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r805: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r804: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r803: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r802: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r801: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r800: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r799: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r798: preferred LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r797: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r796: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r795: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r794: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r793: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r792: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r791: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r790: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r789: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r788: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r787: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r786: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r785: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r784: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r783: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r782: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r781: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r780: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r777: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r776: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r775: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a401 (r775,l2) best ALL_REGS, allocno ALL_REGS
    a351 (r775,l5) best ALL_REGS, allocno ALL_REGS
    a310 (r775,l3) best ALL_REGS, allocno ALL_REGS
    a282 (r775,l4) best ALL_REGS, allocno ALL_REGS
    a248 (r775,l6) best ALL_REGS, allocno ALL_REGS
    r774: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    a400 (r774,l2) best ALL_REGS, allocno ALL_REGS
    a350 (r774,l5) best ALL_REGS, allocno ALL_REGS
    a309 (r774,l3) best ALL_REGS, allocno ALL_REGS
    a281 (r774,l4) best ALL_REGS, allocno ALL_REGS
    a247 (r774,l6) best ALL_REGS, allocno ALL_REGS
    r771: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r770: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r769: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r764: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r762: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r761: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r747: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a399 (r747,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a345 (r747,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a305 (r747,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a280 (r747,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a245 (r747,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a76 (r747,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r746: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a398 (r746,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a344 (r746,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a304 (r746,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a279 (r746,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a244 (r746,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a75 (r746,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r745: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a397 (r745,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a343 (r745,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a303 (r745,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a278 (r745,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a243 (r745,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a74 (r745,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r744: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a396 (r744,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r743: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a342 (r743,l5) best GENERAL_REGS, allocno GENERAL_REGS
    r742: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r741: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r740: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a395 (r740,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a340 (r740,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a300 (r740,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a276 (r740,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a242 (r740,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a73 (r740,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r739: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a394 (r739,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a339 (r739,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a299 (r739,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a275 (r739,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a241 (r739,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a72 (r739,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r738: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r737: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r736: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r733: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r732: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r731: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r726: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r724: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r722: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r721: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r719: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r718: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r715: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r714: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r713: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r712: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r710: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r709: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r708: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r707: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r703: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r701: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r699: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r698: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r696: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r695: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r692: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r691: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r690: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r689: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r688: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r686: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r685: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r684: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r678: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r677: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r676: preferred LO_REGS, alternative NO_REGS, allocno LO_REGS
    r675: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r674: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r673: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r669: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r663: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r662: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r661: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r659: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r658: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r657: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r656: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r654: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r653: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r652: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r651: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r650: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r642: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r640: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r638: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r635: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r633: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r632: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r627: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r626: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r625: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r622: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r615: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r612: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r609: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r608: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r606: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r603: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r602: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r600: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r597: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r595: preferred LO_REGS, alternative NO_REGS, allocno LO_REGS
    r593: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r592: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r590: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r589: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r585: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r583: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r581: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r580: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r571: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r569: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r568: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r564: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r563: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r561: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r560: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r558: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r556: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r554: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r550: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r549: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r548: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r547: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r541: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r536: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r535: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r534: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r533: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r532: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r530: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r529: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r528: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r508: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a14 (r508,l0) best NO_REGS, allocno NO_REGS
    r486: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a15 (r486,l0) best NO_REGS, allocno NO_REGS
    r483: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r482: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r479: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r478: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r456: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a20 (r456,l0) best NO_REGS, allocno NO_REGS
    r434: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a21 (r434,l0) best NO_REGS, allocno NO_REGS
    r412: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a23 (r412,l0) best NO_REGS, allocno NO_REGS
    r409: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r408: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r405: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r403: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r382: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    a29 (r382,l0) best NO_REGS, allocno NO_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r374: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r373: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r368: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r361: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r360: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r358: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r354: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r353: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r351: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r347: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r346: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r344: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r337: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r334: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r329: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r327: preferred GENERAL_REGS, alternative ALL_REGS, allocno ALL_REGS
    r325: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r323: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r319: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a274 (r319,l4) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r317: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r313: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r310: preferred ALL_REGS, alternative VFP_LO_REGS, allocno ALL_REGS
    r307: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r306: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a391 (r306,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a337 (r306,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a297 (r306,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a273 (r306,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a239 (r306,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a71 (r306,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r302: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r301: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r300: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r297: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r294: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r281: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r270: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r269: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r268: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r267: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r266: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r265: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r263: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r261: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r249: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r247: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r246: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a385 (r245,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a322 (r245,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a285 (r245,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a264 (r245,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a230 (r245,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a67 (r245,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r221: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r218: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r217: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r216: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r215: preferred VFP_LO_REGS, alternative ALL_REGS, allocno ALL_REGS
    r193: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r191: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r189: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r186: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r181: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r168: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r154: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r149: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r148: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r147: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r144: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r143: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r142: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r139: preferred LO_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a379 (r139,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r116: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS
    r114: preferred VFP_LO_REGS, alternative NO_REGS, allocno VFP_LO_REGS

  a0(r245,l0) costs: LO_REGS:0,0 HI_REGS:150,150 CALLER_SAVE_REGS:150,150 EVEN_REG:150,150 GENERAL_REGS:150,150 VFP_D0_D7_REGS:2370,2400 VFP_LO_REGS:2370,2400 ALL_REGS:2370,2400 MEM:1580,1600
  a1(r776,l0) costs: GENERAL_REGS:0,120 VFP_D0_D7_REGS:1245,3045 VFP_LO_REGS:1245,3045 ALL_REGS:1245,2145 MEM:830,2030
  a2(r775,l0) costs: GENERAL_REGS:0,600 VFP_D0_D7_REGS:1245,10245 VFP_LO_REGS:1245,10245 ALL_REGS:1245,5745 MEM:830,6830
  a3(r774,l0) costs: GENERAL_REGS:0,300 VFP_D0_D7_REGS:1245,5745 VFP_LO_REGS:1245,5745 ALL_REGS:1245,3495 MEM:830,3830
  a4(r282,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2490,15645 VFP_LO_REGS:2490,15645 ALL_REGS:2490,15645 MEM:1660,10430
  a5(r739,l0) costs: LO_REGS:0,0 HI_REGS:166,166 CALLER_SAVE_REGS:166,166 EVEN_REG:166,166 GENERAL_REGS:166,166 VFP_D0_D7_REGS:1245,5745 VFP_LO_REGS:1245,5745 ALL_REGS:1245,5745 MEM:830,3830
  a6(r740,l0) costs: LO_REGS:0,0 HI_REGS:166,166 CALLER_SAVE_REGS:166,166 EVEN_REG:166,166 GENERAL_REGS:166,166 VFP_D0_D7_REGS:1245,10245 VFP_LO_REGS:1245,10245 ALL_REGS:1245,10245 MEM:830,6830
  a7(r777,l0) costs: LO_REGS:1245,6735 HI_REGS:1245,6735 CALLER_SAVE_REGS:1245,6735 EVEN_REG:1245,6735 GENERAL_REGS:1245,6735 VFP_LO_REGS:0,0 ALL_REGS:1245,6735 MEM:830,4490
  a8(r306,l0) costs: LO_REGS:0,0 HI_REGS:166,166 CALLER_SAVE_REGS:166,166 EVEN_REG:166,166 GENERAL_REGS:166,166 VFP_D0_D7_REGS:1245,50295 VFP_LO_REGS:1245,50295 ALL_REGS:1245,50295 MEM:830,33530
  a9(r300,l0) costs: LO_REGS:6225,13980 HI_REGS:6225,13980 CALLER_SAVE_REGS:6225,13980 EVEN_REG:6225,13980 GENERAL_REGS:6225,13980 VFP_LO_REGS:0,0 ALL_REGS:6225,13980 MEM:4150,9320
  a10(r301,l0) costs: LO_REGS:6225,22980 HI_REGS:6225,22980 CALLER_SAVE_REGS:6225,22980 EVEN_REG:6225,22980 GENERAL_REGS:6225,22980 VFP_LO_REGS:0,0 ALL_REGS:6225,22980 MEM:4150,15320
  a11(r745,l0) costs: LO_REGS:0,0 HI_REGS:166,166 CALLER_SAVE_REGS:166,166 EVEN_REG:166,166 GENERAL_REGS:166,166 VFP_D0_D7_REGS:2490,6600 VFP_LO_REGS:2490,6600 ALL_REGS:2490,6600 MEM:1660,4400
  a12(r746,l0) costs: LO_REGS:0,0 HI_REGS:166,166 CALLER_SAVE_REGS:166,166 EVEN_REG:166,166 GENERAL_REGS:166,166 VFP_D0_D7_REGS:2490,6600 VFP_LO_REGS:2490,6600 ALL_REGS:2490,6600 MEM:1660,4400
  a13(r747,l0) costs: LO_REGS:108,108 HI_REGS:382,382 CALLER_SAVE_REGS:382,382 EVEN_REG:382,382 GENERAL_REGS:274,274 VFP_D0_D7_REGS:45375,45645 VFP_LO_REGS:45375,45645 ALL_REGS:44565,44835 MEM:30250,30430
  a14(r508,l0) costs: GENERAL_REGS:162,162 VFP_D0_D7_REGS:2079,2079 VFP_LO_REGS:2079,2079 ALL_REGS:1269,1269 MEM:1404,1404
  a15(r486,l0) costs: GENERAL_REGS:120,120 VFP_D0_D7_REGS:1540,1540 VFP_LO_REGS:1540,1540 ALL_REGS:940,940 MEM:1040,1040
  a16(r483,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a17(r482,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a18(r479,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a19(r478,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a20(r456,l0) costs: GENERAL_REGS:162,162 VFP_D0_D7_REGS:2079,2079 VFP_LO_REGS:2079,2079 ALL_REGS:1269,1269 MEM:1404,1404
  a21(r434,l0) costs: GENERAL_REGS:120,120 VFP_D0_D7_REGS:1540,1540 VFP_LO_REGS:1540,1540 ALL_REGS:940,940 MEM:1040,1040
  a22(r121,l0) costs: LO_REGS:3420,3420 HI_REGS:3420,3420 CALLER_SAVE_REGS:3420,3420 EVEN_REG:3420,3420 GENERAL_REGS:3420,3420 VFP_LO_REGS:166,166 ALL_REGS:3586,3586 MEM:2363,2363
  a23(r412,l0) costs: GENERAL_REGS:90,90 VFP_D0_D7_REGS:1155,1155 VFP_LO_REGS:1155,1155 ALL_REGS:705,705 MEM:780,780
  a24(r409,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a25(r408,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a26(r405,l0) costs: LO_REGS:1860,1860 HI_REGS:1860,1860 CALLER_SAVE_REGS:1860,1860 EVEN_REG:1860,1860 GENERAL_REGS:1860,1860 VFP_LO_REGS:0,0 ALL_REGS:1860,1860 MEM:0,0
  a27(r294,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:166,166 ALL_REGS:3901,3901 MEM:2573,2573
  a28(r403,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a29(r382,l0) costs: GENERAL_REGS:162,162 VFP_D0_D7_REGS:2079,2079 VFP_LO_REGS:2079,2079 ALL_REGS:1269,1269 MEM:1404,1404
  a30(r334,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:166,166 ALL_REGS:3901,3901 MEM:2573,2573
  a31(r307,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:166,166 ALL_REGS:3901,3901 MEM:2573,2573
  a32(r379,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2490,2490 VFP_LO_REGS:2490,2490 ALL_REGS:2490,2490 MEM:1660,1660
  a33(r791,l0) costs: GENERAL_REGS:332,332 VFP_D0_D7_REGS:3735,3735 VFP_LO_REGS:3735,3735 ALL_REGS:2656,2656 MEM:2573,2573
  a34(r790,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a35(r789,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a36(r374,l0) costs: LO_REGS:4980,4980 HI_REGS:4980,4980 CALLER_SAVE_REGS:4980,4980 EVEN_REG:4980,4980 GENERAL_REGS:4980,4980 VFP_LO_REGS:2490,2490 ALL_REGS:4980,4980 MEM:4150,4150
  a37(r114,l0) costs: LO_REGS:8715,8715 HI_REGS:8715,8715 CALLER_SAVE_REGS:8715,8715 EVEN_REG:8715,8715 GENERAL_REGS:8715,8715 VFP_LO_REGS:4980,4980 ALL_REGS:8715,8715 MEM:7470,7470
  a38(r788,l0) costs: GENERAL_REGS:332,332 VFP_D0_D7_REGS:3735,3735 VFP_LO_REGS:3735,3735 ALL_REGS:2656,2656 MEM:2573,2573
  a39(r116,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:0,0 ALL_REGS:3735,3735 MEM:2490,2490
  a40(r368,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:1660,1660
  a41(r373,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:1660,1660
  a42(r367,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2490,2490 VFP_LO_REGS:2490,2490 ALL_REGS:2490,2490 MEM:1660,1660
  a43(r372,l0) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2490,2490 VFP_LO_REGS:2490,2490 ALL_REGS:2490,2490 MEM:1660,1660
  a44(r787,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a45(r786,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a46(r361,l0) costs: LO_REGS:4980,4980 HI_REGS:4980,4980 CALLER_SAVE_REGS:4980,4980 EVEN_REG:4980,4980 GENERAL_REGS:4980,4980 VFP_LO_REGS:2490,2490 ALL_REGS:4980,4980 MEM:4150,4150
  a47(r325,l0) costs: LO_REGS:8715,8715 HI_REGS:8715,8715 CALLER_SAVE_REGS:8715,8715 EVEN_REG:8715,8715 GENERAL_REGS:8715,8715 VFP_LO_REGS:4980,4980 ALL_REGS:8715,8715 MEM:7470,7470
  a48(r785,l0) costs: GENERAL_REGS:332,332 VFP_D0_D7_REGS:3735,3735 VFP_LO_REGS:3735,3735 ALL_REGS:2656,2656 MEM:2573,2573
  a49(r337,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:0,0 ALL_REGS:3735,3735 MEM:2490,2490
  a50(r358,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a51(r360,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a52(r784,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a53(r783,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a54(r354,l0) costs: LO_REGS:4980,4980 HI_REGS:4980,4980 CALLER_SAVE_REGS:4980,4980 EVEN_REG:4980,4980 GENERAL_REGS:4980,4980 VFP_LO_REGS:2490,2490 ALL_REGS:4980,4980 MEM:4150,4150
  a55(r323,l0) costs: LO_REGS:8715,8715 HI_REGS:8715,8715 CALLER_SAVE_REGS:8715,8715 EVEN_REG:8715,8715 GENERAL_REGS:8715,8715 VFP_LO_REGS:4980,4980 ALL_REGS:8715,8715 MEM:7470,7470
  a56(r782,l0) costs: GENERAL_REGS:332,332 VFP_D0_D7_REGS:3735,3735 VFP_LO_REGS:3735,3735 ALL_REGS:2656,2656 MEM:2573,2573
  a57(r329,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:0,0 ALL_REGS:3735,3735 MEM:2490,2490
  a58(r351,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a59(r353,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a60(r781,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a61(r780,l0) costs: LO_REGS:1411,1411 HI_REGS:1411,1411 CALLER_SAVE_REGS:1411,1411 EVEN_REG:1411,1411 GENERAL_REGS:1411,1411 VFP_D0_D7_REGS:1411,1411 VFP_LO_REGS:1411,1411 ALL_REGS:2490,2490 MEM:3320,3320
  a62(r347,l0) costs: LO_REGS:4980,4980 HI_REGS:4980,4980 CALLER_SAVE_REGS:4980,4980 EVEN_REG:4980,4980 GENERAL_REGS:4980,4980 VFP_LO_REGS:2490,2490 ALL_REGS:4980,4980 MEM:4150,4150
  a63(r318,l0) costs: LO_REGS:8715,8715 HI_REGS:8715,8715 CALLER_SAVE_REGS:8715,8715 EVEN_REG:8715,8715 GENERAL_REGS:8715,8715 VFP_LO_REGS:4980,4980 ALL_REGS:8715,8715 MEM:7470,7470
  a64(r344,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a65(r313,l0) costs: LO_REGS:3735,3735 HI_REGS:3735,3735 CALLER_SAVE_REGS:3735,3735 EVEN_REG:3735,3735 GENERAL_REGS:3735,3735 VFP_LO_REGS:0,0 ALL_REGS:3735,3735 MEM:2490,2490
  a66(r346,l0) costs: LO_REGS:2490,2490 HI_REGS:2490,2490 CALLER_SAVE_REGS:2490,2490 EVEN_REG:2490,2490 GENERAL_REGS:2490,2490 VFP_LO_REGS:0,0 ALL_REGS:2490,2490 MEM:0,0
  a67(r245,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_LO_REGS:30,30 ALL_REGS:30,30 MEM:20,20
  a68(r282,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:13155,13155 VFP_LO_REGS:13155,13155 ALL_REGS:13155,13155 MEM:8770,8770
  a69(r300,l1) costs: LO_REGS:7755,7755 HI_REGS:7755,7755 CALLER_SAVE_REGS:7755,7755 EVEN_REG:7755,7755 GENERAL_REGS:7755,7755 VFP_LO_REGS:0,0 ALL_REGS:7755,7755 MEM:5170,5170
  a70(r301,l1) costs: LO_REGS:16755,16755 HI_REGS:16755,16755 CALLER_SAVE_REGS:16755,16755 EVEN_REG:16755,16755 GENERAL_REGS:16755,16755 VFP_LO_REGS:0,0 ALL_REGS:16755,16755 MEM:11170,11170
  a71(r306,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:47700,49050 VFP_LO_REGS:47700,49050 ALL_REGS:47700,49050 MEM:31800,32700
  a72(r739,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:4500,4500 VFP_LO_REGS:4500,4500 ALL_REGS:4500,4500 MEM:3000,3000
  a73(r740,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:9000,9000 VFP_LO_REGS:9000,9000 ALL_REGS:9000,9000 MEM:6000,6000
  a74(r745,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:4110,4110 VFP_LO_REGS:4110,4110 ALL_REGS:4110,4110 MEM:2740,2740
  a75(r746,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:4110,4110 VFP_LO_REGS:4110,4110 ALL_REGS:4110,4110 MEM:2740,2740
  a76(r747,l1) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,270 VFP_LO_REGS:0,270 ALL_REGS:0,270 MEM:0,180
  a77(r774,l1) costs: GENERAL_REGS:300,300 VFP_D0_D7_REGS:4500,4500 VFP_LO_REGS:4500,4500 ALL_REGS:2250,2250 MEM:3000,3000
  a78(r775,l1) costs: GENERAL_REGS:600,600 VFP_D0_D7_REGS:9000,9000 VFP_LO_REGS:9000,9000 ALL_REGS:4500,4500 MEM:6000,6000
  a79(r776,l1) costs: GENERAL_REGS:120,120 VFP_D0_D7_REGS:1800,1800 VFP_LO_REGS:1800,1800 ALL_REGS:900,900 MEM:1200,1200
  a80(r777,l1) costs: LO_REGS:0,5490 HI_REGS:0,5490 CALLER_SAVE_REGS:0,5490 EVEN_REG:0,5490 GENERAL_REGS:0,5490 VFP_LO_REGS:0,0 ALL_REGS:0,5490 MEM:0,3660
  a81(r247,l1) costs: LO_REGS:16455,16455 HI_REGS:16455,16455 CALLER_SAVE_REGS:16455,16455 EVEN_REG:16455,16455 GENERAL_REGS:16455,16455 VFP_LO_REGS:2478,2478 ALL_REGS:14445,14445 MEM:12270,12270
  a82(r249,l1) costs: LO_REGS:2550,2820 HI_REGS:2550,2820 CALLER_SAVE_REGS:2550,2820 EVEN_REG:2550,2820 GENERAL_REGS:2550,2820 VFP_LO_REGS:0,0 ALL_REGS:2550,2820 MEM:1700,1880
  a83(r263,l1) costs: LO_REGS:6030,6030 HI_REGS:6030,6030 CALLER_SAVE_REGS:6030,6030 EVEN_REG:6030,6030 GENERAL_REGS:6030,6030 VFP_LO_REGS:0,0 ALL_REGS:6030,6030 MEM:4020,4020
  a84(r266,l1) costs: LO_REGS:90,645 HI_REGS:90,645 CALLER_SAVE_REGS:90,645 EVEN_REG:90,645 GENERAL_REGS:90,645 VFP_LO_REGS:0,0 ALL_REGS:90,645 MEM:60,430
  a85(r267,l1) costs: LO_REGS:3165,7845 HI_REGS:3165,7845 CALLER_SAVE_REGS:3165,7845 EVEN_REG:3165,7845 GENERAL_REGS:3165,7845 VFP_LO_REGS:120,120 ALL_REGS:3285,7965 MEM:2170,5290
  a86(r319,l1) costs: LO_REGS:0,0 HI_REGS:10,46 CALLER_SAVE_REGS:10,46 EVEN_REG:10,46 GENERAL_REGS:10,46 VFP_D0_D7_REGS:150,5100 VFP_LO_REGS:150,5100 ALL_REGS:150,5100 MEM:100,3400
  a87(r741,l1) costs: LO_REGS:240,2595 HI_REGS:240,2595 CALLER_SAVE_REGS:240,2595 EVEN_REG:240,2595 GENERAL_REGS:240,2595 VFP_LO_REGS:75,630 ALL_REGS:240,2595 MEM:185,1940
  a88(r737,l1) costs: LO_REGS:0,0 HI_REGS:20,20 CALLER_SAVE_REGS:20,20 EVEN_REG:20,20 GENERAL_REGS:20,20 VFP_D0_D7_REGS:300,300 VFP_LO_REGS:300,300 ALL_REGS:300,300 MEM:200,200
  a89(r738,l1) costs: LO_REGS:19710,27315 HI_REGS:19710,27315 CALLER_SAVE_REGS:19710,27315 EVEN_REG:19710,27315 GENERAL_REGS:19710,27315 VFP_LO_REGS:10,10 ALL_REGS:19635,27240 MEM:13140,18210
  a90(r736,l1) costs: LO_REGS:0,0 HI_REGS:6,6 CALLER_SAVE_REGS:6,6 EVEN_REG:6,6 GENERAL_REGS:6,6 VFP_D0_D7_REGS:90,90 VFP_LO_REGS:90,90 ALL_REGS:90,90 MEM:60,60
  a91(r158,l1) costs: GENERAL_REGS:225,225 VFP_D0_D7_REGS:1050,1050 VFP_LO_REGS:1050,1050 ALL_REGS:1125,1125 MEM:800,800
  a92(r302,l1) costs: LO_REGS:900,7260 HI_REGS:900,7260 CALLER_SAVE_REGS:900,7260 EVEN_REG:900,7260 GENERAL_REGS:900,7260 VFP_LO_REGS:0,0 ALL_REGS:900,7260 MEM:600,4840
  a93(r733,l1) costs: LO_REGS:0,0 HI_REGS:344,344 CALLER_SAVE_REGS:344,344 EVEN_REG:344,344 GENERAL_REGS:344,344 VFP_D0_D7_REGS:5160,5160 VFP_LO_REGS:5160,5160 ALL_REGS:5160,5160 MEM:3440,3440
  a94(r242,l1) costs: LO_REGS:0,0 HI_REGS:584,584 CALLER_SAVE_REGS:584,584 EVEN_REG:584,584 GENERAL_REGS:584,584 VFP_D0_D7_REGS:11340,11340 VFP_LO_REGS:11340,11340 ALL_REGS:11340,11340 MEM:7560,7560
  a95(r732,l1) costs: LO_REGS:0,0 HI_REGS:300,300 CALLER_SAVE_REGS:300,300 EVEN_REG:300,300 GENERAL_REGS:300,300 VFP_D0_D7_REGS:4500,4500 VFP_LO_REGS:4500,4500 ALL_REGS:4500,4500 MEM:3000,3000
  a96(r731,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a97(r820,l1) costs: GENERAL_REGS:50,50 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:750,750 MEM:750,750
  a98(r726,l1) costs: GENERAL_REGS:50,50 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:750,750 MEM:750,750
  a99(r819,l1) costs: GENERAL_REGS:100,100 VFP_D0_D7_REGS:1500,1500 VFP_LO_REGS:1500,1500 ALL_REGS:750,750 MEM:1000,1000
  a100(r218,l1) costs: LO_REGS:2720,2720 HI_REGS:2720,2720 CALLER_SAVE_REGS:2720,2720 EVEN_REG:2720,2720 GENERAL_REGS:2720,2720 VFP_LO_REGS:1140,1140 ALL_REGS:2670,2670 MEM:2285,2285
  a101(r818,l1) costs: GENERAL_REGS:50,50 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:750,750 MEM:750,750
  a102(r217,l1) costs: LO_REGS:1955,1955 HI_REGS:1955,1955 CALLER_SAVE_REGS:1955,1955 EVEN_REG:1955,1955 GENERAL_REGS:1955,1955 VFP_LO_REGS:375,375 ALL_REGS:1905,1905 MEM:1520,1520
  a103(r724,l1) costs: LO_REGS:0,0 HI_REGS:102,102 CALLER_SAVE_REGS:102,102 EVEN_REG:102,102 GENERAL_REGS:102,102 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a104(r719,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1529,1529 VFP_LO_REGS:1529,1529 ALL_REGS:1529,1529 MEM:1020,1020
  a105(r722,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1529,1529 VFP_LO_REGS:1529,1529 ALL_REGS:1529,1529 MEM:1020,1020
  a106(r744,l1) costs: LO_REGS:0,0 HI_REGS:216,216 CALLER_SAVE_REGS:216,216 EVEN_REG:216,216 GENERAL_REGS:216,216 VFP_D0_D7_REGS:3150,11205 VFP_LO_REGS:3150,11205 ALL_REGS:3150,11205 MEM:2100,7470
  a107(r713,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a108(r721,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a109(r714,l1) costs: GENERAL_REGS:0,0 MEM:1020,1020
  a110(r708,l1) costs: GENERAL_REGS:0,0 MEM:1020,1020
  a111(r718,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a112(r715,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a113(r222,l1) costs: GENERAL_REGS:2280,2280 VFP_D0_D7_REGS:3435,3435 VFP_LO_REGS:3435,3435 ALL_REGS:4575,4575 MEM:3430,3430
  a114(r710,l1) costs: LO_REGS:0,0 HI_REGS:102,102 CALLER_SAVE_REGS:102,102 EVEN_REG:102,102 GENERAL_REGS:102,102 VFP_D0_D7_REGS:2295,2295 VFP_LO_REGS:2295,2295 ALL_REGS:2295,2295 MEM:1530,1530
  a115(r712,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a116(r709,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a117(r707,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2295,2295 VFP_LO_REGS:2295,2295 ALL_REGS:2295,2295 MEM:1530,1530
  a118(r254,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a119(r219,l1) costs: GENERAL_REGS:1530,1530 VFP_D0_D7_REGS:3060,3060 VFP_LO_REGS:3060,3060 ALL_REGS:3825,3825 MEM:2805,2805
  a120(r230,l1) costs: LO_REGS:1500,1500 HI_REGS:1500,1500 CALLER_SAVE_REGS:1500,1500 EVEN_REG:1500,1500 GENERAL_REGS:1500,1500 VFP_LO_REGS:425,425 ALL_REGS:1550,1550 MEM:1150,1150
  a121(r817,l1) costs: GENERAL_REGS:100,100 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:800,800 MEM:775,775
  a122(r703,l1) costs: GENERAL_REGS:50,50 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:750,750 MEM:750,750
  a123(r816,l1) costs: GENERAL_REGS:100,100 VFP_D0_D7_REGS:1500,1500 VFP_LO_REGS:1500,1500 ALL_REGS:750,750 MEM:1000,1000
  a124(r221,l1) costs: LO_REGS:2720,2720 HI_REGS:2720,2720 CALLER_SAVE_REGS:2720,2720 EVEN_REG:2720,2720 GENERAL_REGS:2720,2720 VFP_LO_REGS:1140,1140 ALL_REGS:2670,2670 MEM:2285,2285
  a125(r815,l1) costs: GENERAL_REGS:50,50 VFP_D0_D7_REGS:1125,1125 VFP_LO_REGS:1125,1125 ALL_REGS:750,750 MEM:750,750
  a126(r216,l1) costs: LO_REGS:1955,1955 HI_REGS:1955,1955 CALLER_SAVE_REGS:1955,1955 EVEN_REG:1955,1955 GENERAL_REGS:1955,1955 VFP_LO_REGS:375,375 ALL_REGS:1905,1905 MEM:1520,1520
  a127(r701,l1) costs: LO_REGS:0,0 HI_REGS:102,102 CALLER_SAVE_REGS:102,102 EVEN_REG:102,102 GENERAL_REGS:102,102 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a128(r696,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1529,1529 VFP_LO_REGS:1529,1529 ALL_REGS:1529,1529 MEM:1020,1020
  a129(r699,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1529,1529 VFP_LO_REGS:1529,1529 ALL_REGS:1529,1529 MEM:1020,1020
  a130(r689,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a131(r698,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a132(r684,l1) costs: GENERAL_REGS:0,0 MEM:1020,1020
  a133(r688,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a134(r685,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a135(r691,l1) costs: GENERAL_REGS:0,0 MEM:1020,1020
  a136(r695,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a137(r692,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a138(r690,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2295,2295 VFP_LO_REGS:2295,2295 ALL_REGS:2295,2295 MEM:1530,1530
  a139(r686,l1) costs: LO_REGS:0,0 HI_REGS:102,102 CALLER_SAVE_REGS:102,102 EVEN_REG:102,102 GENERAL_REGS:102,102 VFP_D0_D7_REGS:2295,2295 VFP_LO_REGS:2295,2295 ALL_REGS:2295,2295 MEM:1530,1530
  a140(r253,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1530,1530 VFP_LO_REGS:1530,1530 ALL_REGS:1530,1530 MEM:1020,1020
  a141(r814,l1) costs: LO_REGS:2295,2295 HI_REGS:2295,2295 CALLER_SAVE_REGS:2295,2295 EVEN_REG:2295,2295 GENERAL_REGS:2295,2295 VFP_LO_REGS:102,102 ALL_REGS:1530,1530 MEM:1530,1530
  a142(r813,l1) costs: LO_REGS:2295,2295 HI_REGS:2295,2295 CALLER_SAVE_REGS:2295,2295 EVEN_REG:2295,2295 GENERAL_REGS:2295,2295 VFP_LO_REGS:102,102 ALL_REGS:1530,1530 MEM:1530,1530
  a143(r215,l1) costs: LO_REGS:3825,3825 HI_REGS:3825,3825 CALLER_SAVE_REGS:3825,3825 EVEN_REG:3825,3825 GENERAL_REGS:3825,3825 VFP_LO_REGS:306,306 ALL_REGS:2397,2397 MEM:2601,2601
  a144(r812,l1) costs: GENERAL_REGS:204,204 VFP_D0_D7_REGS:2295,2295 VFP_LO_REGS:2295,2295 ALL_REGS:1632,1632 MEM:1581,1581
  a145(r678,l1) costs: LO_REGS:3060,3060 HI_REGS:3060,3060 CALLER_SAVE_REGS:3060,3060 EVEN_REG:3060,3060 GENERAL_REGS:3060,3060 VFP_LO_REGS:0,0 ALL_REGS:3060,3060 MEM:2040,2040
  a146(r677,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:9000,9000 VFP_LO_REGS:9000,9000 ALL_REGS:9000,9000 MEM:6000,6000
  a147(r271,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,2175 VFP_LO_REGS:15,2175 ALL_REGS:15,2175 MEM:10,1450
  a148(r286,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,2850 VFP_LO_REGS:15,2850 ALL_REGS:15,2850 MEM:10,1900
  a149(r762,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15,285 VFP_LO_REGS:15,285 ALL_REGS:15,285 MEM:10,190
  a150(r761,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:30,30 VFP_LO_REGS:30,30 ALL_REGS:30,30 MEM:20,20
  a151(r269,l1) costs: LO_REGS:15,555 HI_REGS:15,555 CALLER_SAVE_REGS:15,555 EVEN_REG:15,555 GENERAL_REGS:15,555 VFP_LO_REGS:0,36 ALL_REGS:15,285 MEM:10,370
  a152(r652,l1) costs: LO_REGS:30,30 HI_REGS:30,30 CALLER_SAVE_REGS:30,30 EVEN_REG:30,30 GENERAL_REGS:30,30 VFP_LO_REGS:0,0 ALL_REGS:30,30 MEM:20,20
  a153(r270,l1) costs: LO_REGS:15,555 HI_REGS:15,555 CALLER_SAVE_REGS:15,555 EVEN_REG:15,555 GENERAL_REGS:15,555 VFP_LO_REGS:0,36 ALL_REGS:15,285 MEM:10,370
  a154(r654,l1) costs: LO_REGS:30,30 HI_REGS:30,30 CALLER_SAVE_REGS:30,30 EVEN_REG:30,30 GENERAL_REGS:30,30 VFP_LO_REGS:0,0 ALL_REGS:30,30 MEM:20,20
  a155(r653,l1) costs: LO_REGS:45,315 HI_REGS:45,315 CALLER_SAVE_REGS:45,315 EVEN_REG:45,315 GENERAL_REGS:45,315 VFP_LO_REGS:0,0 ALL_REGS:45,315 MEM:30,210
  a156(r651,l1) costs: LO_REGS:30,30 HI_REGS:30,30 CALLER_SAVE_REGS:30,30 EVEN_REG:30,30 GENERAL_REGS:30,30 VFP_LO_REGS:0,0 ALL_REGS:30,30 MEM:20,20
  a157(r650,l1) costs: LO_REGS:15,15 HI_REGS:15,15 CALLER_SAVE_REGS:15,15 EVEN_REG:15,15 GENERAL_REGS:15,15 VFP_D0_D7_REGS:15,15 VFP_LO_REGS:15,15 ALL_REGS:30,30 MEM:20,20
  a158(r293,l1) costs: GENERAL_REGS:0,1110 VFP_D0_D7_REGS:60,1845 VFP_LO_REGS:60,1845 ALL_REGS:60,2400 MEM:40,1785
  a159(r742,l1) costs: LO_REGS:60,6075 HI_REGS:60,6075 CALLER_SAVE_REGS:60,6075 EVEN_REG:60,6075 GENERAL_REGS:60,6075 VFP_LO_REGS:0,0 ALL_REGS:60,6075 MEM:40,4050
  a160(r310,l1) costs: LO_REGS:60,60 HI_REGS:60,60 CALLER_SAVE_REGS:60,60 EVEN_REG:60,60 GENERAL_REGS:60,60 VFP_D0_D7_REGS:60,60 VFP_LO_REGS:60,60 ALL_REGS:120,120 MEM:80,80
  a161(r771,l1) costs: LO_REGS:60,1440 HI_REGS:60,1440 CALLER_SAVE_REGS:60,1440 EVEN_REG:60,1440 GENERAL_REGS:60,1440 VFP_LO_REGS:0,0 ALL_REGS:60,1440 MEM:40,960
  a162(r770,l1) costs: LO_REGS:60,1425 HI_REGS:60,1425 CALLER_SAVE_REGS:60,1425 EVEN_REG:60,1425 GENERAL_REGS:60,1425 VFP_LO_REGS:0,0 ALL_REGS:60,1425 MEM:40,950
  a163(r769,l1) costs: LO_REGS:60,2310 HI_REGS:60,2310 CALLER_SAVE_REGS:60,2310 EVEN_REG:60,2310 GENERAL_REGS:60,2310 VFP_LO_REGS:0,0 ALL_REGS:60,2310 MEM:40,1540
  a164(r297,l1) costs: LO_REGS:60,4905 HI_REGS:60,4905 CALLER_SAVE_REGS:60,4905 EVEN_REG:60,4905 GENERAL_REGS:60,4905 VFP_LO_REGS:0,555 ALL_REGS:60,4905 MEM:40,3455
  a165(r268,l1) costs: LO_REGS:75,885 HI_REGS:75,885 CALLER_SAVE_REGS:75,885 EVEN_REG:75,885 GENERAL_REGS:75,885 VFP_LO_REGS:0,0 ALL_REGS:75,885 MEM:50,590
  a166(r304,l1) costs: GENERAL_REGS:150,1260 VFP_D0_D7_REGS:150,6090 VFP_LO_REGS:150,6090 ALL_REGS:225,6720 MEM:175,4690
  a167(r810,l1) costs: LO_REGS:225,225 HI_REGS:225,225 CALLER_SAVE_REGS:225,225 EVEN_REG:225,225 GENERAL_REGS:225,225 VFP_LO_REGS:10,10 ALL_REGS:150,150 MEM:150,150
  a168(r603,l1) costs: GENERAL_REGS:0,0 MEM:100,100
  a169(r602,l1) costs: LO_REGS:150,150 HI_REGS:150,150 CALLER_SAVE_REGS:150,150 EVEN_REG:150,150 GENERAL_REGS:150,150 VFP_LO_REGS:0,0 ALL_REGS:150,150 MEM:100,100
  a170(r600,l1) costs: LO_REGS:300,300 HI_REGS:300,300 CALLER_SAVE_REGS:300,300 EVEN_REG:300,300 GENERAL_REGS:300,300 VFP_LO_REGS:150,150 ALL_REGS:300,300 MEM:250,250
  a171(r246,l1) costs: LO_REGS:0,0 HI_REGS:4,4 CALLER_SAVE_REGS:4,4 EVEN_REG:4,4 GENERAL_REGS:4,4 MEM:3030,3030
  a172(r597,l1) costs: LO_REGS:0,0 HI_REGS:90,90 CALLER_SAVE_REGS:90,90 EVEN_REG:90,90 GENERAL_REGS:90,90 VFP_D0_D7_REGS:1350,1350 VFP_LO_REGS:1350,1350 ALL_REGS:1350,1350 MEM:900,900
  a173(r595,l1) costs: LO_REGS:0,0 HI_REGS:10,10 CALLER_SAVE_REGS:10,10 EVEN_REG:10,10 GENERAL_REGS:10,10 VFP_D0_D7_REGS:150,150 VFP_LO_REGS:150,150 ALL_REGS:150,150 MEM:0,0
  a174(r592,l1) costs: LO_REGS:2250,2250 HI_REGS:2250,2250 CALLER_SAVE_REGS:2250,2250 EVEN_REG:2250,2250 GENERAL_REGS:2250,2250 VFP_LO_REGS:0,0 ALL_REGS:2250,2250 MEM:1500,1500
  a175(r593,l1) costs: LO_REGS:900,900 HI_REGS:900,900 CALLER_SAVE_REGS:900,900 EVEN_REG:900,900 GENERAL_REGS:900,900 VFP_LO_REGS:0,0 ALL_REGS:900,900 MEM:600,600
  a176(r168,l1) costs: LO_REGS:3150,3150 HI_REGS:3150,3150 CALLER_SAVE_REGS:3150,3150 EVEN_REG:3150,3150 GENERAL_REGS:3150,3150 VFP_LO_REGS:900,900 ALL_REGS:3150,3150 MEM:2400,2400
  a177(r590,l1) costs: LO_REGS:0,0 HI_REGS:120,120 CALLER_SAVE_REGS:120,120 EVEN_REG:120,120 GENERAL_REGS:120,120 VFP_D0_D7_REGS:1800,1800 VFP_LO_REGS:1800,1800 ALL_REGS:1800,1800 MEM:1200,1200
  a178(r589,l1) costs: LO_REGS:0,0 HI_REGS:120,120 CALLER_SAVE_REGS:120,120 EVEN_REG:120,120 GENERAL_REGS:120,120 VFP_D0_D7_REGS:1800,1800 VFP_LO_REGS:1800,1800 ALL_REGS:1800,1800 MEM:1200,1200
  a179(r809,l1) costs: GENERAL_REGS:240,240 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:1920,1920 MEM:1860,1860
  a180(r583,l1) costs: GENERAL_REGS:120,120 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:1800,1800 MEM:1800,1800
  a181(r808,l1) costs: GENERAL_REGS:240,240 VFP_D0_D7_REGS:3600,3600 VFP_LO_REGS:3600,3600 ALL_REGS:1800,1800 MEM:2400,2400
  a182(r585,l1) costs: LO_REGS:2700,2700 HI_REGS:2700,2700 CALLER_SAVE_REGS:2700,2700 EVEN_REG:2700,2700 GENERAL_REGS:2700,2700 VFP_LO_REGS:900,900 ALL_REGS:2700,2700 MEM:2100,2100
  a183(r807,l1) costs: GENERAL_REGS:120,120 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:1800,1800 MEM:1800,1800
  a184(r581,l1) costs: LO_REGS:1800,1800 HI_REGS:1800,1800 CALLER_SAVE_REGS:1800,1800 EVEN_REG:1800,1800 GENERAL_REGS:1800,1800 VFP_LO_REGS:0,0 ALL_REGS:1800,1800 MEM:1200,1200
  a185(r580,l1) costs: LO_REGS:900,900 HI_REGS:900,900 CALLER_SAVE_REGS:900,900 EVEN_REG:900,900 GENERAL_REGS:900,900 VFP_D0_D7_REGS:900,900 VFP_LO_REGS:900,900 ALL_REGS:1800,1800 MEM:1200,1200
  a186(r806,l1) costs: LO_REGS:1020,1020 HI_REGS:1020,1020 CALLER_SAVE_REGS:1020,1020 EVEN_REG:1020,1020 GENERAL_REGS:1020,1020 VFP_D0_D7_REGS:1020,1020 VFP_LO_REGS:1020,1020 ALL_REGS:1800,1800 MEM:2400,2400
  a187(r248,l1) costs: GENERAL_REGS:3000,3000 VFP_D0_D7_REGS:20490,20490 VFP_LO_REGS:20490,20490 ALL_REGS:16350,16350 MEM:15000,15000
  a188(r805,l1) costs: GENERAL_REGS:60,60 VFP_D0_D7_REGS:1350,1350 VFP_LO_REGS:1350,1350 ALL_REGS:900,900 MEM:900,900
  a189(r138,l1) costs: GENERAL_REGS:480,480 VFP_D0_D7_REGS:11700,11700 VFP_LO_REGS:11700,11700 ALL_REGS:8100,8100 MEM:7800,7800
  a190(r804,l1) costs: LO_REGS:120,120 HI_REGS:360,360 CALLER_SAVE_REGS:360,360 EVEN_REG:360,360 GENERAL_REGS:240,240 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:1800,1800 MEM:1800,1800
  a191(r569,l1) costs: LO_REGS:915,915 HI_REGS:915,915 CALLER_SAVE_REGS:915,915 EVEN_REG:915,915 GENERAL_REGS:915,915 VFP_LO_REGS:0,0 ALL_REGS:915,915 MEM:610,610
  a192(r571,l1) costs: LO_REGS:510,510 HI_REGS:510,510 CALLER_SAVE_REGS:510,510 EVEN_REG:510,510 GENERAL_REGS:510,510 VFP_LO_REGS:0,0 ALL_REGS:510,510 MEM:340,340
  a193(r265,l1) costs: LO_REGS:3075,3075 HI_REGS:3075,3075 CALLER_SAVE_REGS:3075,3075 EVEN_REG:3075,3075 GENERAL_REGS:3075,3075 VFP_LO_REGS:900,900 ALL_REGS:2955,2955 MEM:2570,2570
  a194(r568,l1) costs: LO_REGS:900,900 HI_REGS:900,900 CALLER_SAVE_REGS:900,900 EVEN_REG:900,900 GENERAL_REGS:900,900 VFP_LO_REGS:0,0 ALL_REGS:900,900 MEM:600,600
  a195(r803,l1) costs: LO_REGS:120,120 HI_REGS:360,360 CALLER_SAVE_REGS:360,360 EVEN_REG:360,360 GENERAL_REGS:240,240 VFP_D0_D7_REGS:2700,2700 VFP_LO_REGS:2700,2700 ALL_REGS:1800,1800 MEM:1800,1800
  a196(r802,l1) costs: LO_REGS:2700,2700 HI_REGS:2700,2700 CALLER_SAVE_REGS:2700,2700 EVEN_REG:2700,2700 GENERAL_REGS:2700,2700 VFP_LO_REGS:120,120 ALL_REGS:1800,1800 MEM:1800,1800
  a197(r155,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1800,1800 VFP_LO_REGS:1800,1800 ALL_REGS:1800,1800 MEM:1200,1200
  a198(r560,l1) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:855,8910 VFP_LO_REGS:855,8910 ALL_REGS:855,8910 MEM:570,5940
  a199(r264,l1) costs: GENERAL_REGS:0,16110 VFP_D0_D7_REGS:855,25020 VFP_LO_REGS:855,25020 ALL_REGS:855,33075 MEM:570,24735
  a200(r154,l1) costs: LO_REGS:855,42828 HI_REGS:855,42828 CALLER_SAVE_REGS:855,42828 EVEN_REG:855,42828 GENERAL_REGS:855,42828 VFP_LO_REGS:0,10203 ALL_REGS:855,42828 MEM:570,31953
  a201(r148,l1) costs: LO_REGS:855,9984 HI_REGS:855,9984 CALLER_SAVE_REGS:855,9984 EVEN_REG:855,9984 GENERAL_REGS:855,9984 VFP_LO_REGS:0,1074 ALL_REGS:855,9984 MEM:570,7014
  a202(r143,l1) costs: LO_REGS:855,9984 HI_REGS:855,9984 CALLER_SAVE_REGS:855,9984 EVEN_REG:855,9984 GENERAL_REGS:855,9984 VFP_LO_REGS:0,1074 ALL_REGS:855,9984 MEM:570,7014
  a203(r147,l1) costs: LO_REGS:855,9984 HI_REGS:855,9984 CALLER_SAVE_REGS:855,9984 EVEN_REG:855,9984 GENERAL_REGS:855,9984 VFP_LO_REGS:0,1074 ALL_REGS:855,9984 MEM:570,7014
  a204(r801,l1) costs: LO_REGS:2565,2565 HI_REGS:2565,2565 CALLER_SAVE_REGS:2565,2565 EVEN_REG:2565,2565 GENERAL_REGS:2565,2565 VFP_LO_REGS:114,114 ALL_REGS:1710,1710 MEM:1710,1710
  a205(r142,l1) costs: LO_REGS:855,9984 HI_REGS:855,9984 CALLER_SAVE_REGS:855,9984 EVEN_REG:855,9984 GENERAL_REGS:855,9984 VFP_LO_REGS:0,1074 ALL_REGS:855,9984 MEM:570,7014
  a206(r800,l1) costs: LO_REGS:2565,2565 HI_REGS:2565,2565 CALLER_SAVE_REGS:2565,2565 EVEN_REG:2565,2565 GENERAL_REGS:2565,2565 VFP_LO_REGS:114,114 ALL_REGS:1710,1710 MEM:1710,1710
  a207(r139,l1) costs: LO_REGS:6750,6750 HI_REGS:7200,7200 CALLER_SAVE_REGS:7200,7200 EVEN_REG:7200,7200 GENERAL_REGS:7200,7200 VFP_D0_D7_REGS:6750,22860 VFP_LO_REGS:6750,22860 ALL_REGS:10125,26235 MEM:7875,18615
  a208(r550,l1) costs: LO_REGS:6750,6750 HI_REGS:6750,6750 CALLER_SAVE_REGS:6750,6750 EVEN_REG:6750,6750 GENERAL_REGS:6750,6750 VFP_LO_REGS:0,0 ALL_REGS:6750,6750 MEM:4500,4500
  a209(r549,l1) costs: LO_REGS:6750,6750 HI_REGS:6750,6750 CALLER_SAVE_REGS:6750,6750 EVEN_REG:6750,6750 GENERAL_REGS:6750,6750 VFP_LO_REGS:0,0 ALL_REGS:6750,6750 MEM:4500,4500
  a210(r548,l1) costs: LO_REGS:10125,10125 HI_REGS:10125,10125 CALLER_SAVE_REGS:10125,10125 EVEN_REG:10125,10125 GENERAL_REGS:10125,10125 VFP_LO_REGS:3375,3375 ALL_REGS:10125,10125 MEM:7875,7875
  a211(r547,l1) costs: LO_REGS:0,0 HI_REGS:450,450 CALLER_SAVE_REGS:450,450 EVEN_REG:450,450 GENERAL_REGS:450,450 VFP_D0_D7_REGS:6750,6750 VFP_LO_REGS:6750,6750 ALL_REGS:6750,6750 MEM:4500,4500
  a212(r799,l1) costs: LO_REGS:300,300 HI_REGS:900,900 CALLER_SAVE_REGS:900,900 EVEN_REG:900,900 GENERAL_REGS:600,600 VFP_D0_D7_REGS:6750,6750 VFP_LO_REGS:6750,6750 ALL_REGS:4500,4500 MEM:4500,4500
  a213(r798,l1) costs: LO_REGS:600,600 HI_REGS:1800,1800 CALLER_SAVE_REGS:1800,1800 EVEN_REG:1800,1800 GENERAL_REGS:1200,1200 VFP_D0_D7_REGS:13500,13500 VFP_LO_REGS:13500,13500 ALL_REGS:9000,9000 MEM:9000,9000
  a214(r797,l1) costs: GENERAL_REGS:600,600 VFP_D0_D7_REGS:13500,13500 VFP_LO_REGS:13500,13500 ALL_REGS:9000,9000 MEM:9000,9000
  a215(r796,l1) costs: LO_REGS:13500,13500 HI_REGS:13500,13500 CALLER_SAVE_REGS:13500,13500 EVEN_REG:13500,13500 GENERAL_REGS:13500,13500 VFP_LO_REGS:1200,1200 ALL_REGS:9600,9600 MEM:9300,9300
  a216(r541,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:0,0
  a217(r795,l1) costs: LO_REGS:4455,4455 HI_REGS:4455,4455 CALLER_SAVE_REGS:4455,4455 EVEN_REG:4455,4455 GENERAL_REGS:4455,4455 VFP_LO_REGS:198,198 ALL_REGS:2970,2970 MEM:2970,2970
  a218(r794,l1) costs: LO_REGS:1683,1683 HI_REGS:1683,1683 CALLER_SAVE_REGS:1683,1683 EVEN_REG:1683,1683 GENERAL_REGS:1683,1683 VFP_D0_D7_REGS:1683,1683 VFP_LO_REGS:1683,1683 ALL_REGS:2970,2970 MEM:3960,3960
  a219(r536,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a220(r534,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a221(r533,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a222(r535,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a223(r261,l1) costs: LO_REGS:18000,18000 HI_REGS:18000,18000 CALLER_SAVE_REGS:18000,18000 EVEN_REG:18000,18000 GENERAL_REGS:18000,18000 VFP_LO_REGS:0,0 ALL_REGS:18000,18000 MEM:12000,12000
  a224(r532,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a225(r793,l1) costs: LO_REGS:13500,13500 HI_REGS:13500,13500 CALLER_SAVE_REGS:13500,13500 EVEN_REG:13500,13500 GENERAL_REGS:13500,13500 VFP_LO_REGS:600,600 ALL_REGS:9000,9000 MEM:9000,9000
  a226(r792,l1) costs: LO_REGS:13500,13500 HI_REGS:13500,13500 CALLER_SAVE_REGS:13500,13500 EVEN_REG:13500,13500 GENERAL_REGS:13500,13500 VFP_LO_REGS:600,600 ALL_REGS:9000,9000 MEM:9000,9000
  a227(r530,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a228(r528,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:6000,6000
  a229(r529,l1) costs: LO_REGS:9000,9000 HI_REGS:9000,9000 CALLER_SAVE_REGS:9000,9000 EVEN_REG:9000,9000 GENERAL_REGS:9000,9000 VFP_LO_REGS:0,0 ALL_REGS:9000,9000 MEM:0,0
  a230(r245,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a231(r247,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a232(r249,l6) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_LO_REGS:0,0 ALL_REGS:270,270 MEM:180,180
  a233(r263,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a234(r269,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:36,36 ALL_REGS:270,270 MEM:360,360
  a235(r270,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:36,36 ALL_REGS:270,270 MEM:360,360
  a236(r271,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2160,2160 VFP_LO_REGS:2160,2160 ALL_REGS:2160,2160 MEM:1440,1440
  a237(r282,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a238(r286,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:2835,2835 VFP_LO_REGS:2835,2835 ALL_REGS:2835,2835 MEM:1890,1890
  a239(r306,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a240(r653,l6) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_LO_REGS:0,0 ALL_REGS:270,270 MEM:180,180
  a241(r739,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a242(r740,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a243(r745,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a244(r746,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a245(r747,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a246(r762,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:180,180
  a247(r774,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a248(r775,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a249(r776,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a250(r777,l6) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a251(r675,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1080,1080 VFP_LO_REGS:1080,1080 ALL_REGS:1080,1080 MEM:720,720
  a252(r676,l6) costs: LO_REGS:0,0 HI_REGS:72,72 CALLER_SAVE_REGS:72,72 EVEN_REG:72,72 GENERAL_REGS:72,72 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:0,0
  a253(r674,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a254(r673,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a255(r669,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:540,540 VFP_LO_REGS:540,540 ALL_REGS:540,540 MEM:360,360
  a256(r663,l6) costs: GENERAL_REGS:0,0 MEM:270,270
  a257(r662,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:0,0 ALL_REGS:540,540 MEM:0,0
  a258(r661,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:0,0 ALL_REGS:540,540 MEM:360,360
  a259(r659,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:0,0 ALL_REGS:540,540 MEM:360,360
  a260(r658,l6) costs: LO_REGS:540,540 HI_REGS:540,540 CALLER_SAVE_REGS:540,540 EVEN_REG:540,540 GENERAL_REGS:540,540 VFP_LO_REGS:0,0 ALL_REGS:540,540 MEM:360,360
  a261(r657,l6) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:540,540 MEM:360,360
  a262(r327,l6) costs: GENERAL_REGS:72,72 VFP_D0_D7_REGS:1620,1620 VFP_LO_REGS:1620,1620 ALL_REGS:1080,1080 MEM:1080,1080
  a263(r656,l6) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:1080,1080 VFP_LO_REGS:1080,1080 ALL_REGS:1080,1080 MEM:720,720
  a264(r245,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a265(r247,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a266(r249,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a267(r263,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a268(r266,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a269(r267,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a270(r282,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a271(r297,l4) costs: LO_REGS:1890,1890 HI_REGS:1890,1890 CALLER_SAVE_REGS:1890,1890 EVEN_REG:1890,1890 GENERAL_REGS:1890,1890 VFP_LO_REGS:0,0 ALL_REGS:1890,1890 MEM:1260,1260
  a272(r302,l4) costs: LO_REGS:630,630 HI_REGS:630,630 CALLER_SAVE_REGS:630,630 EVEN_REG:630,630 GENERAL_REGS:630,630 VFP_LO_REGS:0,0 ALL_REGS:630,630 MEM:420,420
  a273(r306,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a274(r319,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a275(r739,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a276(r740,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a277(r741,l4) costs: LO_REGS:630,630 HI_REGS:630,630 CALLER_SAVE_REGS:630,630 EVEN_REG:630,630 GENERAL_REGS:630,630 VFP_LO_REGS:0,0 ALL_REGS:630,630 MEM:420,420
  a278(r745,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a279(r746,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a280(r747,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a281(r774,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a282(r775,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a283(r776,l4) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a284(r777,l4) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a285(r245,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a286(r247,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a287(r249,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a288(r263,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a289(r266,l3) costs: LO_REGS:555,555 HI_REGS:555,555 CALLER_SAVE_REGS:555,555 EVEN_REG:555,555 GENERAL_REGS:555,555 VFP_LO_REGS:0,0 ALL_REGS:555,555 MEM:370,370
  a290(r267,l3) costs: LO_REGS:0,4680 HI_REGS:0,4680 CALLER_SAVE_REGS:0,4680 EVEN_REG:0,4680 GENERAL_REGS:0,4680 VFP_LO_REGS:0,0 ALL_REGS:0,4680 MEM:0,3120
  a291(r268,l3) costs: LO_REGS:0,810 HI_REGS:0,810 CALLER_SAVE_REGS:0,810 EVEN_REG:0,810 GENERAL_REGS:0,810 VFP_LO_REGS:0,0 ALL_REGS:0,810 MEM:0,540
  a292(r282,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a293(r293,l3) costs: GENERAL_REGS:1110,1110 VFP_D0_D7_REGS:1785,1785 VFP_LO_REGS:1785,1785 ALL_REGS:2340,2340 MEM:1745,1745
  a294(r297,l3) costs: LO_REGS:2955,2955 HI_REGS:2955,2955 CALLER_SAVE_REGS:2955,2955 EVEN_REG:2955,2955 GENERAL_REGS:2955,2955 VFP_LO_REGS:555,555 ALL_REGS:2955,2955 MEM:2155,2155
  a295(r302,l3) costs: LO_REGS:615,5730 HI_REGS:615,5730 CALLER_SAVE_REGS:615,5730 EVEN_REG:615,5730 GENERAL_REGS:615,5730 VFP_LO_REGS:0,0 ALL_REGS:615,5730 MEM:410,3820
  a296(r304,l3) costs: GENERAL_REGS:1110,1110 VFP_D0_D7_REGS:555,5940 VFP_LO_REGS:555,5940 ALL_REGS:1110,6495 MEM:925,4515
  a297(r306,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,810 VFP_LO_REGS:0,810 ALL_REGS:0,810 MEM:0,540
  a298(r319,l3) costs: LO_REGS:0,0 HI_REGS:0,36 CALLER_SAVE_REGS:0,36 EVEN_REG:0,36 GENERAL_REGS:0,36 VFP_D0_D7_REGS:0,4950 VFP_LO_REGS:0,4950 ALL_REGS:0,4950 MEM:0,3300
  a299(r739,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a300(r740,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a301(r741,l3) costs: LO_REGS:1725,1725 HI_REGS:1725,1725 CALLER_SAVE_REGS:1725,1725 EVEN_REG:1725,1725 GENERAL_REGS:1725,1725 VFP_LO_REGS:555,555 ALL_REGS:1725,1725 MEM:1335,1335
  a302(r742,l3) costs: LO_REGS:630,6015 HI_REGS:630,6015 CALLER_SAVE_REGS:630,6015 EVEN_REG:630,6015 GENERAL_REGS:630,6015 VFP_LO_REGS:0,0 ALL_REGS:630,6015 MEM:420,4010
  a303(r745,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a304(r746,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a305(r747,l3) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a306(r769,l3) costs: LO_REGS:0,2250 HI_REGS:0,2250 CALLER_SAVE_REGS:0,2250 EVEN_REG:0,2250 GENERAL_REGS:0,2250 VFP_LO_REGS:0,0 ALL_REGS:0,2250 MEM:0,1500
  a307(r770,l3) costs: LO_REGS:0,1365 HI_REGS:0,1365 CALLER_SAVE_REGS:0,1365 EVEN_REG:0,1365 GENERAL_REGS:0,1365 VFP_LO_REGS:0,0 ALL_REGS:0,1365 MEM:0,910
  a308(r771,l3) costs: LO_REGS:0,1380 HI_REGS:0,1380 CALLER_SAVE_REGS:0,1380 EVEN_REG:0,1380 GENERAL_REGS:0,1380 VFP_LO_REGS:0,0 ALL_REGS:0,1380 MEM:0,920
  a309(r774,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a310(r775,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a311(r776,l3) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a312(r777,l3) costs: LO_REGS:0,5490 HI_REGS:0,5490 CALLER_SAVE_REGS:0,5490 EVEN_REG:0,5490 GENERAL_REGS:0,5490 VFP_LO_REGS:0,0 ALL_REGS:0,5490 MEM:0,3660
  a313(r280,l3) costs: GENERAL_REGS:0,9360 VFP_D0_D7_REGS:555,15465 VFP_LO_REGS:555,15465 ALL_REGS:555,20145 MEM:370,14990
  a314(r743,l3) costs: LO_REGS:0,0 HI_REGS:74,74 CALLER_SAVE_REGS:74,74 EVEN_REG:74,74 GENERAL_REGS:74,74 VFP_D0_D7_REGS:555,10785 VFP_LO_REGS:555,10785 ALL_REGS:555,10785 MEM:370,7190
  a315(r303,l3) costs: GENERAL_REGS:1110,1110 VFP_D0_D7_REGS:555,5670 VFP_LO_REGS:555,5670 ALL_REGS:1110,6225 MEM:925,4335
  a316(r764,l3) costs: LO_REGS:555,861 HI_REGS:555,861 CALLER_SAVE_REGS:555,861 EVEN_REG:555,861 GENERAL_REGS:555,861 VFP_LO_REGS:0,270 ALL_REGS:555,825 MEM:370,730
  a317(r193,l3) costs: LO_REGS:1110,3300 HI_REGS:1110,3300 CALLER_SAVE_REGS:1110,3300 EVEN_REG:1110,3300 GENERAL_REGS:1110,3300 VFP_LO_REGS:0,0 ALL_REGS:1110,3300 MEM:740,2200
  a318(r606,l3) costs: LO_REGS:1110,1110 HI_REGS:1110,1110 CALLER_SAVE_REGS:1110,1110 EVEN_REG:1110,1110 GENERAL_REGS:1110,1110 VFP_LO_REGS:0,0 ALL_REGS:1110,1110 MEM:740,740
  a319(r823,l3) costs: LO_REGS:1665,1665 HI_REGS:1665,1665 CALLER_SAVE_REGS:1665,1665 EVEN_REG:1665,1665 GENERAL_REGS:1665,1665 VFP_LO_REGS:555,555 ALL_REGS:1665,1665 MEM:1295,1295
  a320(r281,l3) costs: LO_REGS:555,21015 HI_REGS:555,21015 CALLER_SAVE_REGS:555,21015 EVEN_REG:555,21015 GENERAL_REGS:555,21015 VFP_LO_REGS:0,0 ALL_REGS:555,21015 MEM:370,14010
  a321(r193,l5) costs: LO_REGS:2190,2190 HI_REGS:2190,2190 CALLER_SAVE_REGS:2190,2190 EVEN_REG:2190,2190 GENERAL_REGS:2190,2190 VFP_LO_REGS:0,0 ALL_REGS:2190,2190 MEM:1460,1460
  a322(r245,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a323(r247,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a324(r249,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a325(r263,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a326(r266,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a327(r267,l5) costs: LO_REGS:4680,4680 HI_REGS:4680,4680 CALLER_SAVE_REGS:4680,4680 EVEN_REG:4680,4680 GENERAL_REGS:4680,4680 VFP_LO_REGS:0,0 ALL_REGS:4680,4680 MEM:3120,3120
  a328(r268,l5) costs: LO_REGS:810,810 HI_REGS:810,810 CALLER_SAVE_REGS:810,810 EVEN_REG:810,810 GENERAL_REGS:810,810 VFP_LO_REGS:0,0 ALL_REGS:810,810 MEM:540,540
  a329(r280,l5) costs: GENERAL_REGS:9360,9360 VFP_D0_D7_REGS:14910,14910 VFP_LO_REGS:14910,14910 ALL_REGS:19590,19590 MEM:14620,14620
  a330(r281,l5) costs: LO_REGS:20460,20460 HI_REGS:20460,20460 CALLER_SAVE_REGS:20460,20460 EVEN_REG:20460,20460 GENERAL_REGS:20460,20460 VFP_LO_REGS:0,0 ALL_REGS:20460,20460 MEM:13640,13640
  a331(r282,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a332(r293,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a333(r297,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a334(r302,l5) costs: LO_REGS:5115,5115 HI_REGS:5115,5115 CALLER_SAVE_REGS:5115,5115 EVEN_REG:5115,5115 GENERAL_REGS:5115,5115 VFP_LO_REGS:0,0 ALL_REGS:5115,5115 MEM:3410,3410
  a335(r303,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:5115,5115 VFP_LO_REGS:5115,5115 ALL_REGS:5115,5115 MEM:3410,3410
  a336(r304,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:5385,5385 VFP_LO_REGS:5385,5385 ALL_REGS:5385,5385 MEM:3590,3590
  a337(r306,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:810,810 VFP_LO_REGS:810,810 ALL_REGS:810,810 MEM:540,540
  a338(r319,l5) costs: LO_REGS:0,0 HI_REGS:36,36 CALLER_SAVE_REGS:36,36 EVEN_REG:36,36 GENERAL_REGS:36,36 VFP_D0_D7_REGS:4950,4950 VFP_LO_REGS:4950,4950 ALL_REGS:4950,4950 MEM:3300,3300
  a339(r739,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a340(r740,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a341(r742,l5) costs: LO_REGS:5385,5385 HI_REGS:5385,5385 CALLER_SAVE_REGS:5385,5385 EVEN_REG:5385,5385 GENERAL_REGS:5385,5385 VFP_LO_REGS:0,0 ALL_REGS:5385,5385 MEM:3590,3590
  a342(r743,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:10230,10230 VFP_LO_REGS:10230,10230 ALL_REGS:10230,10230 MEM:6820,6820
  a343(r745,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a344(r746,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a345(r747,l5) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a346(r764,l5) costs: LO_REGS:306,306 HI_REGS:306,306 CALLER_SAVE_REGS:306,306 EVEN_REG:306,306 GENERAL_REGS:306,306 VFP_LO_REGS:270,270 ALL_REGS:270,270 MEM:360,360
  a347(r769,l5) costs: LO_REGS:2250,2250 HI_REGS:2250,2250 CALLER_SAVE_REGS:2250,2250 EVEN_REG:2250,2250 GENERAL_REGS:2250,2250 VFP_LO_REGS:0,0 ALL_REGS:2250,2250 MEM:1500,1500
  a348(r770,l5) costs: LO_REGS:1365,1365 HI_REGS:1365,1365 CALLER_SAVE_REGS:1365,1365 EVEN_REG:1365,1365 GENERAL_REGS:1365,1365 VFP_LO_REGS:0,0 ALL_REGS:1365,1365 MEM:910,910
  a349(r771,l5) costs: LO_REGS:1380,1380 HI_REGS:1380,1380 CALLER_SAVE_REGS:1380,1380 EVEN_REG:1380,1380 GENERAL_REGS:1380,1380 VFP_LO_REGS:0,0 ALL_REGS:1380,1380 MEM:920,920
  a350(r774,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a351(r775,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a352(r776,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a353(r777,l5) costs: LO_REGS:5490,5490 HI_REGS:5490,5490 CALLER_SAVE_REGS:5490,5490 EVEN_REG:5490,5490 GENERAL_REGS:5490,5490 VFP_LO_REGS:0,0 ALL_REGS:5490,5490 MEM:3660,3660
  a354(r273,l5) costs: GENERAL_REGS:8340,8340 VFP_D0_D7_REGS:14400,14400 VFP_LO_REGS:14400,14400 ALL_REGS:18570,18570 MEM:13770,13770
  a355(r274,l5) costs: GENERAL_REGS:540,540 VFP_D0_D7_REGS:7125,7125 VFP_LO_REGS:7125,7125 ALL_REGS:7395,7395 MEM:5020,5020
  a356(r275,l5) costs: GENERAL_REGS:540,540 VFP_D0_D7_REGS:7125,7125 VFP_LO_REGS:7125,7125 ALL_REGS:7395,7395 MEM:5020,5020
  a357(r310,l5) costs: LO_REGS:270,270 HI_REGS:270,270 CALLER_SAVE_REGS:270,270 EVEN_REG:270,270 GENERAL_REGS:270,270 VFP_D0_D7_REGS:270,270 VFP_LO_REGS:270,270 ALL_REGS:540,540 MEM:360,360
  a358(r191,l5) costs: LO_REGS:12240,12240 HI_REGS:12240,12240 CALLER_SAVE_REGS:12240,12240 EVEN_REG:12240,12240 GENERAL_REGS:12240,12240 VFP_LO_REGS:270,270 ALL_REGS:12240,12240 MEM:8250,8250
  a359(r811,l5) costs: GENERAL_REGS:36,36 VFP_D0_D7_REGS:810,810 VFP_LO_REGS:810,810 ALL_REGS:540,540 MEM:540,540
  a360(r642,l5) costs: LO_REGS:630,630 HI_REGS:630,630 CALLER_SAVE_REGS:630,630 EVEN_REG:630,630 GENERAL_REGS:630,630 MEM:378,378
  a361(r638,l5) costs: LO_REGS:630,630 HI_REGS:630,630 CALLER_SAVE_REGS:630,630 EVEN_REG:630,630 GENERAL_REGS:630,630 MEM:378,378
  a362(r635,l5) costs: LO_REGS:630,630 HI_REGS:630,630 CALLER_SAVE_REGS:630,630 EVEN_REG:630,630 GENERAL_REGS:630,630 MEM:378,378
  a363(r640,l5) costs: LO_REGS:720,720 HI_REGS:720,720 CALLER_SAVE_REGS:720,720 EVEN_REG:720,720 GENERAL_REGS:720,720 VFP_LO_REGS:180,180 ALL_REGS:720,720 MEM:540,540
  a364(r317,l5) costs: LO_REGS:6855,6855 HI_REGS:6855,6855 CALLER_SAVE_REGS:6855,6855 EVEN_REG:6855,6855 GENERAL_REGS:6855,6855 VFP_LO_REGS:1920,1920 ALL_REGS:6855,6855 MEM:5210,5210
  a365(r189,l5) costs: LO_REGS:720,720 HI_REGS:720,720 CALLER_SAVE_REGS:720,720 EVEN_REG:720,720 GENERAL_REGS:720,720 VFP_LO_REGS:180,180 ALL_REGS:720,720 MEM:540,540
  a366(r633,l5) costs: LO_REGS:810,810 HI_REGS:810,810 CALLER_SAVE_REGS:810,810 EVEN_REG:810,810 GENERAL_REGS:810,810 VFP_LO_REGS:270,270 ALL_REGS:810,810 MEM:630,630
  a367(r186,l5) costs: LO_REGS:720,720 HI_REGS:720,720 CALLER_SAVE_REGS:720,720 EVEN_REG:720,720 GENERAL_REGS:720,720 VFP_LO_REGS:180,180 ALL_REGS:720,720 MEM:540,540
  a368(r632,l5) costs: LO_REGS:810,810 HI_REGS:810,810 CALLER_SAVE_REGS:810,810 EVEN_REG:810,810 GENERAL_REGS:810,810 VFP_LO_REGS:270,270 ALL_REGS:810,810 MEM:630,630
  a369(r627,l5) costs: LO_REGS:14040,14040 HI_REGS:14040,14040 CALLER_SAVE_REGS:14040,14040 EVEN_REG:14040,14040 GENERAL_REGS:14040,14040 VFP_LO_REGS:4680,4680 ALL_REGS:14040,14040 MEM:10920,10920
  a370(r626,l5) costs: LO_REGS:1380,1380 HI_REGS:1380,1380 CALLER_SAVE_REGS:1380,1380 EVEN_REG:1380,1380 GENERAL_REGS:1380,1380 VFP_D0_D7_REGS:1380,1380 VFP_LO_REGS:1380,1380 ALL_REGS:2760,2760 MEM:1840,1840
  a371(r625,l5) costs: LO_REGS:3220,3220 HI_REGS:3220,3220 CALLER_SAVE_REGS:3220,3220 EVEN_REG:3220,3220 GENERAL_REGS:3220,3220 MEM:1932,1932
  a372(r622,l5) costs: LO_REGS:3680,3680 HI_REGS:3680,3680 CALLER_SAVE_REGS:3680,3680 EVEN_REG:3680,3680 GENERAL_REGS:3680,3680 VFP_LO_REGS:920,920 ALL_REGS:3680,3680 MEM:2760,2760
  a373(r181,l5) costs: LO_REGS:8130,8130 HI_REGS:8130,8130 CALLER_SAVE_REGS:8130,8130 EVEN_REG:8130,8130 GENERAL_REGS:8130,8130 VFP_LO_REGS:2250,2250 ALL_REGS:8130,8130 MEM:6170,6170
  a374(r615,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15345,15345 VFP_LO_REGS:15345,15345 ALL_REGS:15345,15345 MEM:10230,10230
  a375(r612,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15345,15345 VFP_LO_REGS:15345,15345 ALL_REGS:15345,15345 MEM:10230,10230
  a376(r609,l5) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:15345,15345 VFP_LO_REGS:15345,15345 ALL_REGS:15345,15345 MEM:10230,10230
  a377(r608,l5) costs: LO_REGS:5115,5115 HI_REGS:5115,5115 CALLER_SAVE_REGS:5115,5115 EVEN_REG:5115,5115 GENERAL_REGS:5115,5115 VFP_D0_D7_REGS:5115,5115 VFP_LO_REGS:5115,5115 ALL_REGS:10230,10230 MEM:6820,6820
  a378(r138,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a379(r139,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:16110,16110 VFP_LO_REGS:16110,16110 ALL_REGS:16110,16110 MEM:10740,10740
  a380(r142,l2) costs: LO_REGS:9129,9129 HI_REGS:9129,9129 CALLER_SAVE_REGS:9129,9129 EVEN_REG:9129,9129 GENERAL_REGS:9129,9129 VFP_LO_REGS:1074,1074 ALL_REGS:9129,9129 MEM:6444,6444
  a381(r143,l2) costs: LO_REGS:9129,9129 HI_REGS:9129,9129 CALLER_SAVE_REGS:9129,9129 EVEN_REG:9129,9129 GENERAL_REGS:9129,9129 VFP_LO_REGS:1074,1074 ALL_REGS:9129,9129 MEM:6444,6444
  a382(r147,l2) costs: LO_REGS:9129,9129 HI_REGS:9129,9129 CALLER_SAVE_REGS:9129,9129 EVEN_REG:9129,9129 GENERAL_REGS:9129,9129 VFP_LO_REGS:1074,1074 ALL_REGS:9129,9129 MEM:6444,6444
  a383(r148,l2) costs: LO_REGS:9129,9129 HI_REGS:9129,9129 CALLER_SAVE_REGS:9129,9129 EVEN_REG:9129,9129 GENERAL_REGS:9129,9129 VFP_LO_REGS:1074,1074 ALL_REGS:9129,9129 MEM:6444,6444
  a384(r154,l2) costs: LO_REGS:41973,41973 HI_REGS:41973,41973 CALLER_SAVE_REGS:41973,41973 EVEN_REG:41973,41973 GENERAL_REGS:41973,41973 VFP_LO_REGS:10203,10203 ALL_REGS:41973,41973 MEM:31383,31383
  a385(r245,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a386(r247,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a387(r248,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a388(r263,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a389(r264,l2) costs: GENERAL_REGS:16110,16110 VFP_D0_D7_REGS:24165,24165 VFP_LO_REGS:24165,24165 ALL_REGS:32220,32220 MEM:24165,24165
  a390(r282,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a391(r306,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a392(r560,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:8055,8055 VFP_LO_REGS:8055,8055 ALL_REGS:8055,8055 MEM:5370,5370
  a393(r738,l2) costs: LO_REGS:7605,7605 HI_REGS:7605,7605 CALLER_SAVE_REGS:7605,7605 EVEN_REG:7605,7605 GENERAL_REGS:7605,7605 VFP_LO_REGS:0,0 ALL_REGS:7605,7605 MEM:5070,5070
  a394(r739,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a395(r740,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a396(r744,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:8055,8055 VFP_LO_REGS:8055,8055 ALL_REGS:8055,8055 MEM:5370,5370
  a397(r745,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a398(r746,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a399(r747,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a400(r774,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a401(r775,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a402(r776,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a403(r777,l2) costs: LO_REGS:0,0 HI_REGS:0,0 CALLER_SAVE_REGS:0,0 EVEN_REG:0,0 GENERAL_REGS:0,0 VFP_LO_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a404(r563,l2) costs: LO_REGS:0,0 HI_REGS:1074,1074 CALLER_SAVE_REGS:1074,1074 EVEN_REG:1074,1074 GENERAL_REGS:1074,1074 VFP_D0_D7_REGS:16110,16110 VFP_LO_REGS:16110,16110 ALL_REGS:16110,16110 MEM:10740,10740
  a405(r558,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:16109,16109 VFP_LO_REGS:16109,16109 ALL_REGS:16109,16109 MEM:10740,10740
  a406(r561,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:16109,16109 VFP_LO_REGS:16109,16109 ALL_REGS:16109,16109 MEM:10740,10740
  a407(r556,l2) costs: LO_REGS:8055,8055 HI_REGS:8055,8055 CALLER_SAVE_REGS:8055,8055 EVEN_REG:8055,8055 GENERAL_REGS:8055,8055 VFP_D0_D7_REGS:8055,8055 VFP_LO_REGS:8055,8055 ALL_REGS:16110,16110 MEM:10740,10740
  a408(r149,l2) costs: LO_REGS:17184,17184 HI_REGS:17184,17184 CALLER_SAVE_REGS:17184,17184 EVEN_REG:17184,17184 GENERAL_REGS:17184,17184 VFP_LO_REGS:1074,1074 ALL_REGS:17184,17184 MEM:11814,11814
  a409(r146,l2) costs: GENERAL_REGS:0,0 VFP_D0_D7_REGS:16110,16110 VFP_LO_REGS:16110,16110 ALL_REGS:16110,16110 MEM:10740,10740
  a410(r554,l2) costs: LO_REGS:8055,8055 HI_REGS:8055,8055 CALLER_SAVE_REGS:8055,8055 EVEN_REG:8055,8055 GENERAL_REGS:8055,8055 VFP_D0_D7_REGS:8055,8055 VFP_LO_REGS:8055,8055 ALL_REGS:16110,16110 MEM:10740,10740
  a411(r144,l2) costs: LO_REGS:17184,17184 HI_REGS:17184,17184 CALLER_SAVE_REGS:17184,17184 EVEN_REG:17184,17184 GENERAL_REGS:17184,17184 VFP_LO_REGS:1074,1074 ALL_REGS:17184,17184 MEM:11814,11814
  a412(r564,l2) costs: GENERAL_REGS:0,0 MEM:10740,10740

   Insn 1390(l0): point = 0
   Insn 1389(l0): point = 2
   Insn 1387(l0): point = 4
   Insn 1386(l0): point = 6
   Insn 1381(l0): point = 9
   Insn 1380(l0): point = 11
   Insn 1378(l0): point = 13
   Insn 1377(l0): point = 15
   Insn 1374(l0): point = 18
   Insn 1338(l0): point = 21
   Insn 1336(l0): point = 23
   Insn 1334(l0): point = 25
   Insn 1333(l0): point = 27
   Insn 657(l0): point = 30
   Insn 559(l0): point = 32
   Insn 526(l0): point = 34
   Insn 4(l0): point = 36
   Insn 1557(l0): point = 38
   Insn 1556(l0): point = 40
   Insn 937(l0): point = 42
   Insn 1550(l0): point = 44
   Insn 3(l0): point = 46
   Insn 466(l0): point = 49
   Insn 465(l0): point = 51
   Insn 464(l0): point = 53
   Insn 463(l0): point = 55
   Insn 453(l0): point = 57
   Insn 452(l0): point = 59
   Insn 451(l0): point = 61
   Insn 450(l0): point = 63
   Insn 442(l0): point = 65
   Insn 441(l0): point = 67
   Insn 440(l0): point = 69
   Insn 439(l0): point = 71
   Insn 434(l0): point = 73
   Insn 1719(l0): point = 76
   Insn 383(l0): point = 79
   Insn 1828(l0): point = 81
   Insn 1827(l0): point = 83
   Insn 381(l0): point = 85
   Insn 380(l0): point = 87
   Insn 1721(l0): point = 90
   Insn 424(l0): point = 92
   Insn 423(l0): point = 94
   Insn 422(l0): point = 96
   Insn 421(l0): point = 98
   Insn 411(l0): point = 100
   Insn 410(l0): point = 102
   Insn 409(l0): point = 104
   Insn 408(l0): point = 106
   Insn 400(l0): point = 108
   Insn 399(l0): point = 110
   Insn 398(l0): point = 112
   Insn 397(l0): point = 114
   Insn 392(l0): point = 116
   Insn 366(l0): point = 119
   Insn 1830(l0): point = 121
   Insn 1829(l0): point = 123
   Insn 364(l0): point = 125
   Insn 363(l0): point = 127
   Insn 353(l0): point = 130
   Insn 352(l0): point = 132
   Insn 351(l0): point = 134
   Insn 350(l0): point = 136
   Insn 340(l0): point = 138
   Insn 339(l0): point = 140
   Insn 338(l0): point = 142
   Insn 337(l0): point = 144
   Insn 329(l0): point = 146
   Insn 328(l0): point = 148
   Insn 327(l0): point = 150
   Insn 326(l0): point = 152
   Insn 321(l0): point = 154
   Insn 1712(l0): point = 157
   Insn 228(l0): point = 160
   Insn 1832(l0): point = 162
   Insn 1831(l0): point = 164
   Insn 226(l0): point = 166
   Insn 225(l0): point = 168
   Insn 1714(l0): point = 171
   Insn 269(l0): point = 173
   Insn 268(l0): point = 175
   Insn 267(l0): point = 177
   Insn 266(l0): point = 179
   Insn 256(l0): point = 181
   Insn 255(l0): point = 183
   Insn 254(l0): point = 185
   Insn 253(l0): point = 187
   Insn 245(l0): point = 189
   Insn 244(l0): point = 191
   Insn 243(l0): point = 193
   Insn 242(l0): point = 195
   Insn 237(l0): point = 197
   Insn 211(l0): point = 200
   Insn 1834(l0): point = 202
   Insn 1833(l0): point = 204
   Insn 209(l0): point = 206
   Insn 1716(l0): point = 209
   Insn 311(l0): point = 211
   Insn 310(l0): point = 213
   Insn 309(l0): point = 215
   Insn 308(l0): point = 217
   Insn 298(l0): point = 219
   Insn 297(l0): point = 221
   Insn 296(l0): point = 223
   Insn 295(l0): point = 225
   Insn 287(l0): point = 227
   Insn 286(l0): point = 229
   Insn 285(l0): point = 231
   Insn 284(l0): point = 233
   Insn 279(l0): point = 235
   Insn 202(l0): point = 238
   Insn 1836(l0): point = 240
   Insn 1835(l0): point = 242
   Insn 200(l0): point = 244
   Insn 191(l0): point = 247
   Insn 190(l0): point = 249
   Insn 189(l0): point = 251
   Insn 188(l0): point = 253
   Insn 178(l0): point = 255
   Insn 177(l0): point = 257
   Insn 176(l0): point = 259
   Insn 175(l0): point = 261
   Insn 167(l0): point = 263
   Insn 166(l0): point = 265
   Insn 165(l0): point = 267
   Insn 164(l0): point = 269
   Insn 159(l0): point = 271
   Insn 151(l0): point = 274
   Insn 1838(l0): point = 276
   Insn 1837(l0): point = 278
   Insn 141(l0): point = 280
   Insn 136(l0): point = 282
   Insn 140(l0): point = 284
   Insn 1651(l0): point = 286
   Insn 135(l0): point = 288
   Insn 134(l0): point = 290
   Insn 1650(l0): point = 292
   Insn 132(l0): point = 294
   Insn 131(l0): point = 296
   Insn 1649(l0): point = 298
   Insn 129(l0): point = 300
   Insn 108(l0): point = 302
   Insn 128(l0): point = 304
   Insn 106(l0): point = 306
   Insn 126(l0): point = 308
   Insn 119(l0): point = 310
   Insn 125(l0): point = 312
   Insn 118(l0): point = 314
   Insn 117(l0): point = 316
   Insn 124(l0): point = 318
   Insn 123(l0): point = 320
   Insn 1648(l0): point = 322
   Insn 105(l0): point = 324
   Insn 104(l0): point = 326
   Insn 1647(l0): point = 328
   Insn 102(l0): point = 330
   Insn 101(l0): point = 332
   Insn 1646(l0): point = 334
   Insn 99(l0): point = 336
   Insn 84(l0): point = 338
   Insn 98(l0): point = 340
   Insn 82(l0): point = 342
   Insn 96(l0): point = 344
   Insn 92(l0): point = 346
   Insn 95(l0): point = 348
   Insn 91(l0): point = 350
   Insn 94(l0): point = 352
   Insn 1645(l0): point = 354
   Insn 81(l0): point = 356
   Insn 80(l0): point = 358
   Insn 1644(l0): point = 360
   Insn 78(l0): point = 362
   Insn 77(l0): point = 364
   Insn 1643(l0): point = 366
   Insn 75(l0): point = 368
   Insn 60(l0): point = 370
   Insn 74(l0): point = 372
   Insn 58(l0): point = 374
   Insn 72(l0): point = 376
   Insn 68(l0): point = 378
   Insn 71(l0): point = 380
   Insn 67(l0): point = 382
   Insn 70(l0): point = 384
   Insn 1642(l0): point = 386
   Insn 57(l0): point = 388
   Insn 56(l0): point = 390
   Insn 1641(l0): point = 392
   Insn 54(l0): point = 394
   Insn 53(l0): point = 396
   Insn 1640(l0): point = 398
   Insn 51(l0): point = 400
   Insn 50(l0): point = 402
   Insn 44(l0): point = 404
   Insn 48(l0): point = 406
   Insn 43(l0): point = 408
   Insn 47(l0): point = 410
   Insn 37(l0): point = 412
   Insn 46(l0): point = 414
   Insn 39(l0): point = 416
   Insn 36(l0): point = 418
   Insn 38(l0): point = 420
   Insn 42(l0): point = 422
   Insn 25(l1): point = 425
   Insn 24(l1): point = 427
   Insn 1140(l1): point = 429
   Insn 1139(l1): point = 431
   Insn 1083(l1): point = 433
   Insn 1088(l1): point = 436
   Insn 1082(l1): point = 439
   Insn 1080(l1): point = 441
   Insn 1079(l1): point = 443
   Insn 1087(l1): point = 445
   Insn 1081(l1): point = 447
   Insn 1739(l1): point = 450
   Insn 23(l1): point = 452
   Insn 845(l1): point = 454
   Insn 1560(l1): point = 456
   Insn 844(l1): point = 458
   Insn 912(l1): point = 460
   Insn 20(l1): point = 462
   Insn 906(l1): point = 464
   Insn 22(l1): point = 466
   Insn 618(l1): point = 469
   Insn 5(l1): point = 471
   Insn 1558(l1): point = 473
   Insn 6(l1): point = 475
   Insn 607(l1): point = 477
   Insn 602(l1): point = 479
   Insn 605(l1): point = 481
   Insn 1661(l1): point = 483
   Insn 604(l1): point = 485
   Insn 603(l1): point = 487
   Insn 600(l1): point = 489
   Insn 1660(l1): point = 491
   Insn 599(l1): point = 493
   Insn 598(l1): point = 495
   Insn 517(l1): point = 498
   Insn 1826(l1): point = 500
   Insn 1825(l1): point = 502
   Insn 513(l1): point = 504
   Insn 515(l1): point = 506
   Insn 512(l1): point = 508
   Insn 514(l1): point = 510
   Insn 511(l1): point = 512
   Insn 1653(l1): point = 514
   Insn 509(l1): point = 516
   Insn 505(l1): point = 518
   Insn 1652(l1): point = 520
   Insn 504(l1): point = 522
   Insn 503(l1): point = 524
   Insn 500(l1): point = 526
   Insn 501(l1): point = 528
   Insn 499(l1): point = 530
   Insn 483(l1): point = 532
   Insn 1763(l1): point = 535
   Insn 1366(l1): point = 537
   Insn 1364(l1): point = 539
   Insn 1361(l1): point = 542
   Insn 1360(l1): point = 544
   Insn 1359(l1): point = 546
   Insn 1355(l1): point = 548
   Insn 1351(l1): point = 551
   Insn 1350(l1): point = 553
   Insn 1347(l1): point = 556
   Insn 1346(l1): point = 558
   Insn 1343(l1): point = 560
   Insn 1330(l1): point = 563
   Insn 1328(l1): point = 565
   Insn 1323(l1): point = 568
   Insn 1778(l1): point = 570
   Insn 1777(l1): point = 572
   Insn 1321(l1): point = 574
   Insn 1316(l1): point = 577
   Insn 1680(l1): point = 579
   Insn 1314(l1): point = 581
   Insn 1311(l1): point = 583
   Insn 1310(l1): point = 585
   Insn 1309(l1): point = 587
   Insn 1679(l1): point = 589
   Insn 1307(l1): point = 591
   Insn 1306(l1): point = 593
   Insn 1305(l1): point = 595
   Insn 1678(l1): point = 597
   Insn 1304(l1): point = 599
   Insn 1302(l1): point = 601
   Insn 1300(l1): point = 603
   Insn 1299(l1): point = 605
   Insn 1167(l1): point = 608
   Insn 1166(l1): point = 610
   Insn 1165(l1): point = 612
   Insn 1761(l1): point = 615
   Insn 1563(l1): point = 617
   Insn 1076(l1): point = 620
   Insn 1075(l1): point = 622
   Insn 1069(l1): point = 625
   Insn 839(l1): point = 628
   Insn 1810(l1): point = 630
   Insn 1809(l1): point = 632
   Insn 836(l1): point = 634
   Insn 835(l1): point = 636
   Insn 823(l1): point = 638
   Insn 1670(l1): point = 640
   Insn 822(l1): point = 642
   Insn 819(l1): point = 644
   Insn 817(l1): point = 646
   Insn 814(l1): point = 648
   Insn 821(l1): point = 651
   Insn 813(l1): point = 653
   Insn 812(l1): point = 655
   Insn 1734(l1): point = 658
   Insn 17(l1): point = 660
   Insn 792(l1): point = 662
   Insn 1765(l1): point = 665
   Insn 1400(l1): point = 667
   Insn 1399(l1): point = 669
   Insn 788(l1): point = 672
   Insn 787(l1): point = 674
   Insn 786(l1): point = 676
   Insn 1755(l1): point = 679
   Insn 1758(l1): point = 682
   Insn 1770(l1): point = 685
   Insn 1564(l1): point = 688
   Insn 584(l1): point = 691
   Insn 1824(l1): point = 693
   Insn 1823(l1): point = 695
   Insn 581(l1): point = 697
   Insn 580(l1): point = 700
   Insn 579(l1): point = 702
   Insn 578(l1): point = 704
   Insn 582(l1): point = 706
   Insn 1736(l1): point = 709
   Insn 1559(l1): point = 711
   Insn 806(l1): point = 714
   Insn 805(l1): point = 716
   Insn 802(l1): point = 718
   Insn 801(l1): point = 720
   Insn 572(l1): point = 723
   Insn 1659(l1): point = 725
   Insn 569(l1): point = 727
   Insn 568(l1): point = 729
   Insn 567(l1): point = 731
   Insn 564(l1): point = 734
   Insn 1658(l1): point = 736
   Insn 561(l1): point = 738
   Insn 1626(l1): point = 740
   Insn 557(l1): point = 742
   Insn 1657(l1): point = 744
   Insn 556(l1): point = 746
   Insn 555(l1): point = 748
   Insn 550(l1): point = 750
   Insn 546(l1): point = 752
   Insn 1566(l1): point = 754
   Insn 552(l1): point = 756
   Insn 1656(l1): point = 758
   Insn 545(l1): point = 760
   Insn 544(l1): point = 762
   Insn 542(l1): point = 764
   Insn 535(l1): point = 767
   Insn 1655(l1): point = 769
   Insn 534(l1): point = 771
   Insn 533(l1): point = 773
   Insn 1654(l1): point = 775
   Insn 531(l1): point = 777
   Insn 528(l1): point = 779
   Insn 1625(l1): point = 781
   Insn 524(l1): point = 783
   Insn 523(l1): point = 785
   Insn 1767(l1): point = 788
   Insn 1409(l1): point = 790
   Insn 1408(l1): point = 792
   Insn 1565(l1): point = 794
   Insn 782(l1): point = 797
   Insn 781(l1): point = 799
   Insn 776(l1): point = 802
   Insn 1812(l1): point = 804
   Insn 1811(l1): point = 806
   Insn 773(l1): point = 808
   Insn 768(l1): point = 811
   Insn 1814(l1): point = 813
   Insn 1813(l1): point = 815
   Insn 764(l1): point = 817
   Insn 762(l1): point = 819
   Insn 755(l1): point = 821
   Insn 754(l1): point = 823
   Insn 766(l1): point = 825
   Insn 750(l1): point = 827
   Insn 1669(l1): point = 829
   Insn 749(l1): point = 831
   Insn 746(l1): point = 833
   Insn 745(l1): point = 835
   Insn 744(l1): point = 837
   Insn 1668(l1): point = 839
   Insn 742(l1): point = 841
   Insn 741(l1): point = 843
   Insn 738(l1): point = 845
   Insn 739(l1): point = 847
   Insn 1667(l1): point = 849
   Insn 737(l1): point = 851
   Insn 735(l1): point = 853
   Insn 733(l1): point = 855
   Insn 731(l1): point = 857
   Insn 730(l1): point = 859
   Insn 729(l1): point = 861
   Insn 732(l1): point = 863
   Insn 1666(l1): point = 865
   Insn 727(l1): point = 867
   Insn 726(l1): point = 869
   Insn 725(l1): point = 871
   Insn 724(l1): point = 873
   Insn 723(l1): point = 875
   Insn 722(l1): point = 877
   Insn 711(l1): point = 880
   Insn 1665(l1): point = 882
   Insn 710(l1): point = 884
   Insn 707(l1): point = 886
   Insn 705(l1): point = 888
   Insn 706(l1): point = 890
   Insn 699(l1): point = 893
   Insn 1664(l1): point = 895
   Insn 696(l1): point = 897
   Insn 695(l1): point = 899
   Insn 694(l1): point = 901
   Insn 686(l1): point = 903
   Insn 15(l1): point = 906
   Insn 16(l1): point = 908
   Insn 1728(l1): point = 911
   Insn 680(l1): point = 913
   Insn 679(l1): point = 915
   Insn 677(l1): point = 918
   Insn 1816(l1): point = 920
   Insn 1815(l1): point = 922
   Insn 1730(l1): point = 925
   Insn 14(l1): point = 927
   Insn 13(l1): point = 929
   Insn 1732(l1): point = 932
   Insn 12(l1): point = 934
   Insn 11(l1): point = 936
   Insn 672(l1): point = 939
   Insn 1818(l1): point = 941
   Insn 1817(l1): point = 943
   Insn 670(l1): point = 945
   Insn 667(l1): point = 947
   Insn 666(l1): point = 950
   Insn 662(l1): point = 953
   Insn 1663(l1): point = 955
   Insn 659(l1): point = 957
   Insn 1627(l1): point = 959
   Insn 654(l1): point = 961
   Insn 653(l1): point = 963
   Insn 650(l1): point = 965
   Insn 1662(l1): point = 967
   Insn 648(l1): point = 969
   Insn 1585(l1): point = 971
   Insn 1584(l1): point = 973
   Insn 639(l1): point = 975
   Insn 647(l1): point = 977
   Insn 7(l1): point = 980
   Insn 1724(l1): point = 983
   Insn 9(l1): point = 985
   Insn 1726(l1): point = 988
   Insn 8(l1): point = 990
   Insn 593(l1): point = 993
   Insn 1822(l1): point = 995
   Insn 1821(l1): point = 997
   Insn 1176(l1): point = 1000
   Insn 1786(l1): point = 1002
   Insn 1785(l1): point = 1004
   Insn 1174(l1): point = 1006
   Insn 1296(l1): point = 1009
   Insn 1294(l1): point = 1011
   Insn 1292(l1): point = 1013
   Insn 1290(l1): point = 1015
   Insn 1289(l1): point = 1017
   Insn 1283(l1): point = 1019
   Insn 1288(l1): point = 1021
   Insn 1287(l1): point = 1023
   Insn 1285(l1): point = 1025
   Insn 1282(l1): point = 1027
   Insn 1279(l1): point = 1029
   Insn 1281(l1): point = 1031
   Insn 1278(l1): point = 1033
   Insn 1277(l1): point = 1035
   Insn 1268(l1): point = 1038
   Insn 1267(l1): point = 1040
   Insn 1266(l1): point = 1042
   Insn 1677(l1): point = 1044
   Insn 1265(l1): point = 1046
   Insn 1262(l1): point = 1048
   Insn 1261(l1): point = 1050
   Insn 1260(l1): point = 1052
   Insn 1676(l1): point = 1054
   Insn 1258(l1): point = 1056
   Insn 1257(l1): point = 1058
   Insn 1256(l1): point = 1060
   Insn 1675(l1): point = 1062
   Insn 1255(l1): point = 1064
   Insn 1253(l1): point = 1066
   Insn 1251(l1): point = 1068
   Insn 1250(l1): point = 1070
   Insn 1247(l1): point = 1073
   Insn 1599(l1): point = 1075
   Insn 1245(l1): point = 1077
   Insn 1243(l1): point = 1079
   Insn 1241(l1): point = 1081
   Insn 1227(l1): point = 1083
   Insn 1233(l1): point = 1085
   Insn 1232(l1): point = 1087
   Insn 1231(l1): point = 1089
   Insn 1240(l1): point = 1091
   Insn 1239(l1): point = 1093
   Insn 1238(l1): point = 1095
   Insn 1236(l1): point = 1097
   Insn 1229(l1): point = 1099
   Insn 1234(l1): point = 1101
   Insn 1224(l1): point = 1103
   Insn 1228(l1): point = 1105
   Insn 1220(l1): point = 1107
   Insn 1783(l1): point = 1109
   Insn 1782(l1): point = 1111
   Insn 1223(l1): point = 1113
   Insn 1219(l1): point = 1115
   Insn 1210(l1): point = 1117
   Insn 1674(l1): point = 1119
   Insn 1209(l1): point = 1121
   Insn 1592(l1): point = 1123
   Insn 1781(l1): point = 1125
   Insn 1780(l1): point = 1127
   Insn 1199(l1): point = 1129
   Insn 1208(l1): point = 1131
   Insn 1673(l1): point = 1133
   Insn 1198(l1): point = 1135
   Insn 1197(l1): point = 1137
   Insn 1196(l1): point = 1139
   Insn 1672(l1): point = 1141
   Insn 1195(l1): point = 1143
   Insn 1192(l1): point = 1145
   Insn 1632(l1): point = 1147
   Insn 1188(l1): point = 1149
   Insn 1187(l1): point = 1151
   Insn 1100(l6): point = 1154
   Insn 1129(l6): point = 1156
   Insn 1103(l6): point = 1158
   Insn 1099(l6): point = 1160
   Insn 1098(l6): point = 1162
   Insn 1160(l6): point = 1165
   Insn 1159(l6): point = 1167
   Insn 1157(l6): point = 1169
   Insn 1154(l6): point = 1171
   Insn 1150(l6): point = 1174
   Insn 1146(l6): point = 1176
   Insn 1145(l6): point = 1178
   Insn 1144(l6): point = 1180
   Insn 1143(l6): point = 1182
   Insn 1142(l6): point = 1184
   Insn 1141(l6): point = 1186
   Insn 1136(l6): point = 1188
   Insn 1149(l6): point = 1190
   Insn 1148(l6): point = 1192
   Insn 1147(l6): point = 1194
   Insn 1130(l6): point = 1196
   Insn 1123(l6): point = 1199
   Insn 1115(l6): point = 1202
   Insn 1788(l6): point = 1204
   Insn 1787(l6): point = 1206
   Insn 1112(l6): point = 1208
   Insn 1111(l6): point = 1210
   Insn 1109(l6): point = 1212
   Insn 1108(l6): point = 1214
   Insn 1121(l6): point = 1216
   Insn 1113(l6): point = 1218
   Insn 1033(l4): point = 1221
   Insn 1794(l4): point = 1223
   Insn 1793(l4): point = 1225
   Insn 1026(l4): point = 1227
   Insn 19(l3): point = 1230
   Insn 1561(l3): point = 1232
   Insn 851(l3): point = 1234
   Insn 986(l3): point = 1236
   Insn 850(l3): point = 1238
   Insn 1840(l3): point = 1240
   Insn 18(l3): point = 1242
   Insn 849(l3): point = 1244
   Insn 1050(l3): point = 1247
   Insn 1792(l3): point = 1249
   Insn 1791(l3): point = 1251
   Insn 1426(l3): point = 1254
   Insn 1776(l3): point = 1256
   Insn 1775(l3): point = 1258
   Insn 1417(l3): point = 1260
   Insn 1424(l3): point = 1262
   Insn 1420(l3): point = 1264
   Insn 1752(l3): point = 1267
   Insn 1016(l3): point = 1270
   Insn 1796(l3): point = 1272
   Insn 1795(l3): point = 1274
   Insn 1063(l3): point = 1277
   Insn 1790(l3): point = 1279
   Insn 1789(l3): point = 1281
   Insn 1053(l3): point = 1283
   Insn 1056(l3): point = 1285
   Insn 881(l5): point = 1288
   Insn 880(l5): point = 1290
   Insn 877(l5): point = 1292
   Insn 872(l5): point = 1294
   Insn 867(l5): point = 1296
   Insn 871(l5): point = 1298
   Insn 862(l5): point = 1300
   Insn 859(l5): point = 1302
   Insn 858(l5): point = 1304
   Insn 1009(l5): point = 1307
   Insn 1798(l5): point = 1309
   Insn 1797(l5): point = 1311
   Insn 999(l5): point = 1313
   Insn 1002(l5): point = 1315
   Insn 995(l5): point = 1318
   Insn 993(l5): point = 1320
   Insn 1562(l5): point = 1322
   Insn 992(l5): point = 1324
   Insn 991(l5): point = 1326
   Insn 989(l5): point = 1328
   Insn 990(l5): point = 1330
   Insn 988(l5): point = 1332
   Insn 1671(l5): point = 1334
   Insn 983(l5): point = 1336
   Insn 982(l5): point = 1338
   Insn 981(l5): point = 1340
   Insn 980(l5): point = 1342
   Insn 977(l5): point = 1344
   Insn 976(l5): point = 1346
   Insn 970(l5): point = 1348
   Insn 969(l5): point = 1350
   Insn 973(l5): point = 1352
   Insn 967(l5): point = 1354
   Insn 968(l5): point = 1356
   Insn 966(l5): point = 1358
   Insn 960(l5): point = 1361
   Insn 1800(l5): point = 1363
   Insn 1799(l5): point = 1365
   Insn 939(l5): point = 1368
   Insn 1806(l5): point = 1370
   Insn 1805(l5): point = 1372
   Insn 936(l5): point = 1374
   Insn 935(l5): point = 1376
   Insn 1624(l5): point = 1379
   Insn 1746(l5): point = 1382
   Insn 917(l5): point = 1384
   Insn 916(l5): point = 1386
   Insn 914(l5): point = 1388
   Insn 913(l5): point = 1390
   Insn 1744(l5): point = 1393
   Insn 899(l5): point = 1395
   Insn 1773(l5): point = 1398
   Insn 1436(l5): point = 1401
   Insn 1435(l5): point = 1403
   Insn 1748(l5): point = 1406
   Insn 1623(l5): point = 1408
   Insn 908(l5): point = 1411
   Insn 1808(l5): point = 1413
   Insn 1807(l5): point = 1415
   Insn 905(l5): point = 1417
   Insn 897(l5): point = 1420
   Insn 896(l5): point = 1422
   Insn 946(l5): point = 1425
   Insn 1804(l5): point = 1427
   Insn 1803(l5): point = 1429
   Insn 953(l5): point = 1432
   Insn 1802(l5): point = 1434
   Insn 1801(l5): point = 1436
   Insn 1742(l5): point = 1439
   Insn 887(l5): point = 1442
   Insn 886(l5): point = 1444
   Insn 624(l2): point = 1447
   Insn 622(l2): point = 1449
   Insn 617(l2): point = 1451
   Insn 616(l2): point = 1453
   Insn 631(l2): point = 1455
   Insn 620(l2): point = 1457
   Insn 613(l2): point = 1459
   Insn 612(l2): point = 1461
   Insn 628(l2): point = 1463
   Insn 627(l2): point = 1465
   Insn 614(l2): point = 1467
   Insn 611(l2): point = 1470
   Insn 634(l2): point = 1474
   Insn 1820(l2): point = 1476
   Insn 1819(l2): point = 1478
 a0(r245): [30..36] [19..20]
 a1(r776 [0]): [30..30]
 a1(r776 [1]): [30..30]
 a2(r775 [0]): [30..32]
 a2(r775 [1]): [30..32]
 a3(r774 [0]): [30..34]
 a3(r774 [1]): [30..34]
 a4(r282): [30..46]
 a5(r739): [30..38]
 a6(r740): [30..40]
 a7(r777): [30..42]
 a8(r306): [30..44]
 a9(r300): [30..416]
 a10(r301): [30..412]
 a11(r745): [30..418]
 a12(r746): [30..420]
 a13(r747): [30..422]
 a14(r508): [54..73]
 a15(r486): [97..116]
 a16(r483): [84..85]
 a17(r482): [84..87]
 a18(r479): [124..125]
 a19(r478): [124..127]
 a20(r456): [135..154]
 a21(r434): [216..235]
 a22(r121): [205..282]
 a23(r412): [178..197]
 a24(r409): [165..166]
 a25(r408): [165..168]
 a26(r405): [205..206]
 a27(r294): [243..306]
 a28(r403): [243..244]
 a29(r382): [252..271]
 a30(r334): [279..342]
 a31(r307): [279..374]
 a32(r379): [281..284]
 a33(r791): [283..286]
 a34(r790 [0]): [291..292]
 a34(r790 [1]): [291..292]
 a35(r789 [0]): [297..298]
 a35(r789 [1]): [297..298]
 a36(r374): [305..308]
 a37(r114): [305..310]
 a38(r788): [307..322]
 a39(r116): [309..312]
 a40(r368): [311..314]
 a41(r373): [313..318]
 a42(r367): [315..316]
 a43(r372): [319..320]
 a44(r787 [0]): [327..328]
 a44(r787 [1]): [327..328]
 a45(r786 [0]): [333..334]
 a45(r786 [1]): [333..334]
 a46(r361): [341..344]
 a47(r325): [341..346]
 a48(r785): [343..354]
 a49(r337): [345..348]
 a50(r358): [347..350]
 a51(r360): [349..352]
 a52(r784 [0]): [359..360]
 a52(r784 [1]): [359..360]
 a53(r783 [0]): [365..366]
 a53(r783 [1]): [365..366]
 a54(r354): [373..376]
 a55(r323): [373..378]
 a56(r782): [375..386]
 a57(r329): [377..380]
 a58(r351): [379..382]
 a59(r353): [381..384]
 a60(r781 [0]): [391..392]
 a60(r781 [1]): [391..392]
 a61(r780 [0]): [397..398]
 a61(r780 [1]): [397..398]
 a62(r347): [403..406]
 a63(r318): [403..404]
 a64(r344): [405..408]
 a65(r313): [407..410]
 a66(r346): [411..414]
 a67(r245): [665..1153] [425..660]
 a68(r282): [425..1153]
 a69(r300): [527..539]
 a70(r301): [511..537]
 a71(r306): [425..1153]
 a72(r739): [425..1153]
 a73(r740): [425..1153]
 a74(r745): [425..1153]
 a75(r746): [425..1153]
 a76(r747): [425..1153]
 a77(r774 [0]): [425..1153]
 a77(r774 [1]): [425..1153]
 a78(r775 [0]): [425..1153]
 a78(r775 [1]): [425..1153]
 a79(r776 [0]): [425..1153]
 a79(r776 [1]): [425..1153]
 a80(r777): [425..1153]
 a81(r247): [1152..1153] [786..1008] [608..767] [425..518]
 a82(r249): [939..948] [932..934] [911..927] [797..908] [714..722] [620..687] [425..468]
 a83(r263): [1005..1008] [788..999] [608..754] [425..497]
 a84(r266): [679..687] [620..649] [438..468]
 a85(r267): [797..827] [714..722] [620..687] [435..468]
 a86(r319): [679..687] [623..625] [450..454]
 a87(r741): [679..687] [620..634] [437..468]
 a88(r737): [791..792]
 a89(r738): [797..1153] [788..794] [714..756] [691..711] [688..688] [652..678] [573..617] [469..497]
 a90(r736): [668..669]
 a91(r158): [797..903] [714..722] [656..678]
 a92(r302): [932..936] [925..929] [911..913] [797..906] [714..722] [628..678] [450..468]
 a93(r733): [552..553]
 a94(r242): [554..560]
 a95(r732): [564..565]
 a96(r731): [573..574]
 a97(r820): [578..579]
 a98(r726 [0]): [586..595]
 a98(r726 [1]): [586..595]
 a99(r819 [0]): [588..589]
 a99(r819 [1]): [588..589]
 a100(r218): [1009..1115] [594..607]
 a101(r818 [0]): [596..597]
 a101(r818 [1]): [596..597]
 a102(r217): [1009..1117] [606..607]
 a103(r724): [1010..1011]
 a104(r719): [1012..1017]
 a105(r722): [1012..1013]
 a106(r744): [1014..1083] [469..473]
 a107(r713): [1014..1019]
 a108(r721): [1014..1015]
 a109(r714): [1018..1021]
 a110(r708): [1020..1027]
 a111(r718): [1022..1023]
 a112(r715): [1022..1025]
 a113(r222): [1073..1103] [1024..1038]
 a114(r710): [1026..1033]
 a115(r712): [1028..1031]
 a116(r709): [1028..1029]
 a117(r707): [1030..1035]
 a118(r254): [1036..1075]
 a119(r219): [1036..1107]
 a120(r230): [1039..1042]
 a121(r817): [1043..1044]
 a122(r703 [0]): [1051..1060]
 a122(r703 [1]): [1051..1060]
 a123(r816 [0]): [1053..1054]
 a123(r816 [1]): [1053..1054]
 a124(r221): [1059..1113]
 a125(r815 [0]): [1061..1062]
 a125(r815 [1]): [1061..1062]
 a126(r216): [1071..1129]
 a127(r701): [1074..1077]
 a128(r696): [1078..1091]
 a129(r699): [1078..1079]
 a130(r689): [1080..1085]
 a131(r698): [1080..1081]
 a132(r684): [1086..1087]
 a133(r688): [1088..1089]
 a134(r685): [1088..1099]
 a135(r691): [1092..1093]
 a136(r695): [1094..1095]
 a137(r692): [1094..1097]
 a138(r690): [1096..1101]
 a139(r686): [1098..1105]
 a140(r253): [1102..1123]
 a141(r814): [1118..1119]
 a142(r813): [1130..1133]
 a143(r215): [1132..1139]
 a144(r812): [1140..1141]
 a145(r678): [1005..1006]
 a146(r677): [611..612]
 a147(r271): [425..425]
 a148(r286): [425..427]
 a149(r762): [425..429]
 a150(r761): [430..431]
 a151(r269): [425..434]
 a152(r652): [434..439]
 a153(r270): [425..437]
 a154(r654): [437..445]
 a155(r653): [425..447]
 a156(r651): [440..441]
 a157(r650): [442..443]
 a158(r293): [450..452]
 a159(r742): [450..456]
 a160(r310): [457..458]
 a161(r771): [450..460]
 a162(r770): [450..462]
 a163(r769): [450..464]
 a164(r297): [450..466]
 a165(r268): [628..638] [450..468]
 a166(r304): [628..636] [450..468]
 a167(r810): [639..640]
 a168(r603): [645..646]
 a169(r602): [650..653]
 a170(r600): [649..655]
 a171(r246): [988..990] [983..985] [797..980] [717..722] [672..678] [661..664]
 a172(r597): [719..720]
 a173(r595): [675..676]
 a174(r592): [807..825]
 a175(r593): [807..808]
 a176(r168): [809..857]
 a177(r590): [818..819]
 a178(r589): [822..823]
 a179(r809): [828..829]
 a180(r583 [0]): [836..845]
 a180(r583 [1]): [836..845]
 a181(r808 [0]): [838..839]
 a181(r808 [1]): [838..839]
 a182(r585): [844..847]
 a183(r807 [0]): [846..849]
 a183(r807 [1]): [846..849]
 a184(r581): [858..859]
 a185(r580): [860..861]
 a186(r806): [864..865]
 a187(r248): [893..999] [878..880] [723..752] [691..708] [469..497]
 a188(r805): [881..882]
 a189(r138 [0]): [891..999] [723..742] [691..708] [469..497]
 a189(r138 [1]): [891..999] [723..742] [691..708] [469..497]
 a190(r804): [894..895]
 a191(r569): [935..945]
 a192(r571): [914..915]
 a193(r265): [939..965] [914..924]
 a194(r568): [948..950]
 a195(r803): [954..955]
 a196(r802): [966..967]
 a197(r155): [974..975]
 a198(r560): [469..469]
 a199(r264): [469..471]
 a200(r154): [469..475]
 a201(r148): [469..477]
 a202(r143): [469..479]
 a203(r147): [469..481]
 a204(r801): [482..483]
 a205(r142): [469..489]
 a206(r800): [490..491]
 a207(r139): [993..999] [691..702] [469..497]
 a208(r550): [696..706]
 a209(r549): [696..698]
 a210(r548): [698..700]
 a211(r547): [703..704]
 a212(r799): [724..725]
 a213(r798): [735..736]
 a214(r797 [0]): [743..744]
 a214(r797 [1]): [743..744]
 a215(r796): [753..758]
 a216(r541): [763..764]
 a217(r795): [768..769]
 a218(r794): [774..775]
 a219(r536): [503..506]
 a220(r534): [503..504]
 a221(r533): [505..508]
 a222(r535): [507..510]
 a223(r261): [509..532]
 a224(r532): [509..512]
 a225(r793): [513..514]
 a226(r792): [519..520]
 a227(r530): [525..528]
 a228(r528): [525..526]
 a229(r529): [527..530]
 a230(r245): [1154..1220]
 a231(r247): [1154..1220]
 a232(r249): [1154..1220]
 a233(r263): [1154..1220]
 a234(r269): [1154..1220]
 a235(r270): [1154..1220]
 a236(r271): [1154..1220]
 a237(r282): [1154..1220]
 a238(r286): [1154..1220]
 a239(r306): [1154..1220]
 a240(r653): [1154..1220]
 a241(r739): [1154..1220]
 a242(r740): [1154..1220]
 a243(r745): [1154..1220]
 a244(r746): [1154..1220]
 a245(r747): [1154..1220]
 a246(r762): [1154..1220]
 a247(r774 [0]): [1154..1220]
 a247(r774 [1]): [1154..1220]
 a248(r775 [0]): [1154..1220]
 a248(r775 [1]): [1154..1220]
 a249(r776 [0]): [1154..1220]
 a249(r776 [1]): [1154..1220]
 a250(r777): [1154..1220]
 a251(r675): [1177..1182]
 a252(r676): [1179..1180]
 a253(r674): [1183..1184]
 a254(r673): [1185..1186]
 a255(r669): [1187..1188]
 a256(r663): [1200..1216]
 a257(r662): [1207..1218]
 a258(r661): [1207..1208]
 a259(r659): [1209..1210]
 a260(r658): [1211..1212]
 a261(r657): [1213..1214]
 a262(r327): [1157..1158]
 a263(r656): [1161..1162]
 a264(r245): [1221..1229]
 a265(r247): [1221..1229]
 a266(r249): [1221..1229]
 a267(r263): [1221..1229]
 a268(r266): [1221..1229]
 a269(r267): [1221..1229]
 a270(r282): [1221..1229]
 a271(r297): [1221..1229]
 a272(r302): [1221..1229]
 a273(r306): [1221..1229]
 a274(r319): [1221..1229]
 a275(r739): [1221..1229]
 a276(r740): [1221..1229]
 a277(r741): [1221..1229]
 a278(r745): [1221..1229]
 a279(r746): [1221..1229]
 a280(r747): [1221..1229]
 a281(r774 [0]): [1221..1229]
 a281(r774 [1]): [1221..1229]
 a282(r775 [0]): [1221..1229]
 a282(r775 [1]): [1221..1229]
 a283(r776 [0]): [1221..1229]
 a283(r776 [1]): [1221..1229]
 a284(r777): [1221..1229]
 a285(r245): [1230..1287]
 a286(r247): [1230..1287]
 a287(r249): [1230..1287]
 a288(r263): [1230..1287]
 a289(r266): [1230..1287]
 a290(r267): [1230..1287]
 a291(r268): [1230..1287]
 a292(r282): [1230..1287]
 a293(r293): [1230..1287]
 a294(r297): [1230..1287]
 a295(r302): [1230..1287]
 a296(r304): [1230..1287]
 a297(r306): [1230..1287]
 a298(r319): [1230..1287]
 a299(r739): [1230..1287]
 a300(r740): [1230..1287]
 a301(r741): [1270..1287] [1247..1262]
 a302(r742): [1230..1287]
 a303(r745): [1230..1287]
 a304(r746): [1230..1287]
 a305(r747): [1230..1287]
 a306(r769): [1230..1287]
 a307(r770): [1230..1287]
 a308(r771): [1230..1287]
 a309(r774 [0]): [1230..1287]
 a309(r774 [1]): [1230..1287]
 a310(r775 [0]): [1230..1287]
 a310(r775 [1]): [1230..1287]
 a311(r776 [0]): [1230..1287]
 a311(r776 [1]): [1230..1287]
 a312(r777): [1230..1287]
 a313(r280): [1230..1230]
 a314(r743): [1230..1232]
 a315(r303): [1230..1234]
 a316(r764): [1230..1236]
 a317(r193): [1230..1238]
 a318(r606): [1239..1240]
 a319(r823): [1241..1244]
 a320(r281): [1230..1242]
 a321(r193): [1288..1446]
 a322(r245): [1288..1446]
 a323(r247): [1288..1446]
 a324(r249): [1288..1446]
 a325(r263): [1288..1446]
 a326(r266): [1288..1446]
 a327(r267): [1288..1446]
 a328(r268): [1288..1446]
 a329(r280): [1288..1446]
 a330(r281): [1288..1446]
 a331(r282): [1288..1446]
 a332(r293): [1288..1446]
 a333(r297): [1288..1446]
 a334(r302): [1288..1446]
 a335(r303): [1288..1446]
 a336(r304): [1361..1446] [1288..1320]
 a337(r306): [1288..1446]
 a338(r319): [1361..1446] [1288..1318]
 a339(r739): [1288..1446]
 a340(r740): [1288..1446]
 a341(r742): [1361..1446] [1288..1322]
 a342(r743): [1288..1446]
 a343(r745): [1288..1446]
 a344(r746): [1288..1446]
 a345(r747): [1288..1446]
 a346(r764): [1288..1446]
 a347(r769): [1288..1446]
 a348(r770): [1288..1446]
 a349(r771): [1288..1446]
 a350(r774 [0]): [1288..1446]
 a350(r774 [1]): [1288..1446]
 a351(r775 [0]): [1288..1446]
 a351(r775 [1]): [1288..1446]
 a352(r776 [0]): [1288..1446]
 a352(r776 [1]): [1288..1446]
 a353(r777): [1288..1446]
 a354(r273): [1442..1446] [1418..1424] [1396..1405] [1288..1296]
 a355(r274): [1442..1446] [1359..1438] [1288..1294]
 a356(r275): [1442..1446] [1357..1438] [1288..1292]
 a357(r310): [1323..1324]
 a358(r191): [1425..1438] [1331..1374]
 a359(r811): [1333..1334]
 a360(r642): [1339..1344]
 a361(r638): [1341..1352]
 a362(r635): [1343..1348]
 a363(r640): [1345..1346]
 a364(r317): [1425..1438] [1406..1408] [1393..1395] [1382..1384] [1347..1379]
 a365(r189): [1349..1350]
 a366(r633): [1351..1356]
 a367(r186): [1353..1354]
 a368(r632): [1355..1358]
 a369(r627): [1375..1376]
 a370(r626): [1385..1386]
 a371(r625): [1387..1388]
 a372(r622): [1389..1390]
 a373(r181): [1411..1417] [1391..1392]
 a374(r615): [1293..1298]
 a375(r612): [1297..1300]
 a376(r609): [1301..1302]
 a377(r608): [1303..1304]
 a378(r138 [0]): [1447..1480]
 a378(r138 [1]): [1447..1480]
 a379(r139): [1447..1480]
 a380(r142): [1447..1480]
 a381(r143): [1447..1480]
 a382(r147): [1447..1480]
 a383(r148): [1447..1480]
 a384(r154): [1468..1480] [1447..1455]
 a385(r245): [1447..1480]
 a386(r247): [1447..1480]
 a387(r248): [1447..1480]
 a388(r263): [1447..1480]
 a389(r264): [1466..1480] [1447..1463]
 a390(r282): [1447..1480]
 a391(r306): [1447..1480]
 a392(r560): [1447..1480]
 a393(r738): [1447..1480]
 a394(r739): [1447..1480]
 a395(r740): [1447..1480]
 a396(r744): [1447..1480]
 a397(r745): [1447..1480]
 a398(r746): [1447..1480]
 a399(r747): [1447..1480]
 a400(r774 [0]): [1447..1480]
 a400(r774 [1]): [1447..1480]
 a401(r775 [0]): [1447..1480]
 a401(r775 [1]): [1447..1480]
 a402(r776 [0]): [1447..1480]
 a402(r776 [1]): [1447..1480]
 a403(r777): [1447..1480]
 a404(r563): [1448..1449]
 a405(r558): [1450..1451]
 a406(r561): [1450..1457]
 a407(r556): [1452..1453]
 a408(r149): [1454..1468]
 a409(r146): [1458..1459]
 a410(r554): [1460..1461]
 a411(r144): [1462..1471]
 a412(r564): [1464..1465]
Compressing live ranges: from 1481 to 417 - 28%
Ranges after the compression:
 a0(r245): [0..3]
 a1(r776 [0]): [2..2]
 a1(r776 [1]): [2..2]
 a2(r775 [0]): [2..3]
 a2(r775 [1]): [2..3]
 a3(r774 [0]): [2..3]
 a3(r774 [1]): [2..3]
 a4(r282): [2..3]
 a5(r739): [2..3]
 a6(r740): [2..3]
 a7(r777): [2..3]
 a8(r306): [2..3]
 a9(r300): [2..87]
 a10(r301): [2..87]
 a11(r745): [2..87]
 a12(r746): [2..87]
 a13(r747): [2..87]
 a14(r508): [4..5]
 a15(r486): [8..9]
 a16(r483): [6..7]
 a17(r482): [6..7]
 a18(r479): [10..11]
 a19(r478): [10..11]
 a20(r456): [12..13]
 a21(r434): [20..21]
 a22(r121): [18..27]
 a23(r412): [16..17]
 a24(r409): [14..15]
 a25(r408): [14..15]
 a26(r405): [18..19]
 a27(r294): [22..35]
 a28(r403): [22..23]
 a29(r382): [24..25]
 a30(r334): [26..53]
 a31(r307): [26..67]
 a32(r379): [26..29]
 a33(r791): [28..29]
 a34(r790 [0]): [30..31]
 a34(r790 [1]): [30..31]
 a35(r789 [0]): [32..33]
 a35(r789 [1]): [32..33]
 a36(r374): [34..37]
 a37(r114): [34..39]
 a38(r788): [36..47]
 a39(r116): [38..41]
 a40(r368): [40..43]
 a41(r373): [42..45]
 a42(r367): [44..45]
 a43(r372): [46..47]
 a44(r787 [0]): [48..49]
 a44(r787 [1]): [48..49]
 a45(r786 [0]): [50..51]
 a45(r786 [1]): [50..51]
 a46(r361): [52..55]
 a47(r325): [52..57]
 a48(r785): [54..61]
 a49(r337): [56..59]
 a50(r358): [58..61]
 a51(r360): [60..61]
 a52(r784 [0]): [62..63]
 a52(r784 [1]): [62..63]
 a53(r783 [0]): [64..65]
 a53(r783 [1]): [64..65]
 a54(r354): [66..69]
 a55(r323): [66..71]
 a56(r782): [68..75]
 a57(r329): [70..73]
 a58(r351): [72..75]
 a59(r353): [74..75]
 a60(r781 [0]): [76..77]
 a60(r781 [1]): [76..77]
 a61(r780 [0]): [78..79]
 a61(r780 [1]): [78..79]
 a62(r347): [80..83]
 a63(r318): [80..81]
 a64(r344): [82..85]
 a65(r313): [84..85]
 a66(r346): [86..87]
 a67(r245): [164..307] [88..161]
 a68(r282): [88..307]
 a69(r300): [127..128]
 a70(r301): [119..128]
 a71(r306): [88..307]
 a72(r739): [88..307]
 a73(r740): [88..307]
 a74(r745): [88..307]
 a75(r746): [88..307]
 a76(r747): [88..307]
 a77(r774 [0]): [88..307]
 a77(r774 [1]): [88..307]
 a78(r775 [0]): [88..307]
 a78(r775 [1]): [88..307]
 a79(r776 [0]): [88..307]
 a79(r776 [1]): [88..307]
 a80(r777): [88..307]
 a81(r247): [306..307] [192..247] [147..187] [88..122]
 a82(r249): [230..232] [194..227] [176..177] [149..169] [88..104]
 a83(r263): [192..247] [147..185] [88..110]
 a84(r266): [168..169] [149..157] [95..104]
 a85(r267): [194..199] [176..177] [149..169] [93..104]
 a86(r319): [168..169] [149..150] [101..102]
 a87(r741): [168..169] [149..152] [94..104]
 a88(r737): [192..193]
 a89(r738): [192..307] [170..185] [158..167] [135..148] [105..110]
 a90(r736): [164..165]
 a91(r158): [194..219] [176..177] [160..167]
 a92(r302): [224..229] [194..221] [176..177] [151..167] [101..104]
 a93(r733): [129..130]
 a94(r242): [131..132]
 a95(r732): [133..134]
 a96(r731): [135..136]
 a97(r820): [137..138]
 a98(r726 [0]): [139..142]
 a98(r726 [1]): [139..142]
 a99(r819 [0]): [139..140]
 a99(r819 [1]): [139..140]
 a100(r218): [248..299] [141..146]
 a101(r818 [0]): [143..144]
 a101(r818 [1]): [143..144]
 a102(r217): [248..299] [145..146]
 a103(r724): [248..249]
 a104(r719): [250..253]
 a105(r722): [250..251]
 a106(r744): [252..285] [105..106]
 a107(r713): [252..255]
 a108(r721): [252..253]
 a109(r714): [254..257]
 a110(r708): [256..263]
 a111(r718): [258..259]
 a112(r715): [258..261]
 a113(r222): [280..299] [260..269]
 a114(r710): [262..267]
 a115(r712): [264..267]
 a116(r709): [264..265]
 a117(r707): [266..267]
 a118(r254): [268..281]
 a119(r219): [268..299]
 a120(r230): [270..271]
 a121(r817): [272..273]
 a122(r703 [0]): [274..277]
 a122(r703 [1]): [274..277]
 a123(r816 [0]): [274..275]
 a123(r816 [1]): [274..275]
 a124(r221): [276..299]
 a125(r815 [0]): [278..279]
 a125(r815 [1]): [278..279]
 a126(r216): [280..301]
 a127(r701): [280..281]
 a128(r696): [282..289]
 a129(r699): [282..283]
 a130(r689): [284..285]
 a131(r698): [284..285]
 a132(r684): [286..287]
 a133(r688): [288..289]
 a134(r685): [288..297]
 a135(r691): [290..291]
 a136(r695): [292..293]
 a137(r692): [292..295]
 a138(r690): [294..297]
 a139(r686): [296..299]
 a140(r253): [298..301]
 a141(r814): [300..301]
 a142(r813): [302..303]
 a143(r215): [302..303]
 a144(r812): [304..305]
 a145(r678): [246..247]
 a146(r677): [147..148]
 a147(r271): [88..88]
 a148(r286): [88..89]
 a149(r762): [88..89]
 a150(r761): [90..91]
 a151(r269): [88..92]
 a152(r652): [92..96]
 a153(r270): [88..94]
 a154(r654): [94..100]
 a155(r653): [88..100]
 a156(r651): [97..98]
 a157(r650): [99..100]
 a158(r293): [101..102]
 a159(r742): [101..102]
 a160(r310): [103..104]
 a161(r771): [101..104]
 a162(r770): [101..104]
 a163(r769): [101..104]
 a164(r297): [101..104]
 a165(r268): [151..152] [101..104]
 a166(r304): [151..152] [101..104]
 a167(r810): [153..154]
 a168(r603): [155..156]
 a169(r602): [158..159]
 a170(r600): [157..159]
 a171(r246): [194..243] [176..177] [166..167] [162..163]
 a172(r597): [176..177]
 a173(r595): [166..167]
 a174(r592): [194..199]
 a175(r593): [194..195]
 a176(r168): [196..207]
 a177(r590): [196..197]
 a178(r589): [198..199]
 a179(r809): [200..201]
 a180(r583 [0]): [202..205]
 a180(r583 [1]): [202..205]
 a181(r808 [0]): [202..203]
 a181(r808 [1]): [202..203]
 a182(r585): [204..207]
 a183(r807 [0]): [206..207]
 a183(r807 [1]): [206..207]
 a184(r581): [208..209]
 a185(r580): [210..211]
 a186(r806): [212..213]
 a187(r248): [218..245] [214..215] [178..183] [171..175] [105..110]
 a188(r805): [216..217]
 a189(r138 [0]): [218..245] [178..181] [171..175] [105..110]
 a189(r138 [1]): [218..245] [178..181] [171..175] [105..110]
 a190(r804): [218..219]
 a191(r569): [228..231]
 a192(r571): [222..223]
 a193(r265): [230..235] [222..223]
 a194(r568): [232..233]
 a195(r803): [234..235]
 a196(r802): [236..237]
 a197(r155): [238..239]
 a198(r560): [105..105]
 a199(r264): [105..106]
 a200(r154): [105..106]
 a201(r148): [105..106]
 a202(r143): [105..106]
 a203(r147): [105..106]
 a204(r801): [107..108]
 a205(r142): [105..108]
 a206(r800): [109..110]
 a207(r139): [244..245] [171..173] [105..110]
 a208(r550): [171..175]
 a209(r549): [171..172]
 a210(r548): [172..173]
 a211(r547): [174..175]
 a212(r799): [178..179]
 a213(r798): [180..181]
 a214(r797 [0]): [182..183]
 a214(r797 [1]): [182..183]
 a215(r796): [184..185]
 a216(r541): [186..187]
 a217(r795): [188..189]
 a218(r794): [190..191]
 a219(r536): [111..114]
 a220(r534): [111..112]
 a221(r533): [113..116]
 a222(r535): [115..118]
 a223(r261): [117..128]
 a224(r532): [117..120]
 a225(r793): [121..122]
 a226(r792): [123..124]
 a227(r530): [125..128]
 a228(r528): [125..126]
 a229(r529): [127..128]
 a230(r245): [308..327]
 a231(r247): [308..327]
 a232(r249): [308..327]
 a233(r263): [308..327]
 a234(r269): [308..327]
 a235(r270): [308..327]
 a236(r271): [308..327]
 a237(r282): [308..327]
 a238(r286): [308..327]
 a239(r306): [308..327]
 a240(r653): [308..327]
 a241(r739): [308..327]
 a242(r740): [308..327]
 a243(r745): [308..327]
 a244(r746): [308..327]
 a245(r747): [308..327]
 a246(r762): [308..327]
 a247(r774 [0]): [308..327]
 a247(r774 [1]): [308..327]
 a248(r775 [0]): [308..327]
 a248(r775 [1]): [308..327]
 a249(r776 [0]): [308..327]
 a249(r776 [1]): [308..327]
 a250(r777): [308..327]
 a251(r675): [312..313]
 a252(r676): [312..313]
 a253(r674): [314..315]
 a254(r673): [316..317]
 a255(r669): [318..319]
 a256(r663): [320..327]
 a257(r662): [320..327]
 a258(r661): [320..321]
 a259(r659): [322..323]
 a260(r658): [324..325]
 a261(r657): [326..327]
 a262(r327): [308..309]
 a263(r656): [310..311]
 a264(r245): [328..329]
 a265(r247): [328..329]
 a266(r249): [328..329]
 a267(r263): [328..329]
 a268(r266): [328..329]
 a269(r267): [328..329]
 a270(r282): [328..329]
 a271(r297): [328..329]
 a272(r302): [328..329]
 a273(r306): [328..329]
 a274(r319): [328..329]
 a275(r739): [328..329]
 a276(r740): [328..329]
 a277(r741): [328..329]
 a278(r745): [328..329]
 a279(r746): [328..329]
 a280(r747): [328..329]
 a281(r774 [0]): [328..329]
 a281(r774 [1]): [328..329]
 a282(r775 [0]): [328..329]
 a282(r775 [1]): [328..329]
 a283(r776 [0]): [328..329]
 a283(r776 [1]): [328..329]
 a284(r777): [328..329]
 a285(r245): [330..339]
 a286(r247): [330..339]
 a287(r249): [330..339]
 a288(r263): [330..339]
 a289(r266): [330..339]
 a290(r267): [330..339]
 a291(r268): [330..339]
 a292(r282): [330..339]
 a293(r293): [330..339]
 a294(r297): [330..339]
 a295(r302): [330..339]
 a296(r304): [330..339]
 a297(r306): [330..339]
 a298(r319): [330..339]
 a299(r739): [330..339]
 a300(r740): [330..339]
 a301(r741): [336..339]
 a302(r742): [330..339]
 a303(r745): [330..339]
 a304(r746): [330..339]
 a305(r747): [330..339]
 a306(r769): [330..339]
 a307(r770): [330..339]
 a308(r771): [330..339]
 a309(r774 [0]): [330..339]
 a309(r774 [1]): [330..339]
 a310(r775 [0]): [330..339]
 a310(r775 [1]): [330..339]
 a311(r776 [0]): [330..339]
 a311(r776 [1]): [330..339]
 a312(r777): [330..339]
 a313(r280): [330..330]
 a314(r743): [330..331]
 a315(r303): [330..331]
 a316(r764): [330..331]
 a317(r193): [330..331]
 a318(r606): [332..333]
 a319(r823): [334..335]
 a320(r281): [330..335]
 a321(r193): [340..397]
 a322(r245): [340..397]
 a323(r247): [340..397]
 a324(r249): [340..397]
 a325(r263): [340..397]
 a326(r266): [340..397]
 a327(r267): [340..397]
 a328(r268): [340..397]
 a329(r280): [340..397]
 a330(r281): [340..397]
 a331(r282): [340..397]
 a332(r293): [340..397]
 a333(r297): [340..397]
 a334(r302): [340..397]
 a335(r303): [340..397]
 a336(r304): [370..397] [340..349]
 a337(r306): [340..397]
 a338(r319): [370..397] [340..349]
 a339(r739): [340..397]
 a340(r740): [340..397]
 a341(r742): [370..397] [340..349]
 a342(r743): [340..397]
 a343(r745): [340..397]
 a344(r746): [340..397]
 a345(r747): [340..397]
 a346(r764): [340..397]
 a347(r769): [340..397]
 a348(r770): [340..397]
 a349(r771): [340..397]
 a350(r774 [0]): [340..397]
 a350(r774 [1]): [340..397]
 a351(r775 [0]): [340..397]
 a351(r775 [1]): [340..397]
 a352(r776 [0]): [340..397]
 a352(r776 [1]): [340..397]
 a353(r777): [340..397]
 a354(r273): [396..397] [392..393] [386..387] [340..343]
 a355(r274): [370..397] [340..343]
 a356(r275): [368..397] [340..341]
 a357(r310): [350..351]
 a358(r191): [394..395] [352..371]
 a359(r811): [352..353]
 a360(r642): [354..355]
 a361(r638): [354..363]
 a362(r635): [354..359]
 a363(r640): [356..357]
 a364(r317): [394..395] [388..389] [384..385] [358..375]
 a365(r189): [360..361]
 a366(r633): [362..367]
 a367(r186): [364..365]
 a368(r632): [366..369]
 a369(r627): [372..373]
 a370(r626): [376..377]
 a371(r625): [378..379]
 a372(r622): [380..381]
 a373(r181): [390..391] [382..383]
 a374(r615): [342..345]
 a375(r612): [344..345]
 a376(r609): [346..347]
 a377(r608): [348..349]
 a378(r138 [0]): [398..416]
 a378(r138 [1]): [398..416]
 a379(r139): [398..416]
 a380(r142): [398..416]
 a381(r143): [398..416]
 a382(r147): [398..416]
 a383(r148): [398..416]
 a384(r154): [415..416] [398..405]
 a385(r245): [398..416]
 a386(r247): [398..416]
 a387(r248): [398..416]
 a388(r263): [398..416]
 a389(r264): [414..416] [398..411]
 a390(r282): [398..416]
 a391(r306): [398..416]
 a392(r560): [398..416]
 a393(r738): [398..416]
 a394(r739): [398..416]
 a395(r740): [398..416]
 a396(r744): [398..416]
 a397(r745): [398..416]
 a398(r746): [398..416]
 a399(r747): [398..416]
 a400(r774 [0]): [398..416]
 a400(r774 [1]): [398..416]
 a401(r775 [0]): [398..416]
 a401(r775 [1]): [398..416]
 a402(r776 [0]): [398..416]
 a402(r776 [1]): [398..416]
 a403(r777): [398..416]
 a404(r563): [398..399]
 a405(r558): [400..401]
 a406(r561): [400..405]
 a407(r556): [402..403]
 a408(r149): [404..415]
 a409(r146): [406..407]
 a410(r554): [408..409]
 a411(r144): [410..416]
 a412(r564): [412..413]
    Creating cap  a413(r247,l0: a81(r247,l1))
    Creating cap  a414(r249,l0: a82(r249,l1))
    Creating cap  a415(r263,l0: a83(r263,l1))
    Creating cap  a416(r266,l0: a84(r266,l1))
    Creating cap  a417(r267,l0: a85(r267,l1))
    Creating cap  a418(r319,l0: a86(r319,l1))
    Creating cap  a419(r741,l0: a87(r741,l1))
    Creating cap  a420(r737,l0: a88(r737,l1))
    Creating cap  a421(r738,l0: a89(r738,l1))
    Creating cap  a422(r736,l0: a90(r736,l1))
    Creating cap  a423(r158,l0: a91(r158,l1))
    Creating cap  a424(r302,l0: a92(r302,l1))
    Creating cap  a425(r733,l0: a93(r733,l1))
    Creating cap  a426(r242,l0: a94(r242,l1))
    Creating cap  a427(r732,l0: a95(r732,l1))
    Creating cap  a428(r731,l0: a96(r731,l1))
    Creating cap  a429(r820,l0: a97(r820,l1))
    Creating cap  a430(r726,l0: a98(r726,l1))
    Creating cap  a431(r819,l0: a99(r819,l1))
    Creating cap  a432(r218,l0: a100(r218,l1))
    Creating cap  a433(r818,l0: a101(r818,l1))
    Creating cap  a434(r217,l0: a102(r217,l1))
    Creating cap  a435(r724,l0: a103(r724,l1))
    Creating cap  a436(r719,l0: a104(r719,l1))
    Creating cap  a437(r722,l0: a105(r722,l1))
    Creating cap  a438(r744,l0: a106(r744,l1))
    Creating cap  a439(r713,l0: a107(r713,l1))
    Creating cap  a440(r721,l0: a108(r721,l1))
    Creating cap  a441(r714,l0: a109(r714,l1))
    Creating cap  a442(r708,l0: a110(r708,l1))
    Creating cap  a443(r718,l0: a111(r718,l1))
    Creating cap  a444(r715,l0: a112(r715,l1))
    Creating cap  a445(r222,l0: a113(r222,l1))
    Creating cap  a446(r710,l0: a114(r710,l1))
    Creating cap  a447(r712,l0: a115(r712,l1))
    Creating cap  a448(r709,l0: a116(r709,l1))
    Creating cap  a449(r707,l0: a117(r707,l1))
    Creating cap  a450(r254,l0: a118(r254,l1))
    Creating cap  a451(r219,l0: a119(r219,l1))
    Creating cap  a452(r230,l0: a120(r230,l1))
    Creating cap  a453(r817,l0: a121(r817,l1))
    Creating cap  a454(r703,l0: a122(r703,l1))
    Creating cap  a455(r816,l0: a123(r816,l1))
    Creating cap  a456(r221,l0: a124(r221,l1))
    Creating cap  a457(r815,l0: a125(r815,l1))
    Creating cap  a458(r216,l0: a126(r216,l1))
    Creating cap  a459(r701,l0: a127(r701,l1))
    Creating cap  a460(r696,l0: a128(r696,l1))
    Creating cap  a461(r699,l0: a129(r699,l1))
    Creating cap  a462(r689,l0: a130(r689,l1))
    Creating cap  a463(r698,l0: a131(r698,l1))
    Creating cap  a464(r684,l0: a132(r684,l1))
    Creating cap  a465(r688,l0: a133(r688,l1))
    Creating cap  a466(r685,l0: a134(r685,l1))
    Creating cap  a467(r691,l0: a135(r691,l1))
    Creating cap  a468(r695,l0: a136(r695,l1))
    Creating cap  a469(r692,l0: a137(r692,l1))
    Creating cap  a470(r690,l0: a138(r690,l1))
    Creating cap  a471(r686,l0: a139(r686,l1))
    Creating cap  a472(r253,l0: a140(r253,l1))
    Creating cap  a473(r814,l0: a141(r814,l1))
    Creating cap  a474(r813,l0: a142(r813,l1))
    Creating cap  a475(r215,l0: a143(r215,l1))
    Creating cap  a476(r812,l0: a144(r812,l1))
    Creating cap  a477(r678,l0: a145(r678,l1))
    Creating cap  a478(r677,l0: a146(r677,l1))
    Creating cap  a479(r271,l0: a147(r271,l1))
    Creating cap  a480(r286,l0: a148(r286,l1))
    Creating cap  a481(r762,l0: a149(r762,l1))
    Creating cap  a482(r761,l0: a150(r761,l1))
    Creating cap  a483(r269,l0: a151(r269,l1))
    Creating cap  a484(r652,l0: a152(r652,l1))
    Creating cap  a485(r270,l0: a153(r270,l1))
    Creating cap  a486(r654,l0: a154(r654,l1))
    Creating cap  a487(r653,l0: a155(r653,l1))
    Creating cap  a488(r651,l0: a156(r651,l1))
    Creating cap  a489(r650,l0: a157(r650,l1))
    Creating cap  a490(r293,l0: a158(r293,l1))
    Creating cap  a491(r742,l0: a159(r742,l1))
    Creating cap  a492(r310,l0: a160(r310,l1))
    Creating cap  a493(r771,l0: a161(r771,l1))
    Creating cap  a494(r770,l0: a162(r770,l1))
    Creating cap  a495(r769,l0: a163(r769,l1))
    Creating cap  a496(r297,l0: a164(r297,l1))
    Creating cap  a497(r268,l0: a165(r268,l1))
    Creating cap  a498(r304,l0: a166(r304,l1))
    Creating cap  a499(r810,l0: a167(r810,l1))
    Creating cap  a500(r603,l0: a168(r603,l1))
    Creating cap  a501(r602,l0: a169(r602,l1))
    Creating cap  a502(r600,l0: a170(r600,l1))
    Creating cap  a503(r246,l0: a171(r246,l1))
    Creating cap  a504(r597,l0: a172(r597,l1))
    Creating cap  a505(r595,l0: a173(r595,l1))
    Creating cap  a506(r592,l0: a174(r592,l1))
    Creating cap  a507(r593,l0: a175(r593,l1))
    Creating cap  a508(r168,l0: a176(r168,l1))
    Creating cap  a509(r590,l0: a177(r590,l1))
    Creating cap  a510(r589,l0: a178(r589,l1))
    Creating cap  a511(r809,l0: a179(r809,l1))
    Creating cap  a512(r583,l0: a180(r583,l1))
    Creating cap  a513(r808,l0: a181(r808,l1))
    Creating cap  a514(r585,l0: a182(r585,l1))
    Creating cap  a515(r807,l0: a183(r807,l1))
    Creating cap  a516(r581,l0: a184(r581,l1))
    Creating cap  a517(r580,l0: a185(r580,l1))
    Creating cap  a518(r806,l0: a186(r806,l1))
    Creating cap  a519(r248,l0: a187(r248,l1))
    Creating cap  a520(r805,l0: a188(r805,l1))
    Creating cap  a521(r138,l0: a189(r138,l1))
    Creating cap  a522(r804,l0: a190(r804,l1))
    Creating cap  a523(r569,l0: a191(r569,l1))
    Creating cap  a524(r571,l0: a192(r571,l1))
    Creating cap  a525(r265,l0: a193(r265,l1))
    Creating cap  a526(r568,l0: a194(r568,l1))
    Creating cap  a527(r803,l0: a195(r803,l1))
    Creating cap  a528(r802,l0: a196(r802,l1))
    Creating cap  a529(r155,l0: a197(r155,l1))
    Creating cap  a530(r560,l0: a198(r560,l1))
    Creating cap  a531(r264,l0: a199(r264,l1))
    Creating cap  a532(r154,l0: a200(r154,l1))
    Creating cap  a533(r148,l0: a201(r148,l1))
    Creating cap  a534(r143,l0: a202(r143,l1))
    Creating cap  a535(r147,l0: a203(r147,l1))
    Creating cap  a536(r801,l0: a204(r801,l1))
    Creating cap  a537(r142,l0: a205(r142,l1))
    Creating cap  a538(r800,l0: a206(r800,l1))
    Creating cap  a539(r139,l0: a207(r139,l1))
    Creating cap  a540(r550,l0: a208(r550,l1))
    Creating cap  a541(r549,l0: a209(r549,l1))
    Creating cap  a542(r548,l0: a210(r548,l1))
    Creating cap  a543(r547,l0: a211(r547,l1))
    Creating cap  a544(r799,l0: a212(r799,l1))
    Creating cap  a545(r798,l0: a213(r798,l1))
    Creating cap  a546(r797,l0: a214(r797,l1))
    Creating cap  a547(r796,l0: a215(r796,l1))
    Creating cap  a548(r541,l0: a216(r541,l1))
    Creating cap  a549(r795,l0: a217(r795,l1))
    Creating cap  a550(r794,l0: a218(r794,l1))
    Creating cap  a551(r536,l0: a219(r536,l1))
    Creating cap  a552(r534,l0: a220(r534,l1))
    Creating cap  a553(r533,l0: a221(r533,l1))
    Creating cap  a554(r535,l0: a222(r535,l1))
    Creating cap  a555(r261,l0: a223(r261,l1))
    Creating cap  a556(r532,l0: a224(r532,l1))
    Creating cap  a557(r793,l0: a225(r793,l1))
    Creating cap  a558(r792,l0: a226(r792,l1))
    Creating cap  a559(r530,l0: a227(r530,l1))
    Creating cap  a560(r528,l0: a228(r528,l1))
    Creating cap  a561(r529,l0: a229(r529,l1))
    Creating cap  a562(r675,l1: a251(r675,l6))
    Creating cap  a563(r676,l1: a252(r676,l6))
    Creating cap  a564(r674,l1: a253(r674,l6))
    Creating cap  a565(r673,l1: a254(r673,l6))
    Creating cap  a566(r669,l1: a255(r669,l6))
    Creating cap  a567(r663,l1: a256(r663,l6))
    Creating cap  a568(r662,l1: a257(r662,l6))
    Creating cap  a569(r661,l1: a258(r661,l6))
    Creating cap  a570(r659,l1: a259(r659,l6))
    Creating cap  a571(r658,l1: a260(r658,l6))
    Creating cap  a572(r657,l1: a261(r657,l6))
    Creating cap  a573(r327,l1: a262(r327,l6))
    Creating cap  a574(r656,l1: a263(r656,l6))
    Creating cap  a575(r280,l1: a313(r280,l3))
    Creating cap  a576(r743,l1: a314(r743,l3))
    Creating cap  a577(r303,l1: a315(r303,l3))
    Creating cap  a578(r764,l1: a316(r764,l3))
    Creating cap  a579(r193,l1: a317(r193,l3))
    Creating cap  a580(r606,l1: a318(r606,l3))
    Creating cap  a581(r823,l1: a319(r823,l3))
    Creating cap  a582(r281,l1: a320(r281,l3))
    Creating cap  a583(r273,l3: a354(r273,l5))
    Creating cap  a584(r274,l3: a355(r274,l5))
    Creating cap  a585(r275,l3: a356(r275,l5))
    Creating cap  a586(r310,l3: a357(r310,l5))
    Creating cap  a587(r191,l3: a358(r191,l5))
    Creating cap  a588(r811,l3: a359(r811,l5))
    Creating cap  a589(r642,l3: a360(r642,l5))
    Creating cap  a590(r638,l3: a361(r638,l5))
    Creating cap  a591(r635,l3: a362(r635,l5))
    Creating cap  a592(r640,l3: a363(r640,l5))
    Creating cap  a593(r317,l3: a364(r317,l5))
    Creating cap  a594(r189,l3: a365(r189,l5))
    Creating cap  a595(r633,l3: a366(r633,l5))
    Creating cap  a596(r186,l3: a367(r186,l5))
    Creating cap  a597(r632,l3: a368(r632,l5))
    Creating cap  a598(r627,l3: a369(r627,l5))
    Creating cap  a599(r626,l3: a370(r626,l5))
    Creating cap  a600(r625,l3: a371(r625,l5))
    Creating cap  a601(r622,l3: a372(r622,l5))
    Creating cap  a602(r181,l3: a373(r181,l5))
    Creating cap  a603(r615,l3: a374(r615,l5))
    Creating cap  a604(r612,l3: a375(r612,l5))
    Creating cap  a605(r609,l3: a376(r609,l5))
    Creating cap  a606(r608,l3: a377(r608,l5))
    Creating cap  a607(r563,l1: a404(r563,l2))
    Creating cap  a608(r558,l1: a405(r558,l2))
    Creating cap  a609(r561,l1: a406(r561,l2))
    Creating cap  a610(r556,l1: a407(r556,l2))
    Creating cap  a611(r149,l1: a408(r149,l2))
    Creating cap  a612(r146,l1: a409(r146,l2))
    Creating cap  a613(r554,l1: a410(r554,l2))
    Creating cap  a614(r144,l1: a411(r144,l2))
    Creating cap  a615(r564,l1: a412(r564,l2))
    Creating cap  a616(r675,l0: a562(r675,l1: a251(r675,l6)))
    Creating cap  a617(r676,l0: a563(r676,l1: a252(r676,l6)))
    Creating cap  a618(r674,l0: a564(r674,l1: a253(r674,l6)))
    Creating cap  a619(r673,l0: a565(r673,l1: a254(r673,l6)))
    Creating cap  a620(r669,l0: a566(r669,l1: a255(r669,l6)))
    Creating cap  a621(r663,l0: a567(r663,l1: a256(r663,l6)))
    Creating cap  a622(r662,l0: a568(r662,l1: a257(r662,l6)))
    Creating cap  a623(r661,l0: a569(r661,l1: a258(r661,l6)))
    Creating cap  a624(r659,l0: a570(r659,l1: a259(r659,l6)))
    Creating cap  a625(r658,l0: a571(r658,l1: a260(r658,l6)))
    Creating cap  a626(r657,l0: a572(r657,l1: a261(r657,l6)))
    Creating cap  a627(r327,l0: a573(r327,l1: a262(r327,l6)))
    Creating cap  a628(r656,l0: a574(r656,l1: a263(r656,l6)))
    Creating cap  a629(r280,l0: a575(r280,l1: a313(r280,l3)))
    Creating cap  a630(r743,l0: a576(r743,l1: a314(r743,l3)))
    Creating cap  a631(r303,l0: a577(r303,l1: a315(r303,l3)))
    Creating cap  a632(r764,l0: a578(r764,l1: a316(r764,l3)))
    Creating cap  a633(r193,l0: a579(r193,l1: a317(r193,l3)))
    Creating cap  a634(r606,l0: a580(r606,l1: a318(r606,l3)))
    Creating cap  a635(r823,l0: a581(r823,l1: a319(r823,l3)))
    Creating cap  a636(r281,l0: a582(r281,l1: a320(r281,l3)))
    Creating cap  a637(r273,l1: a583(r273,l3: a354(r273,l5)))
    Creating cap  a638(r274,l1: a584(r274,l3: a355(r274,l5)))
    Creating cap  a639(r275,l1: a585(r275,l3: a356(r275,l5)))
    Creating cap  a640(r310,l1: a586(r310,l3: a357(r310,l5)))
    Creating cap  a641(r191,l1: a587(r191,l3: a358(r191,l5)))
    Creating cap  a642(r811,l1: a588(r811,l3: a359(r811,l5)))
    Creating cap  a643(r642,l1: a589(r642,l3: a360(r642,l5)))
    Creating cap  a644(r638,l1: a590(r638,l3: a361(r638,l5)))
    Creating cap  a645(r635,l1: a591(r635,l3: a362(r635,l5)))
    Creating cap  a646(r640,l1: a592(r640,l3: a363(r640,l5)))
    Creating cap  a647(r317,l1: a593(r317,l3: a364(r317,l5)))
    Creating cap  a648(r189,l1: a594(r189,l3: a365(r189,l5)))
    Creating cap  a649(r633,l1: a595(r633,l3: a366(r633,l5)))
    Creating cap  a650(r186,l1: a596(r186,l3: a367(r186,l5)))
    Creating cap  a651(r632,l1: a597(r632,l3: a368(r632,l5)))
    Creating cap  a652(r627,l1: a598(r627,l3: a369(r627,l5)))
    Creating cap  a653(r626,l1: a599(r626,l3: a370(r626,l5)))
    Creating cap  a654(r625,l1: a600(r625,l3: a371(r625,l5)))
    Creating cap  a655(r622,l1: a601(r622,l3: a372(r622,l5)))
    Creating cap  a656(r181,l1: a602(r181,l3: a373(r181,l5)))
    Creating cap  a657(r615,l1: a603(r615,l3: a374(r615,l5)))
    Creating cap  a658(r612,l1: a604(r612,l3: a375(r612,l5)))
    Creating cap  a659(r609,l1: a605(r609,l3: a376(r609,l5)))
    Creating cap  a660(r608,l1: a606(r608,l3: a377(r608,l5)))
    Creating cap  a661(r563,l0: a607(r563,l1: a404(r563,l2)))
    Creating cap  a662(r558,l0: a608(r558,l1: a405(r558,l2)))
    Creating cap  a663(r561,l0: a609(r561,l1: a406(r561,l2)))
    Creating cap  a664(r556,l0: a610(r556,l1: a407(r556,l2)))
    Creating cap  a665(r149,l0: a611(r149,l1: a408(r149,l2)))
    Creating cap  a666(r146,l0: a612(r146,l1: a409(r146,l2)))
    Creating cap  a667(r554,l0: a613(r554,l1: a410(r554,l2)))
    Creating cap  a668(r144,l0: a614(r144,l1: a411(r144,l2)))
    Creating cap  a669(r564,l0: a615(r564,l1: a412(r564,l2)))
    Creating cap  a670(r273,l0: a637(r273,l1: a583(r273,l3: a354(r273,l5))))
    Creating cap  a671(r274,l0: a638(r274,l1: a584(r274,l3: a355(r274,l5))))
    Creating cap  a672(r275,l0: a639(r275,l1: a585(r275,l3: a356(r275,l5))))
    Creating cap  a673(r310,l0: a640(r310,l1: a586(r310,l3: a357(r310,l5))))
    Creating cap  a674(r191,l0: a641(r191,l1: a587(r191,l3: a358(r191,l5))))
    Creating cap  a675(r811,l0: a642(r811,l1: a588(r811,l3: a359(r811,l5))))
    Creating cap  a676(r642,l0: a643(r642,l1: a589(r642,l3: a360(r642,l5))))
    Creating cap  a677(r638,l0: a644(r638,l1: a590(r638,l3: a361(r638,l5))))
    Creating cap  a678(r635,l0: a645(r635,l1: a591(r635,l3: a362(r635,l5))))
    Creating cap  a679(r640,l0: a646(r640,l1: a592(r640,l3: a363(r640,l5))))
    Creating cap  a680(r317,l0: a647(r317,l1: a593(r317,l3: a364(r317,l5))))
    Creating cap  a681(r189,l0: a648(r189,l1: a594(r189,l3: a365(r189,l5))))
    Creating cap  a682(r633,l0: a649(r633,l1: a595(r633,l3: a366(r633,l5))))
    Creating cap  a683(r186,l0: a650(r186,l1: a596(r186,l3: a367(r186,l5))))
    Creating cap  a684(r632,l0: a651(r632,l1: a597(r632,l3: a368(r632,l5))))
    Creating cap  a685(r627,l0: a652(r627,l1: a598(r627,l3: a369(r627,l5))))
    Creating cap  a686(r626,l0: a653(r626,l1: a599(r626,l3: a370(r626,l5))))
    Creating cap  a687(r625,l0: a654(r625,l1: a600(r625,l3: a371(r625,l5))))
    Creating cap  a688(r622,l0: a655(r622,l1: a601(r622,l3: a372(r622,l5))))
    Creating cap  a689(r181,l0: a656(r181,l1: a602(r181,l3: a373(r181,l5))))
    Creating cap  a690(r615,l0: a657(r615,l1: a603(r615,l3: a374(r615,l5))))
    Creating cap  a691(r612,l0: a658(r612,l1: a604(r612,l3: a375(r612,l5))))
    Creating cap  a692(r609,l0: a659(r609,l1: a605(r609,l3: a376(r609,l5))))
    Creating cap  a693(r608,l0: a660(r608,l1: a606(r608,l3: a377(r608,l5))))
+++Allocating 49136 bytes for conflict table (uncompressed size 71616)
;; a0(r245,l0) conflicts: a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a1(r776,l0) conflicts:
;;   subobject 0: a0(r245,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a430(r726,w0,l0) a433(r818,w0,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w0,l0) a512(r583,w0,l0) a515(r807,w0,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a454(r703,w0,l0) a457(r815,w0,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a2(r775,l0) conflicts:
;;   subobject 0: a0(r245,l0) a9(r300,l0) a10(r301,l0) a1(r776,w0,l0) a1(r776,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a492(r310,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a432(r218,l0) a433(r818,w0,l0) a433(r818,w1,l0) a434(r217,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a502(r600,l0) a501(r602,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a548(r541,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a507(r593,l0) a506(r592,l0) a509(r590,l0) a508(r168,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a477(r678,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a452(r230,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a458(r216,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a665(r149,l0) a666(r146,l0) a667(r554,l0) a668(r144,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a9(r300,l0) a10(r301,l0) a1(r776,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a492(r310,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a530(r560,l0) a531(r264,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a430(r726,w0,l0) a432(r218,l0) a433(r818,w0,l0) a434(r217,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a502(r600,l0) a501(r602,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a547(r796,l0) a548(r541,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a507(r593,l0) a506(r592,l0) a509(r590,l0) a508(r168,l0) a510(r589,l0) a511(r809,l0) a513(r808,w0,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a477(r678,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a452(r230,l0) a453(r817,l0) a455(r816,w0,l0) a454(r703,w0,l0) a456(r221,l0) a457(r815,w0,l0) a459(r701,l0) a458(r216,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a665(r149,l0) a666(r146,l0) a667(r554,l0) a668(r144,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs:

;; a3(r774,l0) conflicts:
;;   subobject 0: a0(r245,l0) a9(r300,l0) a10(r301,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a492(r310,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a432(r218,l0) a433(r818,w0,l0) a433(r818,w1,l0) a434(r217,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a502(r600,l0) a501(r602,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a548(r541,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a507(r593,l0) a506(r592,l0) a509(r590,l0) a508(r168,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a477(r678,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a452(r230,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a458(r216,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a665(r149,l0) a666(r146,l0) a667(r554,l0) a668(r144,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a9(r300,l0) a10(r301,l0) a1(r776,w0,l0) a2(r775,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a492(r310,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a530(r560,l0) a531(r264,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a430(r726,w0,l0) a432(r218,l0) a433(r818,w0,l0) a434(r217,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a502(r600,l0) a501(r602,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a547(r796,l0) a548(r541,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a507(r593,l0) a506(r592,l0) a509(r590,l0) a508(r168,l0) a510(r589,l0) a511(r809,l0) a513(r808,w0,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a477(r678,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a452(r230,l0) a453(r817,l0) a455(r816,w0,l0) a454(r703,w0,l0) a456(r221,l0) a457(r815,w0,l0) a459(r701,l0) a458(r216,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a665(r149,l0) a666(r146,l0) a667(r554,l0) a668(r144,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs:

;; a4(r282,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a5(r739,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a6(r740,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a7(r777,l0) conflicts: a9(r300,l0) a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a432(r218,l0) a433(r818,w0,l0) a433(r818,w1,l0) a434(r217,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a548(r541,l0) a549(r795,l0) a550(r794,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a477(r678,l0) a452(r230,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a458(r216,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a627(r327,l0) a623(r661,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs:

;; a8(r306,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a9(r300,l0) conflicts: a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a16(r483,l0) a17(r482,l0) a18(r479,l0) a19(r478,l0) a24(r409,l0) a25(r408,l0) a26(r405,l0) a22(r121,l0) a28(r403,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a36(r374,l0) a37(r114,l0) a39(r116,l0) a40(r368,l0) a41(r373,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a46(r361,l0) a47(r325,l0) a49(r337,l0) a50(r358,l0) a51(r360,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a54(r354,l0) a55(r323,l0) a57(r329,l0) a58(r351,l0) a59(r353,l0) a60(r781,w0,l0) a60(r781,w1,l0) a61(r780,w0,l0) a61(r780,w1,l0) a63(r318,l0) a62(r347,l0) a64(r344,l0) a65(r313,l0) a66(r346,l0) a555(r261,l0) a559(r530,l0) a561(r529,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a10(r301,l0) conflicts: a9(r300,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a16(r483,l0) a17(r482,l0) a18(r479,l0) a19(r478,l0) a24(r409,l0) a25(r408,l0) a26(r405,l0) a22(r121,l0) a28(r403,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a36(r374,l0) a37(r114,l0) a39(r116,l0) a40(r368,l0) a41(r373,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a46(r361,l0) a47(r325,l0) a49(r337,l0) a50(r358,l0) a51(r360,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a54(r354,l0) a55(r323,l0) a57(r329,l0) a58(r351,l0) a59(r353,l0) a60(r781,w0,l0) a60(r781,w1,l0) a61(r780,w0,l0) a61(r780,w1,l0) a63(r318,l0) a62(r347,l0) a64(r344,l0) a65(r313,l0) a66(r346,l0) a413(r247,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a11(r745,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a12(r746,l0) a13(r747,l0) a32(r379,l0) a33(r791,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a38(r788,l0) a42(r367,l0) a43(r372,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a48(r785,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a56(r782,l0) a60(r781,w0,l0) a60(r781,w1,l0) a61(r780,w0,l0) a61(r780,w1,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-2 12 14

;; a12(r746,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a13(r747,l0) a32(r379,l0) a33(r791,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a38(r788,l0) a42(r367,l0) a43(r372,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a48(r785,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a56(r782,l0) a60(r781,w0,l0) a60(r781,w1,l0) a61(r780,w0,l0) a61(r780,w1,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-2 12 14

;; a13(r747,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a32(r379,l0) a33(r791,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a38(r788,l0) a42(r367,l0) a43(r372,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a48(r785,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a56(r782,l0) a60(r781,w0,l0) a60(r781,w1,l0) a61(r780,w0,l0) a61(r780,w1,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a482(r761,l0) a489(r650,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a492(r310,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a557(r793,l0) a558(r792,l0) a425(r733,l0) a426(r242,l0) a427(r732,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a478(r677,l0) a499(r810,l0) a500(r603,l0) a423(r158,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a543(r547,l0) a504(r597,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a549(r795,l0) a550(r794,l0) a420(r737,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a435(r724,l0) a437(r722,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a476(r812,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-2 12 14

;; a14(r508,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r486,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r483,l0) conflicts: a9(r300,l0) a10(r301,l0) a17(r482,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r482,l0) conflicts: a9(r300,l0) a10(r301,l0) a16(r483,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r479,l0) conflicts: a9(r300,l0) a10(r301,l0) a19(r478,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r478,l0) conflicts: a9(r300,l0) a10(r301,l0) a18(r479,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r456,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r434,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r121,l0) conflicts: a9(r300,l0) a10(r301,l0) a26(r405,l0) a28(r403,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r412,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r409,l0) conflicts: a9(r300,l0) a10(r301,l0) a25(r408,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r408,l0) conflicts: a9(r300,l0) a10(r301,l0) a24(r409,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r405,l0) conflicts: a9(r300,l0) a10(r301,l0) a22(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r294,l0) conflicts: a9(r300,l0) a10(r301,l0) a22(r121,l0) a28(r403,l0) a30(r334,l0) a31(r307,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a36(r374,l0) a37(r114,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a28(r403,l0) conflicts: a9(r300,l0) a10(r301,l0) a22(r121,l0) a27(r294,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r382,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r334,l0) conflicts: a9(r300,l0) a10(r301,l0) a22(r121,l0) a27(r294,l0) a31(r307,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a36(r374,l0) a37(r114,l0) a39(r116,l0) a40(r368,l0) a41(r373,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a46(r361,l0) a47(r325,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a31(r307,l0) conflicts: a9(r300,l0) a10(r301,l0) a22(r121,l0) a27(r294,l0) a30(r334,l0) a34(r790,w0,l0) a34(r790,w1,l0) a35(r789,w0,l0) a35(r789,w1,l0) a36(r374,l0) a37(r114,l0) a39(r116,l0) a40(r368,l0) a41(r373,l0) a44(r787,w0,l0) a44(r787,w1,l0) a45(r786,w0,l0) a45(r786,w1,l0) a46(r361,l0) a47(r325,l0) a49(r337,l0) a50(r358,l0) a51(r360,l0) a52(r784,w0,l0) a52(r784,w1,l0) a53(r783,w0,l0) a53(r783,w1,l0) a54(r354,l0) a55(r323,l0)
;;     total conflict hard regs: 16-17
;;     conflict hard regs: 16-17

;; a32(r379,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0) a33(r791,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r791,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0) a32(r379,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r790,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r789,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r374,l0) conflicts: a9(r300,l0) a10(r301,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0) a37(r114,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r114,l0) conflicts: a9(r300,l0) a10(r301,l0) a27(r294,l0) a30(r334,l0) a31(r307,l0) a36(r374,l0) a39(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r788,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0) a42(r367,l0) a43(r372,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r116,l0) conflicts: a9(r300,l0) a10(r301,l0) a30(r334,l0) a31(r307,l0) a37(r114,l0) a40(r368,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a40(r368,l0) conflicts: a9(r300,l0) a10(r301,l0) a30(r334,l0) a31(r307,l0) a39(r116,l0) a41(r373,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a41(r373,l0) conflicts: a9(r300,l0) a10(r301,l0) a30(r334,l0) a31(r307,l0) a40(r368,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a42(r367,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0) a38(r788,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a43(r372,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0) a38(r788,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a44(r787,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a45(r786,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a30(r334,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a46(r361,l0) conflicts: a9(r300,l0) a10(r301,l0) a30(r334,l0) a31(r307,l0) a47(r325,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r325,l0) conflicts: a9(r300,l0) a10(r301,l0) a30(r334,l0) a31(r307,l0) a46(r361,l0) a49(r337,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r785,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r337,l0) conflicts: a9(r300,l0) a10(r301,l0) a31(r307,l0) a47(r325,l0) a50(r358,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r358,l0) conflicts: a9(r300,l0) a10(r301,l0) a31(r307,l0) a49(r337,l0) a51(r360,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r360,l0) conflicts: a9(r300,l0) a10(r301,l0) a31(r307,l0) a50(r358,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r784,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a53(r783,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a31(r307,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r354,l0) conflicts: a9(r300,l0) a10(r301,l0) a31(r307,l0) a55(r323,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a55(r323,l0) conflicts: a9(r300,l0) a10(r301,l0) a31(r307,l0) a54(r354,l0) a57(r329,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a56(r782,l0) conflicts: a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r329,l0) conflicts: a9(r300,l0) a10(r301,l0) a55(r323,l0) a58(r351,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a58(r351,l0) conflicts: a9(r300,l0) a10(r301,l0) a57(r329,l0) a59(r353,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a59(r353,l0) conflicts: a9(r300,l0) a10(r301,l0) a58(r351,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a60(r781,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a61(r780,l0) conflicts:
;;   subobject 0: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a9(r300,l0) a10(r301,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r347,l0) conflicts: a9(r300,l0) a10(r301,l0) a63(r318,l0) a64(r344,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r318,l0) conflicts: a9(r300,l0) a10(r301,l0) a62(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r344,l0) conflicts: a9(r300,l0) a10(r301,l0) a62(r347,l0) a65(r313,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r313,l0) conflicts: a9(r300,l0) a10(r301,l0) a64(r344,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r346,l0) conflicts: a9(r300,l0) a10(r301,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r245,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a68(r282,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a69(r300,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a223(r261,l1) a70(r301,l1) a227(r530,l1) a229(r529,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r301,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a224(r532,l1) a223(r261,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a71(r306,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a72(r739,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a73(r740,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a74(r745,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a75(r746,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a76(r747,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a77(r774,l1) conflicts:
;;   subobject 0: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a160(r310,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a100(r218,l1) a101(r818,w0,l1) a101(r818,w1,l1) a102(r217,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a170(r600,l1) a169(r602,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a216(r541,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a175(r593,l1) a174(r592,l1) a177(r590,l1) a176(r168,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a145(r678,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a120(r230,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a126(r216,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a611(r149,l1) a612(r146,l1) a613(r554,l1) a614(r144,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs: 0-3 12 14 16-20


;;   subobject 1: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a160(r310,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a198(r560,l1) a199(r264,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a98(r726,w0,l1) a100(r218,l1) a101(r818,w0,l1) a102(r217,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a170(r600,l1) a169(r602,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a215(r796,l1) a216(r541,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a175(r593,l1) a174(r592,l1) a177(r590,l1) a176(r168,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a180(r583,w0,l1) a182(r585,l1) a183(r807,w0,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a145(r678,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a120(r230,l1) a121(r817,l1) a123(r816,w0,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a127(r701,l1) a126(r216,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a611(r149,l1) a612(r146,l1) a613(r554,l1) a614(r144,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs: 0-3 12 14 16-20

;; a78(r775,l1) conflicts:
;;   subobject 0: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a160(r310,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a100(r218,l1) a101(r818,w0,l1) a101(r818,w1,l1) a102(r217,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a170(r600,l1) a169(r602,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a216(r541,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a175(r593,l1) a174(r592,l1) a177(r590,l1) a176(r168,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a145(r678,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a120(r230,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a126(r216,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a611(r149,l1) a612(r146,l1) a613(r554,l1) a614(r144,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs: 0-3 12 14 16-20


;;   subobject 1: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a160(r310,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a198(r560,l1) a199(r264,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a98(r726,w0,l1) a100(r218,l1) a101(r818,w0,l1) a102(r217,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a170(r600,l1) a169(r602,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a215(r796,l1) a216(r541,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a175(r593,l1) a174(r592,l1) a177(r590,l1) a176(r168,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a180(r583,w0,l1) a182(r585,l1) a183(r807,w0,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a145(r678,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a120(r230,l1) a121(r817,l1) a123(r816,w0,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a127(r701,l1) a126(r216,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a611(r149,l1) a612(r146,l1) a613(r554,l1) a614(r144,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14 16-20
;;     conflict hard regs: 0-3 12 14 16-20

;; a79(r776,l1) conflicts:
;;   subobject 0: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a150(r761,l1) a157(r650,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a160(r310,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a225(r793,l1) a226(r792,l1) a93(r733,l1) a94(r242,l1) a95(r732,l1) a97(r820,l1) a99(r819,w0,l1) a98(r726,w0,l1) a101(r818,w0,l1) a146(r677,l1) a167(r810,l1) a168(r603,l1) a91(r158,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a211(r547,l1) a172(r597,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a217(r795,l1) a218(r794,l1) a88(r737,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a180(r583,w0,l1) a183(r807,w0,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a103(r724,l1) a105(r722,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w0,l1) a122(r703,w0,l1) a125(r815,w0,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a144(r812,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a80(r777,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a100(r218,l1) a101(r818,w0,l1) a101(r818,w1,l1) a102(r217,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a216(r541,l1) a217(r795,l1) a218(r794,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a145(r678,l1) a120(r230,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a126(r216,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a573(r327,l1) a569(r661,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a81(r247,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a204(r801,l1) a206(r800,l1) a220(r534,l1) a219(r536,l1) a221(r533,l1) a222(r535,l1) a224(r532,l1) a223(r261,l1) a70(r301,l1) a225(r793,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a216(r541,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a145(r678,l1) a573(r327,l1) a569(r661,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a82(r249,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a573(r327,l1) a569(r661,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a83(r263,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a204(r801,l1) a206(r800,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a145(r678,l1) a573(r327,l1) a569(r661,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a84(r266,l1) conflicts: a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a167(r810,l1) a170(r600,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a85(r267,l1) conflicts: a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a86(r319,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a653(r626,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r741,l1) conflicts: a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r737,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r738,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a92(r302,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a204(r801,l1) a206(r800,l1) a96(r731,l1) a97(r820,l1) a99(r819,w0,l1) a99(r819,w1,l1) a98(r726,w0,l1) a98(r726,w1,l1) a100(r218,l1) a101(r818,w0,l1) a101(r818,w1,l1) a102(r217,l1) a170(r600,l1) a169(r602,l1) a209(r549,l1) a208(r550,l1) a210(r548,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a215(r796,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a192(r571,l1) a193(r265,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1) a196(r802,l1) a145(r678,l1) a120(r230,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a126(r216,l1) a141(r814,l1) a142(r813,l1) a143(r215,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a90(r736,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a91(r158,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a171(r246,l1) a90(r736,l1) a173(r595,l1) a172(r597,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a92(r302,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a89(r738,l1) a167(r810,l1) a170(r600,l1) a169(r602,l1) a175(r593,l1) a174(r592,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1) a184(r581,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a191(r569,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a93(r733,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r242,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r732,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a96(r731,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r820,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r726,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a99(r819,w0,l1) a99(r819,w1,l1) a100(r218,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a99(r819,w0,l1) a100(r218,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a99(r819,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a98(r726,w0,l1) a98(r726,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a98(r726,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r218,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1) a98(r726,w0,l1) a98(r726,w1,l1) a101(r818,w0,l1) a101(r818,w1,l1) a102(r217,l1) a120(r230,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a126(r216,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r818,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r217,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1) a120(r230,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a124(r221,l1) a125(r815,w0,l1) a125(r815,w1,l1) a126(r216,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a103(r724,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r719,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a105(r722,l1) a108(r721,l1) a107(r713,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r722,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a104(r719,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r744,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a104(r719,l1) a108(r721,l1) a107(r713,l1) a109(r714,l1) a110(r708,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a107(r713,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a104(r719,l1) a108(r721,l1) a109(r714,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r721,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a104(r719,l1) a107(r713,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r714,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a107(r713,l1) a110(r708,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r708,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a109(r714,l1) a111(r718,l1) a112(r715,l1) a113(r222,l1) a114(r710,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r718,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a110(r708,l1) a112(r715,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r715,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a110(r708,l1) a111(r718,l1) a113(r222,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r222,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a110(r708,l1) a112(r715,l1) a114(r710,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1) a118(r254,l1) a119(r219,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a114(r710,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a110(r708,l1) a113(r222,l1) a116(r709,l1) a115(r712,l1) a117(r707,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a115(r712,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a114(r710,l1) a116(r709,l1) a117(r707,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r709,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a114(r710,l1) a115(r712,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r707,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a114(r710,l1) a115(r712,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r254,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a119(r219,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a119(r219,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a118(r254,l1) a121(r817,l1) a123(r816,w1,l1) a123(r816,w0,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a127(r701,l1) a129(r699,l1) a128(r696,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1) a140(r253,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a120(r230,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1) a102(r217,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r817,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a118(r254,l1) a119(r219,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a122(r703,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a123(r816,w1,l1) a123(r816,w0,l1) a124(r221,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a123(r816,w0,l1) a124(r221,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a123(r816,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a122(r703,w1,l1) a122(r703,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a122(r703,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a124(r221,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1) a102(r217,l1) a122(r703,w1,l1) a122(r703,w0,l1) a125(r815,w0,l1) a125(r815,w1,l1) a126(r216,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a125(r815,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a124(r221,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a89(r738,l1) a106(r744,l1) a100(r218,l1) a102(r217,l1) a118(r254,l1) a119(r219,l1) a124(r221,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a126(r216,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a89(r738,l1) a100(r218,l1) a102(r217,l1) a124(r221,l1) a141(r814,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a127(r701,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a118(r254,l1) a119(r219,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a128(r696,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a119(r219,l1) a129(r699,l1) a130(r689,l1) a131(r698,l1) a132(r684,l1) a133(r688,l1) a134(r685,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a129(r699,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a130(r689,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1) a131(r698,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a131(r698,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1) a130(r689,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a132(r684,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a133(r688,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1) a134(r685,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a134(r685,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a128(r696,l1) a133(r688,l1) a135(r691,l1) a136(r695,l1) a137(r692,l1) a138(r690,l1) a139(r686,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a135(r691,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a134(r685,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a136(r695,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a134(r685,l1) a137(r692,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a137(r692,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a134(r685,l1) a136(r695,l1) a138(r690,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a138(r690,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a134(r685,l1) a137(r692,l1) a139(r686,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a139(r686,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a134(r685,l1) a138(r690,l1) a140(r253,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a140(r253,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a113(r222,l1) a119(r219,l1) a139(r686,l1) a141(r814,l1)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a141(r814,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a126(r216,l1) a140(r253,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a142(r813,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a143(r215,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a143(r215,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a89(r738,l1) a142(r813,l1)
;;     total conflict hard regs: 12 14 16
;;     conflict hard regs: 12 14 16

;; a144(r812,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a145(r678,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a146(r677,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a147(r271,l1) conflicts: a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a148(r286,l1) conflicts: a147(r271,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a149(r762,l1) conflicts: a147(r271,l1) a148(r286,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a567(r663,l1) a572(r657,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a150(r761,l1) conflicts: a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r269,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1)
;;     total conflict hard regs: 0-3 12 14 17-18
;;     conflict hard regs:

;; a152(r652,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r270,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a150(r761,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a573(r327,l1) a574(r656,l1) a562(r675,l1) a563(r676,l1) a564(r674,l1) a565(r673,l1) a566(r669,l1) a569(r661,l1) a567(r663,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1)
;;     total conflict hard regs: 0-3 12 14 16 18
;;     conflict hard regs:

;; a154(r654,l1) conflicts: a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r653,l1) conflicts: a151(r269,l1) a153(r270,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a152(r652,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1) a156(r651,l1) a157(r650,l1) a573(r327,l1) a569(r661,l1) a568(r662,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1)
;;     total conflict hard regs: 16-18
;;     conflict hard regs:

;; a156(r651,l1) conflicts: a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r650,l1) conflicts: a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a154(r654,l1) a87(r741,l1) a84(r266,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a158(r293,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a159(r742,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a641(r191,l1) a647(r317,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r310,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r771,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r770,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r769,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a164(r297,l1) a165(r268,l1) a160(r310,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a164(r297,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a165(r268,l1) a160(r310,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r268,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a87(r741,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a160(r310,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a166(r304,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a160(r310,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a653(r626,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r810,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a168(r603,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a169(r602,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a92(r302,l1) a89(r738,l1) a170(r600,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a170(r600,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a89(r738,l1) a169(r602,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a171(r246,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a91(r158,l1) a173(r595,l1) a172(r597,l1) a177(r590,l1) a178(r589,l1) a179(r809,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1) a185(r580,l1) a186(r806,l1) a188(r805,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a172(r597,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a173(r595,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a174(r592,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a92(r302,l1) a89(r738,l1) a175(r593,l1) a176(r168,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a175(r593,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a92(r302,l1) a89(r738,l1) a174(r592,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r168,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a92(r302,l1) a89(r738,l1) a174(r592,l1) a181(r808,w0,l1) a181(r808,w1,l1) a180(r583,w0,l1) a180(r583,w1,l1) a182(r585,l1) a183(r807,w0,l1) a183(r807,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a177(r590,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a178(r589,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r809,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a180(r583,l1) conflicts:
;;   subobject 0: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a181(r808,w0,l1) a181(r808,w1,l1) a182(r585,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a181(r808,w0,l1) a182(r585,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a181(r808,l1) conflicts:
;;   subobject 0: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a180(r583,w0,l1) a180(r583,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a180(r583,w0,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a182(r585,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a176(r168,l1) a180(r583,w0,l1) a180(r583,w1,l1) a183(r807,w0,l1) a183(r807,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a183(r807,l1) conflicts:
;;   subobject 0: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a182(r585,l1)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1) a176(r168,l1) a182(r585,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a184(r581,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a185(r580,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a186(r806,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a187(r248,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a91(r158,l1) a171(r246,l1) a211(r547,l1) a212(r799,l1) a213(r798,l1) a214(r797,w0,l1) a214(r797,w1,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a188(r805,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a189(r138,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a91(r158,l1) a171(r246,l1) a211(r547,l1) a212(r799,l1) a213(r798,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a106(r744,l1) a187(r248,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a204(r801,l1) a206(r800,l1) a91(r158,l1) a171(r246,l1) a211(r547,l1) a212(r799,l1) a213(r798,l1) a190(r804,l1) a195(r803,l1) a196(r802,l1) a197(r155,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a190(r804,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a91(r158,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a191(r569,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a92(r302,l1) a89(r738,l1) a193(r265,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a192(r571,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a193(r265,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a193(r265,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a192(r571,l1) a191(r569,l1) a194(r568,l1) a195(r803,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a194(r568,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a193(r265,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a195(r803,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a171(r246,l1) a193(r265,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a196(r802,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a197(r155,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a171(r246,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a198(r560,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a199(r264,l1) a207(r139,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a199(r264,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a207(r139,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a200(r154,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a610(r556,l1) a611(r149,l1) a614(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a201(r148,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a202(r143,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a203(r147,l1) a205(r142,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a203(r147,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a205(r142,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a204(r801,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a205(r142,l1) a207(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a205(r142,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a204(r801,l1) a610(r556,l1) a611(r149,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a206(r800,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a207(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a207(r139,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a204(r801,l1) a206(r800,l1) a607(r563,l1) a608(r558,l1) a609(r561,l1) a610(r556,l1) a612(r146,l1) a613(r554,l1) a615(r564,l1)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a208(r550,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a209(r549,l1) a210(r548,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a209(r549,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a208(r550,l1) a210(r548,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a210(r548,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a209(r549,l1) a208(r550,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a211(r547,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a212(r799,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a213(r798,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a214(r797,l1) conflicts:
;;   subobject 0: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a78(r775,w0,l1) a79(r776,w0,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a187(r248,l1)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a215(r796,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a216(r541,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a217(r795,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a218(r794,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a219(r536,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a220(r534,l1) a221(r533,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a220(r534,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a219(r536,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a221(r533,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a219(r536,l1) a222(r535,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a222(r535,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a221(r533,l1) a224(r532,l1) a223(r261,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a223(r261,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a222(r535,l1) a224(r532,l1) a70(r301,l1) a225(r793,l1) a226(r792,l1) a228(r528,l1) a227(r530,l1) a69(r300,l1) a229(r529,l1)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a224(r532,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a222(r535,l1) a223(r261,l1) a70(r301,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a225(r793,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a223(r261,l1) a70(r301,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a226(r792,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a223(r261,l1) a70(r301,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a227(r530,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a223(r261,l1) a70(r301,l1) a228(r528,l1) a69(r300,l1) a229(r529,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a228(r528,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a223(r261,l1) a70(r301,l1) a227(r530,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a229(r529,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a223(r261,l1) a70(r301,l1) a227(r530,l1) a69(r300,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a230(r245,l6) conflicts: a262(r327,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a231(r247,l6) conflicts: a262(r327,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a258(r661,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 16-18
;;     conflict hard regs: 16-18

;; a232(r249,l6) conflicts: a262(r327,l6) a231(r247,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a258(r661,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 16-18
;;     conflict hard regs: 16-18

;; a233(r263,l6) conflicts: a262(r327,l6) a231(r247,l6) a232(r249,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a258(r661,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 16-18
;;     conflict hard regs: 16-18

;; a234(r269,l6) conflicts: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 17-18
;;     conflict hard regs: 0-3 12 14 17-18

;; a235(r270,l6) conflicts: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 16 18
;;     conflict hard regs: 0-3 12 14 16 18

;; a236(r271,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a237(r282,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a238(r286,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a239(r306,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a240(r653,l6) conflicts: a262(r327,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a258(r661,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 16-18
;;     conflict hard regs: 16-18

;; a241(r739,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a242(r740,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a243(r745,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a244(r746,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a245(r747,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a246(r762,l6) conflicts: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a247(r774,l6) conflicts:
;;   subobject 0: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 16-18
;;     conflict hard regs: 0-3 12 14 16-18


;;   subobject 1: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a248(r775,w0,l6) a249(r776,w0,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 16-18
;;     conflict hard regs: 0-3 12 14 16-18

;; a248(r775,l6) conflicts:
;;   subobject 0: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 16-18
;;     conflict hard regs: 0-3 12 14 16-18


;;   subobject 1: a262(r327,l6) a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a249(r776,w0,l6) a250(r777,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a258(r661,l6) a256(r663,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14 16-18
;;     conflict hard regs: 0-3 12 14 16-18

;; a249(r776,l6) conflicts:
;;   subobject 0: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a262(r327,l6) a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a248(r775,w0,l6) a263(r656,l6) a251(r675,l6) a252(r676,l6) a253(r674,l6) a254(r673,l6) a255(r669,l6) a256(r663,l6) a261(r657,l6)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a250(r777,l6) conflicts: a262(r327,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a258(r661,l6) a257(r662,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs: 16-18
;;     conflict hard regs: 16-18

;; a251(r675,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a252(r676,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a252(r676,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a251(r675,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a253(r674,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a254(r673,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a255(r669,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a256(r663,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a261(r657,l6)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a257(r662,l6) conflicts: a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a258(r661,l6) a259(r659,l6) a260(r658,l6) a261(r657,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a258(r661,l6) conflicts: a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a257(r662,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a259(r659,l6) conflicts: a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a257(r662,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a260(r658,l6) conflicts: a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a240(r653,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a250(r777,l6) a257(r662,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a261(r657,l6) conflicts: a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6) a256(r663,l6) a257(r662,l6)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a262(r327,l6) conflicts: a230(r245,l6) a231(r247,l6) a232(r249,l6) a233(r263,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a240(r653,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6) a250(r777,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a263(r656,l6) conflicts: a230(r245,l6) a234(r269,l6) a235(r270,l6) a236(r271,l6) a237(r282,l6) a238(r286,l6) a239(r306,l6) a241(r739,l6) a242(r740,l6) a243(r745,l6) a244(r746,l6) a245(r747,l6) a246(r762,l6) a247(r774,w0,l6) a247(r774,w1,l6) a248(r775,w0,l6) a248(r775,w1,l6) a249(r776,w0,l6) a249(r776,w1,l6)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a264(r245,l4) conflicts: a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a265(r247,l4) conflicts: a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a266(r249,l4) conflicts: a265(r247,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a267(r263,l4) conflicts: a265(r247,l4) a266(r249,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a268(r266,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a269(r267,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a270(r282,l4) conflicts: a264(r245,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a271(r297,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a272(r302,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a273(r306,l4) conflicts: a264(r245,l4) a270(r282,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a274(r319,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a275(r739,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a276(r740,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a277(r741,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a278(r745,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a279(r746,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a280(r747,l4) conflicts: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a281(r774,l4) conflicts:
;;   subobject 0: a264(r245,l4) a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a270(r282,l4) a271(r297,l4) a272(r302,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a277(r741,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a282(r775,w0,l4) a282(r775,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a264(r245,l4) a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a270(r282,l4) a271(r297,l4) a272(r302,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a277(r741,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a282(r775,w0,l4) a283(r776,w0,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a282(r775,l4) conflicts:
;;   subobject 0: a264(r245,l4) a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a270(r282,l4) a271(r297,l4) a272(r302,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a277(r741,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a283(r776,w0,l4) a283(r776,w1,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a264(r245,l4) a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a270(r282,l4) a271(r297,l4) a272(r302,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a277(r741,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a283(r776,w0,l4) a284(r777,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a283(r776,l4) conflicts:
;;   subobject 0: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a264(r245,l4) a270(r282,l4) a273(r306,l4) a274(r319,l4) a275(r739,l4) a276(r740,l4) a278(r745,l4) a279(r746,l4) a280(r747,l4) a281(r774,w0,l4) a282(r775,w0,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a284(r777,l4) conflicts: a265(r247,l4) a266(r249,l4) a267(r263,l4) a268(r266,l4) a269(r267,l4) a271(r297,l4) a272(r302,l4) a277(r741,l4) a281(r774,w0,l4) a281(r774,w1,l4) a282(r775,w0,l4) a282(r775,w1,l4)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a285(r245,l3) conflicts: a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a286(r247,l3) conflicts: a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a287(r249,l3) conflicts: a286(r247,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a288(r263,l3) conflicts: a286(r247,l3) a287(r249,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a289(r266,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a290(r267,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a291(r268,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a292(r282,l3) conflicts: a285(r245,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a293(r293,l3) conflicts: a285(r245,l3) a292(r282,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a294(r297,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a295(r302,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a296(r304,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a599(r626,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a297(r306,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a298(r319,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a599(r626,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a299(r739,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a300(r740,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a301(r741,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a302(r742,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a587(r191,l3) a593(r317,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a303(r745,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a304(r746,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a305(r747,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a306(r769,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a307(r770,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a308(r771,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a309(r774,l3) conflicts:
;;   subobject 0: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:


;;   subobject 1: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a310(r775,w0,l3) a311(r776,w0,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a310(r775,l3) conflicts:
;;   subobject 0: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:


;;   subobject 1: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a311(r776,w0,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a311(r776,l3) conflicts:
;;   subobject 0: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:


;;   subobject 1: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a310(r775,w0,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a312(r777,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a318(r606,l3) a301(r741,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a313(r280,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a314(r743,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a315(r303,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a583(r273,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3) a604(r612,l3) a605(r609,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a599(r626,l3)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a316(r764,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a317(r193,l3) a320(r281,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a317(r193,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a320(r281,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a318(r606,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a320(r281,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a319(r823,l3) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a320(r281,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a318(r606,l3) a606(r608,l3) a586(r310,l3) a588(r811,l3) a587(r191,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3) a599(r626,l3) a601(r622,l3) a602(r181,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a321(r193,l5) conflicts: a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a322(r245,l5) conflicts: a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a323(r247,l5) conflicts: a321(r193,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a324(r249,l5) conflicts: a321(r193,l5) a323(r247,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a325(r263,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a326(r266,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a327(r267,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a328(r268,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a329(r280,l5) conflicts: a322(r245,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a330(r281,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a331(r282,l5) conflicts: a322(r245,l5) a329(r280,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a332(r293,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a333(r297,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a334(r302,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a335(r303,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a336(r304,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a370(r626,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a337(r306,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a338(r319,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a370(r626,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a339(r739,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a340(r740,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a341(r742,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a358(r191,l5) a364(r317,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a342(r743,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a343(r745,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a344(r746,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a345(r747,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a346(r764,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a347(r769,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a348(r770,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a349(r771,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a350(r774,l5) conflicts:
;;   subobject 0: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a351(r775,w0,l5) a352(r776,w0,l5) a353(r777,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a351(r775,l5) conflicts:
;;   subobject 0: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a352(r776,w0,l5) a353(r777,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a352(r776,l5) conflicts:
;;   subobject 0: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14


;;   subobject 1: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a351(r775,w0,l5) a354(r273,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5) a375(r612,l5) a376(r609,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a370(r626,l5)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs: 0-2 12 14

;; a353(r777,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a377(r608,l5) a357(r310,l5) a359(r811,l5) a358(r191,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5) a370(r626,l5) a372(r622,l5) a373(r181,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a354(r273,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a355(r274,l5) a356(r275,l5) a374(r615,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a355(r274,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a356(r275,l5) a374(r615,l5) a370(r626,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a356(r275,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a370(r626,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a357(r310,l5) conflicts: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a337(r306,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a358(r191,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a359(r811,l5) a363(r640,l5) a364(r317,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a359(r811,l5) conflicts: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a337(r306,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5) a358(r191,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a360(r642,l5) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a361(r638,l5) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a362(r635,l5) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a363(r640,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a364(r317,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5) a365(r189,l5) a366(r633,l5) a367(r186,l5) a368(r632,l5) a369(r627,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a365(r189,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5) a364(r317,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a366(r633,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5) a364(r317,l5) a367(r186,l5) a368(r632,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a367(r186,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5) a364(r317,l5) a366(r633,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a368(r632,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a358(r191,l5) a364(r317,l5) a366(r633,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a369(r627,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5) a364(r317,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a370(r626,l5) conflicts: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5) a355(r274,l5) a356(r275,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a371(r625,l5) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a372(r622,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a373(r181,l5) conflicts: a321(r193,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a330(r281,l5) a333(r297,l5) a334(r302,l5) a341(r742,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a353(r777,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a374(r615,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a354(r273,l5) a355(r274,l5) a375(r612,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a375(r612,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a374(r615,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a376(r609,l5) conflicts: a322(r245,l5) a329(r280,l5) a331(r282,l5) a332(r293,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a377(r608,l5) conflicts: a321(r193,l5) a322(r245,l5) a323(r247,l5) a324(r249,l5) a325(r263,l5) a326(r266,l5) a327(r267,l5) a328(r268,l5) a329(r280,l5) a330(r281,l5) a331(r282,l5) a332(r293,l5) a333(r297,l5) a334(r302,l5) a335(r303,l5) a336(r304,l5) a337(r306,l5) a338(r319,l5) a339(r739,l5) a340(r740,l5) a341(r742,l5) a342(r743,l5) a343(r745,l5) a344(r746,l5) a345(r747,l5) a346(r764,l5) a347(r769,l5) a348(r770,l5) a349(r771,l5) a350(r774,w0,l5) a350(r774,w1,l5) a351(r775,w0,l5) a351(r775,w1,l5) a352(r776,w0,l5) a352(r776,w1,l5) a353(r777,l5)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a378(r138,l2) conflicts:
;;   subobject 0: a404(r563,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a404(r563,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a401(r775,w0,l2) a402(r776,w0,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a379(r139,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a380(r142,l2) conflicts: a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a381(r143,l2) conflicts: a380(r142,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a382(r147,l2) conflicts: a380(r142,l2) a381(r143,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a383(r148,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a384(r154,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a385(r245,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a386(r247,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a387(r248,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a388(r263,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a389(r264,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a390(r282,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a391(r306,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a392(r560,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a393(r738,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a394(r739,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a395(r740,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a396(r744,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a397(r745,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a398(r746,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a399(r747,l2) conflicts: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a400(r774,l2) conflicts:
;;   subobject 0: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a403(r777,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a408(r149,l2) a409(r146,l2) a410(r554,l2) a411(r144,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a404(r563,l2) a378(r138,w0,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a401(r775,w0,l2) a402(r776,w0,l2) a403(r777,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a408(r149,l2) a409(r146,l2) a410(r554,l2) a411(r144,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a401(r775,l2) conflicts:
;;   subobject 0: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a403(r777,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a408(r149,l2) a409(r146,l2) a410(r554,l2) a411(r144,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a404(r563,l2) a378(r138,w0,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a402(r776,w0,l2) a403(r777,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a408(r149,l2) a409(r146,l2) a410(r554,l2) a411(r144,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a402(r776,l2) conflicts:
;;   subobject 0: a404(r563,l2) a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a404(r563,l2) a378(r138,w0,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a401(r775,w0,l2) a405(r558,l2) a406(r561,l2) a407(r556,l2) a409(r146,l2) a410(r554,l2) a412(r564,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a403(r777,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a407(r556,l2) a408(r149,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a404(r563,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a405(r558,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a406(r561,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a406(r561,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a405(r558,l2) a407(r556,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a407(r556,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a403(r777,l2) a406(r561,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a408(r149,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a410(r554,l2) a411(r144,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a409(r146,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a410(r554,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a385(r245,l2) a386(r247,l2) a387(r248,l2) a388(r263,l2) a389(r264,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a393(r738,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2) a403(r777,l2) a408(r149,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a411(r144,l2) conflicts: a380(r142,l2) a381(r143,l2) a382(r147,l2) a383(r148,l2) a384(r154,l2) a386(r247,l2) a388(r263,l2) a393(r738,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a403(r777,l2) a408(r149,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a412(r564,l2) conflicts: a378(r138,w0,l2) a378(r138,w1,l2) a379(r139,l2) a385(r245,l2) a387(r248,l2) a390(r282,l2) a391(r306,l2) a392(r560,l2) a394(r739,l2) a395(r740,l2) a396(r744,l2) a397(r745,l2) a398(r746,l2) a399(r747,l2) a400(r774,w0,l2) a400(r774,w1,l2) a401(r775,w0,l2) a401(r775,w1,l2) a402(r776,w0,l2) a402(r776,w1,l2)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a413(r247,l0) conflicts: a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a536(r801,l0) a538(r800,l0) a552(r534,l0) a551(r536,l0) a553(r533,l0) a554(r535,l0) a556(r532,l0) a555(r261,l0) a557(r793,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a548(r541,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a477(r678,l0) a627(r327,l0) a623(r661,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a414(r249,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a627(r327,l0) a623(r661,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a415(r263,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a536(r801,l0) a538(r800,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a477(r678,l0) a627(r327,l0) a623(r661,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a416(r266,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a499(r810,l0) a502(r600,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a417(r267,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a418(r319,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a686(r626,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a419(r741,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a420(r737,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a421(r738,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a424(r302,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a536(r801,l0) a538(r800,l0) a428(r731,l0) a429(r820,l0) a431(r819,w0,l0) a431(r819,w1,l0) a430(r726,w0,l0) a430(r726,w1,l0) a432(r218,l0) a433(r818,w0,l0) a433(r818,w1,l0) a434(r217,l0) a502(r600,l0) a501(r602,l0) a541(r549,l0) a540(r550,l0) a542(r548,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a547(r796,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a524(r571,l0) a525(r265,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0) a528(r802,l0) a477(r678,l0) a452(r230,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a458(r216,l0) a473(r814,l0) a474(r813,l0) a475(r215,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a422(r736,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a423(r158,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a503(r246,l0) a422(r736,l0) a505(r595,l0) a504(r597,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a424(r302,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a421(r738,l0) a499(r810,l0) a502(r600,l0) a501(r602,l0) a507(r593,l0) a506(r592,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0) a516(r581,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a523(r569,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs: 16-20
;;     conflict hard regs: 16-20

;; a425(r733,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a426(r242,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a427(r732,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a428(r731,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a429(r820,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a430(r726,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a431(r819,w0,l0) a431(r819,w1,l0) a432(r218,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a431(r819,w0,l0) a432(r218,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a431(r819,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a430(r726,w0,l0) a430(r726,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a430(r726,w0,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a432(r218,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0) a430(r726,w0,l0) a430(r726,w1,l0) a433(r818,w0,l0) a433(r818,w1,l0) a434(r217,l0) a452(r230,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a458(r216,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a433(r818,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a432(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a432(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a434(r217,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0) a432(r218,l0) a452(r230,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a456(r221,l0) a457(r815,w0,l0) a457(r815,w1,l0) a458(r216,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a435(r724,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a436(r719,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a437(r722,l0) a440(r721,l0) a439(r713,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a437(r722,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a436(r719,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a438(r744,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a436(r719,l0) a440(r721,l0) a439(r713,l0) a441(r714,l0) a442(r708,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a439(r713,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a436(r719,l0) a440(r721,l0) a441(r714,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a440(r721,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a436(r719,l0) a439(r713,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a441(r714,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a439(r713,l0) a442(r708,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a442(r708,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a441(r714,l0) a443(r718,l0) a444(r715,l0) a445(r222,l0) a446(r710,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a443(r718,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a442(r708,l0) a444(r715,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a444(r715,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a442(r708,l0) a443(r718,l0) a445(r222,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a445(r222,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a442(r708,l0) a444(r715,l0) a446(r710,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0) a450(r254,l0) a451(r219,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a446(r710,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a442(r708,l0) a445(r222,l0) a448(r709,l0) a447(r712,l0) a449(r707,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a447(r712,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a446(r710,l0) a448(r709,l0) a449(r707,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a448(r709,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a446(r710,l0) a447(r712,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a449(r707,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a446(r710,l0) a447(r712,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a450(r254,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a451(r219,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a451(r219,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a450(r254,l0) a453(r817,l0) a455(r816,w0,l0) a455(r816,w1,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a459(r701,l0) a461(r699,l0) a460(r696,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0) a472(r253,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a452(r230,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0) a432(r218,l0) a434(r217,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a453(r817,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a450(r254,l0) a451(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a454(r703,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a455(r816,w0,l0) a455(r816,w1,l0) a456(r221,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a455(r816,w0,l0) a456(r221,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a455(r816,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a454(r703,w0,l0) a454(r703,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a454(r703,w0,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a456(r221,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0) a432(r218,l0) a434(r217,l0) a454(r703,w0,l0) a454(r703,w1,l0) a457(r815,w0,l0) a457(r815,w1,l0) a458(r216,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a457(r815,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a456(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a438(r744,l0) a432(r218,l0) a434(r217,l0) a450(r254,l0) a451(r219,l0) a456(r221,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a458(r216,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a421(r738,l0) a432(r218,l0) a434(r217,l0) a456(r221,l0) a473(r814,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a459(r701,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a450(r254,l0) a451(r219,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a460(r696,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a451(r219,l0) a461(r699,l0) a462(r689,l0) a463(r698,l0) a464(r684,l0) a465(r688,l0) a466(r685,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a461(r699,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a462(r689,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0) a463(r698,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a463(r698,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0) a462(r689,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a464(r684,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a465(r688,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0) a466(r685,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a466(r685,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a460(r696,l0) a465(r688,l0) a467(r691,l0) a468(r695,l0) a469(r692,l0) a470(r690,l0) a471(r686,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a467(r691,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a466(r685,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a468(r695,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a466(r685,l0) a469(r692,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a469(r692,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a466(r685,l0) a468(r695,l0) a470(r690,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a470(r690,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a466(r685,l0) a469(r692,l0) a471(r686,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a471(r686,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a466(r685,l0) a470(r690,l0) a472(r253,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a472(r253,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a445(r222,l0) a451(r219,l0) a471(r686,l0) a473(r814,l0)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a473(r814,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a458(r216,l0) a472(r253,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a474(r813,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a475(r215,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a475(r215,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a421(r738,l0) a474(r813,l0)
;;     total conflict hard regs: 12 14 16
;;     conflict hard regs: 12 14 16

;; a476(r812,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a477(r678,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a478(r677,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a479(r271,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a480(r286,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a481(r762,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a483(r269,l0) a485(r270,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a621(r663,l0) a626(r657,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs:

;; a482(r761,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a483(r269,l0) a485(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a483(r269,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0)
;;     total conflict hard regs: 0-3 12 14 17-18
;;     conflict hard regs:

;; a484(r652,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a485(r270,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a482(r761,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a627(r327,l0) a628(r656,l0) a616(r675,l0) a617(r676,l0) a618(r674,l0) a619(r673,l0) a620(r669,l0) a623(r661,l0) a621(r663,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0)
;;     total conflict hard regs: 0-3 12 14 16 18
;;     conflict hard regs:

;; a486(r654,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a487(r653,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a484(r652,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0) a488(r651,l0) a489(r650,l0) a627(r327,l0) a623(r661,l0) a622(r662,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0)
;;     total conflict hard regs: 16-18
;;     conflict hard regs:

;; a488(r651,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a489(r650,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a486(r654,l0) a419(r741,l0) a416(r266,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a490(r293,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a491(r742,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a674(r191,l0) a680(r317,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a492(r310,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a493(r771,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a494(r770,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a495(r769,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a496(r297,l0) a497(r268,l0) a492(r310,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a496(r297,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a497(r268,l0) a492(r310,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a497(r268,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a419(r741,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a492(r310,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a498(r304,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a492(r310,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a686(r626,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a499(r810,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a500(r603,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a501(r602,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a424(r302,l0) a421(r738,l0) a502(r600,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a502(r600,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a421(r738,l0) a501(r602,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a503(r246,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a423(r158,l0) a505(r595,l0) a504(r597,l0) a509(r590,l0) a510(r589,l0) a511(r809,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0) a517(r580,l0) a518(r806,l0) a520(r805,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a504(r597,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a505(r595,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a506(r592,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a424(r302,l0) a421(r738,l0) a507(r593,l0) a508(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a507(r593,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a424(r302,l0) a421(r738,l0) a506(r592,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a508(r168,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a424(r302,l0) a421(r738,l0) a506(r592,l0) a513(r808,w1,l0) a513(r808,w0,l0) a512(r583,w1,l0) a512(r583,w0,l0) a514(r585,l0) a515(r807,w0,l0) a515(r807,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a509(r590,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a510(r589,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a511(r809,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a512(r583,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a513(r808,w1,l0) a513(r808,w0,l0) a514(r585,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a513(r808,w0,l0) a514(r585,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a513(r808,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a512(r583,w1,l0) a512(r583,w0,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a512(r583,w0,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a514(r585,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a508(r168,l0) a512(r583,w1,l0) a512(r583,w0,l0) a515(r807,w0,l0) a515(r807,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a515(r807,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a514(r585,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0) a508(r168,l0) a514(r585,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a516(r581,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a517(r580,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a518(r806,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a519(r248,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a423(r158,l0) a503(r246,l0) a543(r547,l0) a544(r799,l0) a545(r798,l0) a546(r797,w0,l0) a546(r797,w1,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a520(r805,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a521(r138,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a423(r158,l0) a503(r246,l0) a543(r547,l0) a544(r799,l0) a545(r798,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a536(r801,l0) a538(r800,l0) a423(r158,l0) a503(r246,l0) a543(r547,l0) a544(r799,l0) a545(r798,l0) a522(r804,l0) a527(r803,l0) a528(r802,l0) a529(r155,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14

;; a522(r804,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a423(r158,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a523(r569,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a424(r302,l0) a421(r738,l0) a525(r265,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a524(r571,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a525(r265,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a525(r265,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a524(r571,l0) a523(r569,l0) a526(r568,l0) a527(r803,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a526(r568,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a525(r265,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a527(r803,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a503(r246,l0) a525(r265,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a528(r802,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a529(r155,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a503(r246,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a530(r560,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a531(r264,l0) a539(r139,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a531(r264,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a539(r139,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a532(r154,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a664(r556,l0) a665(r149,l0) a668(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a533(r148,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a534(r143,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a535(r147,l0) a537(r142,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a535(r147,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a537(r142,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a536(r801,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a537(r142,l0) a539(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a537(r142,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a536(r801,l0) a664(r556,l0) a665(r149,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a538(r800,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a539(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a539(r139,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a536(r801,l0) a538(r800,l0) a661(r563,l0) a662(r558,l0) a663(r561,l0) a664(r556,l0) a666(r146,l0) a667(r554,l0) a669(r564,l0)
;;     total conflict hard regs: 12 14
;;     conflict hard regs: 12 14

;; a540(r550,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a541(r549,l0) a542(r548,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a541(r549,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a540(r550,l0) a542(r548,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a542(r548,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a541(r549,l0) a540(r550,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a543(r547,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a544(r799,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a545(r798,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a546(r797,l0) conflicts:
;;   subobject 0: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1


;;   subobject 1: a0(r245,l0) a1(r776,w0,l0) a2(r775,w0,l0) a3(r774,w0,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a519(r248,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a547(r796,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a548(r541,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a549(r795,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a550(r794,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a551(r536,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a552(r534,l0) a553(r533,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a552(r534,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a551(r536,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a553(r533,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a551(r536,l0) a554(r535,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a554(r535,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a553(r533,l0) a556(r532,l0) a555(r261,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a555(r261,l0) conflicts: a9(r300,l0) a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a554(r535,l0) a556(r532,l0) a557(r793,l0) a558(r792,l0) a560(r528,l0) a559(r530,l0) a561(r529,l0)
;;     total conflict hard regs: 16
;;     conflict hard regs: 16

;; a556(r532,l0) conflicts: a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a554(r535,l0) a555(r261,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a557(r793,l0) conflicts: a0(r245,l0) a10(r301,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a555(r261,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a558(r792,l0) conflicts: a0(r245,l0) a10(r301,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a555(r261,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a559(r530,l0) conflicts: a9(r300,l0) a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a555(r261,l0) a560(r528,l0) a561(r529,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a560(r528,l0) conflicts: a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a555(r261,l0) a559(r530,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a561(r529,l0) conflicts: a9(r300,l0) a10(r301,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a555(r261,l0) a559(r530,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a562(r675,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a563(r676,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a563(r676,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a562(r675,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a564(r674,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a565(r673,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a566(r669,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a567(r663,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a572(r657,l1)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a568(r662,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a569(r661,l1) a570(r659,l1) a571(r658,l1) a572(r657,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a569(r661,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a568(r662,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a570(r659,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a568(r662,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a571(r658,l1) conflicts: a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a568(r662,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a572(r657,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a567(r663,l1) a568(r662,l1)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a573(r327,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a155(r653,l1) a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a574(r656,l1) conflicts: a147(r271,l1) a148(r286,l1) a149(r762,l1) a151(r269,l1) a153(r270,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a575(r280,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a576(r743,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a577(r303,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a637(r273,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1) a658(r612,l1) a659(r609,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a653(r626,l1)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a578(r764,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a579(r193,l1) a582(r281,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a579(r193,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a582(r281,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a580(r606,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a582(r281,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a581(r823,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a582(r281,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a580(r606,l1) a660(r608,l1) a640(r310,l1) a642(r811,l1) a641(r191,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1) a653(r626,l1) a655(r622,l1) a656(r181,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a583(r273,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a584(r274,l3) a585(r275,l3) a603(r615,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a584(r274,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a585(r275,l3) a603(r615,l3) a599(r626,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a585(r275,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a599(r626,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a586(r310,l3) conflicts: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a297(r306,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a587(r191,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a588(r811,l3) a592(r640,l3) a593(r317,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a588(r811,l3) conflicts: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a297(r306,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a589(r642,l3) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a590(r638,l3) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a591(r635,l3) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a592(r640,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a593(r317,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3) a594(r189,l3) a595(r633,l3) a596(r186,l3) a597(r632,l3) a598(r627,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a594(r189,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3) a593(r317,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a595(r633,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3) a593(r317,l3) a596(r186,l3) a597(r632,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a596(r186,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3) a593(r317,l3) a595(r633,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a597(r632,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a587(r191,l3) a593(r317,l3) a595(r633,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a598(r627,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a593(r317,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a599(r626,l3) conflicts: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3) a584(r274,l3) a585(r275,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a600(r625,l3) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a601(r622,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a602(r181,l3) conflicts: a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a294(r297,l3) a295(r302,l3) a302(r742,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a312(r777,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a603(r615,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a583(r273,l3) a584(r274,l3) a604(r612,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a604(r612,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a603(r615,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a605(r609,l3) conflicts: a285(r245,l3) a292(r282,l3) a293(r293,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a606(r608,l3) conflicts: a285(r245,l3) a286(r247,l3) a287(r249,l3) a288(r263,l3) a289(r266,l3) a290(r267,l3) a291(r268,l3) a292(r282,l3) a293(r293,l3) a294(r297,l3) a295(r302,l3) a296(r304,l3) a297(r306,l3) a298(r319,l3) a299(r739,l3) a300(r740,l3) a302(r742,l3) a303(r745,l3) a304(r746,l3) a305(r747,l3) a306(r769,l3) a307(r770,l3) a308(r771,l3) a309(r774,w0,l3) a309(r774,w1,l3) a310(r775,w0,l3) a310(r775,w1,l3) a311(r776,w0,l3) a311(r776,w1,l3) a312(r777,l3) a313(r280,l3) a314(r743,l3) a315(r303,l3) a316(r764,l3) a317(r193,l3) a320(r281,l3)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a607(r563,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a608(r558,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a609(r561,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a609(r561,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1) a608(r558,l1) a610(r556,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a610(r556,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a609(r561,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a611(r149,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a613(r554,l1) a614(r144,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a612(r146,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a207(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a613(r554,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a199(r264,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a207(r139,l1) a611(r149,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a614(r144,l1) conflicts: a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a89(r738,l1) a200(r154,l1) a201(r148,l1) a202(r143,l1) a203(r147,l1) a205(r142,l1) a611(r149,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a615(r564,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a106(r744,l1) a187(r248,l1) a189(r138,w0,l1) a189(r138,w1,l1) a198(r560,l1) a207(r139,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a616(r675,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a617(r676,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a617(r676,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a616(r675,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a618(r674,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a619(r673,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a620(r669,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a621(r663,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a626(r657,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a622(r662,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a623(r661,l0) a624(r659,l0) a625(r658,l0) a626(r657,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a623(r661,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a622(r662,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a624(r659,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a622(r662,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a625(r658,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a622(r662,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a626(r657,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a621(r663,l0) a622(r662,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a627(r327,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0) a487(r653,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a628(r656,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a479(r271,l0) a480(r286,l0) a481(r762,l0) a483(r269,l0) a485(r270,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a629(r280,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a630(r743,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a631(r303,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a670(r273,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0) a691(r612,l0) a692(r609,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a686(r626,l0)
;;     total conflict hard regs: 0-2 12 14
;;     conflict hard regs:

;; a632(r764,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a633(r193,l0) a636(r281,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a633(r193,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a636(r281,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a634(r606,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a636(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a635(r823,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a636(r281,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a634(r606,l0) a693(r608,l0) a673(r310,l0) a675(r811,l0) a674(r191,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0) a686(r626,l0) a688(r622,l0) a689(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a637(r273,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a638(r274,l1) a639(r275,l1) a657(r615,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a638(r274,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a639(r275,l1) a657(r615,l1) a653(r626,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a639(r275,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a653(r626,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a640(r310,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a158(r293,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a641(r191,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a642(r811,l1) a646(r640,l1) a647(r317,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a642(r811,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a158(r293,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a643(r642,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a644(r638,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a645(r635,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a646(r640,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a647(r317,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1) a648(r189,l1) a649(r633,l1) a650(r186,l1) a651(r632,l1) a652(r627,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a648(r189,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1) a647(r317,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a649(r633,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1) a647(r317,l1) a650(r186,l1) a651(r632,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a650(r186,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1) a647(r317,l1) a649(r633,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a651(r632,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a641(r191,l1) a647(r317,l1) a649(r633,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a652(r627,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a647(r317,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a653(r626,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1) a638(r274,l1) a639(r275,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a654(r625,l1) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a655(r622,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a656(r181,l1) conflicts: a82(r249,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a92(r302,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a657(r615,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a637(r273,l1) a638(r274,l1) a658(r612,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a658(r612,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a657(r615,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a659(r609,l1) conflicts: a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a86(r319,l1) a158(r293,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a660(r608,l1) conflicts: a82(r249,l1) a67(r245,l1) a68(r282,l1) a71(r306,l1) a72(r739,l1) a73(r740,l1) a74(r745,l1) a75(r746,l1) a76(r747,l1) a77(r774,w0,l1) a77(r774,w1,l1) a78(r775,w0,l1) a78(r775,w1,l1) a79(r776,w0,l1) a79(r776,w1,l1) a80(r777,l1) a81(r247,l1) a83(r263,l1) a85(r267,l1) a84(r266,l1) a86(r319,l1) a92(r302,l1) a158(r293,l1) a159(r742,l1) a161(r771,l1) a162(r770,l1) a163(r769,l1) a164(r297,l1) a165(r268,l1) a166(r304,l1) a575(r280,l1) a576(r743,l1) a577(r303,l1) a578(r764,l1) a579(r193,l1) a582(r281,l1)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a661(r563,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a662(r558,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a663(r561,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a663(r561,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0) a662(r558,l0) a664(r556,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a664(r556,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a663(r561,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a665(r149,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a667(r554,l0) a668(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a666(r146,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a539(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a667(r554,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a531(r264,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a539(r139,l0) a665(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a668(r144,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a413(r247,l0) a415(r263,l0) a421(r738,l0) a532(r154,l0) a533(r148,l0) a534(r143,l0) a535(r147,l0) a537(r142,l0) a665(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a669(r564,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a438(r744,l0) a519(r248,l0) a521(r138,w0,l0) a521(r138,w1,l0) a530(r560,l0) a539(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a670(r273,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a671(r274,l0) a672(r275,l0) a690(r615,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a671(r274,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a672(r275,l0) a690(r615,l0) a686(r626,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a672(r275,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a686(r626,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a673(r310,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a490(r293,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a674(r191,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a675(r811,l0) a679(r640,l0) a680(r317,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a675(r811,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a490(r293,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a676(r642,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a677(r638,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a678(r635,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a679(r640,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a680(r317,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0) a681(r189,l0) a682(r633,l0) a683(r186,l0) a684(r632,l0) a685(r627,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a681(r189,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0) a680(r317,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a682(r633,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0) a680(r317,l0) a683(r186,l0) a684(r632,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a683(r186,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0) a680(r317,l0) a682(r633,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a684(r632,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a674(r191,l0) a680(r317,l0) a682(r633,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a685(r627,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a680(r317,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a686(r626,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0) a671(r274,l0) a672(r275,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a687(r625,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a688(r622,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a689(r181,l0) conflicts: a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a7(r777,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a424(r302,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a690(r615,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a670(r273,l0) a671(r274,l0) a691(r612,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a691(r612,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a690(r615,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a692(r609,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a418(r319,l0) a490(r293,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a693(r608,l0) conflicts: a0(r245,l0) a1(r776,w0,l0) a1(r776,w1,l0) a2(r775,w0,l0) a2(r775,w1,l0) a3(r774,w0,l0) a3(r774,w1,l0) a4(r282,l0) a5(r739,l0) a6(r740,l0) a7(r777,l0) a8(r306,l0) a11(r745,l0) a12(r746,l0) a13(r747,l0) a414(r249,l0) a413(r247,l0) a415(r263,l0) a417(r267,l0) a416(r266,l0) a418(r319,l0) a424(r302,l0) a490(r293,l0) a491(r742,l0) a493(r771,l0) a494(r770,l0) a495(r769,l0) a496(r297,l0) a497(r268,l0) a498(r304,l0) a629(r280,l0) a630(r743,l0) a631(r303,l0) a632(r764,l0) a633(r193,l0) a636(r281,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a65(r313)<->a66(r346)@10:shuffle
  cp1:a62(r347)<->a65(r313)@20:shuffle
  cp2:a63(r318)<->a64(r344)@10:shuffle
  cp3:a57(r329)<->a59(r353)@10:shuffle
  cp4:a55(r323)<->a58(r351)@10:shuffle
  cp5:a54(r354)<->a57(r329)@20:shuffle
  cp6:a31(r307)<->a56(r782)@83:move
  cp7:a49(r337)<->a51(r360)@10:shuffle
  cp8:a47(r325)<->a50(r358)@10:shuffle
  cp9:a46(r361)<->a49(r337)@20:shuffle
  cp10:a30(r334)<->a48(r785)@83:move
  cp11:a39(r116)<->a41(r373)@10:shuffle
  cp12:a37(r114)<->a40(r368)@10:shuffle
  cp13:a36(r374)<->a39(r116)@20:shuffle
  cp14:a27(r294)<->a38(r788)@83:move
  cp15:a22(r121)<->a33(r791)@83:move
  cp16:a93(r733)<->a94(r242)@21:shuffle
  cp17:a98(r726)<->a101(r818)@25:move
  cp18:a117(r707)<->a119(r219)@6:shuffle
  cp19:a117(r707)<->a118(r254)@6:shuffle
  cp20:a116(r709)<->a117(r707)@6:shuffle
  cp21:a110(r708)<->a115(r712)@6:shuffle
  cp22:a110(r708)<->a116(r709)@6:shuffle
  cp23:a112(r715)<->a114(r710)@6:shuffle
  cp24:a111(r718)<->a113(r222)@6:shuffle
  cp25:a109(r714)<->a111(r718)@6:shuffle
  cp26:a109(r714)<->a112(r715)@6:shuffle
  cp27:a107(r713)<->a110(r708)@6:shuffle
  cp28:a104(r719)<->a109(r714)@6:shuffle
  cp29:a105(r722)<->a106(r744)@6:shuffle
  cp30:a105(r722)<->a107(r713)@6:shuffle
  cp31:a105(r722)<->a108(r721)@6:shuffle
  cp32:a122(r703)<->a125(r815)@25:move
  cp33:a120(r230)<->a121(r817)@25:move
  cp34:a113(r222)<->a120(r230)@3:shuffle
  cp35:a143(r215)<->a144(r812)@51:move
  cp36:a126(r216)<->a142(r813)@51:move
  cp37:a102(r217)<->a141(r814)@51:move
  cp38:a138(r690)<->a140(r253)@6:shuffle
  cp39:a137(r692)<->a139(r686)@6:shuffle
  cp40:a136(r695)<->a138(r690)@6:shuffle
  cp41:a135(r691)<->a136(r695)@6:shuffle
  cp42:a135(r691)<->a137(r692)@6:shuffle
  cp43:a128(r696)<->a135(r691)@6:shuffle
  cp44:a132(r684)<->a133(r688)@6:shuffle
  cp45:a132(r684)<->a134(r685)@6:shuffle
  cp46:a130(r689)<->a132(r684)@6:shuffle
  cp47:a129(r699)<->a130(r689)@6:shuffle
  cp48:a129(r699)<->a131(r698)@6:shuffle
  cp49:a156(r651)<->a157(r650)@1:shuffle
  cp50:a152(r652)<->a156(r651)@1:shuffle
  cp51:a84(r266)<->a153(r270)@1:constraint
  cp52:a85(r267)<->a151(r269)@1:constraint
  cp53:a149(r762)<->a150(r761)@1:shuffle
  cp54:a159(r742)<->a160(r310)@1:shuffle
  cp55:a91(r158)<->a170(r600)@5:constraint
  cp56:a84(r266)<->a169(r602)@5:constraint
  cp57:a165(r268)<->a167(r810)@5:move
  cp58:a175(r593)<->a176(r168)@3:shuffle
  cp59:a184(r581)<->a185(r580)@7:shuffle
  cp60:a176(r168)<->a184(r581)@7:shuffle
  cp61:a180(r583)<->a183(r807)@60:move
  cp62:a85(r267)<->a179(r809)@60:move
  cp63:a187(r248)<->a188(r805)@30:move
  cp64:a92(r302)<->a193(r265)@2:shuffle
  cp65:a92(r302)<->a192(r571)@2:shuffle
  cp66:a193(r265)<->a196(r802)@7:shuffle
  cp67:a205(r142)<->a206(r800)@57:move
  cp68:a203(r147)<->a204(r801)@57:move
  cp69:a187(r248)<->a215(r796)@300:move
  cp70:a189(r138)<->a214(r797)@300:move
  cp71:a81(r247)<->a217(r795)@99:move
  cp72:a228(r528)<->a229(r529)@37:shuffle
  cp73:a69(r300)<->a228(r528)@37:shuffle
  cp74:a81(r247)<->a226(r792)@300:move
  cp75:a224(r532)<->a225(r793)@37:shuffle
  cp76:a70(r301)<->a222(r535)@37:shuffle
  cp77:a221(r533)<->a224(r532)@37:shuffle
  cp78:a221(r533)<->a223(r261)@37:shuffle
  cp79:a219(r536)<->a222(r535)@37:shuffle
  cp80:a220(r534)<->a221(r533)@37:shuffle
  cp81:a254(r673)<->a255(r669)@2:shuffle
  cp82:a253(r674)<->a254(r673)@2:shuffle
  cp83:a251(r675)<->a253(r674)@2:shuffle
  cp84:a260(r658)<->a261(r657)@2:shuffle
  cp85:a259(r659)<->a260(r658)@2:shuffle
  cp86:a258(r661)<->a259(r659)@2:shuffle
  cp87:a318(r606)<->a319(r823)@37:move
  cp88:a317(r193)<->a318(r606)@4:shuffle
  cp89:a355(r274)<->a368(r632)@2:shuffle
  cp90:a356(r275)<->a366(r633)@2:shuffle
  cp91:a367(r186)<->a368(r632)@2:shuffle
  cp92:a361(r638)<->a367(r186)@2:shuffle
  cp93:a365(r189)<->a366(r633)@2:shuffle
  cp94:a362(r635)<->a365(r189)@2:shuffle
  cp95:a363(r640)<->a364(r317)@2:shuffle
  cp96:a360(r642)<->a363(r640)@2:shuffle
  cp97:a341(r742)<->a357(r310)@2:shuffle
  cp98:a358(r191)<->a369(r627)@39:shuffle
  cp99:a372(r622)<->a373(r181)@11:shuffle
  cp100:a371(r625)<->a372(r622)@11:shuffle
  cp101:a370(r626)<->a371(r625)@11:shuffle
  cp102:a364(r317)<->a370(r626)@11:shuffle
  cp103:a354(r273)<->a373(r181)@18:shuffle
  cp104:a354(r273)<->a364(r317)@16:shuffle
  cp105:a376(r609)<->a377(r608)@42:shuffle
  cp106:a375(r612)<->a376(r609)@84:shuffle
  cp107:a389(r264)<->a412(r564)@134:shuffle
  cp108:a410(r554)<->a411(r144)@67:shuffle
  cp109:a409(r146)<->a410(r554)@67:shuffle
  cp110:a406(r561)<->a409(r146)@67:shuffle
  cp111:a407(r556)<->a408(r149)@67:shuffle
  cp112:a405(r558)<->a407(r556)@67:shuffle
  cp113:a425(r733)<->a426(r242)@21:shuffle
  cp114:a430(r726)<->a433(r818)@25:move
  cp115:a449(r707)<->a451(r219)@6:shuffle
  cp116:a449(r707)<->a450(r254)@6:shuffle
  cp117:a448(r709)<->a449(r707)@6:shuffle
  cp118:a442(r708)<->a447(r712)@6:shuffle
  cp119:a442(r708)<->a448(r709)@6:shuffle
  cp120:a444(r715)<->a446(r710)@6:shuffle
  cp121:a443(r718)<->a445(r222)@6:shuffle
  cp122:a441(r714)<->a443(r718)@6:shuffle
  cp123:a441(r714)<->a444(r715)@6:shuffle
  cp124:a439(r713)<->a442(r708)@6:shuffle
  cp125:a436(r719)<->a441(r714)@6:shuffle
  cp126:a437(r722)<->a438(r744)@6:shuffle
  cp127:a437(r722)<->a439(r713)@6:shuffle
  cp128:a437(r722)<->a440(r721)@6:shuffle
  cp129:a454(r703)<->a457(r815)@25:move
  cp130:a452(r230)<->a453(r817)@25:move
  cp131:a445(r222)<->a452(r230)@3:shuffle
  cp132:a475(r215)<->a476(r812)@51:move
  cp133:a458(r216)<->a474(r813)@51:move
  cp134:a434(r217)<->a473(r814)@51:move
  cp135:a470(r690)<->a472(r253)@6:shuffle
  cp136:a469(r692)<->a471(r686)@6:shuffle
  cp137:a468(r695)<->a470(r690)@6:shuffle
  cp138:a467(r691)<->a468(r695)@6:shuffle
  cp139:a467(r691)<->a469(r692)@6:shuffle
  cp140:a460(r696)<->a467(r691)@6:shuffle
  cp141:a464(r684)<->a465(r688)@6:shuffle
  cp142:a464(r684)<->a466(r685)@6:shuffle
  cp143:a462(r689)<->a464(r684)@6:shuffle
  cp144:a461(r699)<->a462(r689)@6:shuffle
  cp145:a461(r699)<->a463(r698)@6:shuffle
  cp146:a488(r651)<->a489(r650)@1:shuffle
  cp147:a484(r652)<->a488(r651)@1:shuffle
  cp148:a416(r266)<->a485(r270)@1:constraint
  cp149:a417(r267)<->a483(r269)@1:constraint
  cp150:a481(r762)<->a482(r761)@1:shuffle
  cp151:a491(r742)<->a492(r310)@1:shuffle
  cp152:a423(r158)<->a502(r600)@5:constraint
  cp153:a416(r266)<->a501(r602)@5:constraint
  cp154:a497(r268)<->a499(r810)@5:move
  cp155:a507(r593)<->a508(r168)@3:shuffle
  cp156:a516(r581)<->a517(r580)@7:shuffle
  cp157:a508(r168)<->a516(r581)@7:shuffle
  cp158:a512(r583)<->a515(r807)@60:move
  cp159:a417(r267)<->a511(r809)@60:move
  cp160:a519(r248)<->a520(r805)@30:move
  cp161:a424(r302)<->a525(r265)@2:shuffle
  cp162:a424(r302)<->a524(r571)@2:shuffle
  cp163:a525(r265)<->a528(r802)@7:shuffle
  cp164:a537(r142)<->a538(r800)@57:move
  cp165:a535(r147)<->a536(r801)@57:move
  cp166:a519(r248)<->a547(r796)@300:move
  cp167:a521(r138)<->a546(r797)@300:move
  cp168:a413(r247)<->a549(r795)@99:move
  cp169:a560(r528)<->a561(r529)@37:shuffle
  cp170:a9(r300)<->a560(r528)@37:shuffle
  cp171:a413(r247)<->a558(r792)@300:move
  cp172:a556(r532)<->a557(r793)@37:shuffle
  cp173:a10(r301)<->a554(r535)@37:shuffle
  cp174:a553(r533)<->a556(r532)@37:shuffle
  cp175:a553(r533)<->a555(r261)@37:shuffle
  cp176:a551(r536)<->a554(r535)@37:shuffle
  cp177:a552(r534)<->a553(r533)@37:shuffle
  cp178:a565(r673)<->a566(r669)@2:shuffle
  cp179:a564(r674)<->a565(r673)@2:shuffle
  cp180:a562(r675)<->a564(r674)@2:shuffle
  cp181:a571(r658)<->a572(r657)@2:shuffle
  cp182:a570(r659)<->a571(r658)@2:shuffle
  cp183:a569(r661)<->a570(r659)@2:shuffle
  cp184:a580(r606)<->a581(r823)@37:move
  cp185:a579(r193)<->a580(r606)@4:shuffle
  cp186:a584(r274)<->a597(r632)@2:shuffle
  cp187:a585(r275)<->a595(r633)@2:shuffle
  cp188:a596(r186)<->a597(r632)@2:shuffle
  cp189:a590(r638)<->a596(r186)@2:shuffle
  cp190:a594(r189)<->a595(r633)@2:shuffle
  cp191:a591(r635)<->a594(r189)@2:shuffle
  cp192:a592(r640)<->a593(r317)@2:shuffle
  cp193:a589(r642)<->a592(r640)@2:shuffle
  cp194:a302(r742)<->a586(r310)@2:shuffle
  cp195:a587(r191)<->a598(r627)@39:shuffle
  cp196:a601(r622)<->a602(r181)@11:shuffle
  cp197:a600(r625)<->a601(r622)@11:shuffle
  cp198:a599(r626)<->a600(r625)@11:shuffle
  cp199:a593(r317)<->a599(r626)@11:shuffle
  cp200:a583(r273)<->a602(r181)@18:shuffle
  cp201:a583(r273)<->a593(r317)@16:shuffle
  cp202:a605(r609)<->a606(r608)@42:shuffle
  cp203:a604(r612)<->a605(r609)@84:shuffle
  cp204:a199(r264)<->a615(r564)@134:shuffle
  cp205:a613(r554)<->a614(r144)@67:shuffle
  cp206:a612(r146)<->a613(r554)@67:shuffle
  cp207:a609(r561)<->a612(r146)@67:shuffle
  cp208:a610(r556)<->a611(r149)@67:shuffle
  cp209:a608(r558)<->a610(r556)@67:shuffle
  cp210:a619(r673)<->a620(r669)@2:shuffle
  cp211:a618(r674)<->a619(r673)@2:shuffle
  cp212:a616(r675)<->a618(r674)@2:shuffle
  cp213:a625(r658)<->a626(r657)@2:shuffle
  cp214:a624(r659)<->a625(r658)@2:shuffle
  cp215:a623(r661)<->a624(r659)@2:shuffle
  cp216:a634(r606)<->a635(r823)@37:move
  cp217:a633(r193)<->a634(r606)@4:shuffle
  cp218:a638(r274)<->a651(r632)@2:shuffle
  cp219:a639(r275)<->a649(r633)@2:shuffle
  cp220:a650(r186)<->a651(r632)@2:shuffle
  cp221:a644(r638)<->a650(r186)@2:shuffle
  cp222:a648(r189)<->a649(r633)@2:shuffle
  cp223:a645(r635)<->a648(r189)@2:shuffle
  cp224:a646(r640)<->a647(r317)@2:shuffle
  cp225:a643(r642)<->a646(r640)@2:shuffle
  cp226:a159(r742)<->a640(r310)@2:shuffle
  cp227:a641(r191)<->a652(r627)@39:shuffle
  cp228:a655(r622)<->a656(r181)@11:shuffle
  cp229:a654(r625)<->a655(r622)@11:shuffle
  cp230:a653(r626)<->a654(r625)@11:shuffle
  cp231:a647(r317)<->a653(r626)@11:shuffle
  cp232:a637(r273)<->a656(r181)@18:shuffle
  cp233:a637(r273)<->a647(r317)@16:shuffle
  cp234:a659(r609)<->a660(r608)@42:shuffle
  cp235:a658(r612)<->a659(r609)@84:shuffle
  cp236:a531(r264)<->a669(r564)@134:shuffle
  cp237:a667(r554)<->a668(r144)@67:shuffle
  cp238:a666(r146)<->a667(r554)@67:shuffle
  cp239:a663(r561)<->a666(r146)@67:shuffle
  cp240:a664(r556)<->a665(r149)@67:shuffle
  cp241:a662(r558)<->a664(r556)@67:shuffle
  cp242:a671(r274)<->a684(r632)@2:shuffle
  cp243:a672(r275)<->a682(r633)@2:shuffle
  cp244:a683(r186)<->a684(r632)@2:shuffle
  cp245:a677(r638)<->a683(r186)@2:shuffle
  cp246:a681(r189)<->a682(r633)@2:shuffle
  cp247:a678(r635)<->a681(r189)@2:shuffle
  cp248:a679(r640)<->a680(r317)@2:shuffle
  cp249:a676(r642)<->a679(r640)@2:shuffle
  cp250:a491(r742)<->a673(r310)@2:shuffle
  cp251:a674(r191)<->a685(r627)@39:shuffle
  cp252:a688(r622)<->a689(r181)@11:shuffle
  cp253:a687(r625)<->a688(r622)@11:shuffle
  cp254:a686(r626)<->a687(r625)@11:shuffle
  cp255:a680(r317)<->a686(r626)@11:shuffle
  cp256:a670(r273)<->a689(r181)@18:shuffle
  cp257:a670(r273)<->a680(r317)@16:shuffle
  cp258:a692(r609)<->a693(r608)@42:shuffle
  cp259:a691(r612)<->a692(r609)@84:shuffle
  pref0:a13(r747)<-hr1@27
  pref1:a13(r747)<-hr0@27
  pref2:a61(r780)<-hr0@166
  pref3:a61(r780)<-hr16@166
  pref4:a60(r781)<-hr16@166
  pref5:a60(r781)<-hr0@166
  pref6:a56(r782)<-hr0@166
  pref7:a53(r783)<-hr0@166
  pref8:a53(r783)<-hr16@166
  pref9:a52(r784)<-hr16@166
  pref10:a52(r784)<-hr0@166
  pref11:a48(r785)<-hr0@166
  pref12:a45(r786)<-hr0@166
  pref13:a45(r786)<-hr16@166
  pref14:a44(r787)<-hr16@166
  pref15:a44(r787)<-hr0@166
  pref16:a38(r788)<-hr0@166
  pref17:a35(r789)<-hr0@166
  pref18:a35(r789)<-hr16@166
  pref19:a34(r790)<-hr16@166
  pref20:a34(r790)<-hr0@166
  pref21:a33(r791)<-hr0@166
  pref22:a101(r818)<-hr0@50
  pref23:a99(r819)<-hr0@50
  pref24:a99(r819)<-hr2@50
  pref25:a98(r726)<-hr0@50
  pref26:a97(r820)<-hr0@50
  pref27:a125(r815)<-hr0@50
  pref28:a123(r816)<-hr0@50
  pref29:a123(r816)<-hr2@50
  pref30:a122(r703)<-hr0@50
  pref31:a121(r817)<-hr0@50
  pref32:a77(r774)<-hr2@150
  pref33:a3(r774)<-hr2@150
  pref34:a144(r812)<-hr0@102
  pref35:a143(r215)<-hr16@153
  pref36:a142(r813)<-hr16@102
  pref37:a141(r814)<-hr16@102
  pref38:a89(r738)<-hr16@10
  pref39:a167(r810)<-hr16@10
  pref40:a186(r806)<-hr16@120
  pref41:a186(r806)<-hr0@120
  pref42:a183(r807)<-hr0@120
  pref43:a181(r808)<-hr0@120
  pref44:a181(r808)<-hr2@120
  pref45:a180(r583)<-hr0@120
  pref46:a179(r809)<-hr0@120
  pref47:a189(r138)<-hr0@270
  pref48:a188(r805)<-hr0@60
  pref49:a190(r804)<-hr0@120
  pref50:a196(r802)<-hr16@120
  pref51:a79(r776)<-hr2@60
  pref52:a1(r776)<-hr2@60
  pref53:a195(r803)<-hr0@120
  pref54:a81(r247)<-hr16@114
  pref55:a206(r800)<-hr16@114
  pref56:a204(r801)<-hr16@114
  pref57:a212(r799)<-hr0@300
  pref58:a215(r796)<-hr16@600
  pref59:a187(r248)<-hr0@300
  pref60:a214(r797)<-hr0@300
  pref61:a78(r775)<-hr2@300
  pref62:a2(r775)<-hr2@300
  pref63:a213(r798)<-hr0@600
  pref64:a218(r794)<-hr0@198
  pref65:a218(r794)<-hr16@198
  pref66:a217(r795)<-hr16@198
  pref67:a226(r792)<-hr16@300
  pref68:a225(r793)<-hr16@600
  pref69:a235(r270)<-hr17@18
  pref70:a153(r270)<-hr17@18
  pref71:a234(r269)<-hr16@18
  pref72:a151(r269)<-hr16@18
  pref73:a262(r327)<-hr0@72
  pref74:a359(r811)<-hr0@36
  pref75:a433(r818)<-hr0@25
  pref76:a431(r819)<-hr0@25
  pref77:a431(r819)<-hr2@25
  pref78:a430(r726)<-hr0@25
  pref79:a429(r820)<-hr0@25
  pref80:a457(r815)<-hr0@25
  pref81:a455(r816)<-hr0@25
  pref82:a455(r816)<-hr2@25
  pref83:a454(r703)<-hr0@25
  pref84:a453(r817)<-hr0@25
  pref85:a476(r812)<-hr0@51
  pref86:a474(r813)<-hr16@51
  pref87:a475(r215)<-hr16@51
  pref88:a473(r814)<-hr16@51
  pref89:a421(r738)<-hr16@5
  pref90:a499(r810)<-hr16@5
  pref91:a518(r806)<-hr16@60
  pref92:a518(r806)<-hr0@60
  pref93:a515(r807)<-hr0@60
  pref94:a513(r808)<-hr0@60
  pref95:a513(r808)<-hr2@60
  pref96:a512(r583)<-hr0@60
  pref97:a511(r809)<-hr0@60
  pref98:a521(r138)<-hr0@30
  pref99:a520(r805)<-hr0@30
  pref100:a522(r804)<-hr0@60
  pref101:a528(r802)<-hr16@60
  pref102:a527(r803)<-hr0@60
  pref103:a538(r800)<-hr16@57
  pref104:a536(r801)<-hr16@57
  pref105:a544(r799)<-hr0@150
  pref106:a216(r541)<-hr16@37
  pref107:a548(r541)<-hr16@37
  pref108:a547(r796)<-hr16@300
  pref109:a545(r798)<-hr0@300
  pref110:a550(r794)<-hr0@99
  pref111:a550(r794)<-hr16@99
  pref112:a549(r795)<-hr16@99
  pref113:a228(r528)<-hr16@37
  pref114:a560(r528)<-hr16@37
  pref115:a227(r530)<-hr16@37
  pref116:a559(r530)<-hr16@37
  pref117:a557(r793)<-hr16@300
  pref118:a573(r327)<-hr0@36
  pref119:a627(r327)<-hr0@36
  pref120:a588(r811)<-hr0@18
  pref121:a642(r811)<-hr0@18
  pref122:a675(r811)<-hr0@18
  pref123:a359(r811)<-hr2@2
  pref124:a588(r811)<-hr2@2
  pref125:a642(r811)<-hr2@2
  pref126:a675(r811)<-hr2@2
  regions=7, blocks=102, points=417
    allocnos=694 (big 52), copies=260, conflicts=433, ranges=520

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 95 94 93 88 16(->17:l1) 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r245 1r776 2r775 3r774 4r282 5r739 6r740 7r777 8r306 9r300 10r301 11r745 12r746 13r747 14r508 15r486 16r483 17r482 18r479 19r478 20r456 21r434 22r121 23r412 24r409 25r408 26r405 27r294 28r403 29r382 30r334 31r307 32r379 33r791 34r790 35r789 36r374 37r114 38r788 39r116 40r368 41r373 42r367 43r372 44r787 45r786 46r361 47r325 48r785 49r337 50r358 51r360 52r784 53r783 54r354 55r323 56r782 57r329 58r351 59r353 60r781 61r780 62r347 63r318 64r344 65r313 66r346 413r247 414r249 415r263 416r266 417r267 418r319 419r741 420r737 421r738 422r736 423r158 424r302 425r733 426r242 427r732 428r731 429r820 430r726 431r819 432r218 433r818 434r217 435r724 436r719 437r722 438r744 439r713 440r721 441r714 442r708 443r718 444r715 445r222 446r710 447r712 448r709 449r707 450r254 451r219 452r230 453r817 454r703 455r816 456r221 457r815 458r216 459r701 460r696 461r699 462r689 463r698 464r684 465r688 466r685 467r691 468r695 469r692 470r690 471r686 472r253 473r814 474r813 475r215 476r812 477r678 478r677 479r271 480r286 481r762 482r761 483r269 484r652 485r270 486r654 487r653 488r651 489r650 490r293 491r742 492r310 493r771 494r770 495r769 496r297 497r268 498r304 499r810 500r603 501r602 502r600 503r246 504r597 505r595 506r592 507r593 508r168 509r590 510r589 511r809 512r583 513r808 514r585 515r807 516r581 517r580 518r806 519r248 520r805 521r138 522r804 523r569 524r571 525r265 526r568 527r803 528r802 529r155 530r560 531r264 532r154 533r148 534r143 535r147 536r801 537r142 538r800 539r139 540r550 541r549 542r548 543r547 544r799 545r798 546r797 547r796 548r541 549r795 550r794 551r536 552r534 553r533 554r535 555r261 556r532 557r793 558r792 559r530 560r528 561r529 616r675 617r676 618r674 619r673 620r669 621r663 622r662 623r661 624r659 625r658 626r657 627r327 628r656 629r280 630r743 631r303 632r764 633r193 634r606 635r823 636r281 661r563 662r558 663r561 664r556 665r149 666r146 667r554 668r144 669r564 670r273 671r274 672r275 673r310 674r191 675r811 676r642 677r638 678r635 679r640 680r317 681r189 682r633 683r186 684r632 685r627 686r626 687r625 688r622 689r181 690r615 691r612 692r609 693r608
    modified regnos
    border:
    Pressure: GENERAL_REGS=25 VFP_LO_REGS=19
 Removing pref52:hr2@60
 Removing pref62:hr2@300
 Removing pref33:hr2@150
 Removing pref1:hr0@27
 Removing pref0:hr1@27
 Removing pref89:hr16@5
 Removing pref78:hr0@25
 Removing pref83:hr0@25
 Removing pref86:hr16@51
 Removing pref87:hr16@51
 Removing pref96:hr0@60
 Removing pref98:hr0@30
    Hard reg set forest:
      0:( 0-12 14 16-47)@32154
        1:( 0-12 14)@481310
          2:( 0-12)@97664
            3:( 2-12)@25800
              4:( 3-11)@33440
                5:( 4-11)@276984
                  6:( 4-10)@23340
        7:( 16-47)@565822
          8:( 17-47)@64006
            9:( 18-47)@14442
              10:( 21-47)@46120
                11:( 32-47)@96180
      Spill a14(r508,l0)
      Spill a15(r486,l0)
      Spill a20(r456,l0)
      Spill a21(r434,l0)
      Spill a23(r412,l0)
      Spill a29(r382,l0)
      Spill a635(r823,l0: a581(r823,l1: a319(r823,l3)))
      Spill a676(r642,l0: a643(r642,l1: a589(r642,l3: a360(r642,l5))))
      Spill a677(r638,l0: a644(r638,l1: a590(r638,l3: a361(r638,l5))))
      Spill a678(r635,l0: a645(r635,l1: a591(r635,l3: a362(r635,l5))))
      Spill a687(r625,l0: a654(r625,l1: a600(r625,l3: a371(r625,l5))))
      Allocno a0r245 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a1r776 of GENERAL_REGS(14) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-106),  obj 1 (confl regs =  0-3 12-106)
      Allocno a2r775 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-20 48-106),  obj 1 (confl regs =  0-3 12-20 48-106)
      Allocno a3r774 of ALL_REGS(46) has 7 avail. regs  4-10, node:  4-10 obj 0 (confl regs =  0-3 12-20 48-106),  obj 1 (confl regs =  0-3 12-20 48-106)
      Allocno a4r282 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a5r739 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a6r740 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a7r777 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-20 48-106)
      Allocno a8r306 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a9r300 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a10r301 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-17 48-106)
      Allocno a11r745 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a12r746 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a13r747 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a16r483 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a17r482 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a18r479 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a19r478 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a22r121 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a24r409 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a25r408 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a26r405 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a27r294 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a28r403 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a30r334 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a31r307 of VFP_LO_REGS(32) has 30 avail. regs  18-47, node:  18-47 (confl regs =  0-17 48-106)
      Allocno a32r379 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a33r791 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a34r790 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a35r789 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a36r374 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a37r114 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a38r788 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a39r116 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a40r368 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a41r373 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a42r367 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a43r372 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a44r787 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a45r786 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a46r361 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a47r325 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a48r785 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a49r337 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a50r358 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a51r360 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a52r784 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a53r783 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a54r354 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a55r323 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a56r782 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a57r329 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a58r351 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a59r353 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a60r781 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a61r780 of ALL_REGS(46) has 45 avail. regs  0-12 16-47, ^node:  0-12 14 16-47 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a62r347 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a63r318 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a64r344 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a65r313 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a66r346 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a413r247 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-20 48-106)
      Allocno a414r249 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-20 48-106)
      Allocno a415r263 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-20 48-106)
      Allocno a416r266 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-16 48-106)
      Allocno a417r267 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a418r319 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a419r741 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a420r737 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a421r738 of VFP_LO_REGS(32) has 27 avail. regs  21-47, node:  21-47 (confl regs =  0-20 48-106)
      Allocno a422r736 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a423r158 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a424r302 of VFP_LO_REGS(32) has 27 avail. regs  21-47, node:  21-47 (confl regs =  0-20 48-106)
      Allocno a425r733 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a426r242 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a427r732 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a428r731 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a429r820 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a430r726 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a431r819 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a432r218 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a433r818 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a434r217 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a435r724 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a436r719 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a437r722 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a438r744 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a439r713 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a440r721 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a441r714 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a442r708 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a443r718 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a444r715 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a445r222 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a446r710 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a447r712 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a448r709 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a449r707 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a450r254 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a451r219 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a452r230 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a453r817 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a454r703 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a455r816 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a456r221 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a457r815 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a458r216 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a459r701 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a460r696 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a461r699 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a462r689 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a463r698 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a464r684 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a465r688 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a466r685 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a467r691 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a468r695 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a469r692 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a470r690 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a471r686 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a472r253 of GENERAL_REGS(14) has 12 avail. regs  0-11, ^node:  0-12 (confl regs =  12-106)
      Allocno a473r814 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a474r813 of ALL_REGS(46) has 31 avail. regs  17-47, node:  17-47 (confl regs =  13 15-16 48-106)
      Allocno a475r215 of ALL_REGS(46) has 31 avail. regs  17-47, node:  17-47 (confl regs =  12-16 48-106)
      Allocno a476r812 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a477r678 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a478r677 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a479r271 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a480r286 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a481r762 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a482r761 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a483r269 of ALL_REGS(46) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-3 12-15 17-18 48-106)
      Allocno a484r652 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a485r270 of ALL_REGS(46) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-3 12-16 18 48-106)
      Allocno a486r654 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a487r653 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-18 48-106)
      Allocno a488r651 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a489r650 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a490r293 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a491r742 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a492r310 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a493r771 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a494r770 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a495r769 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a496r297 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a497r268 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a498r304 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a499r810 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a500r603 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a501r602 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a502r600 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a503r246 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a504r597 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a505r595 of LO_REGS(8) has 8 avail. regs  0-7, ^node:  0-12 (confl regs =  8-106)
      Allocno a506r592 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a507r593 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a508r168 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a509r590 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a510r589 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a511r809 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a512r583 of ALL_REGS(46) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a513r808 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a514r585 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a515r807 of ALL_REGS(46) has 13 avail. regs  0-12, node:  0-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a516r581 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a517r580 of ALL_REGS(46) has 45 avail. regs  1-12 14 16-47, ^node:  0-12 14 16-47 (confl regs =  0 13 15 48-106)
      Allocno a518r806 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a519r248 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 (confl regs =  0-3 12-106)
      Allocno a520r805 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a521r138 of GENERAL_REGS(14) has 8 avail. regs  4-11, node:  4-11 obj 0 (confl regs =  0-3 12-106),  obj 1 (confl regs =  0-3 12-106)
      Allocno a522r804 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a523r569 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a524r571 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a525r265 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a526r568 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a527r803 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a528r802 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a529r155 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a530r560 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a531r264 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a532r154 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a533r148 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a534r143 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a535r147 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a536r801 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a537r142 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a538r800 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a539r139 of GENERAL_REGS(14) has 12 avail. regs  0-11, ^node:  0-12 (confl regs =  12-106)
      Allocno a540r550 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a541r549 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a542r548 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a543r547 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a544r799 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a545r798 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a546r797 of ALL_REGS(46) has 11 avail. regs  2-12, node:  2-12 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a547r796 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a548r541 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a549r795 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a550r794 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a551r536 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a552r534 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a553r533 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a554r535 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a555r261 of VFP_LO_REGS(32) has 31 avail. regs  17-47, node:  17-47 (confl regs =  0-16 48-106)
      Allocno a556r532 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a557r793 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a558r792 of ALL_REGS(46) has 32 avail. regs  16-47, node:  16-47 (confl regs =  13 15 48-106)
      Allocno a559r530 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a560r528 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a561r529 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a616r675 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a617r676 of LO_REGS(8) has 8 avail. regs  0-7, ^node:  0-12 (confl regs =  8-106)
      Allocno a618r674 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a619r673 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a620r669 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a621r663 of GENERAL_REGS(14) has 13 avail. regs  1-12 14, ^node:  0-12 14 (confl regs =  0 13 15-106)
      Allocno a622r662 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a623r661 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a624r659 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a625r658 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a626r657 of ALL_REGS(46) has 45 avail. regs  1-12 14 16-47, ^node:  0-12 14 16-47 (confl regs =  0 13 15 48-106)
      Allocno a627r327 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a628r656 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a629r280 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a630r743 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a631r303 of GENERAL_REGS(14) has 9 avail. regs  3-11, node:  3-11 (confl regs =  0-2 12-106)
      Allocno a632r764 of VFP_LO_REGS(32) has 16 avail. regs  32-47, node:  32-47 (confl regs =  0-15 48-106)
      Allocno a633r193 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a634r606 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a636r281 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a661r563 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a662r558 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a663r561 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a664r556 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a665r149 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a666r146 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a667r554 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a668r144 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a669r564 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a670r273 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a671r274 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a672r275 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a673r310 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a674r191 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a675r811 of ALL_REGS(46) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15 48-106)
      Allocno a679r640 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a680r317 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a681r189 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a682r633 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a683r186 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a684r632 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a685r627 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a686r626 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a688r622 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a689r181 of VFP_LO_REGS(32) has 32 avail. regs  16-47, node:  16-47 (confl regs =  0-15 48-106)
      Allocno a690r615 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a691r612 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a692r609 of GENERAL_REGS(14) has 14 avail. regs  0-12 14, node:  0-12 14 (confl regs =  13 15-106)
      Allocno a693r608 of ALL_REGS(46) has 46 avail. regs  0-12 14 16-47, node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Forming thread by copy 259:a691r612-a692r609 (freq=84):
        Result (freq=2046): a691r612(1023) a692r609(1023)
      Forming thread by copy 6:a31r307-a56r782 (freq=83):
        Result (freq=415): a31r307(249) a56r782(166)
      Forming thread by copy 10:a30r334-a48r785 (freq=83):
        Result (freq=415): a30r334(249) a48r785(166)
      Forming thread by copy 14:a27r294-a38r788 (freq=83):
        Result (freq=415): a27r294(249) a38r788(166)
      Forming thread by copy 15:a22r121-a33r791 (freq=83):
        Result (freq=394): a22r121(228) a33r791(166)
      Forming thread by copy 237:a667r554-a668r144 (freq=67):
        Result (freq=2148): a667r554(1074) a668r144(1074)
      Forming thread by copy 238:a666r146-a667r554 (freq=67):
        Result (freq=3222): a666r146(1074) a667r554(1074) a668r144(1074)
      Forming thread by copy 239:a663r561-a666r146 (freq=67):
        Result (freq=4296): a663r561(1074) a666r146(1074) a667r554(1074) a668r144(1074)
      Forming thread by copy 240:a664r556-a665r149 (freq=67):
        Result (freq=2148): a664r556(1074) a665r149(1074)
      Forming thread by copy 241:a662r558-a664r556 (freq=67):
        Result (freq=3222): a662r558(1074) a664r556(1074) a665r149(1074)
      Forming thread by copy 164:a537r142-a538r800 (freq=57):
        Result (freq=708): a537r142(594) a538r800(114)
      Forming thread by copy 165:a535r147-a536r801 (freq=57):
        Result (freq=708): a535r147(594) a536r801(114)
      Forming thread by copy 132:a475r215-a476r812 (freq=51):
        Result (freq=255): a475r215(153) a476r812(102)
      Forming thread by copy 133:a458r216-a474r813 (freq=51):
        Result (freq=229): a458r216(127) a474r813(102)
      Forming thread by copy 134:a434r217-a473r814 (freq=51):
        Result (freq=229): a434r217(127) a473r814(102)
      Forming thread by copy 258:a692r609-a693r608 (freq=42):
        Result (freq=2728): a691r612(1023) a693r608(682) a692r609(1023)
      Forming thread by copy 251:a674r191-a685r627 (freq=39):
        Result (freq=1422): a674r191(798) a685r627(624)
      Forming thread by copy 169:a560r528-a561r529 (freq=37):
        Result (freq=1200): a560r528(600) a561r529(600)
      Forming thread by copy 172:a556r532-a557r793 (freq=37):
        Result (freq=1200): a556r532(600) a557r793(600)
      Forming thread by copy 174:a553r533-a556r532 (freq=37):
        Result (freq=1800): a553r533(600) a556r532(600) a557r793(600)
      Forming thread by copy 176:a551r536-a554r535 (freq=37):
        Result (freq=1200): a551r536(600) a554r535(600)
      Forming thread by copy 177:a552r534-a553r533 (freq=37):
        Result (freq=2400): a552r534(600) a553r533(600) a556r532(600) a557r793(600)
      Forming thread by copy 216:a634r606-a635r823 (freq=37):
        Result (freq=148): a634r606(74) a635r823(74)
      Forming thread by copy 130:a452r230-a453r817 (freq=25):
        Result (freq=125): a452r230(75) a453r817(50)
      Forming thread by copy 113:a425r733-a426r242 (freq=21):
        Result (freq=1100): a425r733(344) a426r242(756)
      Forming thread by copy 1:a62r347-a65r313 (freq=20):
        Result (freq=415): a62r347(166) a65r313(249)
      Forming thread by copy 5:a54r354-a57r329 (freq=20):
        Result (freq=415): a54r354(166) a57r329(249)
      Forming thread by copy 9:a46r361-a49r337 (freq=20):
        Result (freq=415): a46r361(166) a49r337(249)
      Forming thread by copy 13:a36r374-a39r116 (freq=20):
        Result (freq=415): a36r374(166) a39r116(249)
      Forming thread by copy 252:a688r622-a689r181 (freq=11):
        Result (freq=576): a688r622(184) a689r181(392)
      Forming thread by copy 254:a686r626-a687r625 (freq=11):
        Result (freq=368): a686r626(184) a687r625(184)
      Forming thread by copy 255:a680r317-a686r626 (freq=11):
        Result (freq=697): a680r317(329) a686r626(184) a687r625(184)
      Forming thread by copy 0:a65r313-a66r346 (freq=10):
        Result (freq=581): a62r347(166) a66r346(166) a65r313(249)
      Forming thread by copy 2:a63r318-a64r344 (freq=10):
        Result (freq=415): a63r318(249) a64r344(166)
      Forming thread by copy 3:a57r329-a59r353 (freq=10):
        Result (freq=581): a54r354(166) a59r353(166) a57r329(249)
      Forming thread by copy 4:a55r323-a58r351 (freq=10):
        Result (freq=415): a55r323(249) a58r351(166)
      Forming thread by copy 7:a49r337-a51r360 (freq=10):
        Result (freq=581): a46r361(166) a51r360(166) a49r337(249)
      Forming thread by copy 8:a47r325-a50r358 (freq=10):
        Result (freq=415): a47r325(249) a50r358(166)
      Forming thread by copy 11:a39r116-a41r373 (freq=10):
        Result (freq=581): a36r374(166) a41r373(166) a39r116(249)
      Forming thread by copy 12:a37r114-a40r368 (freq=10):
        Result (freq=415): a37r114(249) a40r368(166)
      Forming thread by copy 156:a516r581-a517r580 (freq=7):
        Result (freq=240): a516r581(120) a517r580(120)
      Forming thread by copy 157:a508r168-a516r581 (freq=7):
        Result (freq=390): a508r168(150) a516r581(120) a517r580(120)
      Forming thread by copy 163:a525r265-a528r802 (freq=7):
        Result (freq=317): a525r265(197) a528r802(120)
      Forming thread by copy 115:a449r707-a451r219 (freq=6):
        Result (freq=357): a449r707(153) a451r219(204)
      Forming thread by copy 117:a448r709-a449r707 (freq=6):
        Result (freq=459): a448r709(102) a449r707(153) a451r219(204)
      Forming thread by copy 118:a442r708-a447r712 (freq=6):
        Result (freq=204): a442r708(102) a447r712(102)
      Forming thread by copy 120:a444r715-a446r710 (freq=6):
        Result (freq=255): a444r715(102) a446r710(153)
      Forming thread by copy 121:a443r718-a445r222 (freq=6):
        Result (freq=331): a443r718(102) a445r222(229)
      Forming thread by copy 122:a441r714-a443r718 (freq=6):
        Result (freq=433): a441r714(102) a443r718(102) a445r222(229)
      Forming thread by copy 124:a439r713-a442r708 (freq=6):
        Result (freq=306): a439r713(102) a442r708(102) a447r712(102)
      Forming thread by copy 125:a436r719-a441r714 (freq=6):
        Result (freq=535): a436r719(102) a441r714(102) a443r718(102) a445r222(229)
      Forming thread by copy 126:a437r722-a438r744 (freq=6):
        Result (freq=849): a437r722(102) a438r744(747)
      Forming thread by copy 135:a470r690-a472r253 (freq=6):
        Result (freq=255): a470r690(153) a472r253(102)
      Forming thread by copy 136:a469r692-a471r686 (freq=6):
        Result (freq=255): a469r692(102) a471r686(153)
      Forming thread by copy 137:a468r695-a470r690 (freq=6):
        Result (freq=357): a468r695(102) a470r690(153) a472r253(102)
      Forming thread by copy 138:a467r691-a468r695 (freq=6):
        Result (freq=459): a467r691(102) a468r695(102) a470r690(153) a472r253(102)
      Forming thread by copy 141:a464r684-a465r688 (freq=6):
        Result (freq=204): a464r684(102) a465r688(102)
      Forming thread by copy 143:a462r689-a464r684 (freq=6):
        Result (freq=306): a462r689(102) a464r684(102) a465r688(102)
      Forming thread by copy 144:a461r699-a462r689 (freq=6):
        Result (freq=408): a461r699(102) a462r689(102) a464r684(102) a465r688(102)
      Forming thread by copy 154:a497r268-a499r810 (freq=5):
        Result (freq=69): a497r268(59) a499r810(10)
      Forming thread by copy 217:a633r193-a634r606 (freq=4):
        Result (freq=368): a633r193(220) a634r606(74) a635r823(74)
      Forming thread by copy 155:a507r593-a508r168 (freq=3):
        Result (freq=450): a507r593(60) a508r168(150) a516r581(120) a517r580(120)
      Forming thread by copy 210:a619r673-a620r669 (freq=2):
        Result (freq=72): a619r673(36) a620r669(36)
      Forming thread by copy 211:a618r674-a619r673 (freq=2):
        Result (freq=108): a618r674(36) a619r673(36) a620r669(36)
      Forming thread by copy 212:a616r675-a618r674 (freq=2):
        Result (freq=216): a616r675(108) a618r674(36) a619r673(36) a620r669(36)
      Forming thread by copy 213:a625r658-a626r657 (freq=2):
        Result (freq=72): a625r658(36) a626r657(36)
      Forming thread by copy 214:a624r659-a625r658 (freq=2):
        Result (freq=108): a624r659(36) a625r658(36) a626r657(36)
      Forming thread by copy 215:a623r661-a624r659 (freq=2):
        Result (freq=144): a623r661(36) a624r659(36) a625r658(36) a626r657(36)
      Forming thread by copy 244:a683r186-a684r632 (freq=2):
        Result (freq=72): a683r186(36) a684r632(36)
      Forming thread by copy 246:a681r189-a682r633 (freq=2):
        Result (freq=72): a681r189(36) a682r633(36)
      Forming thread by copy 248:a679r640-a680r317 (freq=2):
        Result (freq=733): a679r640(36) a680r317(329) a686r626(184) a687r625(184)
      Forming thread by copy 250:a491r742-a673r310 (freq=2):
        Result (freq=441): a491r742(405) a673r310(36)
      Forming thread by copy 146:a488r651-a489r650 (freq=1):
        Result (freq=4): a488r651(2) a489r650(2)
      Forming thread by copy 147:a484r652-a488r651 (freq=1):
        Result (freq=6): a484r652(2) a488r651(2) a489r650(2)
      Forming thread by copy 151:a491r742-a492r310 (freq=1):
        Result (freq=449): a491r742(405) a492r310(8) a673r310(36)
      Pushing a486(r654,l0: a154(r654,l1))(cost 0)
      Pushing a482(r761,l0: a150(r761,l1))(cost 0)
      Pushing a489(r650,l0: a157(r650,l1))(cost 0)
      Pushing a488(r651,l0: a156(r651,l1))(cost 0)
        Making a487(r653,l0: a155(r653,l1)) colorable
      Pushing a484(r652,l0: a152(r652,l1))(cost 0)
      Pushing a422(r736,l0: a90(r736,l1))(cost 0)
      Pushing a505(r595,l0: a173(r595,l1))(cost 0)
      Pushing a502(r600,l0: a170(r600,l1))(cost 0)
      Pushing a501(r602,l0: a169(r602,l1))(cost 0)
      Pushing a500(r603,l0: a168(r603,l1))(cost 0)
      Pushing a485(r270,l0: a153(r270,l1))(cost 0)
      Pushing a483(r269,l0: a151(r269,l1))(cost 0)
      Pushing a420(r737,l0: a88(r737,l1))(cost 0)
      Pushing a487(r653,l0: a155(r653,l1))(cost 210)
      Pushing a621(r663,l0: a567(r663,l1: a256(r663,l6)))(cost 0)
      Pushing a524(r571,l0: a192(r571,l1))(cost 0)
      Pushing a675(r811,l0: a642(r811,l1: a588(r811,l3: a359(r811,l5))))(cost 0)
      Pushing a622(r662,l0: a568(r662,l1: a257(r662,l6)))(cost 0)
      Pushing a617(r676,l0: a563(r676,l1: a252(r676,l6)))(cost 0)
      Pushing a457(r815,l0: a125(r815,l1))(cost 0)
      Pushing a455(r816,l0: a123(r816,l1))(cost 0)
      Pushing a433(r818,l0: a101(r818,l1))(cost 0)
      Pushing a431(r819,l0: a99(r819,l1))(cost 0)
      Pushing a429(r820,l0: a97(r820,l1))(cost 0)
      Pushing a526(r568,l0: a194(r568,l1))(cost 0)
      Pushing a520(r805,l0: a188(r805,l1))(cost 0)
      Pushing a523(r569,l0: a191(r569,l1))(cost 0)
      Pushing a499(r810,l0: a167(r810,l1))(cost 0)
      Pushing a497(r268,l0: a165(r268,l1))(cost 0)
      Pushing a684(r632,l0: a651(r632,l1: a597(r632,l3: a368(r632,l5))))(cost 0)
      Pushing a683(r186,l0: a650(r186,l1: a596(r186,l3: a367(r186,l5))))(cost 0)
      Pushing a682(r633,l0: a649(r633,l1: a595(r633,l3: a366(r633,l5))))(cost 0)
      Pushing a681(r189,l0: a648(r189,l1: a594(r189,l3: a365(r189,l5))))(cost 0)
      Forming thread by copy 159:a417r267-a511r809 (freq=60):
        Result (freq=643): a417r267(523) a511r809(120)
      Forming thread by copy 149:a417r267-a483r269 (freq=1):
        Result (freq=662): a417r267(523) a483r269(19) a511r809(120)
        Making a417(r267,l0: a85(r267,l1)) colorable
      Pushing a628(r656,l0: a574(r656,l1: a263(r656,l6)))(cost 0)
      Pushing a627(r327,l0: a573(r327,l1: a262(r327,l6)))(cost 0)
      Pushing a504(r597,l0: a172(r597,l1))(cost 0)
      Pushing a494(r770,l0: a162(r770,l1))(cost 0)
      Pushing a493(r771,l0: a161(r771,l1))(cost 0)
      Pushing a463(r698,l0: a131(r698,l1))(cost 0)
      Pushing a459(r701,l0: a127(r701,l1))(cost 0)
      Pushing a440(r721,l0: a108(r721,l1))(cost 0)
      Pushing a435(r724,l0: a103(r724,l1))(cost 0)
      Pushing a529(r155,l0: a197(r155,l1))(cost 0)
      Pushing a527(r803,l0: a195(r803,l1))(cost 0)
      Pushing a522(r804,l0: a190(r804,l1))(cost 0)
      Pushing a518(r806,l0: a186(r806,l1))(cost 0)
      Pushing a515(r807,l0: a183(r807,l1))(cost 0)
      Pushing a514(r585,l0: a182(r585,l1))(cost 0)
      Pushing a513(r808,l0: a181(r808,l1))(cost 0)
      Pushing a511(r809,l0: a179(r809,l1))(cost 0)
      Pushing a510(r589,l0: a178(r589,l1))(cost 0)
      Pushing a509(r590,l0: a177(r590,l1))(cost 0)
      Pushing a26(r405,l0)(cost 0)
      Pushing a453(r817,l0: a121(r817,l1))(cost 0)
      Pushing a452(r230,l0: a120(r230,l1))(cost 0)
      Pushing a456(r221,l0: a124(r221,l1))(cost 0)
      Pushing a432(r218,l0: a100(r218,l1))(cost 0)
      Pushing a419(r741,l0: a87(r741,l1))(cost 0)
      Pushing a626(r657,l0: a572(r657,l1: a261(r657,l6)))(cost 0)
      Pushing a625(r658,l0: a571(r658,l1: a260(r658,l6)))(cost 0)
      Pushing a624(r659,l0: a570(r659,l1: a259(r659,l6)))(cost 0)
      Pushing a623(r661,l0: a569(r661,l1: a258(r661,l6)))(cost 0)
      Pushing a506(r592,l0: a174(r592,l1))(cost 0)
      Pushing a495(r769,l0: a163(r769,l1))(cost 0)
      Pushing a61(r780,l0)(cost 0)
      Pushing a60(r781,l0)(cost 0)
      Pushing a53(r783,l0)(cost 0)
      Pushing a52(r784,l0)(cost 0)
      Pushing a45(r786,l0)(cost 0)
      Pushing a44(r787,l0)(cost 0)
      Pushing a43(r372,l0)(cost 0)
      Pushing a42(r367,l0)(cost 0)
      Pushing a35(r789,l0)(cost 0)
      Pushing a34(r790,l0)(cost 0)
      Pushing a32(r379,l0)(cost 0)
      Pushing a28(r403,l0)(cost 0)
      Pushing a25(r408,l0)(cost 0)
      Pushing a24(r409,l0)(cost 0)
      Pushing a19(r478,l0)(cost 0)
      Pushing a18(r479,l0)(cost 0)
      Pushing a17(r482,l0)(cost 0)
      Pushing a16(r483,l0)(cost 0)
      Pushing a550(r794,l0: a218(r794,l1))(cost 0)
      Pushing a549(r795,l0: a217(r795,l1))(cost 0)
      Pushing a477(r678,l0: a145(r678,l1))(cost 0)
      Pushing a620(r669,l0: a566(r669,l1: a255(r669,l6)))(cost 0)
      Pushing a619(r673,l0: a565(r673,l1: a254(r673,l6)))(cost 0)
      Pushing a618(r674,l0: a564(r674,l1: a253(r674,l6)))(cost 0)
      Pushing a616(r675,l0: a562(r675,l1: a251(r675,l6)))(cost 0)
      Pushing a474(r813,l0: a142(r813,l1))(cost 0)
      Pushing a458(r216,l0: a126(r216,l1))(cost 0)
      Pushing a473(r814,l0: a141(r814,l1))(cost 0)
      Pushing a434(r217,l0: a102(r217,l1))(cost 0)
      Pushing a476(r812,l0: a144(r812,l1))(cost 0)
      Pushing a475(r215,l0: a143(r215,l1))(cost 0)
      Pushing a469(r692,l0: a137(r692,l1))(cost 0)
      Pushing a471(r686,l0: a139(r686,l1))(cost 0)
      Pushing a444(r715,l0: a112(r715,l1))(cost 0)
      Pushing a446(r710,l0: a114(r710,l1))(cost 0)
      Pushing a496(r297,l0: a164(r297,l1))(cost 0)
      Forming thread by copy 161:a424r302-a525r265 (freq=2):
        Result (freq=801): a424r302(484) a525r265(197) a528r802(120)
        Making a424(r302,l0: a92(r302,l1)) colorable
      Pushing a544(r799,l0: a212(r799,l1))(cost 0)
      Pushing a427(r732,l0: a95(r732,l1))(cost 0)
      Pushing a447(r712,l0: a115(r712,l1))(cost 0)
      Pushing a442(r708,l0: a110(r708,l1))(cost 0)
      Pushing a439(r713,l0: a107(r713,l1))(cost 0)
      Pushing a528(r802,l0: a196(r802,l1))(cost 0)
      Pushing a525(r265,l0: a193(r265,l1))(cost 0)
        Making a421(r738,l0: a89(r738,l1)) colorable
      Pushing a634(r606,l0: a580(r606,l1: a318(r606,l3)))(cost 0)
      Pushing a633(r193,l0: a579(r193,l1: a317(r193,l3)))(cost 0)
      Pushing a33(r791,l0)(cost 0)
      Pushing a22(r121,l0)(cost 0)
      Pushing a465(r688,l0: a133(r688,l1))(cost 0)
      Forming thread by copy 140:a460r696-a467r691 (freq=6):
        Result (freq=561): a460r696(102) a467r691(102) a468r695(102) a470r690(153) a472r253(102)
        Making a460(r696,l0: a128(r696,l1)) colorable
        Making a466(r685,l0: a134(r685,l1)) colorable
      Pushing a466(r685,l0: a134(r685,l1))(cost 1020)
      Pushing a464(r684,l0: a132(r684,l1))(cost 0)
      Pushing a462(r689,l0: a130(r689,l1))(cost 0)
      Pushing a461(r699,l0: a129(r699,l1))(cost 0)
      Pushing a64(r344,l0)(cost 0)
      Pushing a63(r318,l0)(cost 0)
      Pushing a58(r351,l0)(cost 0)
      Pushing a55(r323,l0)(cost 0)
      Pushing a50(r358,l0)(cost 0)
      Pushing a47(r325,l0)(cost 0)
      Pushing a40(r368,l0)(cost 0)
      Pushing a37(r114,l0)(cost 0)
      Pushing a56(r782,l0)(cost 0)
      Pushing a31(r307,l0)(cost 0)
      Pushing a48(r785,l0)(cost 0)
      Pushing a30(r334,l0)(cost 0)
      Pushing a38(r788,l0)(cost 0)
      Pushing a27(r294,l0)(cost 0)
      Pushing a492(r310,l0: a160(r310,l1))(cost 0)
      Pushing a673(r310,l0: a640(r310,l1: a586(r310,l3: a357(r310,l5))))(cost 0)
      Pushing a491(r742,l0: a159(r742,l1))(cost 0)
      Pushing a543(r547,l0: a211(r547,l1))(cost 0)
      Pushing a542(r548,l0: a210(r548,l1))(cost 0)
      Pushing a541(r549,l0: a209(r549,l1))(cost 0)
      Pushing a540(r550,l0: a208(r550,l1))(cost 0)
      Pushing a507(r593,l0: a175(r593,l1))(cost 0)
      Pushing a517(r580,l0: a185(r580,l1))(cost 0)
      Pushing a516(r581,l0: a184(r581,l1))(cost 0)
      Pushing a508(r168,l0: a176(r168,l1))(cost 0)
      Pushing a468(r695,l0: a136(r695,l1))(cost 0)
      Pushing a467(r691,l0: a135(r691,l1))(cost 0)
      Forming thread by copy 131:a445r222-a452r230 (freq=3):
        Result (freq=660): a436r719(102) a452r230(75) a453r817(50) a441r714(102) a443r718(102) a445r222(229)
        Making a445(r222,l0: a113(r222,l1)) colorable
      Pushing a460(r696,l0: a128(r696,l1))(cost 1020)
      Pushing a472(r253,l0: a140(r253,l1))(cost 0)
      Pushing a470(r690,l0: a138(r690,l1))(cost 0)
      Pushing a448(r709,l0: a116(r709,l1))(cost 0)
      Pushing a449(r707,l0: a117(r707,l1))(cost 0)
      Pushing a443(r718,l0: a111(r718,l1))(cost 0)
      Pushing a441(r714,l0: a109(r714,l1))(cost 0)
      Pushing a436(r719,l0: a104(r719,l1))(cost 0)
      Pushing a688(r622,l0: a655(r622,l1: a601(r622,l3: a372(r622,l5))))(cost 0)
      Forming thread by copy 153:a416r266-a501r602 (freq=5):
        Result (freq=53): a416r266(43) a501r602(10)
      Forming thread by copy 148:a416r266-a485r270 (freq=1):
        Result (freq=72): a416r266(43) a485r270(19) a501r602(10)
        Making a416(r266,l0: a84(r266,l1)) colorable
        Making a632(r764,l0: a578(r764,l1: a316(r764,l3))) colorable
      Pushing a632(r764,l0: a578(r764,l1: a316(r764,l3)))(cost 460)
        Making a414(r249,l0: a82(r249,l1)) colorable
      Pushing a416(r266,l0: a84(r266,l1))(cost 430)
      Pushing a414(r249,l0: a82(r249,l1))(cost 1880)
      Pushing a689(r181,l0: a656(r181,l1: a602(r181,l3: a373(r181,l5))))(cost 0)
      Pushing a66(r346,l0)(cost 0)
      Pushing a62(r347,l0)(cost 0)
      Forming thread by copy 170:a9r300-a560r528 (freq=37):
        Result (freq=2132): a9r300(932) a560r528(600) a561r529(600)
        Making a9(r300,l0) colorable
      Pushing a65(r313,l0)(cost 0)
      Pushing a59(r353,l0)(cost 0)
      Pushing a54(r354,l0)(cost 0)
      Pushing a57(r329,l0)(cost 0)
      Pushing a51(r360,l0)(cost 0)
      Forming thread by copy 173:a10r301-a554r535 (freq=37):
        Result (freq=2732): a10r301(1532) a551r536(600) a554r535(600)
        Making a10(r301,l0) colorable
      Pushing a46(r361,l0)(cost 0)
      Pushing a49(r337,l0)(cost 0)
      Pushing a41(r373,l0)(cost 0)
      Pushing a36(r374,l0)(cost 0)
      Pushing a39(r116,l0)(cost 0)
      Pushing a534(r143,l0: a202(r143,l1))(cost 0)
      Pushing a533(r148,l0: a201(r148,l1))(cost 0)
      Pushing a559(r530,l0: a227(r530,l1))(cost 0)
      Pushing a558(r792,l0: a226(r792,l1))(cost 0)
      Pushing a548(r541,l0: a216(r541,l1))(cost 0)
      Pushing a547(r796,l0: a215(r796,l1))(cost 0)
      Pushing a546(r797,l0: a214(r797,l1))(cost 0)
      Pushing a545(r798,l0: a213(r798,l1))(cost 0)
      Pushing a478(r677,l0: a146(r677,l1))(cost 0)
      Pushing a428(r731,l0: a96(r731,l1))(cost 0)
      Pushing a445(r222,l0: a113(r222,l1))(cost 1150)
      Pushing a417(r267,l0: a85(r267,l1))(cost 5170)
      Pushing a538(r800,l0: a206(r800,l1))(cost 0)
      Pushing a537(r142,l0: a205(r142,l1))(cost 0)
      Pushing a536(r801,l0: a204(r801,l1))(cost 0)
      Pushing a535(r147,l0: a203(r147,l1))(cost 0)
      Pushing a679(r640,l0: a646(r640,l1: a592(r640,l3: a363(r640,l5))))(cost 0)
        Making a415(r263,l0: a83(r263,l1)) colorable
      Pushing a415(r263,l0: a83(r263,l1))(cost 4020)
      Pushing a686(r626,l0: a653(r626,l1: a599(r626,l3: a370(r626,l5))))(cost 0)
      Forming thread by copy 243:a672r275-a682r633 (freq=2):
        Result (freq=547): a672r275(475) a681r189(36) a682r633(36)
        Making a672(r275,l0: a639(r275,l1: a585(r275,l3: a356(r275,l5)))) colorable
      Pushing a672(r275,l0: a639(r275,l1: a585(r275,l3: a356(r275,l5))))(cost 4480)
      Forming thread by copy 256:a670r273-a689r181 (freq=18):
        Result (freq=1536): a670r273(960) a688r622(184) a689r181(392)
      Forming thread by copy 257:a670r273-a680r317 (freq=16):
        Result (freq=2269): a670r273(960) a679r640(36) a680r317(329) a686r626(184) a687r625(184) a688r622(184) a689r181(392)
        Making a670(r273,l0: a637(r273,l1: a583(r273,l3: a354(r273,l5)))) colorable
      Forming thread by copy 242:a671r274-a684r632 (freq=2):
        Result (freq=547): a671r274(475) a683r186(36) a684r632(36)
        Making a671(r274,l0: a638(r274,l1: a584(r274,l3: a355(r274,l5)))) colorable
      Pushing a671(r274,l0: a638(r274,l1: a584(r274,l3: a355(r274,l5))))(cost 4480)
        Making a690(r615,l0: a657(r615,l1: a603(r615,l3: a374(r615,l5)))) colorable
      Pushing a690(r615,l0: a657(r615,l1: a603(r615,l3: a374(r615,l5))))(cost 10230)
      Pushing a680(r317,l0: a647(r317,l1: a593(r317,l3: a364(r317,l5))))(cost 0)
      Pushing a424(r302,l0: a92(r302,l1))(cost 4840)
      Pushing a437(r722,l0: a105(r722,l1))(cost 0)
      Pushing a669(r564,l0: a615(r564,l1: a412(r564,l2)))(cost 0)
      Pushing a661(r563,l0: a607(r563,l1: a404(r563,l2)))(cost 0)
      Pushing a425(r733,l0: a93(r733,l1))(cost 0)
      Pushing a426(r242,l0: a94(r242,l1))(cost 0)
      Pushing a561(r529,l0: a229(r529,l1))(cost 0)
      Pushing a560(r528,l0: a228(r528,l1))(cost 0)
      Pushing a555(r261,l0: a223(r261,l1))(cost 0)
      Pushing a670(r273,l0: a637(r273,l1: a583(r273,l3: a354(r273,l5))))(cost 5430)
        Making a418(r319,l0: a86(r319,l1)) colorable
        Making a498(r304,l0: a166(r304,l1)) colorable
      Pushing a418(r319,l0: a86(r319,l1))(cost 3400)
      Pushing a498(r304,l0: a166(r304,l1))(cost 3430)
      Pushing a554(r535,l0: a222(r535,l1))(cost 0)
      Pushing a551(r536,l0: a219(r536,l1))(cost 0)
      Pushing a636(r281,l0: a582(r281,l1: a320(r281,l3)))(cost 0)
      Forming thread by copy 171:a413r247-a558r792 (freq=300):
        Result (freq=1563): a413r247(963) a558r792(600)
      Forming thread by copy 168:a413r247-a549r795 (freq=99):
        Result (freq=1761): a413r247(963) a549r795(198) a558r792(600)
        Making a413(r247,l0: a81(r247,l1)) colorable
      Pushing a685(r627,l0: a652(r627,l1: a598(r627,l3: a369(r627,l5))))(cost 0)
        Making a7(r777,l0) colorable
      Pushing a7(r777,l0)(cost 4490)
      Pushing a674(r191,l0: a641(r191,l1: a587(r191,l3: a358(r191,l5))))(cost 0)
      Pushing a413(r247,l0: a81(r247,l1))(cost 9792)
      Pushing a421(r738,l0: a89(r738,l1))(cost 18220)
      Pushing a9(r300,l0)(cost 9320)
      Pushing a532(r154,l0: a200(r154,l1))(cost 0)
      Pushing a557(r793,l0: a225(r793,l1))(cost 0)
      Pushing a556(r532,l0: a224(r532,l1))(cost 0)
      Pushing a553(r533,l0: a221(r533,l1))(cost 0)
      Pushing a552(r534,l0: a220(r534,l1))(cost 0)
      Pushing a693(r608,l0: a660(r608,l1: a606(r608,l3: a377(r608,l5))))(cost 0)
      Pushing a692(r609,l0: a659(r609,l1: a605(r609,l3: a376(r609,l5))))(cost 0)
      Pushing a691(r612,l0: a658(r612,l1: a604(r612,l3: a375(r612,l5))))(cost 0)
      Pushing a10(r301,l0)(cost 15320)
      Pushing a664(r556,l0: a610(r556,l1: a407(r556,l2)))(cost 0)
      Pushing a665(r149,l0: a611(r149,l1: a408(r149,l2)))(cost 0)
      Pushing a662(r558,l0: a608(r558,l1: a405(r558,l2)))(cost 0)
        Making a530(r560,l0: a198(r560,l1)) colorable
      Forming thread by copy 236:a531r264-a669r564 (freq=134):
        Result (freq=2742): a531r264(1668) a669r564(1074)
        Making a531(r264,l0: a199(r264,l1)) colorable
      Pushing a530(r560,l0: a198(r560,l1))(cost 5940)
      Pushing a531(r264,l0: a199(r264,l1))(cost 8625)
        Making a539(r139,l0: a207(r139,l1)) colorable
      Pushing a539(r139,l0: a207(r139,l1))(cost 11865)
      Pushing a667(r554,l0: a613(r554,l1: a410(r554,l2)))(cost 0)
      Pushing a668(r144,l0: a614(r144,l1: a411(r144,l2)))(cost 0)
      Pushing a666(r146,l0: a612(r146,l1: a409(r146,l2)))(cost 0)
      Pushing a663(r561,l0: a609(r561,l1: a406(r561,l2)))(cost 0)
      Pushing a1(r776,l0)(potential spill: pri=0, cost=1910)
      Pushing a3(r774,l0)(potential spill: pri=0, cost=3530)
      Pushing a0(r245,l0)(potential spill: pri=1, cost=1600)
      Pushing a2(r775,l0)(potential spill: pri=1, cost=6230)
      Pushing a5(r739,l0)(potential spill: pri=4, cost=3830)
      Pushing a11(r745,l0)(potential spill: pri=4, cost=4400)
        Making a479(r271,l0: a147(r271,l1)) colorable
        Making a480(r286,l0: a148(r286,l1)) colorable
      Forming thread by copy 150:a481r762-a482r761 (freq=1):
        Result (freq=21): a481r762(19) a482r761(2)
        Making a481(r762,l0: a149(r762,l1)) colorable
        Making a490(r293,l0: a158(r293,l1)) colorable
        Making a629(r280,l0: a575(r280,l1: a313(r280,l3))) colorable
        Making a630(r743,l0: a576(r743,l1: a314(r743,l3))) colorable
        Making a631(r303,l0: a577(r303,l1: a315(r303,l3))) colorable
      Pushing a481(r762,l0: a149(r762,l1))(cost 190)
      Pushing a490(r293,l0: a158(r293,l1))(cost 675)
      Pushing a479(r271,l0: a147(r271,l1))(cost 1450)
      Pushing a480(r286,l0: a148(r286,l1))(cost 1900)
      Pushing a631(r303,l0: a577(r303,l1: a315(r303,l3)))(cost 3225)
      Pushing a630(r743,l0: a576(r743,l1: a314(r743,l3)))(cost 7190)
      Pushing a629(r280,l0: a575(r280,l1: a313(r280,l3)))(cost 5630)
      Pushing a12(r746,l0)(potential spill: pri=4, cost=4400)
      Pushing a6(r740,l0)(potential spill: pri=7, cost=6830)
      Forming thread by copy 114:a430r726-a433r818 (freq=25):
        Result (freq=100): a430r726(50) a433r818(50)
        Making a430(r726,l0: a98(r726,l1)) colorable
        Making a450(r254,l0: a118(r254,l1)) colorable
        Making a451(r219,l0: a119(r219,l1)) colorable
      Pushing a430(r726,l0: a98(r726,l1))(cost 1450)
      Pushing a450(r254,l0: a118(r254,l1))(cost 1020)
      Pushing a451(r219,l0: a119(r219,l1))(cost 1275)
      Pushing a4(r282,l0)(potential spill: pri=11, cost=10430)
        Making a438(r744,l0: a106(r744,l1)) colorable
      Forming thread by copy 166:a519r248-a547r796 (freq=300):
        Result (freq=1650): a519r248(1050) a547r796(600)
      Forming thread by copy 160:a519r248-a520r805 (freq=30):
        Result (freq=1710): a519r248(1050) a520r805(60) a547r796(600)
        Making a519(r248,l0: a187(r248,l1)) colorable
      Forming thread by copy 129:a454r703-a457r815 (freq=25):
        Result (freq=100): a454r703(50) a457r815(50)
        Making a454(r703,l0: a122(r703,l1)) colorable
      Pushing a454(r703,l0: a122(r703,l1))(cost 1450)
      Pushing a438(r744,l0: a106(r744,l1))(cost 7470)
      Pushing a519(r248,l0: a187(r248,l1))(cost 12000)
        Making a8(r306,l0) colorable
        Making a13(r747,l0) colorable
      Forming thread by copy 152:a423r158-a502r600 (freq=5):
        Result (freq=75): a423r158(65) a502r600(10)
        Making a423(r158,l0: a91(r158,l1)) colorable
        Making a503(r246,l0: a171(r246,l1)) colorable
      Pushing a423(r158,l0: a91(r158,l1))(cost 575)
      Forming thread by copy 167:a521r138-a546r797 (freq=300):
        Result (freq=1140): a521r138(540) a546r797(600)
        Making a521(r138,l0: a189(r138,l1)) colorable
      Forming thread by copy 158:a512r583-a515r807 (freq=60):
        Result (freq=240): a512r583(120) a515r807(120)
        Making a512(r583,l0: a180(r583,l1)) colorable
      Pushing a512(r583,l0: a180(r583,l1))(cost 3480)
      Pushing a503(r246,l0: a171(r246,l1))(cost 3030)
      Pushing a521(r138,l0: a189(r138,l1))(cost 7860)
      Pushing a13(r747,l0)(cost 30322)
      Pushing a8(r306,l0)(cost 33530)
      Popping a8(r306,l0)  -- assign reg 4
      Popping a13(r747,l0)  -- assign reg 5
      Popping a521(r138,l0: a189(r138,l1))  -- assign reg 6
      Popping a503(r246,l0: a171(r246,l1))  -- assign reg 8
      Popping a512(r583,l0: a180(r583,l1))  -- assign reg 6
      Popping a423(r158,l0: a91(r158,l1))  -- assign reg 9
      Popping a519(r248,l0: a187(r248,l1))  -- assign reg 10
      Popping a438(r744,l0: a106(r744,l1))  -- assign reg 8
      Popping a454(r703,l0: a122(r703,l1))  -- assign reg 6
      Popping a4(r282,l0)  -- assign reg 11
      Popping a451(r219,l0: a119(r219,l1))  -- assign reg 9
      Popping a450(r254,l0: a118(r254,l1))  -- assign reg 10
      Popping a430(r726,l0: a98(r726,l1))  -- assign reg 6
      Popping a6(r740,l0)  -- spill
      Popping a12(r746,l0)  -- spill
      Popping a629(r280,l0: a575(r280,l1: a313(r280,l3)))  -- assign reg 6
      Popping a630(r743,l0: a576(r743,l1: a314(r743,l3)))  -- assign reg 7
      Popping a631(r303,l0: a577(r303,l1: a315(r303,l3)))  -- assign reg 8
      Popping a480(r286,l0: a148(r286,l1))  -- assign reg 6
      Popping a479(r271,l0: a147(r271,l1))  -- assign reg 7
      Popping a490(r293,l0: a158(r293,l1))  -- assign reg 9
      Popping a481(r762,l0: a149(r762,l1))  -- assign reg 8
      Popping a11(r745,l0)  -- spill
      Popping a5(r739,l0)  -- spill
      Popping a2(r775,l0)  -- spill
      Popping a0(r245,l0)  -- spill
      Popping a3(r774,l0)  -- spill
      Popping a1(r776,l0)  -- spill
      Popping a663(r561,l0: a609(r561,l1: a406(r561,l2)))  -- assign reg 3
      Popping a666(r146,l0: a612(r146,l1: a409(r146,l2)))  -- assign reg 3
      Popping a668(r144,l0: a614(r144,l1: a411(r144,l2)))  -- assign reg 31
      Popping a667(r554,l0: a613(r554,l1: a410(r554,l2)))  -- assign reg 3
      Popping a539(r139,l0: a207(r139,l1))  -- assign reg 9
      Popping a531(r264,l0: a199(r264,l1))  -- assign reg 2
      Popping a530(r560,l0: a198(r560,l1))  -- assign reg 1
      Popping a662(r558,l0: a608(r558,l1: a405(r558,l2)))  -- assign reg 0
      Popping a665(r149,l0: a611(r149,l1: a408(r149,l2)))  -- assign reg 30
      Popping a664(r556,l0: a610(r556,l1: a407(r556,l2)))  -- assign reg 0
      Popping a10(r301,l0)  -- assign reg 32
      Popping a691(r612,l0: a658(r612,l1: a604(r612,l3: a375(r612,l5))))  -- assign reg 3
      Popping a692(r609,l0: a659(r609,l1: a605(r609,l3: a376(r609,l5))))  -- assign reg 3
      Popping a693(r608,l0: a660(r608,l1: a606(r608,l3: a377(r608,l5))))  -- assign reg 3
      Popping a552(r534,l0: a220(r534,l1))  -- assign reg 31
      Popping a553(r533,l0: a221(r533,l1))  -- assign reg 31
      Popping a556(r532,l0: a224(r532,l1))  -- assign reg 31
      Popping a557(r793,l0: a225(r793,l1))  -- assign reg 16
      Popping a532(r154,l0: a200(r154,l1))  -- assign reg 29
      Popping a9(r300,l0)  -- assign reg 33
      Popping a421(r738,l0: a89(r738,l1))  -- assign reg 32
      Popping a413(r247,l0: a81(r247,l1))  -- assign reg 33
      Popping a674(r191,l0: a641(r191,l1: a587(r191,l3: a358(r191,l5))))  -- assign reg 32
      Popping a7(r777,l0)  -- assign reg 34
      Popping a685(r627,l0: a652(r627,l1: a598(r627,l3: a369(r627,l5))))  -- assign reg 32
      Popping a636(r281,l0: a582(r281,l1: a320(r281,l3)))  -- assign reg 35
      Popping a551(r536,l0: a219(r536,l1))  -- assign reg 32
      Popping a554(r535,l0: a222(r535,l1))  -- assign reg 32
      Popping a498(r304,l0: a166(r304,l1))  -- assign reg 2
      Popping a418(r319,l0: a86(r319,l1))  -- assign reg 1
      Popping a670(r273,l0: a637(r273,l1: a583(r273,l3: a354(r273,l5))))  -- assign reg 3
      Popping a555(r261,l0: a223(r261,l1))  -- assign reg 35
      Popping a560(r528,l0: a228(r528,l1))  -- assign reg 33
      Popping a561(r529,l0: a229(r529,l1))  -- assign reg 31
      Popping a426(r242,l0: a94(r242,l1))  -- assign reg 3
      Popping a425(r733,l0: a93(r733,l1))  -- assign reg 3
      Popping a661(r563,l0: a607(r563,l1: a404(r563,l2)))  -- assign reg 3
      Popping a669(r564,l0: a615(r564,l1: a412(r564,l2)))  -- assign reg 2
      Popping a437(r722,l0: a105(r722,l1))  -- assign reg 8
      Popping a424(r302,l0: a92(r302,l1))  -- assign reg 36
      Popping a680(r317,l0: a647(r317,l1: a593(r317,l3: a364(r317,l5))))  -- assign reg 31
      Popping a690(r615,l0: a657(r615,l1: a603(r615,l3: a374(r615,l5))))  -- assign reg 0
      Popping a671(r274,l0: a638(r274,l1: a584(r274,l3: a355(r274,l5))))  -- assign reg 12
      Popping a672(r275,l0: a639(r275,l1: a585(r275,l3: a356(r275,l5))))  -- assign reg 0
      Popping a686(r626,l0: a653(r626,l1: a599(r626,l3: a370(r626,l5))))  -- assign reg 31
      Popping a415(r263,l0: a83(r263,l1))  -- assign reg 37
      Popping a679(r640,l0: a646(r640,l1: a592(r640,l3: a363(r640,l5))))  -- assign reg 31
      Popping a535(r147,l0: a203(r147,l1))  -- assign reg 16
      Popping a536(r801,l0: a204(r801,l1))  -- assign reg 16
      Popping a537(r142,l0: a205(r142,l1))  -- assign reg 35
      Popping a538(r800,l0: a206(r800,l1))  -- assign reg 16
      Popping a417(r267,l0: a85(r267,l1))  -- assign reg 38
      Popping a445(r222,l0: a113(r222,l1))  -- assign reg 3
      Popping a428(r731,l0: a96(r731,l1))  -- assign reg 31
      Popping a478(r677,l0: a146(r677,l1))  -- assign reg 3
      Popping a545(r798,l0: a213(r798,l1))  -- assign reg 0
      Popping a546(r797,l0: a214(r797,l1))  -- assign reg 6
      Popping a547(r796,l0: a215(r796,l1))  -- assign reg 16
      Popping a548(r541,l0: a216(r541,l1))  -- assign reg 16
      Popping a558(r792,l0: a226(r792,l1))  -- assign reg 16
      Popping a559(r530,l0: a227(r530,l1))  -- assign reg 16
      Popping a533(r148,l0: a201(r148,l1))  -- assign reg 28
      Popping a534(r143,l0: a202(r143,l1))  -- assign reg 27
      Popping a39(r116,l0)  -- assign reg 31
      Popping a36(r374,l0)  -- assign reg 31
      Popping a41(r373,l0)  -- assign reg 31
      Popping a49(r337,l0)  -- assign reg 31
      Popping a46(r361,l0)  -- assign reg 31
      Popping a51(r360,l0)  -- assign reg 31
      Popping a57(r329,l0)  -- assign reg 31
      Popping a54(r354,l0)  -- assign reg 31
      Popping a59(r353,l0)  -- assign reg 31
      Popping a65(r313,l0)  -- assign reg 31
      Popping a62(r347,l0)  -- assign reg 31
      Popping a66(r346,l0)  -- assign reg 31
      Popping a689(r181,l0: a656(r181,l1: a602(r181,l3: a373(r181,l5))))  -- assign reg 31
      Popping a414(r249,l0: a82(r249,l1))  -- assign reg 39
      Popping a416(r266,l0: a84(r266,l1))  -- assign reg 40
      Popping a632(r764,l0: a578(r764,l1: a316(r764,l3)))  -- assign reg 41
      Popping a688(r622,l0: a655(r622,l1: a601(r622,l3: a372(r622,l5))))  -- assign reg 31
      Popping a436(r719,l0: a104(r719,l1))  -- assign reg 3
      Popping a441(r714,l0: a109(r714,l1))  -- assign reg 3
      Popping a443(r718,l0: a111(r718,l1))  -- assign reg 3
      Popping a449(r707,l0: a117(r707,l1))  -- assign reg 9
      Popping a448(r709,l0: a116(r709,l1))  -- assign reg 9
      Popping a470(r690,l0: a138(r690,l1))  -- assign reg 2
      Popping a472(r253,l0: a140(r253,l1))  -- assign reg 6
      Popping a460(r696,l0: a128(r696,l1))  -- assign reg 2
      Popping a467(r691,l0: a135(r691,l1))  -- assign reg 2
      Popping a468(r695,l0: a136(r695,l1))  -- assign reg 2
      Popping a508(r168,l0: a176(r168,l1))  -- assign reg 35
      Popping a516(r581,l0: a184(r581,l1))  -- assign reg 35
      Popping a517(r580,l0: a185(r580,l1))  -- assign reg 35
      Popping a507(r593,l0: a175(r593,l1))  -- assign reg 35
      Popping a540(r550,l0: a208(r550,l1))  -- assign reg 31
      Popping a541(r549,l0: a209(r549,l1))  -- assign reg 30
      Popping a542(r548,l0: a210(r548,l1))  -- assign reg 29
      Popping a543(r547,l0: a211(r547,l1))  -- assign reg 3
      Popping a491(r742,l0: a159(r742,l1))  -- assign reg 30
      Popping a673(r310,l0: a640(r310,l1: a586(r310,l3: a357(r310,l5))))  -- assign reg 30
      Popping a492(r310,l0: a160(r310,l1))  -- assign reg 30
      Popping a27(r294,l0)  -- assign reg 34
      Popping a38(r788,l0)  -- assign reg 0
      Popping a30(r334,l0)  -- assign reg 35
      Popping a48(r785,l0)  -- assign reg 0
      Popping a31(r307,l0)  -- assign reg 36
      Popping a56(r782,l0)  -- assign reg 0
      Popping a37(r114,l0)  -- assign reg 30
      Popping a40(r368,l0)  -- assign reg 30
      Popping a47(r325,l0)  -- assign reg 30
      Popping a50(r358,l0)  -- assign reg 30
      Popping a55(r323,l0)  -- assign reg 30
      Popping a58(r351,l0)  -- assign reg 30
      Popping a63(r318,l0)  -- assign reg 30
      Popping a64(r344,l0)  -- assign reg 30
      Popping a461(r699,l0: a129(r699,l1))  -- assign reg 1
      Popping a462(r689,l0: a130(r689,l1))  -- assign reg 1
      Popping a464(r684,l0: a132(r684,l1))  -- assign reg 1
      Popping a466(r685,l0: a134(r685,l1))  -- assign reg 1
      Popping a465(r688,l0: a133(r688,l1))  -- assign reg 0
      Popping a22(r121,l0)  -- assign reg 37
      Popping a33(r791,l0)  -- assign reg 0
      Popping a633(r193,l0: a579(r193,l1: a317(r193,l3)))  -- assign reg 42
      Popping a634(r606,l0: a580(r606,l1: a318(r606,l3)))  -- assign reg 42
      Popping a525(r265,l0: a193(r265,l1))  -- assign reg 36
      Popping a528(r802,l0: a196(r802,l1))  -- assign reg 16
      Popping a439(r713,l0: a107(r713,l1))  -- assign reg 9
      Popping a442(r708,l0: a110(r708,l1))  -- assign reg 9
      Popping a447(r712,l0: a115(r712,l1))  -- assign reg 2
      Popping a427(r732,l0: a95(r732,l1))  -- assign reg 3
      Popping a544(r799,l0: a212(r799,l1))  -- assign reg 0
      Popping a496(r297,l0: a164(r297,l1))  -- assign reg 43
      Popping a446(r710,l0: a114(r710,l1))  -- assign reg 1
      Popping a444(r715,l0: a112(r715,l1))  -- assign reg 1
      Popping a471(r686,l0: a139(r686,l1))  -- assign reg 0
      Popping a469(r692,l0: a137(r692,l1))  -- assign reg 0
      Popping a475(r215,l0: a143(r215,l1))  -- assign reg 33
      Popping a476(r812,l0: a144(r812,l1))  -- assign reg 0
      Popping a434(r217,l0: a102(r217,l1))  -- assign reg 33
      Popping a473(r814,l0: a141(r814,l1))  -- assign reg 16
      Popping a458(r216,l0: a126(r216,l1))  -- assign reg 35
      Popping a474(r813,l0: a142(r813,l1))  -- assign reg 35
      Popping a616(r675,l0: a562(r675,l1: a251(r675,l6)))  -- assign reg 3
      Popping a618(r674,l0: a564(r674,l1: a253(r674,l6)))  -- assign reg 3
      Popping a619(r673,l0: a565(r673,l1: a254(r673,l6)))  -- assign reg 3
      Popping a620(r669,l0: a566(r669,l1: a255(r669,l6)))  -- assign reg 3
      Popping a477(r678,l0: a145(r678,l1))  -- assign reg 31
      Popping a549(r795,l0: a217(r795,l1))  -- assign reg 16
      Popping a550(r794,l0: a218(r794,l1))  -- assign reg 0
      Popping a16(r483,l0)  -- assign reg 31
      Popping a17(r482,l0)  -- assign reg 30
      Popping a18(r479,l0)  -- assign reg 31
      Popping a19(r478,l0)  -- assign reg 30
      Popping a24(r409,l0)  -- assign reg 31
      Popping a25(r408,l0)  -- assign reg 30
      Popping a28(r403,l0)  -- assign reg 31
      Popping a32(r379,l0)  -- assign reg 3
      Popping a34(r790,l0)  -- assign reg 0
      Popping a35(r789,l0)  -- assign reg 0
      Popping a42(r367,l0)  -- assign reg 3
      Popping a43(r372,l0)  -- assign reg 3
      Popping a44(r787,l0)  -- assign reg 0
      Popping a45(r786,l0)  -- assign reg 0
      Popping a52(r784,l0)  -- assign reg 0
      Popping a53(r783,l0)  -- assign reg 0
      Popping a60(r781,l0)  -- assign reg 0
      Popping a61(r780,l0)  -- assign reg 0
      Popping a495(r769,l0: a163(r769,l1))  -- assign reg 44
      Popping a506(r592,l0: a174(r592,l1))  -- assign reg 31
      Popping a623(r661,l0: a569(r661,l1: a258(r661,l6)))  -- assign reg 31
      Popping a624(r659,l0: a570(r659,l1: a259(r659,l6)))  -- assign reg 31
      Popping a625(r658,l0: a571(r658,l1: a260(r658,l6)))  -- assign reg 31
      Popping a626(r657,l0: a572(r657,l1: a261(r657,l6)))  -- assign reg 31
      Popping a419(r741,l0: a87(r741,l1))  -- assign reg 31
      Popping a432(r218,l0: a100(r218,l1))  -- assign reg 36
      Popping a456(r221,l0: a124(r221,l1))  -- assign reg 37
      Popping a452(r230,l0: a120(r230,l1))  -- assign reg 31
      Popping a453(r817,l0: a121(r817,l1))  -- assign reg 0
      Popping a26(r405,l0)  -- assign reg 31
      Popping a509(r590,l0: a177(r590,l1))  -- assign reg 3
      Popping a510(r589,l0: a178(r589,l1))  -- assign reg 3
      Popping a511(r809,l0: a179(r809,l1))  -- assign reg 0
      Popping a513(r808,l0: a181(r808,l1))  -- assign reg 2
      Popping a514(r585,l0: a182(r585,l1))  -- assign reg 31
      Popping a515(r807,l0: a183(r807,l1))  -- assign reg 0
      Popping a518(r806,l0: a186(r806,l1))  -- assign reg 0
      Popping a522(r804,l0: a190(r804,l1))  -- assign reg 0
      Popping a527(r803,l0: a195(r803,l1))  -- assign reg 0
      Popping a529(r155,l0: a197(r155,l1))  -- assign reg 3
      Popping a435(r724,l0: a103(r724,l1))  -- assign reg 3
      Popping a440(r721,l0: a108(r721,l1))  -- assign reg 2
      Popping a459(r701,l0: a127(r701,l1))  -- assign reg 2
      Popping a463(r698,l0: a131(r698,l1))  -- assign reg 0
      Popping a493(r771,l0: a161(r771,l1))  -- assign reg 45
      Popping a494(r770,l0: a162(r770,l1))  -- assign reg 46
      Popping a504(r597,l0: a172(r597,l1))  -- assign reg 3
      Popping a627(r327,l0: a573(r327,l1: a262(r327,l6)))  -- assign reg 0
      Popping a628(r656,l0: a574(r656,l1: a263(r656,l6)))  -- assign reg 3
      Popping a681(r189,l0: a648(r189,l1: a594(r189,l3: a365(r189,l5))))  -- assign reg 30
      Popping a682(r633,l0: a649(r633,l1: a595(r633,l3: a366(r633,l5))))  -- assign reg 30
      Popping a683(r186,l0: a650(r186,l1: a596(r186,l3: a367(r186,l5))))  -- assign reg 29
      Popping a684(r632,l0: a651(r632,l1: a597(r632,l3: a368(r632,l5))))  -- assign reg 29
      Popping a497(r268,l0: a165(r268,l1))  -- assign reg 47
      Popping a499(r810,l0: a167(r810,l1))  -- assign reg 16
      Popping a523(r569,l0: a191(r569,l1))  -- assign reg 31
      Popping a520(r805,l0: a188(r805,l1))  -- assign reg 0
      Popping a526(r568,l0: a194(r568,l1))  -- assign reg 31
      Popping a429(r820,l0: a97(r820,l1))  -- assign reg 0
      Popping a431(r819,l0: a99(r819,l1))  -- assign reg 2
      Popping a433(r818,l0: a101(r818,l1))  -- assign reg 0
      Popping a455(r816,l0: a123(r816,l1))  -- assign reg 2
      Popping a457(r815,l0: a125(r815,l1))  -- assign reg 0
      Popping a617(r676,l0: a563(r676,l1: a252(r676,l6)))  -- assign reg 2
      Popping a622(r662,l0: a568(r662,l1: a257(r662,l6)))  -- assign reg 30
      Popping a675(r811,l0: a642(r811,l1: a588(r811,l3: a359(r811,l5))))  -- assign reg 0
      Popping a524(r571,l0: a192(r571,l1))  -- assign reg 31
      Popping a621(r663,l0: a567(r663,l1: a256(r663,l6)))  -- assign reg 3
      Popping a487(r653,l0: a155(r653,l1))  -- assign reg 32
      Popping a420(r737,l0: a88(r737,l1))  -- assign reg 3
      Popping a483(r269,l0: a151(r269,l1))  -- assign reg 38
      Popping a485(r270,l0: a153(r270,l1))  -- assign reg 40
      Popping a500(r603,l0: a168(r603,l1))  -- assign reg 3
      Popping a501(r602,l0: a169(r602,l1))  -- assign reg 40
      Popping a502(r600,l0: a170(r600,l1))  -- assign reg 31
      Popping a505(r595,l0: a173(r595,l1))  -- assign reg 3
      Popping a422(r736,l0: a90(r736,l1))  -- assign reg 3
      Popping a484(r652,l0: a152(r652,l1))  -- assign reg 30
      Popping a488(r651,l0: a156(r651,l1))  -- assign reg 30
      Popping a489(r650,l0: a157(r650,l1))  -- assign reg 30
      Popping a482(r761,l0: a150(r761,l1))  -- assign reg 8
      Popping a486(r654,l0: a154(r654,l1))  -- assign reg 29

  Loop 1 (parent 0, header bb17, depth 1)
    bbs: 99 97 96 92 91(->93:l0) 90 89 87(->88:l0) 86 85 84 83 82 81 80 79 73(->74:l6) 72 71 70 69 66 46(->67:l3) 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 23(->24:l2) 22 21 20 19 18 17
    all: 67r245 68r282 69r300 70r301 71r306 72r739 73r740 74r745 75r746 76r747 77r774 78r775 79r776 80r777 81r247 82r249 83r263 84r266 85r267 86r319 87r741 88r737 89r738 90r736 91r158 92r302 93r733 94r242 95r732 96r731 97r820 98r726 99r819 100r218 101r818 102r217 103r724 104r719 105r722 106r744 107r713 108r721 109r714 110r708 111r718 112r715 113r222 114r710 115r712 116r709 117r707 118r254 119r219 120r230 121r817 122r703 123r816 124r221 125r815 126r216 127r701 128r696 129r699 130r689 131r698 132r684 133r688 134r685 135r691 136r695 137r692 138r690 139r686 140r253 141r814 142r813 143r215 144r812 145r678 146r677 147r271 148r286 149r762 150r761 151r269 152r652 153r270 154r654 155r653 156r651 157r650 158r293 159r742 160r310 161r771 162r770 163r769 164r297 165r268 166r304 167r810 168r603 169r602 170r600 171r246 172r597 173r595 174r592 175r593 176r168 177r590 178r589 179r809 180r583 181r808 182r585 183r807 184r581 185r580 186r806 187r248 188r805 189r138 190r804 191r569 192r571 193r265 194r568 195r803 196r802 197r155 198r560 199r264 200r154 201r148 202r143 203r147 204r801 205r142 206r800 207r139 208r550 209r549 210r548 211r547 212r799 213r798 214r797 215r796 216r541 217r795 218r794 219r536 220r534 221r533 222r535 223r261 224r532 225r793 226r792 227r530 228r528 229r529 562r675 563r676 564r674 565r673 566r669 567r663 568r662 569r661 570r659 571r658 572r657 573r327 574r656 575r280 576r743 577r303 578r764 579r193 580r606 581r823 582r281 607r563 608r558 609r561 610r556 611r149 612r146 613r554 614r144 615r564 637r273 638r274 639r275 640r310 641r191 642r811 643r642 644r638 645r635 646r640 647r317 648r189 649r633 650r186 651r632 652r627 653r626 654r625 655r622 656r181 657r615 658r612 659r609 660r608
    modified regnos
    border: 67r245 68r282 69r300 70r301 71r306 72r739 73r740 74r745 75r746 76r747 77r774 78r775 79r776 80r777
    Pressure: GENERAL_REGS=25 VFP_LO_REGS=19
 Removing pref25:hr0@50
 Removing pref30:hr0@50
 Removing pref36:hr16@102
 Removing pref35:hr16@153
 Removing pref72:hr16@18
 Removing pref70:hr17@18
 Removing pref45:hr0@120
 Removing pref59:hr0@300
 Removing pref47:hr0@270
 Removing pref60:hr0@300
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-4 6-12 14 16-33 35-47)@10494
          2:( 16-33 35-47)@11484
            3:( 16-31 33 36-47)@31716
              4:( 16-31 36-47)@34800
          5:( 0-4 6-12 14)@450766
            6:( 0-4 6-12)@27280
              7:( 2-4 6-12)@25800
                8:( 3-4 6-11)@33440
                  9:( 4 6-11)@169240
      Spill a67(r245,l1)
      Allocno a68r282 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a71r306 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a86r319 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a88r737 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a90r736 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a91r158 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a93r733 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a94r242 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a95r732 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a97r820 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a98r726 of ALL_REGS(46) has 7 avail. regs  4 6-11, node:  4 6-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a99r819 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a101r818 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a103r724 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a104r719 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a105r722 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a106r744 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a107r713 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a108r721 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a109r714 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a110r708 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a111r718 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a112r715 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a113r222 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a114r710 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a115r712 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a116r709 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a117r707 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a118r254 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a119r219 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a121r817 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a122r703 of ALL_REGS(46) has 7 avail. regs  4 6-11, node:  4 6-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a123r816 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a125r815 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a127r701 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a128r696 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a129r699 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a130r689 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a131r698 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a132r684 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a133r688 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a134r685 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a135r691 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a136r695 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a137r692 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a138r690 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a139r686 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a140r253 of GENERAL_REGS(14) has 11 avail. regs  0-4 6-11, ^node:  0-4 6-12 (confl regs =  12-106)
      Allocno a141r814 of ALL_REGS(46) has 29 avail. regs  16-31 33 36-47, node:  16-31 33 36-47 (confl regs =  13 15 48-106)
      Allocno a142r813 of ALL_REGS(46) has 29 avail. regs  17-31 33 35-47, ^node:  16-33 35-47 (confl regs =  13 15-16 48-106)
      Allocno a143r215 of ALL_REGS(46) has 29 avail. regs  17-31 33 35-47, ^node:  16-33 35-47 (confl regs =  12-16 48-106)
      Allocno a144r812 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a146r677 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a147r271 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a148r286 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a149r762 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a150r761 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a151r269 of ALL_REGS(46) has 11 avail. regs  35-36 38 40-47, ^node:  16-33 35-47 (confl regs =  0-3 12-15 17-18 48-106)
      Allocno a153r270 of ALL_REGS(46) has 10 avail. regs  35-36 40-47, ^node:  16-33 35-47 (confl regs =  0-3 12-16 18 48-106)
      Allocno a157r650 of ALL_REGS(46) has 36 avail. regs  0-4 6-12 14 16-28 30 35-36 41-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a158r293 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a160r310 of ALL_REGS(46) has 32 avail. regs  0-4 6-12 14 16-30 32 35 41-42, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a166r304 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a167r810 of ALL_REGS(46) has 25 avail. regs  16-32 35 41-47, ^node:  16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a168r603 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a171r246 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a172r597 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a173r595 of LO_REGS(8) has 7 avail. regs  0-4 6-7, ^node:  0-4 6-12 (confl regs =  8-106)
      Allocno a177r590 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a178r589 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a179r809 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a180r583 of ALL_REGS(46) has 7 avail. regs  4 6-11, node:  4 6-11 obj 0 (confl regs =  0-3 12-15 48-106),  obj 1 (confl regs =  0-3 12-15 48-106)
      Allocno a181r808 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a183r807 of ALL_REGS(46) has 12 avail. regs  0-4 6-12, node:  0-4 6-12 obj 0 (confl regs =  13 15 48-106),  obj 1 (confl regs =  13 15 48-106)
      Allocno a185r580 of ALL_REGS(46) has 38 avail. regs  1-4 6-12 14 16-31 35 38 40-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  0 13 15 48-106)
      Allocno a186r806 of ALL_REGS(46) has 39 avail. regs  0-4 6-12 14 16-31 35 38 40-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a187r248 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a188r805 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a189r138 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 obj 0 (confl regs =  0-3 12-106),  obj 1 (confl regs =  0-3 12-106)
      Allocno a190r804 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a195r803 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a196r802 of ALL_REGS(46) has 28 avail. regs  16-31 35-36 38-47, ^node:  16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a197r155 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a198r560 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a199r264 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a204r801 of ALL_REGS(46) has 27 avail. regs  16-31 36 38-47, ^node:  16-31 36-47 (confl regs =  13 15 48-106)
      Allocno a206r800 of ALL_REGS(46) has 28 avail. regs  16-31 35-36 38-47, ^node:  16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a207r139 of GENERAL_REGS(14) has 11 avail. regs  0-4 6-11, ^node:  0-4 6-12 (confl regs =  12-106)
      Allocno a211r547 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a212r799 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a213r798 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a214r797 of ALL_REGS(46) has 10 avail. regs  2-4 6-12, node:  2-4 6-12 obj 0 (confl regs =  0-1 13 15 48-106),  obj 1 (confl regs =  0-1 13 15 48-106)
      Allocno a217r795 of ALL_REGS(46) has 31 avail. regs  16-33 35-47, node:  16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a218r794 of ALL_REGS(46) has 44 avail. regs  0-4 6-12 14 16-33 35-47, node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a225r793 of ALL_REGS(46) has 28 avail. regs  16-31 36-47, node:  16-31 36-47 (confl regs =  13 15 48-106)
      Allocno a226r792 of ALL_REGS(46) has 29 avail. regs  16-31 33 36-47, node:  16-31 33 36-47 (confl regs =  13 15 48-106)
      Allocno a562r675 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a563r676 of LO_REGS(8) has 7 avail. regs  0-4 6-7, ^node:  0-4 6-12 (confl regs =  8-106)
      Allocno a564r674 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a565r673 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a566r669 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a567r663 of GENERAL_REGS(14) has 12 avail. regs  1-4 6-12 14, ^node:  0-4 6-12 14 (confl regs =  0 13 15-106)
      Allocno a572r657 of ALL_REGS(46) has 38 avail. regs  1-4 6-12 14 16-29 31 35-36 38 40-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  0 13 15 48-106)
      Allocno a573r327 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a574r656 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a575r280 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a576r743 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a577r303 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a607r563 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a608r558 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a609r561 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a610r556 of ALL_REGS(46) has 36 avail. regs  0-4 6-12 14 17-26 30-31 36 38-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a612r146 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a613r554 of ALL_REGS(46) has 36 avail. regs  0-4 6-12 14 17-26 29 31 36 38-47, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a615r564 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a637r273 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a638r274 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a639r275 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a640r310 of ALL_REGS(46) has 30 avail. regs  0-4 6-12 14 16-32, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a642r811 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a653r626 of ALL_REGS(46) has 29 avail. regs  0-4 6-12 14 16-29 31-32, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Allocno a657r615 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a658r612 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a659r609 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a660r608 of ALL_REGS(46) has 29 avail. regs  0-4 6-12 14 16-29 31-32, ^node:  0-4 6-12 14 16-33 35-47 (confl regs =  13 15 48-106)
      Forming thread by copy 235:a658r612-a659r609 (freq=84):
        Result (freq=2046): a658r612(1023) a659r609(1023)
      Forming thread by copy 205:a613r554-a614r144 (freq=67):
        Result (freq=2148): a613r554(1074) a614r144(1074)
      Forming thread by copy 206:a612r146-a613r554 (freq=67):
        Result (freq=3222): a612r146(1074) a613r554(1074) a614r144(1074)
      Forming thread by copy 207:a609r561-a612r146 (freq=67):
        Result (freq=4296): a609r561(1074) a612r146(1074) a613r554(1074) a614r144(1074)
      Forming thread by copy 208:a610r556-a611r149 (freq=67):
        Result (freq=2148): a610r556(1074) a611r149(1074)
      Forming thread by copy 209:a608r558-a610r556 (freq=67):
        Result (freq=3222): a608r558(1074) a610r556(1074) a611r149(1074)
      Forming thread by copy 35:a143r215-a144r812 (freq=51):
        Result (freq=255): a143r215(153) a144r812(102)
      Forming thread by copy 234:a659r609-a660r608 (freq=42):
        Result (freq=2728): a658r612(1023) a660r608(682) a659r609(1023)
      Forming thread by copy 16:a93r733-a94r242 (freq=21):
        Result (freq=1100): a93r733(344) a94r242(756)
      Forming thread by copy 232:a637r273-a656r181 (freq=18):
        Result (freq=1352): a637r273(960) a656r181(392)
      Forming thread by copy 233:a637r273-a647r317 (freq=16):
        Result (freq=1681): a637r273(960) a647r317(329) a656r181(392)
      Forming thread by copy 230:a653r626-a654r625 (freq=11):
        Result (freq=368): a653r626(184) a654r625(184)
      Forming thread by copy 18:a117r707-a119r219 (freq=6):
        Result (freq=357): a117r707(153) a119r219(204)
      Forming thread by copy 20:a116r709-a117r707 (freq=6):
        Result (freq=459): a116r709(102) a117r707(153) a119r219(204)
      Forming thread by copy 21:a110r708-a115r712 (freq=6):
        Result (freq=204): a110r708(102) a115r712(102)
      Forming thread by copy 23:a112r715-a114r710 (freq=6):
        Result (freq=255): a112r715(102) a114r710(153)
      Forming thread by copy 24:a111r718-a113r222 (freq=6):
        Result (freq=331): a111r718(102) a113r222(229)
      Forming thread by copy 25:a109r714-a111r718 (freq=6):
        Result (freq=433): a109r714(102) a111r718(102) a113r222(229)
      Forming thread by copy 27:a107r713-a110r708 (freq=6):
        Result (freq=306): a107r713(102) a110r708(102) a115r712(102)
      Forming thread by copy 28:a104r719-a109r714 (freq=6):
        Result (freq=535): a104r719(102) a109r714(102) a111r718(102) a113r222(229)
      Forming thread by copy 29:a105r722-a106r744 (freq=6):
        Result (freq=849): a105r722(102) a106r744(747)
      Forming thread by copy 38:a138r690-a140r253 (freq=6):
        Result (freq=255): a138r690(153) a140r253(102)
      Forming thread by copy 39:a137r692-a139r686 (freq=6):
        Result (freq=255): a137r692(102) a139r686(153)
      Forming thread by copy 40:a136r695-a138r690 (freq=6):
        Result (freq=357): a136r695(102) a138r690(153) a140r253(102)
      Forming thread by copy 41:a135r691-a136r695 (freq=6):
        Result (freq=459): a135r691(102) a136r695(102) a138r690(153) a140r253(102)
      Forming thread by copy 43:a128r696-a135r691 (freq=6):
        Result (freq=561): a128r696(102) a135r691(102) a136r695(102) a138r690(153) a140r253(102)
      Forming thread by copy 44:a132r684-a133r688 (freq=6):
        Result (freq=204): a132r684(102) a133r688(102)
      Forming thread by copy 46:a130r689-a132r684 (freq=6):
        Result (freq=306): a130r689(102) a132r684(102) a133r688(102)
      Forming thread by copy 47:a129r699-a130r689 (freq=6):
        Result (freq=408): a129r699(102) a130r689(102) a132r684(102) a133r688(102)
      Forming thread by copy 178:a565r673-a566r669 (freq=2):
        Result (freq=72): a565r673(36) a566r669(36)
      Forming thread by copy 179:a564r674-a565r673 (freq=2):
        Result (freq=108): a564r674(36) a565r673(36) a566r669(36)
      Forming thread by copy 180:a562r675-a564r674 (freq=2):
        Result (freq=216): a562r675(108) a564r674(36) a565r673(36) a566r669(36)
      Forming thread by copy 218:a638r274-a651r632 (freq=2):
        Result (freq=511): a638r274(475) a651r632(36)
      Forming thread by copy 219:a639r275-a649r633 (freq=2):
        Result (freq=511): a639r275(475) a649r633(36)
      Pushing a157(r650,l1)(cost 0)
      Pushing a150(r761,l1)(cost 0)
      Pushing a90(r736,l1)(cost 0)
      Pushing a160(r310,l1)(cost 0)
      Pushing a173(r595,l1)(cost 0)
      Pushing a168(r603,l1)(cost 0)
      Pushing a167(r810,l1)(cost 0)
      Pushing a153(r270,l1)(cost 0)
      Pushing a151(r269,l1)(cost 0)
      Pushing a88(r737,l1)(cost 0)
      Pushing a567(r663,l1: a256(r663,l6))(cost 0)
      Pushing a642(r811,l1: a588(r811,l3: a359(r811,l5)))(cost 0)
      Pushing a640(r310,l1: a586(r310,l3: a357(r310,l5)))(cost 0)
      Pushing a572(r657,l1: a261(r657,l6))(cost 0)
      Pushing a563(r676,l1: a252(r676,l6))(cost 0)
      Pushing a125(r815,l1)(cost 0)
      Pushing a123(r816,l1)(cost 0)
      Pushing a121(r817,l1)(cost 0)
      Pushing a101(r818,l1)(cost 0)
      Pushing a99(r819,l1)(cost 0)
      Forming thread by copy 17:a98r726-a101r818 (freq=25):
        Result (freq=100): a98r726(50) a101r818(50)
        Making a98(r726,l1) colorable
      Pushing a97(r820,l1)(cost 0)
      Pushing a188(r805,l1)(cost 0)
      Pushing a574(r656,l1: a263(r656,l6))(cost 0)
      Pushing a573(r327,l1: a262(r327,l6))(cost 0)
      Pushing a172(r597,l1)(cost 0)
      Pushing a98(r726,l1)(cost 1450)
      Pushing a142(r813,l1)(cost 0)
      Pushing a141(r814,l1)(cost 0)
      Pushing a134(r685,l1)(cost 0)
      Pushing a131(r698,l1)(cost 0)
      Pushing a127(r701,l1)(cost 0)
      Pushing a108(r721,l1)(cost 0)
      Pushing a103(r724,l1)(cost 0)
      Pushing a206(r800,l1)(cost 0)
      Pushing a204(r801,l1)(cost 0)
      Pushing a197(r155,l1)(cost 0)
      Pushing a196(r802,l1)(cost 0)
      Pushing a195(r803,l1)(cost 0)
      Pushing a190(r804,l1)(cost 0)
      Pushing a186(r806,l1)(cost 0)
      Pushing a185(r580,l1)(cost 0)
      Pushing a183(r807,l1)(cost 0)
      Pushing a181(r808,l1)(cost 0)
      Pushing a179(r809,l1)(cost 0)
      Pushing a178(r589,l1)(cost 0)
      Pushing a177(r590,l1)(cost 0)
      Pushing a218(r794,l1)(cost 0)
      Pushing a217(r795,l1)(cost 0)
      Pushing a566(r669,l1: a255(r669,l6))(cost 0)
      Pushing a565(r673,l1: a254(r673,l6))(cost 0)
        Making a147(r271,l1) colorable
        Making a148(r286,l1) colorable
      Forming thread by copy 53:a149r762-a150r761 (freq=1):
        Result (freq=21): a149r762(19) a150r761(2)
        Making a149(r762,l1) colorable
      Pushing a149(r762,l1)(cost 190)
      Pushing a147(r271,l1)(cost 1450)
      Pushing a148(r286,l1)(cost 1900)
      Pushing a564(r674,l1: a253(r674,l6))(cost 0)
      Pushing a562(r675,l1: a251(r675,l6))(cost 0)
      Pushing a144(r812,l1)(cost 0)
      Pushing a143(r215,l1)(cost 0)
      Pushing a137(r692,l1)(cost 0)
      Pushing a139(r686,l1)(cost 0)
      Pushing a112(r715,l1)(cost 0)
      Pushing a114(r710,l1)(cost 0)
      Pushing a212(r799,l1)(cost 0)
      Pushing a95(r732,l1)(cost 0)
      Pushing a115(r712,l1)(cost 0)
      Pushing a110(r708,l1)(cost 0)
      Pushing a107(r713,l1)(cost 0)
      Pushing a653(r626,l1: a599(r626,l3: a370(r626,l5)))(cost 0)
      Pushing a133(r688,l1)(cost 0)
      Pushing a132(r684,l1)(cost 0)
      Pushing a130(r689,l1)(cost 0)
      Pushing a129(r699,l1)(cost 0)
      Forming thread by copy 34:a113r222-a120r230 (freq=3):
        Result (freq=610): a104r719(102) a120r230(75) a109r714(102) a111r718(102) a113r222(229)
        Making a113(r222,l1) colorable
      Pushing a211(r547,l1)(cost 0)
      Pushing a116(r709,l1)(cost 0)
      Pushing a117(r707,l1)(cost 0)
      Pushing a639(r275,l1: a585(r275,l3: a356(r275,l5)))(cost 0)
      Pushing a638(r274,l1: a584(r274,l3: a355(r274,l5)))(cost 0)
        Making a86(r319,l1) colorable
        Making a166(r304,l1) colorable
      Pushing a86(r319,l1)(cost 3400)
      Pushing a166(r304,l1)(cost 3430)
      Pushing a111(r718,l1)(cost 0)
      Pushing a109(r714,l1)(cost 0)
      Pushing a104(r719,l1)(cost 0)
      Pushing a136(r695,l1)(cost 0)
      Pushing a135(r691,l1)(cost 0)
      Pushing a128(r696,l1)(cost 0)
      Pushing a140(r253,l1)(cost 0)
      Pushing a138(r690,l1)(cost 0)
      Pushing a226(r792,l1)(cost 0)
      Pushing a225(r793,l1)(cost 0)
      Pushing a214(r797,l1)(cost 0)
      Pushing a213(r798,l1)(cost 0)
      Pushing a146(r677,l1)(cost 0)
      Pushing a113(r222,l1)(cost 1150)
        Making a118(r254,l1) colorable
        Making a119(r219,l1) colorable
      Pushing a118(r254,l1)(cost 1020)
      Pushing a119(r219,l1)(cost 1275)
      Pushing a105(r722,l1)(cost 0)
      Pushing a657(r615,l1: a603(r615,l3: a374(r615,l5)))(cost 0)
      Pushing a615(r564,l1: a412(r564,l2))(cost 0)
      Pushing a607(r563,l1: a404(r563,l2))(cost 0)
      Pushing a93(r733,l1)(cost 0)
      Pushing a94(r242,l1)(cost 0)
      Pushing a637(r273,l1: a583(r273,l3: a354(r273,l5)))(cost 0)
      Pushing a660(r608,l1: a606(r608,l3: a377(r608,l5)))(cost 0)
        Making a158(r293,l1) colorable
        Making a575(r280,l1: a313(r280,l3)) colorable
        Making a576(r743,l1: a314(r743,l3)) colorable
        Making a577(r303,l1: a315(r303,l3)) colorable
      Pushing a158(r293,l1)(cost 675)
      Pushing a577(r303,l1: a315(r303,l3))(cost 3225)
      Pushing a576(r743,l1: a314(r743,l3))(cost 7190)
      Pushing a575(r280,l1: a313(r280,l3))(cost 5630)
      Pushing a659(r609,l1: a605(r609,l3: a376(r609,l5)))(cost 0)
      Pushing a658(r612,l1: a604(r612,l3: a375(r612,l5)))(cost 0)
      Pushing a610(r556,l1: a407(r556,l2))(cost 0)
        Making a198(r560,l1) colorable
      Forming thread by copy 204:a199r264-a615r564 (freq=134):
        Result (freq=2742): a199r264(1668) a615r564(1074)
        Making a199(r264,l1) colorable
      Pushing a198(r560,l1)(cost 5940)
      Pushing a199(r264,l1)(cost 8625)
        Making a207(r139,l1) colorable
      Pushing a207(r139,l1)(cost 11865)
      Pushing a608(r558,l1: a405(r558,l2))(cost 0)
      Pushing a613(r554,l1: a410(r554,l2))(cost 0)
      Pushing a612(r146,l1: a409(r146,l2))(cost 0)
      Pushing a609(r561,l1: a406(r561,l2))(cost 0)
      Pushing a91(r158,l1)(potential spill: pri=4, cost=575)
      Forming thread by copy 69:a187r248-a215r796 (freq=300):
        Result (freq=1650): a187r248(1050) a215r796(600)
      Forming thread by copy 63:a187r248-a188r805 (freq=30):
        Result (freq=1710): a187r248(1050) a188r805(60) a215r796(600)
        Making a187(r248,l1) colorable
      Pushing a187(r248,l1)(cost 12000)
        Making a106(r744,l1) colorable
        Making a171(r246,l1) colorable
      Pushing a171(r246,l1)(cost 3030)
      Forming thread by copy 61:a180r583-a183r807 (freq=60):
        Result (freq=240): a180r583(120) a183r807(120)
        Making a180(r583,l1) colorable
      Pushing a180(r583,l1)(cost 3480)
        Making a68(r282,l1) colorable
        Making a71(r306,l1) colorable
      Pushing a106(r744,l1)(cost 7470)
      Forming thread by copy 70:a189r138-a214r797 (freq=300):
        Result (freq=1140): a189r138(540) a214r797(600)
        Making a189(r138,l1) colorable
      Forming thread by copy 32:a122r703-a125r815 (freq=25):
        Result (freq=100): a122r703(50) a125r815(50)
        Making a122(r703,l1) colorable
      Pushing a122(r703,l1)(cost 1450)
      Pushing a68(r282,l1)(cost 10450)
      Pushing a189(r138,l1)(cost 7860)
      Pushing a71(r306,l1)(cost 34380)
      Popping a71(r306,l1)  -- assign reg 4
      Popping a189(r138,l1)  -- assign reg 6
      Popping a68(r282,l1)  -- assign reg 11
      Popping a122(r703,l1)  -- assign reg 6
      Popping a106(r744,l1)  -- assign reg 8
      Popping a180(r583,l1)  -- assign reg 6
      Popping a171(r246,l1)  -- assign reg 8
      Popping a187(r248,l1)  -- assign reg 9
      Popping a91(r158,l1)  -- assign reg 10
      Popping a609(r561,l1: a406(r561,l2))  -- assign reg 3
      Popping a612(r146,l1: a409(r146,l2))  -- assign reg 3
      Popping a613(r554,l1: a410(r554,l2))  -- assign reg 3
      Popping a608(r558,l1: a405(r558,l2))  -- assign reg 2
      Popping a207(r139,l1)  -- assign reg 10
      Popping a199(r264,l1)  -- assign reg 1
      Popping a198(r560,l1)  -- assign reg 0
      Popping a610(r556,l1: a407(r556,l2))  -- assign reg 2
      Popping a658(r612,l1: a604(r612,l3: a375(r612,l5)))  -- assign reg 3
      Popping a659(r609,l1: a605(r609,l3: a376(r609,l5)))  -- assign reg 3
      Popping a575(r280,l1: a313(r280,l3))  -- assign reg 6
      Popping a576(r743,l1: a314(r743,l3))  -- assign reg 7
      Popping a577(r303,l1: a315(r303,l3))  -- assign reg 8
      Popping a158(r293,l1)  -- assign reg 9
      Popping a660(r608,l1: a606(r608,l3: a377(r608,l5)))  -- assign reg 3
      Popping a637(r273,l1: a583(r273,l3: a354(r273,l5)))  -- assign reg 3
      Popping a94(r242,l1)  -- assign reg 3
      Popping a93(r733,l1)  -- assign reg 3
      Popping a607(r563,l1: a404(r563,l2))  -- assign reg 3
      Popping a615(r564,l1: a412(r564,l2))  -- assign reg 1
      Popping a657(r615,l1: a603(r615,l3: a374(r615,l5)))  -- assign reg 2
      Popping a105(r722,l1)  -- assign reg 8
      Popping a119(r219,l1)  -- assign reg 9
      Popping a118(r254,l1)  -- assign reg 10
      Popping a113(r222,l1)  -- assign reg 3
      Popping a146(r677,l1)  -- assign reg 3
      Popping a213(r798,l1)  -- assign reg 0
      Popping a214(r797,l1)  -- assign reg 6
      Popping a225(r793,l1)  -- assign reg 16
      Popping a226(r792,l1)  -- assign reg 16
      Popping a138(r690,l1)  -- assign reg 2
      Popping a140(r253,l1)  -- assign reg 6
      Popping a128(r696,l1)  -- assign reg 2
      Popping a135(r691,l1)  -- assign reg 2
      Popping a136(r695,l1)  -- assign reg 2
      Popping a104(r719,l1)  -- assign reg 3
      Popping a109(r714,l1)  -- assign reg 3
      Popping a111(r718,l1)  -- assign reg 3
      Popping a166(r304,l1)  -- assign reg 1
      Popping a86(r319,l1)  -- assign reg 0
      Popping a638(r274,l1: a584(r274,l3: a355(r274,l5)))  -- assign reg 12
      Popping a639(r275,l1: a585(r275,l3: a356(r275,l5)))  -- assign reg 2
      Popping a117(r707,l1)  -- assign reg 9
      Popping a116(r709,l1)  -- assign reg 9
      Popping a211(r547,l1)  -- assign reg 3
      Popping a129(r699,l1)  -- assign reg 1
      Popping a130(r689,l1)  -- assign reg 1
      Popping a132(r684,l1)  -- assign reg 1
      Popping a133(r688,l1)  -- assign reg 1
      Popping a653(r626,l1: a599(r626,l3: a370(r626,l5)))  -- assign reg 31
      Popping a107(r713,l1)  -- assign reg 9
      Popping a110(r708,l1)  -- assign reg 9
      Popping a115(r712,l1)  -- assign reg 2
      Popping a95(r732,l1)  -- assign reg 3
      Popping a212(r799,l1)  -- assign reg 0
      Popping a114(r710,l1)  -- assign reg 1
      Popping a112(r715,l1)  -- assign reg 1
      Popping a139(r686,l1)  -- assign reg 0
      Popping a137(r692,l1)  -- assign reg 0
      Popping a143(r215,l1)  -- assign reg 33
      Popping a144(r812,l1)  -- assign reg 0
      Popping a562(r675,l1: a251(r675,l6))  -- assign reg 3
      Popping a564(r674,l1: a253(r674,l6))  -- assign reg 3
      Popping a148(r286,l1)  -- assign reg 6
      Popping a147(r271,l1)  -- assign reg 7
      Popping a149(r762,l1)  -- assign reg 8
      Popping a565(r673,l1: a254(r673,l6))  -- assign reg 3
      Popping a566(r669,l1: a255(r669,l6))  -- assign reg 3
      Popping a217(r795,l1)  -- assign reg 16
      Popping a218(r794,l1)  -- assign reg 0
      Popping a177(r590,l1)  -- assign reg 3
      Popping a178(r589,l1)  -- assign reg 3
      Popping a179(r809,l1)  -- assign reg 0
      Popping a181(r808,l1)  -- assign reg 2
      Popping a183(r807,l1)  -- assign reg 0
      Popping a185(r580,l1)  -- assign reg 35
      Popping a186(r806,l1)  -- assign reg 0
      Popping a190(r804,l1)  -- assign reg 0
      Popping a195(r803,l1)  -- assign reg 0
      Popping a196(r802,l1)  -- assign reg 16
      Popping a197(r155,l1)  -- assign reg 3
      Popping a204(r801,l1)  -- assign reg 16
      Popping a206(r800,l1)  -- assign reg 16
      Popping a103(r724,l1)  -- assign reg 3
      Popping a108(r721,l1)  -- assign reg 2
      Popping a127(r701,l1)  -- assign reg 2
      Popping a131(r698,l1)  -- assign reg 0
      Popping a134(r685,l1)  -- assign reg 6
      Popping a141(r814,l1)  -- assign reg 16
      Popping a142(r813,l1)  -- assign reg 35
      Popping a98(r726,l1)  -- assign reg 6
      Popping a172(r597,l1)  -- assign reg 3
      Popping a573(r327,l1: a262(r327,l6))  -- assign reg 0
      Popping a574(r656,l1: a263(r656,l6))  -- assign reg 3
      Popping a188(r805,l1)  -- assign reg 0
      Popping a97(r820,l1)  -- assign reg 0
      Popping a99(r819,l1)  -- assign reg 2
      Popping a101(r818,l1)  -- assign reg 0
      Popping a121(r817,l1)  -- assign reg 0
      Popping a123(r816,l1)  -- assign reg 2
      Popping a125(r815,l1)  -- assign reg 0
      Popping a563(r676,l1: a252(r676,l6))  -- assign reg 2
      Popping a572(r657,l1: a261(r657,l6))  -- assign reg 31
      Popping a640(r310,l1: a586(r310,l3: a357(r310,l5)))  -- assign reg 30
      Popping a642(r811,l1: a588(r811,l3: a359(r811,l5)))  -- assign reg 0
      Popping a567(r663,l1: a256(r663,l6))  -- assign reg 3
      Popping a88(r737,l1)  -- assign reg 3
      Popping a151(r269,l1)  -- assign reg 38
      Popping a153(r270,l1)  -- assign reg 40
      Popping a167(r810,l1)  -- assign reg 16
      Popping a168(r603,l1)  -- assign reg 3
      Popping a173(r595,l1)  -- assign reg 3
      Popping a160(r310,l1)  -- assign reg 30
      Popping a90(r736,l1)  -- assign reg 3
      Popping a150(r761,l1)  -- assign reg 8
      Popping a157(r650,l1)  -- assign reg 30

  Loop 6 (parent 1, header bb74, depth 2)
    bbs: 78(->79:l1) 77 76 75 74
    all: 230r245 231r247 232r249 233r263 234r269 235r270 236r271 237r282 238r286 239r306 240r653 241r739 242r740 243r745 244r746 245r747 246r762 247r774 248r775 249r776 250r777 251r675 252r676 253r674 254r673 255r669 256r663 257r662 258r661 259r659 260r658 261r657 262r327 263r656
    modified regnos: 271 286 327 656 657 658 659 661 662 663 669 673 674 675 676
    border: 230r245 231r247 232r249 233r263 234r269 235r270 236r271 237r282 238r286 239r306 240r653 241r739 242r740 243r745 244r746 245r747 246r762 247r774 248r775 249r776 250r777
    Pressure: GENERAL_REGS=25 VFP_LO_REGS=8
 Removing pref71:hr16@18
 Removing pref69:hr17@18
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 35-36 38 40-47)@1296
        2:( 0-4 6-12 14)@9216
          3:( 1-4 6-12 14)@630
            4:( 4 6-11)@7740
      Spill a230(r245,l6)
      Allocno a234r269 of ALL_REGS(46) has 11 avail. regs  35-36 38 40-47, node:  35-36 38 40-47 (confl regs =  0-3 12-15 17-18 48-106)
      Allocno a235r270 of ALL_REGS(46) has 11 avail. regs  35-36 38 40-47, node:  35-36 38 40-47 (confl regs =  0-3 12-16 18 48-106)
      Allocno a236r271 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a237r282 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a238r286 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a239r306 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a246r762 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-3 12-106)
      Allocno a251r675 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a252r676 of LO_REGS(8) has 7 avail. regs  0-4 6-7, ^node:  0-4 6-12 14 (confl regs =  8-106)
      Allocno a253r674 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a254r673 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a255r669 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a256r663 of GENERAL_REGS(14) has 12 avail. regs  1-4 6-12 14, node:  1-4 6-12 14 (confl regs =  0 13 15-106)
      Allocno a261r657 of ALL_REGS(46) has 38 avail. regs  1-4 6-12 14 16-29 31 35-36 38 40-47, ^node:  0-12 14 16-47 (confl regs =  0 13 15 48-106)
      Allocno a262r327 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a263r656 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Forming thread by copy 81:a254r673-a255r669 (freq=2):
        Result (freq=72): a254r673(36) a255r669(36)
      Forming thread by copy 82:a253r674-a254r673 (freq=2):
        Result (freq=108): a253r674(36) a254r673(36) a255r669(36)
      Forming thread by copy 83:a251r675-a253r674 (freq=2):
        Result (freq=216): a251r675(108) a253r674(36) a254r673(36) a255r669(36)
      Pushing a235(r270,l6)(cost 0)
      Pushing a234(r269,l6)(cost 0)
      Pushing a256(r663,l6)(cost 0)
      Pushing a261(r657,l6)(cost 0)
      Pushing a252(r676,l6)(cost 0)
      Pushing a263(r656,l6)(cost 0)
      Pushing a262(r327,l6)(cost 0)
      Pushing a255(r669,l6)(cost 0)
      Pushing a254(r673,l6)(cost 0)
        Making a236(r271,l6) colorable
        Making a237(r282,l6) colorable
        Making a238(r286,l6) colorable
        Making a239(r306,l6) colorable
        Making a246(r762,l6) colorable
      Pushing a237(r282,l6)(cost 40)
      Pushing a246(r762,l6)(cost 220)
      Pushing a239(r306,l6)(cost 400)
      Pushing a236(r271,l6)(cost 1480)
      Pushing a238(r286,l6)(cost 1930)
      Pushing a253(r674,l6)(cost 0)
      Pushing a251(r675,l6)(cost 0)
      Popping a251(r675,l6)  -- assign reg 3
      Popping a253(r674,l6)  -- assign reg 3
      Popping a238(r286,l6)  -- assign reg 6
      Popping a236(r271,l6)  -- assign reg 7
      Popping a239(r306,l6)  -- assign reg 4
      Popping a246(r762,l6)  -- assign reg 8
      Popping a237(r282,l6)  -- assign reg 11
      Popping a254(r673,l6)  -- assign reg 3
      Popping a255(r669,l6)  -- assign reg 3
      Popping a262(r327,l6)  -- assign reg 0
      Popping a263(r656,l6)  -- assign reg 3
      Popping a252(r676,l6)  -- assign reg 2
      Popping a261(r657,l6)  -- assign reg 31
      Popping a256(r663,l6)  -- assign reg 3
      Popping a234(r269,l6)  -- assign reg 38
      Popping a235(r270,l6)  -- assign reg 40

  Loop 4 (parent 1, header bb65, depth 2)
    bbs: 65(->66:l1)
    all: 264r245 265r247 266r249 267r263 268r266 269r267 270r282 271r297 272r302 273r306 274r319 275r739 276r740 277r741 278r745 279r746 280r747 281r774 282r775 283r776 284r777
    modified regnos: 297
    border: 264r245 265r247 266r249 267r263 268r266 269r267 270r282 271r297 272r302 273r306 274r319 275r739 276r740 277r741 278r745 279r746 280r747 281r774 282r775 283r776 284r777
    Pressure: GENERAL_REGS=15 VFP_LO_REGS=9
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-4 6-12 14)@0
      Spill a264(r245,l4)
      Allocno a270r282 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a273r306 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a274r319 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Pushing a274(r319,l4)(cost 0)
      Pushing a273(r306,l4)(cost 0)
      Pushing a270(r282,l4)(cost 0)
      Popping a270(r282,l4)  -- assign reg 11
      Popping a273(r306,l4)  -- assign reg 4
      Popping a274(r319,l4)  -- assign reg 0

  Loop 3 (parent 1, header bb67, depth 2)
    bbs: 98(->99:l1) 68(->69:l1) 67 64(->65:l4) 63 47(->48:l5)
    all: 285r245 286r247 287r249 288r263 289r266 290r267 291r268 292r282 293r293 294r297 295r302 296r304 297r306 298r319 299r739 300r740 301r741 302r742 303r745 304r746 305r747 306r769 307r770 308r771 309r774 310r775 311r776 312r777 313r280 314r743 315r303 316r764 317r193 318r606 319r823 320r281 583r273 584r274 585r275 586r310 587r191 588r811 589r642 590r638 591r635 592r640 593r317 594r189 595r633 596r186 597r632 598r627 599r626 600r625 601r622 602r181 603r615 604r612 605r609 606r608
    modified regnos: 181 186 189 191 193 273 274 275 280 281 293 297 303 304 310 317 319 606 608 609 612 615 622 625 626 627 632 633 635 638 640 642 741 742 743 764 811 823
    border: 285r245 286r247 287r249 288r263 289r266 290r267 291r268 292r282 293r293 294r297 295r302 296r304 297r306 298r319 299r739 300r740 301r741 302r742 303r745 304r746 305r747 306r769 307r770 308r771 309r774 310r775 311r776 312r777
    Pressure: GENERAL_REGS=23 VFP_LO_REGS=19
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-4 6-12 14 16-32)@180
          2:( 0-4 6-12 14 16-29 31-32)@4330
            3:( 0-4 6-12 14)@105658
              4:( 3-4 6-11)@34440
                5:( 4 6-11)@0
      Spill a285(r245,l3)
      Allocno a292r282 of GENERAL_REGS(14) has 7 avail. regs  4 6-11, node:  4 6-11 (confl regs =  0-2 12-106)
      Allocno a293r293 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a296r304 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a297r306 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a298r319 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a313r280 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a314r743 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a315r303 of GENERAL_REGS(14) has 8 avail. regs  3-4 6-11, node:  3-4 6-11 (confl regs =  0-2 12-106)
      Allocno a583r273 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a584r274 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a585r275 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a586r310 of ALL_REGS(46) has 30 avail. regs  0-4 6-12 14 16-32, node:  0-4 6-12 14 16-32 (confl regs =  13 15 48-106)
      Allocno a588r811 of ALL_REGS(46) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15 48-106)
      Allocno a599r626 of ALL_REGS(46) has 29 avail. regs  0-4 6-12 14 16-29 31-32, node:  0-4 6-12 14 16-29 31-32 (confl regs =  13 15 48-106)
      Allocno a603r615 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a604r612 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a605r609 of GENERAL_REGS(14) has 13 avail. regs  0-4 6-12 14, node:  0-4 6-12 14 (confl regs =  13 15-106)
      Allocno a606r608 of ALL_REGS(46) has 29 avail. regs  0-4 6-12 14 16-29 31-32, node:  0-4 6-12 14 16-29 31-32 (confl regs =  13 15 48-106)
      Forming thread by copy 203:a604r612-a605r609 (freq=84):
        Result (freq=2046): a604r612(1023) a605r609(1023)
      Forming thread by copy 202:a605r609-a606r608 (freq=42):
        Result (freq=2728): a604r612(1023) a606r608(682) a605r609(1023)
      Forming thread by copy 200:a583r273-a602r181 (freq=18):
        Result (freq=1352): a583r273(960) a602r181(392)
      Forming thread by copy 201:a583r273-a593r317 (freq=16):
        Result (freq=1681): a583r273(960) a593r317(329) a602r181(392)
      Forming thread by copy 198:a599r626-a600r625 (freq=11):
        Result (freq=368): a599r626(184) a600r625(184)
      Forming thread by copy 186:a584r274-a597r632 (freq=2):
        Result (freq=511): a584r274(475) a597r632(36)
      Forming thread by copy 187:a585r275-a595r633 (freq=2):
        Result (freq=511): a585r275(475) a595r633(36)
      Pushing a588(r811,l3: a359(r811,l5))(cost 0)
      Pushing a586(r310,l3: a357(r310,l5))(cost 0)
      Pushing a599(r626,l3: a370(r626,l5))(cost 0)
      Pushing a585(r275,l3: a356(r275,l5))(cost 0)
      Pushing a584(r274,l3: a355(r274,l5))(cost 0)
        Making a296(r304,l3) colorable
        Making a298(r319,l3) colorable
      Pushing a298(r319,l3)(cost 3620)
      Pushing a296(r304,l3)(cost 3505)
      Pushing a603(r615,l3: a374(r615,l5))(cost 0)
      Pushing a583(r273,l3: a354(r273,l5))(cost 0)
      Pushing a606(r608,l3: a377(r608,l5))(cost 0)
        Making a293(r293,l3) colorable
        Making a297(r306,l3) colorable
        Making a313(r280,l3) colorable
        Making a314(r743,l3) colorable
        Making a315(r303,l3) colorable
      Pushing a297(r306,l3)(cost 860)
        Making a292(r282,l3) colorable
      Pushing a292(r282,l3)(cost 320)
      Pushing a293(r293,l3)(cost 735)
      Pushing a315(r303,l3)(cost 3225)
      Pushing a314(r743,l3)(cost 7190)
      Pushing a313(r280,l3)(cost 5630)
      Pushing a605(r609,l3: a376(r609,l5))(cost 0)
      Pushing a604(r612,l3: a375(r612,l5))(cost 0)
      Popping a604(r612,l3: a375(r612,l5))  -- assign reg 3
      Popping a605(r609,l3: a376(r609,l5))  -- assign reg 3
      Popping a313(r280,l3)  -- assign reg 6
      Popping a314(r743,l3)  -- assign reg 7
      Popping a315(r303,l3)  -- assign reg 8
      Popping a293(r293,l3)  -- assign reg 9
      Popping a292(r282,l3)  -- assign reg 11
      Popping a297(r306,l3)  -- assign reg 4
      Popping a606(r608,l3: a377(r608,l5))  -- assign reg 3
      Popping a583(r273,l3: a354(r273,l5))  -- assign reg 3
      Popping a603(r615,l3: a374(r615,l5))  -- assign reg 2
      Popping a296(r304,l3)  -- assign reg 1
      Popping a298(r319,l3)  -- assign reg 0
      Popping a584(r274,l3: a355(r274,l5))  -- assign reg 12
      Popping a585(r275,l3: a356(r275,l5))  -- assign reg 2
      Popping a599(r626,l3: a370(r626,l5))  -- assign reg 31
      Popping a586(r310,l3: a357(r310,l5))  -- assign reg 30
      Popping a588(r811,l3: a359(r811,l5))  -- assign reg 0

  Loop 5 (parent 3, header bb48, depth 3)
    bbs: 101 100 62(->63:l3) 61 60 59 58 57 56 55 54 53 52 51 50 49 48
    all: 321r193 322r245 323r247 324r249 325r263 326r266 327r267 328r268 329r280 330r281 331r282 332r293 333r297 334r302 335r303 336r304 337r306 338r319 339r739 340r740 341r742 342r743 343r745 344r746 345r747 346r764 347r769 348r770 349r771 350r774 351r775 352r776 353r777 354r273 355r274 356r275 357r310 358r191 359r811 360r642 361r638 362r635 363r640 364r317 365r189 366r633 367r186 368r632 369r627 370r626 371r625 372r622 373r181 374r615 375r612 376r609 377r608
    modified regnos: 181 186 189 191 273 274 275 280 281 304 310 317 319 608 609 612 615 622 625 626 627 632 633 635 638 640 642 742 811
    border: 321r193 322r245 323r247 324r249 325r263 326r266 327r267 328r268 329r280 330r281 331r282 332r293 333r297 334r302 335r303 336r304 337r306 338r319 339r739 340r740 341r742 342r743 343r745 344r746 345r747 346r764 347r769 348r770 349r771 350r774 351r775 352r776 353r777
    Pressure: GENERAL_REGS=23 VFP_LO_REGS=19
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 0-4 6 8-12 14 16-32)@180
          2:( 0-4 6 8-12 14 16-29 31-32)@4330
            3:( 0-4 6 8-12 14)@106028
              4:( 3-4 6 8-11)@18420
      Spill a322(r245,l5)
      Allocno a329r280 of GENERAL_REGS(14) has 7 avail. regs  3-4 6 8-11, node:  3-4 6 8-11 (confl regs =  0-2 12-106)
      Allocno a331r282 of GENERAL_REGS(14) has 7 avail. regs  3-4 6 8-11, node:  3-4 6 8-11 (confl regs =  0-2 12-106)
      Allocno a332r293 of GENERAL_REGS(14) has 7 avail. regs  3-4 6 8-11, node:  3-4 6 8-11 (confl regs =  0-2 12-106)
      Allocno a335r303 of GENERAL_REGS(14) has 7 avail. regs  3-4 6 8-11, node:  3-4 6 8-11 (confl regs =  0-2 12-106)
      Allocno a336r304 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a337r306 of GENERAL_REGS(14) has 7 avail. regs  3-4 6 8-11, node:  3-4 6 8-11 (confl regs =  0-2 12-106)
      Allocno a338r319 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a354r273 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a355r274 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a356r275 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a357r310 of ALL_REGS(46) has 29 avail. regs  0-4 6 8-12 14 16-32, node:  0-4 6 8-12 14 16-32 (confl regs =  13 15 48-106)
      Allocno a359r811 of ALL_REGS(46) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15 48-106)
      Allocno a370r626 of ALL_REGS(46) has 28 avail. regs  0-4 6 8-12 14 16-29 31-32, node:  0-4 6 8-12 14 16-29 31-32 (confl regs =  13 15 48-106)
      Allocno a374r615 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a375r612 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a376r609 of GENERAL_REGS(14) has 12 avail. regs  0-4 6 8-12 14, node:  0-4 6 8-12 14 (confl regs =  13 15-106)
      Allocno a377r608 of ALL_REGS(46) has 28 avail. regs  0-4 6 8-12 14 16-29 31-32, node:  0-4 6 8-12 14 16-29 31-32 (confl regs =  13 15 48-106)
      Forming thread by copy 106:a375r612-a376r609 (freq=84):
        Result (freq=2046): a375r612(1023) a376r609(1023)
      Forming thread by copy 105:a376r609-a377r608 (freq=42):
        Result (freq=2728): a375r612(1023) a377r608(682) a376r609(1023)
      Forming thread by copy 103:a354r273-a373r181 (freq=18):
        Result (freq=1352): a354r273(960) a373r181(392)
      Forming thread by copy 104:a354r273-a364r317 (freq=16):
        Result (freq=1681): a354r273(960) a364r317(329) a373r181(392)
      Forming thread by copy 101:a370r626-a371r625 (freq=11):
        Result (freq=368): a370r626(184) a371r625(184)
      Forming thread by copy 89:a355r274-a368r632 (freq=2):
        Result (freq=511): a355r274(475) a368r632(36)
      Forming thread by copy 90:a356r275-a366r633 (freq=2):
        Result (freq=511): a356r275(475) a366r633(36)
      Pushing a359(r811,l5)(cost 0)
      Pushing a357(r310,l5)(cost 0)
      Pushing a370(r626,l5)(cost 0)
      Pushing a356(r275,l5)(cost 0)
      Pushing a355(r274,l5)(cost 0)
        Making a336(r304,l5) colorable
        Making a338(r319,l5) colorable
      Pushing a338(r319,l5)(cost 4780)
      Pushing a336(r304,l5)(cost 5070)
      Pushing a374(r615,l5)(cost 0)
      Pushing a354(r273,l5)(cost 0)
      Pushing a377(r608,l5)(cost 0)
        Making a329(r280,l5) colorable
        Making a331(r282,l5) colorable
        Making a332(r293,l5) colorable
        Making a335(r303,l5) colorable
        Making a337(r306,l5) colorable
      Pushing a332(r293,l5)(cost 1480)
      Pushing a331(r282,l5)(cost 1480)
      Pushing a337(r306,l5)(cost 2020)
      Pushing a335(r303,l5)(cost 4170)
      Pushing a329(r280,l5)(cost 6020)
      Pushing a376(r609,l5)(cost 0)
      Pushing a375(r612,l5)(cost 0)
      Popping a375(r612,l5)  -- assign reg 3
      Popping a376(r609,l5)  -- assign reg 3
      Popping a329(r280,l5)  -- assign reg 6
      Popping a335(r303,l5)  -- assign reg 8
      Popping a337(r306,l5)  -- assign reg 4
      Popping a331(r282,l5)  -- assign reg 11
      Popping a332(r293,l5)  -- assign reg 9
      Popping a377(r608,l5)  -- assign reg 3
      Popping a354(r273,l5)  -- assign reg 3
      Popping a374(r615,l5)  -- assign reg 2
      Popping a336(r304,l5)  -- assign reg 1
      Popping a338(r319,l5)  -- assign reg 0
      Popping a355(r274,l5)  -- assign reg 12
      Popping a356(r275,l5)  -- assign reg 2
      Popping a370(r626,l5)  -- assign reg 31
      Popping a357(r310,l5)  -- assign reg 30
      Popping a359(r811,l5)  -- assign reg 0

  Loop 2 (parent 1, header bb24, depth 2)
    bbs: 25(->26:l1) 24(->28:l1)
    all: 378r138 379r139 380r142 381r143 382r147 383r148 384r154 385r245 386r247 387r248 388r263 389r264 390r282 391r306 392r560 393r738 394r739 395r740 396r744 397r745 398r746 399r747 400r774 401r775 402r776 403r777 404r563 405r558 406r561 407r556 408r149 409r146 410r554 411r144 412r564
    modified regnos: 144 146 149 154 264 554 556 558 561 563 564
    border: 378r138 379r139 380r142 381r143 382r147 383r148 384r154 385r245 386r247 387r248 388r263 389r264 390r282 391r306 392r560 393r738 394r739 395r740 396r744 397r745 398r746 399r747 400r774 401r775 402r776 403r777
    Pressure: GENERAL_REGS=23 VFP_LO_REGS=10
    Hard reg set forest:
      0:( 0-12 14 16-47)@0
        1:( 1-4 7-12 14 17-26 29 31 36 38-47)@5370
          2:( 1-4 7-12 14)@155730
      Spill a385(r245,l2)
      Allocno a379r139 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a387r248 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a389r264 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a390r282 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a391r306 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a396r744 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a404r563 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a405r558 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a406r561 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a407r556 of ALL_REGS(46) has 34 avail. regs  1-4 7-12 14 17-26 30-31 36 38-47, ^node:  0-12 14 16-47 (confl regs =  13 15 48-106)
      Allocno a409r146 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Allocno a410r554 of ALL_REGS(46) has 34 avail. regs  1-4 7-12 14 17-26 29 31 36 38-47, node:  1-4 7-12 14 17-26 29 31 36 38-47 (confl regs =  13 15 48-106)
      Allocno a412r564 of GENERAL_REGS(14) has 11 avail. regs  1-4 7-12 14, node:  1-4 7-12 14 (confl regs =  13 15-106)
      Forming thread by copy 108:a410r554-a411r144 (freq=67):
        Result (freq=2148): a410r554(1074) a411r144(1074)
      Forming thread by copy 109:a409r146-a410r554 (freq=67):
        Result (freq=3222): a409r146(1074) a410r554(1074) a411r144(1074)
      Forming thread by copy 110:a406r561-a409r146 (freq=67):
        Result (freq=4296): a406r561(1074) a409r146(1074) a410r554(1074) a411r144(1074)
      Forming thread by copy 111:a407r556-a408r149 (freq=67):
        Result (freq=2148): a407r556(1074) a408r149(1074)
      Forming thread by copy 112:a405r558-a407r556 (freq=67):
        Result (freq=3222): a405r558(1074) a407r556(1074) a408r149(1074)
      Pushing a412(r564,l2)(cost 0)
      Pushing a404(r563,l2)(cost 0)
        Making a379(r139,l2) colorable
        Making a387(r248,l2) colorable
      Forming thread by copy 107:a389r264-a412r564 (freq=134):
        Result (freq=2685): a389r264(1611) a412r564(1074)
        Making a389(r264,l2) colorable
        Making a390(r282,l2) colorable
        Making a391(r306,l2) colorable
        Making a396(r744,l2) colorable
      Pushing a391(r306,l2)(cost 2280)
      Pushing a390(r282,l2)(cost 2280)
      Pushing a387(r248,l2)(cost 2280)
      Pushing a396(r744,l2)(cost 6530)
      Pushing a379(r139,l2)(cost 11900)
      Pushing a389(r264,l2)(cost 9215)
      Pushing a407(r556,l2)(cost 0)
      Pushing a405(r558,l2)(cost 0)
      Pushing a410(r554,l2)(cost 0)
      Pushing a409(r146,l2)(cost 0)
      Pushing a406(r561,l2)(cost 0)
      Popping a406(r561,l2)  -- assign reg 3
      Popping a409(r146,l2)  -- assign reg 3
      Popping a410(r554,l2)  -- assign reg 3
      Popping a405(r558,l2)  -- assign reg 2
      Popping a407(r556,l2)  -- assign reg 2
      Popping a389(r264,l2)  -- assign reg 1
      Popping a379(r139,l2)  -- assign reg 10
      Popping a396(r744,l2)  -- assign reg 8
      Popping a387(r248,l2)  -- assign reg 9
      Popping a390(r282,l2)  -- assign reg 11
      Popping a391(r306,l2)  -- assign reg 4
      Popping a404(r563,l2)  -- assign reg 3
      Popping a412(r564,l2)  -- assign reg 1
Disposition:
   37:r114 l0    30   39:r116 l0    31   22:r121 l0    37  378:r138 l2     6
  189:r138 l1     6  379:r139 l2    10  207:r139 l1    10  380:r142 l2    35
  205:r142 l1    35  381:r143 l2    27  202:r143 l1    27  411:r144 l2    31
  409:r146 l2     3  382:r147 l2    16  203:r147 l1    16  383:r148 l2    28
  201:r148 l1    28  408:r149 l2    30  384:r154 l2    29  200:r154 l1    29
  197:r155 l1     3   91:r158 l1    10  176:r168 l1    35  373:r181 l5    31
  367:r186 l5    29  365:r189 l5    30  358:r191 l5    32  321:r193 l5    42
  317:r193 l3    42  143:r215 l1    33  126:r216 l1    35  102:r217 l1    33
  100:r218 l1    36  119:r219 l1     9  124:r221 l1    37  113:r222 l1     3
  120:r230 l1    31   94:r242 l1     3  385:r245 l2   mem  322:r245 l5   mem
  285:r245 l3   mem  264:r245 l4   mem  230:r245 l6   mem   67:r245 l1   mem
    0:r245 l0   mem  171:r246 l1     8  386:r247 l2    33  323:r247 l5    33
  286:r247 l3    33  265:r247 l4    33  231:r247 l6    33   81:r247 l1    33
  387:r248 l2     9  187:r248 l1     9  324:r249 l5    39  287:r249 l3    39
  266:r249 l4    39  232:r249 l6    39   82:r249 l1    39  140:r253 l1     6
  118:r254 l1    10  223:r261 l1    35  388:r263 l2    37  325:r263 l5    37
  288:r263 l3    37  267:r263 l4    37  233:r263 l6    37   83:r263 l1    37
  389:r264 l2     1  199:r264 l1     1  193:r265 l1    36  326:r266 l5    40
  289:r266 l3    40  268:r266 l4    40   84:r266 l1    40  327:r267 l5    38
  290:r267 l3    38  269:r267 l4    38   85:r267 l1    38  328:r268 l5    47
  291:r268 l3    47  165:r268 l1    47  234:r269 l6    38  151:r269 l1    38
  235:r270 l6    40  153:r270 l1    40  236:r271 l6     7  147:r271 l1     7
  354:r273 l5     3  355:r274 l5    12  356:r275 l5     2  329:r280 l5     6
  313:r280 l3     6  330:r281 l5    35  320:r281 l3    35  390:r282 l2    11
  331:r282 l5    11  292:r282 l3    11  270:r282 l4    11  237:r282 l6    11
   68:r282 l1    11    4:r282 l0    11  238:r286 l6     6  148:r286 l1     6
  332:r293 l5     9  293:r293 l3     9  158:r293 l1     9   27:r294 l0    34
  333:r297 l5    43  294:r297 l3    43  271:r297 l4    43  164:r297 l1    43
   69:r300 l1    33    9:r300 l0    33   70:r301 l1    32   10:r301 l0    32
  334:r302 l5    36  295:r302 l3    36  272:r302 l4    36   92:r302 l1    36
  335:r303 l5     8  315:r303 l3     8  336:r304 l5     1  296:r304 l3     1
  166:r304 l1     1  391:r306 l2     4  337:r306 l5     4  297:r306 l3     4
  273:r306 l4     4  239:r306 l6     4   71:r306 l1     4    8:r306 l0     4
   31:r307 l0    36  357:r310 l5    30  160:r310 l1    30   65:r313 l0    31
  364:r317 l5    31   63:r318 l0    30  338:r319 l5     0  298:r319 l3     0
  274:r319 l4     0   86:r319 l1     0   55:r323 l0    30   47:r325 l0    30
  262:r327 l6     0   57:r329 l0    31   30:r334 l0    35   49:r337 l0    31
   64:r344 l0    30   66:r346 l0    31   62:r347 l0    31   58:r351 l0    30
   59:r353 l0    31   54:r354 l0    31   50:r358 l0    30   51:r360 l0    31
   46:r361 l0    31   42:r367 l0     3   40:r368 l0    30   43:r372 l0     3
   41:r373 l0    31   36:r374 l0    31   32:r379 l0     3   29:r382 l0   mem
   28:r403 l0    31   26:r405 l0    31   25:r408 l0    30   24:r409 l0    31
   23:r412 l0   mem   21:r434 l0   mem   20:r456 l0   mem   19:r478 l0    30
   18:r479 l0    31   17:r482 l0    30   16:r483 l0    31   15:r486 l0   mem
   14:r508 l0   mem  228:r528 l1    33  229:r529 l1    31  227:r530 l1    16
  224:r532 l1    31  221:r533 l1    31  220:r534 l1    31  222:r535 l1    32
  219:r536 l1    32  216:r541 l1    16  211:r547 l1     3  210:r548 l1    29
  209:r549 l1    30  208:r550 l1    31  410:r554 l2     3  407:r556 l2     2
  405:r558 l2     2  392:r560 l2     0  198:r560 l1     0  406:r561 l2     3
  404:r563 l2     3  412:r564 l2     1  194:r568 l1    31  191:r569 l1    31
  192:r571 l1    31  185:r580 l1    35  184:r581 l1    35  180:r583 l1     6
  182:r585 l1    31  178:r589 l1     3  177:r590 l1     3  174:r592 l1    31
  175:r593 l1    35  173:r595 l1     3  172:r597 l1     3  170:r600 l1    31
  169:r602 l1    40  168:r603 l1     3  318:r606 l3    42  377:r608 l5     3
  376:r609 l5     3  375:r612 l5     3  374:r615 l5     2  372:r622 l5    31
  371:r625 l5   mem  370:r626 l5    31  369:r627 l5    32  368:r632 l5    29
  366:r633 l5    30  362:r635 l5   mem  361:r638 l5   mem  363:r640 l5    31
  360:r642 l5   mem  157:r650 l1    30  156:r651 l1    30  152:r652 l1    30
  240:r653 l6    32  155:r653 l1    32  154:r654 l1    29  263:r656 l6     3
  261:r657 l6    31  260:r658 l6    31  259:r659 l6    31  258:r661 l6    31
  257:r662 l6    30  256:r663 l6     3  255:r669 l6     3  254:r673 l6     3
  253:r674 l6     3  251:r675 l6     3  252:r676 l6     2  146:r677 l1     3
  145:r678 l1    31  132:r684 l1     1  134:r685 l1     6  139:r686 l1     0
  133:r688 l1     1  130:r689 l1     1  138:r690 l1     2  135:r691 l1     2
  137:r692 l1     0  136:r695 l1     2  128:r696 l1     2  131:r698 l1     0
  129:r699 l1     1  127:r701 l1     2  122:r703 l1     6  117:r707 l1     9
  110:r708 l1     9  116:r709 l1     9  114:r710 l1     1  115:r712 l1     2
  107:r713 l1     9  109:r714 l1     3  112:r715 l1     1  111:r718 l1     3
  104:r719 l1     3  108:r721 l1     2  105:r722 l1     8  103:r724 l1     3
   98:r726 l1     6   96:r731 l1    31   95:r732 l1     3   93:r733 l1     3
   90:r736 l1     3   88:r737 l1     3  393:r738 l2    32   89:r738 l1    32
  394:r739 l2   mem  339:r739 l5   mem  299:r739 l3   mem  275:r739 l4   mem
  241:r739 l6   mem   72:r739 l1   mem    5:r739 l0   mem  395:r740 l2   mem
  340:r740 l5   mem  300:r740 l3   mem  276:r740 l4   mem  242:r740 l6   mem
   73:r740 l1   mem    6:r740 l0   mem  301:r741 l3    31  277:r741 l4    31
   87:r741 l1    31  341:r742 l5    30  302:r742 l3    30  159:r742 l1    30
  342:r743 l5     7  314:r743 l3     7  396:r744 l2     8  106:r744 l1     8
  397:r745 l2   mem  343:r745 l5   mem  303:r745 l3   mem  278:r745 l4   mem
  243:r745 l6   mem   74:r745 l1   mem   11:r745 l0   mem  398:r746 l2   mem
  344:r746 l5   mem  304:r746 l3   mem  279:r746 l4   mem  244:r746 l6   mem
   75:r746 l1   mem   12:r746 l0   mem  399:r747 l2     5  345:r747 l5     5
  305:r747 l3     5  280:r747 l4     5  245:r747 l6     5   76:r747 l1     5
   13:r747 l0     5  150:r761 l1     8  246:r762 l6     8  149:r762 l1     8
  346:r764 l5    41  316:r764 l3    41  347:r769 l5    44  306:r769 l3    44
  163:r769 l1    44  348:r770 l5    46  307:r770 l3    46  162:r770 l1    46
  349:r771 l5    45  308:r771 l3    45  161:r771 l1    45  400:r774 l2   mem
  350:r774 l5   mem  309:r774 l3   mem  281:r774 l4   mem  247:r774 l6   mem
   77:r774 l1   mem    3:r774 l0   mem  401:r775 l2   mem  351:r775 l5   mem
  310:r775 l3   mem  282:r775 l4   mem  248:r775 l6   mem   78:r775 l1   mem
    2:r775 l0   mem  402:r776 l2   mem  352:r776 l5   mem  311:r776 l3   mem
  283:r776 l4   mem  249:r776 l6   mem   79:r776 l1   mem    1:r776 l0   mem
  403:r777 l2    34  353:r777 l5    34  312:r777 l3    34  284:r777 l4    34
  250:r777 l6    34   80:r777 l1    34    7:r777 l0    34   61:r780 l0     0
   60:r781 l0     0   56:r782 l0     0   53:r783 l0     0   52:r784 l0     0
   48:r785 l0     0   45:r786 l0     0   44:r787 l0     0   38:r788 l0     0
   35:r789 l0     0   34:r790 l0     0   33:r791 l0     0  226:r792 l1    16
  225:r793 l1    16  218:r794 l1     0  217:r795 l1    16  215:r796 l1    16
  214:r797 l1     6  213:r798 l1     0  212:r799 l1     0  206:r800 l1    16
  204:r801 l1    16  196:r802 l1    16  195:r803 l1     0  190:r804 l1     0
  188:r805 l1     0  186:r806 l1     0  183:r807 l1     0  181:r808 l1     2
  179:r809 l1     0  167:r810 l1    16  359:r811 l5     0  144:r812 l1     0
  142:r813 l1    35  141:r814 l1    16  125:r815 l1     0  123:r816 l1     2
  121:r817 l1     0  101:r818 l1     0   99:r819 l1     2   97:r820 l1     0
  319:r823 l3   mem
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb17)
  11 vs parent 11:      Creating newreg=824 from oldreg=282
  4 vs parent 4:      Creating newreg=825 from oldreg=306
rescanning insn with uid = 1565.
rescanning insn with uid = 1409.
rescanning insn with uid = 1400.
rescanning insn with uid = 1355.
rescanning insn with uid = 1356.
rescanning insn with uid = 1359.
rescanning insn with uid = 1360.
rescanning insn with uid = 1350.
rescanning insn with uid = 1351.
rescanning insn with uid = 1343.
rescanning insn with uid = 1328.
rescanning insn with uid = 1680.
rescanning insn with uid = 1316.
rescanning insn with uid = 1267.
rescanning insn with uid = 1219.
rescanning insn with uid = 1223.
rescanning insn with uid = 1165.
rescanning insn with uid = 1564.
rescanning insn with uid = 1079.
rescanning insn with uid = 1140.
rescanning insn with uid = 24.
rescanning insn with uid = 1563.
rescanning insn with uid = 1069.
rescanning insn with uid = 844.
rescanning insn with uid = 845.
rescanning insn with uid = 819.
rescanning insn with uid = 835.
rescanning insn with uid = 1559.
rescanning insn with uid = 802.
rescanning insn with uid = 792.
rescanning insn with uid = 786.
rescanning insn with uid = 729.
rescanning insn with uid = 686.
rescanning insn with uid = 639.
rescanning insn with uid = 552.
rescanning insn with uid = 477.
rescanning insn with uid = 483.
rescanning insn with uid = 486.
rescanning insn with uid = 499.
      Changing RTL for loop 6 (header bb74)
  38 vs parent 38:      Creating newreg=826 from oldreg=269
  40 vs parent 40:      Creating newreg=827 from oldreg=270
  7 vs parent 7:      Creating newreg=828 from oldreg=271
  11 vs parent 11:      Creating newreg=829 from oldreg=824
  6 vs parent 6:      Creating newreg=830 from oldreg=286
  4 vs parent 4:      Creating newreg=831 from oldreg=825
  8 vs parent 8:      Creating newreg=832 from oldreg=762
rescanning insn with uid = 1154.
rescanning insn with uid = 1155.
rescanning insn with uid = 1157.
rescanning insn with uid = 1159.
rescanning insn with uid = 1147.
rescanning insn with uid = 1148.
rescanning insn with uid = 1149.
rescanning insn with uid = 1136.
rescanning insn with uid = 1141.
rescanning insn with uid = 1123.
rescanning insn with uid = 1113.
rescanning insn with uid = 1108.
rescanning insn with uid = 1095.
rescanning insn with uid = 1098.
rescanning insn with uid = 1103.
rescanning insn with uid = 1441.
      Changing RTL for loop 4 (header bb65)
  11 vs parent 11:      Creating newreg=833 from oldreg=824
  4 vs parent 4:      Creating newreg=834 from oldreg=825
  0 vs parent 0:      Creating newreg=835 from oldreg=319
      Changing RTL for loop 3 (header bb67)
  11 vs parent 11:      Creating newreg=836 from oldreg=824
  9 vs parent 9:      Creating newreg=837 from oldreg=293
  1 vs parent 1:      Creating newreg=838 from oldreg=304
  4 vs parent 4:      Creating newreg=839 from oldreg=825
  0 vs parent 0:      Creating newreg=840 from oldreg=319
rescanning insn with uid = 1424.
rescanning insn with uid = 1417.
rescanning insn with uid = 1418.
rescanning insn with uid = 1422.
rescanning insn with uid = 1053.
rescanning insn with uid = 1054.
rescanning insn with uid = 1058.
rescanning insn with uid = 1042.
rescanning insn with uid = 849.
      Changing RTL for loop 5 (header bb48)
  6 vs parent 6:      Creating newreg=841 from oldreg=280
  11 vs parent 11:      Creating newreg=842 from oldreg=836
  9 vs parent 9:      Creating newreg=843 from oldreg=837
  8 vs parent 8:      Creating newreg=844 from oldreg=303
  1 vs parent 1:      Creating newreg=845 from oldreg=838
  4 vs parent 4:      Creating newreg=846 from oldreg=839
  0 vs parent 0:      Creating newreg=847 from oldreg=840
      Creating newreg=848 from oldreg=310
rescanning insn with uid = 1435.
rescanning insn with uid = 999.
rescanning insn with uid = 1000.
rescanning insn with uid = 1004.
rescanning insn with uid = 992.
rescanning insn with uid = 1562.
rescanning insn with uid = 993.
rescanning insn with uid = 995.
rescanning insn with uid = 935.
rescanning insn with uid = 896.
rescanning insn with uid = 854.
rescanning insn with uid = 859.
      Changing RTL for loop 2 (header bb24)
  6 vs parent 6:      Creating newreg=849 from oldreg=138
  10 vs parent 10:      Creating newreg=850 from oldreg=139
  9 vs parent 9:      Creating newreg=851 from oldreg=248
  1 vs parent 1:      Creating newreg=852 from oldreg=264
  11 vs parent 11:      Creating newreg=853 from oldreg=824
  4 vs parent 4:      Creating newreg=854 from oldreg=825
  8 vs parent 8:      Creating newreg=855 from oldreg=744
rescanning insn with uid = 609.
rescanning insn with uid = 627.
rescanning insn with uid = 628.
rescanning insn with uid = 629.
rescanning insn with uid = 613.
rescanning insn with uid = 620.
rescanning insn with uid = 631.
rescanning insn with uid = 617.
scanning new insn with uid = 1841.
scanning new insn with uid = 1842.
scanning new insn with uid = 1843.
scanning new insn with uid = 1844.
scanning new insn with uid = 1845.
scanning new insn with uid = 1846.
scanning new insn with uid = 1847.
scanning new insn with uid = 1848.
scanning new insn with uid = 1849.
scanning new insn with uid = 1850.
scanning new insn with uid = 1851.
scanning new insn with uid = 1852.
scanning new insn with uid = 1853.
scanning new insn with uid = 1854.
scanning new insn with uid = 1855.
scanning new insn with uid = 1856.
scanning new insn with uid = 1857.
scanning new insn with uid = 1863.
scanning new insn with uid = 1864.
scanning new insn with uid = 1865.
scanning new insn with uid = 1866.
scanning new insn with uid = 1867.
scanning new insn with uid = 1868.
scanning new insn with uid = 1869.
scanning new insn with uid = 1870.
scanning new insn with uid = 1871.
scanning new insn with uid = 1872.
scanning new insn with uid = 1873.
scanning new insn with uid = 1874.
scanning new insn with uid = 1878.
scanning new insn with uid = 1879.
scanning new insn with uid = 1880.
scanning new insn with uid = 1881.
scanning new insn with uid = 1882.
scanning new insn with uid = 1883.
scanning new insn with uid = 1884.
scanning new insn with uid = 1885.
scanning new insn with uid = 1886.
scanning new insn with uid = 1887.
scanning new insn with uid = 1888.
scanning new insn with uid = 1889.
scanning new insn with uid = 1890.
scanning new insn with uid = 1891.
scanning new insn with uid = 1892.
scanning new insn with uid = 1893.
scanning new insn with uid = 1894.
scanning new insn with uid = 1895.
    Adding cp260:a4r282-a68r824
    Adding range [418..418] to allocno a4r282
    Adding cp261:a8r306-a71r825
    Adding range [418..420] to allocno a8r306
    Adding range [419..421] to allocno a68r824
    Adding range [421..421] to allocno a71r825
    Adding range [418..421] to live through  allocno a0r245
    Adding range [418..421] to live through  allocno a9r300
    Adding range [418..421] to live through  allocno a10r301
    Adding range [418..421] to live through  allocno a5r739
    Adding range [418..421] to live through  allocno a6r740
    Adding range [418..421] to live through  allocno a11r745
    Adding range [418..421] to live through  allocno a12r746
    Adding range [418..421] to live through  allocno a13r747
    Adding range [418..421] to live through  allocno a3r774
    Adding range [418..421] to live through  allocno a2r775
    Adding range [418..421] to live through  allocno a1r776
    Adding range [418..421] to live through  allocno a7r777
    Adding cp262:a189r138-a378r849
    Adding range [423..423] to allocno a189r138
    Adding range [423..423] to allocno a189r138
    Adding cp263:a207r139-a379r850
    Adding range [423..425] to allocno a207r139
    Adding cp264:a187r248-a387r851
    Adding range [423..427] to allocno a187r248
    Adding cp265:a199r264-a389r852
    Adding range [423..429] to allocno a199r264
    Adding cp266:a68r824-a390r853
    Adding range [423..431] to allocno a68r824
    Adding cp267:a71r825-a391r854
    Adding range [423..433] to allocno a71r825
    Adding cp268:a106r744-a396r855
    Adding range [423..435] to allocno a106r744
    Adding range [424..436] to allocno a378r849
    Adding range [424..436] to allocno a378r849
    Adding range [426..436] to allocno a379r850
    Adding range [428..436] to allocno a387r851
    Adding range [430..436] to allocno a389r852
    Adding range [432..436] to allocno a390r853
    Adding range [434..436] to allocno a391r854
    Adding range [436..436] to allocno a396r855
    Adding range [423..436] to live through  allocno a205r142
    Adding range [423..436] to live through  allocno a202r143
    Adding range [423..436] to live through  allocno a203r147
    Adding range [423..436] to live through  allocno a201r148
    Adding range [423..436] to live through  allocno a200r154
    Adding range [423..436] to live through  allocno a67r245
    Adding range [423..436] to live through  allocno a81r247
    Adding range [423..436] to live through  allocno a83r263
    Adding range [423..436] to live through  allocno a198r560
    Adding range [423..436] to live through  allocno a89r738
    Adding range [423..436] to live through  allocno a72r739
    Adding range [423..436] to live through  allocno a73r740
    Adding range [423..436] to live through  allocno a74r745
    Adding range [423..436] to live through  allocno a75r746
    Adding range [423..436] to live through  allocno a76r747
    Adding range [423..436] to live through  allocno a77r774
    Adding range [423..436] to live through  allocno a78r775
    Adding range [423..436] to live through  allocno a79r776
    Adding range [423..436] to live through  allocno a80r777
    Adding cp269:a189r138-a378r849
    Adding range [438..438] to allocno a378r849
    Adding range [438..438] to allocno a378r849
    Adding cp270:a187r248-a387r851
    Adding range [438..440] to allocno a387r851
    Adding cp271:a68r824-a390r853
    Adding range [438..442] to allocno a390r853
    Adding cp272:a71r825-a391r854
    Adding range [438..444] to allocno a391r854
    Adding range [439..445] to allocno a189r138
    Adding range [439..445] to allocno a189r138
    Adding range [441..445] to allocno a187r248
    Adding range [443..445] to allocno a68r824
    Adding range [445..445] to allocno a71r825
    Adding range [438..445] to live through  allocno a67r245
    Adding range [438..445] to live through  allocno a81r247
    Adding range [438..445] to live through  allocno a83r263
    Adding range [438..445] to live through  allocno a89r738
    Adding range [438..445] to live through  allocno a72r739
    Adding range [438..445] to live through  allocno a73r740
    Adding range [438..445] to live through  allocno a74r745
    Adding range [438..445] to live through  allocno a75r746
    Adding range [438..445] to live through  allocno a76r747
    Adding range [438..445] to live through  allocno a77r774
    Adding range [438..445] to live through  allocno a78r775
    Adding range [438..445] to live through  allocno a79r776
    Adding range [438..445] to live through  allocno a80r777
    Adding cp273:a189r138-a378r849
    Adding range [447..447] to allocno a378r849
    Adding range [447..447] to allocno a378r849
    Adding cp274:a187r248-a387r851
    Adding range [447..449] to allocno a387r851
    Adding cp275:a68r824-a390r853
    Adding range [447..451] to allocno a390r853
    Adding cp276:a71r825-a391r854
    Adding range [447..453] to allocno a391r854
    Adding range [448..454] to allocno a189r138
    Adding range [448..454] to allocno a189r138
    Adding range [450..454] to allocno a187r248
    Adding range [452..454] to allocno a68r824
    Adding range [454..454] to allocno a71r825
    Adding range [447..454] to live through  allocno a67r245
    Adding range [447..454] to live through  allocno a81r247
    Adding range [447..454] to live through  allocno a83r263
    Adding range [447..454] to live through  allocno a89r738
    Adding range [447..454] to live through  allocno a72r739
    Adding range [447..454] to live through  allocno a73r740
    Adding range [447..454] to live through  allocno a74r745
    Adding range [447..454] to live through  allocno a75r746
    Adding range [447..454] to live through  allocno a76r747
    Adding range [447..454] to live through  allocno a77r774
    Adding range [447..454] to live through  allocno a78r775
    Adding range [447..454] to live through  allocno a79r776
    Adding range [447..454] to live through  allocno a80r777
    Adding cp277:a68r824-a292r836
    Adding range [456..456] to allocno a68r824
    Adding cp278:a158r293-a293r837
    Adding range [456..458] to allocno a158r293
    Adding cp279:a166r304-a296r838
    Adding range [456..460] to allocno a166r304
    Adding cp280:a71r825-a297r839
    Adding range [456..462] to allocno a71r825
    Adding cp281:a86r319-a298r840
    Adding range [456..464] to allocno a86r319
    Adding range [457..465] to allocno a292r836
    Adding range [459..465] to allocno a293r837
    Adding range [461..465] to allocno a296r838
    Adding range [463..465] to allocno a297r839
    Adding range [465..465] to allocno a298r840
    Adding range [456..465] to live through  allocno a67r245
    Adding range [456..465] to live through  allocno a81r247
    Adding range [456..465] to live through  allocno a82r249
    Adding range [456..465] to live through  allocno a83r263
    Adding range [456..465] to live through  allocno a84r266
    Adding range [456..465] to live through  allocno a85r267
    Adding range [456..465] to live through  allocno a165r268
    Adding range [456..465] to live through  allocno a164r297
    Adding range [456..465] to live through  allocno a92r302
    Adding range [456..465] to live through  allocno a72r739
    Adding range [456..465] to live through  allocno a73r740
    Adding range [456..465] to live through  allocno a87r741
    Adding range [456..465] to live through  allocno a159r742
    Adding range [456..465] to live through  allocno a74r745
    Adding range [456..465] to live through  allocno a75r746
    Adding range [456..465] to live through  allocno a76r747
    Adding range [456..465] to live through  allocno a163r769
    Adding range [456..465] to live through  allocno a162r770
    Adding range [456..465] to live through  allocno a161r771
    Adding range [456..465] to live through  allocno a77r774
    Adding range [456..465] to live through  allocno a78r775
    Adding range [456..465] to live through  allocno a79r776
    Adding range [456..465] to live through  allocno a80r777
    Adding cp282:a313r280-a329r841
    Adding range [467..467] to allocno a313r280
    Adding cp283:a292r836-a331r842
    Adding range [467..469] to allocno a292r836
    Adding cp284:a293r837-a332r843
    Adding range [467..471] to allocno a293r837
    Adding cp285:a315r303-a335r844
    Adding range [467..473] to allocno a315r303
    Adding cp286:a296r838-a336r845
    Adding range [467..475] to allocno a296r838
    Adding cp287:a297r839-a337r846
    Adding range [467..477] to allocno a297r839
    Adding cp288:a298r840-a338r847
    Adding range [467..479] to allocno a298r840
    Adding range [468..480] to allocno a329r841
    Adding range [470..480] to allocno a331r842
    Adding range [472..480] to allocno a332r843
    Adding range [474..480] to allocno a335r844
    Adding range [476..480] to allocno a336r845
    Adding range [478..480] to allocno a337r846
    Adding range [480..480] to allocno a338r847
    Adding range [467..480] to live through  allocno a317r193
    Adding range [467..480] to live through  allocno a285r245
    Adding range [467..480] to live through  allocno a286r247
    Adding range [467..480] to live through  allocno a287r249
    Adding range [467..480] to live through  allocno a288r263
    Adding range [467..480] to live through  allocno a289r266
    Adding range [467..480] to live through  allocno a290r267
    Adding range [467..480] to live through  allocno a291r268
    Adding range [467..480] to live through  allocno a320r281
    Adding range [467..480] to live through  allocno a294r297
    Adding range [467..480] to live through  allocno a295r302
    Adding range [467..480] to live through  allocno a299r739
    Adding range [467..480] to live through  allocno a300r740
    Adding range [467..480] to live through  allocno a302r742
    Adding range [467..480] to live through  allocno a314r743
    Adding range [467..480] to live through  allocno a303r745
    Adding range [467..480] to live through  allocno a304r746
    Adding range [467..480] to live through  allocno a305r747
    Adding range [467..480] to live through  allocno a316r764
    Adding range [467..480] to live through  allocno a306r769
    Adding range [467..480] to live through  allocno a307r770
    Adding range [467..480] to live through  allocno a308r771
    Adding range [467..480] to live through  allocno a309r774
    Adding range [467..480] to live through  allocno a310r775
    Adding range [467..480] to live through  allocno a311r776
    Adding range [467..480] to live through  allocno a312r777
    Adding cp289:a292r836-a331r842
    Adding range [482..482] to allocno a331r842
    Adding cp290:a293r837-a332r843
    Adding range [482..484] to allocno a332r843
    Adding cp291:a296r838-a336r845
    Adding range [482..486] to allocno a336r845
    Adding cp292:a297r839-a337r846
    Adding range [482..488] to allocno a337r846
    Adding cp293:a298r840-a338r847
    Adding range [482..490] to allocno a338r847
    Adding range [483..491] to allocno a292r836
    Adding range [485..491] to allocno a293r837
    Adding range [487..491] to allocno a296r838
    Adding range [489..491] to allocno a297r839
    Adding range [491..491] to allocno a298r840
    Adding range [482..491] to live through  allocno a285r245
    Adding range [482..491] to live through  allocno a286r247
    Adding range [482..491] to live through  allocno a287r249
    Adding range [482..491] to live through  allocno a288r263
    Adding range [482..491] to live through  allocno a289r266
    Adding range [482..491] to live through  allocno a290r267
    Adding range [482..491] to live through  allocno a291r268
    Adding range [482..491] to live through  allocno a294r297
    Adding range [482..491] to live through  allocno a295r302
    Adding range [482..491] to live through  allocno a299r739
    Adding range [482..491] to live through  allocno a300r740
    Adding range [482..491] to live through  allocno a302r742
    Adding range [482..491] to live through  allocno a303r745
    Adding range [482..491] to live through  allocno a304r746
    Adding range [482..491] to live through  allocno a305r747
    Adding range [482..491] to live through  allocno a306r769
    Adding range [482..491] to live through  allocno a307r770
    Adding range [482..491] to live through  allocno a308r771
    Adding range [482..491] to live through  allocno a309r774
    Adding range [482..491] to live through  allocno a310r775
    Adding range [482..491] to live through  allocno a311r776
    Adding range [482..491] to live through  allocno a312r777
    Adding cp294:a270r833-a292r836
    Adding range [493..493] to allocno a292r836
    Adding cp295:a273r834-a297r839
    Adding range [493..495] to allocno a297r839
    Adding cp296:a274r835-a298r840
    Adding range [493..497] to allocno a298r840
    Adding range [494..498] to allocno a270r833
    Adding range [496..498] to allocno a273r834
    Adding range [498..498] to allocno a274r835
    Adding range [493..498] to live through  allocno a285r245
    Adding range [493..498] to live through  allocno a286r247
    Adding range [493..498] to live through  allocno a287r249
    Adding range [493..498] to live through  allocno a288r263
    Adding range [493..498] to live through  allocno a289r266
    Adding range [493..498] to live through  allocno a290r267
    Adding range [493..498] to live through  allocno a294r297
    Adding range [493..498] to live through  allocno a295r302
    Adding range [493..498] to live through  allocno a299r739
    Adding range [493..498] to live through  allocno a300r740
    Adding range [493..498] to live through  allocno a301r741
    Adding range [493..498] to live through  allocno a303r745
    Adding range [493..498] to live through  allocno a304r746
    Adding range [493..498] to live through  allocno a305r747
    Adding range [493..498] to live through  allocno a309r774
    Adding range [493..498] to live through  allocno a310r775
    Adding range [493..498] to live through  allocno a311r776
    Adding range [493..498] to live through  allocno a312r777
    Adding cp297:a68r824-a270r833
    Adding range [500..500] to allocno a270r833
    Adding cp298:a71r825-a273r834
    Adding range [500..502] to allocno a273r834
    Adding cp299:a86r319-a274r835
    Adding range [500..504] to allocno a274r835
    Adding range [501..505] to allocno a68r824
    Adding range [503..505] to allocno a71r825
    Adding range [505..505] to allocno a86r319
    Adding range [500..505] to live through  allocno a67r245
    Adding range [500..505] to live through  allocno a81r247
    Adding range [500..505] to live through  allocno a82r249
    Adding range [500..505] to live through  allocno a83r263
    Adding range [500..505] to live through  allocno a84r266
    Adding range [500..505] to live through  allocno a85r267
    Adding range [500..505] to live through  allocno a72r739
    Adding range [500..505] to live through  allocno a73r740
    Adding range [500..505] to live through  allocno a87r741
    Adding range [500..505] to live through  allocno a74r745
    Adding range [500..505] to live through  allocno a75r746
    Adding range [500..505] to live through  allocno a76r747
    Adding range [500..505] to live through  allocno a77r774
    Adding range [500..505] to live through  allocno a78r775
    Adding range [500..505] to live through  allocno a79r776
    Adding range [500..505] to live through  allocno a80r777
    Adding cp300:a68r824-a292r836
    Adding range [507..507] to allocno a292r836
    Adding cp301:a71r825-a297r839
    Adding range [507..509] to allocno a297r839
    Adding cp302:a86r319-a298r840
    Adding range [507..511] to allocno a298r840
    Adding range [508..512] to allocno a68r824
    Adding range [510..512] to allocno a71r825
    Adding range [512..512] to allocno a86r319
    Adding range [507..512] to live through  allocno a67r245
    Adding range [507..512] to live through  allocno a81r247
    Adding range [507..512] to live through  allocno a82r249
    Adding range [507..512] to live through  allocno a83r263
    Adding range [507..512] to live through  allocno a84r266
    Adding range [507..512] to live through  allocno a85r267
    Adding range [507..512] to live through  allocno a72r739
    Adding range [507..512] to live through  allocno a73r740
    Adding range [507..512] to live through  allocno a87r741
    Adding range [507..512] to live through  allocno a74r745
    Adding range [507..512] to live through  allocno a75r746
    Adding range [507..512] to live through  allocno a76r747
    Adding range [507..512] to live through  allocno a77r774
    Adding range [507..512] to live through  allocno a78r775
    Adding range [507..512] to live through  allocno a79r776
    Adding range [507..512] to live through  allocno a80r777
    Adding cp303:a151r269-a234r826
    Adding range [514..514] to allocno a151r269
    Adding cp304:a153r270-a235r827
    Adding range [514..516] to allocno a153r270
    Adding cp305:a147r271-a236r828
    Adding range [514..518] to allocno a147r271
    Adding cp306:a68r824-a237r829
    Adding range [514..520] to allocno a68r824
    Adding cp307:a148r286-a238r830
    Adding range [514..522] to allocno a148r286
    Adding cp308:a71r825-a239r831
    Adding range [514..524] to allocno a71r825
    Adding cp309:a149r762-a246r832
    Adding range [514..526] to allocno a149r762
    Adding range [515..527] to allocno a234r826
    Adding range [517..527] to allocno a235r827
    Adding range [519..527] to allocno a236r828
    Adding range [521..527] to allocno a237r829
    Adding range [523..527] to allocno a238r830
    Adding range [525..527] to allocno a239r831
    Adding range [527..527] to allocno a246r832
    Adding range [514..527] to live through  allocno a67r245
    Adding range [514..527] to live through  allocno a81r247
    Adding range [514..527] to live through  allocno a82r249
    Adding range [514..527] to live through  allocno a83r263
    Adding range [514..527] to live through  allocno a155r653
    Adding range [514..527] to live through  allocno a72r739
    Adding range [514..527] to live through  allocno a73r740
    Adding range [514..527] to live through  allocno a74r745
    Adding range [514..527] to live through  allocno a75r746
    Adding range [514..527] to live through  allocno a76r747
    Adding range [514..527] to live through  allocno a77r774
    Adding range [514..527] to live through  allocno a78r775
    Adding range [514..527] to live through  allocno a79r776
    Adding range [514..527] to live through  allocno a80r777
    Adding cp310:a68r824-a237r829
    Adding range [529..529] to allocno a237r829
    Adding cp311:a71r825-a239r831
    Adding range [529..531] to allocno a239r831
    Adding range [530..532] to allocno a68r824
    Adding range [532..532] to allocno a71r825
    Adding range [529..532] to live through  allocno a67r245
    Adding range [529..532] to live through  allocno a81r247
    Adding range [529..532] to live through  allocno a83r263
    Adding range [529..532] to live through  allocno a72r739
    Adding range [529..532] to live through  allocno a73r740
    Adding range [529..532] to live through  allocno a74r745
    Adding range [529..532] to live through  allocno a75r746
    Adding range [529..532] to live through  allocno a76r747
    Adding range [529..532] to live through  allocno a77r774
    Adding range [529..532] to live through  allocno a78r775
    Adding range [529..532] to live through  allocno a79r776
    Adding range [529..532] to live through  allocno a80r777
    Adding cp312:a68r824-a292r836
    Adding range [534..534] to allocno a292r836
    Adding cp313:a71r825-a297r839
    Adding range [534..536] to allocno a297r839
    Adding cp314:a86r319-a298r840
    Adding range [534..538] to allocno a298r840
    Adding range [535..539] to allocno a68r824
    Adding range [537..539] to allocno a71r825
    Adding range [539..539] to allocno a86r319
    Adding range [534..539] to live through  allocno a67r245
    Adding range [534..539] to live through  allocno a81r247
    Adding range [534..539] to live through  allocno a82r249
    Adding range [534..539] to live through  allocno a83r263
    Adding range [534..539] to live through  allocno a84r266
    Adding range [534..539] to live through  allocno a85r267
    Adding range [534..539] to live through  allocno a72r739
    Adding range [534..539] to live through  allocno a73r740
    Adding range [534..539] to live through  allocno a87r741
    Adding range [534..539] to live through  allocno a74r745
    Adding range [534..539] to live through  allocno a75r746
    Adding range [534..539] to live through  allocno a76r747
    Adding range [534..539] to live through  allocno a77r774
    Adding range [534..539] to live through  allocno a78r775
    Adding range [534..539] to live through  allocno a79r776
    Adding range [534..539] to live through  allocno a80r777
scanning new insn with uid = 1858.
scanning new insn with uid = 1859.
scanning new insn with uid = 1860.
scanning new insn with uid = 1861.
scanning new insn with uid = 1862.
changing bb of uid 1896
  unscanned insn
scanning new insn with uid = 1875.
scanning new insn with uid = 1876.
scanning new insn with uid = 1877.
    New r824: setting preferred GENERAL_REGS, alternative NO_REGS
    New r825: setting preferred LO_REGS, alternative GENERAL_REGS
    New r826: setting preferred VFP_LO_REGS, alternative ALL_REGS
    New r827: setting preferred VFP_LO_REGS, alternative ALL_REGS
    New r828: setting preferred GENERAL_REGS, alternative NO_REGS
    New r829: setting preferred GENERAL_REGS, alternative NO_REGS
    New r830: setting preferred GENERAL_REGS, alternative NO_REGS
    New r831: setting preferred LO_REGS, alternative GENERAL_REGS
    New r832: setting preferred GENERAL_REGS, alternative NO_REGS
    New r833: setting preferred GENERAL_REGS, alternative NO_REGS
    New r834: setting preferred LO_REGS, alternative GENERAL_REGS
    New r835: setting preferred LO_REGS, alternative GENERAL_REGS
    New r836: setting preferred GENERAL_REGS, alternative NO_REGS
    New r837: setting preferred GENERAL_REGS, alternative NO_REGS
    New r838: setting preferred GENERAL_REGS, alternative NO_REGS
    New r839: setting preferred LO_REGS, alternative GENERAL_REGS
    New r840: setting preferred LO_REGS, alternative GENERAL_REGS
    New r841: setting preferred GENERAL_REGS, alternative NO_REGS
    New r842: setting preferred GENERAL_REGS, alternative NO_REGS
    New r843: setting preferred GENERAL_REGS, alternative NO_REGS
    New r844: setting preferred GENERAL_REGS, alternative NO_REGS
    New r845: setting preferred GENERAL_REGS, alternative NO_REGS
    New r846: setting preferred LO_REGS, alternative GENERAL_REGS
    New r847: setting preferred LO_REGS, alternative GENERAL_REGS
    New r848: setting preferred ALL_REGS, alternative VFP_LO_REGS
    New r849: setting preferred GENERAL_REGS, alternative NO_REGS
    New r850: setting preferred LO_REGS, alternative GENERAL_REGS
    New r851: setting preferred GENERAL_REGS, alternative NO_REGS
    New r852: setting preferred GENERAL_REGS, alternative NO_REGS
    New r853: setting preferred GENERAL_REGS, alternative NO_REGS
    New r854: setting preferred LO_REGS, alternative GENERAL_REGS
    New r855: setting preferred LO_REGS, alternative GENERAL_REGS
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 103 n_edges 153 count 228 (  2.2)
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 102 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
;;
;; Loop 1
;;  header 17, latch 92
;;  depth 1, outer 0
;;  nodes: 17 92 91 90 89 87 86 85 80 81 84 83 82 72 79 21 44 20 97 40 39 38 37 36 35 32 33 34 30 29 28 26 27 22 25 24 23 31 19 18 43 78 77 74 73 71 70 66 69 99 98 63 62 61 60 57 58 59 50 49 48 47 67 64 68 46 45 42 96 41 56 54 52 55 53 51 101 100 65 102 76 75
;;
;; Loop 6
;;  header 74, latch 78
;;  depth 2, outer 1
;;  nodes: 74 78 77 76 75
;;
;; Loop 4
;;  header 65, latch 65
;;  depth 2, outer 1
;;  nodes: 65
;;
;; Loop 3
;;  header 67, latch 98
;;  depth 2, outer 1
;;  nodes: 67 98 63 62 61 60 57 58 59 50 49 48 47 64 68 56 54 52 55 53 51 101 100
;;
;; Loop 5
;;  header 48, latch 62
;;  depth 3, outer 3
;;  nodes: 48 62 61 60 57 58 59 50 49 56 54 52 55 53 51 101 100
;;
;; Loop 2
;;  header 24, latch 25
;;  depth 2, outer 1
;;  nodes: 24 25
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 9 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 11 }
;; 7 succs { 10 }
;; 8 succs { 6 }
;; 9 succs { 5 }
;; 10 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 13 16 }
;; 13 succs { 15 }
;; 14 succs { 12 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 80 }
;; 21 succs { 22 80 }
;; 22 succs { 23 27 }
;; 23 succs { 24 }
;; 24 succs { 28 25 }
;; 25 succs { 24 26 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 33 30 }
;; 30 succs { 34 31 }
;; 31 succs { 35 32 }
;; 32 succs { 36 }
;; 33 succs { 36 }
;; 34 succs { 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 43 }
;; 39 succs { 40 43 }
;; 40 succs { 41 97 }
;; 41 succs { 42 96 }
;; 42 succs { 45 }
;; 43 succs { 45 44 }
;; 44 succs { 80 }
;; 45 succs { 46 70 }
;; 46 succs { 67 }
;; 47 succs { 48 }
;; 48 succs { 51 49 }
;; 49 succs { 100 50 }
;; 50 succs { 62 }
;; 51 succs { 53 52 }
;; 52 succs { 57 }
;; 53 succs { 55 54 }
;; 54 succs { 57 }
;; 55 succs { 57 }
;; 56 succs { 57 }
;; 57 succs { 58 62 }
;; 58 succs { 59 62 }
;; 59 succs { 60 62 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 48 63 }
;; 63 succs { 98 }
;; 64 succs { 47 102 }
;; 102 succs { 65 }
;; 65 succs { 65 66 }
;; 66 succs { 71 }
;; 67 succs { 47 68 }
;; 68 succs { 64 69 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 73 72 }
;; 72 succs { 80 }
;; 73 succs { 74 }
;; 74 succs { 78 75 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 }
;; 78 succs { 74 79 }
;; 79 succs { 80 }
;; 80 succs { 81 86 }
;; 81 succs { 82 86 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 1 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 17 }
;; 93 succs { 94 95 }
;; 94 succs { 1 }
;; 95 succs { 1 }
;; 96 succs { 45 }
;; 97 succs { 80 }
;; 98 succs { 67 99 }
;; 99 succs { 71 }
;; 100 succs { 56 101 }
;; 101 succs { 52 }
+++Costs: overall 372306, reg 290635, mem 81671, ld 0, st 0, move 2652
+++       move loops 0, new jumps 1
scanning new insn with uid = 1897.
moving def of 606 (insn 849 now) deleting insn with uid = 1840.
deleting insn with uid = 849.
rescanning insn with uid = 1897.
 1897) rather than keep unallocated replacement 823


drawSprites

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 100 [cc] 101 [vfpcc]
;;  ref usage 	r0={133d,90u} r1={136d,60u} r2={116d,34u} r3={96d,14u} r7={1d,102u} r12={162d} r13={1d,185u} r14={82d} r15={81d} r16={97d,31u} r17={92d,10u} r18={84d,2u} r19={83d,1u} r20={83d,1u} r21={82d} r22={82d} r23={82d} r24={82d} r25={82d} r26={82d} r27={82d} r28={82d} r29={82d} r30={82d} r31={82d} r48={81d} r49={81d} r50={81d} r51={81d} r52={81d} r53={81d} r54={81d} r55={81d} r56={81d} r57={81d} r58={81d} r59={81d} r60={81d} r61={81d} r62={81d} r63={81d} r64={81d} r65={81d} r66={81d} r67={81d} r68={81d} r69={81d} r70={81d} r71={81d} r72={81d} r73={81d} r74={81d} r75={81d} r76={81d} r77={81d} r78={81d} r79={81d} r80={81d} r81={81d} r82={81d} r83={81d} r84={81d} r85={81d} r86={81d} r87={81d} r88={81d} r89={81d} r90={81d} r91={81d} r92={81d} r93={81d} r94={81d} r95={81d} r96={81d} r97={81d} r98={81d} r99={81d} r100={135d,45u} r101={112d,31u} r102={1d,108u,18e} r103={1d,101u} r104={81d} r105={81d} r106={81d} r114={1d,2u} r116={1d,2u} r121={1d,2u} r138={3d,4u} r139={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r154={2d,3u} r155={1d,1u} r158={1d,2u} r168={1d,2u} r181={1d,3u,1e} r186={1d,1u} r189={1d,1u} r191={1d,3u} r193={1d,3u} r215={1d,2u} r216={1d,2u} r217={1d,2u} r218={1d,2u} r219={1d,5u,1e} r221={1d,2u} r222={2d,5u,1e} r230={1d,2u} r242={1d,2u} r245={2d,1u} r246={4d,8u} r247={2d,8u} r248={4d,8u,1e} r249={4d,11u,1e} r253={1d,3u} r254={1d,3u} r261={1d,4u} r263={1d,1u} r264={1d,1u} r265={1d,6u,2e} r266={1d,2u} r267={1d,6u} r268={1d,4u} r269={1d,2u} r270={1d,2u} r271={1d,1u} r273={1d,4u} r274={1d,4u} r275={1d,4u} r280={1d,1u} r281={2d,5u} r282={1d,2u} r286={1d,1u} r293={1d,1u} r294={1d,2u} r297={4d,12u} r300={2d,5u} r301={2d,7u} r302={4d,4u} r303={1d,1u} r304={1d,2u} r306={1d,1u} r307={1d,2u} r310={1d,1u} r313={1d,2u} r317={4d,1u} r318={1d,2u} r319={5d,2u} r323={1d,2u} r325={1d,2u} r327={1d,2u} r329={1d,2u} r334={1d,2u} r337={1d,2u} r344={1d,1u} r346={1d,1u} r347={1d,1u} r351={1d,1u} r353={1d,1u} r354={1d,1u} r358={1d,1u} r360={1d,1u} r361={1d,1u} r367={1d,1u} r368={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r379={1d,1u} r382={1d,2u} r403={1d,1u} r405={1d,1u} r408={1d,1u} r409={1d,1u} r412={1d,2u} r434={1d,2u} r456={1d,2u} r478={1d,1u} r479={1d,1u} r482={1d,1u} r483={1d,1u} r486={1d,2u} r508={1d,2u} r528={1d,1u} r529={1d,1u} r530={1d,1u} r532={1d,1u} r533={1d,1u} r534={1d,1u} r535={1d,1u} r536={1d,1u} r541={1d,1u} r547={1d,1u} r548={1d,1u} r549={1d,1u} r550={1d,1u} r554={1d,1u} r556={1d,1u} r558={1d,1u} r560={1d,1u} r561={1d,1u} r563={1d,1u} r564={1d,1u} r568={1d,1u} r569={1d,2u} r571={1d,1u} r580={1d,1u} r581={1d,1u} r583={1d,1u} r585={1d,1u} r589={1d,1u} r590={1d,1u} r592={1d,2u} r593={1d,1u} r595={1d,1u} r597={1d,1u} r600={1d,1u} r602={1d,1u} r603={1d,1u} r606={1d,1u} r608={1d,1u} r609={1d,2u} r612={1d,3u,2e} r615={1d,2u} r622={1d,1u} r625={1d,1u} r626={1d,1u} r627={1d,1u} r632={1d,1u} r633={1d,1u} r635={1d,1u} r638={1d,1u} r640={1d,1u} r642={1d,1u} r650={1d,1u} r651={1d,1u,1e} r652={1d,1u} r653={1d,3u} r654={1d,1u} r656={1d,1u} r657={1d,1u} r658={1d,1u,1e} r659={1d,1u} r661={1d,1u} r662={1d,1u} r663={1d,1u} r669={1d,1u} r673={1d,1u,1e} r674={1d,1u} r675={1d,5u,1e} r676={1d,1u} r677={1d,1u} r678={1d,1u} r684={1d,1u} r685={1d,1u} r686={1d,2u} r688={1d,1u} r689={1d,1u} r690={1d,2u,1e} r691={1d,1u} r692={1d,1u} r695={1d,1u} r696={1d,1u} r698={1d,1u} r699={1d,1u} r701={1d,1u} r703={1d,1u} r707={1d,2u,1e} r708={1d,1u} r709={1d,1u} r710={1d,2u} r712={1d,1u} r713={1d,1u} r714={1d,1u} r715={1d,1u} r718={1d,1u} r719={1d,1u} r721={1d,1u} r722={1d,1u} r724={1d,1u} r726={1d,1u} r731={1d,1u} r732={1d,1u} r733={1d,1u} r736={1d,1u} r737={1d,1u} r738={5d,8u} r739={1d,1u} r740={1d,1u,1e} r741={2d,5u} r742={2d,3u} r743={1d,2u} r744={2d,3u} r745={1d,3u} r746={1d,3u} r747={1d,25u,14e} r761={1d,1u} r762={1d,1u} r764={1d,1u} r769={1d,1u} r770={1d,2u} r771={1d,1u} r774={1d,2u} r775={1d,1u} r776={1d,1u} r777={1d,2u} r780={1d,1u} r781={1d,1u} r782={1d,1u} r783={1d,1u} r784={1d,1u} r785={1d,1u} r786={1d,1u} r787={1d,1u} r788={1d,1u} r789={1d,1u} r790={1d,1u} r791={1d,1u} r792={1d,1u} r793={1d,1u} r794={1d,1u} r795={1d,1u} r796={1d,1u} r797={1d,1u} r798={1d,1u} r799={1d,1u} r800={1d,1u} r801={1d,1u} r802={1d,1u} r803={1d,1u} r804={1d,1u} r805={1d,1u} r806={1d,1u} r807={1d,1u} r808={1d,1u} r809={1d,1u} r810={1d,1u} r811={1d,1u} r812={1d,1u} r813={1d,1u} r814={1d,1u} r815={1d,1u} r816={1d,1u} r817={1d,1u} r818={1d,1u} r819={1d,1u} r820={1d,1u} r824={8d,8u} r825={8d,35u,4e} r826={1d,1u} r827={1d,1u} r828={2d,6u} r829={1d,1u} r830={2d,5u,1e} r831={1d,4u} r832={1d,1u} r833={1d,1u} r834={1d,1u} r835={1d,1u} r836={2d,4u} r837={4d,9u} r838={2d,2u} r839={2d,4u} r840={2d,4u} r841={2d,5u} r842={1d,1u} r843={1d,1u} r844={1d,1u} r845={2d,2u} r846={1d,4u} r847={2d,3u} r848={1d,1u} r849={1d,2u} r850={1d,2u} r851={1d,2u} r852={2d,4u} r853={1d,2u} r854={1d,2u} r855={1d,1u} 
;;    total ref usage 8680{7218d,1409u,53e} in 1053{972 regular + 81 call} insns.
(note 1 0 30 NOTE_INSN_DELETED)
(note 30 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 30 49 2 NOTE_INSN_FUNCTION_BEG)
(note 49 2 52 2 NOTE_INSN_DELETED)
(note 52 49 55 2 NOTE_INSN_DELETED)
(note 55 52 73 2 NOTE_INSN_DELETED)
(note 73 55 76 2 NOTE_INSN_DELETED)
(note 76 73 79 2 NOTE_INSN_DELETED)
(note 79 76 97 2 NOTE_INSN_DELETED)
(note 97 79 100 2 NOTE_INSN_DELETED)
(note 100 97 103 2 NOTE_INSN_DELETED)
(note 103 100 127 2 NOTE_INSN_DELETED)
(note 127 103 130 2 NOTE_INSN_DELETED)
(note 130 127 133 2 NOTE_INSN_DELETED)
(note 133 130 32 2 NOTE_INSN_DELETED)
(debug_insn 32 133 33 2 (debug_marker) "../System/ray_funkcije.c":380:2 -1
     (nil))
(debug_insn 33 32 34 2 (debug_marker) "../System/ray_funkcije.c":380:7 -1
     (nil))
(debug_insn 34 33 35 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 35 34 42 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(insn 42 35 38 2 (set (reg/f:SI 747)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":382:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(insn 38 42 36 2 (set (reg/f:SI 746)
        (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)) "../System/ray_funkcije.c":383:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>)
        (nil)))
(insn 36 38 39 2 (set (reg/f:SI 745)
        (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)) "../System/ray_funkcije.c":382:9 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>)
        (nil)))
(insn 39 36 40 2 (set (reg:SF 300 [ pretmp_423 ])
        (mem/c:SF (reg/f:SI 746) [1 py+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(debug_insn 40 39 41 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 41 40 46 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(insn 46 41 37 2 (set (reg:SF 346 [ sp[0].y ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 12 [0xc])) [1 sp[0].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 12 [0xc]))) [1 sp[0].y+0 S4 A32])
            (nil))))
(insn 37 46 47 2 (set (reg:SF 301 [ pretmp_425 ])
        (mem/c:SF (reg/f:SI 745) [1 px+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 47 37 43 2 (set (reg:SF 313 [ _473 ])
        (minus:SF (reg:SF 300 [ pretmp_423 ])
            (reg:SF 346 [ sp[0].y ]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 346 [ sp[0].y ])
        (nil)))
(insn 43 47 48 2 (set (reg:SF 344 [ sp[0].x ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 8 [0x8])) [1 sp[0].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 8 [0x8]))) [1 sp[0].x+0 S4 A32])
            (nil))))
(insn 48 43 44 2 (set (reg:SF 347)
        (mult:SF (reg:SF 313 [ _473 ])
            (reg:SF 313 [ _473 ]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 313 [ _473 ])
        (nil)))
(insn 44 48 50 2 (set (reg:SF 318 [ _482 ])
        (minus:SF (reg:SF 301 [ pretmp_425 ])
            (reg:SF 344 [ sp[0].x ]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 344 [ sp[0].x ])
        (nil)))
(insn 50 44 51 2 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 318 [ _482 ])
            (reg:SF 318 [ _482 ])
            (reg:SF 347))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 347)
        (expr_list:REG_DEAD (reg:SF 318 [ _482 ])
            (nil))))
(call_insn/u 51 50 1640 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1640 51 53 2 (set (reg:DF 780)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 53 1640 54 2 (set (reg:DF 16 s0)
        (reg:DF 780)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 780)
        (nil)))
(call_insn/u 54 53 1641 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1641 54 56 2 (set (reg:DF 781)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 56 1641 57 2 (set (reg:DF 0 r0)
        (reg:DF 781)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 781)
        (nil)))
(call_insn/u 57 56 1642 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1642 57 70 2 (set (reg:SF 782)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 70 1642 67 2 (set (reg:SF 353 [ sp[1].y ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 456 [0x1c8])) [1 sp[1].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 456 [0x1c8]))) [1 sp[1].y+0 S4 A32])
            (nil))))
(insn 67 70 71 2 (set (reg:SF 351 [ sp[1].x ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 452 [0x1c4])) [1 sp[1].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 452 [0x1c4]))) [1 sp[1].x+0 S4 A32])
            (nil))))
(insn 71 67 68 2 (set (reg:SF 329 [ _523 ])
        (minus:SF (reg:SF 300 [ pretmp_423 ])
            (reg:SF 353 [ sp[1].y ]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 353 [ sp[1].y ])
        (nil)))
(insn 68 71 72 2 (set (reg:SF 323 [ _511 ])
        (minus:SF (reg:SF 301 [ pretmp_425 ])
            (reg:SF 351 [ sp[1].x ]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 351 [ sp[1].x ])
        (nil)))
(insn 72 68 58 2 (set (reg:SF 354)
        (mult:SF (reg:SF 329 [ _523 ])
            (reg:SF 329 [ _523 ]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 329 [ _523 ])
        (nil)))
(insn 58 72 74 2 (set (reg:SF 307 [ _466 ])
        (reg:SF 782)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 782)
        (nil)))
(insn 74 58 60 2 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 323 [ _511 ])
            (reg:SF 323 [ _511 ])
            (reg:SF 354))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 354)
        (expr_list:REG_DEAD (reg:SF 323 [ _511 ])
            (nil))))
(insn 60 74 61 2 (set (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (reg:SF 307 [ _466 ])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 61 60 62 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 62 61 63 2 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 63 62 64 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 64 63 65 2 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 65 64 75 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 75 65 1643 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1643 75 77 2 (set (reg:DF 783)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 77 1643 78 2 (set (reg:DF 16 s0)
        (reg:DF 783)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 783)
        (nil)))
(call_insn/u 78 77 1644 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1644 78 80 2 (set (reg:DF 784)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 80 1644 81 2 (set (reg:DF 0 r0)
        (reg:DF 784)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 784)
        (nil)))
(call_insn/u 81 80 1645 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1645 81 94 2 (set (reg:SF 785)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 94 1645 91 2 (set (reg:SF 360 [ sp[2].y ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 900 [0x384])) [1 sp[2].y+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 900 [0x384]))) [1 sp[2].y+0 S4 A32])
            (nil))))
(insn 91 94 95 2 (set (reg:SF 358 [ sp[2].x ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 896 [0x380])) [1 sp[2].x+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 896 [0x380]))) [1 sp[2].x+0 S4 A32])
            (nil))))
(insn 95 91 92 2 (set (reg:SF 337 [ _531 ])
        (minus:SF (reg:SF 300 [ pretmp_423 ])
            (reg:SF 360 [ sp[2].y ]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 360 [ sp[2].y ])
        (nil)))
(insn 92 95 96 2 (set (reg:SF 325 [ _515 ])
        (minus:SF (reg:SF 301 [ pretmp_425 ])
            (reg:SF 358 [ sp[2].x ]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 358 [ sp[2].x ])
        (nil)))
(insn 96 92 82 2 (set (reg:SF 361)
        (mult:SF (reg:SF 337 [ _531 ])
            (reg:SF 337 [ _531 ]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 337 [ _531 ])
        (nil)))
(insn 82 96 98 2 (set (reg:SF 334 [ _528 ])
        (reg:SF 785)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 785)
        (nil)))
(insn 98 82 84 2 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 325 [ _515 ])
            (reg:SF 325 [ _515 ])
            (reg:SF 361))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 361)
        (expr_list:REG_DEAD (reg:SF 325 [ _515 ])
            (nil))))
(insn 84 98 85 2 (set (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (reg:SF 334 [ _528 ])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 85 84 86 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 86 85 87 2 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 87 86 88 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 88 87 89 2 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 89 88 99 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 99 89 1646 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1646 99 101 2 (set (reg:DF 786)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 101 1646 102 2 (set (reg:DF 16 s0)
        (reg:DF 786)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 786)
        (nil)))
(call_insn/u 102 101 1647 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1647 102 104 2 (set (reg:DF 787)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 104 1647 105 2 (set (reg:DF 0 r0)
        (reg:DF 787)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 787)
        (nil)))
(call_insn/u 105 104 1648 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1648 105 123 2 (set (reg:SF 788)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 123 1648 124 2 (set (reg/f:SI 372)
        (plus:SI (reg/f:SI 747)
            (const_int 1344 [0x540]))) "../System/ray_funkcije.c":383:20 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1344 [0x540])))
        (nil)))
(insn 124 123 117 2 (set (reg:SF 373 [ sp[3].y ])
        (mem/c:SF (reg/f:SI 372) [1 sp[3].y+0 S4 A32])) "../System/ray_funkcije.c":383:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 372)
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 1344 [0x540]))) [1 sp[3].y+0 S4 A32])
            (nil))))
(insn 117 124 118 2 (set (reg/f:SI 367)
        (plus:SI (reg/f:SI 747)
            (const_int 1340 [0x53c]))) "../System/ray_funkcije.c":382:16 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1340 [0x53c])))
        (nil)))
(insn 118 117 125 2 (set (reg:SF 368 [ sp[3].x ])
        (mem/c:SF (reg/f:SI 367) [1 sp[3].x+0 S4 A32])) "../System/ray_funkcije.c":382:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 367)
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 1340 [0x53c]))) [1 sp[3].x+0 S4 A32])
            (nil))))
(insn 125 118 119 2 (set (reg:SF 116 [ _7 ])
        (minus:SF (reg:SF 300 [ pretmp_423 ])
            (reg:SF 373 [ sp[3].y ]))) "../System/ray_funkcije.c":383:13 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 373 [ sp[3].y ])
        (nil)))
(insn 119 125 126 2 (set (reg:SF 114 [ _3 ])
        (minus:SF (reg:SF 301 [ pretmp_425 ])
            (reg:SF 368 [ sp[3].x ]))) "../System/ray_funkcije.c":382:9 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 368 [ sp[3].x ])
        (nil)))
(insn 126 119 106 2 (set (reg:SF 374)
        (mult:SF (reg:SF 116 [ _7 ])
            (reg:SF 116 [ _7 ]))) "../System/ray_funkcije.c":383:24 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 116 [ _7 ])
        (nil)))
(insn 106 126 128 2 (set (reg:SF 294 [ _402 ])
        (reg:SF 788)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 788)
        (nil)))
(insn 128 106 108 2 (set (reg:SF 0 r0)
        (fma:SF (reg:SF 114 [ _3 ])
            (reg:SF 114 [ _3 ])
            (reg:SF 374))) "../System/ray_funkcije.c":381:16 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 374)
        (expr_list:REG_DEAD (reg:SF 114 [ _3 ])
            (nil))))
(insn 108 128 109 2 (set (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (reg:SF 294 [ _402 ])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 109 108 110 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 110 109 111 2 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 111 110 112 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 112 111 113 2 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 113 112 129 2 (debug_marker) "../System/ray_funkcije.c":381:3 -1
     (nil))
(call_insn/u 129 113 1649 2 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1649 129 131 2 (set (reg:DF 789)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 131 1649 132 2 (set (reg:DF 16 s0)
        (reg:DF 789)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 789)
        (nil)))
(call_insn/u 132 131 1650 2 (parallel [
            (set (reg:DF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>) [0 __builtin_sqrtl S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sqrtl") [flags 0x41]  <function_decl 0000000005b14200 sqrtl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:DF (use (reg:DF 16 s0))
            (nil))))
(insn 1650 132 134 2 (set (reg:DF 790)
        (reg:DF 16 s0)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 16 s0)
        (nil)))
(insn 134 1650 135 2 (set (reg:DF 0 r0)
        (reg:DF 790)) "../System/ray_funkcije.c":381:16 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 790)
        (nil)))
(call_insn/u 135 134 1651 2 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":381:16 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1651 135 140 2 (set (reg:SF 791)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 140 1651 136 2 (set (reg/f:SI 379)
        (plus:SI (reg/f:SI 747)
            (const_int 1368 [0x558]))) "../System/ray_funkcije.c":381:14 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1368 [0x558])))
        (nil)))
(insn 136 140 141 2 (set (reg:SF 121 [ _12 ])
        (reg:SF 791)) "../System/ray_funkcije.c":381:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 791)
        (nil)))
(insn 141 136 142 2 (set (mem/c:SF (reg/f:SI 379) [1 sp[3].dist+0 S4 A32])
        (reg:SF 121 [ _12 ])) "../System/ray_funkcije.c":381:14 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 379)
        (nil)))
(debug_insn 142 141 143 2 (debug_marker) "../System/ray_funkcije.c":380:37 -1
     (nil))
(debug_insn 143 142 144 2 (var_location:SI i (const_int 4 [0x4])) -1
     (nil))
(debug_insn 144 143 145 2 (debug_marker) "../System/ray_funkcije.c":380:18 -1
     (nil))
(debug_insn 145 144 146 2 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 146 145 147 2 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 147 146 148 2 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 148 147 149 2 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 149 148 1837 2 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 1837 149 1838 2 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 307 [ _466 ])
            (reg:SF 334 [ _528 ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 334 [ _528 ])
        (expr_list:REG_DEAD (reg:SF 307 [ _466 ])
            (nil))))
(insn 1838 1837 151 2 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 151 1838 155 2 (set (pc)
        (if_then_else (ungt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 193)
(note 155 151 156 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 156 155 159 3 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 159 156 164 3 (set (reg/f:SI 382)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 164 159 165 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 165 164 166 3 (set (reg:SI 1 r1)
        (reg/f:SI 747)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(insn 166 165 167 3 (set (reg:SI 0 r0)
        (reg/f:SI 382)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 167 166 169 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 382)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 169 167 175 3 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 175 169 176 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 176 175 177 3 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 747)
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(insn 177 176 178 3 (set (reg:SI 0 r0)
        (reg/f:SI 747)) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 178 177 180 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 747)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 180 178 188 3 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 188 180 189 3 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 189 188 190 3 (set (reg:SI 1 r1)
        (reg/f:SI 382)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 382)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 190 189 191 3 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 747)
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":393:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 191 190 193 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 193 191 194 4 147 (nil) [1 uses])
(note 194 193 195 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 195 194 196 4 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 196 195 197 4 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 197 196 198 4 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 198 197 200 4 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 200 198 1835 4 (set (reg:SF 403 [ sp[1].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 1835 200 1836 4 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 403 [ sp[1].dist ])
            (reg:SF 294 [ _402 ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 403 [ sp[1].dist ])
        (expr_list:REG_DEAD (reg:SF 294 [ _402 ])
            (nil))))
(insn 1836 1835 202 4 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 202 1836 313 4 (set (pc)
        (if_then_else (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 354334804 (nil)))
 -> 274)
(code_label 313 202 203 5 154 (nil) [1 uses])
(note 203 313 204 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 204 203 205 5 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 205 204 206 5 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 206 205 207 5 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 207 206 209 5 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 209 207 1833 5 (set (reg:SF 405 [ sp[2].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 924 [0x39c]))) [1 sp[2].dist+0 S4 A32])
            (nil))))
(insn 1833 209 1834 5 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 121 [ _12 ])
            (reg:SF 405 [ sp[2].dist ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 405 [ sp[2].dist ])
        (expr_list:REG_DEAD (reg:SF 121 [ _12 ])
            (nil))))
(insn 1834 1833 211 5 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 211 1834 271 5 (set (pc)
        (if_then_else (ge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 354334804 (nil)))
 -> 232)
(code_label 271 211 212 6 153 (nil) [1 uses])
(note 212 271 213 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 213 212 214 6 (var_location:SI j (const_int 3 [0x3])) -1
     (nil))
(debug_insn 214 213 215 6 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 215 214 216 6 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 216 215 217 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 217 216 218 6 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(debug_insn 218 217 219 6 (var_location:SI i (const_int 1 [0x1])) -1
     (nil))
(debug_insn 219 218 220 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 220 219 221 6 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 221 220 222 6 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 222 221 225 6 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 225 222 226 6 (set (reg:SF 408 [ sp[1].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 226 225 1831 6 (set (reg:SF 409 [ sp[0].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 36 [0x24]))) [1 sp[0].dist+0 S4 A32])
            (nil))))
(insn 1831 226 1832 6 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 408 [ sp[1].dist ])
            (reg:SF 409 [ sp[0].dist ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 409 [ sp[0].dist ])
        (expr_list:REG_DEAD (reg:SF 408 [ sp[1].dist ])
            (nil))))
(insn 1832 1831 228 6 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 228 1832 1711 6 (set (pc)
        (if_then_else (unlt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 355)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 355)
(note 1711 228 1712 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1712 1711 1713 7 (set (pc)
        (label_ref 316)) 284 {*arm_jump}
     (nil)
 -> 316)
(barrier 1713 1712 232)
(code_label 232 1713 233 8 150 (nil) [1 uses])
(note 233 232 234 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 234 233 237 8 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 237 234 242 8 (set (reg/f:SI 412)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 242 237 243 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 243 242 244 8 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 244 243 245 8 (set (reg:SI 0 r0)
        (reg/f:SI 412)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 245 244 247 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 412)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 247 245 253 8 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 253 247 254 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 254 253 255 8 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1332 [0x534])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 255 254 256 8 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))
        (nil)))
(call_insn 256 255 258 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 258 256 266 8 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 266 258 267 8 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 267 266 268 8 (set (reg:SI 1 r1)
        (reg/f:SI 412)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 412)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 268 267 269 8 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 1332 [0x534])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 269 268 1714 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1714 269 1715 8 (set (pc)
        (label_ref 271)) 284 {*arm_jump}
     (nil)
 -> 271)
(barrier 1715 1714 274)
(code_label 274 1715 275 9 149 (nil) [1 uses])
(note 275 274 276 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 276 275 279 9 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 279 276 284 9 (set (reg/f:SI 434)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 284 279 285 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 285 284 286 9 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 286 285 287 9 (set (reg:SI 0 r0)
        (reg/f:SI 434)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 287 286 289 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 434)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 289 287 295 9 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 295 289 296 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 296 295 297 9 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 297 296 298 9 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 298 297 300 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 300 298 308 9 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 308 300 309 9 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 309 308 310 9 (set (reg:SI 1 r1)
        (reg/f:SI 434)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 434)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 310 309 311 9 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 311 310 1716 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1716 311 1717 9 (set (pc)
        (label_ref 313)) 284 {*arm_jump}
     (nil)
 -> 313)
(barrier 1717 1716 316)
(code_label 316 1717 317 10 151 (nil) [1 uses])
(note 317 316 318 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 318 317 321 10 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 321 318 326 10 (set (reg/f:SI 456)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 326 321 327 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 327 326 328 10 (set (reg:SI 1 r1)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 328 327 329 10 (set (reg:SI 0 r0)
        (reg/f:SI 456)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 329 328 331 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 456)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 331 329 337 10 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 337 331 338 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 338 337 339 10 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 339 338 340 10 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 340 339 342 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 342 340 350 10 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 350 342 351 10 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 351 350 352 10 (set (reg:SI 1 r1)
        (reg/f:SI 456)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 456)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 352 351 353 10 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 353 352 355 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 355 353 356 11 152 (nil) [1 uses])
(note 356 355 357 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 357 356 358 11 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 358 357 359 11 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 359 358 360 11 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 360 359 363 11 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 363 360 364 11 (set (reg:SF 478 [ sp[2].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 924 [0x39c])) [1 sp[2].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 924 [0x39c]))) [1 sp[2].dist+0 S4 A32])
            (nil))))
(insn 364 363 1829 11 (set (reg:SF 479 [ sp[1].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 1829 364 1830 11 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 478 [ sp[2].dist ])
            (reg:SF 479 [ sp[1].dist ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 479 [ sp[1].dist ])
        (expr_list:REG_DEAD (reg:SF 478 [ sp[2].dist ])
            (nil))))
(insn 1830 1829 366 11 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 366 1830 426 11 (set (pc)
        (if_then_else (ge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 354334804 (nil)))
 -> 387)
(code_label 426 366 367 12 158 (nil) [1 uses])
(note 367 426 368 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 368 367 369 12 (var_location:SI j (const_int 2 [0x2])) -1
     (nil))
(debug_insn 369 368 370 12 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 370 369 371 12 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 371 370 372 12 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 372 371 373 12 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(debug_insn 373 372 374 12 (var_location:SI i (const_int 2 [0x2])) -1
     (nil))
(debug_insn 374 373 375 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 375 374 376 12 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 376 375 377 12 (var_location:SI j (const_int 0 [0])) -1
     (nil))
(debug_insn 377 376 380 12 (debug_marker) "../System/ray_funkcije.c":390:4 -1
     (nil))
(insn 380 377 381 12 (set (reg:SF 482 [ sp[1].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 480 [0x1e0])) [1 sp[1].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 480 [0x1e0]))) [1 sp[1].dist+0 S4 A32])
            (nil))))
(insn 381 380 1827 12 (set (reg:SF 483 [ sp[0].dist ])
        (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])) "../System/ray_funkcije.c":390:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (plus:SI (reg/f:SI 747)
                (const_int 36 [0x24])) [1 sp[0].dist+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                        (const_int 36 [0x24]))) [1 sp[0].dist+0 S4 A32])
            (nil))))
(insn 1827 381 1828 12 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 482 [ sp[1].dist ])
            (reg:SF 483 [ sp[0].dist ]))) "../System/ray_funkcije.c":390:7 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 483 [ sp[0].dist ])
        (expr_list:REG_DEAD (reg:SF 482 [ sp[1].dist ])
            (nil))))
(insn 1828 1827 383 12 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":390:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 383 1828 1718 12 (set (pc)
        (if_then_else (unlt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 468)
            (pc))) "../System/ray_funkcije.c":390:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 468)
(note 1718 383 1719 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1719 1718 1720 13 (set (pc)
        (label_ref 429)) 284 {*arm_jump}
     (nil)
 -> 429)
(barrier 1720 1719 387)
(code_label 387 1720 388 14 155 (nil) [1 uses])
(note 388 387 389 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 389 388 392 14 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 392 389 397 14 (set (reg/f:SI 486)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 397 392 398 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 398 397 399 14 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 399 398 400 14 (set (reg:SI 0 r0)
        (reg/f:SI 486)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 400 399 402 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 486)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 402 400 408 14 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 408 402 409 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 409 408 410 14 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 410 409 411 14 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))
        (nil)))
(call_insn 411 410 413 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 413 411 421 14 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 421 413 422 14 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 422 421 423 14 (set (reg:SI 1 r1)
        (reg/f:SI 486)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 486)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 423 422 424 14 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 888 [0x378])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 424 423 1721 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(jump_insn 1721 424 1722 14 (set (pc)
        (label_ref 426)) 284 {*arm_jump}
     (nil)
 -> 426)
(barrier 1722 1721 429)
(code_label 429 1722 430 15 156 (nil) [1 uses])
(note 430 429 431 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 431 430 434 15 (debug_marker) "../System/ray_funkcije.c":391:5 -1
     (nil))
(insn 434 431 439 15 (set (reg/f:SI 508)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":391:5 7 {*arm_addsi3}
     (expr_list:REG_EQUIV (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(insn 439 434 440 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 440 439 441 15 (set (reg:SI 1 r1)
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 441 440 442 15 (set (reg:SI 0 r0)
        (reg/f:SI 508)) "../System/ray_funkcije.c":391:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
            (const_int -444 [0xfffffffffffffe44]))
        (nil)))
(call_insn 442 441 444 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":391:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_RETURNED (reg/f:SI 508)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 444 442 450 15 (debug_marker) "../System/ray_funkcije.c":392:5 -1
     (nil))
(insn 450 444 451 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 451 450 452 15 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":392:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 452 451 453 15 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 1 r1)
            (const_int -444 [0xfffffffffffffe44]))) "../System/ray_funkcije.c":392:5 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(call_insn 453 452 455 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":392:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(debug_insn 455 453 463 15 (debug_marker) "../System/ray_funkcije.c":393:5 -1
     (nil))
(insn 463 455 464 15 (set (reg:SI 2 r2)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(insn 464 463 465 15 (set (reg:SI 1 r1)
        (reg/f:SI 508)) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 508)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 102 sfp)
                (const_int -444 [0xfffffffffffffe44]))
            (nil))))
(insn 465 464 466 15 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
                (const_int 444 [0x1bc])))) "../System/ray_funkcije.c":393:5 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 466 465 468 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>) [0 __builtin_memcpy S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":393:5 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("memcpy") [flags 0x41]  <function_decl 0000000005b2f200 __builtin_memcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (set (reg:SI 0 r0)
                (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 0 r0))
                (expr_list:SI (use (reg:SI 1 r1))
                    (expr_list:SI (use (reg:SI 2 r2))
                        (nil)))))))
(code_label 468 466 469 16 157 (nil) [1 uses])
(note 469 468 470 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 470 469 471 16 (var_location:SI j (const_int 1 [0x1])) -1
     (nil))
(debug_insn 471 470 472 16 (debug_marker) "../System/ray_funkcije.c":389:19 -1
     (nil))
(debug_insn 472 471 473 16 (debug_marker) "../System/ray_funkcije.c":388:41 -1
     (nil))
(debug_insn 473 472 474 16 (var_location:SI i (const_int 3 [0x3])) -1
     (nil))
(debug_insn 474 473 3 16 (debug_marker) "../System/ray_funkcije.c":388:18 -1
     (nil))
(insn 3 474 1550 16 (set (reg/v:SI 282 [ sprite ])
        (const_int 0 [0])) "../System/ray_funkcije.c":400:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1550 3 937 16 (set (reg:SI 306 [ ivtmp.180 ])
        (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>)
        (nil)))
(insn 937 1550 1556 16 (set (reg:SF 777)
        (const_double:SF 2.4e+2 [0x0.fp+8])) "../System/ray_funkcije.c":494:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.4e+2 [0x0.fp+8])
        (nil)))
(insn 1556 937 1557 16 (set (reg/f:SI 740)
        (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>)
        (nil)))
(insn 1557 1556 4 16 (set (reg/f:SI 739)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 4 1557 526 16 (set (reg/v:SI 245 [ indicate_led ])
        (reg/v:SI 282 [ sprite ])) "../System/ray_funkcije.c":398:10 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 526 4 559 16 (set (reg:DF 774)
        (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])) "../System/ray_funkcije.c":415:32 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 3.14158999999999988261834005243144929409027099609e+0 [0x0.c90fcf80dc337p+2])
        (nil)))
(insn 559 526 657 16 (set (reg:DF 775)
        (const_double:DF 5.75958166666666659949669337947852909564971923828e+0 [0x0.b84e7e361f2f28p+3])) "../System/ray_funkcije.c":422:6 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 5.75958166666666659949669337947852909564971923828e+0 [0x0.b84e7e361f2f28p+3])
        (nil)))
(insn 657 559 1841 16 (set (reg:DF 776)
        (const_double:DF 2.00000000000000011102230246251565404236316680908e-1 [0x0.ccccccccccccdp-2])) "../System/ray_funkcije.c":440:6 739 {*thumb2_movdf_vfp}
     (expr_list:REG_EQUIV (const_double:DF 2.00000000000000011102230246251565404236316680908e-1 [0x0.ccccccccccccdp-2])
        (nil)))
(insn 1841 657 1842 16 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 282 [ sprite ])) "../System/ray_funkcije.c":440:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 282 [ sprite ])
        (nil)))
(insn 1842 1841 1367 16 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 306 [ ivtmp.180 ])) "../System/ray_funkcije.c":440:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 306 [ ivtmp.180 ])
        (nil)))
(code_label 1367 1842 476 17 212 (nil) [1 uses])
(note 476 1367 502 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 502 476 510 17 NOTE_INSN_DELETED)
(note 510 502 477 17 NOTE_INSN_DELETED)
(debug_insn 477 510 478 17 (var_location:SI sprite (reg/v:SI 824 [orig:282 sprite ] [282])) -1
     (nil))
(debug_insn 478 477 479 17 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 479 478 480 17 (debug_marker) "../System/ray_funkcije.c":402:3 -1
     (nil))
(debug_insn 480 479 481 17 (var_location:QI draw (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 -1
     (nil))
(debug_insn 481 480 483 17 (debug_marker) "../System/ray_funkcije.c":404:3 -1
     (nil))
(insn 483 481 484 17 (set (reg/v:SF 261 [ sx ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])) "../System/ray_funkcije.c":404:9 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 484 483 485 17 (var_location:SF sx (reg/v:SF 261 [ sx ])) "../System/ray_funkcije.c":404:9 -1
     (nil))
(debug_insn 485 484 486 17 (debug_marker) "../System/ray_funkcije.c":405:3 -1
     (nil))
(debug_insn 486 485 487 17 (var_location:SF sy (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
            (const_int 12 [0xc])) [0 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":405:9 -1
     (nil))
(debug_insn 487 486 488 17 (debug_marker) "../System/ray_funkcije.c":407:3 -1
     (nil))
(debug_insn 488 487 489 17 (var_location:SF tx (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:9 -1
     (nil))
(debug_insn 489 488 490 17 (var_location:SF ty (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:17 -1
     (nil))
(debug_insn 490 489 491 17 (var_location:SF tx_step (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:25 -1
     (nil))
(debug_insn 491 490 492 17 (var_location:SF ty_step (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":407:38 -1
     (nil))
(debug_insn 492 491 493 17 (debug_marker) "../System/ray_funkcije.c":408:3 -1
     (nil))
(debug_insn 493 492 494 17 (var_location:SI pixel (const_int 0 [0])) "../System/ray_funkcije.c":408:7 -1
     (nil))
(debug_insn 494 493 495 17 (debug_marker) "../System/ray_funkcije.c":409:3 -1
     (nil))
(debug_insn 495 494 496 17 (var_location:QI red (const_int 0 [0])) "../System/ray_funkcije.c":409:11 -1
     (nil))
(debug_insn 496 495 497 17 (var_location:QI green (const_int 0 [0])) "../System/ray_funkcije.c":409:20 -1
     (nil))
(debug_insn 497 496 498 17 (var_location:QI blue (const_int 0 [0])) "../System/ray_funkcije.c":409:31 -1
     (nil))
(debug_insn 498 497 499 17 (debug_marker) "../System/ray_funkcije.c":412:3 -1
     (nil))
(insn 499 498 501 17 (set (reg:SF 529 [ MEM[base: _419, offset: 12B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":412:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])
        (nil)))
(insn 501 499 500 17 (set (reg:SF 530)
        (minus:SF (reg/v:SF 261 [ sx ])
            (reg:SF 301 [ pretmp_425 ]))) "../System/ray_funkcije.c":412:40 761 {*subsf3_vfp}
     (nil))
(insn 500 501 503 17 (set (reg:SF 528)
        (minus:SF (reg:SF 529 [ MEM[base: _419, offset: 12B] ])
            (reg:SF 300 [ pretmp_423 ]))) "../System/ray_funkcije.c":412:28 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 529 [ MEM[base: _419, offset: 12B] ])
        (expr_list:REG_DEAD (reg:SF 300 [ pretmp_423 ])
            (nil))))
(insn 503 500 504 17 (set (reg:SF 16 s0)
        (div:SF (reg:SF 528)
            (reg:SF 530))) "../System/ray_funkcije.c":412:18 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 530)
        (expr_list:REG_DEAD (reg:SF 528)
            (nil))))
(call_insn/u 504 503 1652 17 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("atanf") [flags 0x41]  <function_decl 0000000005acb700 atanf>) [0 __builtin_atanf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":412:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("atanf") [flags 0x41]  <function_decl 0000000005acb700 atanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1652 504 505 17 (set (reg:SF 792)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":412:18 737 {*thumb2_movsf_vfp}
     (nil))
(insn 505 1652 506 17 (set (reg/v:SF 247 [ sangle ])
        (reg:SF 792)) "../System/ray_funkcije.c":412:18 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 792)
        (nil)))
(debug_insn 506 505 507 17 (var_location:SF sangle (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":412:18 -1
     (nil))
(debug_insn 507 506 509 17 (debug_marker) "../System/ray_funkcije.c":414:3 -1
     (nil))
(call_insn/u 509 507 1653 17 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":414:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1653 509 511 17 (set (reg:SF 793)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":414:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 511 1653 514 17 (set (reg:SF 532)
        (plus:SF (reg:SF 793)
            (reg:SF 301 [ pretmp_425 ]))) "../System/ray_funkcije.c":414:15 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 793)
        (nil)))
(insn 514 511 512 17 (set (reg:SF 535)
        (minus:SF (reg:SF 301 [ pretmp_425 ])
            (reg/v:SF 261 [ sx ]))) "../System/ray_funkcije.c":414:46 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 301 [ pretmp_425 ])
        (nil)))
(insn 512 514 515 17 (set (reg:SF 533)
        (minus:SF (reg:SF 532)
            (reg/v:SF 261 [ sx ]))) "../System/ray_funkcije.c":414:30 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 532)
        (expr_list:REG_DEAD (reg/v:SF 261 [ sx ])
            (nil))))
(insn 515 512 513 17 (set (reg:SF 536)
        (abs:SF (reg:SF 535))) "../System/ray_funkcije.c":414:38 744 {*abssf2_vfp}
     (expr_list:REG_DEAD (reg:SF 535)
        (nil)))
(insn 513 515 1825 17 (set (reg:SF 534)
        (abs:SF (reg:SF 533))) "../System/ray_funkcije.c":414:7 744 {*abssf2_vfp}
     (expr_list:REG_DEAD (reg:SF 533)
        (nil)))
(insn 1825 513 1826 17 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 534)
            (reg:SF 536))) "../System/ray_funkcije.c":414:6 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 536)
        (expr_list:REG_DEAD (reg:SF 534)
            (nil))))
(insn 1826 1825 517 17 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":414:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 517 1826 521 17 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 537)
            (pc))) "../System/ray_funkcije.c":414:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 537)
(note 521 517 532 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 532 521 522 18 NOTE_INSN_DELETED)
(debug_insn 522 532 523 18 (debug_marker) "../System/ray_funkcije.c":415:4 -1
     (nil))
(insn 523 522 524 18 (set (reg:SF 0 r0)
        (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":415:32 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 247 [ sangle ])
        (nil)))
(call_insn/u 524 523 1625 18 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:32 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1625 524 528 18 (set (reg:DF 2 r2)
        (reg:DF 774)) "../System/ray_funkcije.c":415:32 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 528 1625 531 18 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:32 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 531 528 1654 18 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:13 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1654 531 533 18 (set (reg:SF 794)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 533 1654 534 18 (set (reg:SF 16 s0)
        (reg:SF 794)) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 794)
        (nil)))
(call_insn 534 533 1655 18 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>) [0 popraviKot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":415:13 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1655 534 535 18 (set (reg:SF 795)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 535 1655 536 18 (set (reg/v:SF 247 [ sangle ])
        (reg:SF 795)) "../System/ray_funkcije.c":415:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 795)
        (nil)))
(debug_insn 536 535 537 18 (var_location:SF sangle (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":415:13 -1
     (nil))
(code_label 537 536 538 19 159 (nil) [1 uses])
(note 538 537 543 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 543 538 562 19 NOTE_INSN_DELETED)
(note 562 543 563 19 NOTE_INSN_DELETED)
(note 563 562 539 19 NOTE_INSN_DELETED)
(debug_insn 539 563 540 19 (var_location:SF sangle (reg/v:SF 247 [ sangle ])) -1
     (nil))
(debug_insn 540 539 542 19 (debug_marker) "../System/ray_funkcije.c":418:3 -1
     (nil))
(insn 542 540 544 19 (set (reg:SF 541 [ angle ])
        (mem/c:SF (reg/f:SI 740) [1 angle+0 S4 A32])) "../System/ray_funkcije.c":418:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem/c:SF (reg/f:SI 740) [1 angle+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("angle") [flags 0xc0]  <var_decl 00000000059e43f0 angle>) [1 angle+0 S4 A32])
            (nil))))
(insn 544 542 545 19 (set (reg:SF 16 s0)
        (minus:SF (reg:SF 541 [ angle ])
            (reg/v:SF 247 [ sangle ]))) "../System/ray_funkcije.c":418:21 761 {*subsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 541 [ angle ])
        (nil)))
(call_insn 545 544 1656 19 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>) [0 popraviKot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":418:21 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("popraviKot") [flags 0x41]  <function_decl 0000000005e4c200 popraviKot>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1656 545 552 19 (set (reg:SF 796)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":418:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 552 1656 1566 19 (set (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) "../System/ray_funkcije.c":421:9 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1566 552 546 19 (set (reg/v:SF 263 [ dist ])
        (reg:SF 738 [ MEM[base: _419, offset: 36B] ])) "../System/ray_funkcije.c":421:9 737 {*thumb2_movsf_vfp}
     (nil))
(insn 546 1566 547 19 (set (reg/v:SF 248 [ angleDiff ])
        (reg:SF 796)) "../System/ray_funkcije.c":418:21 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 796)
        (nil)))
(debug_insn 547 546 548 19 (var_location:SF angleDiff (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":418:21 -1
     (nil))
(debug_insn 548 547 550 19 (debug_marker) "../System/ray_funkcije.c":419:3 -1
     (nil))
(insn 550 548 551 19 (set (mem/c:SF (reg/f:SI 739) [1 sprite_angle_diff+0 S4 A32])
        (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":419:21 737 {*thumb2_movsf_vfp}
     (nil))
(debug_insn 551 550 553 19 (debug_marker) "../System/ray_funkcije.c":421:3 -1
     (nil))
(debug_insn 553 551 554 19 (var_location:SF dist (reg:SF 738 [ MEM[base: _419, offset: 36B] ])) "../System/ray_funkcije.c":421:9 -1
     (nil))
(debug_insn 554 553 555 19 (debug_marker) "../System/ray_funkcije.c":422:3 -1
     (nil))
(insn 555 554 556 19 (set (reg:SF 0 r0)
        (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":422:18 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 556 555 1657 19 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:18 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1657 556 557 19 (set (reg:DF 797)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":422:18 739 {*thumb2_movdf_vfp}
     (nil))
(insn 557 1657 1626 19 (set (reg:DF 138 [ _37 ])
        (reg:DF 797)) "../System/ray_funkcije.c":422:18 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 797)
        (expr_list:REG_EQUAL (float_extend:DF (reg/v:SF 248 [ angleDiff ]))
            (nil))))
(insn 1626 557 561 19 (set (reg:DF 2 r2)
        (reg:DF 775)) "../System/ray_funkcije.c":422:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 561 1626 1658 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1658 561 564 19 (set (reg:SI 798)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":422:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 564 1658 565 19 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 798)
                        (const_int 0 [0]))
                    (label_ref 576)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":422:6 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 798)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 576)
(note 565 564 570 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(note 570 565 571 20 NOTE_INSN_DELETED)
(note 571 570 567 20 NOTE_INSN_DELETED)
(insn 567 571 568 20 (set (reg:DF 2 r2)
        (const_double:DF 5.23598333333333276762289187900023534893989562988e-1 [0x0.860a8a55e82248p+0])) "../System/ray_funkcije.c":422:32 739 {*thumb2_movdf_vfp}
     (nil))
(insn 568 567 569 20 (set (reg:DF 0 r0)
        (reg:DF 138 [ _37 ])) "../System/ray_funkcije.c":422:32 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 569 568 1659 20 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":422:32 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]  <function_decl 0000000005c75900 __aeabi_dcmplt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1659 569 572 20 (set (reg:SI 799)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":422:32 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 572 1659 576 20 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 799)
                        (const_int 0 [0]))
                    (label_ref:SI 1161)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":422:32 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 799)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1161)
(code_label 576 572 577 21 161 (nil) [1 uses])
(note 577 576 582 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 582 577 578 21 (set (reg:SF 550)
        (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":423:5 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 578 582 579 21 (set (reg/f:SI 547)
        (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)) "../System/ray_funkcije.c":423:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>)
        (nil)))
(insn 579 578 580 21 (set (reg:SI 139 [ Blocksize.77_39 ])
        (mem/c:SI (reg/f:SI 547) [3 Blocksize+0 S4 A32])) "../System/ray_funkcije.c":423:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 547)
        (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:SI ("Blocksize") [flags 0xc0]  <var_decl 00000000059e47e0 Blocksize>) [3 Blocksize+0 S4 A32])
            (nil))))
(insn 580 579 581 21 (set (reg:SF 548)
        (float:SF (reg:SI 139 [ Blocksize.77_39 ]))) "../System/ray_funkcije.c":423:13 809 {*floatsisf2_vfp}
     (nil))
(insn 581 580 1823 21 (set (reg:SF 549)
        (div:SF (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
            (reg:SF 548))) "../System/ray_funkcije.c":423:13 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 548)
        (nil)))
(insn 1823 581 1824 21 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 549)
            (reg:SF 550))) "../System/ray_funkcije.c":423:5 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 550)
        (expr_list:REG_DEAD (reg:SF 549)
            (nil))))
(insn 1824 1823 584 21 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":423:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 584 1824 588 21 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1161)
            (pc))) "../System/ray_funkcije.c":423:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 783831532 (nil)))
 -> 1161)
(note 588 584 589 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 589 588 590 22 (var_location:QI d (const_int 0 [0])) -1
     (nil))
(debug_insn 590 589 1821 22 (debug_marker) "../System/ray_funkcije.c":426:24 -1
     (nil))
(insn 1821 590 1822 22 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":426:4 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1822 1821 593 22 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":426:4 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 593 1822 597 22 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1723)
            (pc))) "../System/ray_funkcije.c":426:4 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 59055804 (nil)))
 -> 1723)
(note 597 593 598 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 23 (set (reg:SF 16 s0)
        (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":427:26 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 599 598 1660 23 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":427:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1660 599 600 23 (set (reg:SF 800)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":427:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 600 1660 603 23 (set (reg:SF 142 [ _42 ])
        (reg:SF 800)) "../System/ray_funkcije.c":427:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 800)
        (nil)))
(insn 603 600 604 23 (set (reg:SF 16 s0)
        (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":428:9 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 604 603 1661 23 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":428:9 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1661 604 605 23 (set (reg:SF 801)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":428:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 605 1661 602 23 (set (reg:SF 147 [ _48 ])
        (reg:SF 801)) "../System/ray_funkcije.c":428:9 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 801)
        (nil)))
(insn 602 605 607 23 (set (reg:SF 143 [ py.78_44 ])
        (mem/c:SF (reg/f:SI 746) [1 py+0 S4 A32])) "../System/ray_funkcije.c":427:24 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 607 602 6 23 (set (reg:SF 148 [ px.80_50 ])
        (mem/c:SF (reg/f:SI 745) [1 px+0 S4 A32])) "../System/ray_funkcije.c":428:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(insn 6 607 1558 23 (set (reg:SF 154 [ _56 ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":426:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1558 6 5 23 (set (reg/f:SI 744)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 5 1558 618 23 (set (reg/v:SI 264 [ d ])
        (const_int 0 [0])) "../System/ray_funkcije.c":426:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 618 5 1843 23 (set (reg:SI 560)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 1843 618 1844 23 (set (reg:DF 849 [orig:138 _37 ] [138])
        (reg:DF 138 [ _37 ])) "../System/ray_funkcije.c":427:57 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 138 [ _37 ])
        (nil)))
(insn 1844 1843 1845 23 (set (reg:SI 850 [orig:139 Blocksize.77_39 ] [139])
        (reg:SI 139 [ Blocksize.77_39 ])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 139 [ Blocksize.77_39 ])
        (nil)))
(insn 1845 1844 1846 23 (set (reg/v:SF 851 [orig:248 angleDiff ] [248])
        (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":427:57 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 248 [ angleDiff ])
        (nil)))
(insn 1846 1845 1847 23 (set (reg/v:SI 852 [orig:264 d ] [264])
        (reg/v:SI 264 [ d ])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 264 [ d ])
        (nil)))
(insn 1847 1846 1848 23 (set (reg/v:SI 853 [orig:282 sprite ] [282])
        (reg/v:SI 824 [orig:282 sprite ] [282])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 824 [orig:282 sprite ] [282])
        (nil)))
(insn 1848 1847 1849 23 (set (reg:SI 854 [orig:306 ivtmp.180 ] [306])
        (reg:SI 825 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1849 1848 632 23 (set (reg/f:SI 855 [744])
        (reg/f:SI 744)) "../System/ray_funkcije.c":427:57 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 744)
        (nil)))
(code_label 632 1849 608 24 167 (nil) [1 uses])
(note 608 632 619 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 619 608 623 24 NOTE_INSN_DELETED)
(note 623 619 609 24 NOTE_INSN_DELETED)
(debug_insn 609 623 610 24 (var_location:QI d (subreg:QI (reg/v:SI 852 [orig:264 d ] [264]) 0)) -1
     (nil))
(debug_insn 610 609 626 24 (debug_marker) "../System/ray_funkcije.c":427:5 -1
     (nil))
(debug_insn 626 610 611 24 (debug_marker) "../System/ray_funkcije.c":426:34 -1
     (nil))
(insn 611 626 614 24 (set (reg:SF 144 [ _45 ])
        (fma:SF (reg:SF 142 [ _42 ])
            (reg:SF 154 [ _56 ])
            (reg:SF 143 [ py.78_44 ]))) "../System/ray_funkcije.c":427:24 788 {fmasf4}
     (nil))
(insn 614 611 627 24 (set (reg:SF 149 [ _51 ])
        (fma:SF (reg:SF 147 [ _48 ])
            (reg:SF 154 [ _56 ])
            (reg:SF 148 [ px.80_50 ]))) "../System/ray_funkcije.c":428:7 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 154 [ _56 ])
        (nil)))
(insn 627 614 628 24 (set (reg:SI 564)
        (plus:SI (reg/v:SI 852 [orig:264 d ] [264])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":426:36 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 852 [orig:264 d ] [264])
        (nil)))
(insn 628 627 629 24 (set (reg/v:SI 852 [orig:264 d ] [264])
        (zero_extend:SI (subreg:QI (reg:SI 564) 0))) "../System/ray_funkcije.c":426:36 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 564)
        (nil)))
(debug_insn 629 628 630 24 (var_location:QI d (subreg:QI (reg/v:SI 852 [orig:264 d ] [264]) 0)) -1
     (nil))
(debug_insn 630 629 612 24 (debug_marker) "../System/ray_funkcije.c":426:24 -1
     (nil))
(insn 612 630 613 24 (set (reg:SI 554)
        (fix:SI (fix:SF (reg:SF 144 [ _45 ])))) "../System/ray_funkcije.c":427:14 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 144 [ _45 ])
        (nil)))
(insn 613 612 620 24 (set (reg:SI 146 [ _47 ])
        (div:SI (reg:SI 554)
            (reg:SI 850 [orig:139 Blocksize.77_39 ] [139]))) "../System/ray_funkcije.c":427:44 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 554)
        (nil)))
(insn 620 613 631 24 (set (reg:SI 561)
        (plus:SI (mult:SI (reg:SI 560)
                (reg:SI 146 [ _47 ]))
            (reg/f:SI 855 [744]))) "../System/ray_funkcije.c":427:57 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 146 [ _47 ])
        (nil)))
(insn 631 620 616 24 (set (reg:SF 154 [ _56 ])
        (float:SF (reg/v:SI 852 [orig:264 d ] [264]))) "../System/ray_funkcije.c":426:26 809 {*floatsisf2_vfp}
     (nil))
(insn 616 631 617 24 (set (reg:SI 556)
        (fix:SI (fix:SF (reg:SF 149 [ _51 ])))) "../System/ray_funkcije.c":427:59 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 149 [ _51 ])
        (nil)))
(insn 617 616 622 24 (set (reg:SI 558)
        (div:SI (reg:SI 556)
            (reg:SI 850 [orig:139 Blocksize.77_39 ] [139]))) "../System/ray_funkcije.c":428:27 162 {divsi3}
     (expr_list:REG_DEAD (reg:SI 556)
        (nil)))
(insn 622 617 624 24 (set (reg:SI 563 [ map[_47][_53] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 561)
                    (reg:SI 558)) [0 map[_47][_53]+0 S1 A8]))) "../System/ray_funkcije.c":427:8 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 561)
        (expr_list:REG_DEAD (reg:SI 558)
            (nil))))
(jump_insn 624 622 625 24 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 563 [ map[_47][_53] ])
                        (const_int 0 [0]))
                    (label_ref:SI 1452)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":427:8 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 563 [ map[_47][_53] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 59055804 (nil))))
 -> 1452)
(note 625 624 1819 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 1819 625 1820 25 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 154 [ _56 ])
            (reg:SF 738 [ MEM[base: _419, offset: 36B] ]))) "../System/ray_funkcije.c":426:4 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1820 1819 634 25 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":426:4 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 634 1820 1444 25 (set (pc)
        (if_then_else (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 632)
            (pc))) "../System/ray_funkcije.c":426:4 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 1014686028 (nil)))
 -> 632)
(note 1444 634 1850 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 1850 1444 1851 26 (set (reg:DF 138 [ _37 ])
        (reg:DF 849 [orig:138 _37 ] [138])) "../System/ray_funkcije.c":402:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 849 [orig:138 _37 ] [138])
        (nil)))
(insn 1851 1850 1852 26 (set (reg/v:SF 248 [ angleDiff ])
        (reg/v:SF 851 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":402:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 851 [orig:248 angleDiff ] [248])
        (nil)))
(insn 1852 1851 1853 26 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 853 [orig:282 sprite ] [282])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 853 [orig:282 sprite ] [282])
        (nil)))
(insn 1853 1852 9 26 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 854 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 854 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 9 1853 1724 26 (set (reg/v:SI 246 [ draw ])
        (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1724 9 1725 26 (set (pc)
        (label_ref 635)) 284 {*arm_jump}
     (nil)
 -> 635)
(barrier 1725 1724 1723)
(code_label 1723 1725 1447 27 248 (nil) [1 uses])
(note 1447 1723 8 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 8 1447 1726 27 (set (reg/v:SI 246 [ draw ])
        (const_int 1 [0x1])) "../System/ray_funkcije.c":402:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1726 8 1727 27 (set (pc)
        (label_ref 635)) 284 {*arm_jump}
     (nil)
 -> 635)
(barrier 1727 1726 1452)
(code_label 1452 1727 1451 28 216 (nil) [1 uses])
(note 1451 1452 1854 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 1854 1451 1855 28 (set (reg:DF 138 [ _37 ])
        (reg:DF 849 [orig:138 _37 ] [138])) "../System/ray_funkcije.c":429:11 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 849 [orig:138 _37 ] [138])
        (nil)))
(insn 1855 1854 1856 28 (set (reg/v:SF 248 [ angleDiff ])
        (reg/v:SF 851 [orig:248 angleDiff ] [248])) "../System/ray_funkcije.c":429:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 851 [orig:248 angleDiff ] [248])
        (nil)))
(insn 1856 1855 1857 28 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 853 [orig:282 sprite ] [282])) "../System/ray_funkcije.c":429:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 853 [orig:282 sprite ] [282])
        (nil)))
(insn 1857 1856 7 28 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 854 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":429:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 854 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 7 1857 635 28 (set (reg/v:SI 246 [ draw ])
        (const_int 0 [0])) "../System/ray_funkcije.c":429:11 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(code_label 635 7 636 29 165 (nil) [2 uses])
(note 636 635 649 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 649 636 660 29 NOTE_INSN_DELETED)
(note 660 649 661 29 NOTE_INSN_DELETED)
(note 661 660 637 29 NOTE_INSN_DELETED)
(debug_insn 637 661 638 29 (var_location:QI draw (subreg:QI (reg/v:SI 246 [ draw ]) 0)) -1
     (nil))
(debug_insn 638 637 647 29 (debug_marker) "../System/ray_funkcije.c":435:4 -1
     (nil))
(insn 647 638 639 29 (set (reg:SF 16 s0)
        (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":439:26 737 {*thumb2_movsf_vfp}
     (nil))
(insn 639 647 1584 29 (set (reg:SI 155 [ _57 ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 24 [0x18])) [0 MEM[base: _419, offset: 24B]+0 S1 A32]))) "../System/ray_funkcije.c":435:18 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1584 639 1585 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 155 [ _57 ])
            (const_int 0 [0]))) "../System/ray_funkcije.c":436:10 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 155 [ _57 ])
        (nil)))
(insn 1585 1584 645 29 (set (reg/v:SI 246 [ draw ])
        (if_then_else:SI (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (reg/v:SI 246 [ draw ])
            (const_int 0 [0]))) "../System/ray_funkcije.c":436:10 986 {*thumb2_movsicc_insn}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil)))
(debug_insn 645 1585 646 29 (var_location:QI draw (subreg:QI (reg/v:SI 246 [ draw ]) 0)) -1
     (nil))
(debug_insn 646 645 648 29 (debug_marker) "../System/ray_funkcije.c":439:4 -1
     (nil))
(call_insn/u 648 646 1662 29 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":439:26 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1662 648 650 29 (set (reg:SF 802)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":439:26 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 650 1662 651 29 (set (reg/v:SF 265 [ factor ])
        (mult:SF (reg:SF 802)
            (reg:SF 738 [ MEM[base: _419, offset: 36B] ]))) "../System/ray_funkcije.c":439:10 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 802)
        (nil)))
(debug_insn 651 650 652 29 (var_location:SF factor (reg/v:SF 265 [ factor ])) "../System/ray_funkcije.c":439:10 -1
     (nil))
(debug_insn 652 651 653 29 (debug_marker) "../System/ray_funkcije.c":440:4 -1
     (nil))
(insn 653 652 654 29 (set (reg:SF 0 r0)
        (reg/v:SF 265 [ factor ])) "../System/ray_funkcije.c":440:14 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 654 653 1627 29 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":440:14 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1627 654 659 29 (set (reg:DF 2 r2)
        (reg:DF 776)) "../System/ray_funkcije.c":440:6 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 659 1627 1663 29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":440:6 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmple") [flags 0x41]  <function_decl 0000000005c75b00 __aeabi_dcmple>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1663 659 662 29 (set (reg:SI 803)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":440:6 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 662 1663 663 29 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 803)
                        (const_int 0 [0]))
                    (label_ref:SI 1456)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":440:6 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 803)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1456)
(note 663 662 664 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 664 663 665 30 (var_location:SF factor (reg/v:SF 265 [ factor ])) -1
     (nil))
(debug_insn 665 664 666 30 (debug_marker) "../System/ray_funkcije.c":441:4 -1
     (nil))
(insn 666 665 667 30 (set (reg:SF 568)
        (const_double:SF 1.5e+1 [0x0.fp+4])) "../System/ray_funkcije.c":441:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 667 666 668 30 (set (reg/v:SF 249 [ scaling ])
        (div:SF (reg:SF 568)
            (reg/v:SF 265 [ factor ]))) "../System/ray_funkcije.c":441:10 764 {*divsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 568)
        (expr_list:REG_EQUAL (div:SF (const_double:SF 1.5e+1 [0x0.fp+4])
                (reg/v:SF 265 [ factor ]))
            (nil))))
(debug_insn 668 667 669 30 (var_location:SF scaling (reg/v:SF 249 [ scaling ])) "../System/ray_funkcije.c":441:10 -1
     (nil))
(debug_insn 669 668 670 30 (debug_marker) "../System/ray_funkcije.c":442:4 -1
     (nil))
(insn 670 669 1817 30 (set (reg:SF 569)
        (const_double:SF 7.0e+0 [0x0.ep+3])) "../System/ray_funkcije.c":442:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.0e+0 [0x0.ep+3])
        (nil)))
(insn 1817 670 1818 30 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 249 [ scaling ])
            (reg:SF 569))) "../System/ray_funkcije.c":442:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1818 1817 672 30 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":442:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 672 1818 673 30 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1460)
            (pc))) "../System/ray_funkcije.c":442:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1460)
(note 673 672 674 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 674 673 1815 31 (debug_marker) "../System/ray_funkcije.c":443:9 -1
     (nil))
(insn 1815 674 1816 31 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 265 [ factor ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":443:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1816 1815 677 31 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":443:11 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 677 1816 678 31 (set (pc)
        (if_then_else (le (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1464)
            (pc))) "../System/ray_funkcije.c":443:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 1464)
(note 678 677 679 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 32 (set (reg:SF 571)
        (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3])) "../System/ray_funkcije.c":451:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3])
        (nil)))
(insn 680 679 1728 32 (set (reg:SF 302 [ _440 ])
        (mult:SF (reg/v:SF 265 [ factor ])
            (reg:SF 571))) "../System/ray_funkcije.c":451:12 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 571)
        (expr_list:REG_DEAD (reg/v:SF 265 [ factor ])
            (expr_list:REG_EQUAL (mult:SF (reg/v:SF 265 [ factor ])
                    (const_double:SF 6.6666670143604278564453125e-2 [0x0.888889p-3]))
                (nil)))))
(jump_insn 1728 680 1729 32 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1729 1728 1456)
(code_label 1456 1729 1455 33 217 (nil) [1 uses])
(note 1455 1456 13 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 13 1455 14 33 (set (reg:SF 302 [ _440 ])
        (const_double:SF 1.4285714924335479736328125e-1 [0x0.924925p-2])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 14 13 1730 33 (set (reg/v:SF 249 [ scaling ])
        (const_double:SF 7.0e+0 [0x0.ep+3])) "../System/ray_funkcije.c":442:29 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1730 14 1731 33 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1731 1730 1460)
(code_label 1460 1731 1459 34 218 (nil) [1 uses])
(note 1459 1460 11 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 11 1459 12 34 (set (reg:SF 302 [ _440 ])
        (const_double:SF 1.4285714924335479736328125e-1 [0x0.924925p-2])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 12 11 1732 34 (set (reg/v:SF 249 [ scaling ])
        (reg:SF 569)) "../System/ray_funkcije.c":442:29 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 569)
        (expr_list:REG_EQUAL (const_double:SF 7.0e+0 [0x0.ep+3])
            (nil))))
(jump_insn 1732 12 1733 34 (set (pc)
        (label_ref 681)) 284 {*arm_jump}
     (nil)
 -> 681)
(barrier 1733 1732 1464)
(code_label 1464 1733 1463 35 219 (nil) [1 uses])
(note 1463 1464 16 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 16 1463 15 35 (set (reg/v:SF 249 [ scaling ])
        (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])) "../System/ray_funkcije.c":443:34 737 {*thumb2_movsf_vfp}
     (nil))
(insn 15 16 681 35 (set (reg:SF 302 [ _440 ])
        (const_double:SF 5.0e+0 [0x0.ap+3])) 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 681 15 682 36 169 (nil) [3 uses])
(note 682 681 697 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 697 682 698 36 NOTE_INSN_DELETED)
(note 698 697 683 36 NOTE_INSN_DELETED)
(debug_insn 683 698 684 36 (var_location:SF factor (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 684 683 685 36 (var_location:SF scaling (reg/v:SF 249 [ scaling ])) -1
     (nil))
(debug_insn 685 684 686 36 (debug_marker) "../System/ray_funkcije.c":445:4 -1
     (nil))
(insn 686 685 687 36 (set (reg:SI 158 [ _60 ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":445:50 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(debug_insn 687 686 688 36 (var_location:SI D#52 (zero_extend:SI (subreg:HI (reg:SI 158 [ _60 ]) 0))) "../System/ray_funkcije.c":445:50 -1
     (nil))
(debug_insn 688 687 689 36 (var_location:SF D#51 (float:SF (debug_expr:SI D#52))) "../System/ray_funkcije.c":445:38 -1
     (nil))
(debug_insn 689 688 690 36 (var_location:SF D#50 (mult:SF (debug_expr:SF D#51)
        (const_double:SF 5.0e-1 [0x0.8p+0]))) -1
     (nil))
(debug_insn 690 689 691 36 (var_location:SF D#49 (mult:SF (reg/v:SF 249 [ scaling ])
        (debug_expr:SF D#50))) "../System/ray_funkcije.c":445:57 -1
     (nil))
(debug_insn 691 690 692 36 (var_location:SF sy (minus:SF (const_double:SF 1.2e+2 [0x0.fp+7])
        (debug_expr:SF D#49))) "../System/ray_funkcije.c":445:10 -1
     (nil))
(debug_insn 692 691 694 36 (debug_marker) "../System/ray_funkcije.c":446:4 -1
     (nil))
(insn 694 692 695 36 (set (reg:DF 2 r2)
        (const_double:DF 5.23598333333333276762289187900023534893989562988e-1 [0x0.860a8a55e82248p+0])) "../System/ray_funkcije.c":446:7 739 {*thumb2_movdf_vfp}
     (nil))
(insn 695 694 696 36 (set (reg:DF 0 r0)
        (reg:DF 138 [ _37 ])) "../System/ray_funkcije.c":446:7 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 696 695 1664 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":446:7 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dcmpgt") [flags 0x41]  <function_decl 0000000005c75d00 __aeabi_dcmpgt>)
                (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1664 696 699 36 (set (reg:SI 804)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":446:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(jump_insn 699 1664 703 36 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 804)
                        (const_int 0 [0]))
                    (label_ref:SI 714)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":446:7 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 804)
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 714)
(note 703 699 704 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 704 703 706 37 (debug_marker) "../System/ray_funkcije.c":447:5 -1
     (nil))
(insn 706 704 705 37 (set (reg:DF 0 r0)
        (reg:DF 138 [ _37 ])) "../System/ray_funkcije.c":447:15 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 138 [ _37 ])
        (nil)))
(insn 705 706 707 37 (set (reg:DF 2 r2)
        (const_double:DF 6.28317999999999976523668010486289858818054199219e+0 [0x0.c90fcf80dc337p+3])) "../System/ray_funkcije.c":447:15 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 707 705 710 37 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":447:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 710 707 1665 37 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":447:15 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1665 710 711 37 (set (reg:SF 805)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":447:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 711 1665 713 37 (set (reg/v:SF 248 [ angleDiff ])
        (reg:SF 805)) "../System/ray_funkcije.c":447:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 805)
        (nil)))
(debug_insn 713 711 714 37 (var_location:SF angleDiff (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":447:15 -1
     (nil))
(code_label 714 713 715 38 170 (nil) [1 uses])
(note 715 714 728 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(note 728 715 740 38 NOTE_INSN_DELETED)
(note 740 728 743 38 NOTE_INSN_DELETED)
(note 743 740 716 38 NOTE_INSN_DELETED)
(debug_insn 716 743 717 38 (var_location:SF angleDiff (reg/v:SF 248 [ angleDiff ])) -1
     (nil))
(debug_insn 717 716 722 38 (debug_marker) "../System/ray_funkcije.c":448:4 -1
     (nil))
(insn 722 717 723 38 (set (reg:SF 20 s4)
        (reg/v:SF 248 [ angleDiff ])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 248 [ angleDiff ])
        (nil)))
(insn 723 722 724 38 (set (reg:SF 19 s3)
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 724 723 725 38 (set (reg:SF 18 s2)
        (const_double:SF 1.0471966266632080078125e+0 [0x0.860a8ap+1])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 725 724 726 38 (set (reg:SF 17 s1)
        (const_double:SF 5.2359831333160400390625e-1 [0x0.860a8ap+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(insn 726 725 727 38 (set (reg:SF 16 s0)
        (const_double:SF -5.2359831333160400390625e-1 [-0x0.860a8ap+0])) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn 727 726 1666 38 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("map_range") [flags 0x41]  <function_decl 0000000005e4c600 map_range>) [0 map_range S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:16 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SF 20 s4)
        (expr_list:REG_DEAD (reg:SF 19 s3)
            (expr_list:REG_DEAD (reg:SF 18 s2)
                (expr_list:REG_DEAD (reg:SF 17 s1)
                    (expr_list:REG_CALL_DECL (symbol_ref:SI ("map_range") [flags 0x41]  <function_decl 0000000005e4c600 map_range>)
                        (nil))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (expr_list:SF (use (reg:SF 17 s1))
                (expr_list:SF (use (reg:SF 18 s2))
                    (expr_list:SF (use (reg:SF 19 s3))
                        (expr_list:SF (use (reg:SF 20 s4))
                            (nil))))))))
(insn 1666 727 732 38 (set (reg:SF 806)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 732 1666 729 38 (set (reg:SF 0 r0)
        (reg:SF 806)) "../System/ray_funkcije.c":448:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 806)
        (nil)))
(insn 729 732 730 38 (set (reg:SI 580 [ MEM[base: _419, offset: 20B] ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":449:51 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 730 729 731 38 (set (reg:SF 581)
        (float:SF (reg:SI 580 [ MEM[base: _419, offset: 20B] ]))) "../System/ray_funkcije.c":449:39 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 580 [ MEM[base: _419, offset: 20B] ])
        (nil)))
(insn 731 730 733 38 (set (reg:SF 168 [ _72 ])
        (mult:SF (reg:SF 581)
            (reg/v:SF 249 [ scaling ]))) "../System/ray_funkcije.c":449:39 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 581)
        (nil)))
(call_insn/u 733 731 735 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:16 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 735 733 737 38 (set (reg:DF 2 r2)
        (const_double:DF 2.29183311635191131472311099059879779815673828125e+2 [0x0.e52eed82e61f48p+8])) "../System/ray_funkcije.c":449:18 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 737 735 1667 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:18 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1667 737 739 38 (set (reg:DF 807)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":449:18 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 739 1667 738 38 (set (reg:SF 585)
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":449:58 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 738 739 741 38 (set (reg:DF 583)
        (reg:DF 807)) "../System/ray_funkcije.c":449:18 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 807)
        (nil)))
(insn 741 738 742 38 (set (reg:SF 0 r0)
        (mult:SF (reg:SF 168 [ _72 ])
            (reg:SF 585))) "../System/ray_funkcije.c":449:58 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 585)
        (nil)))
(call_insn/u 742 741 1668 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:58 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1668 742 744 38 (set (reg:DF 808)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":449:58 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 744 1668 745 38 (set (reg:DF 2 r2)
        (reg:DF 808)) "../System/ray_funkcije.c":449:29 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 808)
        (nil)))
(insn 745 744 746 38 (set (reg:DF 0 r0)
        (reg:DF 583)) "../System/ray_funkcije.c":449:29 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 583)
        (nil)))
(call_insn/u 746 745 749 38 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":449:29 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dsub") [flags 0x41]  <function_decl 0000000005c75700 __aeabi_dsub>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 749 746 1669 38 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":448:10 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1669 749 750 38 (set (reg:SF 809)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":448:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 750 1669 752 38 (set (reg/v:SF 267 [ sx ])
        (reg:SF 809)) "../System/ray_funkcije.c":448:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 809)
        (nil)))
(debug_insn 752 750 753 38 (var_location:SF sx (reg/v:SF 267 [ sx ])) "../System/ray_funkcije.c":448:10 -1
     (nil))
(debug_insn 753 752 766 38 (debug_marker) "../System/ray_funkcije.c":450:4 -1
     (nil))
(insn 766 753 754 38 (set (reg:SF 592)
        (const_double:SF 1.2e+2 [0x0.fp+7])) "../System/ray_funkcije.c":455:7 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.2e+2 [0x0.fp+7])
        (nil)))
(insn 754 766 755 38 (set (reg/f:SI 589)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) "../System/ray_funkcije.c":450:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))
(insn 755 754 756 38 (set (mem/c:SF (reg/f:SI 589) [1 sprite_x+0 S4 A32])
        (reg/v:SF 267 [ sx ])) "../System/ray_funkcije.c":450:13 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/f:SI 589)
        (nil)))
(debug_insn 756 755 757 38 (debug_marker) "../System/ray_funkcije.c":451:4 -1
     (nil))
(debug_insn 757 756 758 38 (var_location:SF D#41 (div:SF (const_double:SF 1.0e+0 [0x0.8p+1])
        (reg/v:SF 249 [ scaling ]))) "../System/ray_funkcije.c":451:12 -1
     (nil))
(debug_insn 758 757 759 38 (var_location:SF tx_step (debug_expr:SF D#41)) "../System/ray_funkcije.c":451:12 -1
     (nil))
(debug_insn 759 758 760 38 (debug_marker) "../System/ray_funkcije.c":452:4 -1
     (nil))
(debug_insn 760 759 761 38 (var_location:SF ty_step (debug_expr:SF D#41)) "../System/ray_funkcije.c":452:12 -1
     (nil))
(debug_insn 761 760 762 38 (debug_marker) "../System/ray_funkcije.c":453:4 -1
     (nil))
(insn 762 761 764 38 (set (reg/f:SI 590)
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) "../System/ray_funkcije.c":453:16 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])
        (nil)))
(insn 764 762 765 38 (set (mem/c:QI (reg/f:SI 590) [0 sprite_draw+0 S1 A8])
        (subreg/s/v:QI (reg/v:SI 246 [ draw ]) 0)) "../System/ray_funkcije.c":453:16 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg/f:SI 590)
        (nil)))
(debug_insn 765 764 1813 38 (debug_marker) "../System/ray_funkcije.c":455:4 -1
     (nil))
(insn 1813 765 1814 38 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 267 [ sx ])
            (reg:SF 592))) "../System/ray_funkcije.c":455:7 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1814 1813 768 38 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":455:7 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 768 1814 772 38 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 798)
            (pc))) "../System/ray_funkcije.c":455:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 798)
(note 772 768 773 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 1811 39 (set (reg:SF 593)
        (plus:SF (reg:SF 168 [ _72 ])
            (reg/v:SF 267 [ sx ]))) "../System/ray_funkcije.c":456:11 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 168 [ _72 ])
        (nil)))
(insn 1811 773 1812 39 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 593)
            (reg:SF 592))) "../System/ray_funkcije.c":456:5 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 593)
        (expr_list:REG_DEAD (reg:SF 592)
            (nil))))
(insn 1812 1811 776 39 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":456:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 776 1812 780 39 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 798)
            (pc))) "../System/ray_funkcije.c":456:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 798)
(note 780 776 781 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 40 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 246 [ draw ])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":457:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 782 781 783 40 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1405)
            (pc))) "../System/ray_funkcije.c":457:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 1405)
(note 783 782 786 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 786 783 787 41 (set (reg:SI 595 [ MEM[base: _419, offset: 28B] ])
        (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":457:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
        (nil)))
(insn 787 786 788 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 595 [ MEM[base: _419, offset: 28B] ])
            (const_int 0 [0]))) "../System/ray_funkcije.c":457:18 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 595 [ MEM[base: _419, offset: 28B] ])
        (nil)))
(jump_insn 788 787 789 41 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1396)
            (pc))) "../System/ray_funkcije.c":457:18 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 1396)
(note 789 788 790 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 790 789 792 42 (debug_marker) "../System/ray_funkcije.c":459:6 -1
     (nil))
(insn 792 790 793 42 (set (mem:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg/v:SI 246 [ draw ])) "../System/ray_funkcije.c":459:21 728 {*thumb2_movsi_vfp}
     (nil))
(debug_insn 793 792 794 42 (debug_marker) "../System/ray_funkcije.c":463:5 -1
     (nil))
(debug_insn 794 793 795 42 (var_location:QI indicate_led (const_int 1 [0x1])) -1
     (nil))
(debug_insn 795 794 17 42 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(insn 17 795 1734 42 (set (reg/v:SI 245 [ indicate_led ])
        (reg/v:SI 246 [ draw ])) "../System/ray_funkcije.c":463:18 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 246 [ draw ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
(jump_insn 1734 17 1735 42 (set (pc)
        (label_ref 807)) 284 {*arm_jump}
     (nil)
 -> 807)
(barrier 1735 1734 798)
(code_label 798 1735 799 43 172 (nil) [2 uses])
(note 799 798 800 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(debug_insn 800 799 801 43 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 801 800 802 43 (set (reg:SI 597)
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 802 801 803 43 (set (mem:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 597)) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 597)
        (nil)))
(debug_insn 803 802 804 43 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 804 803 805 43 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(insn 805 804 806 43 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 246 [ draw ])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":467:7 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/v:SI 246 [ draw ])
        (nil)))
(jump_insn 806 805 1573 43 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 807)
            (pc))) "../System/ray_funkcije.c":467:7 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1145324 (nil)))
 -> 807)
(note 1573 806 1559 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 1559 1573 1736 44 (set (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1736 1559 1737 44 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1737 1736 807)
(code_label 807 1737 808 45 177 (nil) [3 uses])
(note 808 807 809 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(note 809 808 810 45 NOTE_INSN_DELETED)
(note 810 809 811 45 NOTE_INSN_DELETED)
(note 811 810 812 45 NOTE_INSN_DELETED)
(insn 812 811 813 45 (set (reg:SF 600)
        (mult:SF (float:SF (reg:SI 158 [ _60 ]))
            (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":445:10 832 {*combine_vcvt_f32_s32}
     (expr_list:REG_DEAD (reg:SI 158 [ _60 ])
        (nil)))
(insn 813 812 821 45 (set (reg:SF 602)
        (const_double:SF 1.2e+2 [0x0.fp+7])) "../System/ray_funkcije.c":445:10 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.2e+2 [0x0.fp+7])
        (nil)))
(insn 821 813 814 45 (set (reg:SF 16 s0)
        (reg:SF 738 [ MEM[base: _419, offset: 36B] ])) "../System/ray_funkcije.c":469:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (nil)))
(insn 814 821 815 45 (set (reg/v:SF 266 [ sy ])
        (fma:SF (neg:SF (reg/v:SF 249 [ scaling ]))
            (reg:SF 600)
            (reg:SF 602))) "../System/ray_funkcije.c":445:10 791 {*fmsubsf4}
     (expr_list:REG_DEAD (reg:SF 602)
        (expr_list:REG_DEAD (reg:SF 600)
            (nil))))
(debug_insn 815 814 816 45 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 816 815 817 45 (debug_marker) "../System/ray_funkcije.c":468:5 -1
     (nil))
(insn 817 816 819 45 (set (reg:SI 603)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":468:22 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(insn 819 817 820 45 (set (mem:QI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 440 [0x1b8])) [0 MEM[base: _419, offset: 440B]+0 S1 A32])
        (subreg:QI (reg:SI 603) 0)) "../System/ray_funkcije.c":468:22 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 603)
        (nil)))
(debug_insn 820 819 822 45 (debug_marker) "../System/ray_funkcije.c":469:5 -1
     (nil))
(call_insn 822 820 1670 45 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>) [0 visibility S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":469:17 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("visibility") [flags 0x41]  <function_decl 0000000005e4c400 visibility>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1670 822 823 45 (set (reg:SF 810)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":469:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 823 1670 824 45 (set (reg/v:SF 268 [ vis ])
        (reg:SF 810)) "../System/ray_funkcije.c":469:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 810)
        (nil)))
(debug_insn 824 823 825 45 (var_location:SF vis (reg/v:SF 268 [ vis ])) "../System/ray_funkcije.c":469:17 -1
     (nil))
(debug_insn 825 824 826 45 (debug_marker) "../System/ray_funkcije.c":470:5 -1
     (nil))
(debug_insn 826 825 827 45 (var_location:SF add_red (const_double:SF 7.5e+1 [0x0.96p+7])) "../System/ray_funkcije.c":470:11 -1
     (nil))
(debug_insn 827 826 828 45 (debug_marker) "../System/ray_funkcije.c":472:5 -1
     (nil))
(debug_insn 828 827 829 45 (var_location:SI countx (const_int 0 [0])) "../System/ray_funkcije.c":472:9 -1
     (nil))
(debug_insn 829 828 830 45 (var_location:SI county (const_int 0 [0])) "../System/ray_funkcije.c":472:21 -1
     (nil))
(debug_insn 830 829 831 45 (debug_marker) "../System/ray_funkcije.c":473:5 -1
     (nil))
(debug_insn 831 830 832 45 (debug_marker) "../System/ray_funkcije.c":473:10 -1
     (nil))
(debug_insn 832 831 833 45 (var_location:SF y (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 833 832 834 45 (var_location:SI county (const_int 0 [0])) -1
     (nil))
(debug_insn 834 833 835 45 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 835 834 836 45 (set (reg:SI 304 [ prephitmp_453 ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":473:37 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 836 835 1809 45 (set (reg:SF 741 [ _193 ])
        (float:SF (reg:SI 304 [ prephitmp_453 ]))) "../System/ray_funkcije.c":473:25 809 {*floatsisf2_vfp}
     (nil))
(insn 1809 836 1810 45 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 741 [ _193 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1810 1809 839 45 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 839 1810 843 45 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1738)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 1738)
(note 843 839 22 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 22 843 906 46 (set (reg/v:SF 297 [ y ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":473:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 906 22 20 46 (set (reg:SF 769)
        (const_double:SF 1.8e+2 [0x0.b4p+8])) "../System/ray_funkcije.c":485:11 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 20 906 912 46 (set (reg:SF 770 [ _480 ])
        (const_double:SF 2.55e+2 [0x0.ffp+8])) 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 2.55e+2 [0x0.ffp+8])
        (nil)))
(insn 912 20 844 46 (set (reg:SF 771)
        (const_double:SF 7.5e+1 [0x0.96p+7])) "../System/ray_funkcije.c":485:16 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 7.5e+1 [0x0.96p+7])
        (nil)))
(insn 844 912 1560 46 (set (reg:SI 310 [ prephitmp_470 ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":475:38 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1560 844 845 46 (set (reg:SF 742 [ _166 ])
        (float:SF (reg:SI 310 [ prephitmp_470 ]))) 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 310 [ prephitmp_470 ])
        (nil)))
(insn 845 1560 23 46 (set (reg:SI 319 [ prephitmp_491 ])
        (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(insn 23 845 1858 46 (set (reg/v:SI 293 [ county ])
        (const_int 0 [0])) "../System/ray_funkcije.c":472:21 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1858 23 1859 46 (set (reg/v:SI 836 [orig:282 sprite ] [282])
        (reg/v:SI 824 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 824 [orig:282 sprite ] [282])
        (nil)))
(insn 1859 1858 1860 46 (set (reg/v:SI 837 [orig:293 county ] [293])
        (reg/v:SI 293 [ county ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 293 [ county ])
        (nil)))
(insn 1860 1859 1861 46 (set (reg:SI 838 [orig:304 prephitmp_453 ] [304])
        (reg:SI 304 [ prephitmp_453 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 304 [ prephitmp_453 ])
        (nil)))
(insn 1861 1860 1862 46 (set (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (reg:SI 825 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1862 1861 1739 46 (set (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (reg:SI 319 [ prephitmp_491 ])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 319 [ prephitmp_491 ])
        (nil)))
(jump_insn 1739 1862 1740 46 (set (pc)
        (label_ref 1039)) 284 {*arm_jump}
     (nil)
 -> 1039)
(barrier 1740 1739 1047)
(code_label 1047 1740 848 47 195 (nil) [2 uses])
(note 848 1047 18 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 18 848 1897 47 (set (reg/v:SF 281 [ x ])
        (const_double:SF 0.0 [0x0.0p+0])) "../System/ray_funkcije.c":475:17 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1897 18 850 47 (set (reg:SF 606)
        (float:SF (reg/v:SI 837 [orig:293 county ] [293]))) "../System/ray_funkcije.c":495:25 809 {*floatsisf2_vfp}
     (nil))
(insn 850 1897 986 47 (set (reg:SF 193 [ _102 ])
        (plus:SF (reg:SF 606)
            (reg/v:SF 266 [ sy ]))) "../System/ray_funkcije.c":495:25 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 606)
        (nil)))
(insn 986 850 851 47 (set (reg:SI 764)
        (fix:SI (fix:SF (reg:SF 193 [ _102 ])))) "../System/ray_funkcije.c":496:9 805 {*truncsisf2_vfp}
     (nil))
(insn 851 986 1561 47 (set (reg:SI 303 [ _451 ])
        (fix:SI (fix:SF (reg/v:SF 297 [ y ])))) "../System/ray_funkcije.c":476:16 805 {*truncsisf2_vfp}
     (nil))
(insn 1561 851 19 47 (set (reg/f:SI 743)
        (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)
        (nil)))
(insn 19 1561 1863 47 (set (reg/v:SI 280 [ countx ])
        (const_int 0 [0])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1863 19 1864 47 (set (reg/v:SI 841 [orig:280 countx ] [280])
        (reg/v:SI 280 [ countx ])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 280 [ countx ])
        (nil)))
(insn 1864 1863 1865 47 (set (reg/v:SI 842 [orig:282 sprite ] [282])
        (reg/v:SI 836 [orig:282 sprite ] [282])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 836 [orig:282 sprite ] [282])
        (nil)))
(insn 1865 1864 1866 47 (set (reg/v:SI 843 [orig:293 county ] [293])
        (reg/v:SI 837 [orig:293 county ] [293])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 837 [orig:293 county ] [293])
        (nil)))
(insn 1866 1865 1867 47 (set (reg:SI 844 [orig:303 _451 ] [303])
        (reg:SI 303 [ _451 ])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 303 [ _451 ])
        (nil)))
(insn 1867 1866 1868 47 (set (reg:SI 845 [orig:304 prephitmp_453 ] [304])
        (reg:SI 838 [orig:304 prephitmp_453 ] [304])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 838 [orig:304 prephitmp_453 ] [304])
        (nil)))
(insn 1868 1867 1869 47 (set (reg:SI 846 [orig:306 ivtmp.180 ] [306])
        (reg:SI 839 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1869 1868 1006 47 (set (reg:SI 847 [orig:319 prephitmp_491 ] [319])
        (reg:SI 840 [orig:319 prephitmp_491 ] [319])) "../System/ray_funkcije.c":474:13 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (nil)))
(code_label 1006 1869 852 48 190 (nil) [1 uses])
(note 852 1006 857 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(note 857 852 861 48 NOTE_INSN_DELETED)
(note 861 857 853 48 NOTE_INSN_DELETED)
(debug_insn 853 861 854 48 (var_location:SF x (reg/v:SF 281 [ x ])) -1
     (nil))
(debug_insn 854 853 855 48 (var_location:SI countx (reg/v:SI 841 [orig:280 countx ] [280])) -1
     (nil))
(debug_insn 855 854 858 48 (debug_marker) "../System/ray_funkcije.c":476:7 -1
     (nil))
(insn 858 855 859 48 (set (reg:SI 608)
        (fix:SI (fix:SF (reg/v:SF 281 [ x ])))) "../System/ray_funkcije.c":476:45 805 {*truncsisf2_vfp}
     (nil))
(insn 859 858 862 48 (set (reg:SI 609)
        (plus:SI (mult:SI (reg:SI 844 [orig:303 _451 ] [303])
                (reg:SI 845 [orig:304 prephitmp_453 ] [304]))
            (reg:SI 608))) "../System/ray_funkcije.c":476:43 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 608)
        (nil)))
(insn 862 859 864 48 (set (reg:SI 612)
        (plus:SI (ashift:SI (reg:SI 609)
                (const_int 1 [0x1]))
            (reg:SI 609))) "../System/ray_funkcije.c":476:13 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 609)
        (nil)))
(debug_insn 864 862 865 48 (var_location:SI pixel (reg:SI 612)) "../System/ray_funkcije.c":476:13 -1
     (nil))
(debug_insn 865 864 871 48 (debug_marker) "../System/ray_funkcije.c":477:7 -1
     (nil))
(insn 871 865 867 48 (set (reg/f:SI 615)
        (plus:SI (reg/f:SI 743)
            (reg:SI 612))) "../System/ray_funkcije.c":478:13 7 {*arm_addsi3}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 612)
            (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>))
        (nil)))
(insn 867 871 868 48 (set (reg/v:SI 273 [ red ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 743)
                    (reg:SI 612)) [0 t_enemy[pixel_247]+0 S1 A8]))) "../System/ray_funkcije.c":477:11 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 612)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/u:QI (plus:SI (reg:SI 612)
                        (symbol_ref:SI ("t_enemy") [flags 0x82]  <var_decl 0000000006be3f30 t_enemy>)) [0 t_enemy[pixel_247]+0 S1 A8]))
            (nil))))
(debug_insn 868 867 869 48 (var_location:QI red (subreg:QI (reg/v:SI 273 [ red ]) 0)) "../System/ray_funkcije.c":477:11 -1
     (nil))
(debug_insn 869 868 872 48 (debug_marker) "../System/ray_funkcije.c":478:7 -1
     (nil))
(insn 872 869 873 48 (set (reg/v:SI 274 [ green ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 615)
                    (const_int 1 [0x1])) [0 t_enemy[_84]+0 S1 A8]))) "../System/ray_funkcije.c":478:13 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(debug_insn 873 872 874 48 (var_location:QI green (subreg:QI (reg/v:SI 274 [ green ]) 0)) "../System/ray_funkcije.c":478:13 -1
     (nil))
(debug_insn 874 873 877 48 (debug_marker) "../System/ray_funkcije.c":479:7 -1
     (nil))
(insn 877 874 878 48 (set (reg/v:SI 275 [ blue ])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 615)
                    (const_int 2 [0x2])) [0 t_enemy[_85]+0 S1 A8]))) "../System/ray_funkcije.c":479:12 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 615)
        (nil)))
(debug_insn 878 877 879 48 (var_location:QI blue (subreg:QI (reg/v:SI 275 [ blue ]) 0)) "../System/ray_funkcije.c":479:12 -1
     (nil))
(debug_insn 879 878 880 48 (debug_marker) "../System/ray_funkcije.c":483:7 -1
     (nil))
(insn 880 879 881 48 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 273 [ red ])
            (const_int 188 [0xbc]))) "../System/ray_funkcije.c":483:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 881 880 882 48 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 891)
            (pc))) "../System/ray_funkcije.c":483:10 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 891)
(note 882 881 883 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(note 883 882 885 49 NOTE_INSN_DELETED)
(note 885 883 886 49 NOTE_INSN_DELETED)
(insn 886 885 887 49 (parallel [
            (set (reg:CC_NZ 100 cc)
                (compare:CC_NZ (ior:SI (reg/v:SI 274 [ green ])
                        (reg/v:SI 275 [ blue ]))
                    (const_int 0 [0])))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":483:23 108 {*iorsi3_compare0_scratch}
     (nil))
(jump_insn 887 886 1741 49 (set (pc)
        (if_then_else (ne (reg:CC_NZ 100 cc)
                (const_int 0 [0]))
            (label_ref 1430)
            (pc))) "../System/ray_funkcije.c":483:23 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC_NZ 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1430)
(note 1741 887 1742 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1742 1741 1743 50 (set (pc)
        (label_ref 996)) 284 {*arm_jump}
     (nil)
 -> 996)
(barrier 1743 1742 891)
(code_label 891 1743 892 51 181 (nil) [1 uses])
(note 892 891 893 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(debug_insn 893 892 896 51 (debug_marker) "../System/ray_funkcije.c":484:8 -1
     (nil))
(insn 896 893 897 51 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 847 [orig:319 prephitmp_491 ] [319])
            (const_int 0 [0]))) "../System/ray_funkcije.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 897 896 1437 51 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 902)
            (pc))) "../System/ray_funkcije.c":484:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 902)
(code_label 1437 897 898 52 214 (nil) [1 uses])
(note 898 1437 899 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 1744 52 (set (reg:SF 317 [ _480 ])
        (float:SF (reg/v:SI 273 [ red ]))) "../System/ray_funkcije.c":488:12 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SI 273 [ red ])
        (nil)))
(jump_insn 1744 899 1745 52 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1745 1744 902)
(code_label 902 1745 903 53 184 (nil) [1 uses])
(note 903 902 904 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(debug_insn 904 903 905 53 (debug_marker) "../System/ray_funkcije.c":485:9 -1
     (nil))
(insn 905 904 1807 53 (set (reg:SF 181 [ _88 ])
        (float:SF (reg/v:SI 273 [ red ]))) "../System/ray_funkcije.c":485:16 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SI 273 [ red ])
        (nil)))
(insn 1807 905 1808 53 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 181 [ _88 ])
            (reg:SF 769))) "../System/ray_funkcije.c":485:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1808 1807 908 53 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":485:11 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 908 1808 909 53 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1468)
            (pc))) "../System/ray_funkcije.c":485:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 414363460 (nil)))
 -> 1468)
(note 909 908 910 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(debug_insn 910 909 911 54 (debug_marker) "../System/ray_funkcije.c":486:14 -1
     (nil))
(debug_insn 911 910 913 54 (var_location:QI red (unsigned_fix:QI (plus:SF (reg:SF 181 [ _88 ])
            (const_double:SF 7.5e+1 [0x0.96p+7])))) "../System/ray_funkcije.c":486:18 -1
     (nil))
(insn 913 911 914 54 (set (reg:SF 622)
        (plus:SF (reg:SF 181 [ _88 ])
            (reg:SF 771))) "../System/ray_funkcije.c":485:16 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 181 [ _88 ])
        (expr_list:REG_EQUAL (plus:SF (reg:SF 181 [ _88 ])
                (const_double:SF 7.5e+1 [0x0.96p+7]))
            (nil))))
(insn 914 913 916 54 (set (reg:SI 625)
        (unsigned_fix:SI (fix:SF (reg:SF 622)))) "../System/ray_funkcije.c":486:18 807 {fixuns_truncsfsi2}
     (expr_list:REG_DEAD (reg:SF 622)
        (nil)))
(insn 916 914 917 54 (set (reg:SI 626 [ red ])
        (zero_extend:SI (subreg:QI (reg:SI 625) 0))) "../System/ray_funkcije.c":488:12 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 625)
        (nil)))
(insn 917 916 1746 54 (set (reg:SF 317 [ _480 ])
        (float:SF (reg:SI 626 [ red ]))) "../System/ray_funkcije.c":488:12 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 626 [ red ])
        (nil)))
(jump_insn 1746 917 1747 54 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1747 1746 1468)
(code_label 1468 1747 1467 55 220 (nil) [1 uses])
(note 1467 1468 1623 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1623 1467 1748 55 (set (reg:SF 317 [ _480 ])
        (reg:SF 770 [ _480 ])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1748 1623 1749 55 (set (pc)
        (label_ref 918)) 284 {*arm_jump}
     (nil)
 -> 918)
(barrier 1749 1748 1480)
(code_label 1480 1749 1479 56 223 (nil) [1 uses])
(note 1479 1480 1624 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1624 1479 918 56 (set (reg:SF 317 [ _480 ])
        (reg:SF 770 [ _480 ])) "../System/ray_funkcije.c":484:11 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 918 1624 919 57 185 (nil) [3 uses])
(note 919 918 920 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(debug_insn 920 919 921 57 (var_location:QI red (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 921 920 922 57 (debug_marker) "../System/ray_funkcije.c":488:8 -1
     (nil))
(debug_insn 922 921 923 57 (var_location:SF D#48 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":488:12 -1
     (nil))
(debug_insn 923 922 924 57 (var_location:QI red (unsigned_fix:QI (debug_expr:SF D#48))) "../System/ray_funkcije.c":488:12 -1
     (nil))
(debug_insn 924 923 925 57 (debug_marker) "../System/ray_funkcije.c":489:8 -1
     (nil))
(debug_insn 925 924 926 57 (var_location:SI D#47 (zero_extend:SI (subreg:QI (reg/v:SI 274 [ green ]) 0))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 926 925 927 57 (var_location:SF D#46 (float:SF (debug_expr:SI D#47))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 927 926 928 57 (var_location:SF D#45 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 928 927 929 57 (var_location:QI green (unsigned_fix:QI (debug_expr:SF D#45))) "../System/ray_funkcije.c":489:14 -1
     (nil))
(debug_insn 929 928 930 57 (debug_marker) "../System/ray_funkcije.c":490:8 -1
     (nil))
(debug_insn 930 929 931 57 (var_location:SI D#44 (zero_extend:SI (subreg:QI (reg/v:SI 275 [ blue ]) 0))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 931 930 932 57 (var_location:SF D#43 (float:SF (debug_expr:SI D#44))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 932 931 933 57 (var_location:SF D#42 (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 933 932 934 57 (var_location:QI blue (unsigned_fix:QI (debug_expr:SF D#42))) "../System/ray_funkcije.c":490:13 -1
     (nil))
(debug_insn 934 933 935 57 (debug_marker) "../System/ray_funkcije.c":494:8 -1
     (nil))
(insn 935 934 936 57 (set (reg:SF 627)
        (float:SF (reg/v:SI 841 [orig:280 countx ] [280]))) "../System/ray_funkcije.c":494:15 809 {*floatsisf2_vfp}
     (nil))
(insn 936 935 1805 57 (set (reg:SF 191 [ _100 ])
        (plus:SF (reg:SF 627)
            (reg/v:SF 267 [ sx ]))) "../System/ray_funkcije.c":494:15 758 {*addsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 627)
        (nil)))
(insn 1805 936 1806 57 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 191 [ _100 ])
            (reg:SF 777))) "../System/ray_funkcije.c":494:11 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1806 1805 939 57 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":494:11 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 939 1806 943 57 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":494:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 996)
(note 943 939 1803 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1803 943 1804 58 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 191 [ _100 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":494:35 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1804 1803 946 58 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":494:35 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 946 1804 950 58 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":494:35 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 996)
(note 950 946 1801 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1801 950 1802 59 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 193 [ _102 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":495:19 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1802 1801 953 59 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":495:19 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 953 1802 957 59 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":495:19 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 996)
(note 957 953 1799 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1799 957 1800 60 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 193 [ _102 ])
            (reg:SF 777))) "../System/ray_funkcije.c":495:38 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1800 1799 960 60 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":495:38 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 960 1800 964 60 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 996)
            (pc))) "../System/ray_funkcije.c":495:38 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 719407028 (nil)))
 -> 996)
(note 964 960 972 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 972 964 975 61 NOTE_INSN_DELETED)
(note 975 972 979 61 NOTE_INSN_DELETED)
(note 979 975 984 61 NOTE_INSN_DELETED)
(note 984 979 985 61 NOTE_INSN_DELETED)
(note 985 984 987 61 NOTE_INSN_DELETED)
(note 987 985 965 61 NOTE_INSN_DELETED)
(debug_insn 965 987 966 61 (debug_marker) "../System/ray_funkcije.c":496:9 -1
     (nil))
(insn 966 965 968 61 (set (reg:SF 632)
        (float:SF (reg/v:SI 274 [ green ]))) "../System/ray_funkcije.c":489:14 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SI 274 [ green ])
        (nil)))
(insn 968 966 967 61 (set (reg:SF 633)
        (float:SF (reg/v:SI 275 [ blue ]))) "../System/ray_funkcije.c":490:13 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg/v:SI 275 [ blue ])
        (nil)))
(insn 967 968 973 61 (set (reg:SF 186 [ _95 ])
        (mult:SF (reg:SF 632)
            (reg/v:SF 268 [ vis ]))) "../System/ray_funkcije.c":489:14 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 632)
        (nil)))
(insn 973 967 969 61 (set (reg:SI 638)
        (unsigned_fix:SI (fix:SF (reg:SF 186 [ _95 ])))) "../System/ray_funkcije.c":489:14 807 {fixuns_truncsfsi2}
     (expr_list:REG_DEAD (reg:SF 186 [ _95 ])
        (nil)))
(insn 969 973 970 61 (set (reg:SF 189 [ _98 ])
        (mult:SF (reg:SF 633)
            (reg/v:SF 268 [ vis ]))) "../System/ray_funkcije.c":490:13 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 633)
        (nil)))
(insn 970 969 976 61 (set (reg:SI 635)
        (unsigned_fix:SI (fix:SF (reg:SF 189 [ _98 ])))) "../System/ray_funkcije.c":490:13 807 {fixuns_truncsfsi2}
     (expr_list:REG_DEAD (reg:SF 189 [ _98 ])
        (nil)))
(insn 976 970 977 61 (set (reg:SF 640)
        (mult:SF (reg/v:SF 268 [ vis ])
            (reg:SF 317 [ _480 ]))) "../System/ray_funkcije.c":488:12 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 317 [ _480 ])
        (nil)))
(insn 977 976 980 61 (set (reg:SI 642)
        (unsigned_fix:SI (fix:SF (reg:SF 640)))) "../System/ray_funkcije.c":488:12 807 {fixuns_truncsfsi2}
     (expr_list:REG_DEAD (reg:SF 640)
        (nil)))
(insn 980 977 981 61 (set (reg:SI 2 r2)
        (zero_extend:SI (subreg:QI (reg:SI 635) 0))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 635)
        (nil)))
(insn 981 980 982 61 (set (reg:SI 1 r1)
        (zero_extend:SI (subreg:QI (reg:SI 638) 0))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 638)
        (nil)))
(insn 982 981 983 61 (set (reg:SI 0 r0)
        (zero_extend:SI (subreg:QI (reg:SI 642) 0))) "../System/ray_funkcije.c":496:56 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 642)
        (nil)))
(call_insn 983 982 1671 61 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>) [0 create_rgb S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":496:56 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_CALL_DECL (symbol_ref:SI ("create_rgb") [flags 0x41]  <function_decl 0000000005e4c300 create_rgb>)
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 1671 983 988 61 (set (reg:SI 811)
        (reg:SI 0 r0)) "../System/ray_funkcije.c":496:56 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 988 1671 990 61 (set (reg:SI 2 r2)
        (zero_extend:SI (subreg:HI (reg:SI 811) 0))) "../System/ray_funkcije.c":496:9 1005 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 811)
        (nil)))
(insn 990 988 989 61 (set (reg:SI 0 r0)
        (fix:SI (fix:SF (reg:SF 191 [ _100 ])))) "../System/ray_funkcije.c":496:9 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 191 [ _100 ])
        (nil)))
(insn 989 990 991 61 (set (reg:SI 1 r1)
        (reg:SI 764)) "../System/ray_funkcije.c":496:9 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 991 989 992 61 (parallel [
            (call (mem:SI (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>) [0 narisi_velik_kvadrat S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":496:9 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_CALL_DECL (symbol_ref:SI ("narisi_velik_kvadrat") [flags 0x41]  <function_decl 0000000005e0e300 narisi_velik_kvadrat>)
                    (nil)))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (nil))))))
(insn 992 991 1562 61 (set (reg:SI 848 [orig:310 prephitmp_470 ] [310])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 846 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":475:38 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1562 992 993 61 (set (reg:SF 742 [ _166 ])
        (float:SF (reg:SI 848 [orig:310 prephitmp_470 ] [310]))) 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 848 [orig:310 prephitmp_470 ] [310])
        (nil)))
(insn 993 1562 995 61 (set (reg:SI 845 [orig:304 prephitmp_453 ] [304])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 846 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":473:37 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 995 993 996 61 (set (reg:SI 847 [orig:319 prephitmp_491 ] [319])
        (mem:SI (plus:SI (reg:SI 846 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 996 995 997 62 183 (nil) [5 uses])
(note 997 996 998 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(debug_insn 998 997 1002 62 (debug_marker) "../System/ray_funkcije.c":498:7 -1
     (nil))
(insn 1002 998 999 62 (set (reg/v:SF 281 [ x ])
        (plus:SF (reg/v:SF 281 [ x ])
            (reg:SF 302 [ _440 ]))) "../System/ray_funkcije.c":475:48 758 {*addsf3_vfp}
     (nil))
(insn 999 1002 1000 62 (set (reg/v:SI 841 [orig:280 countx ] [280])
        (plus:SI (reg/v:SI 841 [orig:280 countx ] [280])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":498:13 7 {*arm_addsi3}
     (nil))
(debug_insn 1000 999 1001 62 (var_location:SI countx (reg/v:SI 841 [orig:280 countx ] [280])) "../System/ray_funkcije.c":498:13 -1
     (nil))
(debug_insn 1001 1000 1003 62 (debug_marker) "../System/ray_funkcije.c":475:46 -1
     (nil))
(debug_insn 1003 1001 1004 62 (var_location:SF x (reg/v:SF 281 [ x ])) -1
     (nil))
(debug_insn 1004 1003 1005 62 (var_location:SI countx (reg/v:SI 841 [orig:280 countx ] [280])) -1
     (nil))
(debug_insn 1005 1004 1797 62 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(insn 1797 1005 1798 62 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 742 [ _166 ])
            (reg/v:SF 281 [ x ]))) "../System/ray_funkcije.c":475:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1798 1797 1009 62 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":475:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1009 1798 1750 62 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1006)
            (pc))) "../System/ray_funkcije.c":475:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1006)
(note 1750 1009 1870 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1870 1750 1871 63 (set (reg/v:SI 836 [orig:282 sprite ] [282])
        (reg/v:SI 842 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 842 [orig:282 sprite ] [282])
        (nil)))
(insn 1871 1870 1872 63 (set (reg/v:SI 837 [orig:293 county ] [293])
        (reg/v:SI 843 [orig:293 county ] [293])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 843 [orig:293 county ] [293])
        (nil)))
(insn 1872 1871 1873 63 (set (reg:SI 838 [orig:304 prephitmp_453 ] [304])
        (reg:SI 845 [orig:304 prephitmp_453 ] [304])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 845 [orig:304 prephitmp_453 ] [304])
        (nil)))
(insn 1873 1872 1874 63 (set (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (reg:SI 846 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 846 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1874 1873 1752 63 (set (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (reg:SI 847 [orig:319 prephitmp_491 ] [319])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 847 [orig:319 prephitmp_491 ] [319])
        (nil)))
(jump_insn 1752 1874 1753 63 (set (pc)
        (label_ref 1751)) 284 {*arm_jump}
     (nil)
 -> 1751)
(barrier 1753 1752 1061)
(code_label 1061 1753 1013 64 196 (nil) [1 uses])
(note 1013 1061 1795 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1795 1013 1796 64 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 742 [ _166 ])
            (const_double:SF 0.0 [0x0.0p+0]))) 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1796 1795 1016 64 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1016 1796 1896 64 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1047)
            (pc))) 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 1073741828 (nil)))
 -> 1047)
(note 1896 1016 1875 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1875 1896 1876 102 (set (reg/v:SI 833 [orig:282 sprite ] [282])
        (reg/v:SI 836 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 836 [orig:282 sprite ] [282])
        (nil)))
(insn 1876 1875 1877 102 (set (reg:SI 834 [orig:306 ivtmp.180 ] [306])
        (reg:SI 839 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1877 1876 1031 102 (set (reg:SI 835 [orig:319 prephitmp_491 ] [319])
        (reg:SI 840 [orig:319 prephitmp_491 ] [319])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (nil)))
(code_label 1031 1877 1017 65 193 (nil) [1 uses])
(note 1017 1031 1018 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1018 1017 1019 65 (var_location:SF y (reg/v:SF 297 [ y ])) -1
     (nil))
(debug_insn 1019 1018 1020 65 (var_location:SI county (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1020 1019 1021 65 (var_location:SF x (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1021 1020 1022 65 (var_location:SI countx (const_int 0 [0])) -1
     (nil))
(debug_insn 1022 1021 1023 65 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(debug_insn 1023 1022 1024 65 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(debug_insn 1024 1023 1025 65 (var_location:SI county (debug_expr:SI D#55)) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1025 1024 1026 65 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(insn 1026 1025 1027 65 (set (reg/v:SF 297 [ y ])
        (plus:SF (reg/v:SF 297 [ y ])
            (reg:SF 302 [ _440 ]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(debug_insn 1027 1026 1028 65 (var_location:SF y (reg/v:SF 297 [ y ])) -1
     (nil))
(debug_insn 1028 1027 1029 65 (var_location:SI county (debug_expr:SI D#55)) -1
     (nil))
(debug_insn 1029 1028 1793 65 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1793 1029 1794 65 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 741 [ _193 ])
            (reg/v:SF 297 [ y ]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1794 1793 1033 65 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1033 1794 1754 65 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1031)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1031)
(note 1754 1033 1878 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1878 1754 1879 66 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 833 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 833 [orig:282 sprite ] [282])
        (nil)))
(insn 1879 1878 1880 66 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 834 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 834 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1880 1879 1755 66 (set (reg:SI 319 [ prephitmp_491 ])
        (reg:SI 835 [orig:319 prephitmp_491 ] [319])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 835 [orig:319 prephitmp_491 ] [319])
        (nil)))
(jump_insn 1755 1880 1756 66 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1756 1755 1039)
(code_label 1039 1756 1040 67 180 (nil) [2 uses])
(note 1040 1039 1041 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1041 1040 1042 67 (var_location:SF y (reg/v:SF 297 [ y ])) -1
     (nil))
(debug_insn 1042 1041 1043 67 (var_location:SI county (reg/v:SI 837 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1043 1042 1044 67 (var_location:SF x (const_double:SF 0.0 [0x0.0p+0])) -1
     (nil))
(debug_insn 1044 1043 1045 67 (var_location:SI countx (const_int 0 [0])) -1
     (nil))
(debug_insn 1045 1044 1791 67 (debug_marker) "../System/ray_funkcije.c":475:24 -1
     (nil))
(insn 1791 1045 1792 67 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 742 [ _166 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":475:6 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1792 1791 1050 67 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":475:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1050 1792 1051 67 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1047)
            (pc))) "../System/ray_funkcije.c":475:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 941251804 (nil)))
 -> 1047)
(note 1051 1050 1052 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1052 1051 1056 68 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(insn 1056 1052 1053 68 (set (reg/v:SF 297 [ y ])
        (plus:SF (reg/v:SF 297 [ y ])
            (reg:SF 302 [ _440 ]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(insn 1053 1056 1054 68 (set (reg/v:SI 837 [orig:293 county ] [293])
        (plus:SI (reg/v:SI 837 [orig:293 county ] [293])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":500:12 7 {*arm_addsi3}
     (nil))
(debug_insn 1054 1053 1055 68 (var_location:SI county (reg/v:SI 837 [orig:293 county ] [293])) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1055 1054 1057 68 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(debug_insn 1057 1055 1058 68 (var_location:SF y (reg/v:SF 297 [ y ])) -1
     (nil))
(debug_insn 1058 1057 1059 68 (var_location:SI county (reg/v:SI 837 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1059 1058 1789 68 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1789 1059 1790 68 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 741 [ _193 ])
            (reg/v:SF 297 [ y ]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1790 1789 1063 68 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1063 1790 1757 68 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref 1061)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630308 (nil)))
 -> 1061)
(note 1757 1063 1881 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1881 1757 1882 69 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 836 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 836 [orig:282 sprite ] [282])
        (nil)))
(insn 1882 1881 1883 69 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 839 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1883 1882 1758 69 (set (reg:SI 319 [ prephitmp_491 ])
        (reg:SI 840 [orig:319 prephitmp_491 ] [319])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (nil)))
(jump_insn 1758 1883 1759 69 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1759 1758 1738)
(code_label 1738 1759 1068 70 249 (nil) [1 uses])
(note 1068 1738 1069 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 70 (set (reg:SI 319 [ prephitmp_491 ])
        (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":503:19 728 {*thumb2_movsi_vfp}
     (nil))
(code_label 1070 1069 1071 71 194 (nil) [3 uses])
(note 1071 1070 1072 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1072 1071 1075 71 (debug_marker) "../System/ray_funkcije.c":503:5 -1
     (nil))
(insn 1075 1072 1076 71 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 319 [ prephitmp_491 ])
            (const_int 0 [0]))) "../System/ray_funkcije.c":503:8 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 319 [ prephitmp_491 ])
        (nil)))
(jump_insn 1076 1075 1575 71 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1760)
            (pc))) "../System/ray_funkcije.c":503:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 373017916 (nil)))
 -> 1760)
(note 1575 1076 1563 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1563 1575 1761 72 (set (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(jump_insn 1761 1563 1762 72 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1762 1761 1760)
(code_label 1760 1762 1077 73 251 (nil) [1 uses])
(note 1077 1760 1078 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1078 1077 1081 73 (debug_marker) "../System/ray_funkcije.c":504:6 -1
     (nil))
(insn 1081 1078 1087 73 (set (reg:SF 653)
        (const_double:SF 5.0e-1 [0x0.8p+0])) "../System/ray_funkcije.c":504:12 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1087 1081 1079 73 (set (reg:SF 654)
        (mult:SF (reg/v:SF 249 [ scaling ])
            (reg:SF 653))) "../System/ray_funkcije.c":505:12 767 {*mulsf3_vfp}
     (expr_list:REG_EQUAL (mult:SF (reg/v:SF 249 [ scaling ])
            (const_double:SF 5.0e-1 [0x0.8p+0]))
        (nil)))
(insn 1079 1087 1080 73 (set (reg:SI 650 [ MEM[base: _419, offset: 20B] ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 20 [0x14])) [5 MEM[base: _419, offset: 20B]+0 S2 A32]))) "../System/ray_funkcije.c":504:46 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1080 1079 1082 73 (set (reg:SF 651)
        (float:SF (reg:SI 650 [ MEM[base: _419, offset: 20B] ]))) "../System/ray_funkcije.c":504:34 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 650 [ MEM[base: _419, offset: 20B] ])
        (nil)))
(insn 1082 1080 1088 73 (set (reg:SF 652)
        (mult:SF (reg:SF 651)
            (reg:SF 653))) "../System/ray_funkcije.c":504:12 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 651)
        (expr_list:REG_EQUAL (mult:SF (reg:SF 651)
                (const_double:SF 5.0e-1 [0x0.8p+0]))
            (nil))))
(insn 1088 1082 1083 73 (set (reg/v:SF 270 [ starty ])
        (fma:SF (reg:SF 741 [ _193 ])
            (reg:SF 654)
            (reg/v:SF 266 [ sy ]))) "../System/ray_funkcije.c":505:12 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 741 [ _193 ])
        (expr_list:REG_DEAD (reg:SF 654)
            (expr_list:REG_DEAD (reg/v:SF 266 [ sy ])
                (nil)))))
(insn 1083 1088 1084 73 (set (reg/v:SF 269 [ startx ])
        (fma:SF (reg/v:SF 249 [ scaling ])
            (reg:SF 652)
            (reg/v:SF 267 [ sx ]))) "../System/ray_funkcije.c":504:12 788 {fmasf4}
     (expr_list:REG_DEAD (reg:SF 652)
        (expr_list:REG_DEAD (reg/v:SF 267 [ sx ])
            (nil))))
(debug_insn 1084 1083 1085 73 (var_location:SF startx (reg/v:SF 269 [ startx ])) "../System/ray_funkcije.c":504:12 -1
     (nil))
(debug_insn 1085 1084 1089 73 (debug_marker) "../System/ray_funkcije.c":505:6 -1
     (nil))
(debug_insn 1089 1085 1090 73 (var_location:SF starty (reg/v:SF 270 [ starty ])) "../System/ray_funkcije.c":505:12 -1
     (nil))
(debug_insn 1090 1089 1091 73 (debug_marker) "../System/ray_funkcije.c":506:6 -1
     (nil))
(debug_insn 1091 1090 1092 73 (debug_marker) "../System/ray_funkcije.c":506:11 -1
     (nil))
(debug_insn 1092 1091 1093 73 (var_location:SI i (const_int 0 [0])) -1
     (nil))
(debug_insn 1093 1092 1139 73 (debug_marker) "../System/ray_funkcije.c":506:22 -1
     (nil))
(insn 1139 1093 1140 73 (set (reg:SI 761)
        (const_int 444 [0x1bc])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 444 [0x1bc])
        (nil)))
(insn 1140 1139 24 73 (set (reg:SI 762)
        (mult:SI (reg:SI 761)
            (reg/v:SI 824 [orig:282 sprite ] [282]))) "../System/ray_funkcije.c":510:7 56 {*mul}
     (expr_list:REG_DEAD (reg:SI 761)
        (nil)))
(insn 24 1140 25 73 (set (reg:SI 286 [ ivtmp.157 ])
        (reg:SI 825 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":505:12 728 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 1884 73 (set (reg/v:SI 271 [ i ])
        (const_int 0 [0])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1884 25 1885 73 (set (reg/v:SF 826 [orig:269 startx ] [269])
        (reg/v:SF 269 [ startx ])) "../System/ray_funkcije.c":506:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 269 [ startx ])
        (nil)))
(insn 1885 1884 1886 73 (set (reg/v:SF 827 [orig:270 starty ] [270])
        (reg/v:SF 270 [ starty ])) "../System/ray_funkcije.c":506:15 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 270 [ starty ])
        (nil)))
(insn 1886 1885 1887 73 (set (reg/v:SI 828 [orig:271 i ] [271])
        (reg/v:SI 271 [ i ])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 271 [ i ])
        (nil)))
(insn 1887 1886 1888 73 (set (reg/v:SI 829 [orig:282 sprite ] [282])
        (reg/v:SI 824 [orig:282 sprite ] [282])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 824 [orig:282 sprite ] [282])
        (nil)))
(insn 1888 1887 1889 73 (set (reg:SI 830 [orig:286 ivtmp.157 ] [286])
        (reg:SI 286 [ ivtmp.157 ])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 286 [ ivtmp.157 ])
        (nil)))
(insn 1889 1888 1890 73 (set (reg:SI 831 [orig:306 ivtmp.180 ] [306])
        (reg:SI 825 [orig:306 ivtmp.180 ] [306])) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1890 1889 1158 73 (set (reg:SI 832 [762])
        (reg:SI 762)) "../System/ray_funkcije.c":506:15 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 762)
        (nil)))
(code_label 1158 1890 1094 74 200 (nil) [1 uses])
(note 1094 1158 1095 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1095 1094 1096 74 (var_location:SI i (reg/v:SI 828 [orig:271 i ] [271])) -1
     (nil))
(debug_insn 1096 1095 1102 74 (debug_marker) "../System/ray_funkcije.c":507:7 -1
     (nil))
(debug_insn 1102 1096 1126 74 (debug_marker) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1126 1102 1127 74 (var_location:SI blood (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1127 1126 1128 74 (var_location:SF maxy (clobber (const_int 0 [0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1128 1127 1098 74 (debug_marker) "../System/ray_funkcije.c":509:7 -1
     (nil))
(insn 1098 1128 1099 74 (set (reg:SI 656 [ MEM[base: _518, offset: 56B] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
                    (const_int 56 [0x38])) [0 MEM[base: _518, offset: 56B]+0 S1 A32]))) "../System/ray_funkcije.c":507:10 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1099 1098 1103 74 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 656 [ MEM[base: _518, offset: 56B] ])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":507:10 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 656 [ MEM[base: _518, offset: 56B] ])
        (nil)))
(insn 1103 1099 1104 74 (set (reg/f:SI 327 [ _517 ])
        (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
            (const_int 40 [0x28]))) 7 {*arm_addsi3}
     (nil))
(debug_insn 1104 1103 1441 74 (var_location:SI blood (reg/f:SI 327 [ _517 ])) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1441 1104 1105 74 (var_location:HI D#56 (mem:HI (plus:SI (reg:SI 831 [orig:306 ivtmp.180 ] [306])
            (const_int 22 [0x16])) [0 MEM[base: _419, offset: 22B]+0 S2 A16])) "../System/ray_funkcije.c":484:11 -1
     (nil))
(debug_insn 1105 1441 1106 74 (var_location:SF maxy (mult:SF (mult:SF (float:SF (zero_extend:SI (debug_expr:HI D#56)))
            (reg/v:SF 249 [ scaling ]))
        (const_double:SF 5.0e-1 [0x0.8p+0]))) "../System/ray_funkcije.c":508:7 -1
     (nil))
(debug_insn 1106 1105 1107 74 (debug_marker:BLK) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":30:13 -1
     (nil))
(debug_insn 1107 1106 1129 74 (debug_marker) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:5 -1
     (nil))
(insn 1129 1107 1100 74 (set (reg:SI 0 r0)
        (reg/f:SI 327 [ _517 ])) "../System/ray_funkcije.c":509:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/f:SI 327 [ _517 ])
        (nil)))
(jump_insn 1100 1129 1101 74 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1151)
            (pc))) "../System/ray_funkcije.c":507:10 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 524845004 (nil)))
 -> 1151)
(note 1101 1100 1120 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1120 1101 1113 75 (debug_marker) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:3 -1
     (nil))
(insn 1113 1120 1121 75 (set (reg:SF 662 [ MEM[base: _518, offset: 44B] ])
        (mem:SF (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
                (const_int 44 [0x2c])) [2 MEM[base: _518, offset: 44B]+0 S4 A32])) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
                (const_int 44 [0x2c])) [2 MEM[base: _518, offset: 44B]+0 S4 A32])
        (nil)))
(insn 1121 1113 1108 75 (set (reg:SI 663)
        (const_int 0 [0])) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1108 1121 1109 75 (set (reg:SI 657 [ MEM[base: _419, offset: 22B] ])
        (zero_extend:SI (mem:HI (plus:SI (reg:SI 831 [orig:306 ivtmp.180 ] [306])
                    (const_int 22 [0x16])) [5 MEM[base: _419, offset: 22B]+0 S2 A16]))) "../System/ray_funkcije.c":508:65 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 1109 1108 1111 75 (set (reg:SF 658)
        (float:SF (reg:SI 657 [ MEM[base: _419, offset: 22B] ]))) "../System/ray_funkcije.c":508:53 809 {*floatsisf2_vfp}
     (expr_list:REG_DEAD (reg:SI 657 [ MEM[base: _419, offset: 22B] ])
        (nil)))
(insn 1111 1109 1112 75 (set (reg:SF 659)
        (mult:SF (reg:SF 658)
            (reg:SF 653))) "../System/ray_funkcije.c":508:7 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 658)
        (expr_list:REG_EQUAL (mult:SF (reg:SF 658)
                (const_double:SF 5.0e-1 [0x0.8p+0]))
            (nil))))
(insn 1112 1111 1787 75 (set (reg:SF 661)
        (mult:SF (reg:SF 659)
            (reg/v:SF 249 [ scaling ]))) "../System/ray_funkcije.c":508:7 767 {*mulsf3_vfp}
     (expr_list:REG_DEAD (reg:SF 659)
        (nil)))
(insn 1787 1112 1788 75 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 661)
            (reg:SF 662 [ MEM[base: _518, offset: 44B] ]))) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 662 [ MEM[base: _518, offset: 44B] ])
        (expr_list:REG_DEAD (reg:SF 661)
            (nil))))
(insn 1788 1787 1115 75 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1115 1788 1119 75 (set (pc)
        (if_then_else (unge (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1124)
            (pc))) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":31:8 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1124)
(note 1119 1115 1123 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1123 1119 1124 76 (set (mem:QI (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
                (const_int 56 [0x38])) [2 MEM[base: _518, offset: 56B]+0 S1 A32])
        (subreg:QI (reg:SI 663) 0)) "C:/Users/zevni/Desktop/PROG/FAKS/tekmovanje_isystem/OME_PROJEKT_Filip_Zevnik/System/Include/pomozne_funkcije.h":32:17 263 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 663)
        (nil)))
(code_label 1124 1123 1125 77 198 (nil) [1 uses])
(note 1125 1124 1132 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(note 1132 1125 1135 77 NOTE_INSN_DELETED)
(note 1135 1132 1137 77 NOTE_INSN_DELETED)
(note 1137 1135 1130 77 NOTE_INSN_DELETED)
(call_insn 1130 1137 1131 77 (parallel [
            (call (mem:SI (symbol_ref:SI ("moveBlood") [flags 0x41]  <function_decl 0000000005e4c700 moveBlood>) [0 moveBlood S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":509:7 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("moveBlood") [flags 0x41]  <function_decl 0000000005e4c700 moveBlood>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1131 1130 1147 77 (debug_marker) "../System/ray_funkcije.c":510:7 -1
     (nil))
(insn 1147 1131 1148 77 (set (reg:SF 18 s2)
        (mem:SF (plus:SI (reg:SI 831 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1148 1147 1149 77 (set (reg:SF 17 s1)
        (reg/v:SF 827 [orig:270 starty ] [270])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1149 1148 1136 77 (set (reg:SF 16 s0)
        (reg/v:SF 826 [orig:269 startx ] [269])) "../System/ray_funkcije.c":510:7 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1136 1149 1141 77 (set (reg:SI 669)
        (plus:SI (ashift:SI (reg/v:SI 828 [orig:271 i ] [271])
                (const_int 2 [0x2]))
            (reg/v:SI 828 [orig:271 i ] [271]))) "../System/ray_funkcije.c":510:7 318 {*add_shiftsi}
     (nil))
(insn 1141 1136 1142 77 (set (reg:SI 673)
        (plus:SI (ashift:SI (reg:SI 669)
                (const_int 2 [0x2]))
            (reg:SI 832 [762]))) "../System/ray_funkcije.c":510:7 318 {*add_shiftsi}
     (expr_list:REG_DEAD (reg:SI 669)
        (nil)))
(insn 1142 1141 1143 77 (set (reg:SI 674)
        (plus:SI (reg/f:SI 747)
            (reg:SI 673))) "../System/ray_funkcije.c":510:7 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 673)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 673)
                (symbol_ref:SI ("sp") [flags 0xc0]  <var_decl 00000000059e4870 sp>))
            (nil))))
(insn 1143 1142 1144 77 (set (reg/f:SI 675)
        (plus:SI (reg:SI 674)
            (const_int 40 [0x28]))) "../System/ray_funkcije.c":510:7 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 674)
        (nil)))
(insn 1144 1143 1145 77 (set (reg:SI 676 [ sp[sprite_308].blood[i_309]+16 ])
        (mem:SI (plus:SI (reg/f:SI 675)
                (const_int 16 [0x10])) [2 sp[sprite_308].blood[i_309]+16 S4 A32])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 675)
                (const_int 16 [0x10])) [2 sp[sprite_308].blood[i_309]+16 S4 A32])
        (nil)))
(insn 1145 1144 1146 77 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 676 [ sp[sprite_308].blood[i_309]+16 ])) "../System/ray_funkcije.c":510:7 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 676 [ sp[sprite_308].blood[i_309]+16 ])
        (nil)))
(insn 1146 1145 1150 77 (parallel [
            (set (reg:SI 0 r0)
                (mem:SI (reg/f:SI 675) [2 sp[sprite_308].blood[i_309]+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem:SI (plus:SI (reg/f:SI 675)
                        (const_int 4 [0x4])) [2 sp[sprite_308].blood[i_309]+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem:SI (plus:SI (reg/f:SI 675)
                        (const_int 8 [0x8])) [2 sp[sprite_308].blood[i_309]+8 S4 A32]))
            (set (reg:SI 3 r3)
                (mem:SI (plus:SI (reg/f:SI 675)
                        (const_int 12 [0xc])) [2 sp[sprite_308].blood[i_309]+12 S4 A32]))
        ]) "../System/ray_funkcije.c":510:7 423 {*ldm4_}
     (expr_list:REG_DEAD (reg/f:SI 675)
        (nil)))
(call_insn 1150 1146 1151 77 (parallel [
            (call (mem:SI (symbol_ref:SI ("drawBlood") [flags 0x41]  <function_decl 0000000005e4cb00 drawBlood>) [0 drawBlood S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":510:7 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SF 18 s2)
        (expr_list:REG_DEAD (reg:SF 17 s1)
            (expr_list:REG_DEAD (reg:SF 16 s0)
                (expr_list:REG_DEAD (reg:SI 3 r3)
                    (expr_list:REG_DEAD (reg:SI 2 r2)
                        (expr_list:REG_DEAD (reg:SI 1 r1)
                            (expr_list:REG_DEAD (reg:SI 0 r0)
                                (expr_list:REG_CALL_DECL (symbol_ref:SI ("drawBlood") [flags 0x41]  <function_decl 0000000005e4cb00 drawBlood>)
                                    (nil)))))))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 3 r3))
            (expr_list (use (reg:SI 2 r2))
                (expr_list (use (reg:SI 1 r1))
                    (expr_list (use (reg:SI 0 r0))
                        (expr_list:SF (use (reg:SF 16 s0))
                            (expr_list:SF (use (reg:SF 17 s1))
                                (expr_list:SF (use (reg:SF 18 s2))
                                    (expr_list:BLK (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                                        (nil)))))))))))
(code_label 1151 1150 1152 78 197 (nil) [1 uses])
(note 1152 1151 1153 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1153 1152 1154 78 (debug_marker) "../System/ray_funkcije.c":506:50 -1
     (nil))
(insn 1154 1153 1155 78 (set (reg/v:SI 828 [orig:271 i ] [271])
        (plus:SI (reg/v:SI 828 [orig:271 i ] [271])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":506:51 7 {*arm_addsi3}
     (nil))
(debug_insn 1155 1154 1156 78 (var_location:SI i (reg/v:SI 828 [orig:271 i ] [271])) -1
     (nil))
(debug_insn 1156 1155 1157 78 (debug_marker) "../System/ray_funkcije.c":506:22 -1
     (nil))
(insn 1157 1156 1159 78 (set (reg:SI 830 [orig:286 ivtmp.157 ] [286])
        (plus:SI (reg:SI 830 [orig:286 ivtmp.157 ] [286])
            (const_int 20 [0x14]))) "../System/ray_funkcije.c":506:6 7 {*arm_addsi3}
     (nil))
(insn 1159 1157 1160 78 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 828 [orig:271 i ] [271])
            (const_int 20 [0x14]))) "../System/ray_funkcije.c":506:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1160 1159 1577 78 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1158)
            (pc))) "../System/ray_funkcije.c":506:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 1020077300 (nil)))
 -> 1158)
(note 1577 1160 1891 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1891 1577 1892 79 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 829 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 829 [orig:282 sprite ] [282])
        (nil)))
(insn 1892 1891 1564 79 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 831 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 831 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1564 1892 1161 79 (set (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(code_label 1161 1564 1162 80 162 (nil) [5 uses])
(note 1162 1161 1163 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1163 1162 1164 80 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1164 1163 1165 80 (debug_marker) "../System/ray_funkcije.c":517:3 -1
     (nil))
(insn 1165 1164 1166 80 (set (reg:SI 677 [ MEM[base: _419, offset: 440B] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 440 [0x1b8])) [0 MEM[base: _419, offset: 440B]+0 S1 A32]))) "../System/ray_funkcije.c":517:5 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 1166 1165 1167 80 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 677 [ MEM[base: _419, offset: 440B] ])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":517:5 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 677 [ MEM[base: _419, offset: 440B] ])
        (nil)))
(jump_insn 1167 1166 1172 80 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1317)
            (pc))) "../System/ray_funkcije.c":517:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 708669604 (nil)))
 -> 1317)
(note 1172 1167 1174 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1174 1172 1785 81 (set (reg:SF 678)
        (const_double:SF 4.0e+0 [0x0.8p+3])) "../System/ray_funkcije.c":517:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 1785 1174 1786 81 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg/v:SF 263 [ dist ])
            (reg:SF 678))) "../System/ray_funkcije.c":517:28 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 678)
        (expr_list:REG_DEAD (reg/v:SF 263 [ dist ])
            (nil))))
(insn 1786 1785 1176 81 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":517:28 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1176 1786 1180 81 (set (pc)
        (if_then_else (unle (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1317)
            (pc))) "../System/ray_funkcije.c":517:28 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1317)
(note 1180 1176 1230 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(note 1230 1180 1237 82 NOTE_INSN_DELETED)
(note 1237 1230 1242 82 NOTE_INSN_DELETED)
(note 1242 1237 1246 82 NOTE_INSN_DELETED)
(note 1246 1242 1181 82 NOTE_INSN_DELETED)
(debug_insn 1181 1246 1182 82 (debug_marker) "../System/ray_funkcije.c":518:4 -1
     (nil))
(debug_insn 1182 1181 1183 82 (var_location:SI fCheck (const_int 5 [0x5])) "../System/ray_funkcije.c":518:8 -1
     (nil))
(debug_insn 1183 1182 1184 82 (debug_marker) "../System/ray_funkcije.c":519:4 -1
     (nil))
(debug_insn 1184 1183 1185 82 (var_location:SI fCheckX (const_int 0 [0])) "../System/ray_funkcije.c":519:8 -1
     (nil))
(debug_insn 1185 1184 1186 82 (var_location:SI fCheckY (const_int 0 [0])) "../System/ray_funkcije.c":519:21 -1
     (nil))
(debug_insn 1186 1185 1187 82 (debug_marker) "../System/ray_funkcije.c":520:4 -1
     (nil))
(insn 1187 1186 1188 82 (set (reg:SF 0 r0)
        (reg/v:SF 247 [ sangle ])) "../System/ray_funkcije.c":520:20 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg/v:SF 247 [ sangle ])
        (nil)))
(call_insn/u 1188 1187 1632 82 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:20 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1632 1188 1192 82 (set (reg:DF 2 r2)
        (reg:DF 774)) "../System/ray_funkcije.c":520:20 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1192 1632 1195 82 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:20 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1195 1192 1672 82 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:8 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1672 1195 1196 82 (set (reg:SF 812)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1196 1672 1197 82 (set (reg:SF 215 [ _135 ])
        (reg:SF 812)) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 812)
        (nil)))
(insn 1197 1196 1198 82 (set (reg:SF 16 s0)
        (reg:SF 215 [ _135 ])) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (nil))
(call_insn/u 1198 1197 1673 82 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>) [0 __builtin_cosf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":520:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("cosf") [flags 0x41]  <function_decl 0000000005ad0100 cosf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1673 1198 1208 82 (set (reg:SF 813)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1208 1673 1199 82 (set (reg:SF 16 s0)
        (reg:SF 215 [ _135 ])) "../System/ray_funkcije.c":524:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 215 [ _135 ])
        (nil)))
(insn 1199 1208 1780 82 (set (reg:SF 216 [ _136 ])
        (reg:SF 813)) "../System/ray_funkcije.c":520:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 813)
        (nil)))
(insn 1780 1199 1781 82 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 216 [ _136 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":523:13 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1781 1780 1592 82 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":523:13 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(insn 1592 1781 1206 82 (set (reg/v:SI 253 [ fCheckX ])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":523:13 986 {*thumb2_movsicc_insn}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (nil)))
(debug_insn 1206 1592 1207 82 (var_location:SI fCheckX (reg/v:SI 253 [ fCheckX ])) -1
     (nil))
(debug_insn 1207 1206 1209 82 (debug_marker) "../System/ray_funkcije.c":524:4 -1
     (nil))
(call_insn/u 1209 1207 1674 82 (parallel [
            (set (reg:SF 16 s0)
                (call (mem:SI (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>) [0 __builtin_sinf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":524:8 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("sinf") [flags 0x41]  <function_decl 0000000005b10400 sinf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SF (use (reg:SF 16 s0))
            (nil))))
(insn 1674 1209 1210 82 (set (reg:SF 814)
        (reg:SF 16 s0)) "../System/ray_funkcije.c":524:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 16 s0)
        (nil)))
(insn 1210 1674 1219 82 (set (reg:SF 217 [ _137 ])
        (reg:SF 814)) "../System/ray_funkcije.c":524:8 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 814)
        (nil)))
(insn 1219 1210 1223 82 (set (reg:SF 218 [ _138 ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])) "../System/ray_funkcije.c":528:35 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1223 1219 1782 82 (set (reg:SF 221 [ _141 ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])) "../System/ray_funkcije.c":529:36 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1782 1223 1783 82 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 217 [ _137 ])
            (const_double:SF 0.0 [0x0.0p+0]))) "../System/ray_funkcije.c":527:13 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1783 1782 1220 82 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":527:13 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(insn 1220 1783 1228 82 (set (reg:SI 219 [ _139 ])
        (fix:SI (fix:SF (reg:SF 218 [ _138 ])))) "../System/ray_funkcije.c":528:19 805 {*truncsisf2_vfp}
     (nil))
(insn 1228 1220 1224 82 (set (reg:SI 686)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":528:38 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 1224 1228 1839 82 (set (reg:SI 222 [ _142 ])
        (fix:SI (fix:SF (reg:SF 221 [ _141 ])))) "../System/ray_funkcije.c":529:20 805 {*truncsisf2_vfp}
     (nil))
(debug_insn 1839 1224 1234 82 (var_location:SI D#57 (reg/v:SI 253 [ fCheckX ])) -1
     (nil))
(insn 1234 1839 1229 82 (set (reg:SI 690)
        (plus:SI (reg:SI 222 [ _142 ])
            (reg/v:SI 253 [ fCheckX ]))) "../System/ray_funkcije.c":529:39 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 253 [ fCheckX ])
        (nil)))
(insn 1229 1234 1236 82 (parallel [
            (set (reg:SI 685)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 219 [ _139 ]))
                            (sign_extend:DI (reg:SI 686)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":528:38 71 {*smull_high}
     (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 219 [ _139 ]))
                    (const_int 1717986919 [0x66666667]))
                (const_int 32 [0x20])))
        (nil)))
(insn 1236 1229 1238 82 (parallel [
            (set (reg:SI 692)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 690))
                            (sign_extend:DI (reg:SI 686)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":529:50 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 686)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 690))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 1238 1236 1239 82 (set (reg:SI 695)
        (ashiftrt:SI (reg:SI 690)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":529:50 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 690)
        (nil)))
(insn 1239 1238 1240 82 (set (reg:SI 691)
        (minus:SI (ashiftrt:SI (reg:SI 692)
                (const_int 2 [0x2]))
            (reg:SI 695))) "../System/ray_funkcije.c":529:50 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 695)
        (expr_list:REG_DEAD (reg:SI 692)
            (nil))))
(insn 1240 1239 1231 82 (set (reg:SI 696)
        (zero_extend:SI (subreg:QI (reg:SI 691) 0))) "../System/ray_funkcije.c":530:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 691)
        (nil)))
(insn 1231 1240 1232 82 (set (reg:SI 688)
        (ashiftrt:SI (reg:SI 219 [ _139 ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":528:38 147 {*arm_shiftsi3}
     (nil))
(insn 1232 1231 1233 82 (set (reg:SI 684)
        (minus:SI (ashiftrt:SI (reg:SI 685)
                (const_int 2 [0x2]))
            (reg:SI 688))) "../System/ray_funkcije.c":528:38 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 688)
        (expr_list:REG_DEAD (reg:SI 685)
            (nil))))
(insn 1233 1232 1227 82 (set (reg:SI 689)
        (zero_extend:SI (subreg:QI (reg:SI 684) 0))) "../System/ray_funkcije.c":530:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 684)
        (nil)))
(insn 1227 1233 1241 82 (set (reg/f:SI 744)
        (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)) "../System/ray_funkcije.c":530:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("map") [flags 0xc0]  <var_decl 00000000059e4990 map>)
        (nil)))
(insn 1241 1227 1243 82 (set (reg:SI 698)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":530:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 1243 1241 1245 82 (set (reg:SI 699)
        (plus:SI (mult:SI (reg:SI 698)
                (reg:SI 689))
            (reg/f:SI 744))) "../System/ray_funkcije.c":530:17 57 {*mla}
     (expr_list:REG_DEAD (reg:SI 698)
        (expr_list:REG_DEAD (reg:SI 689)
            (nil))))
(insn 1245 1243 1599 82 (set (reg:SI 701 [ map[_206][_208] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 699)
                    (reg:SI 696)) [0 map[_206][_208]+0 S1 A8]))) "../System/ray_funkcije.c":530:7 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 699)
        (expr_list:REG_DEAD (reg:SI 696)
            (nil))))
(insn 1599 1245 1217 82 (set (reg/v:SI 254 [ fCheckY ])
        (if_then_else:SI (lt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (const_int -5 [0xfffffffffffffffb])
            (const_int 5 [0x5]))) "../System/ray_funkcije.c":527:13 986 {*thumb2_movsicc_insn}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (nil)))
(debug_insn 1217 1599 1218 82 (var_location:SI fCheckY (reg/v:SI 254 [ fCheckY ])) -1
     (nil))
(debug_insn 1218 1217 1221 82 (debug_marker) "../System/ray_funkcije.c":528:4 -1
     (nil))
(debug_insn 1221 1218 1222 82 (var_location:QI mapy (subreg:QI (div:SI (reg:SI 219 [ _139 ])
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":528:12 -1
     (nil))
(debug_insn 1222 1221 1225 82 (debug_marker) "../System/ray_funkcije.c":529:4 -1
     (nil))
(debug_insn 1225 1222 1226 82 (var_location:QI mapx (subreg:QI (div:SI (plus:SI (reg:SI 222 [ _142 ])
                (debug_expr:SI D#57))
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":529:12 -1
     (nil))
(debug_insn 1226 1225 1247 82 (debug_marker) "../System/ray_funkcije.c":530:4 -1
     (nil))
(jump_insn 1247 1226 1248 82 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 701 [ map[_206][_208] ])
                        (const_int 0 [0]))
                    (label_ref 1269)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":530:7 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 701 [ map[_206][_208] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1269)
(note 1248 1247 1259 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(note 1259 1248 1249 83 NOTE_INSN_DELETED)
(debug_insn 1249 1259 1250 83 (debug_marker) "../System/ray_funkcije.c":530:30 -1
     (nil))
(insn 1250 1249 1251 83 (set (reg:SF 0 r0)
        (reg:SF 216 [ _136 ])) "../System/ray_funkcije.c":530:52 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 216 [ _136 ])
        (nil)))
(call_insn/u 1251 1250 1253 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1253 1251 1255 83 (set (reg:DF 2 r2)
        (const_double:DF 4.00000000000000022204460492503130808472633361816e-1 [0x0.ccccccccccccdp-1])) "../System/ray_funkcije.c":530:50 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1255 1253 1675 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:50 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1675 1255 1256 83 (set (reg:DF 815)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":530:50 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1256 1675 1257 83 (set (reg:DF 703)
        (reg:DF 815)) "../System/ray_funkcije.c":530:50 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 815)
        (nil)))
(insn 1257 1256 1258 83 (set (reg:SF 0 r0)
        (reg:SF 221 [ _141 ])) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 221 [ _141 ])
        (nil)))
(call_insn/u 1258 1257 1676 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1676 1258 1260 83 (set (reg:DF 816)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":530:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1260 1676 1261 83 (set (reg:DF 2 r2)
        (reg:DF 816)) "../System/ray_funkcije.c":530:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 816)
        (nil)))
(insn 1261 1260 1262 83 (set (reg:DF 0 r0)
        (reg:DF 703)) "../System/ray_funkcije.c":530:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 703)
        (nil)))
(call_insn/u 1262 1261 1265 83 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1265 1262 1677 83 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":530:43 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1677 1265 1266 83 (set (reg:SF 817)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (nil)))
(insn 1266 1677 1267 83 (set (reg:SF 230 [ _150 ])
        (reg:SF 817)) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 817)
        (nil)))
(insn 1267 1266 1268 83 (set (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 8 [0x8])) [1 MEM[base: _419, offset: 8B]+0 S4 A32])
        (reg:SF 230 [ _150 ])) "../System/ray_funkcije.c":530:43 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1268 1267 1269 83 (set (reg:SI 222 [ _142 ])
        (fix:SI (fix:SF (reg:SF 230 [ _150 ])))) "../System/ray_funkcije.c":533:11 805 {*truncsisf2_vfp}
     (expr_list:REG_DEAD (reg:SF 230 [ _150 ])
        (nil)))
(code_label 1269 1268 1270 84 207 (nil) [1 uses])
(note 1270 1269 1280 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(note 1280 1270 1286 84 NOTE_INSN_DELETED)
(note 1286 1280 1291 84 NOTE_INSN_DELETED)
(note 1291 1286 1295 84 NOTE_INSN_DELETED)
(note 1295 1291 1271 84 NOTE_INSN_DELETED)
(debug_insn 1271 1295 1272 84 (debug_marker) "../System/ray_funkcije.c":532:4 -1
     (nil))
(debug_insn 1272 1271 1273 84 (var_location:QI mapy (subreg:QI (div:SI (plus:SI (reg:SI 219 [ _139 ])
                (reg/v:SI 254 [ fCheckY ]))
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":532:9 -1
     (nil))
(debug_insn 1273 1272 1274 84 (debug_marker) "../System/ray_funkcije.c":533:4 -1
     (nil))
(debug_insn 1274 1273 1275 84 (var_location:QI mapx (subreg:QI (div:SI (reg:SI 222 [ _142 ])
            (const_int 10 [0xa])) 0)) "../System/ray_funkcije.c":533:9 -1
     (nil))
(debug_insn 1275 1274 1277 84 (debug_marker) "../System/ray_funkcije.c":534:4 -1
     (nil))
(insn 1277 1275 1278 84 (set (reg:SI 707)
        (plus:SI (reg:SI 219 [ _139 ])
            (reg/v:SI 254 [ fCheckY ]))) "../System/ray_funkcije.c":532:31 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg/v:SI 254 [ fCheckY ])
        (expr_list:REG_DEAD (reg:SI 219 [ _139 ])
            (nil))))
(insn 1278 1277 1281 84 (set (reg:SI 710)
        (const_int 1717986919 [0x66666667])) "../System/ray_funkcije.c":532:42 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 1717986919 [0x66666667])
        (nil)))
(insn 1281 1278 1279 84 (set (reg:SI 712)
        (ashiftrt:SI (reg:SI 707)
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":532:42 147 {*arm_shiftsi3}
     (nil))
(insn 1279 1281 1282 84 (parallel [
            (set (reg:SI 709)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 707))
                            (sign_extend:DI (reg:SI 710)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":532:42 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 707)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 707))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 1282 1279 1285 84 (set (reg:SI 708)
        (minus:SI (ashiftrt:SI (reg:SI 709)
                (const_int 2 [0x2]))
            (reg:SI 712))) "../System/ray_funkcije.c":532:42 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 712)
        (expr_list:REG_DEAD (reg:SI 709)
            (nil))))
(insn 1285 1282 1287 84 (parallel [
            (set (reg:SI 715)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 222 [ _142 ]))
                            (sign_extend:DI (reg:SI 710)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) "../System/ray_funkcije.c":533:30 71 {*smull_high}
     (expr_list:REG_DEAD (reg:SI 710)
        (expr_list:REG_EQUAL (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 222 [ _142 ]))
                        (const_int 1717986919 [0x66666667]))
                    (const_int 32 [0x20])))
            (nil))))
(insn 1287 1285 1288 84 (set (reg:SI 718)
        (ashiftrt:SI (reg:SI 222 [ _142 ])
            (const_int 31 [0x1f]))) "../System/ray_funkcije.c":533:30 147 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 222 [ _142 ])
        (nil)))
(insn 1288 1287 1283 84 (set (reg:SI 714)
        (minus:SI (ashiftrt:SI (reg:SI 715)
                (const_int 2 [0x2]))
            (reg:SI 718))) "../System/ray_funkcije.c":533:30 319 {*rsb_shiftsi}
     (expr_list:REG_DEAD (reg:SI 718)
        (expr_list:REG_DEAD (reg:SI 715)
            (nil))))
(insn 1283 1288 1289 84 (set (reg:SI 713)
        (zero_extend:SI (subreg:QI (reg:SI 708) 0))) "../System/ray_funkcije.c":534:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 708)
        (nil)))
(insn 1289 1283 1290 84 (set (reg:SI 719)
        (zero_extend:SI (subreg:QI (reg:SI 714) 0))) "../System/ray_funkcije.c":534:17 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 714)
        (nil)))
(insn 1290 1289 1292 84 (set (reg:SI 721)
        (const_int 50 [0x32])) "../System/ray_funkcije.c":534:17 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 50 [0x32])
        (nil)))
(insn 1292 1290 1294 84 (set (reg:SI 722)
        (plus:SI (mult:SI (reg:SI 721)
                (reg:SI 713))
            (reg/f:SI 744))) "../System/ray_funkcije.c":534:17 57 {*mla}
     (expr_list:REG_DEAD (reg/f:SI 744)
        (expr_list:REG_DEAD (reg:SI 721)
            (expr_list:REG_DEAD (reg:SI 713)
                (nil)))))
(insn 1294 1292 1296 84 (set (reg:SI 724 [ map[_209][_210] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 722)
                    (reg:SI 719)) [0 map[_209][_210]+0 S1 A8]))) "../System/ray_funkcije.c":534:7 1006 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg:SI 722)
        (expr_list:REG_DEAD (reg:SI 719)
            (nil))))
(jump_insn 1296 1294 1297 84 (parallel [
            (set (pc)
                (if_then_else (ne (reg:SI 724 [ map[_209][_210] ])
                        (const_int 0 [0]))
                    (label_ref:SI 1317)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":534:7 1025 {*thumb2_cbnz}
     (expr_list:REG_DEAD (reg:SI 724 [ map[_209][_210] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1317)
(note 1297 1296 1308 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(note 1308 1297 1315 85 NOTE_INSN_DELETED)
(note 1315 1308 1298 85 NOTE_INSN_DELETED)
(debug_insn 1298 1315 1299 85 (debug_marker) "../System/ray_funkcije.c":534:30 -1
     (nil))
(insn 1299 1298 1300 85 (set (reg:SF 0 r0)
        (reg:SF 217 [ _137 ])) "../System/ray_funkcije.c":534:52 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 217 [ _137 ])
        (nil)))
(call_insn/u 1300 1299 1302 85 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:52 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1302 1300 1304 85 (set (reg:DF 2 r2)
        (const_double:DF 4.00000000000000022204460492503130808472633361816e-1 [0x0.ccccccccccccdp-1])) "../System/ray_funkcije.c":534:50 739 {*thumb2_movdf_vfp}
     (nil))
(call_insn/u 1304 1302 1678 85 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:50 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dmul") [flags 0x41]  <function_decl 0000000005c75500 __aeabi_dmul>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 1678 1304 1305 85 (set (reg:DF 818)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":534:50 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1305 1678 1306 85 (set (reg:DF 726)
        (reg:DF 818)) "../System/ray_funkcije.c":534:50 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 818)
        (nil)))
(insn 1306 1305 1307 85 (set (reg:SF 0 r0)
        (reg:SF 218 [ _138 ])) "../System/ray_funkcije.c":534:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 218 [ _138 ])
        (nil)))
(call_insn/u 1307 1306 1679 85 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_f2d") [flags 0x41]  <function_decl 0000000005c78200 __aeabi_f2d>)
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 1679 1307 1309 85 (set (reg:DF 819)
        (reg:DF 0 r0)) "../System/ray_funkcije.c":534:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 0 r0)
        (nil)))
(insn 1309 1679 1310 85 (set (reg:DF 2 r2)
        (reg:DF 819)) "../System/ray_funkcije.c":534:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 819)
        (nil)))
(insn 1310 1309 1311 85 (set (reg:DF 0 r0)
        (reg:DF 726)) "../System/ray_funkcije.c":534:43 739 {*thumb2_movdf_vfp}
     (expr_list:REG_DEAD (reg:DF 726)
        (nil)))
(call_insn/u 1311 1310 1314 85 (parallel [
            (set (reg:DF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 2 r2)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_dadd") [flags 0x41]  <function_decl 0000000005c75300 __aeabi_dadd>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(call_insn/u 1314 1311 1680 85 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":534:43 291 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]  <function_decl 0000000005c78100 __aeabi_d2f>)
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 1680 1314 1316 85 (set (reg:SF 820)
        (reg:SF 0 r0)) "../System/ray_funkcije.c":534:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 0 r0)
        (expr_list:REG_EQUIV (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])
            (nil))))
(insn 1316 1680 1317 85 (set (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 12 [0xc])) [1 MEM[base: _419, offset: 12B]+0 S4 A32])
        (reg:SF 820)) "../System/ray_funkcije.c":534:43 737 {*thumb2_movsf_vfp}
     (expr_list:REG_DEAD (reg:SF 820)
        (nil)))
(code_label 1317 1316 1318 86 202 (nil) [3 uses])
(note 1318 1317 1319 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1319 1318 1321 86 (debug_marker) "../System/ray_funkcije.c":538:3 -1
     (nil))
(insn 1321 1319 1777 86 (set (reg:SF 731)
        (const_double:SF 5.0e+0 [0x0.ap+3])) "../System/ray_funkcije.c":538:6 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUIV (const_double:SF 5.0e+0 [0x0.ap+3])
        (nil)))
(insn 1777 1321 1778 86 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
            (reg:SF 731))) "../System/ray_funkcije.c":538:6 828 {*cmpsf_trap_vfp}
     (expr_list:REG_DEAD (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (expr_list:REG_DEAD (reg:SF 731)
            (nil))))
(insn 1778 1777 1323 86 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":538:6 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1323 1778 1327 86 (set (pc)
        (if_then_else (ungt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1340)
            (pc))) "../System/ray_funkcije.c":538:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 536870916 (nil)))
 -> 1340)
(note 1327 1323 1329 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(note 1329 1327 1328 87 NOTE_INSN_DELETED)
(insn 1328 1329 1330 87 (set (reg:SI 732 [ MEM[base: _419, offset: 24B] ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 24 [0x18])) [0 MEM[base: _419, offset: 24B]+0 S1 A32]))) "../System/ray_funkcije.c":538:28 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 1330 1328 1331 87 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 732 [ MEM[base: _419, offset: 24B] ])
                        (const_int 0 [0]))
                    (label_ref:SI 1340)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":538:28 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg:SI 732 [ MEM[base: _419, offset: 24B] ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 1014686028 (nil))))
 -> 1340)
(note 1331 1330 1332 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1332 1331 1333 88 (debug_marker) "../System/ray_funkcije.c":539:4 -1
     (nil))
(insn 1333 1332 1334 88 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":539:4 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1334 1333 1335 88 (parallel [
            (call (mem:SI (symbol_ref:SI ("play_sound") [flags 0x41]  <function_decl 0000000005e52500 play_sound>) [0 play_sound S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":539:4 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("play_sound") [flags 0x41]  <function_decl 0000000005e52500 play_sound>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1335 1334 1336 88 (debug_marker) "../System/ray_funkcije.c":540:4 -1
     (nil))
(call_insn 1336 1335 1337 88 (parallel [
            (call (mem:SI (symbol_ref:SI ("reset") [flags 0x41]  <function_decl 0000000005e4c100 reset>) [0 reset S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":540:4 290 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("reset") [flags 0x41]  <function_decl 0000000005e4c100 reset>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(debug_insn 1337 1336 1338 88 (debug_marker) "../System/ray_funkcije.c":541:4 -1
     (nil))
(call_insn/j 1338 1337 1339 88 (parallel [
            (call (mem:SI (symbol_ref:SI ("init") [flags 0x41]  <function_decl 0000000005e4cd00 init>) [0 init S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":541:4 292 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:SI ("init") [flags 0x41]  <function_decl 0000000005e4cd00 init>)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(barrier 1339 1338 1340)
(code_label 1340 1339 1341 89 208 (nil) [2 uses])
(note 1341 1340 1342 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1342 1341 1343 89 (debug_marker) "../System/ray_funkcije.c":544:3 -1
     (nil))
(insn 1343 1342 1346 89 (set (reg:SI 242 [ _164 ])
        (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])) "../System/ray_funkcije.c":544:16 728 {*thumb2_movsi_vfp}
     (nil))
(insn 1346 1343 1347 89 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 242 [ _164 ])
            (const_int 0 [0]))) "../System/ray_funkcije.c":544:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1347 1346 1348 89 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1352)
            (pc))) "../System/ray_funkcije.c":544:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 440234148 (nil)))
 -> 1352)
(note 1348 1347 1349 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1349 1348 1350 90 (debug_marker) "../System/ray_funkcije.c":544:35 -1
     (nil))
(insn 1350 1349 1351 90 (set (reg:SI 733)
        (plus:SI (reg:SI 242 [ _164 ])
            (const_int -1 [0xffffffffffffffff]))) "../System/ray_funkcije.c":544:58 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 242 [ _164 ])
        (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                    (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
            (nil))))
(insn 1351 1350 1352 90 (set (mem:SI (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 28 [0x1c])) [3 MEM[base: _419, offset: 28B]+0 S4 A32])
        (reg:SI 733)) "../System/ray_funkcije.c":544:58 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 733)
        (nil)))
(code_label 1352 1351 1353 91 210 (nil) [1 uses])
(note 1353 1352 1354 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1354 1353 1355 91 (debug_marker) "../System/ray_funkcije.c":400:47 -1
     (nil))
(insn 1355 1354 1356 91 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (plus:SI (reg/v:SI 824 [orig:282 sprite ] [282])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":400:53 7 {*arm_addsi3}
     (nil))
(debug_insn 1356 1355 1357 91 (var_location:SI sprite (reg/v:SI 824 [orig:282 sprite ] [282])) -1
     (nil))
(debug_insn 1357 1356 1358 91 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1358 1357 1359 91 (debug_marker) "../System/ray_funkcije.c":400:23 -1
     (nil))
(insn 1359 1358 1360 91 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
            (const_int 444 [0x1bc]))) "../System/ray_funkcije.c":400:2 7 {*arm_addsi3}
     (nil))
(insn 1360 1359 1361 91 (set (reg:CC 100 cc)
        (compare:CC (reg/v:SI 824 [orig:282 sprite ] [282])
            (const_int 4 [0x4]))) "../System/ray_funkcije.c":400:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1361 1360 1362 91 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) "../System/ray_funkcije.c":400:2 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 276026180 (nil)))
 -> 1370)
(note 1362 1361 1364 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1364 1362 1366 92 (set (reg:SF 300 [ pretmp_423 ])
        (mem/c:SF (reg/f:SI 746) [1 py+0 S4 A32])) "../System/ray_funkcije.c":412:28 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("py") [flags 0xc0]  <var_decl 00000000059e4360 py>) [1 py+0 S4 A32])
        (nil)))
(insn 1366 1364 1763 92 (set (reg:SF 301 [ pretmp_425 ])
        (mem/c:SF (reg/f:SI 745) [1 px+0 S4 A32])) "../System/ray_funkcije.c":412:40 737 {*thumb2_movsf_vfp}
     (expr_list:REG_EQUAL (mem/c:SF (symbol_ref:SI ("px") [flags 0xc0]  <var_decl 00000000059e42d0 px>) [1 px+0 S4 A32])
        (nil)))
(jump_insn 1763 1366 1764 92 (set (pc)
        (label_ref 1367)) 284 {*arm_jump}
     (nil)
 -> 1367)
(barrier 1764 1763 1370)
(code_label 1370 1764 1371 93 211 (nil) [1 uses])
(note 1371 1370 1373 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(note 1373 1371 1372 93 NOTE_INSN_DELETED)
(debug_insn 1372 1373 1374 93 (debug_marker) "../System/ray_funkcije.c":546:2 -1
     (nil))
(jump_insn 1374 1372 1375 93 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:SI 245 [ indicate_led ])
                        (const_int 0 [0]))
                    (label_ref 1383)
                    (pc)))
            (clobber (reg:CC 100 cc))
        ]) "../System/ray_funkcije.c":546:4 1024 {*thumb2_cbz}
     (expr_list:REG_DEAD (reg/v:SI 245 [ indicate_led ])
        (expr_list:REG_UNUSED (reg:CC 100 cc)
            (int_list:REG_BR_PROB 536870916 (nil))))
 -> 1383)
(note 1375 1374 1376 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1376 1375 1377 94 (debug_marker) "../System/ray_funkcije.c":547:3 -1
     (nil))
(insn 1377 1376 1378 94 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":547:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1378 1377 1379 94 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":547:3 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1379 1378 1380 94 (debug_marker) "../System/ray_funkcije.c":548:3 -1
     (nil))
(insn 1380 1379 1381 94 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":548:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1381 1380 1382 94 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>) [0 LED_on S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":548:3 292 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_on") [flags 0x41]  <function_decl 0000000006cc2900 LED_on>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(barrier 1382 1381 1383)
(code_label 1383 1382 1384 95 213 (nil) [1 uses])
(note 1384 1383 1385 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1385 1384 1386 95 (debug_marker) "../System/ray_funkcije.c":550:3 -1
     (nil))
(insn 1386 1385 1387 95 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../System/ray_funkcije.c":550:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn 1387 1386 1388 95 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>) [0 LED_off S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../System/ray_funkcije.c":550:3 290 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(debug_insn 1388 1387 1389 95 (debug_marker) "../System/ray_funkcije.c":551:3 -1
     (nil))
(insn 1389 1388 1390 95 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../System/ray_funkcije.c":551:3 728 {*thumb2_movsi_vfp}
     (nil))
(call_insn/j 1390 1389 1391 95 (parallel [
            (call (mem:SI (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>) [0 LED_off S4 A32])
                (const_int 0 [0]))
            (return)
            (use (const_int 0 [0]))
        ]) "../System/ray_funkcije.c":551:3 292 {*sibcall_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_CALL_DECL (symbol_ref:SI ("LED_off") [flags 0x41]  <function_decl 0000000006cc2a00 LED_off>)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(barrier 1391 1390 1396)
(code_label 1396 1391 1397 96 176 (nil) [1 uses])
(note 1397 1396 1398 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1398 1397 1399 96 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 1399 1398 1400 96 (set (reg:SI 736)
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1400 1399 1401 96 (set (mem:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 736)) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 736)
        (nil)))
(debug_insn 1401 1400 1402 96 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1402 1401 1765 96 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(jump_insn 1765 1402 1766 96 (set (pc)
        (label_ref 807)) 284 {*arm_jump}
     (nil)
 -> 807)
(barrier 1766 1765 1405)
(code_label 1405 1766 1406 97 175 (nil) [1 uses])
(note 1406 1405 1407 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1407 1406 1565 97 (debug_marker) "../System/ray_funkcije.c":465:5 -1
     (nil))
(insn 1565 1407 1408 97 (set (reg:SF 738 [ MEM[base: _419, offset: 36B] ])
        (mem:SF (plus:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306])
                (const_int 36 [0x24])) [1 MEM[base: _419, offset: 36B]+0 S4 A32])) 737 {*thumb2_movsf_vfp}
     (nil))
(insn 1408 1565 1409 97 (set (reg:SI 737)
        (const_int 0 [0])) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 1409 1408 1410 97 (set (mem:SI (reg:SI 825 [orig:306 ivtmp.180 ] [306]) [3 MEM[base: _419, offset: 0B]+0 S4 A32])
        (reg:SI 737)) "../System/ray_funkcije.c":465:20 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 737)
        (nil)))
(debug_insn 1410 1409 1411 97 (var_location:QI indicate_led (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1411 1410 1767 97 (debug_marker) "../System/ray_funkcije.c":467:4 -1
     (nil))
(jump_insn 1767 1411 1768 97 (set (pc)
        (label_ref 1161)) 284 {*arm_jump}
     (nil)
 -> 1161)
(barrier 1768 1767 1751)
(code_label 1751 1768 1415 98 250 (nil) [1 uses])
(note 1415 1751 1416 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1416 1415 1420 98 (debug_marker) "../System/ray_funkcije.c":500:6 -1
     (nil))
(insn 1420 1416 1424 98 (set (reg/v:SF 297 [ y ])
        (plus:SF (reg/v:SF 297 [ y ])
            (reg:SF 302 [ _440 ]))) "../System/ray_funkcije.c":473:47 758 {*addsf3_vfp}
     (nil))
(insn 1424 1420 1417 98 (set (reg:SF 741 [ _193 ])
        (float:SF (reg:SI 838 [orig:304 prephitmp_453 ] [304]))) "../System/ray_funkcije.c":473:25 809 {*floatsisf2_vfp}
     (nil))
(insn 1417 1424 1418 98 (set (reg/v:SI 837 [orig:293 county ] [293])
        (plus:SI (reg/v:SI 837 [orig:293 county ] [293])
            (const_int 1 [0x1]))) "../System/ray_funkcije.c":500:12 7 {*arm_addsi3}
     (nil))
(debug_insn 1418 1417 1419 98 (var_location:SI county (reg/v:SI 837 [orig:293 county ] [293])) "../System/ray_funkcije.c":500:12 -1
     (nil))
(debug_insn 1419 1418 1421 98 (debug_marker) "../System/ray_funkcije.c":473:45 -1
     (nil))
(debug_insn 1421 1419 1422 98 (var_location:SF y (reg/v:SF 297 [ y ])) -1
     (nil))
(debug_insn 1422 1421 1423 98 (var_location:SI county (reg/v:SI 837 [orig:293 county ] [293])) -1
     (nil))
(debug_insn 1423 1422 1775 98 (debug_marker) "../System/ray_funkcije.c":473:23 -1
     (nil))
(insn 1775 1423 1776 98 (set (reg:CCFPE 101 vfpcc)
        (compare:CCFPE (reg:SF 741 [ _193 ])
            (reg/v:SF 297 [ y ]))) "../System/ray_funkcije.c":473:5 828 {*cmpsf_trap_vfp}
     (nil))
(insn 1776 1775 1426 98 (set (reg:CCFPE 100 cc)
        (reg:CCFPE 101 vfpcc)) "../System/ray_funkcije.c":473:5 817 {*movcc_vfp}
     (expr_list:REG_DEAD (reg:CCFPE 101 vfpcc)
        (nil)))
(jump_insn 1426 1776 1769 98 (set (pc)
        (if_then_else (gt (reg:CCFPE 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1039)
            (pc))) "../System/ray_funkcije.c":473:5 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CCFPE 100 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 1039)
(note 1769 1426 1893 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1893 1769 1894 99 (set (reg/v:SI 824 [orig:282 sprite ] [282])
        (reg/v:SI 836 [orig:282 sprite ] [282])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg/v:SI 836 [orig:282 sprite ] [282])
        (nil)))
(insn 1894 1893 1895 99 (set (reg:SI 825 [orig:306 ivtmp.180 ] [306])
        (reg:SI 839 [orig:306 ivtmp.180 ] [306])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 839 [orig:306 ivtmp.180 ] [306])
        (nil)))
(insn 1895 1894 1770 99 (set (reg:SI 319 [ prephitmp_491 ])
        (reg:SI 840 [orig:319 prephitmp_491 ] [319])) 728 {*thumb2_movsi_vfp}
     (expr_list:REG_DEAD (reg:SI 840 [orig:319 prephitmp_491 ] [319])
        (nil)))
(jump_insn 1770 1895 1771 99 (set (pc)
        (label_ref 1070)) 284 {*arm_jump}
     (nil)
 -> 1070)
(barrier 1771 1770 1430)
(code_label 1430 1771 1431 100 182 (nil) [1 uses])
(note 1431 1430 1432 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1432 1431 1435 100 (debug_marker) "../System/ray_funkcije.c":484:8 -1
     (nil))
(insn 1435 1432 1436 100 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 847 [orig:319 prephitmp_491 ] [319])
            (const_int 0 [0]))) "../System/ray_funkcije.c":484:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 1436 1435 1772 100 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 1480)
            (pc))) "../System/ray_funkcije.c":484:11 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (int_list:REG_BR_PROB 633507684 (nil)))
 -> 1480)
(note 1772 1436 1773 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1773 1772 1774 101 (set (pc)
        (label_ref 1437)) 284 {*arm_jump}
     (nil)
 -> 1437)
(barrier 1774 1773 0)
